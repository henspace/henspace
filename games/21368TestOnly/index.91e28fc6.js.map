{"mappings":"IQmCI,EuCAA,EACA,EDEA,EAEA,EAEA,EAEA,EAKA,ED6lBA,ELnmBA,EJuSA,EAGA,EjC/RA,E,S,E,C,E,O,G,E,U,C,E,O,C,C,CFjDJ;;;;CAIC,ECoBD,IAAI,EAAW,EAAE,CAGjB,OAAO,gBAAgB,CAAC,QAAS,AAAC,IAChC,MACE,CAAC,OAAO,EAAE,EAAM,QAAQ,CAAC,OAAO,EAAE,EAAM,MAAM,CAAC;AAAE,EAAE,EAAM,OAAO,CAAC;;AAAW,EAAE,EAAM,KAAK,CAAC,KAAK,CAAC,CAAC,CAErG,GA8DA,IAAA,EARY,CACV,IAjDF,SAAoB,GAAG,CAAI,EACzB,QAAQ,GAAG,IAAI,EACjB,EAgDE,KA1CF,SAAiB,GAAG,CAAI,EACtB,QAAQ,KAAK,IAAI,EACnB,EAyCE,MAnCF,SAAkB,GAAG,CAAI,EACvB,QAAQ,KAAK,IAAI,EACnB,EAkCE,MA5BF,SAAkB,GAAG,CAAI,EACvB,QAAQ,KAAK,IAAI,GACjB,EAAW,EAAS,MAAM,CAAC,EAC7B,EA0BE,MApBF,SAAkB,CAAK,MAEjB,EADJ,QAAQ,KAAK,CAAC,GAGZ,EADE,EAAM,OAAO,CACL,CAAC,EAAE,EAAM,OAAO,CAAC;;AAAU,EAAE,EAAM,KAAK,CAAC,CAAC,CAE1C,EAEZ,MAAM,CAAC,aAAa,EAAE,EAAQ;;AAAoB,EAAE,EAAS,IAAI,CAAC,MAAM,CAAC,EACzE,EAAS,IAAI,CAAC,EAChB,CAWA,EGzDA,MAAM,EAAe,4BAYf,EAAW,CACf,OAAQ,CAAE,KAAM,GAAI,SAdF,2BAcwB,EAC1C,GAAI,CAAE,KAAM,GAAI,SAAU,CAAa,EACvC,GAAI,CAAE,KAAM,GAAI,SAAU,CAAa,EACvC,GAAI,CAAE,KAAM,GAAI,SAAU,CAAa,EACvC,YAAa,CAAE,KAAM,GAAI,SAhBD,2BAgB6B,CACvD,EAqBO,SAAS,EAAO,CAAS,EAC9B,IAAM,EAAO,CAAQ,CAAC,EAAU,EAAI,EAAS,MAAS,CACtD,MAAO,CAAC,EAAE,EAAK,IAAI,CAAC,GAAG,EAAE,EAAK,QAAQ,CAAC,CAAC,AAC1C,CEjDA,MAAM,EAAU,CACd,SAAU,EAAK,EAAK,KAAK,EAAE,CAC3B,OAAQ,EAAK,EAAK,KAAK,EAAE,CACzB,SAAU,EAAK,EAAK,KAAK,EAAE,CAE3B,UAAW,EAAK,EAAK,KAAK,EAAE,CAC5B,QAAS,EAAK,EAAK,KAAK,EAAE,CAC1B,UAAW,EAAK,EAAK,KAAK,EAAE,AAE9B,EASO,SAAS,EAAK,CAAK,CAAE,CAAG,CAAE,CAAG,SAClC,AAAI,EAAQ,EACH,EACE,EAAQ,EACV,EAEF,CACT,CAKO,MAAM,EAAoB,CAC/B,KAAM,GACN,EAAG,EACH,GAAI,EACJ,EAAG,EACH,GAAI,EACJ,EAAG,EACH,GAAI,EACJ,EAAG,EACH,GAAI,CACN,EAyDO,SAAS,EAAa,CAAG,CAAE,CAAG,EACnC,IAAM,EAAY,KAAK,IAAI,CAAC,GAE5B,OAAO,KAAK,KAAK,CAAC,KAAK,MAAM,GAAM,CAAA,AADhB,KAAK,KAAK,CAAC,GACkB,EAAY,CAAA,EAAK,EACnE,CAOO,SAAS,EAAsB,CAAG,CAAE,CAAG,EAC5C,IAAM,EAAY,KAAK,IAAI,CAAC,GAE5B,OAAO,KAAK,KAAK,CAAC,KAAK,MAAM,GAAM,CAAA,AADhB,KAAK,KAAK,CAAC,GACkB,EAAY,CAAA,EAAK,EACnE,CDvGO,MAAM,EAEX,CAAE,AAEF,CAAA,CAAE,AAOF,aAAY,CAAC,CAAE,CAAC,CAAE,CAChB,IAAI,CAAC,CAAC,CAAG,EACT,IAAI,CAAC,CAAC,CAAG,CACX,CAOA,OAAO,KAAK,CAAK,CAAE,CACjB,OAAO,IAAI,EAAM,EAAM,CAAC,CAAE,EAAM,CAAC,CACnC,CAMA,WAAW,CAAK,CAAE,CAChB,OAAO,IAAI,CAAC,CAAC,GAAK,EAAM,CAAC,EAAI,IAAI,CAAC,CAAC,GAAK,EAAM,CAAC,AACjD,CAOA,oBAAoB,CAAS,CAAE,CAC7B,OAAO,KAAK,KAAK,CAAC,EAAU,CAAC,CAAG,IAAI,CAAC,CAAC,CAAE,EAAU,CAAC,CAAG,IAAI,CAAC,CAAC,CAC9D,CAOA,iBAAiB,CAAS,CAAE,CAC1B,OAAO,KAAK,KAAK,CAAC,IAAI,CAAC,CAAC,CAAG,EAAU,CAAC,CAAE,EAAU,CAAC,CAAG,IAAI,CAAC,CAAC,CAC9D,CAMA,UAAW,CACT,MAAO,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,AAChC,CAQA,aAAa,CAAQ,CAAE,CACrB,OACE,KAAK,KAAK,CAAC,IAAI,CAAC,CAAC,IAAM,KAAK,KAAK,CAAC,EAAS,CAAC,GAC5C,KAAK,KAAK,CAAC,IAAI,CAAC,CAAC,IAAM,KAAK,KAAK,CAAC,EAAS,CAAC,CAEhD,CAQA,aAAa,CAAK,CAAE,CAAQ,CAAE,CAG5B,OAAO,KAAK,GAAG,CAFJ,IAAI,CAAC,CAAC,CAAG,EAAM,CAAC,CAEP,GAAK,KAAK,GAAG,CADtB,IAAI,CAAC,CAAC,CAAG,EAAM,CAAC,CACW,IAAM,KAAK,GAAG,CAAC,EAAU,EACjE,CACF,CAIO,MAAM,EAEX,CAAE,AAEF,CAAA,CAAE,AAEF,CAAA,QAAS,AAQT,aAAY,CAAI,CAAE,CAAI,CAAE,CAAM,CAAE,CAC9B,IAAI,CAAC,CAAC,CAAG,EACT,IAAI,CAAC,CAAC,CAAG,EACT,IAAI,CAAC,QAAQ,CAAG,CAClB,CAOA,uBAAwB,CACtB,OAAO,KAAK,KAAK,CAAC,IAAI,CAAC,CAAC,CAAE,IAAI,CAAC,CAAC,CAClC,CAMA,oBAAqB,CACnB,OAAO,KAAK,KAAK,CAAC,CAAC,IAAI,CAAC,CAAC,CAAE,IAAI,CAAC,CAAC,CACnC,CAOA,OAAO,CAAS,CAAE,CAChB,OCPK,KAAK,GAAG,CDQO,IAAI,CAAC,CAAC,EAAE,GCRvB,KAAK,GAAG,CDSO,IAAI,CAAC,CAAC,EAAE,CAE9B,CACF,CAMO,MAAM,UAAiB,EAE5B,QAAS,AAQT,aAAY,CAAC,CAAE,CAAC,CAAE,CAAQ,CAAE,CAC1B,KAAK,CAAC,EAAG,GACT,IAAI,CAAC,CAAC,CAAG,EACT,IAAI,CAAC,QAAQ,CAAG,CAClB,CAOA,OAAO,UAAU,CAAK,CAAE,CACtB,OAAO,IAAI,EAAS,EAAM,CAAC,CAAE,EAAM,CAAC,CAAE,EACxC,CAMA,OAAO,KAAK,CAAQ,CAAE,CACpB,OAAO,IAAI,EAAS,EAAS,CAAC,CAAE,EAAS,CAAC,CAAE,EAAS,QAAQ,CAC/D,CAMA,cAAc,CAAM,CAAE,CACpB,OAAO,IAAI,EACT,IAAI,CAAC,CAAC,CAAG,EAAO,CAAC,CACjB,IAAI,CAAC,CAAC,CAAG,EAAO,CAAC,CACjB,IAAI,CAAC,QAAQ,CAAG,EAAO,QAAQ,CAEnC,CAQA,aAAa,CAAS,CAAE,CAAM,CAAE,CAC9B,OACE,KAAK,GAAG,CAAC,EAAU,CAAC,CAAG,IAAI,CAAC,CAAC,EAAI,GACjC,KAAK,GAAG,CAAC,EAAU,CAAC,CAAG,IAAI,CAAC,CAAC,EAAI,CAErC,CACF,CAeO,MAAM,EAEX,CAAE,AAEF,CAAA,CAAE,AAEF,CAAA,KAAM,AAEN,CAAA,MAAO,AASP,aAAY,CAAC,CAAE,CAAC,CAAE,CAAK,CAAE,CAAM,CAAE,CAC/B,IAAI,CAAC,CAAC,CAAG,EACT,IAAI,CAAC,CAAC,CAAG,EACT,IAAI,CAAC,KAAK,CAAG,EACb,IAAI,CAAC,MAAM,CAAG,CAChB,CAKA,gBAAiB,CACf,OAAO,IAAI,EAAM,IAAI,CAAC,CAAC,CAAG,IAAI,CAAC,KAAK,CAAE,IAAI,CAAC,CAAC,CAAG,IAAI,CAAC,MAAM,CAC5D,CAKA,YAAa,CACX,OAAO,IAAI,EAAM,IAAI,CAAC,CAAC,CAAE,IAAI,CAAC,CAAC,CACjC,CAMA,SAAS,CAAS,CAAE,CAClB,IAAM,EAAO,IAAI,CAAC,cAAc,GAC1B,EAAc,EAAU,cAAc,GAM5C,MAAO,CAJL,CAAA,EAAU,CAAC,CAAG,EAAK,CAAC,EACpB,EAAU,CAAC,CAAG,EAAK,CAAC,EACpB,EAAY,CAAC,CAAG,IAAI,CAAC,CAAC,EACtB,EAAY,CAAC,CAAG,IAAI,CAAC,CAAC,AAAD,CAEzB,CAOA,cAAc,CAAK,CAAE,CACnB,OACE,EAAM,CAAC,EAAI,IAAI,CAAC,CAAC,EACjB,EAAM,CAAC,EAAI,IAAI,CAAC,CAAC,CAAG,IAAI,CAAC,KAAK,EAC9B,EAAM,CAAC,EAAI,IAAI,CAAC,CAAC,EACjB,EAAM,CAAC,EAAI,IAAI,CAAC,CAAC,CAAG,IAAI,CAAC,MAAM,AAEnC,CAOA,mBAAmB,CAAC,CAAE,CAAC,CAAE,CACvB,OACE,GAAK,IAAI,CAAC,CAAC,EACX,GAAK,IAAI,CAAC,CAAC,CAAG,IAAI,CAAC,KAAK,EACxB,GAAK,IAAI,CAAC,CAAC,EACX,GAAK,IAAI,CAAC,CAAC,CAAG,IAAI,CAAC,MAAM,AAE7B,CAMA,OAAO,CAAK,CAAE,CACZ,OACE,IAAI,CAAC,CAAC,GAAK,EAAM,CAAC,EAClB,IAAI,CAAC,CAAC,GAAK,EAAM,CAAC,EAClB,IAAI,CAAC,KAAK,GAAK,EAAM,KAAK,EAC1B,IAAI,CAAC,MAAM,GAAK,EAAM,MAAM,AAEhC,CACF,CAGyB,IAAI,EAAM,OAAO,SAAS,CAAE,OAAO,SAAS,EAE5C,IAAI,EAAM,OAAO,SAAS,CAAE,OAAO,SAAS,EF5SrE,IAAI,EAAgB,KAEhB,EAAS,KACT,EAAa,KACb,EAAkB,EAClB,EAAmB,EACnB,EAAc,CAAA,EACd,EAAoB,KACpB,EAAc,KAEd,EAAO,EACP,EAAM,EAEN,EAAQ,EACR,EAAW,EACX,EAAW,GACX,EAAe,QACf,EAAiB,IAAI,EAAS,EAAG,EAAG,GAwExC,SAAS,QAsCH,EACA,EACA,EACA,EAxCJ,IAAM,EArDC,CAAE,MAAO,OAAO,UAAU,CAAE,OAAQ,OAAO,WAAW,AAAC,EAsD1D,EAAc,EAAW,KAAK,CAAG,EAAW,MAAM,CAClD,EAAkB,EAClB,EAAiB,EACf,EAAoB,EAAK,KAAK,CAAG,EAAK,MAAM,CAdlD,CAAA,AAAI,AAAiB,UAkBnB,EAjBO,AAeP,EACA,EAdO,AAaP,EACA,CAdA,EAmBA,EAAiB,AADjB,CAAA,EAAkB,EAAK,MAAM,AAAN,EACY,EAGnC,EAAkB,AADlB,CAAA,EAAiB,EAAK,KAAK,AAAL,EACa,EAIjC,AADJ,CAAA,EAAQ,EAAiB,EAAW,KAAK,AAAL,EACxB,GAEV,EAAiB,AADjB,CAAA,EAAQ,CAAR,EACyB,EAAW,KAAK,CACzC,EAAkB,EAAQ,EAAW,MAAM,EAClC,EAAQ,IAEjB,EAAiB,AADjB,CAAA,EAAQ,CAAR,EACyB,EAAW,KAAK,CACzC,EAAkB,EAAQ,EAAW,MAAM,EAG7C,EAAQ,AAAA,CAAA,EAAK,KAAK,CAAG,CAAA,EAAkB,EACvC,EAAO,AAAA,CAAA,EAAK,MAAM,CAAG,CAAA,EAAmB,EAExC,EAAO,KAAK,CAAC,IAAI,CAAG,CAAC,EAAE,EAAK,EAAE,CAAC,CAC/B,EAAO,KAAK,CAAC,GAAG,CAAG,CAAC,EAAE,EAAI,EAAE,CAAC,CAC7B,EAAO,KAAK,CAAC,KAAK,CAAG,CAAC,EAAE,EAAe,EAAE,CAAC,CAC1C,EAAO,KAAK,CAAC,MAAM,CAAG,CAAC,EAAE,EAAgB,EAAE,CAAC,CAMxC,EAAO,GACT,EAAuB,CAAC,EAAO,EAC/B,EAAqB,EAAK,KAAK,CAAG,IAElC,EAAuB,EACvB,EAAqB,EAAW,KAAK,EAEnC,EAAM,GACR,EAAuB,CAAC,EAAM,EAC9B,EAAsB,EAAK,MAAM,CAAG,IAEpC,EAAuB,EACvB,EAAsB,EAAW,MAAM,EAGzC,EAAoB,IAAI,EACtB,EACA,EACA,EACA,GAEF,AAAA,EAAI,KAAK,CAAC,CAAC,OAAO,EAAE,EAAM,CAAC,EAC3B,AAAA,EAAI,KAAK,CAAC,CAAC,eAAe,EAAE,EAAK,KAAK,CAAC,UAAU,EAAE,EAAK,MAAM,CAAC,CAAC,EAChE,AAAA,EAAI,KAAK,CACP,CAAC,eAAe,EAAE,EAAK,OAAO,EAAE,EAAI,SAAS,EAAE,EAAe,UAAU,EAAE,EAAgB,CAAC,EAE7F,AAAA,EAAI,KAAK,CACP,CAAC,sBAAsB,EAAE,EAAqB,OAAO,EAAE,EAAqB,SAAS,EAAE,EAAmB,UAAU,EAAE,EAAoB,CAAC,CAE/I,CAKA,SAAS,IACP,IAAM,EAAe,ACjId,EAAS,MAAM,CAAC,IAAI,CDiIoB,CAC/C,CAAA,SAAS,eAAe,CAAC,KAAK,CAAC,QAAQ,CAAG,CAAC,EAAE,EAAa,EAAE,CAAC,AAC/D,CAKA,SAAS,IACP,IACA,GACF,CAwCA,SAAS,IACP,OAAO,EAAO,UAAU,CAAC,KAAM,CAAE,MAAO,CAAY,EACtD,CA2DA,SAAS,EAAU,CAAK,EAEtB,OADA,EAAM,KAAK,CAAC,OAAO,CAAG,EACf,IAAI,QAAQ,AAAC,IAClB,OAAO,UAAU,CAAC,KAChB,EAAM,MAAM,GACZ,GACF,EAAG,IACL,EACF,CAgFA,SAAS,EAAsB,CAAQ,EACrC,OAAO,IAAI,EACT,EAAS,CAAC,CAAG,EAAe,CAAC,CAC7B,EAAS,CAAC,CAAG,EAAe,CAAC,CAC7B,EAAS,QAAQ,CAErB,CA7VA,OAAO,gBAAgB,CAAC,SAAU,KACV,OAAlB,GAGJ,CAAA,EAAgB,OAAO,UAAU,CAAC,KAChC,IACA,EAAgB,IAClB,EAAG,IAAH,CACF,GAyaA,IAAA,EAxBe,CACb,sBAAuB,EACvB,eApIF,SAAwB,CAAK,EAC3B,EAAe,CAAC,CAAG,EAAM,CAAC,CAAG,EAC7B,EAAe,CAAC,CAAG,EAAM,CAAC,CAAG,CAC/B,EAkIE,YAvPF,WACE,IAAe,SAAS,CAAC,EAAG,EAAG,EAAW,KAAK,CAAE,EAAW,MAAM,CACpE,EAsPE,eAzMF,SAAwB,CAAO,CAAE,CAAO,CAAE,CAAS,MA6B7C,EA5BJ,IAAM,EAAQ,SAAS,aAAa,CAAC,OACrC,SAAS,IAAI,CAAC,WAAW,CAAC,GAC1B,EAAM,SAAS,CAAG,QAClB,IAAM,EAAe,SAAS,aAAa,CAAC,OAC5C,EAAM,WAAW,CAAC,GAClB,EAAa,SAAS,CAAG,gBACzB,EAAa,WAAW,CAAC,GACrB,GACF,EAAM,SAAS,CAAC,GAAG,CAAC,GAEtB,EAAM,KAAK,CAAC,OAAO,CAAG,QACtB,EAAM,KAAK,CAAC,OAAO,CAAG,EACtB,IAAM,EAAW,EAAE,CACnB,GAAI,GAAW,EAAQ,MAAM,CAAG,EAC9B,EAAQ,OAAO,CAAC,AAAC,IACf,IAAM,EAAU,IAAI,QAAQ,AAAC,IAC3B,EAAO,OAAO,CAAC,gBAAgB,CAAC,QAAS,UACvC,EAAQ,EAAO,QAAQ,CACzB,EACF,GACA,EAAS,IAAI,CAAC,EAChB,OACK,CACL,IAAM,EAAU,IAAI,QAAQ,AAAC,GAC3B,EAAa,gBAAgB,CAAC,QAAS,IAAM,MAE/C,EAAS,IAAI,CAAC,EAChB,CAEA,OAAO,QAAQ,IAAI,CAAC,GACjB,IAAI,CAAC,AAAC,IACL,EAAY,EACL,EAAU,KAElB,IAAI,CAAC,IAAM,EAChB,EAsKE,UAAW,IAAM,EACjB,aAAc,EACd,oBAtOF,WACE,MAAO,CAAE,MAAO,EAAW,KAAK,CAAE,OAAQ,EAAW,MAAM,AAAC,CAC9D,EAqOE,uBApPF,WACE,OAAO,IAAI,EACT,EAAe,CAAC,CAChB,EAAe,CAAC,CAChB,EAAW,KAAK,CAChB,EAAW,MAAM,CAErB,EA8OE,qBAvBF,WACE,OAAO,CACT,EAsBE,qBA9DF,SAA8B,CAAQ,EACpC,IAAM,EACJ,EAAS,CAAC,CAAG,EACT,EAAkB,CAAC,CAAG,EAAkB,KAAK,CAC7C,EAAkB,CAAC,CACnB,EACJ,EAAS,CAAC,CAAG,EACT,EAAkB,CAAC,CAAG,EAAkB,MAAM,CAC9C,EAAkB,CAAC,CAKzB,OAAO,EAAsB,IAAI,EAHzB,EAAU,EAAS,CAAC,CACpB,EAAU,EAAS,CAAC,CAEoB,EAAS,QAAQ,EACnE,EAiDE,WAjCF,SAAoB,CAAI,EACtB,OAAO,EAAK,QAAQ,CAAC,EACvB,EAgCE,WA3CF,SAAoB,CAAI,EACtB,OAAO,EAAK,QAAQ,CAAC,EACvB,EA0CE,UAxJF,SAAmB,CAAE,CAAE,CAAE,EACvB,EAAe,CAAC,EAAI,EACpB,EAAe,CAAC,EAAI,CACtB,EAsJE,OAAQ,EACR,WArBF,SAAoB,CAAO,EACzB,IAAe,WAAW,CAAG,CAC/B,EAoBE,WAhZF,SAAoB,CAAO,MClCA,EDmCzB,GAAI,EAAQ,CACV,AAAA,EAAI,KAAK,CAAC,wCACV,MACF,CACA,EAAc,SAAS,cAAc,CAAC,gBCvCb,EDwCR,EAAQ,KAAK,CCvC9B,EAAS,MAAM,CAAC,IAAI,CAAG,AArCR,GAqCmB,AAAY,EAAc,IAA1B,QAClC,EAAS,EAAE,CAAC,IAAI,CAAG,AAjCC,EAiCD,EAAS,MAAM,CAAC,IAAI,CACvC,EAAS,EAAE,CAAC,IAAI,CAAG,AAjCC,IAiCD,EAAS,MAAM,CAAC,IAAI,CACvC,EAAS,EAAE,CAAC,IAAI,CAAG,AAjCC,IAiCD,EAAS,MAAM,CAAC,IAAI,CACvC,EAAS,WAAW,CAAC,IAAI,CAAG,EAAc,GDqC1C,AADA,CAAA,EAAS,SAAS,aAAa,CAAC,SAAhC,EACO,EAAE,CAAG,cACZ,EAAO,YAAY,CAAC,QAAS,EAAQ,KAAK,EAC1C,EAAO,YAAY,CAAC,SAAU,EAAQ,MAAM,EAC5C,EAAO,SAAS,CAAG,mBACnB,EAAa,IAAI,EAAU,EAAG,EAAG,EAAQ,KAAK,CAAE,EAAQ,MAAM,EAC9D,EAAkB,EAAQ,KAAK,CAAG,EAClC,EAAmB,EAAQ,MAAM,CAAG,EAEpC,EAAY,WAAW,CAAC,GAExB,EAAW,EAAQ,QAAQ,CAC3B,EAAW,EAAQ,QAAQ,CAC3B,EAAe,EAAQ,YAAY,CACnC,EAAc,EAAQ,KAAK,CAC3B,IACA,GACF,EAyXE,UAAW,EACX,sBAjGF,SAA+B,CAAQ,EACrC,OAAO,IAAI,EACT,EAAS,CAAC,CAAG,EAAe,CAAC,CAC7B,EAAS,CAAC,CAAG,EAAe,CAAC,CAC7B,EAAS,QAAQ,CAErB,EA4FE,UAlIF,SAAmB,CAAI,EACrB,OAAO,EAAO,CAChB,EAiIE,0BApHF,SAAmC,CAAC,CAAE,CAAC,EASrC,MAAO,CAAE,OANc,IAAI,EAAS,KAAK,KAAK,CAF9C,GAxBc,GA0BqC,KAAK,KAAK,CAD7D,GAzBc,IAgCmB,MALX,IAAI,EACxB,KAAK,KAAK,CAAC,EAAI,EAAe,CAAC,EAC/B,KAAK,KAAK,CAAC,EAAI,EAAe,CAAC,EAC/B,CAAC,EAAe,QAAQ,CAE4B,CACxD,EA2GE,UA7IF,SAAmB,CAAI,EACrB,OAAO,EAAO,CAChB,CA4IA,EIjdA,MAAM,EAAS,IAAI,IAMb,EAAiB,IAAI,IA8B3B,SAAS,EAAY,CAAM,EACzB,IAAM,EAAY,EAAa,gBAAgB,CAAC,EAAO,QAAQ,EAC/D,EAAa,0BAA0B,CAAC,EAAQ,GAChD,EAAO,MAAM,CAAC,EAChB,CAcA,SAAS,EAAoB,CAAM,EACjC,AAAA,EAAI,KAAK,CAAC,0BACV,EAAe,MAAM,CAAC,EACxB,CAsBA,SAAS,KACP,EAAe,IACjB,CA6FA,IAAA,GAjBc,CACZ,SAvIF,SAAkB,CAAM,EACtB,EAAO,GAAG,CAAC,EAAQ,GACnB,EAAa,0BAA0B,CACrC,EACA,KACA,EAAa,gBAAgB,CAAC,EAAO,QAAQ,EAEjD,EAiIE,iBAjHF,SAA0B,CAAM,EAC9B,EAAe,GAAG,CAAC,EAAQ,EAC7B,EAgHE,SA1EF,WACE,EAAO,OAAO,CAAC,AAAC,GAAU,EAAY,IACtC,EAAe,OAAO,CAAC,AAAC,GAAW,EAAoB,IACvD,IACF,EAuEE,UAXF,WACE,OAAO,CACT,EAUE,WA3FF,WACE,OAAO,CACT,EA0FE,aAtJF,WACE,OAAO,EACH,EAAa,aAAa,GAC1B,AAAA,EAAO,mBAAmB,EAChC,EAmJE,cAAe,GACf,cAvBF,SAAuB,CAAe,EACpC,MAAO,CAAA,CACT,EAsBE,aApDF,SAAsB,CAAS,EAC7B,IAAM,EAAO,GAAc,oBAAoB,EAAU,KAAK,QAC9D,EAAI,IACF,EAAK,WAAW,CAAC,EAAU,KAAK,EACzB,CAAA,EAGX,EA8CE,mBAvCF,SAA4B,CAAS,EACnC,IAAM,EAAO,EAAa,mBAAmB,CAAC,EAAU,KAAK,QAC7D,EAAI,IACF,EAAK,kBAAkB,CAAC,EAAU,KAAK,EAChC,CAAA,EAGX,EAiCE,YAAa,EACb,oBAAqB,EACrB,WA3GF,SAAoB,CAAO,EACzB,EAAe,CACjB,EA0GE,OA3EF,SAAgB,CAAY,EAC1B,GAAc,OAAO,GACrB,EAAO,OAAO,CAAC,AAAC,IACd,IAAM,EAAe,EAAa,gBAAgB,CAAC,EAAM,QAAQ,CACjE,CAAA,EAAM,OAAO,CAAG,EAAa,mBAAmB,CAAC,GACjD,EAAM,MAAM,CAAC,GACb,IAAM,EAAe,EAAa,gBAAgB,CAAC,EAAM,QAAQ,EACjE,EAAa,0BAA0B,CAAC,EAAO,EAAc,EAC/D,GAEA,EAAe,OAAO,CAAC,AAAC,GAAW,EAAO,MAAM,CAAC,GACnD,CAiEA,EO5GO,SAAS,GAAU,CAAO,CAAE,CAAI,CAAE,CAAQ,CAAE,CAAO,EAGxD,GAFA,EAAQ,IAAI,CAAG,EAAa,GAAS,WACrC,EAAQ,SAAS,CAAG,GAAS,OAAS,QACjC,GAAS,QAEP,CACL,IAAI,EAAa,EAAK,KAAK,CAAC,MAC5B,IAAK,IAAI,EAAI,EAAG,EAAI,EAAW,MAAM,CAAE,IACrC,EAAQ,CAAC,CAAG,AA7ClB,SAAuB,CAAO,CAAE,CAAS,CAAE,CAAQ,CAAE,CAAO,MAOtD,EANJ,IAAM,EAAQ,EAAU,KAAK,CAAC,KAC1B,EAAI,EAAS,CAAC,EAAI,EAClB,EAAI,EAAS,CAAC,EAAI,EAClB,EAAgB,EAAQ,aAAa,CAAG,EACxC,EAAc,EAAQ,WAAW,EAAI,EACrC,EAAO,GAGX,IAAK,IAAI,EAAI,EAAG,EAAI,EAAM,MAAM,CAAE,IAAK,CACrC,IAAI,EAAW,EAAO,CAAK,CAAC,EAAE,CAAG,IAC3B,EAAS,AAhCZ,SAAuB,CAAO,CAAE,CAAI,EACzC,IAAM,EAAU,EAAQ,WAAW,CADE,KAAA,GAErC,MAAO,CACL,MAAO,EAAQ,KAAK,CACpB,OAAQ,EAAQ,qBAAqB,CAAG,EAAQ,sBAAsB,CACtE,UAAW,CAAC,EAAQ,qBAAqB,CACzC,cACE,GAAO,CAAA,EAAQ,sBAAsB,CAAG,EAAQ,qBAAqB,AAArB,CACpD,CACF,EAuBiC,GACxB,GACH,CAAA,EAAa,EAAc,EAAO,MAAM,AAAN,EAEhC,EAAO,KAAK,CAAG,GAAiB,EAAI,GACtC,EAAQ,QAAQ,CAAC,EAAM,EAAG,GAC1B,EAAO,CAAK,CAAC,EAAE,CAAG,IAClB,GAAK,GAEL,EAAO,CAEX,CAEA,OADA,EAAQ,QAAQ,CAAC,EAAM,EAAG,GACnB,EAAI,CACb,EAoBgC,EAAS,CAAU,CAAC,EAAE,CAAE,EAAU,EAEhE,MANE,EAAQ,QAAQ,CAAC,EAAM,EAAS,CAAC,EAAI,EAAG,EAAS,CAAC,EAAI,EAO1D,CCvFO,MAAM,GAAU,CAIrB,YAAa,CAAA,EAIb,QAAS,CAAA,CACX,EEIA,IAAI,GAAa,EAAE,CAOnB,SAAS,GAAU,CAAM,EACvB,OAAO,IAAI,QAAQ,AAAC,IAClB,IAAM,EAAQ,IAAI,MAClB,EAAM,gBAAgB,CAAC,OAAQ,KAC7B,AAAA,EAAI,KAAK,CAAC,iBACV,EAAQ,EACV,GACA,EAAM,GAAG,CAAG,CACd,EACF,CAmFA,IAAA,GAPsB,CACpB,gBAZF,SAAyB,CAAc,CAAE,CAAQ,EAC/C,IAAM,EAAS,EAAU,CAAC,EAAe,CAAC,GAAG,CAAC,GAI9C,OAHK,GACH,AAAA,EAAI,KAAK,CAAC,CAAC,qBAAqB,EAAE,EAAS,UAAU,EAAE,EAAe,CAAC,EAElE,CACT,EAOE,UAAW,GACX,WAxEF,SAAoB,CAAO,EACzB,IAAM,EAAW,EAAE,CAEnB,OADA,EAAQ,OAAO,CAAC,AAAC,GAAQ,EAAS,IAAI,CAAC,GAAU,KAC1C,QAAQ,GAAG,CAAC,EACrB,EAqEE,cA7DF,SAAuB,CAAY,CAAE,CAAU,EAC7C,OAAO,GAAU,GAAY,IAAI,CAAC,AAAC,GACjC,AAUJ,CAAA,SAAwB,CAAY,CAAE,CAAO,EAC3C,IAAM,EAAW,EAAE,CACb,EAAM,IAAI,IAwBhB,OAvBA,GAAW,IAAI,CAAC,GAChB,EAAa,MAAM,CAAC,OAAO,CAAC,AAAC,IAC3B,EAAS,IAAI,CACX,kBACE,EACA,EAAM,KAAK,CAAC,CAAC,CACb,EAAM,KAAK,CAAC,CAAC,CACb,EAAM,KAAK,CAAC,CAAC,CACb,EAAM,KAAK,CAAC,CAAC,EACb,IAAI,CAAC,AAAC,IACN,IAAM,EAAe,CACnB,MAAO,EACP,MAAO,EAAM,KAAK,CAAC,CAAC,CACpB,OAAQ,EAAM,KAAK,CAAC,CAAC,CACrB,QAAS,EAAM,UAAU,CAAC,CAAC,CAAG,EAAI,EAAM,gBAAgB,CAAC,CAAC,CAC1D,QAAS,EAAM,UAAU,CAAC,CAAC,CAAG,EAAI,EAAM,gBAAgB,CAAC,CAAC,AAC5D,EAEA,OADA,EAAI,GAAG,CAAC,EAAM,QAAQ,CAAE,GACjB,EAAM,QAAQ,AACvB,GAEJ,GAEO,QAAQ,GAAG,CAAC,EACrB,CAAA,EArCmB,EAAc,GAEjC,CA0DA,EC1GA,IAAI,GAAgB,EA0BpB,IAAA,GALmB,CACjB,cAjBF,SAAuB,CAAS,EAC9B,GAAgB,CAClB,EAgBE,cATF,SAAuB,CAAa,EAClC,OAAO,KAAK,KAAK,CAAC,GAAgB,EACpC,CAQA,ECrBO,MAAM,GAAa,CACxB,KAAM,EACN,QAAS,EACT,KAAM,CACR,CAOO,OAAM,GAEX,CAAC,CAAM,AAAC,AAER,EAAC,CAAQ,AAAC,AAEV,EAAC,CAAU,AAAC,AAEZ,EAAC,CAAS,AAAC,AAEX,EAAC,CAAK,AAAC,AAMP,aAAY,CAAM,CAAE,CAAU,CAAE,CAC9B,IAAI,CAAC,CAAC,CAAM,CAAG,EACf,IAAI,CAAC,CAAC,CAAQ,CAAG,EAAS,EAC1B,IAAI,CAAC,CAAC,CAAU,CAAG,EACnB,IAAI,CAAC,CAAC,CAAS,CAAG,EAClB,IAAI,CAAC,CAAC,CAAK,CAAG,CAChB,CAKA,IAAI,OAAQ,CACV,OAAO,IAAI,CAAC,CAAC,CAAK,AACpB,CAKA,IAAI,MAAM,CAAK,CAAE,CACf,IAAI,CAAC,CAAC,CAAK,CAAG,EAAW,EAAO,EAAG,IAAI,CAAC,CAAC,CAAM,CAAG,EACpD,CAMA,UAAU,CAAQ,CAAE,CAClB,GAAI,IAAI,CAAC,CAAC,CAAM,CAAG,EACjB,OAAO,IAAI,CAAC,CAAC,CAAK,CAEpB,OAAQ,IAAI,CAAC,CAAC,CAAU,EACtB,KAAK,GAAW,IAAI,CAClB,OAAO,IAAI,CAAC,CAAC,CAAa,CAAC,EAC7B,MAAK,GAAW,OAAO,CACrB,OAAO,IAAI,CAAC,CAAC,CAAgB,CAAC,EAChC,MAAK,GAAW,IAAI,CACpB,QACE,OAAO,IAAI,CAAC,CAAC,CAAa,CAAC,EAC/B,CACF,CAOA,CAAC,CAAa,CAAC,CAAQ,EAMrB,OALA,GAAsB,IAAI,CAAC,CAAC,CAAM,CAClC,IAAI,CAAC,CAAC,CAAK,EAAI,EAAW,IAAI,CAAC,CAAC,CAAM,CAClC,IAAI,CAAC,CAAC,CAAK,EAAI,IAAI,CAAC,CAAC,CAAM,EAC7B,CAAA,IAAI,CAAC,CAAC,CAAK,CAAG,IAAI,CAAC,CAAC,CAAK,CAAG,IAAI,CAAC,CAAC,CAAM,AAAN,EAE7B,IAAI,CAAC,CAAC,CAAK,AACpB,CAOA,CAAC,CAAgB,CAAC,CAAQ,EAMxB,GALwB,KAAK,KAAK,CAAC,EAAW,IAAI,CAAC,CAAC,CAAM,EACpC,GACpB,CAAA,IAAI,CAAC,CAAC,CAAS,CAAG,CAAC,IAAI,CAAC,CAAC,CAAS,AAAT,EAE3B,GAAsB,IAAI,CAAC,CAAC,CAAM,CAC9B,IAAI,CAAC,CAAC,CAAS,CAAG,EAAG,CACvB,IAAI,CAAC,CAAC,CAAK,EAAI,EACf,IAAM,EAAY,IAAI,CAAC,CAAC,CAAK,CAAG,IAAI,CAAC,CAAC,CAAQ,CAC1C,EAAY,IACd,IAAI,CAAC,CAAC,CAAK,CAAG,IAAI,CAAC,CAAC,CAAQ,CAAG,EAC/B,IAAI,CAAC,CAAC,CAAS,CAAG,GAEtB,MAAW,IAAI,CAAC,CAAC,CAAS,CAAG,IAC3B,IAAI,CAAC,CAAC,CAAK,EAAI,EACX,IAAI,CAAC,CAAC,CAAK,CAAG,IAChB,IAAI,CAAC,CAAC,CAAK,CAAG,CAAC,IAAI,CAAC,CAAC,CAAK,CAC1B,IAAI,CAAC,CAAC,CAAS,CAAG,IAGtB,OAAO,IAAI,CAAC,CAAC,CAAK,AACpB,CAOA,CAAC,CAAa,CAAC,CAAQ,EAMrB,OALI,IAAI,CAAC,CAAC,CAAS,CAAG,EACpB,IAAI,CAAC,CAAC,CAAK,CAAG,KAAK,GAAG,CAAC,IAAI,CAAC,CAAC,CAAQ,CAAE,IAAI,CAAC,CAAC,CAAK,CAAG,GAC5C,IAAI,CAAC,CAAC,CAAS,CAAG,GAC3B,CAAA,IAAI,CAAC,CAAC,CAAK,CAAG,KAAK,GAAG,CAAC,EAAG,IAAI,CAAC,CAAC,CAAK,CAAG,EADnC,EAGA,IAAI,CAAC,CAAC,CAAK,AACpB,CACF,CHzHO,MAAM,GAEX,OAAQ,AAER,EAAC,CAAM,AAAC,AAER,EAAC,CAAO,AAAC,AAET,EAAC,CAAc,AAAC,AAGhB,EAAC,CAAa,AAAC,AAaf,aAAY,CAAY,CAAE,CAAe,CAAE,CAAO,CAAE,KAc9C,EAXJ,GAFA,IAAI,CAAC,CAAC,CAAM,CAAG,EAAE,CACjB,IAAI,CAAC,CAAC,CAAc,CAAG,EACnB,AAA2B,UAA3B,OAAO,EAA8B,CACvC,IAAI,CAAC,CAAC,CAAM,CAAC,IAAI,CACf,AAAA,GAAc,eAAe,CAAC,EAAc,IAE9C,MACF,CAEA,IAAI,CAAC,CAAC,CAAa,CAAG,KAAK,GAAG,CAAC,EAAG,EAAQ,aAAa,EAEvD,IAAI,EAAQ,EAAgB,UAAU,EAAI,EACtC,EAAU,EAAgB,OAAO,EAAI,EAEzC,EAAG,CACD,IAAM,EAAW,CAAC,EAAE,EAAgB,MAAM,CAAC,EAAE,EAC1C,QAAQ,GACR,QAAQ,CAAC,EAAS,KAAK,EAAE,EAAgB,MAAM,CAAC,CAAC,CACpD,CAAA,EAAe,AAAA,GAAc,eAAe,CAAC,EAAc,EAAA,GAEzD,IAAI,CAAC,CAAC,CAAM,CAAC,IAAI,CAAC,GAEpB,GACF,OAAS,EAAc,AACvB,IAAI,CAAC,CAAC,CAAO,CAAG,IAAI,GAAQ,IAAI,CAAC,CAAC,CAAM,CAAC,MAAM,CAAE,EAAQ,UAAU,EACnE,IAAI,CAAC,OAAO,CAAG,CAAA,CACjB,CAMA,iBAAkB,CAChB,IAAI,CAAA,IAAI,CAAC,CAAC,CAAM,CAAC,MAAM,CAAG,CAAA,EAUxB,OAAO,IAAI,CAAC,CAAC,CAAM,CAAC,EAAE,CATtB,GAAI,IAAI,CAAC,OAAO,CAAE,CAChB,IAAM,EAAa,AAAA,GAAW,aAAa,CAAC,IAAI,CAAC,CAAC,CAAa,EAC3D,IAAe,IAAI,CAAC,CAAC,CAAc,GACrC,IAAI,CAAC,CAAC,CAAO,CAAC,SAAS,CAAC,EAAa,IAAI,CAAC,CAAC,CAAc,EACzD,IAAI,CAAC,CAAC,CAAc,CAAG,EAE3B,CACA,OAAO,IAAI,CAAC,CAAC,CAAM,CAAC,IAAI,CAAC,CAAC,CAAO,CAAC,KAAK,CAAC,AAI5C,CAQA,gBAAgB,CAAK,CAAE,CACjB,IAAI,CAAC,CAAC,CAAM,CAAC,MAAM,CAAG,IACxB,IAAI,CAAC,OAAO,CAAG,CAAA,EACf,IAAI,CAAC,CAAC,CAAO,CAAC,KAAK,CAAG,EAE1B,CAMA,iBAAkB,QAChB,AAAI,IAAI,CAAC,CAAC,CAAM,CAAC,MAAM,CAAG,EACjB,IAAI,CAAC,CAAC,CAAO,CAAC,KAAK,CAEnB,CAEX,CACF,CAKO,MAAM,GAEX,CAAC,CAAc,AAAC,AAEhB,EAAC,CAAY,AAAC,AAOd,aAAY,CAAG,CAAE,CAAa,CAAE,CAC9B,IAAI,CAAC,CAAC,CAAc,CAAG,CAAC,EACxB,IAAI,CAAC,CAAC,CAAc,CAAC,EAAI,CAAG,EAC5B,IAAI,CAAC,CAAC,CAAY,CAAG,CACvB,CAKA,IAAI,OAAQ,CACV,OAAO,IAAI,CAAC,CAAC,CAAY,AAC3B,CAOA,iBAAiB,CAAG,CAAE,CAAa,CAAE,CACnC,IAAI,CAAC,CAAC,CAAc,CAAC,EAAI,CAAG,CAC9B,CAMA,cAAc,CAAG,CAAE,CAEb,IAAI,CAAC,CAAC,CAAc,CAAC,cAAc,CAAC,GACtC,IAAI,CAAC,CAAC,CAAY,CAAG,IAAI,CAAC,CAAC,CAAc,CAAC,EAAI,CAE9C,AAAA,EAAI,KAAK,CAAC,CAAC,mDAAmD,EAAE,EAAI,CAAC,CAEzE,CAMA,iBAAkB,CAChB,OAAO,IAAI,CAAC,CAAC,CAAY,CAAC,eAAe,EAC3C,CACF,CH/HO,MAAM,GAEX,QAAS,AAGT,CAAA,kBAAmB,AAMnB,aAAY,CAAO,CAAE,CACnB,IAAI,CAAC,QAAQ,CAAG,EAChB,IAAI,CAAC,kBAAkB,CAAG,IAAI,EAAU,EAAG,EAAG,EAAG,EACnD,CAMA,YAAa,CACX,OAAO,IAAI,CAAC,QAAQ,AACtB,CAMA,sBAAuB,CACrB,OAAO,IAAI,CAAC,kBAAkB,AAChC,CAMA,OAAO,CAAQ,CAAE,CAAO,CAAE,CAExB,GADA,EAAW,AAAA,EAAO,qBAAqB,CAAC,GACpC,CAAC,IAAI,CAAC,UAAU,CAAC,GACnB,OAEF,IAAM,EAAe,IAAI,CAAC,QAAQ,CAAC,WAAW,AAC9C,CAAA,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAG,EAAe,EAC3C,IAAM,EAAU,EAAS,QAAQ,CAC7B,IACF,IAAI,CAAC,QAAQ,CAAC,IAAI,GAClB,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,EAAS,CAAC,CAAE,EAAS,CAAC,EAC9C,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,EAAS,QAAQ,EACvC,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC,EAAS,CAAC,CAAE,CAAC,EAAS,CAAC,GAElD,IAAI,CAAC,SAAS,CAAC,GACX,GACF,IAAI,CAAC,QAAQ,CAAC,OAAO,GAEnB,GAAc,WAAW,GAC3B,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAG,QAC5B,IAAI,CAAC,QAAQ,CAAC,UAAU,CACtB,IAAI,CAAC,kBAAkB,CAAC,CAAC,CACzB,IAAI,CAAC,kBAAkB,CAAC,CAAC,CACzB,IAAI,CAAC,kBAAkB,CAAC,KAAK,CAC7B,IAAI,CAAC,kBAAkB,CAAC,MAAM,GAGlC,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAG,CAC9B,CAKA,UAAU,CAAc,CAAE,CACxB,AAAA,EAAI,KAAK,CAAC,yCACZ,CAOA,WAAW,CAAQ,CAAE,CACnB,IAAM,EAAO,IAAI,EACf,EAAS,CAAC,CAAG,IAAI,CAAC,kBAAkB,CAAC,KAAK,CAAG,EAC7C,EAAS,CAAC,CAAG,IAAI,CAAC,kBAAkB,CAAC,MAAM,CAAG,EAC9C,IAAI,CAAC,kBAAkB,CAAC,KAAK,CAC7B,IAAI,CAAC,kBAAkB,CAAC,MAAM,EAEhC,OAAO,AAAA,EAAO,UAAU,CAAC,EAC3B,CAOA,WAAW,CAAQ,CAAE,CACnB,IAAM,EAAO,IAAI,EACf,EAAS,CAAC,CAAG,IAAI,CAAC,kBAAkB,CAAC,KAAK,CAAG,EAC7C,EAAS,CAAC,CAAG,IAAI,CAAC,kBAAkB,CAAC,MAAM,CAAG,EAC9C,IAAI,CAAC,kBAAkB,CAAC,KAAK,CAC7B,IAAI,CAAC,kBAAkB,CAAC,MAAM,EAEhC,OAAO,AAAA,EAAO,UAAU,CAAC,EAC3B,CACF,CAKO,MAAM,WAAiC,GAI5C,CAAC,CAAS,AAAC,AAGX,EAAC,CAAkB,AAAC,AAEpB,EAAC,CAAc,AAAC,AAGhB,CAAA,IAAK,AAOL,aAAY,CAAO,CAAE,CAAI,CAAE,EAAY,QAAQ,CAAE,CAC/C,KAAK,CAAC,GACN,IAAI,CAAC,IAAI,CAAG,EACZ,IAAI,CAAC,CAAC,CAAS,CAAG,CACpB,CAMA,CAAC,CAAuB,CAAC,CAAI,EAC3B,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAG,EAAa,IAAI,CAAC,CAAC,CAAS,EACjD,IAAM,EAAU,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,EAC1C,CAAA,IAAI,CAAC,CAAC,CAAc,CAAG,CACrB,MAAO,EAAQ,KAAK,CACpB,OAAQ,EAAQ,qBAAqB,CAAG,EAAQ,sBAAsB,CACtE,OAAQ,CACN,EAAG,IAAO,EAAQ,KAAK,CACvB,EACE,GACC,CAAA,EAAQ,qBAAqB,CAAG,EAAQ,sBAAsB,AAAtB,CAC7C,CACF,EACA,IAAI,CAAC,CAAC,CAAkB,CAAG,CAC7B,CAMA,UAAU,CAAQ,CAAE,KAzKkB,CA0KhC,CAAA,IAAI,CAAC,IAAI,GAAK,IAAI,CAAC,CAAC,CAAkB,EACxC,IAAI,CAAC,CAAC,CAAuB,CAAC,IAAI,CAAC,IAAI,EAEzC,IAAM,EAAiB,CACrB,EAAG,EAAS,CAAC,CAAG,IAAI,CAAC,CAAC,CAAc,CAAC,MAAM,CAAC,CAAC,CAC7C,EAAG,EAAS,CAAC,CAAG,IAAI,CAAC,CAAC,CAAc,CAAC,MAAM,CAAC,CAAC,CAC7C,SAAU,EAAS,QAAQ,AAC7B,EAEA,GACE,IAAI,CAAC,QAAQ,CACb,IAAI,CAAC,CAAC,CAAkB,CACxB,EACA,CAAE,UAAW,IAAI,CAAC,CAAC,CAAS,AAAC,GAG/B,IAAI,CAAC,kBAAkB,EA1La,EA4LlC,IAAI,CAAC,CAAC,CAAc,CA3LjB,IAAI,EACT,AAyLE,EAzLO,CAAC,CAAG,EAAW,KAAK,CAAG,EAChC,AAwLE,EAxLO,CAAC,CAAG,EAAW,MAAM,CAAG,EACjC,EAAW,KAAK,CAChB,EAAW,MAAM,EAyLnB,CACF,CAKO,MAAM,WAAiC,GAC5C,CAAC,CAAK,AAAC,AACP,EAAC,CAAM,AAAC,AACR,EAAC,CAAS,AAAC,AACX,EAAC,CAAU,AAAC,AACZ,EAAC,CAAS,AAAC,AACX,EAAC,CAAW,AAAC,AAUb,aAAY,CAAO,CAAE,CAAO,CAAE,CAC5B,KAAK,CAAC,GACN,IAAI,CAAC,CAAC,CAAK,CAAG,EAAQ,KAAK,EAAI,GAC/B,IAAI,CAAC,CAAC,CAAM,CAAG,EAAQ,MAAM,EAAI,GACjC,IAAI,CAAC,CAAC,CAAS,CAAG,IAAI,CAAC,CAAC,CAAK,CAAG,EAChC,IAAI,CAAC,CAAC,CAAU,CAAG,IAAI,CAAC,CAAC,CAAM,CAAG,EAClC,IAAI,CAAC,CAAC,CAAS,CAAG,EAAQ,SAAS,CACnC,IAAI,CAAC,CAAC,CAAW,CAAG,EAAQ,WAAW,AACzC,CAMA,UAAU,CAAQ,CAAE,CAClB,IAAM,EAAI,EAAS,CAAC,CAAG,IAAI,CAAC,CAAC,CAAS,CAChC,EAAI,EAAS,CAAC,CAAG,IAAI,CAAC,CAAC,CAAU,AACnC,CAAA,IAAI,CAAC,CAAC,CAAS,GACjB,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAG,IAAI,CAAC,CAAC,CAAS,CACzC,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,EAAG,EAAG,IAAI,CAAC,CAAC,CAAK,CAAE,IAAI,CAAC,CAAC,CAAM,GAEpD,IAAI,CAAC,CAAC,CAAW,GACnB,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAG,IAAI,CAAC,CAAC,CAAW,CAC7C,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAC,EAAG,EAAG,IAAI,CAAC,CAAC,CAAK,CAAE,IAAI,CAAC,CAAC,CAAM,GAG1D,IAAI,CAAC,kBAAkB,CAAG,IAAI,EAAU,EAAG,EAAG,IAAI,CAAC,CAAC,CAAK,CAAE,IAAI,CAAC,CAAC,CAAM,CACzE,CACF,CAKO,MAAM,WAAkC,GAC7C,CAAC,CAAM,AAAC,AACR,EAAC,CAAU,AAAC,AACZ,EAAC,CAAK,AAAC,AACP,EAAC,CAAS,AAAC,AACX,EAAC,CAAS,AAAC,AACX,EAAC,CAAW,AAAC,AACb,EAAC,CAAO,AAAC,AACT,EAAC,CAAO,AAAC,AACT,EAAC,CAAU,AAAC,AACZ,EAAC,CAAc,AAAC,AAahB,aAAY,CAAO,CAAE,CAAO,CAAE,CAC5B,KAAK,CAAC,GACN,IAAI,CAAC,CAAC,CAAM,CAAG,EAAQ,MAAM,CAC7B,IAAI,CAAC,CAAC,CAAU,CAAG,IAAI,CAAC,CAAC,CAAM,CAAG,EAClC,IAAI,CAAC,CAAC,CAAK,CAAG,EAAQ,KAAK,CAC3B,IAAI,CAAC,CAAC,CAAS,CAAG,IAAI,CAAC,CAAC,CAAK,CAAG,EAChC,IAAI,CAAC,CAAC,CAAS,CAAG,EAAQ,SAAS,CACnC,IAAI,CAAC,CAAC,CAAW,CAAG,EAAQ,WAAW,CACvC,IAAI,CAAC,CAAC,CAAO,CAAG,EAAQ,OAAO,EAAI,EACnC,IAAI,CAAC,CAAC,CAAO,CAAG,EAAQ,OAAO,EAAI,EACnC,IAAI,CAAC,QAAQ,CAAC,EAChB,CAKA,SAAS,CAAU,CAAE,CACnB,IAAI,CAAC,CAAC,CAAU,CAAG,KAAK,GAAG,CAAC,EAAY,GAAK,IAAI,CAAC,CAAC,CAAM,CACzD,IAAI,CAAC,CAAC,CAAc,CAAG,GAAM,IAAI,CAAC,CAAC,CAAU,AAC/C,CAMA,UAAU,CAAQ,CAAE,CAClB,IAAM,EAAY,EAAS,CAAC,CAAG,IAAI,CAAC,CAAC,CAAU,CAAG,IAAI,CAAC,CAAC,CAAO,CACzD,EACJ,EAAS,CAAC,CAAG,IAAI,CAAC,CAAC,CAAU,CAAG,IAAI,CAAC,CAAC,CAAU,CAAG,IAAI,CAAC,CAAC,CAAO,CAE5D,EAAI,EAAS,CAAC,CAAG,IAAI,CAAC,CAAC,CAAS,CAAG,IAAI,CAAC,CAAC,CAAO,AAClD,CAAA,IAAI,CAAC,CAAC,CAAS,GACjB,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAG,IAAI,CAAC,CAAC,CAAS,CACzC,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,EAAG,EAAS,IAAI,CAAC,CAAC,CAAK,CAAE,IAAI,CAAC,CAAC,CAAU,GAE9D,IAAI,CAAC,CAAC,CAAW,GACnB,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAG,IAAI,CAAC,CAAC,CAAW,CAC7C,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAC,EAAG,EAAW,IAAI,CAAC,CAAC,CAAK,CAAE,IAAI,CAAC,CAAC,CAAM,GAGlE,IAAI,CAAC,kBAAkB,CAAG,IAAI,EAC5B,EACA,EACA,IAAI,CAAC,CAAC,CAAK,CACX,IAAI,CAAC,CAAC,CAAM,CAEhB,CACF,CAGO,MAAM,WAA+B,GAC1C,CAAC,CAAc,AAAC,AAWhB,aAAY,CAAO,CAAE,CAAO,CAAE,CAC5B,KAAK,CAAC,GACN,IAAM,EAAU,KAAK,GAAG,CACtB,EAAQ,UAAU,CAAC,MAAM,EAAI,EAC7B,EAAQ,YAAY,CAAC,MAAM,EAAI,GAEjC,GAAI,AAAY,IAAZ,EAAe,CACjB,AAAA,EAAI,KAAK,CAAC,4DACV,MACF,CACA,IAAI,CAAC,CAAC,CAAc,CAAG,EAAE,CACzB,IAAM,EAAa,EAAQ,QAAQ,CAAG,EAClC,EAAY,CAAC,EAAQ,QAAQ,CAAG,EAAI,EAAa,EAErD,IAAK,IAAI,EAAQ,EAAG,EAAQ,EAAS,IACnC,IAAI,CAAC,CAAC,CAAc,CAAC,IAAI,CACvB,IAAI,GAA0B,EAAS,CACrC,MAAO,EACP,OAAQ,EAAQ,QAAQ,CACxB,UAAW,EAAQ,UAAU,EAAE,CAAC,EAAM,CACtC,YAAa,EAAQ,YAAY,EAAE,CAAC,EAAM,CAC1C,QAAS,EAAY,EAAa,EAClC,QAAS,CACX,GAGN,CAOA,SAAS,CAAU,CAAE,CAAU,CAAE,CAC/B,IAAI,CAAC,CAAC,CAAc,CAAC,EAAW,EAAE,SAAS,EAC7C,CAMA,OAAO,CAAQ,CAAE,CACf,IAAI,CAAC,CAAC,CAAc,EAAE,QAAQ,AAAC,GAAa,EAAS,MAAM,CAAC,GAC9D,CACF,CAmFO,MAAM,WAAkC,GAE7C,CAAC,CAAY,AAAC,AAEd,EAAC,CAAS,AAAC,AAOX,aAAY,CAAO,CAAE,CAAe,CAAE,CACpC,KAAK,CAAC,GACF,GAAiB,iBACnB,IAAI,CAAC,CAAC,CAAS,CAAG,EAClB,IAAI,CAAC,CAAC,CAAY,CAAG,IAAI,CAAC,CAAC,CAAS,CAAC,eAAe,IAEpD,IAAI,CAAC,CAAC,CAAY,CAAG,EAEnB,IAAI,CAAC,CAAC,CAAY,EACpB,IAAI,CAAC,kBAAkB,CAAC,KAAK,CAAG,IAAI,CAAC,CAAC,CAAY,EAAE,OAAS,EAC7D,IAAI,CAAC,kBAAkB,CAAC,MAAM,CAAG,IAAI,CAAC,CAAC,CAAY,EAAE,QAAU,GAE/D,AAAA,EAAI,KAAK,CAAC,uCAAwC,EAEtD,CAMA,UAAU,CAAQ,CAAE,CAClB,GAAI,CAAC,IAAI,CAAC,CAAC,CAAY,CACrB,OAEF,IAAM,EAAQ,IAAI,CAAC,CAAC,CAAS,CACzB,IAAI,CAAC,CAAC,CAAS,CAAC,eAAe,GAC/B,IAAI,CAAC,CAAC,CAAY,AAEtB,CAAA,IAAI,CAAC,kBAAkB,CAAC,CAAC,CAAG,EAAS,CAAC,CAAG,IAAI,CAAC,kBAAkB,CAAC,KAAK,CAAG,EACzE,IAAI,CAAC,kBAAkB,CAAC,CAAC,CAAG,EAAS,CAAC,CAAG,IAAI,CAAC,kBAAkB,CAAC,MAAM,CAAG,EAE1E,IAAI,CAAC,QAAQ,CAAC,SAAS,CACrB,EAAM,KAAK,CACX,EAAS,CAAC,CAAG,EAAM,OAAO,CAC1B,EAAS,CAAC,CAAG,EAAM,OAAO,CAE9B,CACF,CDlgBO,MAAM,GAEX,CAAC,CAAQ,CAAG,IAAI,EAAS,EAAG,EAAG,EAAG,AAElC,EAAC,CAAQ,CAAG,IAAI,EAAS,EAAG,EAAG,EAAG,AAElC,EAAC,CAAQ,AAAC,AAEV,EAAC,CAAc,AAAC,AAEhB,CAAA,QAAS,AAET,CAAA,OAAQ,AAER,CAAA,OAAQ,AAOR,aAAY,CAAO,CAAE,CACnB,IAAI,CAAC,CAAC,CAAQ,CAAG,GAAS,SAC1B,IAAI,CAAC,CAAC,CAAc,CAAG,MAAM,OAAO,CAAC,IAAI,CAAC,CAAC,CAAQ,EACnD,IAAI,CAAC,OAAO,CAAG,CAAA,EACf,IAAI,CAAC,OAAO,CAAG,CACjB,CAKA,IAAI,UAAW,CACb,OAAO,IAAI,CAAC,CAAC,CAAQ,AACvB,CAMA,IAAI,SAAS,CAAY,CAAE,CACzB,IAAI,CAAC,CAAC,CAAQ,CAAC,CAAC,CAAG,IAAI,CAAC,WAAW,CAAC,EAAa,CAAC,EAClD,IAAI,CAAC,CAAC,CAAQ,CAAC,CAAC,CAAG,IAAI,CAAC,WAAW,CAAC,EAAa,CAAC,EAClD,IAAI,CAAC,CAAC,CAAQ,CAAC,QAAQ,CAAG,IAAI,CAAC,WAAW,CAAC,EAAa,QAAQ,CAClE,CAOA,IAAI,UAAW,CACb,OAAO,IAAI,CAAC,CAAC,CAAQ,AACvB,CAMA,IAAI,SAAS,CAAY,CAAE,CACzB,IAAI,CAAC,CAAC,CAAQ,CAAC,CAAC,CAAG,IAAI,CAAC,WAAW,CAAC,EAAa,CAAC,EAClD,IAAI,CAAC,CAAC,CAAQ,CAAC,CAAC,CAAG,IAAI,CAAC,WAAW,CAAC,EAAa,CAAC,EAClD,IAAI,CAAC,CAAC,CAAQ,CAAC,QAAQ,CAAG,IAAI,CAAC,WAAW,CAAC,EAAa,QAAQ,CAClE,CAOA,YAAY,CAAK,CAAE,CACjB,MAAO,AAAiB,UAAjB,OAAO,EAAqB,EAAQ,CAC7C,CAMA,OAAO,CAAY,CAAE,CACf,IAAI,CAAC,QAAQ,EACf,CAAA,IAAI,CAAC,QAAQ,CAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAE,EAD7C,EAGI,IAAI,CAAC,OAAO,EACd,IAAI,CAAC,CAAC,CAAM,EAEhB,CAIA,CAAC,CAAM,GACA,IAAI,CAAC,CAAC,CAAQ,GAGd,IAAI,CAAC,CAAC,CAAQ,CAAC,OAAO,CAGzB,IAAI,CAAC,CAAC,CAAQ,CAAC,OAAO,CAAC,AAAC,GACtB,EAAS,MAAM,CAAC,IAAI,CAAC,CAAC,CAAQ,CAAE,IAAI,CAAC,OAAO,GAH9C,IAAI,CAAC,CAAC,CAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAQ,CAAE,IAAI,CAAC,OAAO,EAMtD,CAKA,gBAAiB,CACf,IAAM,EAAe,IAAI,CAAC,CAAC,CAAQ,CAAC,oBAAoB,GACxD,OAAO,IAAI,EACT,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAG,EAAa,KAAK,CAAG,EACvC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAG,EAAa,MAAM,CAAG,EACxC,EAAa,KAAK,CAClB,EAAa,MAAM,CAEvB,CACF,CStHO,MAAM,GAEX,iBAAkB,AAElB,EAAC,CAAW,AAAC,AAEb,EAAC,CAAa,AAAC,AAEf,EAAC,CAAc,AAAC,AAMhB,aAAY,CAAiB,CAAE,CAC7B,IAAI,CAAC,CAAC,CAAa,CAAG,EACtB,IAAI,CAAC,CAAC,CAAc,CAAG,EACvB,IAAI,CAAC,iBAAiB,CAAG,CAC3B,CASA,yBAAyB,CAAM,CAAE,EAhCN,EAgC2C,CAAE,CAEtE,OADA,IAAI,CAAC,CAAC,CAAc,CAAG,EAChB,IAAI,QAAQ,AAAC,IAClB,IAAI,CAAC,CAAC,CAAW,CAAG,EACpB,EAAO,QAAQ,CAAG,IAAI,AACxB,EACF,CAMA,0BAA0B,CAAM,CAAE,CAChC,EAAO,QAAQ,CAAG,IAAI,AACxB,CAaA,OAAO,CAAM,CAAE,CAAY,CAAE,CACvB,IAAI,CAAC,CAAC,CAAW,EACnB,CAAA,IAAI,CAAC,CAAC,CAAa,EAAI,CADzB,EAGI,IAAI,CAAC,iBAAiB,EACxB,CAAA,IAAI,CAAC,iBAAiB,CAAG,IAAI,CAAC,iBAAiB,EAAE,OAC/C,EACA,EAHJ,EAOA,IAAM,EAAe,IAAI,CAAC,QAAQ,CAAC,EAAQ,SAC3C,AAAI,CAAC,GAAgB,IAAI,CAAC,CAAC,CAAa,CAAG,IAAI,CAAC,CAAC,CAAc,EAC7D,IAAI,CAAC,CAAC,CAAW,GAAG,MACb,MAEF,CACT,CAOA,SAAS,CAAY,CAAE,CAAkB,CAAE,CAEzC,OADA,AAAA,EAAI,KAAK,CAAC,kCACH,IAAI,AACb,CACF,CDrFO,MAAM,WAAkB,GAC7B,CAAC,CAAkB,AAAC,AAUpB,aAAY,CAAY,CAAE,CAAiB,CAAE,CAC3C,KAAK,CAAC,GACN,IAAI,CAAC,CAAC,CAAkB,CAAG,EAAI,KAAK,GAAG,CAAC,EAAc,GACxD,CASA,SAAS,CAAM,CAAE,CAAY,CAAE,CAK7B,OAJA,EAAO,OAAO,CAAG,KAAK,GAAG,CACvB,EACA,EAAO,OAAO,CAAG,EAAe,IAAI,CAAC,CAAC,CAAkB,EAEnD,EAAO,OAAO,CAAG,EAAI,IAAI,CAAG,IACrC,CACF,CEjCA,MAAM,GAEJ,CAAC,CAAK,AAAC,AAEP,EAAC,CAAM,AAAC,AAOR,aAAY,CAAK,CAAE,CAAM,CAAE,CACzB,IAAI,CAAC,CAAC,CAAK,CAAG,EACd,IAAI,CAAC,CAAC,CAAM,CAAG,CACjB,CAQA,sBAAsB,CAAM,CAAE,CAAM,CAAE,QACpC,AAAI,IAAI,CAAC,CAAC,CAAM,CACP,IAAI,CAAC,CAAC,CAAK,CAIX,AAAC,CAAA,EAAI,GADV,CAAA,KAAK,GAAG,CAAC,EAAO,CAAC,CAAG,EAAO,CAAC,EAAI,KAAK,GAAG,CAAC,EAAO,CAAC,CAAG,EAAO,CAAC,CAAA,CAC5C,EAAc,IAAI,CAAC,CAAC,CAAK,AAE/C,CACF,CAIO,MAAM,WAAsB,GAEjC,CAAC,CAAO,AAAC,AAET,EAAC,CAAW,AAAC,AAKb,aAAY,CAAiB,CAAE,CAC7B,KAAK,CAAC,EACR,CAQA,SAAS,CAAM,CAAE,CAAY,CAAE,CAC7B,IAAM,EAAW,EAAO,QAAQ,CAC1B,EAAW,EAAO,QAAQ,CAOhC,OALA,EAAS,CAAC,EAAI,EAAS,CAAC,CAAG,EAC3B,EAAS,CAAC,EAAI,EAAS,CAAC,CAAG,EAE3B,EAAO,QAAQ,CAAG,EAClB,EAAO,QAAQ,CAAG,EACX,IAAI,AACb,CACF,CA6FO,MAAM,WAAgB,GAE3B,CAAC,CAAI,AAAC,AAEN,EAAC,CAAa,AAAC,AAEf,EAAC,CAAa,AAAC,AAWf,aAAY,CAAO,CAAE,CAAiB,CAAE,CACtC,KAAK,CAAC,GACN,IAAI,CAAC,CAAC,CAAI,CAAG,EAAQ,IAAI,CACzB,IAAI,CAAC,CAAC,CAAa,CAAG,EAAQ,aAAa,CAC3C,IAAI,CAAC,CAAC,CAAa,CAAG,IAAI,GAAc,EAAQ,KAAK,CAAE,EAAQ,MAAM,CACvE,CAQA,SAAS,CAAM,CAAE,CAAY,CAAE,CAC7B,IAAM,EAAU,IAAI,CAAC,CAAC,CAAI,CAAC,QAAQ,CAC7B,EAAY,EAAO,QAAQ,CAC3B,EAAgB,IAAI,CAAC,CAAC,CAAa,CAAC,qBAAqB,CAC7D,EACA,GAGF,GAAI,CAAC,EAAU,YAAY,CAAC,EAAS,IAAI,CAAC,CAAC,CAAa,EAAG,CACzD,IAAM,EAAQ,EAAU,mBAAmB,CAAC,EAC5C,CAAA,EAAO,QAAQ,CAAC,CAAC,CAAG,EAAgB,KAAK,GAAG,CAAC,GAC7C,EAAO,QAAQ,CAAC,CAAC,CAAG,EAAgB,KAAK,GAAG,CAAC,GAC7C,IAAM,EAAK,EAAO,QAAQ,CAAC,CAAC,CAAG,EACzB,EAAK,EAAO,QAAQ,CAAC,CAAC,CAAG,CAC/B,CAAA,EAAO,QAAQ,CAAC,CAAC,EAAI,IAAI,CAAC,UAAU,CAAC,EAAI,EAAQ,CAAC,CAAE,EAAU,CAAC,EAC/D,EAAO,QAAQ,CAAC,CAAC,EAAI,IAAI,CAAC,UAAU,CAAC,EAAI,EAAQ,CAAC,CAAE,EAAU,CAAC,CACjE,CACA,OAAO,IAAI,AACb,CAQA,WAAW,CAAW,CAAE,CAAW,CAAE,CAAY,CAAE,CACjD,IAAM,EAAmB,EAAc,SACvC,AAAI,AAAyB,EAAzB,KAAK,IAAI,CAAC,GACL,KAAK,GAAG,CAAC,EAAa,GAEtB,KAAK,GAAG,CAAC,EAAa,EAEjC,CACF,CAMO,MAAM,WAAqB,GAEhC,CAAC,CAAI,AAAC,AAEN,EAAC,CAAK,AAAC,AAEP,EAAC,CAAW,AAAC,AAEb,EAAC,CAAa,AAAC,AASf,aAAY,CAAO,CAAE,CAAiB,CAAE,CACtC,KAAK,CAAC,GACN,IAAI,CAAC,CAAC,CAAI,CAAG,EAAQ,IAAI,CACzB,IAAI,CAAC,CAAC,CAAK,CAAG,EACd,IAAI,CAAC,CAAC,CAAW,CAAG,EAAQ,IAAI,CAAC,EAAE,CACnC,IAAI,CAAC,CAAC,CAAa,CAAG,IAAI,GAAc,EAAQ,KAAK,CAAE,EAAQ,MAAM,CACvE,CAQA,SAAS,CAAO,CAAE,CAAY,CAAE,CAC9B,IAAM,EAAa,EAAQ,QAAQ,CAC7B,EAAgB,IAAI,CAAC,CAAC,CAAa,CAAC,qBAAqB,CAC7D,IAAI,CAAC,CAAC,CAAW,CACjB,GAEI,EAAQ,EAAW,mBAAmB,CAAC,IAAI,CAAC,CAAC,CAAW,CAC9D,CAAA,EAAQ,QAAQ,CAAC,CAAC,CAAG,EAAgB,KAAK,GAAG,CAAC,GAC9C,EAAQ,QAAQ,CAAC,CAAC,CAAG,EAAgB,KAAK,GAAG,CAAC,GAC9C,IAAM,EAAK,EAAQ,QAAQ,CAAC,CAAC,CAAG,EAC1B,EAAK,EAAQ,QAAQ,CAAC,CAAC,CAAG,EAGhC,GAFA,EAAW,CAAC,EAAI,IAAI,CAAC,UAAU,CAAC,EAAI,IAAI,CAAC,CAAC,CAAW,CAAC,CAAC,CAAE,EAAW,CAAC,EACrE,EAAW,CAAC,EAAI,IAAI,CAAC,UAAU,CAAC,EAAI,IAAI,CAAC,CAAC,CAAW,CAAC,CAAC,CAAE,EAAW,CAAC,EACjE,EAAW,YAAY,CAAC,IAAI,CAAC,CAAC,CAAW,EAA7C,CACE,GAAI,EAAE,IAAI,CAAC,CAAC,CAAK,EAAI,IAAI,CAAC,CAAC,CAAI,CAAC,MAAM,CAGpC,OAFA,EAAQ,QAAQ,CAAC,CAAC,CAAG,EACrB,EAAQ,QAAQ,CAAC,CAAC,CAAG,EACd,IAAI,CAAC,iBAAiB,AAE7B,CAAA,IAAI,CAAC,CAAC,CAAW,CAAG,IAAI,CAAC,CAAC,CAAI,CAAC,IAAI,CAAC,CAAC,CAAK,CAAC,A,CAG/C,OAAO,IAAI,AACb,CAQA,WAAW,CAAW,CAAE,CAAW,CAAE,CAAY,CAAE,CACjD,IAAM,EAAmB,EAAc,SACvC,AAAI,AAAyB,EAAzB,KAAK,IAAI,CAAC,GACL,KAAK,GAAG,CAAC,EAAa,GAEtB,KAAK,GAAG,CAAC,EAAa,EAEjC,CACF,CXzRO,SAAS,GAAmB,CAAQ,CAAE,CAAO,EAClD,IAAM,EAAS,IAAI,GAAO,CACxB,SAAU,CACZ,EACA,CAAA,EAAO,QAAQ,CAAG,EAAQ,QAAQ,CAClC,EAAO,QAAQ,CAAG,EAAQ,QAAQ,CAClC,AAAA,GAAM,gBAAgB,CAAC,GACvB,IAAI,GAAU,EAAQ,YAAY,CAAE,IAAI,IACrC,wBAAwB,CAAC,EAAQ,IACjC,IAAI,CAAC,IAAM,AAAA,GAAM,mBAAmB,CAAC,GAC1C,CAyBO,SAAS,GAAc,CAAI,CAAE,CAAO,EACzC,GACE,IAAI,GAAyB,AAAA,EAAO,YAAY,GAAI,GACpD,EAEJ,CapDO,SAAS,GAAS,EAAQ,CAAC,EAChC,OAAO,EAA4B,EAAG,EACxC,CGLA,IAAA,GAJsB,CACpB,UAAW,EACb,ECmDA,MAAM,GAAkB,IAnDxB,MAKE,CAAC,CAAK,AAAC,AAKP,cAAc,CACZ,IAAI,CAAC,CAAC,CAAK,CAAG,IAAI,GACpB,CAMA,IAAI,CAAG,CAAE,CAAK,CAAE,CACd,IAAI,CAAC,CAAC,CAAK,CAAC,GAAG,CAAC,EAAK,GACrB,GAAI,CACF,aAAa,OAAO,CAAC,EAAK,KAAK,SAAS,CAAC,GAC3C,CAAE,MAAO,EAAO,CACd,AAAA,EAAI,KAAK,CAAC,CAAC,qBAAqB,EAAE,EAAM,OAAO,CAAC,CAAC,CACnD,CACF,CAQA,IAAI,CAAG,CAAE,CAAY,CAAE,CACrB,GAAI,IAAI,CAAC,CAAC,CAAK,CAAC,GAAG,CAAC,GAClB,OAAO,IAAI,CAAC,CAAC,CAAK,CAAC,GAAG,CAAC,GAEzB,IAAI,EAAQ,EACZ,GAAI,CACF,IAAM,EAAe,aAAa,OAAO,CAAC,EACrB,QAAjB,GACF,CAAA,EAAQ,KAAK,KAAK,CAAC,EADrB,CAGF,CAAE,MAAO,EAAO,CACd,AAAA,EAAI,KAAK,CAAC,CAAC,uCAAuC,EAAE,EAAM,OAAO,CAAC,CAAC,CACrE,CAEA,OADA,IAAI,CAAC,CAAC,CAAK,CAAC,GAAG,CAAC,EAAK,GACd,CACT,CACF,CFUO,OAAM,GAIX,OAAQ,AAER,CAAA,EAAG,AAGH,aAAY,CAAO,CAAE,CACnB,IAAI,CAAC,OAAO,CAAG,SAAS,aAAa,CAAC,UACtC,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,SAAS,cAAc,CAAC,EAAQ,KAAK,EAChE,CACF,CAKO,MAAM,GAEX,CAAC,CAAQ,AAAC,AAEV,EAAC,CAAU,AAAC,AAEZ,EAAC,CAAO,AAAC,AAET,EAAC,CAAO,AAAC,AAET,EAAC,EAAQ,AAAC,AAEV,CAAA,MAAO,AAEP,CAAA,EAAG,AAeH,aAAY,CAAO,CAAE,CACnB,GAAI,CAAC,EAAQ,aAAa,EAAI,CAAC,EAAQ,MAAM,CAC3C,MAAM,MACJ,8FAGJ,CAAA,IAAI,CAAC,EAAE,CAAG,EAAQ,EAAE,CACpB,IAAM,EAAS,SAAS,aAAa,CAAC,UACtC,GAAI,EAAQ,WAAW,CAAE,CACvB,IAAI,CAAC,CAAC,CAAQ,CAAG,AAAA,GAAc,eAAe,CAAC,EAAG,EAAQ,WAAW,EACrE,IAAI,CAAC,CAAC,CAAU,CAAG,EAAQ,aAAa,CACpC,AAAA,GAAc,eAAe,CAAC,EAAG,EAAQ,aAAa,EACtD,IAAI,CAAC,CAAC,CAAQ,CAClB,IAAM,EAAS,SAAS,aAAa,CAAC,UACtC,EAAO,YAAY,CAAC,QAAS,AAAA,GAAc,SAAS,EACpD,EAAO,YAAY,CAAC,SAAU,AAAA,GAAc,SAAS,EACrD,IAAI,CAAC,CAAC,CAAO,CAAG,EAAO,UAAU,CAAC,MAClC,EAAO,WAAW,CAAC,EACrB,CAEI,EAAQ,aAAa,EAAI,CAAC,IAAI,CAAC,CAAC,CAAO,EACzC,IAAI,CAAC,CAAC,CAAO,CAAG,EAChB,EAAO,SAAS,CAAC,GAAG,CAAC,wBAErB,AADa,IAAI,CAAC,CAAC,CAAO,CAAC,WAAW,CAAC,SAAS,aAAa,CAAC,SACzD,WAAW,CAAC,SAAS,cAAc,CAAC,EAAQ,KAAK,KAEtD,EAAO,SAAS,CAAC,GAAG,CAAC,wBACrB,IAAI,CAAC,CAAC,CAAO,CAAG,SAAS,aAAa,CAAC,SACvC,IAAI,CAAC,CAAC,CAAO,CAAC,WAAW,CAAC,SAAS,cAAc,CAAC,EAAQ,KAAK,GAC/D,IAAI,CAAC,CAAC,CAAO,CAAC,WAAW,CAAC,IAE5B,IAAI,CAAC,CAAC,CAAO,CAAC,gBAAgB,CAAC,YAAa,IAAM,IAAI,CAAC,CAAC,EAAO,IAC/D,IAAI,CAAC,CAAC,CAAO,CAAC,gBAAgB,CAAC,aAAc,IAAM,IAAI,CAAC,CAAC,EAAO,GAAI,CAClE,QAAS,CAAA,CACX,GACA,IAAI,CAAC,CAAC,CAAO,CAAC,gBAAgB,CAAC,UAAW,SAAY,IAAI,CAAC,CAAC,EAAQ,IACpE,IAAI,CAAC,CAAC,CAAO,CAAC,gBAAgB,CAAC,WAAY,SAAY,IAAI,CAAC,CAAC,EAAQ,IACrE,IAAI,CAAC,CAAC,CAAO,CAAC,gBAAgB,CAAC,cAAe,IAAM,IAAI,CAAC,CAAC,EAAS,IACnE,IAAI,CAAC,QAAQ,CAAG,CAAA,EAChB,IAAI,CAAC,MAAM,CAAG,EAAQ,MAAM,AAC9B,CAKA,IAAI,SAAU,CACZ,OAAO,IAAI,CAAC,CAAC,CAAO,AACtB,CAMA,IAAI,UAAW,CACb,OAAO,IAAI,CAAC,CAAC,EAAQ,AACvB,CAMA,IAAI,SAAS,CAAK,CAAE,CAClB,IAAI,CAAC,CAAC,EAAQ,CAAG,EACjB,IAAI,CAAC,CAAC,EAAkB,EAC1B,CAGA,CAAC,EAAO,GACN,IAAI,CAAC,CAAC,EAAS,CAAC,IAAI,CAAC,CAAC,CAAU,CAClC,CAGA,CAAC,EAAQ,GACP,IAAI,CAAC,CAAC,EAAQ,CAAG,CAAC,IAAI,CAAC,CAAC,EAAQ,CAChC,IAAI,CAAC,CAAC,EAAkB,EAC1B,CAGA,CAAC,EAAS,GACR,IAAI,CAAC,CAAC,EAAkB,EAC1B,CAGA,CAAC,EAAkB,GACjB,IAAI,CAAC,CAAC,EAAS,CAAC,IAAI,CAAC,CAAC,EAAQ,CAAG,IAAI,CAAC,CAAC,CAAU,CAAG,IAAI,CAAC,CAAC,CAAQ,CACpE,CAMA,CAAC,EAAS,CAAC,CAAY,EACrB,IAAI,CAAC,CAAC,CAAO,CAAC,SAAS,CACrB,EACA,EACA,AAAA,GAAc,SAAS,CACvB,AAAA,GAAc,SAAS,EAEzB,IAAI,CAAC,CAAC,CAAO,CAAC,SAAS,CACrB,EAAa,KAAK,CAClB,GAAO,CAAA,AAAA,GAAc,SAAS,CAAG,EAAa,KAAK,AAAL,EAC9C,GAAO,CAAA,AAAA,GAAc,SAAS,CAAG,EAAa,MAAM,AAAN,EAElD,CACF,CAKO,MAAM,WAAwB,GAKnC,YAAY,CAAK,CAAE,CACjB,KAAK,CAAC,CACJ,MAAO,EACP,YAAa,oBACb,cAAe,oBACf,cAAe,CAAA,EACf,OAAQ,IACV,EACF,CACF,CAMO,MAAM,GAAc,CACzB,YAAa,cACb,SAAU,UACZ,ED/NA,SAAS,GAAqB,CAAO,EACnC,IAAM,EAAU,SAAS,aAAa,CAAC,OAGvC,OAFA,EAAQ,SAAS,CAAG,EACpB,EAAQ,SAAS,CAAC,GAAG,CAAC,CAAC,aAAa,EAC7B,CACT,CA8EA,IAAA,GANW,CACT,YAnEF,SAAqB,CAAO,EAC1B,IAAM,EAAQ,SAAS,aAAa,CAAC,OACrC,EAAM,WAAW,CAAC,SAAS,cAAc,CAAC,IAC1C,EAAM,SAAS,CAAG,QAClB,EAAM,KAAK,CAAC,OAAO,CAAG,EACtB,SAAS,IAAI,CAAC,WAAW,CAAC,GAC1B,EAAM,gBAAgB,CAAC,QAAS,IAAM,EAAM,MAAM,GACpD,EA6DE,aArDF,SAAsB,CAAO,CAAE,EAAgB,IAAI,CAAE,CAAS,EAC5D,IAAM,EAAY,SAAS,aAAa,CAAC,OACzC,EAAU,WAAW,CAAC,GAAqB,IAC3C,IAAM,EAAW,SAAS,aAAa,CAAC,UAGxC,OAFA,EAAS,WAAW,CAAC,SAAS,cAAc,CAAC,IAC7C,EAAU,WAAW,CAAC,GACf,AAAA,EAAO,cAAc,CAC1B,EACA,CACE,CACE,QAAS,EACT,SA/CF,EAgDE,OAAQ,CAAA,CACV,EACD,CACD,EAEJ,EAqCE,mBA7BF,SAA4B,CAAO,CAAE,CAAa,CAAE,CAAS,EAC3D,IAAM,EAAY,SAAS,aAAa,CAAC,OACzC,EAAU,WAAW,CAAC,GAAqB,IAC3C,IAAM,EAAU,EAAE,CAYlB,GAXA,GAAe,QAAQ,AAAC,IACtB,EAAU,WAAW,CAAC,EAAO,OAAO,EAChC,EAAO,MAAM,CACf,EAAO,OAAO,CAAC,gBAAgB,CAAC,QAAS,IAAM,EAAO,MAAM,IAE5D,EAAQ,IAAI,CAAC,CACX,QAAS,EAAO,OAAO,CACvB,SAAU,EAAO,EAAE,AACrB,EAEJ,GACI,AAAmB,IAAnB,EAAQ,MAAM,CAAQ,CACxB,IAAM,EAAW,IAAI,GAAkB,CAAE,MAAO,IAAK,GACrD,EAAU,WAAW,CAAC,EAAS,OAAO,EACtC,EAAQ,IAAI,CAAC,EACf,CACA,OAAO,AAAA,EAAO,cAAc,CAAC,EAAW,EAAS,EACnD,CASA,CftFO,OAAM,GAEX,KAAM,AAMN,aAAY,CAAK,CAAE,CACjB,IAAI,CAAC,KAAK,CAAG,CACf,CAKA,MAAM,CAAa,CAAE,CACnB,OAAO,QAAQ,OAAO,EACxB,CAMA,MAAM,CAAa,CAAE,CACnB,OAAO,QAAQ,OAAO,EACxB,CAQA,YAAY,CAAa,CAAE,CACzB,MAAO,CAAA,CACT,CACF,CAMO,MAAM,WAAc,GAKzB,YAAY,CAAK,CAAE,CACjB,KAAK,CAAC,EACR,CAMA,MAAM,CAAO,CAAE,CACb,OAAO,IAAI,CAAC,CAAC,EAAuB,CAAC,IAAI,CAAC,KAAK,CAAE,EACnD,CAMA,MAAM,CAAO,CAAE,CACb,OAAO,IAAI,CAAC,CAAC,EAAuB,CAAC,EAAS,IAAI,CAAC,KAAK,CAC1D,CAQA,YAAY,CAAO,CAAE,QACnB,AAA4B,IAAI,CAAC,KAAK,CanEjC,AAAA,GAAS,IAAM,KboElB,AAAA,GAAc,iBAAkB,CAC9B,aAAc,EACd,SAAU,EAAQ,QAAQ,CAC1B,SAAU,IAAI,EAAS,EAAG,KAAM,EAClC,GACO,CAAA,EAGX,CAQA,CAAC,EAAa,CAAC,CAAQ,CAAE,CAAQ,EAC/B,IAAM,EAAa,AAAA,EAAM,IAAI,CAAC,EAAS,QAAQ,EAS/C,OAAO,AAJc,IAAI,GAAa,CACpC,KAAM,CALY,IAAI,EACtB,EAAS,QAAQ,CAAC,CAAC,CAAG,GAAO,CAAA,EAAS,QAAQ,CAAC,CAAC,CAAG,EAAS,QAAQ,CAAC,CAAA,AAAA,EACrE,EAAS,QAAQ,CAAC,CAAC,CAAG,GAAO,CAAA,EAAS,QAAQ,CAAC,CAAC,CAAG,EAAS,QAAQ,CAAC,CAAC,AAAD,GAGjD,EAAW,CAC/B,MAAO,GACT,GACoB,wBAAwB,CAAC,EAAS,MAAM,CAC9D,CASA,CAAC,EAAe,CAAC,CAAQ,CAAE,CAAQ,EACjC,OAAO,IAAI,QAAQ,AAAC,QCrFO,EAAO,EDsFhC,GapHG,AAAA,GAAS,IAAM,GZ8BO,EDgGrB,AAAA,GAAc,eAAe,CAC3B,EACA,AkBlFG,GlBkFa,GAAG,CAAC,YAAc,kBAAoB,WClG5B,EDoG5B,CACE,aAAc,EACd,SAAU,EAAS,QAAQ,CAC3B,SAAU,IAAI,EAAS,EAAG,EAAG,EAC/B,ECvGR,GACE,IAAI,GAA0B,AAAA,EAAO,YAAY,GAAI,GACrD,ODmFwC,CACpC,AAAA,GAAc,SAAU,CACtB,aAAc,EACd,SAAU,EAAS,QAAQ,CAC3B,SAAU,IAAI,EAAS,EAAG,KAAM,EAClC,GACA,IACA,MACF,CAaA,IAAI,EAAa,EAAS,MAAM,CAAC,GAAG,CAAC,MAC/B,EatHH,AAAA,GAAS,GbuHZ,EAAa,KAAK,GAAG,CAAC,EAAG,EAAa,GACtC,EAAS,MAAM,CAAC,GAAG,CAAC,KAAM,GACtB,AAAe,IAAf,GACF,AAAA,EAAI,IAAI,CAAC,iBACT,EAAS,WAAW,CAAG,IAAI,GAC3B,EAAS,KAAK,CAAG,CAAA,GAEjB,AAAA,GAAc,CAAC,CAAC,EAAE,EAAO,GAAG,CAAC,CAAE,CAC7B,aAAc,EACd,SAAU,EAAS,QAAQ,CAC3B,SAAU,IAAI,EAAS,EAAG,KAAM,EAClC,GAEF,EAAQ,EACV,EACF,CAQA,CAAC,EAAuB,CAAC,CAAQ,CAAE,CAAQ,EACzC,OAAO,IAAI,CAAC,CAAC,EAAa,CAAC,EAAU,GAAU,IAAI,CAAC,IAClD,IAAI,CAAC,CAAC,EAAe,CAAC,EAAU,GAEpC,CACF,CAMO,MAAM,WAAqB,GAKhC,YAAY,CAAK,CAAE,CACjB,KAAK,CAAC,EACR,CAOA,MAAM,CAAa,CAAE,CACnB,OAAO,AAAA,GAAG,YAAY,CACpB,uFAEJ,CACF,CAKO,MAAM,WAAc,GAKzB,YAAY,CAAK,CAAE,CACjB,KAAK,CAAC,EACR,CAOA,MAAM,CAAa,CAAE,CACnB,OAAO,AAAA,GAAG,YAAY,CAAC,iDACzB,CACF,CmBtNO,MAAM,GAEX,CAAC,EAAO,AAAC,AAET,EAAC,EAAc,AAAC,AAEhB,EAAC,EAAa,AAAC,AAEf,EAAC,EAAW,AAAC,AAKb,CAAA,WAAW,CAAO,CAAE,CAClB,IAAI,CAAC,CAAC,EAAO,CAAG,CAClB,CAKA,kBAAkB,CAAO,CAAE,CACzB,IAAI,CAAC,CAAC,EAAc,CAAG,CACzB,CAKA,iBAAiB,CAAO,CAAE,CACxB,IAAI,CAAC,CAAC,EAAa,CAAG,CACxB,CAKA,eAAe,CAAO,CAAE,CACtB,IAAI,CAAC,CAAC,EAAW,CAAG,CACtB,CAKA,YAAY,CAAK,CAAE,CACjB,IAAI,CAAC,CAAC,EAAO,GAAG,IAAI,CAAE,EACxB,CAMA,mBAAmB,CAAK,CAAE,CACxB,IAAI,CAAC,CAAC,EAAc,GAAG,IAAI,CAAE,EAC/B,CAMA,kBAAkB,CAAK,CAAE,CACvB,IAAI,CAAC,CAAC,EAAa,GAAG,IAAI,CAAE,EAC9B,CAMA,gBAAgB,CAAK,CAAE,CACrB,IAAI,CAAC,CAAC,EAAW,GAAG,IAAI,CAAE,EAC5B,CACF,CpBlEO,MAAM,WAAc,GAEzB,eAAgB,AAEhB,CAAA,MAAO,AAEP,CAAA,MAAO,AAEP,CAAA,WAAY,AAEZ,CAAA,KAAM,AAMN,aAAY,CAAM,CAAE,CAClB,KAAK,GACL,IAAI,CAAC,WAAW,CAAG,IAAI,GACvB,IAAI,CAAC,MAAM,CAAG,EACd,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAG,CAAA,EACvB,IAAI,CAAC,eAAe,CAAG,EACvB,IAAI,CAAC,KAAK,CAAG,CAAA,CACf,CAKA,IAAI,QAAQ,CAAK,CAAE,CACjB,IAAI,CAAC,MAAM,CAAC,OAAO,CAAG,CACxB,CAKA,IAAI,SAAU,CACZ,OAAO,IAAI,CAAC,MAAM,CAAC,OAAO,AAC5B,CAKA,IAAI,UAAW,CACb,OAAO,IAAI,CAAC,MAAM,CAAC,QAAQ,AAC7B,CAMA,IAAI,SAAS,CAAK,CAAE,CAClB,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAG,CACzB,CAMA,IAAI,UAAW,CACb,OAAO,IAAI,CAAC,MAAM,CAAC,QAAQ,AAC7B,CAMA,IAAI,SAAS,CAAK,CAAE,CAClB,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAG,CACzB,CAOA,IAAI,UAAW,CACb,OAAO,IAAI,CAAC,MAAM,CAAC,QAAQ,AAC7B,CAMA,IAAI,SAAS,CAAY,CAAE,CACzB,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAG,CACzB,CAMA,aAAc,CACZ,OAAO,IAAI,EAAE,OAAO,IAAI,UAAY,QACtC,CAOA,kBAAkB,CAAgB,CAAE,CAClC,MAAO,CAAC,IAAI,CAAC,KAAK,EAAI,CAAC,IAAI,CAAC,QAAQ,AACtC,CAOA,0BAA0B,CAAgB,CAAE,CAC1C,MAAO,CAAC,IAAI,CAAC,QAAQ,AACvB,CAMA,OAAO,CAAY,CAAE,CACnB,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,EACrB,CAKA,YAAY,CAAW,CAAE,CACvB,KAAK,CAAC,YAAY,IAAI,CAAC,MAAM,CAAC,QAAQ,CACxC,CAIA,mBAAmB,CAAW,CAAE,CAC9B,KAAK,CAAC,mBAAmB,IAAI,CAAC,MAAM,CAAC,QAAQ,CAC/C,CAKA,gBAAgB,CAAW,CAAE,CAC3B,KAAK,CAAC,gBAAgB,IAAI,CAAC,MAAM,CAAC,QAAQ,CAC5C,CAIA,kBAAkB,CAAW,CAAE,CAC7B,KAAK,CAAC,kBAAkB,IAAI,CAAC,MAAM,CAAC,QAAQ,CAC9C,CACF,CsBnJO,MAAM,GAAiB,CAC5B,IAAK,EACL,KAAM,EACN,SAAU,CACZ,CAKO,OAAM,GAEX,CAAC,EAAM,AAAC,AAER,EAAC,EAAW,AAAC,AAEb,EAAC,EAAe,AAAC,AAEjB,EAAC,EAAc,AAAC,AAQhB,aAAY,CAAM,CAAE,CAAK,CAAE,EAAsB,CAAC,CAAE,CAClD,IAAM,EAAa,AAAA,EAAO,mBAAmB,GACvC,EACJ,EAAsB,KAAK,GAAG,CAAC,EAAW,KAAK,CAAE,EAAW,MAAM,CACpE,CAAA,IAAI,CAAC,CAAC,EAAM,CAAG,IAAI,GAEnB,IAAI,CAAC,CAAC,EAAW,CAAG,IAAI,GAAQ,CAC9B,KAAM,EACN,MAAO,EACP,cAAe,CACjB,GAEA,IAAI,CAAC,CAAC,EAAe,CAAG,IAAI,GAC5B,IAAI,CAAC,CAAC,EAAW,CAAC,yBAAyB,CAAC,IAAI,CAAC,CAAC,EAAM,CAC1D,CAMA,OAAO,CAAY,CAAE,CACf,IAAI,CAAC,CAAC,EAAc,GAAK,GAAe,GAAG,GAC7C,IAAI,CAAC,CAAC,EAAM,CAAC,MAAM,CAAC,GACpB,AAAA,EAAO,cAAc,CAAC,IAAI,CAAC,CAAC,EAAM,CAAC,QAAQ,EAE/C,CAMA,YAAY,CAAE,CAAE,CAAE,CAAE,CAClB,IAAI,CAAC,iBAAiB,CAAC,GAAe,QAAQ,EAC9C,IAAI,CAAC,CAAC,EAAM,CAAC,QAAQ,CAAC,CAAC,CAAG,EAC1B,IAAI,CAAC,CAAC,EAAM,CAAC,QAAQ,CAAC,CAAC,CAAG,CAC5B,CAOA,MAAM,CAAE,CAAE,CAAE,CAAE,CACZ,IAAI,CAAC,CAAC,EAAM,CAAC,QAAQ,CAAC,CAAC,EAAI,EAC3B,IAAI,CAAC,CAAC,EAAM,CAAC,QAAQ,CAAC,CAAC,EAAI,EAC3B,AAAA,EAAO,cAAc,CAAC,IAAI,CAAC,CAAC,EAAM,CAAC,QAAQ,CAC7C,CAMA,kBAAkB,CAAM,CAAE,CACxB,GAAI,IAAW,IAAI,CAAC,CAAC,EAAc,CAInC,OADA,IAAI,CAAC,CAAC,EAAc,CAAG,EACf,GACN,KAAK,GAAe,IAAI,CACtB,IAAI,CAAC,CAAC,EAAW,CAAC,yBAAyB,CAAC,IAAI,CAAC,CAAC,EAAM,EACxD,KACF,MAAK,GAAe,QAAQ,CAC1B,IAAI,CAAC,CAAC,EAAe,CAAC,yBAAyB,CAAC,IAAI,CAAC,CAAC,EAAM,EAC5D,KACF,MAAK,GAAe,GAAG,CACrB,KACF,SACE,AAAA,EAAI,KAAK,CACP,CAAC,0CAA0C,EAAE,EAAO,SAAS,CAAC,CAEpE,CACF,CACF,CD7FO,MAAM,GAAqB,CAChC,GAAI,EACJ,GAAI,EACJ,GAAI,EACJ,GAAI,CACN,CAGO,OAAM,GAEX,CAAC,EAAW,AAAC,AAGb,EAAC,EAAc,AAAC,AAGhB,EAAC,EAAmB,AAAC,AAQrB,aAAY,CAAW,CAAE,CAAQ,CAAE,CAAQ,CAAE,CAC3C,IAAI,CAAC,CAAC,EAAW,CAAG,EACpB,IAAI,CAAC,CAAC,EAAe,CAAC,EAAU,EAClC,CAOA,CAAC,EAAe,CAAC,CAAQ,CAAE,CAAQ,EACjC,IAAI,EACA,EACJ,OAAQ,GACN,KAAK,GAAmB,EAAE,CACxB,EAAU,EAAI,EACd,EAAU,EAAI,EACd,KACF,MAAK,GAAmB,EAAE,CACxB,EAAU,GAAK,EACf,EAAU,EAAI,EACd,KACF,MAAK,GAAmB,EAAE,CACxB,EAAU,GAAK,EACf,EAAU,GAAK,EACf,KACF,MAAK,GAAmB,EAAE,CACxB,EAAU,EAAI,EACd,EAAU,GAAK,CAEnB,CACA,IAAI,CAAC,CAAC,EAAkB,CAAC,EAAS,GAClC,IAAI,CAAC,CAAC,EAAkB,CAAC,EAAS,EAAS,EAC7C,CAMA,CAAC,EAAkB,CAAC,CAAO,CAAE,CAAO,EAClC,IAAI,CAAC,CAAC,EAAmB,CAAG,IAAI,GAC9B,EACA,CACE,OAAQ,kBACR,WAAY,EACZ,QAAS,EACT,OAAQ,MACV,EACA,CAAE,cAAe,EAAG,WAAY,AAAA,GAAW,IAAI,AAAC,GAElD,IAAI,CAAC,CAAC,EAAc,CAAG,AAAA,GAAI,SAAS,CAClC,IAAI,CAAC,CAAC,EAAmB,CACzB,KACE,IAAI,CAAC,gBAAgB,CAAC,CAAA,EACxB,EACA,KACE,IAAI,CAAC,gBAAgB,CAAC,CAAA,EACxB,GAEF,IAAI,CAAC,CAAC,EAAc,CAAC,QAAQ,CAAC,CAAC,CAAG,EAClC,IAAI,CAAC,CAAC,EAAc,CAAC,QAAQ,CAAC,CAAC,CAAG,EAClC,IAAI,CAAC,CAAC,EAAc,CAAC,WAAW,CAAC,KACnC,CAMA,iBAAiB,CAAE,CAAE,CACf,GACF,IAAI,CAAC,CAAC,EAAmB,CAAC,eAAe,CAAC,GAC1C,IAAI,CAAC,CAAC,EAAW,CAAC,iBAAiB,CAAC,AAAA,GAAe,IAAI,IAEvD,IAAI,CAAC,CAAC,EAAmB,CAAC,eAAe,CAAC,GAC1C,IAAI,CAAC,CAAC,EAAW,CAAC,iBAAiB,CAAC,AAAA,GAAe,GAAG,EAE1D,CAQA,CAAC,EAAkB,CAAC,CAAO,CAAE,CAAO,CAAE,CAAQ,EAC5C,IAAM,EAAc,AAnHK,EAmHkB,EAC3C,IAAI,CAAC,CAAC,EAAqB,CACzB,eACA,EACA,EAAU,EACV,KACE,IAAI,CAAC,gBAAgB,CAAC,CAAA,GACtB,IAAI,CAAC,CAAC,EAAW,CAAC,WAAW,CAAC,EAAG,CAAC,EACpC,EACA,IAAM,IAAI,CAAC,CAAC,EAAW,CAAC,iBAAiB,CAAC,AAAA,GAAe,GAAG,GAG9D,IAAI,CAAC,CAAC,EAAqB,CACzB,kBACA,EAAU,EACV,EACA,KACE,IAAI,CAAC,gBAAgB,CAAC,CAAA,GACtB,IAAI,CAAC,CAAC,EAAW,CAAC,WAAW,CAAC,EAAa,EAC7C,EACA,IAAM,IAAI,CAAC,CAAC,EAAW,CAAC,iBAAiB,CAAC,AAAA,GAAe,GAAG,GAG9D,IAAI,CAAC,CAAC,EAAqB,CACzB,iBACA,EACA,EAAU,EACV,KACE,IAAI,CAAC,gBAAgB,CAAC,CAAA,GACtB,IAAI,CAAC,CAAC,EAAW,CAAC,WAAW,CAAC,EAAG,EACnC,EACA,IAAM,IAAI,CAAC,CAAC,EAAW,CAAC,iBAAiB,CAAC,AAAA,GAAe,GAAG,GAG9D,IAAI,CAAC,CAAC,EAAqB,CACzB,iBACA,EAAU,EACV,EACA,KACE,IAAI,CAAC,gBAAgB,CAAC,CAAA,GACtB,IAAI,CAAC,CAAC,EAAW,CAAC,WAAW,CAAC,CAAC,EAAa,EAC9C,EACA,IAAM,IAAI,CAAC,CAAC,EAAW,CAAC,iBAAiB,CAAC,AAAA,GAAe,GAAG,EAEhE,CAUA,CAAC,EAAqB,CAAC,CAAe,CAAE,CAAC,CAAE,CAAC,CAAE,CAAY,CAAE,CAAU,EACpE,IAAM,EAAgB,IAAI,GACxB,EACA,CACE,OAAQ,EACR,WAAY,EACZ,QAAS,EACT,OAAQ,MACV,EACA,CAAE,cAAe,EAAG,WAAY,AAAA,GAAW,IAAI,AAAC,GAE9C,EAAS,AAAA,GAAI,kBAAkB,CACjC,EACA,EACA,EAEF,CAAA,EAAO,QAAQ,CAAC,CAAC,CAAG,EACpB,EAAO,QAAQ,CAAC,CAAC,CAAG,EACpB,EAAc,eAAe,CAAC,EAChC,CACF,CtBzLA,MAAM,GAAS,IAAI,IAGnB,IAAI,GAAU,CAAA,EA8Gd,SAAS,GAAe,CAAS,CAAE,CAAK,EACtC,IAAM,EAAiB,AAAA,EAAO,oBAAoB,CAAC,EAAM,QAAQ,EAC7D,EAAc,EAAM,MAAM,CAAC,cAAc,GAQ7C,OAAO,AAPW,IAAI,EACpB,EAAe,CAAC,CAAG,EAAY,KAAK,CAAG,EACvC,EAAe,CAAC,CAAG,EAAY,MAAM,CAAG,EACxC,EAAY,KAAK,CACjB,EAAY,MAAM,EAGH,kBAAkB,CAAC,EAAU,KAAK,CAAC,CAAC,CAAE,EAAU,KAAK,CAAC,CAAC,CAC1E,CA8CA,SAAS,GAAiB,CAAS,EACjC,GAAI,CAAC,IAGD,CAAC,GAFH,MAAO,CAAA,EAKT,IAAK,GAAM,CAAC,EAAW,EAAM,GAAI,GAC/B,GAAI,GAAe,EAAW,GAE5B,OADA,EAAM,eAAe,CAAC,EAAO,EAAU,MAAM,EACtC,CAAA,EAGX,MAAO,CAAA,CACT,CA8CA,IAAA,GAdY,CACV,UA5MF,SAAmB,CAAK,CAAE,CAAU,CAAE,CAAW,EAC/C,IAAM,EAAQ,IAAI,GAChB,IAAI,GAAO,CACT,SAAU,IAAI,GAA0B,AAAA,EAAO,YAAY,GAAI,EACjE,IAgBF,OAbA,GAAO,GAAG,CAAC,EAAO,GAClB,EAAM,UAAU,CAAC,KACV,EAEM,AAA4B,IAA5B,EAAM,eAAe,IAC9B,EAAM,eAAe,CAAC,GACtB,MAEA,EAAM,eAAe,CAAC,GACtB,KANA,GAQJ,GACA,EAAM,eAAe,CAAC,GACf,CACT,EAwLE,mBA9KF,SAA4B,CAAK,CAAE,CAAU,CAAE,CAAW,EACxD,IAAM,EAAQ,IAAI,GAChB,IAAI,GAAO,CACT,SAAU,IAAI,GAA0B,AAAA,EAAO,YAAY,GAAI,EACjE,IAYF,OATA,GAAO,GAAG,CAAC,EAAO,GAClB,EAAM,gBAAgB,CAAC,KACrB,EAAM,eAAe,CAAC,GACtB,KACF,GACA,EAAM,cAAc,CAAC,KACnB,EAAM,eAAe,CAAC,GACtB,KACF,GACO,CACT,EA8JE,MAjJF,WACE,GAAO,KAAK,EACd,EAgJE,aAzJF,SAAsB,CAAM,EAC1B,GAAO,MAAM,CAAC,EAChB,EAwJE,OA3IF,SAAgB,CAAY,EACrB,IAGL,GAAO,OAAO,CAAC,AAAC,IACd,IAAM,EAAQ,AAAA,EAAS,IAAI,CAAC,EAAO,QAAQ,CAC3C,CAAA,EAAO,QAAQ,CAAG,AAAA,EAAO,oBAAoB,CAAC,EAAO,QAAQ,EAC7D,EAAO,MAAM,CAAC,GACd,EAAO,QAAQ,CAAG,CACpB,EACF,EAkIE,qBArBF,SAA8B,CAAS,EACrC,OAAO,GAAiB,EAC1B,EAoBE,aA5FF,SAAsB,CAAS,EAC7B,GAAI,CAAC,GACH,MAAO,CAAA,EAET,IAAK,GAAM,CAAC,EAAW,EAAM,GAAI,GAC/B,GAAI,GAAe,EAAW,GAE5B,OADA,EAAM,WAAW,CAAC,EAAO,EAAU,MAAM,EAClC,CAAA,EAGX,MAAO,CAAA,CACT,EAkFE,mBAjCF,SAA4B,CAAe,EACzC,MAAO,CAAA,CACT,EAgCE,mBA5EF,SAA4B,CAAS,EACnC,GAAI,CAAC,IAGD,CAAC,GAFH,MAAO,CAAA,EAKT,IAAK,GAAM,CAAC,EAAW,EAAM,GAAI,GAC/B,GAAI,GAAe,EAAW,GAE5B,OADA,EAAM,iBAAiB,CAAC,EAAO,EAAU,MAAM,EACxC,CAAA,EAGX,MAAO,CAAA,CACT,EA+DE,iBAAkB,GAClB,WAlBF,SAAoB,CAAU,EAC5B,GAAU,CACZ,CAiBA,EwB9OO,MAAM,GAAS,CACpB,SAAU,eACV,MAAO,eACP,QAAS,cACX,E,I,G,C,EEnCA,GAAiB,IAAA,IAAoB,+CAAA,YAAA,GAAA,EAAgD,QAAQ,GDiCtF,MAAM,GAAO,CAClB,eAAA,IAAA,IAAA,GAIF,EKFM,GAAiB,CACrB,KAAM,CACJ,QAAS,OACT,OAAQ,OACR,QAAS,CACP,cAAe,IACf,WAAY,AAAA,GAAW,IAAI,AAC7B,CACF,EACA,KAAM,CACJ,QAAS,OACT,OAAQ,OACR,QAAS,CACP,cAAe,IACf,WAAY,AAAA,GAAW,OAAO,AAChC,CACF,EACA,WAAY,CACV,QAAS,SACT,OAAQ,SACR,QAAS,CACP,cAAe,IACf,WAAY,AAAA,GAAW,OAAO,AAChC,CACF,EACA,UAAW,CACT,QAAS,SACT,OAAQ,SACR,QAAS,CACP,cAAe,IACf,WAAY,AAAA,GAAW,OAAO,AAChC,CACF,EACA,WAAY,CACV,QAAS,SACT,OAAQ,SACR,QAAS,CACP,cAAe,IACf,WAAY,AAAA,GAAW,OAAO,AAChC,CACF,EACA,UAAW,CACT,QAAS,SACT,OAAQ,SACR,QAAS,CACP,cAAe,IACf,WAAY,AAAA,GAAW,OAAO,AAChC,CACF,CACF,EAuBA,IAAA,GALsB,CACpB,YAAa,GACb,kBAbF,SAA2B,CAAG,CAAE,CAAS,EACvC,IAAM,EAAS,EAAc,CAAC,EAAI,EAAE,OACpC,GAAI,CAAC,EACH,MAAM,AAAI,MACR,CAAC,uDAAuD,EAAE,EAAI,CAAC,CAAC,EAGpE,MAAO,CAAC,EAAE,EAAU,CAAC,EAAE,EAAO,CAAC,AACjC,CAMA,CF5DA,OAAM,WAA4B,GAEhC,KAAM,AAUN,aAAY,CAAO,CAAE,CAAO,CAAE,CAC5B,KAAK,CAAC,EAAS,EACjB,CAKA,OAAO,CAAQ,CAAE,CACf,GAAI,IAAI,CAAC,KAAK,EAAI,IAAI,CAAC,KAAK,CAAC,MAAM,CAAE,CACnC,IAAM,EAAK,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,GAAG,CAAC,MAC3B,EAAQ,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,GAAG,CAAC,UACpC,IAAI,CAAC,QAAQ,CAAC,EAAG,EAAK,GACtB,IAAI,CAAC,QAAQ,CAAC,EAAG,EACnB,CACA,KAAK,CAAC,OAAO,EACf,CACF,CAMA,MAAM,WAA2B,GAE/B,CAAC,EAAK,AAAC,AAGP,EAAC,EAAU,AAAC,AAGZ,EAAC,EAAW,AAAC,AAOb,aAAY,CAAG,CAAE,CAAa,CAAE,CAC9B,KAAK,CAAC,EAAK,GACX,IAAI,CAAC,CAAC,EAAU,CAAG,EAAwB,IAAI,AACjD,CAMA,SAAS,CAAK,CAAE,CACd,IAAI,CAAC,CAAC,EAAK,CAAG,EACd,IAAI,CAAC,CAAC,EAAW,CAAG,IAAI,CAAC,CAAC,EAAK,CAAC,KAAK,AACvC,CAGA,iBAAkB,CAChB,IAAM,EAAM,IAAI,CAAC,CAAC,EAAmB,GAMrC,MALI,CAAA,IAAQ,IAAI,CAAC,CAAC,EAAU,EAAI,IAAI,CAAC,CAAC,EAAW,EAAI,IAAI,CAAC,CAAC,EAAK,EAAE,KAAA,IAChE,IAAI,CAAC,CAAC,EAAU,CAAG,EACnB,IAAI,CAAC,CAAC,EAAW,CAAG,IAAI,CAAC,CAAC,EAAK,EAAE,MACjC,IAAI,CAAC,CAAC,EAAoB,IAErB,KAAK,CAAC,iBACf,CAEA,CAAC,EAAmB,SAClB,AAAI,CAAC,IAAI,CAAC,CAAC,EAAK,EAAI,IAAI,CAAC,CAAC,EAAK,CAAC,QAAQ,CAAC,MAAM,CAAC,IACvC,EAAwB,IAAI,CAG5B,A9BxCN,SAAiC,CAAK,EAC3C,IAAM,EAAW,KAAK,GAAG,CAAC,UAC1B,AAAI,GAAY,EAAQ,MAAM,CACrB,EAAkB,CAAC,CAExB,GAAY,EAAQ,OAAO,CACtB,KAAK,IAAI,CAAC,GAAS,EAAI,EAAkB,CAAC,CAAG,EAAkB,CAAC,CAElE,EAAkB,CAAC,AAC5B,E8B8BkB,IAAI,CAAC,CAAC,EAAK,CAAC,QAAQ,CAAC,kBAAkB,GAGvD,CAMA,CAAC,EAAoB,GACnB,GAAI,CAAC,IAAI,CAAC,CAAC,EAAK,CAAC,KAAK,CACpB,OAAO,IAAI,CAAC,aAAa,CAAC,AAAA,GAAc,WAAW,CAAC,IAAI,CAAC,OAAO,EAElE,OAAQ,IAAI,CAAC,CAAC,EAAU,EACtB,KAAK,EAAwB,IAAI,CAC/B,IAAI,CAAC,aAAa,CAAC,AAAA,GAAc,WAAW,CAAC,IAAI,CAAC,OAAO,EACzD,KACF,MAAK,EAAwB,CAAC,CAC5B,IAAI,CAAC,aAAa,CAAC,AAAA,GAAc,WAAW,CAAC,SAAS,CAAC,OAAO,EAC9D,KACF,MAAK,EAAwB,CAAC,CAC9B,KAAK,EAAwB,EAAE,CAC/B,KAAK,EAAwB,EAAE,CAC7B,IAAI,CAAC,aAAa,CAAC,AAAA,GAAc,WAAW,CAAC,UAAU,CAAC,OAAO,EAC/D,KACF,MAAK,EAAwB,CAAC,CAC5B,IAAI,CAAC,aAAa,CAAC,AAAA,GAAc,WAAW,CAAC,SAAS,CAAC,OAAO,EAC9D,KACF,SACE,IAAI,CAAC,aAAa,CAAC,AAAA,GAAc,WAAW,CAAC,UAAU,CAAC,OAAO,CAEnE,CACF,CACF,CAoCA,SAAS,GAAoB,CAAS,EACpC,IAAM,EAAiB,AA/BzB,SAAiC,CAAS,EACxC,IAAM,EAAkB,IAAI,GAC1B,QACA,IAAI,GAAwB,EAAG,CAAC,EAAE,EAAU,IAAI,CAAC,GAGnD,IAAK,IAAM,KAAO,AAAA,GAAc,WAAW,CAAE,CAC3C,IAAM,EAAO,AAAA,GAAc,WAAW,CAAC,EAAI,CAC3C,EAAgB,gBAAgB,CAC9B,AAAA,GAAc,WAAW,CAAC,EAAI,CAAC,OAAO,CACtC,IAAI,GACF,EACA,CACE,OAAQ,AAAA,GAAc,iBAAiB,CAAC,EAAK,GAC7C,OAAQ,OACR,WAAY,EACZ,QAAS,CACX,EACA,EAAK,OAAO,EAGlB,CAEA,OADA,EAAgB,aAAa,CAAC,AAAA,GAAc,WAAW,CAAC,IAAI,CAAC,OAAO,EAC7D,CACT,EAOiD,GACzC,EAAgB,IAAI,GACxB,AAAA,EAAO,YAAY,GACnB,GAGI,EAAiB,IAAI,GAAoB,AAAA,EAAO,YAAY,GAAI,CACpE,SAAU,AAAA,GAAM,UAAU,GAAG,WAAW,GAAK,EAC7C,WAAY,CCxKJ,uBACI,uBDuKwC,CACpD,aAAc,EAAE,AAClB,GACM,EAAQ,IAAI,GAChB,IAAI,GAAO,CACT,SAAU,CAAC,EAAgB,EAAc,AAC3C,IAUF,OARA,EAAe,QAAQ,CAAC,GACxB,EAAe,KAAK,CAAG,EACvB,EAAM,QAAQ,CAAG,IAAI,EACnB,AAAA,GAAc,SAAS,CACvB,AAAA,GAAc,SAAS,CACvB,GAEF,EAAM,QAAQ,CAAG,CAAE,EAAG,EAAG,EAAG,EAAG,SAAU,EAAI,EACtC,CACT,CAiDA,MAAM,GAAY,IAAI,IAAI,CACxB,CAAC,OAAQ,CAAE,OAAQ,IAAM,GAAoB,OAAQ,EAAE,CACvD,CAAC,UAAW,CAAE,OAAQ,IAAM,AA5B9B,CAAA,SAA+B,CAAS,EACtC,IAAM,EAAQ,GA2BoC,OAzBlD,OADA,EAAM,WAAW,CAAG,IAAI,GAAM,GACvB,CACT,CAAA,EAwBoD,EAAO,EAAE,CAC3D,CAAC,SAAU,CAAE,OAAQ,IAAM,AAlB7B,CAAA,SAA8B,CAAS,EACrC,IAAM,EAAQ,GAAoB,GAElC,OADA,EAAM,WAAW,CAAG,IAAI,GAAM,GACvB,CACT,CAAA,EAckD,SAAU,EAAE,CAC7D,EK/NM,SAAS,GAAa,CAAM,CAAE,CAAQ,CAAE,CAAW,EACxD,MAAO,CACL,OAAQ,CAAM,CAAC,EAAS,EAAE,CAAC,EAAY,CACvC,GAAI,CAAM,CAAC,EAAW,EAAE,EAAE,CAAC,EAAc,EAAE,CAC3C,MAAO,CAAM,CAAC,EAAW,EAAE,EAAE,CAAC,EAAY,CAC1C,GAAI,CAAM,CAAC,EAAW,EAAE,EAAE,CAAC,EAAc,EAAE,CAC3C,MAAO,CAAM,CAAC,EAAS,EAAE,CAAC,EAAc,EAAE,CAC1C,GAAI,CAAM,CAAC,EAAW,EAAE,EAAE,CAAC,EAAc,EAAE,CAC3C,MAAO,CAAM,CAAC,EAAW,EAAE,EAAE,CAAC,EAAY,CAC1C,GAAI,CAAM,CAAC,EAAW,EAAE,EAAE,CAAC,EAAc,EAAE,CAC3C,KAAM,CAAM,CAAC,EAAS,EAAE,CAAC,EAAc,EAAE,AAC3C,CACF,CAOO,SAAS,GAAU,CAAM,EAC9B,IACI,EADA,EAAe,EAAO,MAAM,CAIhC,KAAO,EAAe,GACpB,EAAc,KAAK,KAAK,CAAC,KAAK,MAAM,GAAK,GACzC,IAEA,CAAC,CAAM,CAAC,EAAa,CAAE,CAAM,CAAC,EAAY,CAAC,CAAG,CAC5C,CAAM,CAAC,EAAY,CACnB,CAAM,CAAC,EAAa,CACrB,CAGH,OAAO,CACT,CD5CO,MAAM,GAAiB,CAC5B,KAAM,CAAC,IAAK,IAAK,IAAI,CACrB,QAAS,CAAC,IAAI,CACd,SAAU,CAAC,IAAI,CACf,OAAQ,CAAC,IAAK,IAAK,IAAK,IAAI,CAC5B,KAAM,CAAC,IAAI,AACb,EAKM,GAAa,CACjB,SAAU,MACV,kBAAmB,OACnB,IAAK,KACL,UAAW,MACX,mBAAoB,OACpB,MAAO,KACP,aAAc,MACd,sBAAuB,OACvB,OAAQ,KACR,YAAa,MACb,qBAAsB,OACtB,KAAM,KACN,QAAS,QACT,UAAW,QACX,WAAY,QACZ,SAAU,QACV,eAAgB,MAChB,kBAAmB,MACnB,oBAAqB,KACvB,EAKM,GAAkB,CACtB,WAAY,OACZ,eAAgB,MAClB,CAqCO,OAAM,GAEX,MAAO,AAEP,CAAA,gBAAiB,AAEjB,CAAA,eAAgB,AAEhB,cAAc,CACZ,IAAI,CAAC,gBAAgB,CAAG,IAAI,EAAM,EAAG,GACrC,IAAI,CAAC,eAAe,CAAG,IAAI,EAAM,EAAG,EACtC,CAQA,OAAO,oBAAoB,CAAM,CAAE,CAAS,CAAE,CAC5C,IAAM,EAAW,IAAI,GACjB,EAAS,EAAS,eAAe,CAAC,GAGtC,OAFA,EAAS,EAAS,aAAa,CAAC,GAChC,EAAS,UAAU,CAAC,EAAQ,GACrB,CACT,CAKA,gBAAgB,CAAM,CAAE,CACtB,IAAM,EAAS,EAAE,CACb,EAAW,EAUf,OATA,EAAO,OAAO,CAAC,AAAC,IACd,EAAW,KAAK,GAAG,CAAC,EAAU,EAAI,MAAM,CAC1C,GACA,EAAO,OAAO,CAAC,AAAC,IACV,EAAI,MAAM,CAAG,GACf,CAAA,GAAY,IAAI,MAAM,CAAC,EAAW,OADpC,EAGA,EAAO,IAAI,CAAC,EAAI,KAAK,CAAC,IACxB,GACO,CACT,CAOA,cAAc,CAAM,CAAE,CACpB,IAAM,EAAoB,EAAE,CAqB5B,OApBA,EAAO,OAAO,CAAC,CAAC,EAAU,KACxB,IAAM,EAAe,EAAE,CACvB,EAAkB,IAAI,CAAC,GACvB,EAAS,OAAO,CAAC,CAAC,EAAU,SA0ClB,EA0DO,EAoBF,EAiCI,MACnB,EAzJE,IAAM,EAAY,AAAA,GAAa,EAAQ,EAAU,IAyCzC,EAxCG,EAyCV,GAAe,IAAI,CAAC,QAAQ,CAAC,IAxC5B,EA7IU,IA8ID,GAAS,IAgGL,EA/FY,EAgG7B,GAAa,AAhG0B,EAgGhB,KAAK,IAC1B,GAAa,AAjGwB,EAiGd,EAAE,EAC3B,GAAS,GAAgB,UAAU,CAEnC,GAAS,GAAgB,cAAc,EAexB,EAnHX,EAuGD,EAcL,GAAW,AApHqB,EAoHX,IAAI,GACzB,GAAW,AArHqB,EAqHX,KAAK,GAC1B,GAAW,AAtHqB,EAsHX,KAAK,GAC1B,GAAW,AAvHqB,EAuHX,KAAK,GAtHlB,IAAI,CAAC,gBAAgB,CAAG,IAAI,EAAM,EAAU,GAqIpD,CAAA,GAAO,AApI+B,EAoIrB,KAAK,GACtB,GAAO,AArI+B,EAqIrB,KAAK,GACtB,GAAO,AAtI+B,EAsIrB,IAAI,GACrB,GAAO,AAvI+B,EAuIrB,KAAK,CAAA,GAtId,CAAA,IAAI,CAAC,eAAe,CAAG,IAAI,EAAM,EAAU,EADtC,EAGE,GAAa,KA+I1B,EADmB,EA7IY,EAiJjC,GAAa,AAjJ8B,EAiJpB,KAAK,GAC5B,GAAa,AAlJ8B,EAkJpB,KAAK,GAC5B,GAAa,AAnJ8B,EAmJpB,KAAK,GAC5B,GAAa,AApJ8B,EAoJpB,IAAI,EAE3B,GAAU,GAAW,cAAc,CAC1B,GAAS,AAvJyB,EAuJf,IAAI,GAAK,GAAS,AAvJH,EAuJa,KAAK,EAC7D,GAAU,GAAW,iBAAiB,CAC7B,GAAS,AAzJyB,EAyJf,KAAK,GAAK,GAAS,AAzJJ,EAyJc,KAAK,EAC9D,GAAU,GAAW,mBAAmB,CAKxC,GAAa,AA/J8B,EA+JpB,IAAI,GAC3B,GAAa,AAhK8B,EAgKpB,KAAK,GAC5B,GAAa,AAjK8B,EAiKpB,KAAK,EAE5B,GAAU,GAAW,OAAO,CAE5B,GAAa,AArK8B,EAqKpB,KAAK,GAC5B,GAAa,AAtK8B,EAsKpB,KAAK,GAC5B,GAAa,AAvK8B,EAuKpB,IAAI,EAE3B,GAAU,GAAW,SAAS,CAE9B,GAAa,AA3K8B,EA2KpB,IAAI,GAC3B,GAAa,AA5K8B,EA4KpB,KAAK,GAC5B,GAAa,AA7K8B,EA6KpB,KAAK,EAE5B,GAAU,GAAW,UAAU,CAE/B,GAAa,AAjL8B,EAiLpB,KAAK,GAC5B,GAAa,AAlL8B,EAkLpB,KAAK,GAC5B,GAAa,AAnL8B,EAmLpB,KAAK,EAE5B,GAAU,GAAW,QAAQ,CAGtB,GAAa,AAxLuB,EAwLb,KAAK,GAAK,GAAa,AAxLV,EAwLoB,KAAK,EACpE,GAAU,GAAS,AAzLwB,EAyLd,EAAE,EAC3B,GAAW,QAAQ,CACnB,GAAW,iBAAiB,CACvB,GAAa,AA5LqB,EA4LX,IAAI,GAAK,GAAa,AA5LX,EA4LqB,KAAK,EACrE,GAAU,GAAS,AA7LwB,EA6Ld,EAAE,EAC3B,GAAW,SAAS,CACpB,GAAW,kBAAkB,CACxB,GAAa,AAhMqB,EAgMX,IAAI,GAAK,GAAa,AAhMX,EAgMqB,KAAK,EACrE,GAAU,GAAS,AAjMwB,EAiMd,EAAE,EAC3B,GAAW,YAAY,CACvB,GAAW,qBAAqB,CAC3B,GAAa,AApMqB,EAoMX,KAAK,GAAK,GAAa,AApMZ,EAoMsB,KAAK,EACtE,GAAU,GAAS,AArMwB,EAqMd,EAAE,EAC3B,GAAW,WAAW,CACtB,GAAW,oBAAoB,CAG5B,GAAa,AA1MuB,EA0Mb,KAAK,GAAK,GAAa,AA1MV,EA0MoB,KAAK,EAEpE,GAAU,GAAS,AA5MwB,EA4Md,KAAK,EAAI,GAAW,IAAI,CAAG,GAAW,KAAK,CAC/D,GAAa,AA7MqB,EA6MX,KAAK,GAAK,GAAa,AA7MZ,EA6MsB,IAAI,GAErE,CAAA,GAAU,GAAS,AA/MwB,EA+Md,KAAK,EAAI,GAAW,GAAG,CAAG,GAAW,MAAM,AAAN,EA/M5D,EAkNR,AAAI,GAAa,AAlN4B,EAkNlB,KAAK,EACtB,EAAU,GAAgB,UAAU,CAEvC,GAnND,EAAa,IAAI,CAAC,EACpB,EACF,GACO,CACT,CAOA,WAAW,CAAM,CAAE,CAAS,CAAE,CAC5B,IAAM,EAAa,EAAE,CACrB,EAAO,OAAO,CAAC,AAAC,IACd,IAAM,EAAU,EAAE,CAClB,EAAW,IAAI,CAAC,GAChB,EAAS,OAAO,CAAC,AAAC,IAChB,EAAQ,IAAI,CAAC,AA4MrB,SAAS,EAAc,CAAM,CAAE,CAAS,EACtC,GAAI,AAtXc,MAsXd,EACF,OAAO,KAET,IAAM,EAAQ,EAAO,KAAK,CAAC,yBACvB,EAAO,EAAU,GAAG,CAAC,GAQzB,GAPI,CAAC,GAAQ,CAAK,CAAC,EAAE,EAAI,CAAK,CAAC,EAAE,EAC/B,CAAA,EAAO,EAAU,GAAG,CAAC,CAAC,EAAE,CAAK,CAAC,EAAE,CAAC,EAAE,CAAK,CAAC,EAAE,CAAC,CAAC,CAAA,EAE3C,CAAC,GAAQ,CAAK,CAAC,EAAE,EACnB,CAAA,EAAO,EAAU,GAAG,CAAC,CAAK,CAAC,EAAE,CAAA,EAG3B,CAAC,EAAM,CACT,IAAM,EAAiB,AAmB3B,SAA0B,CAAiB,EACzC,IAAK,IAAM,KAAQ,GACjB,GAAI,EAAc,CAAC,EAAK,CAAC,QAAQ,CAAC,GAChC,OAAO,EAAc,CAAC,EAAK,CAAC,EAAE,CAGlC,OAAO,IACT,EA1B4C,CAAK,CAAC,EAAE,EAChD,GAAI,GAAkB,IAAmB,CAAK,CAAC,EAAE,CAC/C,KAgC0C,EAAW,MACrD,EAjCA,OAAO,GAgCmC,EA/BJ,CAAK,CAAC,EAAE,CA+BO,EA/BL,CAAK,CAAC,EAAE,CAgCxD,EAhCsB,EAiCtB,GACF,CAAA,GAAU,CADZ,EAGI,GACF,CAAA,GAAU,CADZ,EAGO,GAtCD,EAHJ,CAME,AAAA,EAAI,KAAK,CAAC,CAAC,0BAA0B,EAAE,EAAO,CAAC,CAEnD,CACA,OAAO,CACT,EArOmC,EAAa,GAC1C,EACF,GACA,IAAI,CAAC,MAAM,CAAG,CAChB,CACF,CAcA,SAAS,GAAW,CAAM,EACxB,OAAO,GAAe,OAAO,CAAC,QAAQ,CAAC,EACzC,CAMA,SAAS,GAAO,CAAM,EACpB,OAAO,GAAe,QAAQ,CAAC,QAAQ,CAAC,EAC1C,CAsBA,SAAS,GAAS,CAAM,EACtB,OAAO,GAAe,MAAM,CAAC,QAAQ,CAAC,EACxC,CAMA,SAAS,GAAa,CAAM,MAxBZ,EAyBd,OAhBO,GAAe,IAAI,CAAC,QAAQ,CAgBrB,IAxBP,GADO,EAyBkB,IAxBH,GAAO,EAyBtC,CGnOO,MAAM,GAEX,CAAC,EAAM,AAAC,AAER,EAAC,EAAO,AAAC,AAMT,aAAY,CAAO,CAAE,CACnB,IAAI,CAAC,CAAC,EAAO,CAAG,EAChB,IAAI,CAAC,CAAC,EAAM,CAAG,IAAI,GACrB,CAQA,iBAAiB,CAAK,CAAE,CAAC,CAAE,CAAC,CAAE,CAC5B,IAAI,CAAC,CAAC,EAAM,CAAC,GAAG,CAAC,IAAI,CAAC,WAAW,CAAC,EAAG,GAAI,EAC3C,CAQA,iBAAiB,CAAC,CAAE,CAAC,CAAE,CACrB,OAAO,IAAI,CAAC,CAAC,EAAM,CAAC,GAAG,CAAC,IAAI,CAAC,WAAW,CAAC,EAAG,GAC9C,CAOA,iBAAiB,CAAC,CAAE,CAAC,CAAE,CACrB,OAAO,IAAI,CAAC,CAAC,EAAM,CAAC,GAAG,CAAC,IAAI,CAAC,WAAW,CAAC,EAAG,GAC9C,CAOA,YAAY,CAAC,CAAE,CAAC,CAAE,CAChB,MAAO,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,AACpB,CAOA,eAAe,CAAG,CAAE,CAClB,IAAM,EAAY,EAAI,KAAK,CAAC,KAC5B,OAAO,IAAI,EAAM,SAAS,CAAS,CAAC,EAAE,EAAG,SAAS,CAAS,CAAC,EAAE,EAChE,CAMA,QAAQ,CAAQ,CAAE,CAChB,IAAI,CAAC,CAAC,EAAM,CAAC,OAAO,CAAC,CAAC,EAAO,EAAK,IAAQ,EAAS,EAAO,EAAK,GACjE,CAOA,kBAAkB,CAAK,CAAE,CACvB,OAAO,IAAI,CAAC,CAAC,EAAM,CAAC,GAAG,CAAC,IAAI,CAAC,WAAW,CAAC,EAAM,CAAC,CAAE,EAAM,CAAC,EAC3D,CAQA,yBAAyB,CAAW,CAAE,CACpC,IAAM,EAAS,IAAI,CAAC,gBAAgB,CAAC,EAAY,CAAC,CAAE,EAAY,CAAC,SACjE,AAAI,EAAO,MAAM,CAAG,EACX,EAAO,KAAK,CAAC,GAEb,IAEX,CAQA,0BAA0B,CAAW,CAAE,CACrC,IAAM,EAAY,IAAI,CAAC,wBAAwB,CAAC,UAChD,AAAI,EACK,EAAU,GAAG,CAAC,AAAC,GACpB,IAAI,CAAC,CAAC,EAAO,CAAC,qBAAqB,CAAC,IAG/B,CAEX,CACF,CAIO,MAAM,GAEX,KAAM,AAEN,EAAC,EAAM,AAAC,AAER,EAAC,EAAO,AAAC,AAET,EAAC,EAAU,AAAC,AAMZ,aAAY,CAAO,CAAE,CAAK,CAAE,CAC1B,IAAI,CAAC,CAAC,EAAO,CAAG,EAChB,IAAI,CAAC,KAAK,CAAG,CACf,CAUA,mBAAmB,CAAiB,CAAE,CAAe,CAAE,CAAO,CAAE,CAC9D,IAAI,EAAc,IAAI,CAAC,CAAC,EAAiB,CACvC,EACA,GAEF,GAAI,EAAY,UAAU,CAAC,GACzB,MAAO,EAAE,CAEN,IAAI,CAAC,CAAC,EAAO,CAAC,6BAA6B,CAAC,EAAa,IAAI,CAAC,KAAK,GACtE,CAAA,EAAc,IAAI,CAAC,CAAC,EAAoB,CAAC,EAAa,EADxD,EAGA,IAAI,EAAO,EAAE,CACT,EAAK,KAAK,IAAI,CAAC,EAAY,CAAC,CAAG,EAAkB,CAAC,EAClD,EAAK,KAAK,IAAI,CAAC,EAAY,CAAC,CAAG,EAAkB,CAAC,EAClD,EAAW,AAAA,EAAM,IAAI,CAAC,GACtB,EAAU,AAAgB,GAAhB,KAAK,MAAM,GACrB,EAAmB,EACvB,KAAO,EAAU,GAAG,CAClB,IAAI,EAAY,AAAA,EAAM,IAAI,CAAC,GACvB,EAAQ,CAAA,EAYZ,GAXI,GAAW,AAAO,IAAP,GAAY,EAAS,CAAC,EAAI,EAAY,CAAC,EACpD,EAAU,CAAC,EAAI,EACf,EAAQ,CAAA,GACE,GAAW,AAAO,IAAP,GAAY,EAAS,CAAC,EAAI,EAAY,CAAC,GAC5D,EAAU,CAAC,EAAI,EACf,EAAQ,CAAA,GAEV,EACE,GACA,IAAI,CAAC,CAAC,EAAO,CAAC,6BAA6B,CAAC,EAAW,IAAI,CAAC,KAAK,EAGjE,EAAmB,EACnB,EAAW,EACX,QACK,CACL,GAAI,EAAE,GAAoB,EACxB,MAEG,EAAS,UAAU,CAAC,IACvB,EAAK,IAAI,CAAC,IAAI,CAAC,CAAC,EAAO,CAAC,qBAAqB,CAAC,IAEhD,EAAoB,EACpB,EAAU,CAAC,CACb,CACF,CAKA,OAJK,EAAS,UAAU,CAAC,IACvB,EAAK,IAAI,CAAC,IAAI,CAAC,CAAC,EAAO,CAAC,qBAAqB,CAAC,IAGzC,CACT,CAQA,iBAAiB,CAAiB,CAAE,CAAO,CAAE,CAI3C,OAHA,IAAI,CAAC,CAAC,EAAM,CAAG,IAAI,GAAO,IAAI,CAAC,CAAC,EAAO,EACvC,IAAI,CAAC,CAAC,EAAU,CAAG,EACnB,IAAI,CAAC,CAAC,EAAU,CAAC,EAAkB,CAAC,CAAE,EAAkB,CAAC,CAAE,EAAS,MAC7D,IAAI,CAAC,CAAC,EAAM,AACrB,CAUA,CAAC,EAAU,CAAC,CAAC,CAAE,CAAC,CAAE,CAAS,CAAE,CAAW,EACtC,GAAK,EAKE,CACL,GAAI,IAAM,IAAI,CAAC,CAAC,EAAU,CAAC,CAAC,EAAI,IAAM,IAAI,CAAC,CAAC,EAAU,CAAC,CAAC,EAE7C,CAAC,IAAI,CAAC,CAAC,EAAc,CAAC,EAAG,GADlC,OAIF,IAAM,EAAgB,IAAI,CAAC,CAAC,EAAM,CAAC,gBAAgB,CAAC,EAAG,GACvD,GAAI,AAAC,IAAiB,CAAA,EAAY,MAAM,CAAG,EAAc,MAAM,CAAG,CAAA,EAQhE,OAPA,EAAY,IAAI,CAAC,IAAI,EAAM,EAAG,IAC1B,IAAI,CAAC,CAAC,EAAiB,CAAC,EAAG,IAE7B,IAAI,CAAC,CAAC,EAAM,CAAC,gBAAgB,CAAC,EAAa,EAAG,GAEhD,GAIJ,MAlBE,EAAc,CAAC,IAAI,EAAM,EAAG,GAAG,CAoB7B,EAAY,IAEd,IAAI,CAAC,CAAC,EAAU,CAAC,EAAG,EAAI,EAAG,EAAW,IAAI,EAAY,EACtD,IAAI,CAAC,CAAC,EAAU,CAAC,EAAI,EAAG,EAAG,EAAW,IAAI,EAAY,EACtD,IAAI,CAAC,CAAC,EAAU,CAAC,EAAG,EAAI,EAAG,EAAW,IAAI,EAAY,EACtD,IAAI,CAAC,CAAC,EAAU,CAAC,EAAI,EAAG,EAAG,EAAW,IAAI,EAAY,EAE1D,CAQA,CAAC,EAAc,CAAC,CAAC,CAAE,CAAC,EAClB,OAAO,IAAI,CAAC,CAAC,EAAO,CAAC,0BAA0B,CAC7C,IAAI,EAAM,EAAG,GACb,IAAI,CAAC,KAAK,CAEd,CAQA,CAAC,EAAiB,CAAC,CAAC,CAAE,CAAC,EACrB,OAAO,IAAI,CAAC,CAAC,EAAO,CAAC,6BAA6B,CAChD,IAAI,EAAM,EAAG,GACb,IAAI,CAAC,KAAK,CAEd,CAEA,CAAC,EAAiB,CAAC,CAAO,CAAE,CAAM,EAChC,IAAM,EAAS,EAAO,CAAC,CAAG,EAAQ,CAAC,CAC7B,EAAS,EAAO,CAAC,CAAG,EAAQ,CAAC,CAC/B,EAAO,EAAO,CAAC,CACf,EAAO,EAAO,CAAC,CAMnB,OALI,KAAK,GAAG,CAAC,GAAU,KAAK,GAAG,CAAC,GAC9B,GAAQ,KAAK,IAAI,CAAC,GAElB,GAAQ,KAAK,IAAI,CAAC,GAEb,IAAI,EAAM,EAAM,EACzB,CAMA,CAAC,EAAoB,CAAC,CAAS,CAAE,CAAW,SAC1C,AAAI,EAAU,CAAC,GAAK,EAAY,CAAC,EAAI,EAAU,CAAC,CAAG,EAAY,CAAC,CACvD,IAAI,EAAM,EAAU,CAAC,CAAG,EAAG,EAAU,CAAC,CAAG,GACvC,EAAU,CAAC,CAAG,EAAY,CAAC,EAAI,EAAU,CAAC,GAAK,EAAY,CAAC,CAC9D,IAAI,EAAM,EAAU,CAAC,CAAG,EAAG,EAAU,CAAC,CAAG,GAE9C,EAAU,CAAC,GAAK,EAAY,CAAC,EAAI,EAAU,CAAC,CAAG,EAAY,CAAC,CACvD,IAAI,EAAM,EAAU,CAAC,CAAG,EAAG,EAAU,CAAC,CAAG,GAE9C,EAAU,CAAC,CAAG,EAAY,CAAC,EAAI,EAAU,CAAC,GAAK,EAAY,CAAC,CACvD,IAAI,EAAM,EAAU,CAAC,CAAG,EAAG,EAAU,CAAC,CAAG,GAE3C,CACT,CACF,CAKO,MAAM,GAEX,CAAC,EAAK,AAAC,AAEP,EAAC,EAAa,AAAC,AAEf,EAAC,EAAO,AAAC,AAET,EAAC,EAAa,AAAC,AAEf,EAAC,EAAc,AAAC,AAEhB,EAAC,EAAM,AAAC,AAER,EAAC,EAAU,AAAC,AAMZ,aAAY,CAAO,CAAE,CAAK,CAAE,CAC1B,IAAI,CAAC,CAAC,EAAO,CAAG,EAChB,IAAI,CAAC,CAAC,EAAK,CAAG,CAChB,CAMA,kBAAmB,QACjB,IAAI,CAAC,CAAC,EAAa,CAAG,IAAI,CAAC,CAAC,EAAO,CAAC,gBAAgB,CAAC,IAAI,CAAC,CAAC,EAAK,CAAC,QAAQ,EAEzE,IAAI,CAAC,CAAC,EAAM,CAAG,IAAI,CAAC,CAAC,EAAO,CAAC,mBAAmB,GAE9C,IAAI,CAAC,CAAC,EAAc,EACpB,IAAI,CAAC,CAAC,EAAc,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,EAAa,GACnD,IAAI,CAAC,CAAC,EAAM,EACZ,IAAI,CAAC,CAAC,EAAM,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,EAAU,IAKtC,IAAI,CAAC,CAAC,EAAa,CAAG,IAAI,IAC1B,IAAI,CAAC,CAAC,EAAa,CAAC,GAAG,CACrB,IAAI,CAAC,CAAC,EAAa,CAAC,QAAQ,GAC5B,IAAI,CAAC,CAAC,EAAa,EAErB,IAAI,CAAC,CAAC,EAAU,GAAG,OAAO,CAAC,AAAC,IAC1B,IAAI,CAAC,CAAC,EAAa,CAAC,EACtB,GACA,IAAI,CAAC,CAAC,EAAc,CAAG,IAAI,CAAC,CAAC,EAAa,CAC1C,IAAI,CAAC,CAAC,EAAU,CAAG,IAAI,CAAC,CAAC,EAAM,EAZtB,IAAI,CAAC,CAAC,EAAa,AAc9B,CAOA,kBAAkB,CAAS,CAAE,CAC3B,MAAO,EAAA,IAAI,CAAC,CAAC,EAAa,EACtB,IAAI,CAAC,CAAC,EAAa,CAAC,GAAG,CAAC,EAAU,QAAQ,GAEhD,CAMA,CAAC,EAAU,GACT,IAAM,EAAU,EAAE,CAClB,IACE,IAAI,EAAM,IAAI,CAAC,CAAC,EAAM,CAAC,CAAC,CACxB,GAAO,IAAI,CAAC,CAAC,EAAM,CAAC,CAAC,CAAG,IAAI,CAAC,CAAC,EAAM,CAAC,KAAK,CAC1C,IAEA,EAAQ,IAAI,CAAC,IAAI,EAAM,EAAK,IAAI,CAAC,CAAC,EAAM,CAAC,CAAC,GAC1C,EAAQ,IAAI,CAAC,IAAI,EAAM,EAAK,IAAI,CAAC,CAAC,EAAM,CAAC,CAAC,CAAG,IAAI,CAAC,CAAC,EAAM,CAAC,MAAM,GAGlE,IACE,IAAI,EAAM,IAAI,CAAC,CAAC,EAAM,CAAC,CAAC,CAAG,EAC3B,GAAO,IAAI,CAAC,CAAC,EAAM,CAAC,CAAC,CAAG,IAAI,CAAC,CAAC,EAAM,CAAC,MAAM,CAAG,EAC9C,IAEA,EAAQ,IAAI,CAAC,IAAI,EAAM,IAAI,CAAC,CAAC,EAAM,CAAC,CAAC,CAAE,IACvC,EAAQ,IAAI,CAAC,IAAI,EAAM,IAAI,CAAC,CAAC,EAAM,CAAC,CAAC,CAAG,IAAI,CAAC,CAAC,EAAM,CAAC,KAAK,CAAE,IAE9D,OAAO,CACT,CAOA,CAAC,EAAa,CAAC,CAAQ,MACjB,EACA,EACA,EAEJ,IAAM,EAAmB,ArCxVtB,SAAkC,CAAK,EAC5C,IAAM,EAAW,KAAK,GAAG,CAAC,UAC1B,AAAI,GAAY,EAAQ,QAAQ,CACvB,EAAkB,CAAC,CAExB,GAAY,EAAQ,QAAQ,CACvB,KAAK,IAAI,CAAC,GAAS,EAAI,EAAkB,EAAE,CAAG,EAAkB,EAAE,CAEvE,GAAY,EAAQ,SAAS,CACxB,KAAK,IAAI,CAAC,GAAS,EAAI,EAAkB,CAAC,CAAG,EAAkB,CAAC,CAErE,GAAY,EAAQ,SAAS,CACxB,KAAK,IAAI,CAAC,GAAS,EAAI,EAAkB,EAAE,CAAG,EAAkB,EAAE,CAEpE,EAAkB,CAAC,AAC5B,EqCwUkB,IAAI,CAAC,CAAC,EAAa,CAAC,gBAAgB,CAAC,GAGjD,CAAA,KAAK,GAAG,CAAC,EAAS,CAAC,CAAG,IAAI,CAAC,CAAC,EAAa,CAAC,CAAC,GAC3C,KAAK,GAAG,CAAC,EAAS,CAAC,CAAG,IAAI,CAAC,CAAC,EAAa,CAAC,CAAC,GAE3C,EAAK,KAAK,IAAI,CAAC,EAAS,CAAC,CAAG,IAAI,CAAC,CAAC,EAAa,CAAC,CAAC,EAEjD,EAAK,AADL,CAAA,EAAQ,KAAK,GAAG,CAAC,EAAS,CAAC,CAAG,IAAI,CAAC,CAAC,EAAa,CAAC,CAAC,CAAA,EACtC,EAAI,EAAI,AAAC,CAAA,EAAS,CAAC,CAAG,IAAI,CAAC,CAAC,EAAa,CAAC,CAAA,AAAA,EAAK,IAE5D,EAAK,KAAK,IAAI,CAAC,EAAS,CAAC,CAAG,IAAI,CAAC,CAAC,EAAa,CAAC,CAAC,EAEjD,EAAK,AADL,CAAA,EAAQ,KAAK,GAAG,CAAC,EAAS,CAAC,CAAG,IAAI,CAAC,CAAC,EAAa,CAAC,CAAC,CAAA,EACtC,EAAI,EAAI,AAAC,CAAA,EAAS,CAAC,CAAG,IAAI,CAAC,CAAC,EAAa,CAAC,CAAA,AAAA,EAAK,GAE9D,IAAI,EAAI,IAAI,CAAC,CAAC,EAAa,CAAC,CAAC,CACzB,EAAI,IAAI,CAAC,CAAC,EAAa,CAAC,CAAC,CAEzB,EAAa,CAAA,EACjB,KAAO,GAAS,GAAG,CACjB,IAAM,EAAY,IAAI,EAAM,KAAK,KAAK,CAAC,GAAI,KAAK,KAAK,CAAC,IACtD,GAAI,GAAc,IAAI,CAAC,CAAC,EAAO,CAAC,YAAY,CAAC,EAAW,IAAI,CAAC,CAAC,EAAK,EACjE,IAAI,CAAC,CAAC,EAAgB,CAAC,EAAW,QAElC,MAEF,EAAa,CAAA,EACb,GAAK,EACL,GAAK,EACL,GACF,CACF,CAQA,CAAC,EAAgB,CAAC,CAAK,CAAE,CAAU,EAEjC,OADA,IAAI,CAAC,CAAC,EAAa,CAAC,GAAG,CAAC,EAAM,QAAQ,GAAI,GAClC,GACN,KAAK,EAAwB,CAAC,CAC5B,IAAI,CAAC,CAAC,EAA0B,CAAC,IAAI,EAAM,EAAM,CAAC,CAAG,EAAG,EAAM,CAAC,CAAG,IAClE,IAAI,CAAC,CAAC,EAA0B,CAAC,IAAI,EAAM,EAAM,CAAC,CAAE,EAAM,CAAC,CAAG,IAC9D,IAAI,CAAC,CAAC,EAA0B,CAAC,IAAI,EAAM,EAAM,CAAC,CAAG,EAAG,EAAM,CAAC,CAAG,IAClE,KACF,MAAK,EAAwB,EAAE,CAC7B,IAAI,CAAC,CAAC,EAA0B,CAAC,IAAI,EAAM,EAAM,CAAC,CAAE,EAAM,CAAC,CAAG,IAC9D,IAAI,CAAC,CAAC,EAA0B,CAAC,IAAI,EAAM,EAAM,CAAC,CAAG,EAAG,EAAM,CAAC,CAAG,IAClE,IAAI,CAAC,CAAC,EAA0B,CAAC,IAAI,EAAM,EAAM,CAAC,CAAG,EAAG,EAAM,CAAC,GAC/D,KACF,MAAK,EAAwB,CAAC,CAC5B,IAAI,CAAC,CAAC,EAA0B,CAAC,IAAI,EAAM,EAAM,CAAC,CAAG,EAAG,EAAM,CAAC,CAAG,IAClE,IAAI,CAAC,CAAC,EAA0B,CAAC,IAAI,EAAM,EAAM,CAAC,CAAG,EAAG,EAAM,CAAC,GAC/D,IAAI,CAAC,CAAC,EAA0B,CAAC,IAAI,EAAM,EAAM,CAAC,CAAG,EAAG,EAAM,CAAC,CAAG,IAClE,KACF,MAAK,EAAwB,EAAE,CAC7B,IAAI,CAAC,CAAC,EAA0B,CAAC,IAAI,EAAM,EAAM,CAAC,CAAG,EAAG,EAAM,CAAC,GAC/D,IAAI,CAAC,CAAC,EAA0B,CAAC,IAAI,EAAM,EAAM,CAAC,CAAG,EAAG,EAAM,CAAC,CAAG,IAClE,IAAI,CAAC,CAAC,EAA0B,CAAC,IAAI,EAAM,EAAM,CAAC,CAAE,EAAM,CAAC,CAAG,IAC9D,KACF,MAAK,EAAwB,CAAC,CAC5B,IAAI,CAAC,CAAC,EAA0B,CAAC,IAAI,EAAM,EAAM,CAAC,CAAG,EAAG,EAAM,CAAC,CAAG,IAClE,IAAI,CAAC,CAAC,EAA0B,CAAC,IAAI,EAAM,EAAM,CAAC,CAAE,EAAM,CAAC,CAAG,IAC9D,IAAI,CAAC,CAAC,EAA0B,CAAC,IAAI,EAAM,EAAM,CAAC,CAAG,EAAG,EAAM,CAAC,CAAG,IAClE,KACF,MAAK,EAAwB,EAAE,CAC7B,IAAI,CAAC,CAAC,EAA0B,CAAC,IAAI,EAAM,EAAM,CAAC,CAAG,EAAG,EAAM,CAAC,GAC/D,IAAI,CAAC,CAAC,EAA0B,CAAC,IAAI,EAAM,EAAM,CAAC,CAAG,EAAG,EAAM,CAAC,CAAG,IAClE,IAAI,CAAC,CAAC,EAA0B,CAAC,IAAI,EAAM,EAAM,CAAC,CAAE,EAAM,CAAC,CAAG,IAC9D,KACF,MAAK,EAAwB,CAAC,CAC5B,IAAI,CAAC,CAAC,EAA0B,CAAC,IAAI,EAAM,EAAM,CAAC,CAAG,EAAG,EAAM,CAAC,CAAG,IAClE,IAAI,CAAC,CAAC,EAA0B,CAAC,IAAI,EAAM,EAAM,CAAC,CAAG,EAAG,EAAM,CAAC,GAC/D,IAAI,CAAC,CAAC,EAA0B,CAAC,IAAI,EAAM,EAAM,CAAC,CAAG,EAAG,EAAM,CAAC,CAAG,IAClE,KACF,MAAK,EAAwB,EAAE,CAC7B,IAAI,CAAC,CAAC,EAA0B,CAAC,IAAI,EAAM,EAAM,CAAC,CAAG,EAAG,EAAM,CAAC,GAC/D,IAAI,CAAC,CAAC,EAA0B,CAAC,IAAI,EAAM,EAAM,CAAC,CAAG,EAAG,EAAM,CAAC,CAAG,IAClE,IAAI,CAAC,CAAC,EAA0B,CAAC,IAAI,EAAM,EAAM,CAAC,CAAE,EAAM,CAAC,CAAG,GAElE,CACF,CAKA,CAAC,EAA0B,CAAC,CAAK,EAC1B,IAAI,CAAC,CAAC,EAAO,CAAC,YAAY,CAAC,IAC9B,IAAI,CAAC,CAAC,EAAa,CAAC,GAAG,CAAC,EAAM,QAAQ,GAAI,EAE9C,CACF,CErcA,SAAS,GAAS,CAAK,SACrB,AAAK,EAME,GAAY,GAAc,IAAI,CAAC,IAS/B,AAT+C,EAUnD,IAAI,GACJ,IAAI,CAAC,IAAM,AAXwC,EAWlC,UAAU,IAC3B,IAAI,CAAC,KA1CR,EAAoB,IAAI,GACtB,EACA,GACA,AAAA,GAAmB,EAAE,ECXvB,iBAAiB,mBAAoB,KAC9B,SAAS,iBAAiB,EAI7B,AAAA,EAAI,KAAK,CAAC,4BACV,EAAsB,eAAe,CAAC,KAJtC,AAAA,EAAI,KAAK,CAAC,4BACV,EAAsB,eAAe,CAAC,GAK1C,GAEA,EAAwB,IAAI,GAC1B,EACA,CACE,OAAQ,iBACR,WAAY,EACZ,QAAS,EACT,OAAQ,MACV,EACA,CAAE,cAAe,EAAG,WAAY,AAAA,GAAW,IAAI,AAAC,GAWlD,AATA,CAAA,EAAmB,AAAA,GAAI,SAAS,CAC9B,EACA,SAnCuB,CACzB,AAAI,EADqB,EAoCH,SAAS,IAAI,EAnCvB,iBAAiB,CACpB,EAAQ,iBAAiB,CAkCG,CAAE,aAAc,MAAO,GAhCrD,QAAQ,MAAM,CACnB,AAAI,MAAM,gDAgCV,EACA,KACE,SAAS,cAAc,EACzB,EAAA,EAEe,QAAQ,CAAC,CAAC,CAAG,AAAA,GAAc,SAAS,CACrD,EAAiB,QAAQ,CAAC,CAAC,CAAG,CAAC,AAAA,GAAc,SAAS,CDftD,AAAA,GAAI,UAAU,CAAC,CAAA,GAqCX,EAdkD,CAepD,KApBA,AAAA,EAAI,KAAK,CACP,oEAEK,QAAQ,MAAM,GAGzB,CAsBA,SAAS,GAAY,CAAK,SACxB,AAAI,EACK,EAAM,MAAM,GAAG,IAAI,CAAC,KACzB,AAAA,GAAM,QAAQ,GACd,EAAe,KA3CnB,EAAoB,KACpB,AAAA,GAAI,KAAK,GACT,AAAA,GAAI,UAAU,CAAC,CAAA,GA2CJ,QAAQ,OAAO,KAGjB,QAAQ,OAAO,CAAC,KAE3B,CAsBA,SAAS,KAEP,MAAO,EAAA,EAAe,EAAiB,MAAM,CNQtC,IAAI,GMPc,CAAgB,CAAC,EAAa,EACnD,IACN,CAwEA,IAAA,GAXsB,CACpB,mBAxDF,WACE,OAAO,EAAe,EAAiB,MAAM,CAAG,CAClD,EAuDE,iBAlKF,SAA0B,CAAM,CAAE,CAAK,CAAE,CAAmB,EAC1D,EAAc,IAAI,GAAY,EAAQ,EAAO,EAC/C,EAiKE,YAZF,SAAqB,CAAE,CAAE,CAAE,EACzB,EAAY,KAAK,CAAC,EAAI,GACtB,EAAY,iBAAiB,CAAC,AAAA,GAAe,GAAG,EAChD,EAAkB,gBAAgB,CAAC,CAAA,EACrC,EASE,oBA/EF,SAA6B,CAAU,EACrC,EAAmB,EACnB,EAAe,EACjB,EA6EE,mBAzCF,WACE,OAAO,IAVP,EAAe,GACR,MAUT,EAwCE,kBAjCF,WACE,OAAO,GAAS,KAClB,EAgCE,mBAzFF,WACE,OAAO,GAAY,EACrB,EAwFE,OA3BF,SAAgB,CAAY,EAC1B,GAAc,OAAO,GACrB,GAAa,OAAO,EACtB,CAyBA,EIjMA,MAAM,GAAW,CACf,CACE,IAAK,WACL,MAAO,WACP,SAAU,CAAA,EACV,YAAa,AAAA,GAAY,QAAQ,CACjC,WAAY,CAAA,EACZ,OAAQ,IACV,EACA,CACE,IAAK,SACL,MAAO,eACP,SAAU,CAAA,EACV,YAAa,AAAA,GAAY,QAAQ,CACjC,WAAY,CAAA,EACZ,OAAQ,IACV,EACD,CLKK,GAAU,CACd,UAAW,EACX,oBAAqB,EACrB,iBAAkB,EAClB,aAAc,CAChB,CASA,OAAM,GAEJ,CAAC,EAAK,AAAC,AAEP,EAAC,EAAQ,AAAC,AAEV,EAAC,EAAgB,AAAC,AAElB,EAAC,EAAO,AAAC,AAET,EAAC,EAAW,AAAC,AAQb,aAAY,CAAK,CAAE,CAAO,CAAE,CAAW,CAAE,CACvC,IAAI,CAAC,CAAC,EAAK,CAAG,EACd,IAAI,CAAC,CAAC,EAAO,CAAG,EAChB,IAAI,CAAC,CAAC,EAAW,CAAG,CACtB,CAMA,eAAgB,CACd,IAAI,CAAC,CAAC,EAAgB,CAAG,AAAA,EAAS,IAAI,CAAC,IAAI,CAAC,CAAC,EAAK,CAAC,QAAQ,EAC3D,IAAM,EAAe,IAAI,CAAC,CAAC,EAAO,CAAC,gBAAgB,CAAC,IAAI,CAAC,CAAC,EAAK,CAAC,QAAQ,EAClE,EAAgB,IAAI,CAAC,CAAC,EAAK,CAAC,WAAW,GACzC,IAAI,CAAC,CAAC,EAAqB,CAAC,EAAc,IAAI,CAAC,CAAC,EAAK,CAAC,eAAe,EACrE,IAAI,CAAC,CAAC,EAAO,CAAC,gBAAgB,CAAC,EAAU,QAAQ,EAMrD,GACE,AAJA,KAAK,GAAG,CAAC,EAAc,CAAC,CAAG,EAAa,CAAC,EACzC,KAAK,GAAG,CAAC,EAAc,CAAC,CAAG,EAAa,CAAC,GACrB,AAzDM,EAyDN,IAAI,CAAC,CAAC,EAAK,CAAC,eAAe,EAG/C,IAAI,CAAC,CAAC,EAAO,CAAC,mBAAmB,CAAC,GAClC,CACA,IAAI,CAAC,CAAC,EAAW,CAAC,KAAK,CAAG,IAAI,CAAC,CAAC,EAAK,CACrC,IAAI,EAAY,IAAI,CAAC,CAAC,EAAW,CAAC,kBAAkB,CAClD,EACA,EACA,IAAI,CAAC,CAAC,EAAK,CAAC,eAAe,CAEzB,CAAA,EAAU,MAAM,CAAG,IACrB,IAAI,CAAC,CAAC,EAAQ,CAAG,IAAI,GACnB,CAAE,KAAM,EAAW,MAAO,GAAI,EAC9B,IAAI,CAAC,CAAC,EAAK,CAAC,MAAM,CAAC,QAAQ,EAE7B,IAAI,CAAC,CAAC,EAAiB,CAAC,CAAS,CAAC,EAAU,MAAM,CAAG,EAAE,EAE3D,CACF,CAQA,CAAC,EAAqB,CAAC,CAAW,CAAE,CAAW,EAC7C,IAAM,EAAI,EACR,EAAY,CAAC,CAAG,EAChB,EAAY,CAAC,CAAG,GAEZ,EAAI,EACR,EAAY,CAAC,CAAG,EAChB,EAAY,CAAC,CAAG,GAEZ,EAAO,IAAI,CAAC,CAAC,EAAO,CAAC,cAAc,GACzC,OAAO,IAAI,EACT,EAAW,EAAG,EAAG,EAAK,KAAK,CAAG,GAC9B,EAAW,EAAG,EAAG,EAAK,MAAM,CAAG,GAEnC,CAMA,CAAC,EAAiB,CAAC,CAAQ,EACzB,IAAM,EAAe,IAAI,CAAC,CAAC,EAAO,CAAC,gBAAgB,CAAC,IAAI,CAAC,CAAC,EAAK,CAAC,QAAQ,CACxE,CAAA,IAAI,CAAC,CAAC,EAAK,CAAC,QAAQ,CAAG,EACvB,IAAM,EAAe,IAAI,CAAC,CAAC,EAAO,CAAC,gBAAgB,CAAC,IAAI,CAAC,CAAC,EAAK,CAAC,QAAQ,EACxE,IAAI,CAAC,CAAC,EAAO,CAAC,0BAA0B,CACtC,IAAI,CAAC,CAAC,EAAK,CACX,EACA,EAEJ,CAIA,CAAC,EAAe,GACd,IAAI,CAAC,CAAC,EAAiB,CAAC,IAAI,CAAC,CAAC,EAAgB,CAChD,CAMA,QAAS,OAEP,CADA,IAAI,CAAC,CAAC,EAAe,GACjB,IAAI,CAAC,CAAC,EAAQ,EACT,IAAI,CAAC,CAAC,EAAQ,CAAC,wBAAwB,CAAC,IAAI,CAAC,CAAC,EAAK,CAAC,MAAM,EAE5D,QAAQ,OAAO,EACxB,CACF,CAKA,MAAM,GAEJ,CAAC,EAAO,AAAC,AAET,EAAC,EAAW,AAAC,AAEb,EAAC,EAAM,AAAC,AAMR,aAAY,CAAO,CAAE,CAAW,CAAE,CAChC,IAAI,CAAC,CAAC,EAAM,CAAG,EAAE,CACjB,IAAI,CAAC,CAAC,EAAO,CAAG,EAChB,IAAI,CAAC,CAAC,EAAW,CAAG,CACtB,CAMA,gBAAgB,CAAK,CAAE,CACrB,IAAM,EAAkB,IAAI,GAC1B,EACA,IAAI,CAAC,CAAC,EAAO,CACb,IAAI,CAAC,CAAC,EAAW,EAEnB,EAAgB,aAAa,GAC7B,IAAI,CAAC,CAAC,EAAM,CAAC,IAAI,CAAC,EACpB,CAMA,QAAS,CACP,IAAM,EAAW,EAAE,CAEnB,OADA,IAAI,CAAC,CAAC,EAAM,CAAC,OAAO,CAAC,AAAC,GAAU,EAAS,IAAI,CAAC,EAAM,MAAM,KACnD,QAAQ,GAAG,CAAC,EACrB,CACF,CAKA,MAAM,GACJ,aAAc,CAAC,CAMf,MAAM,aAAa,CAAK,CAAE,CACxB,MAAM,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,KACvB,GAAe,EACR,EAAM,OAAO,IAExB,CAMA,SAAU,CACR,OAAO,QAAQ,OAAO,EACxB,CAQA,QAAQ,CAAa,CAAE,CACrB,OAAO,QAAQ,OAAO,CAAC,KACzB,CAKA,QAAS,CACP,OAAO,QAAQ,OAAO,CAAC,KACzB,CACF,CAyBA,MAAM,WAAmB,GACvB,SAAU,CAQR,OAPa,IAAI,GAAkB,CACjC,GAAI,OACJ,MAAO,OACP,YAAa,kBACb,cAAe,kBACf,cAAe,CAAA,CACjB,GACO,AI3QJ,CAAA,WACL,IAAM,EAAO,IAAI,GAAkB,CACjC,GAAI,OACJ,MAAO,OACP,YAAa,gBACb,cAAe,gBACf,cAAe,CAAA,CACjB,GACM,EAAW,IAAI,GAAkB,CACrC,GAAI,WACJ,MAAO,WACP,YAAa,oBACb,cAAe,oBACf,cAAe,CAAA,EACf,OAAQ,IAAM,ACIX,CAAA,WACL,IAAM,EAAW,EAAE,CAInB,OAHA,GAAS,OAAO,CAAC,AAAC,IAChB,EAAS,IAAI,CAAC,AvBmOX,SAAuB,CAAU,EACtC,IAAI,EACJ,OAAQ,EAAW,WAAW,EAC5B,KAAK,GAAY,WAAW,CAC1B,EAAU,IAAI,GAAkB,GAChC,KACF,MAAK,GAAY,QAAQ,CACvB,EAAU,IAAI,GAAgB,EAAW,KAAK,EAC1C,EAAW,UAAU,EACvB,EAAQ,QAAQ,CAAG,AEnNZ,GFmN4B,GAAG,CACpC,EAAW,GAAG,CACd,EAAW,QAAQ,EAErB,EAAQ,MAAM,CAAG,KACf,AExNK,GFwNW,GAAG,CAAC,EAAW,GAAG,CAAE,EAAQ,QAAQ,EAC7C,EAAW,MAAM,CAAG,EAAW,MAAM,CAAG,QAAQ,OAAO,MAGhE,EAAQ,QAAQ,CAAG,EAAW,QAAQ,CACtC,EAAQ,MAAM,CAAG,EAAW,MAAM,CAGxC,CACA,OAAO,CACT,EuB3PgC,GAC9B,GACO,AAAA,GAAG,kBAAkB,CAAC,WAAY,EAAU,OACrD,CAAA,GDTE,GACA,OAAO,AAAA,GAAG,kBAAkB,CAC1B,kCACA,CAAC,EAAU,EAAK,CAChB,OAEJ,CAAA,IJsP0B,IAAI,CAAC,IAAM,IAAI,CAAC,YAAY,CAAC,IAAI,IACzD,CACF,CAIA,MAAM,WAAgB,GACpB,SAAU,CAER,OADA,AAAA,EAAI,GAAG,CAAC,iBACD,AAAA,GAAG,YAAY,CACpB,uCACA,cACA,QAEC,IAAI,CAAC,IAAM,AAAA,GAAc,kBAAkB,IAC3C,IAAI,CAAC,KACJ,EAAU,MAAM,CAAC,QAAQ,CACvB,AAAA,GAAM,UAAU,GAAG,6BAA6B,GAC3C,GAAa,YAAY,CAAC,IAAI,KAE3C,CACF,CAKA,MAAM,WAAmB,GACvB,MAAM,SAAU,CACd,AAAA,EAAI,GAAG,CAAC,oBACR,AAAA,GAAc,YAAa,CACzB,aAAc,EACd,SAAU,EAAU,QAAQ,CAC5B,SAAU,IAAI,EAAS,EAAG,KAAM,EAClC,GACA,MAAM,AGhTD,IAAI,QAAQ,AAAC,IAClB,WAAW,IAAM,IAAW,IAC9B,GH+SK,IAAI,CAAC,IAAM,AAAA,GAAG,YAAY,CAAC,uBAAwB,cACnD,IAAI,CAAC,IAAM,AAAA,GAAc,kBAAkB,IAC3C,IAAI,CAAC,IAAM,IAAI,CAAC,YAAY,CAAC,IAAI,IACtC,CACF,CAKA,MAAM,WAAwB,GAC5B,MAAM,SAAU,CACd,AAAA,EAAI,GAAG,CAAC,yBACR,MAAM,AAAA,GAAG,YAAY,CAAC,6BAA8B,aACjD,IAAI,CAAC,IAAM,AAAA,GAAc,kBAAkB,IAC3C,IAAI,CAAC,IAAM,IAAI,CAAC,YAAY,CAAC,IAAI,IACtC,CACF,CAKA,MAAM,WAAqB,GACzB,aAAc,CACZ,KAAK,EACP,CAKA,MAAM,SAAU,CACd,MAAM,KAAK,CAAC,UACZ,AAAA,EAAI,GAAG,CAAC,sBACR,MAAM,IACR,CAOA,MAAM,QAAQ,CAAO,CAAE,CAAK,CAAE,CAAM,CAAE,CACpC,OAAQ,GACN,KAAK,GAAQ,mBAAmB,CAExB,GAAQ,SAAW,AAAA,GAAiB,WAAW,CACjD,AAAA,EAAI,KAAK,CAAC,4CAEV,MAAM,GAAgB,GAExB,IAAI,CAAC,YAAY,CAAC,IAAI,IAGxB,KACF,MAAK,GAAQ,gBAAgB,CAC3B,MAAM,6DACN,KACF,MAAK,GAAQ,YAAY,CACvB,AAAA,EAAI,GAAG,CAAC,YACR,MAAM,GAAgB,GAClB,AAAA,GAAc,kBAAkB,GAClC,MAAM,GAAe,IAAI,EAEzB,IAAI,CAAC,YAAY,CAAC,IAAI,GAG5B,CACA,OAAO,QAAQ,OAAO,CAAC,KACzB,CACF,CAKA,MAAM,WAAyB,GAC7B,aAAc,CACZ,KAAK,EACP,CAKA,MAAM,SAAU,CACd,MAAM,KAAK,CAAC,UACZ,AAAA,EAAI,GAAG,CAAC,0BACR,MAAM,IACR,CAOA,MAAM,QAAQ,CAAO,CAAE,CAAK,CAAE,CAAM,CAAE,CACpC,OAAQ,GACN,KAAK,GAAQ,mBAAmB,CAExB,GAAQ,SAAW,AAAA,GAAiB,WAAW,CACjD,MAAM,IAAI,CAAC,CAAC,EAAK,CAAC,GAElB,MAAM,IAAI,CAAC,CAAC,EAAQ,CAAC,GAEnB,AAAyD,IAAzD,AAAA,GAAM,UAAU,GAAG,eAAe,CAAC,GAAW,MAAM,CACtD,IAAI,CAAC,YAAY,CAAC,IAAI,IAEtB,IAAI,CAAC,YAAY,CAAC,IAAI,IAI1B,KACF,MAAK,GAAQ,gBAAgB,CAC3B,MAAM,6DACN,KACF,MAAK,GAAQ,YAAY,CACvB,AAAA,EAAI,GAAG,CAAC,YACR,MAAM,GAAgB,GAClB,AAAA,GAAc,kBAAkB,GAClC,MAAM,GAAe,IAAI,EAEzB,IAAI,CAAC,YAAY,CAAC,IAAI,GAG5B,CACA,OAAO,QAAQ,OAAO,CAAC,KACzB,CAOA,CAAC,EAAK,CAAC,CAAK,EAIV,IAAM,EAAU,AADH,AADG,AAAA,GAAM,UAAU,GACX,mBAAmB,CAAC,GACpB,YAAY,GAC3B,EAAW,EAAE,CACnB,IAAK,IAAM,KAAU,EAAQ,MAAM,GAC7B,EAAO,WAAW,EACpB,EAAS,IAAI,CAAC,EAAO,WAAW,CAAC,KAAK,CAAC,IAG3C,OAAO,QAAQ,GAAG,CAAC,EACrB,CAOA,CAAC,EAAQ,CAAC,CAAK,EAEb,IAAK,IAAM,KADO,AAAA,GAAM,UAAU,GAAG,eAAe,CAAC,GAEnD,GAAI,EAAS,KAAK,EAAI,CAAC,EAAS,WAAW,CAAC,WAAW,CAAC,GACtD,OAAO,QAAQ,OAAO,CAAC,CAAA,GAG3B,OAAO,GAAgB,EACzB,CACF,CAEA,MAAM,WAAyB,GAC7B,aAAc,CACZ,KAAK,EACP,CACA,MAAM,SAAU,CACd,MAAM,KAAK,CAAC,UACZ,AAAA,EAAI,GAAG,CAAC,0BACR,IAAM,EAAU,AAAA,GAAM,UAAU,GAE1B,EAAc,IAAI,GAAY,GAC9B,EAAW,IAAI,GAAiB,EAAS,GACzC,EAAgB,EAAQ,gBAAgB,CAAC,EAAU,QAAQ,EACjE,IAAK,IAAM,KAAS,AAAA,GAAM,SAAS,GAAG,MAAM,GACtC,IAAU,GAAa,EAAM,KAAK,GAChC,EAAM,WAAW,IAEd,AADkB,EAAQ,gBAAgB,CAAC,EAAM,QAAQ,EAC1C,YAAY,CAAC,EAAe,MAC9C,EAAS,eAAe,CAAC,IAcjC,OAPA,MAAM,EAAS,MAAM,GACjB,AAA8C,IAA9C,EAAQ,eAAe,CAAC,GAAW,MAAM,CAC3C,IAAI,CAAC,YAAY,CAAC,IAAI,IAEtB,IAAI,CAAC,YAAY,CAAC,IAAI,IAGjB,QAAQ,OAAO,CAAC,KACzB,CACF,CAEA,MAAM,WAA6B,GACjC,aAAc,CACZ,KAAK,EACP,CACA,MAAM,SAAU,CACd,MAAM,KAAK,CAAC,UACZ,AAAA,EAAI,GAAG,CAAC,8BACR,IAAM,EAAU,AAAA,GAAM,UAAU,GAE1B,EAAc,IAAI,GAAY,GAC9B,EAAW,IAAI,GAAiB,EAAS,GACzC,EAAe,EAAQ,eAAe,CAAC,GAC7C,IAAK,IAAM,KAAS,AAAA,GAAM,SAAS,GAAG,MAAM,GACtC,IAAU,GAAa,EAAM,KAAK,GAChC,EAAa,QAAQ,CAAC,GACxB,MAAM,EAAM,WAAW,CAAC,KAAK,CAAC,GAE9B,EAAS,eAAe,CAAC,IAa/B,OATA,MAAM,EAAS,MAAM,GACjB,AAA+B,IAA/B,EAAU,MAAM,CAAC,GAAG,CAAC,MACvB,IAAI,CAAC,YAAY,CAAC,IAAI,IACb,AAAwB,IAAxB,EAAa,MAAM,CAC5B,IAAI,CAAC,YAAY,CAAC,IAAI,IAEtB,IAAI,CAAC,YAAY,CAAC,IAAI,IAGjB,QAAQ,OAAO,CAAC,KACzB,CACF,CAMA,SAAS,KACP,IAAM,EAAU,AAAA,GAAM,UAAU,GAC1B,EAAS,IAAI,GAAY,EAAS,GAAW,gBAAgB,CACjE,EAAQ,gBAAgB,CAAC,EAAU,MAAM,CAAC,QAAQ,EAClD,EAAU,eAAe,EAI3B,OAFA,EAAQ,iBAAiB,CAAC,GAC1B,EAAQ,eAAe,CAAC,EAAQ,eAAe,CAAC,IACzC,QAAQ,OAAO,CAAC,KACzB,CAOA,SAAS,GAAgB,CAAK,EAC5B,IAAM,EAAU,AAAA,GAAM,UAAU,GAC1B,EAAY,EAAQ,wBAAwB,CAAC,SAGnD,CAFA,EAAQ,iBAAiB,CAAC,MAC1B,EAAQ,eAAe,CAAC,MACpB,GAKK,AAJU,IAAI,GACnB,CAAE,KAAM,EAAW,MAAO,GAAI,EAC9B,EAAU,MAAM,CAAC,QAAQ,EAEX,wBAAwB,CAAC,EAAU,MAAM,EAElD,QAAQ,OAAO,EAE1B,CAOA,SAAS,GAAe,CAAY,EAClC,OAAO,AAAA,GAAc,iBAAiB,GAAG,IAAI,CAAC,KAC5C,EAAU,MAAM,CAAC,QAAQ,CACvB,AAAA,GAAM,UAAU,GAAG,6BAA6B,GAC3C,EAAa,YAAY,CAAC,IAAI,KAEzC,CA2CA,IAAI,GAAe,IA/XnB,cAA6B,GAC3B,SAAU,CACR,AAAA,EAAI,GAAG,CAAC,uBACV,CAOA,MAAM,QAAQ,CAAO,CAAE,CAAW,CAAE,CAAY,CAAE,CAC5C,IAAY,GAAQ,SAAS,EAC/B,IAAI,CAAC,YAAY,CAAC,IAAI,GAE1B,CACF,EAqXI,GAAe,CAAA,EAYnB,IAAA,GAPqB,CACnB,QAAS,GACT,aAhCF,WACE,OAAO,CACT,EA+BE,QAzBF,SAAiB,CAAK,EACpB,EAAY,CACd,EAwBE,aAjDF,SAAsB,CAAO,CAAE,CAAM,CAAE,CAAM,EAC3C,GAAI,GAAc,CAChB,AAAA,EAAI,KAAK,CAAC,CAAC,eAAe,EAAE,EAAQ,mCAAmC,CAAC,EACxE,MACF,CACA,GAAe,CAAA,EACf,GAAa,OAAO,CAAC,EAAS,EAAQ,GAAQ,IAAI,CAAC,KACjD,GAAe,CAAA,CACjB,EACF,CAyCA,EFnnBO,MAAM,GAAmB,CAC9B,cAAe,EACf,YAAa,CACf,EAMa,GAAW,CACtB,SAAU,GACV,OAAQ,EACR,SAAU,EACV,KAAM,CAGR,CAYO,OAAM,WAAa,GAExB,MAAO,AAEP,CAAA,QAAS,AAET,EAAC,EAAS,AAAC,AAEX,EAAC,EAAS,AAAC,AAEX,EAAC,EAAU,AAAC,AAEZ,EAAC,EAAI,AAAC,AAUN,aAAY,CAAU,CAAE,CAAO,CAAE,CAC/B,KAAK,GACL,IAAI,CAAC,MAAM,CAAG,EACd,IAAI,CAAC,CAAC,EAAS,CAAG,IAAI,IACtB,IAAI,CAAC,QAAQ,CAAG,EAAQ,QAAQ,CAChC,IAAI,CAAC,CAAC,EAAS,CAAG,EAAQ,SAAS,CACnC,IAAI,CAAC,CAAC,EAAU,CAAG,EAAQ,UAAU,CACrC,IAAI,CAAC,CAAC,EAAI,CAAG,EAAQ,IAAI,AAC3B,CAKA,IAAI,MAAO,CACT,OAAO,IAAI,CAAC,CAAC,EAAI,AACnB,CAMA,IAAI,WAAY,CACd,OAAO,IAAI,CAAC,CAAC,EAAS,AACxB,CAKA,IAAI,YAAa,CACf,OAAO,IAAI,CAAC,CAAC,EAAU,AACzB,CAKA,YAAY,CAAQ,CAAE,CACpB,IAAI,CAAC,CAAC,EAAS,CAAC,GAAG,CAAC,EAAU,EAChC,CAKA,eAAe,CAAQ,CAAE,CACvB,IAAI,CAAC,CAAC,EAAS,CAAC,MAAM,CAAC,EACzB,CAKA,cAAe,CACb,OAAO,IAAI,CAAC,CAAC,EAAS,AACxB,CAKA,YAAY,CAAW,CAAE,CACvB,KAAK,CAAC,YAAY,IAAI,CAAC,MAAM,CAAC,QAAQ,CACxC,CAIA,mBAAmB,CAAW,CAAE,CAC9B,KAAK,CAAC,YAAY,IAAI,CAAC,MAAM,CAAC,QAAQ,CACxC,CAMA,YAAa,CACX,OAAO,IAAI,CAAC,CAAC,EAAS,CAAC,IAAI,CAAG,CAChC,CAOA,kBAAkB,CAAK,CAAE,CACvB,GAAI,IAAI,CAAC,QAAQ,CACf,MAAO,CAAA,EAET,IAAK,IAAM,KAAY,IAAI,CAAC,CAAC,EAAS,CAAC,MAAM,GAC3C,GAAI,IAAa,GAAS,CAAC,EAAS,iBAAiB,CAAC,GACpD,MAAO,CAAA,EAGX,MAAO,CAAA,CACT,CAOA,qBAAqB,CAAK,CAAE,CAC1B,GAAI,IAAI,CAAC,QAAQ,CACf,MAAO,CAAA,EAET,IAAK,IAAM,KAAY,IAAI,CAAC,CAAC,EAAS,CAAC,MAAM,GAC3C,GAAI,IAAa,GAAS,CAAC,EAAS,yBAAyB,CAAC,GAC5D,MAAO,CAAA,EAGX,MAAO,CAAA,CACT,CAOA,aAAa,CAAW,CAAE,OAEtB,CAAA,IAAI,CAAC,QAAQ,EACb,IAAI,CAAC,CAAC,EAAI,GAAK,GAAS,QAAQ,EAChC,IAAI,CAAC,CAAC,EAAI,GAAK,GAAS,IAAI,AAKhC,CACF,CAKO,MAAM,GAEX,CAAC,CAAO,AAAC,AAET,EAAC,EAAK,AAAC,AACP,EAAC,EAAM,AAAC,AACR,EAAC,EAAM,AAAC,AACR,EAAC,EAAQ,AAAC,AACV,EAAC,CAAK,AAAC,AACP,EAAC,CAAM,AAAC,AAER,EAAC,EAAc,AAAC,AAEhB,EAAC,EAAkB,AAAC,AAEpB,EAAC,EAAuB,AAAC,AAEzB,EAAC,EAAQ,AAAC,AAEV,EAAC,EAAI,AAAC,AAEN,EAAC,EAAoB,AAAC,AAEtB,EAAC,EAAmB,AAAC,AAErB,EAAC,EAAY,AAAC,AAEd,EAAC,EAAa,AAAC,AAEf,EAAC,EAAoB,AAAC,AAEtB,EAAC,EAAqB,AAAC,AAQvB,aAAY,CAAO,CAAE,CAAI,CAAE,CAAQ,CAAE,CACnC,IAAM,EAAS,EAAK,MAAM,AAC1B,CAAA,IAAI,CAAC,CAAC,EAAoB,CAAG,EAAK,gBAAgB,CAClD,IAAI,CAAC,CAAC,EAAmB,CAAG,EAAK,eAAe,CAChD,IAAI,CAAC,CAAC,CAAO,CAAG,EAChB,IAAI,CAAC,CAAC,EAAuB,CAAG,IAAI,GAAO,CACzC,SAAU,IAAI,GAAyB,EAAS,CAC9C,MAAO,EACP,OAAQ,EACR,UAAW,KACX,YAAa,OACf,EACF,GACA,IAAI,CAAC,CAAC,EAAqB,CAAG,IAAI,GAAO,CACvC,SAAU,IAAI,GAAyB,EAAS,CAC9C,MAAO,EACP,OAAQ,EACR,UAAW,KACX,YAAa,KACf,EACF,GACA,IAAI,CAAC,CAAC,EAAQ,CAAG,EACjB,IAAI,CAAC,CAAC,EAAK,CAAG,EAAE,CAChB,IAAI,CAAC,CAAC,EAAM,CAAG,EAAO,MAAM,CAC5B,IAAI,CAAC,CAAC,EAAM,CAAG,CAAM,CAAC,EAAE,CAAC,MAAM,CAC/B,IAAI,CAAC,CAAC,CAAK,CAAG,EAAW,IAAI,CAAC,MAAM,CACpC,IAAI,CAAC,CAAC,CAAM,CAAG,EAAW,IAAI,CAAC,MAAM,CACrC,IAAI,CAAC,CAAC,EAAY,CAAG,EAAE,CACvB,EAAO,OAAO,CAAC,CAAC,EAAK,KACnB,IAAM,EAAU,EAAE,CAClB,IAAI,CAAC,CAAC,EAAK,CAAC,IAAI,CAAC,GACjB,EAAI,OAAO,CAAC,CAAC,EAAU,KACrB,GAAI,EAAU,CACZ,IAAM,EAAS,IAAI,GAAO,CACxB,SAAU,IAAI,GACZ,EACA,AAAA,GAAc,eAAe,CAAC,EAAG,EAAS,KAAK,EAEnD,GACM,EAAY,IAAI,EAAM,EAAa,GACnC,EAAa,IAAI,CAAC,qBAAqB,CAAC,GAC1C,EAAO,IAAI,GAAK,EAAQ,CAC1B,SAAU,EAAS,IAAI,GAAK,GAAS,QAAQ,CAC7C,UAAW,EACX,WAAY,EACZ,KAAM,EAAS,IAAI,AACrB,EACI,CAAA,EAAS,OAAO,GAClB,EAAK,UAAU,CAAC,CAAC,EAAQ,IACvB,IAAI,CAAC,CAAC,EAAW,CAAC,EAAQ,EAAO,EAAS,OAAO,GAEnD,EAAK,iBAAiB,CAAC,EAAS,cAAc,GAEhD,IAAI,CAAC,eAAe,CAAC,GACrB,EAAQ,IAAI,CAAC,GACb,EAAO,QAAQ,CAAC,CAAC,CAAG,EAAc,IAAI,CAAC,CAAC,EAAQ,CAAG,IAAI,CAAC,CAAC,EAAQ,CAAG,EACpE,EAAO,QAAQ,CAAC,CAAC,CAAG,EAAW,IAAI,CAAC,CAAC,EAAQ,CAAG,IAAI,CAAC,CAAC,EAAQ,CAAG,CACnE,MACE,EAAQ,IAAI,CAAC,KAEjB,EACF,GACK,IAAI,CAAC,CAAC,EAAQ,GACjB,AAAA,EAAI,KAAK,CAAC,8DACV,IAAI,CAAC,CAAC,EAAQ,CAAG,IAAI,CAAC,CAAC,EAAY,CAAC,EAAE,CAE1C,CAMA,gBAAiB,CACf,MAAO,CAAE,MAAO,IAAI,CAAC,CAAC,EAAM,CAAE,OAAQ,IAAI,CAAC,CAAC,EAAM,AAAC,CACrD,CAKA,gBAAgB,CAAI,CAAE,CACpB,OAAQ,EAAK,IAAI,EACf,KAAK,GAAS,QAAQ,CACpB,GAAI,IAAI,CAAC,CAAC,EAAQ,CAAE,CAClB,IAAM,EAAK,EAAK,SAAS,CACzB,AAAA,EAAI,KAAK,CAAC,CAAC,6BAA6B,EAAE,EAAG,CAAC,CAAC,EAAE,EAAE,EAAG,CAAC,CAAC,WAAW,CAAC,CACtE,MACE,IAAI,CAAC,CAAC,EAAQ,CAAG,EAEnB,KACF,MAAK,GAAS,IAAI,CAChB,GAAI,IAAI,CAAC,CAAC,EAAI,CAAE,CACd,IAAM,EAAK,EAAK,SAAS,CACzB,AAAA,EAAI,KAAK,CAAC,CAAC,yBAAyB,EAAE,EAAG,CAAC,CAAC,EAAE,EAAE,EAAG,CAAC,CAAC,WAAW,CAAC,CAClE,MACE,IAAI,CAAC,CAAC,EAAI,CAAG,EAEf,KACF,MAAK,GAAS,MAAM,CACb,EAAK,SAAS,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,EAAoB,GACvD,IAAI,CAAC,CAAC,EAAY,CAAC,IAAI,CAAC,EAG9B,CACF,CAMA,OAAO,CAAY,CAAE,CACnB,IAAI,CAAC,CAAC,EAAY,GAClB,IAAM,EAAoB,IAAI,CAAC,uBAAuB,GACtD,IACE,IAAI,EAAM,EAAkB,CAAC,CAC7B,GAAO,EAAkB,CAAC,CAAG,EAAkB,MAAM,CACrD,IAEA,IACE,IAAI,EAAM,EAAkB,CAAC,CAC7B,GAAO,EAAkB,CAAC,CAAG,EAAkB,KAAK,CACpD,IAEA,GAAI,IAAI,CAAC,CAAC,EAAa,EAAE,kBAAkB,IAAI,EAAM,EAAK,IAAO,CAC/D,IAAM,EAAO,IAAI,CAAC,CAAC,EAAK,CAAC,EAAI,CAAC,EAAI,CAClC,GAAM,OAAO,OAAO,EACtB,CAGJ,IAAI,CAAC,CAAC,EAAc,CAAC,EACvB,CAKA,CAAC,EAAY,GACX,IAAM,EAAO,AAAA,GAAa,YAAY,GACtC,GAAI,EAAM,CACH,IAAI,CAAC,CAAC,EAAa,EACtB,CAAA,IAAI,CAAC,CAAC,EAAa,CAAG,IAAI,GAAU,IAAI,CAAE,EAD5C,EAGA,IAAM,EAAW,IAAI,CAAC,mBAAmB,CAAC,EAAK,QAAQ,EACvD,GAAI,EAAU,CACZ,IAAM,EAAe,EAAS,IAAI,CAEhC,GAAgB,GAAS,QAAQ,EACjC,GAAgB,GAAS,IAAI,EAE7B,IAAI,CAAC,CAAC,EAAa,CAAC,gBAAgB,EAExC,MACE,AAAA,EAAI,KAAK,CAAC,CAAC,QAAQ,EAAE,EAAK,QAAQ,CAAC,QAAQ,GAAG,mBAAmB,CAAC,CAEtE,CACF,CAMA,qBAAsB,CACpB,OAAO,IAAI,EAAU,EAAG,EAAG,IAAI,CAAC,CAAC,EAAM,CAAE,IAAI,CAAC,CAAC,EAAM,CACvD,CAMA,yBAA0B,CACxB,IAAM,EAAgB,AAAA,EAAO,sBAAsB,GAC7C,EAAc,IAAI,CAAC,gBAAgB,CACvC,IAAI,EAAM,EAAc,CAAC,CAAE,EAAc,CAAC,GAEtC,EAAc,IAAI,CAAC,gBAAgB,CACvC,IAAI,EACF,EAAc,CAAC,CAAG,EAAc,KAAK,CACrC,EAAc,CAAC,CAAG,EAAc,MAAM,GAGpC,EAAS,KAAK,GAAG,CAAC,EAAG,EAAY,CAAC,EAClC,EAAS,KAAK,GAAG,CAAC,IAAI,CAAC,CAAC,EAAM,CAAG,EAAG,EAAY,CAAC,EACjD,EAAS,KAAK,GAAG,CAAC,EAAG,EAAY,CAAC,EAExC,OAAO,IAAI,EAAU,EAAQ,EAAQ,EAAS,EAAQ,AADvC,KAAK,GAAG,CAAC,IAAI,CAAC,CAAC,EAAM,CAAG,EAAG,EAAY,CAAC,EACQ,EACjE,CAMA,aAAc,CACZ,OAAO,IAAI,CAAC,CAAC,EAAQ,AACvB,CAKA,eAAgB,CACd,MAAO,CAAE,MAAO,IAAI,CAAC,CAAC,CAAK,CAAE,OAAQ,IAAI,CAAC,CAAC,CAAM,AAAC,CACpD,CAOA,oBAAoB,CAAK,CAAE,CACzB,IAAM,EAAY,IAAI,CAAC,gBAAgB,CAAC,GACxC,OAAO,IAAI,CAAC,kBAAkB,CAAC,EACjC,CAOA,mBAAmB,CAAS,CAAE,CAC5B,GAAI,CAAC,EACH,OAAO,KAET,IAAM,EAAM,EAAU,CAAC,CACjB,EAAM,EAAU,CAAC,QACvB,AAAI,GAAO,GAAK,GAAO,GAAK,EAAM,IAAI,CAAC,CAAC,EAAM,EAAI,EAAM,IAAI,CAAC,CAAC,EAAM,CAC3D,IAAI,CAAC,CAAC,EAAK,CAAC,EAAI,CAAC,EAAI,CAEvB,IACT,CAOA,iBAAiB,CAAK,CAAE,CACtB,OAAO,IAAI,EACT,KAAK,KAAK,CAAC,EAAM,CAAC,CAAG,IAAI,CAAC,CAAC,EAAQ,EACnC,KAAK,KAAK,CAAC,EAAM,CAAC,CAAG,IAAI,CAAC,CAAC,EAAQ,EAEvC,CAMA,sBAAsB,CAAK,CAAE,CAC3B,IAAM,EAAY,IAAI,CAAC,gBAAgB,CAAC,GACxC,OAAO,IAAI,CAAC,qBAAqB,CAAC,EACpC,CAMA,sBAAsB,CAAK,CAAE,CAC3B,IAAM,EAAW,GAAM,IAAI,CAAC,CAAC,EAAQ,CACrC,OAAO,IAAI,EACT,EAAM,CAAC,CAAG,IAAI,CAAC,CAAC,EAAQ,CAAG,EAC3B,EAAM,CAAC,CAAG,IAAI,CAAC,CAAC,EAAQ,CAAG,EAE/B,CAMA,+BAAgC,CAC9B,OAAO,IAAI,CAAC,qBAAqB,CAAC,IAAI,CAAC,CAAC,EAAoB,CAC9D,CAKA,2BAA4B,CAC1B,OAAO,IAAI,CAAC,CAAC,EAAQ,CAAC,SAAS,AACjC,CAMA,kBAAkB,CAAM,CAAE,CACxB,IAAI,CAAC,CAAC,EAAc,CAAG,EACnB,GACF,IAAI,CAAC,CAAC,EAAkB,CAAG,IAAI,IAC/B,IAAI,CAAC,CAAC,EAAc,CAAC,OAAO,CAAC,AAAC,GAC5B,EAAW,OAAO,CAAC,AAAC,IAClB,IAAI,CAAC,CAAC,EAAkB,CAAC,GAAG,CAAC,EAAW,EAC1C,KAGF,IAAI,CAAC,CAAC,EAAkB,CAAG,IAE/B,CAMA,gBAAgB,CAAM,CAAE,CACtB,IAAI,CAAC,CAAC,EAAoB,CAAG,EAAE,CAC/B,GAAQ,QAAQ,AAAC,IACf,IAAI,CAAC,CAAC,EAAoB,CAAC,IAAI,CAAC,IAAI,CAAC,gBAAgB,CAAC,EAAM,QAAQ,EACtE,EACF,CAOA,CAAC,EAAc,CAAC,CAAY,EAC1B,IAAI,CAAC,CAAC,EAAsB,CAAC,GAC7B,IAAI,CAAC,CAAC,EAAoB,CAAC,EAC7B,CAMA,CAAC,EAAsB,CAAC,CAAY,EAClC,IAAI,CAAC,CAAC,EAAkB,EAAE,QAAQ,AAAC,IACjC,IAAI,CAAC,CAAC,EAAuB,CAAC,QAAQ,CACpC,IAAI,CAAC,qBAAqB,CAAC,GAC7B,IAAI,CAAC,CAAC,EAAuB,CAAC,MAAM,CAAC,EACvC,EACF,CAMA,CAAC,EAAoB,CAAC,CAAY,EAChC,IAAI,CAAC,CAAC,EAAoB,EAAE,QAAQ,AAAC,IACnC,IAAI,CAAC,CAAC,EAAqB,CAAC,QAAQ,CAAG,IAAI,CAAC,qBAAqB,CAAC,GAClE,IAAI,CAAC,CAAC,EAAqB,CAAC,MAAM,CAAC,EACrC,EACF,CAUA,CAAC,EAAW,CAAC,CAAM,CAAE,CAAK,CAAE,CAAY,EACtC,GAAI,IAAI,CAAC,CAAC,EAAc,EAAE,kBAAkB,IAAI,CAAC,gBAAgB,CAAC,IAAS,CACzE,EAAa,EAAQ,EAAO,CAAE,OAAQ,GAAiB,aAAa,AAAC,GACrE,MACF,CACA,IAAM,EAAY,IAAI,CAAC,gBAAgB,CAAC,EACxC,CAAA,IAAI,CAAC,CAAC,EAAoB,EAAE,QAAQ,AAAC,IACnC,GAAI,EAAG,YAAY,CAAC,GAAY,CAC9B,EAAa,EAAQ,EAAO,CAC1B,OAAQ,GAAiB,WAAW,AACtC,GACA,MACF,CACF,GACA,AAAA,EAAI,KAAK,CAAC,2CACZ,CAOA,yBAAyB,CAAU,CAAE,CACnC,IAAM,EAAc,IAAI,CAAC,gBAAgB,CAAC,GAC1C,OAAO,IAAI,CAAC,CAAC,EAAc,EAAE,0BAA0B,EACzD,CAMA,yBAA0B,CAExB,IAAK,IAAM,KADX,AAAA,GAAU,IAAI,CAAC,CAAC,EAAY,EACT,IAAI,CAAC,CAAC,EAAY,EACnC,GAAI,CAAC,EAAK,UAAU,GAClB,OAAO,EAGX,OAAO,IACT,CAQA,2BAA2B,CAAS,CAAE,CAAK,CAAE,CAC3C,IAAM,EAAO,IAAI,CAAC,kBAAkB,CAAC,SACrC,EAAK,GAIE,EAAK,iBAAiB,CAAC,EAChC,CAQA,8BAA8B,CAAS,CAAE,CAAK,CAAE,CAC9C,IAAM,EAAO,IAAI,CAAC,kBAAkB,CAAC,SACrC,EAAK,GAGE,EAAK,oBAAoB,CAAC,EACnC,CAOA,oBAAoB,CAAS,CAAE,CAC7B,OAAO,IAAI,CAAC,CAAC,EAAa,EAAE,kBAAkB,IAAc,CAAA,CAC9D,CAQA,aAAa,CAAS,CAAE,CAAK,CAAE,CAC7B,IAAM,EAAO,IAAI,CAAC,kBAAkB,CAAC,SACrC,CAAK,GAIE,EAAK,YAAY,CAAC,EAC3B,CAMA,oBAAoB,CAAS,CAAE,CAC7B,OAAO,AAAA,GAAa,IAAI,CAAC,CAAC,EAAK,CAAE,EAAU,CAAC,CAAE,EAAU,CAAC,CAC3D,CAQA,2BAA2B,CAAQ,CAAE,CAAS,CAAE,CAC9C,IAAI,CAAC,kBAAkB,CAAC,IAAY,eAAe,EACrD,CASA,2BAA2B,CAAQ,CAAE,CAAY,CAAE,CAAY,CAAE,CAC3D,IAAiB,IACnB,IAAI,CAAC,kBAAkB,CAAC,IAAe,eAAe,GACtD,IAAI,CAAC,kBAAkB,CAAC,IAAe,YAAY,GAEvD,CAQA,gBAAgB,CAAK,CAAE,CACrB,IAAM,EAAe,EAAE,CACjB,EAAY,IAAI,CAAC,mBAAmB,CACxC,IAAI,CAAC,gBAAgB,CAAC,EAAM,QAAQ,GActC,MANA,AANc,CACZ,EAAU,KAAK,CACf,EAAU,KAAK,CACf,EAAU,KAAK,CACf,EAAU,IAAI,CACf,CACK,OAAO,CAAC,AAAC,IACb,IAAI,EAAgB,GAAM,eAC1B,GAAe,QAAQ,AAAC,IACtB,EAAa,IAAI,CAAC,EACpB,EACF,GACO,CACT,CACF,CQjtBA,SAAS,GAAiB,CAAS,EACjC,MAAO,CACL,KAAM,AAAA,GAAS,MAAM,CACrB,QAAS,CAAC,EAAQ,EAAO,IACvB,AAAA,GAAa,YAAY,CACvB,AAAA,GAAa,OAAO,CAAC,mBAAmB,CACxC,EACA,GAEJ,MAAO,CACT,CACF,CAMA,SAAS,GAAmB,CAAS,EACnC,MAAO,CACL,KAAM,AAAA,GAAS,QAAQ,CACvB,QAAS,CAAC,EAAQ,EAAO,IACvB,AAAA,GAAa,YAAY,CACvB,AAAA,GAAa,OAAO,CAAC,gBAAgB,CACrC,EACA,GAEJ,MAAO,CACT,CACF,CAMA,SAAS,GAAe,CAAS,EAC/B,MAAO,CACL,KAAM,AAAA,GAAS,IAAI,CACnB,QAAS,CAAC,EAAQ,EAAO,IACvB,AAAA,GAAa,YAAY,CACvB,AAAA,GAAa,OAAO,CAAC,YAAY,CACjC,EACA,GAEJ,MAAO,CACT,CACF,CAEO,MAAM,GAAgB,IAAI,IAAI,CACnC,CAAC,IAAK,CAAE,KAAM,AAAA,GAAS,QAAQ,CAAE,MAAO,WAAY,EAAE,CAEtD,CAAC,OAAQ,CAAE,KAAM,AAAA,GAAS,QAAQ,CAAE,MAAO,aAAc,EAAE,CAC3D,CAAC,QAAS,CAAE,KAAM,AAAA,GAAS,QAAQ,CAAE,MAAO,cAAe,EAAE,CAC7D,CAAC,MAAO,CAAE,KAAM,AAAA,GAAS,QAAQ,CAAE,MAAO,YAAa,EAAE,CACzD,CAAC,OAAQ,CAAE,KAAM,AAAA,GAAS,QAAQ,CAAE,MAAO,aAAc,EAAE,CAC3D,CAAC,QAAS,CAAE,KAAM,AAAA,GAAS,QAAQ,CAAE,MAAO,cAAe,EAAE,CAC7D,CAAC,MAAO,CAAE,KAAM,AAAA,GAAS,QAAQ,CAAE,MAAO,YAAa,EAAE,CACzD,CAAC,OAAQ,CAAE,KAAM,AAAA,GAAS,QAAQ,CAAE,MAAO,aAAc,EAAE,CAC3D,CAAC,QAAS,CAAE,KAAM,AAAA,GAAS,QAAQ,CAAE,MAAO,cAAe,EAAE,CAC7D,CAAC,MAAO,CAAE,KAAM,AAAA,GAAS,QAAQ,CAAE,MAAO,YAAa,EAAE,CACzD,CAAC,OAAQ,CAAE,KAAM,AAAA,GAAS,QAAQ,CAAE,MAAO,aAAc,EAAE,CAC3D,CAAC,QAAS,CAAE,KAAM,AAAA,GAAS,QAAQ,CAAE,MAAO,cAAe,EAAE,CAC7D,CAAC,MAAO,CAAE,KAAM,AAAA,GAAS,QAAQ,CAAE,MAAO,YAAa,EAAE,CACzD,CAAC,OAAQ,CAAE,KAAM,AAAA,GAAS,QAAQ,CAAE,MAAO,aAAc,EAAE,CAC3D,CAAC,OAAQ,CAAE,KAAM,AAAA,GAAS,QAAQ,CAAE,MAAO,aAAc,EAAE,CAC3D,CAAC,OAAQ,CAAE,KAAM,AAAA,GAAS,QAAQ,CAAE,MAAO,aAAc,EAAE,CAC3D,CAAC,SAAU,CAAE,KAAM,AAAA,GAAS,QAAQ,CAAE,MAAO,eAAgB,EAAE,CAC/D,CAAC,SAAU,CAAE,KAAM,AAAA,GAAS,QAAQ,CAAE,MAAO,eAAgB,EAAE,CAC/D,CAAC,SAAU,CAAE,KAAM,AAAA,GAAS,QAAQ,CAAE,MAAO,eAAgB,EAAE,CAC/D,CAAC,SAAU,CAAE,KAAM,AAAA,GAAS,QAAQ,CAAE,MAAO,eAAgB,EAAE,CAC/D,CAAC,IAAK,CAAE,KAAM,AAAA,GAAS,QAAQ,CAAE,MAAO,WAAY,EAAE,CAEtD,CAAC,MAAO,GAAe,cAAc,CACrC,CAAC,MAAO,GAAe,cAAc,CACrC,CAAC,MAAO,GAAe,cAAc,CACrC,CAAC,MAAO,GAAe,cAAc,CACrC,CAAC,MAAO,GAAmB,cAAc,CACzC,CAAC,MAAO,GAAmB,cAAc,CACzC,CAAC,MAAO,GAAmB,cAAc,CACzC,CAAC,MAAO,GAAmB,cAAc,CACzC,CAAC,IAAK,CAAE,KAAM,AAAA,GAAS,QAAQ,CAAE,MAAO,WAAY,EAAE,CACtD,CAAC,IAAK,CAAE,KAAM,AAAA,GAAS,QAAQ,CAAE,MAAO,WAAY,EAAE,CAEtD,CAAC,IAAK,GAAiB,aAAa,CACpC,CAAC,QAAS,GAAiB,iBAAiB,CAC5C,CAAC,QAAS,GAAiB,iBAAiB,CAE5C,CAAC,QAAS,GAAiB,kBAAkB,CAC7C,CAAC,QAAS,GAAiB,kBAAkB,CAC7C,CAAC,IAAK,GAAiB,cAAc,CACtC,CC3FM,OAAM,GAEX,CAAC,EAAa,AAAC,AAEf,EAAC,CAAkB,AAAC,AAGpB,EAAC,EAAU,AAAC,AAEZ,EAAC,EAAW,AAAC,AAGb,EAAC,EAAc,AAAC,AAGhB,CAAA,SAAU,AAOV,aAAY,EAAa,CAAC,CAAE,EAAc,CAAC,CAAE,CACvC,EAAa,GACf,IAAI,CAAC,CAAC,EAAa,CAAG,EACtB,IAAI,CAAC,CAAC,CAAkB,CAAG,EAAI,GAE/B,IAAI,CAAC,CAAC,CAAkB,CAAG,EAE7B,IAAI,CAAC,CAAC,EAAU,CAAG,EACnB,IAAI,CAAC,CAAC,EAAW,CAAG,CACtB,CAMA,YAAa,CACX,OAAO,IAAI,CAAC,CAAC,EAAa,AAC5B,CAMA,MAAO,CACL,OAAO,IAAI,CAAC,MAAM,EACpB,CAOA,YAAa,CACX,OAAO,IAAI,CAAC,YAAY,EAC1B,CAOA,OAAO,CAAY,CAAE,CACnB,AAAA,EAAO,WAAW,GAClB,AAAA,EAAO,UAAU,CAAC,IAAI,CAAC,CAAC,EAAa,EACrC,AAAA,GAAM,MAAM,CAAC,GACb,IAAI,CAAC,QAAQ,CAAC,GACd,AAAA,GAAI,MAAM,CAAC,GACX,AAAA,EAAO,UAAU,CAAC,GACe,IAA7B,IAAI,CAAC,CAAC,CAAkB,GAC1B,IAAI,CAAC,CAAC,EAAa,EAAI,EAAe,IAAI,CAAC,CAAC,CAAkB,CAC1D,IAAI,CAAC,CAAC,EAAa,CAAG,GACxB,IAAI,CAAC,CAAC,CAAkB,CAAG,EAC3B,IAAI,CAAC,CAAC,EAAa,CAAG,GACb,IAAI,CAAC,CAAC,EAAa,CAAG,IAC/B,IAAI,CAAC,CAAC,CAAkB,CAAG,EAC3B,IAAI,CAAC,CAAC,EAAa,CAAG,IAGtB,IAAI,CAAC,CAAC,EAAc,EAAI,AAAwB,IAAxB,IAAI,CAAC,CAAC,EAAa,GAC7C,IAAI,CAAC,CAAC,EAAc,GACpB,IAAI,CAAC,CAAC,EAAc,CAAG,KAE3B,CAOA,QAAS,CACP,OAAO,IAAI,CAAC,CAAC,EAAO,GAAG,IAAI,CAAC,IAAM,IAAI,CAAC,QAAQ,GACjD,CAMA,CAAC,EAAO,UACN,AAAI,IAAI,CAAC,CAAC,EAAW,CAAG,GACtB,IAAI,CAAC,CAAC,CAAkB,CAAG,GAAK,IAAI,CAAC,CAAC,EAAW,CAC1C,IAAI,QAAQ,AAAC,IAClB,IAAI,CAAC,CAAC,EAAc,CAAG,CACzB,IAEO,QAAQ,OAAO,EAE1B,CAOA,QAAS,CACP,OAAO,QAAQ,OAAO,EACxB,CAOA,cAAe,CACb,OAAO,QAAQ,OAAO,EACxB,CAOA,SAAS,CAAkB,CAAE,CAC3B,OAAO,QAAQ,OAAO,EACxB,CAOA,UAAW,CACT,OAAO,QAAQ,OAAO,EACxB,CACF,CZ9IA,MAAM,GAAY,AAAA,GAAc,SAAS,AAalC,OAAM,GAEX,KAAM,AAEN,CAAA,IAAK,AAEL,CAAA,OAAQ,AAER,CAAA,SAAU,AAIV,cAAc,CACZ,IAAI,CAAC,OAAO,CAAG,EAAE,CACjB,IAAI,CAAC,SAAS,CAAG,EAAE,AACrB,CACF,CAuCA,MAAM,WAAoB,GAExB,CAAC,EAAS,AAAC,AAGX,aAAY,CAAS,CAAE,CACrB,KAAK,GACL,IAAI,CAAC,CAAC,EAAS,CAAG,CACpB,CAGA,QAAS,CACP,OAAO,QAAQ,OAAO,EACxB,CAEA,cAAe,CACb,IAAM,EAAW,AAAA,GAAS,mBAAmB,CAC3C,IAAI,CAAC,CAAC,EAAS,CAAC,SAAS,CACzB,IAEI,EAAU,IAAI,GAAQ,AAAA,EAAO,YAAY,GAAI,EAAU,IAU7D,OATA,AAAA,GAAM,UAAU,CAAC,GACjB,IAAI,CAAC,SAAS,CAAG,AArDrB,SAAoB,CAAS,EAC3B,GAAI,EAAU,IAAI,CAAE,CAClB,IAAM,EAAQ,AHmMH,GGnMa,GAAG,CAAC,EAAU,IAAI,CAAC,EAAE,EAAE,MAAM,GAGrD,OAFA,EAAM,MAAM,CAAG,EAAU,IAAI,CAAC,MAAM,CAAC,KAAK,GAC1C,EAAW,EACJ,CACT,CACE,GAAI,CAAC,EACH,MAAM,AAAI,MAAM,6BAElB,OAAO,CAEX,EAyCgC,IAAI,CAAC,CAAC,EAAS,EAC3C,AApCJ,CAAA,SAAuB,CAAS,EAC9B,IAAM,EAAU,EAAE,CAMlB,OALA,EAAU,OAAO,CAAC,OAAO,CAAC,AAAC,IACzB,IAAM,EAAQ,AHgLH,GGhLa,GAAG,CAAC,EAAM,EAAE,EAAE,MAAM,EAC5C,CAAA,EAAM,MAAM,CAAG,EAAM,MAAM,CAC3B,EAAQ,IAAI,CAAC,EACf,GACO,CACT,CAAA,EA4BkB,IAAI,CAAC,CAAC,EAAS,EAAE,OAAO,CAAC,AAAC,IACtC,EAAM,QAAQ,CAAG,EAAQ,uBAAuB,GAAG,UAAU,CAC7D,AAAA,GAAM,QAAQ,CAAC,EACjB,GACA,AAAA,GAAc,gBAAgB,CAAC,IAAI,CAAC,SAAS,CAAC,MAAM,CAAE,IAAK,GAC3D,AAAA,GAAM,QAAQ,CAAC,IAAI,CAAC,SAAS,EAC7B,AAAA,GAAa,OAAO,CAAC,IAAI,CAAC,SAAS,EAC5B,QAAQ,OAAO,EACxB,CAKA,SAAS,CAAkB,CAAE,CAE7B,CAKA,UAAW,CACT,OAAO,QAAQ,OAAO,CAAC,KACzB,CACF,CaxHO,MAAM,GAEX,CAAC,EAAM,AAAC,AAER,EAAC,EAAQ,AAAC,AAMV,aAAY,CAAa,CAAE,CACrB,GACF,IAAI,CAAC,CAAC,EAAM,CAAG,IAAI,IAAI,GACvB,IAAI,CAAC,CAAC,EAAQ,CAAG,CAAA,IAEjB,IAAI,CAAC,CAAC,EAAM,CAAG,IAAI,IACnB,IAAI,CAAC,CAAC,EAAQ,CAAG,CAAA,EAErB,CAOA,IAAI,CAAG,CAAE,CAAK,CAAE,CACd,GAAI,IAAI,CAAC,CAAC,EAAQ,EAAI,IAAI,CAAC,CAAC,EAAM,CAAC,GAAG,CAAC,GACrC,IAAI,CAAC,CAAC,EAAM,CAAC,GAAG,CAAC,EAAK,QAEtB,MAAM,AAAI,MAAM,CAAC,4BAA4B,EAAE,EAAI,CAAC,CAAC,CAEzD,CAOA,IAAI,CAAG,CAAE,CACP,OAAO,IAAI,CAAC,CAAC,EAAM,CAAC,GAAG,CAAC,EAC1B,CAUA,cAAc,CAAU,CAAE,CASxB,OARA,EAAW,KAAK,CAAC,KAAK,OAAO,CAAC,AAAC,IAC7B,IAAM,EAAQ,EAAK,KAAK,CAAC,iCACzB,GAAI,EACF,IAAI,CAAC,CAAC,EAAe,CAAC,CAAK,CAAC,EAAE,CAAE,CAAK,CAAC,EAAE,OAExC,MAAM,AAAI,MAAM,CAAC,4BAA4B,EAAE,EAAK,CAAC,CAAC,CAE1D,GACO,IAAI,AACb,CASA,CAAC,EAAe,CAAC,CAAG,CAAE,CAAK,EACzB,IAAM,EAAc,EAAM,KAAK,CAAC,uBAC5B,GACF,IAAI,CAAC,CAAC,EAAM,CAAC,GAAG,CAAC,EAAK,CAAW,CAAC,EAAE,EACpC,IAAI,CAAC,CAAC,EAAM,CAAC,GAAG,CAAC,CAAC,EAAE,EAAI,IAAI,CAAC,CAAE,CAAW,CAAC,EAAE,GAE7C,IAAI,CAAC,CAAC,EAAM,CAAC,GAAG,CAAC,EAAK,EAE1B,CAMA,OAAQ,CACN,IAAM,EAAc,IAAI,GAAY,IAAI,CAAC,CAAC,EAAM,EAEhD,OADA,EAAY,CAAC,EAAQ,CAAG,IAAI,CAAC,CAAC,EAAQ,CAC/B,CACT,CACF,CAKO,MAAM,WAAwB,GAKnC,YAAY,CAAa,CAAE,CACzB,KAAK,CACH,GACE,IAAI,IAAI,CACN,CAAC,OAAQ,UAAU,CACnB,CAAC,WAAY,SAAS,CACtB,CAAC,KAAM,GAAG,CACV,CAAC,SAAU,GAAG,CACd,CAAC,MAAO,GAAG,CACX,CAAC,UAAW,GAAG,CAChB,EAEP,CACF,CC7GO,MAAM,GACX,CAAC,EAAO,AAAC,AACT,EAAC,EAAO,AAAC,AACT,EAAC,EAAW,AAAC,AACb,EAAC,EAAW,AAAC,AACb,EAAC,EAAO,AAAC,AACT,EAAC,EAAQ,AAAC,AACV,EAAC,EAAW,AAAC,AACb,EAAC,EAAO,AAAC,AACT,EAAC,EAAO,AAAC,AACT,EAAC,EAAO,AAAC,AAWT,aAAY,CAAO,CAAE,CACnB,IAAI,CAAC,CAAC,EAAO,CAAG,EACd,EAAQ,OAAO,CACf,EAAQ,OAAO,EAEjB,IAAI,CAAC,CAAC,EAAO,CAAG,EACd,EAAQ,OAAO,CACf,EAAQ,OAAO,EAEjB,IAAI,CAAC,CAAC,EAAW,CAAG,EAAQ,WAAW,CACvC,IAAI,CAAC,CAAC,EAAW,CAAG,EAAQ,WAAW,CACvC,IAAI,CAAC,CAAC,EAAO,CAAG,AAAA,GAAe,IAAI,CAAC,EAAE,CACtC,IAAI,CAAC,CAAC,EAAQ,CAAG,AAAA,GAAe,MAAM,CAAC,EAAE,CACzC,IAAI,CAAC,CAAC,EAAO,CAAG,AAAA,GAAe,IAAI,CAAC,EAAE,CACtC,IAAI,CAAC,CAAC,EAAW,CAAG,AAAA,GAAe,OAAO,CAAC,EAAE,CAC7C,IAAI,CAAC,CAAC,EAAO,CAAG,AAAA,GAAe,QAAQ,CAAC,EAAE,AAC5C,CAMA,UAAW,CAGT,IAAI,CAAC,CAAC,EAAO,CAAG,EAAE,CAClB,IAAI,EAAmB,EACnB,EAAe,IAAI,CAAC,CAAC,EAAO,CAChC,KAAO,IAAI,CAAC,CAAC,EAAO,CAAC,MAAM,CAAG,IAAI,CAAC,CAAC,EAAO,CAJvB,GAIuC,CACzD,IAAM,EAAc,EAAmB,EANrB,EAMkD,EAC9D,EACJ,EAAc,EAAI,EAAmB,EAAG,GAAe,EACnD,EAAmB,KAAK,GAAG,CAC/B,EAAmB,EAVH,EAAA,GAad,EAAmB,KAAK,GAAG,CAC7B,IAAI,CAAC,CAAC,EAAW,CACjB,IAAI,CAAC,CAAC,EAAO,CAAG,GAGZ,EACJ,EAAmB,EACf,EAAmB,EAAkB,GACrC,EACA,EAAgB,IAAI,CAAC,CAAC,EAAO,CAAG,EAAe,EAK/C,EAAW,EA1BC,EAsBA,KAAK,GAAG,CACxB,IAAI,CAAC,CAAC,EAAW,CACjB,IAAI,CAAC,CAAC,EAAO,CAAG,IAAI,CAAC,CAAC,EAAO,CAAC,MAAM,GAGtC,IAAI,CAAC,CAAC,EAAU,CAAC,EAAc,EAAU,EAAe,GACxD,EAAmB,EACnB,EAAe,CACjB,CAGA,OAFA,IAAI,CAAC,CAAC,EAAmB,GACzB,IAAI,CAAC,CAAC,EAAW,GACV,IAAI,CAAC,kBAAkB,EAChC,CAMA,oBAAqB,CACnB,OAAO,IAAI,CAAC,CAAC,EAAO,CAAC,GAAG,CAAC,AAAC,GAAY,EAAQ,IAAI,CAAC,IACrD,CASA,CAAC,EAAU,CAAC,CAAY,CAAE,CAAQ,CAAE,CAAa,CAAE,CAAY,EAC7D,AAAA,EAAI,GAAG,CACL,CAAC,YAAY,EAAE,EAAa,CAAC,EAAE,EAAS,CAAC,EAAE,EAAc,CAAC,EAAE,EAAa,CAAC,EAE5E,IAAI,EAAU,GAGd,GAFW,IAAI,CAAC,CAAC,EAAO,CAAC,MAAM,CAAC,GACrB,IAAI,CAAC,CAAC,EAAO,CAAC,MAAM,CAAC,GACrB,IAAI,CAAC,CAAC,EAAO,CAAC,MAAM,CAAC,GAChC,IAAI,CAAC,CAAC,EAAO,CAAC,IAAI,CAAC,EAAQ,KAAK,CAAC,KACjC,IAAK,IAAI,EAAc,EAAG,EAAc,EAAe,EAAG,IAMxD,EALU,GACC,IAAI,CAAC,CAAC,EAAO,CAAC,MAAM,CAAC,GACrB,IAAI,CAAC,CAAC,EAAO,CACb,IAAI,CAAC,CAAC,EAAQ,CAAC,MAAM,CAAC,EAAW,GACjC,IAAI,CAAC,CAAC,EAAO,CACb,IAAI,CAAC,CAAC,EAAO,CAAC,MAAM,CAAC,GAChC,IAAI,CAAC,CAAC,EAAO,CAAC,IAAI,CAAC,EAAQ,KAAK,CAAC,KAKnC,EAHU,GACC,IAAI,CAAC,CAAC,EAAO,CAAC,MAAM,CAAC,GACrB,IAAI,CAAC,CAAC,EAAO,CAAC,MAAM,CAAC,GACrB,IAAI,CAAC,CAAC,EAAO,CAAC,MAAM,CAAC,GAChC,IAAI,CAAC,CAAC,EAAO,CAAC,IAAI,CAAC,EAAQ,KAAK,CAAC,IACnC,CAGA,CAAC,EAAmB,GAClB,IAAK,IAAI,EAAM,EAAG,EAAM,IAAI,CAAC,CAAC,EAAO,CAAC,MAAM,CAAG,EAAG,IAChD,IAAK,IAAI,EAAM,EAAG,EAAM,IAAI,CAAC,CAAC,EAAO,CAAC,EAAE,CAAC,MAAM,CAAG,EAAG,IAEjD,IAAI,CAAC,CAAC,EAAO,CAAC,EAAI,CAAC,EAAI,GAAK,IAAI,CAAC,CAAC,EAAO,EACzC,IAAI,CAAC,CAAC,EAAO,CAAC,EAAM,EAAE,CAAC,EAAI,GAAK,IAAI,CAAC,CAAC,EAAO,EAC7C,IAAI,CAAC,CAAC,EAAO,CAAC,EAAM,EAAE,CAAC,EAAI,GAAK,IAAI,CAAC,CAAC,EAAQ,EAC9C,IAAI,CAAC,CAAC,EAAO,CAAC,EAAM,EAAE,CAAC,EAAI,GAAK,IAAI,CAAC,CAAC,EAAQ,GAE9C,IAAI,CAAC,CAAC,EAAO,CAAC,EAAI,CAAC,EAAI,CAAG,IAAI,CAAC,CAAC,EAAQ,CACxC,IAAI,CAAC,CAAC,EAAO,CAAC,EAAM,EAAE,CAAC,EAAI,CAAG,IAAI,CAAC,CAAC,EAAQ,CAIpD,CAOA,CAAC,EAAc,CAAC,CAAS,EACvB,OACE,EAAU,KAAK,GAAK,IAAI,CAAC,CAAC,EAAO,EACjC,EAAU,MAAM,GAAK,IAAI,CAAC,CAAC,EAAO,EAClC,EAAU,KAAK,GAAK,IAAI,CAAC,CAAC,EAAO,AAErC,CAMA,CAAC,EAAgB,CAAC,CAAS,EACzB,OACE,EAAU,IAAI,GAAK,IAAI,CAAC,CAAC,EAAO,EAChC,EAAU,MAAM,GAAK,IAAI,CAAC,CAAC,EAAO,EAClC,EAAU,KAAK,GAAK,IAAI,CAAC,CAAC,EAAO,AAErC,CAKA,CAAC,EAAW,GACV,IAAM,EAAoB,EAAE,CAC5B,IAAI,CAAC,CAAC,EAAO,CAAC,OAAO,CAAC,CAAC,EAAU,IAC/B,EAAS,OAAO,CAAC,CAAC,EAAU,KAC1B,IAAM,EAAY,GAChB,IAAI,CAAC,CAAC,EAAO,CACb,EACA,GAGA,CAAA,IAAI,CAAC,CAAC,EAAgB,CAAC,IACvB,IAAI,CAAC,CAAC,EAAc,CAAC,EAAA,GAErB,EAAkB,IAAI,CAAC,CAAE,IAAK,EAAU,IAAK,CAAS,EAE1D,IAEF,IAAM,EAAkB,GAAqB,GACzC,EAAW,CAAe,CAAC,EAAE,AACjC,CAAA,IAAI,CAAC,CAAC,EAAO,CAAC,EAAS,GAAG,CAAC,CAAC,EAAS,GAAG,CAAC,CAAG,IAAI,CAAC,CAAC,EAAW,CAC7D,EAAW,CAAe,CAAC,EAAE,CAC7B,IAAI,CAAC,CAAC,EAAO,CAAC,EAAS,GAAG,CAAC,CAAC,EAAS,GAAG,CAAC,CAAG,IAAI,CAAC,CAAC,EAAO,AAC3D,CACF,ClBlLA,MAAM,GAAY,CAChB,KAAM,OACN,MAAO,QACP,KAAM,OACN,IAAK,KACP,CAGA,OAAM,GAEJ,SAAU,AAEV,CAAA,KAAM,AAGN,CAAA,SAAU,AAQV,aAAY,CAAK,CAAE,CAAS,CAAE,CAAS,CAAE,CACvC,IAAI,CAAC,KAAK,CAAG,EACb,IAAI,CAAC,SAAS,CAAG,EACjB,IAAI,CAAC,SAAS,CAAG,CACnB,CAMA,OAAQ,CACN,KAAO,IAAI,CAAC,SAAS,CAAG,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE,CACzC,IAAM,EAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,CACjC,EAAgB,GAAsB,oBAAoB,CAAC,GACjE,GAAI,EACF,MAAO,CAAE,cAAe,EAAe,cAAe,IAAI,CAAC,SAAS,AAAC,EAErE,IAAI,CAAC,SAAS,CAAC,GACf,IAAI,CAAC,SAAS,EAElB,CACA,OAAO,IACT,CAQA,OAAO,iBAAiB,CAAK,CAAE,CAC7B,IAAK,IAAI,EAAQ,EAAG,EAAQ,EAAM,MAAM,CAAE,IAAS,CACjD,IAAM,EAAK,GAAsB,oBAAoB,CACnD,CAAK,CAAC,EAAM,CAAC,IAAI,IAEnB,GAAI,EACF,MAAO,CAAE,cAAe,EAAI,cAAe,CAAM,CAErD,CACA,OAAO,IACT,CAMA,UAAU,CAAU,CAAE,CACpB,KAAM,wCACR,CAKA,OAAO,qBAAqB,CAAI,CAAE,CAChC,IAAM,EAAQ,EAAK,KAAK,CAAC,+BACzB,AAAI,EACK,CAAK,CAAC,EAAE,CAAC,WAAW,GAEtB,IACT,CAOA,WAAW,CAAO,CAAE,CAClB,MAAM,AAAI,MACR,CAAC,6BAA6B,EAAE,IAAI,CAAC,SAAS,CAAG,EAAE,EAAE,EAAE,EAAQ,CAAC,CAEpE,CAMA,YAAY,CAAO,CAAE,CACnB,AAAA,EAAI,KAAK,CACP,CAAC,sCAAsC,EAAE,IAAI,CAAC,SAAS,CAAC,EAAE,EAAE,EAAQ,CAAC,CAEzE,CACF,CAKA,MAAM,WAAoB,GAOxB,YAAY,CAAK,CAAE,CAAS,CAAE,CAAS,CAAE,CACvC,KAAK,CAAC,EAAO,EAAW,GACxB,IAAI,CAAC,SAAS,CAAC,KAAK,CAAG,EACzB,CAKA,UAAU,CAAI,CAAE,CACd,IAAI,CAAC,SAAS,CAAC,KAAK,EAAI,AAAS,KAAT,EAAc,KAAO,CAC/C,CACF,CAKA,MAAM,WAAmB,GAOvB,YAAY,CAAK,CAAE,CAAS,CAAE,CAAS,CAAE,CACvC,KAAK,CAAC,EAAO,EAAW,EAC1B,CAKA,UAAU,CAAI,CAAE,CACd,IAAM,EAAQ,EAAK,KAAK,CAAC,+BACrB,EACF,IAAI,CAAC,CAAC,EAAkB,CAAC,GAEzB,IAAI,CAAC,CAAC,EAAiB,CAAC,EAE5B,CAMA,CAAC,EAAkB,CAAC,CAAY,EAC9B,IAAM,EAAO,CAAY,CAAC,EAAE,CACtB,EAAa,CAAY,CAAC,EAAE,CAElC,GAAI,CACF,IAAM,EAAS,IAAI,KAAkB,aAAa,CAAC,EACnD,CAAA,IAAI,CAAC,SAAS,CAAC,IAAI,CAAG,CACpB,GAAI,OACJ,KAAM,GAAQ,UACd,OAAQ,CACV,CACF,CAAE,MAAO,EAAO,CACd,IAAI,CAAC,UAAU,CAAC,EAAM,OAAO,CAC/B,CACF,CAKA,CAAC,EAAiB,CAAC,CAAW,EAC5B,IAAI,CAAC,UAAU,CAAC,kCAClB,CACF,CAKA,MAAM,WAAmB,GAOvB,YAAY,CAAK,CAAE,CAAS,CAAE,CAAS,CAAE,CACvC,KAAK,CAAC,EAAO,EAAW,EAC1B,CAKA,UAAU,CAAI,CAAE,CACd,IAAM,EAAQ,EAAK,KAAK,CAAC,kDACrB,EACF,IAAI,CAAC,CAAC,EAAmB,CAAC,GAE1B,IAAI,CAAC,CAAC,EAAkB,CAAC,EAE7B,CAMA,CAAC,EAAmB,CAAC,CAAY,EAC/B,IAAM,EAAU,CAAY,CAAC,EAAE,CAAC,WAAW,GACrC,EAAS,SAAS,CAAY,CAAC,EAAE,EACjC,EAAO,CAAY,CAAC,EAAE,CACtB,EAAa,CAAY,CAAC,EAAE,CAClC,IAAK,IAAI,EAAI,EAAG,EAAI,EAAQ,IAC1B,GAAI,ACQK,GDRK,GAAG,CAAC,GAChB,GAAI,CACF,IAAM,EAAS,IAAI,KAAkB,aAAa,CAAC,GACnD,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,IAAI,CAAC,CAC1B,GAAI,EACJ,KAAM,GAAQ,UACd,OAAQ,CACV,EACF,CAAE,MAAO,EAAO,CACd,IAAI,CAAC,UAAU,CAAC,EAAM,OAAO,CAC/B,MAEA,IAAI,CAAC,UAAU,CAAC,CAAC,YAAY,EAAE,EAAQ,gBAAgB,CAAC,CAG9D,CAKA,CAAC,EAAkB,CAAC,CAAW,EAC7B,IAAI,CAAC,UAAU,CAAC,kCAClB,CACF,CAKA,MAAM,WAAkB,GACtB,CAAC,EAAU,AAAC,AACZ,EAAC,EAAW,AAAC,AAOb,aAAY,CAAK,CAAE,CAAS,CAAE,CAAS,CAAE,CACvC,KAAK,CAAC,EAAO,EAAW,GACxB,IAAI,CAAC,CAAC,EAAU,CAAG,CAAA,EACnB,IAAI,CAAC,CAAC,EAAW,CAAG,iBACtB,CAKA,UAAU,CAAI,CAAE,CACd,IAAI,IAAI,CAAC,CAAC,EAAU,EAGhB,AAAS,KAAT,GACF,GAAI,IAAI,CAAC,CAAC,EAAW,CAAC,IAAI,CAAC,GAAO,CAChC,IAAM,EAAU,IAAI,GAAY,CAC9B,QAAS,GACT,QAAS,GACT,YAAa,GACb,QAAS,GACT,QAAS,GACT,YAAa,CACf,EACA,CAAA,IAAI,CAAC,SAAS,CAAC,SAAS,CAAG,EAAQ,QAAQ,GAC3C,IAAI,CAAC,CAAC,EAAU,CAAG,CAAA,EACnB,AAAA,EAAI,KAAK,CAAC,cACV,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,OAAO,CAAC,AAAC,GAAS,AAAA,EAAI,KAAK,CAAC,GACvD,MACE,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,IAAI,CAAC,GAGpC,CACF,CAeA,SAAS,GAAe,CAAS,CAAE,CAAS,CAAE,CAAS,EACrD,OAAQ,GACN,KAAK,GAAU,IAAI,CACjB,OAAO,IAAI,GAAW,EAAO,EAAY,EAAG,EAC9C,MAAK,GAAU,KAAK,CAClB,OAAO,IAAI,GAAY,EAAO,EAAY,EAAG,EAC/C,MAAK,GAAU,IAAI,CACjB,OAAO,IAAI,GAAW,EAAO,EAAY,EAAG,EAC9C,MAAK,GAAU,GAAG,CAChB,OAAO,IAAI,GAAU,EAAO,EAAY,EAAG,EAC/C,CACA,OAAO,IACT,CmBxUO,MAAM,GAAiC,4BACjC,GAA+B,0BAC/B,GAAmC,8BACnC,GAA0B,qBAC1B,GAAiC,4BAQxC,GAAc,CAClB,MAAO,EACP,MAAO,CACT,EA+BA,SAAS,GAAc,CAAO,CAAE,CAAS,CAAE,CAAM,EAC/C,IAAM,EAAQ,IAAI,YAAY,EAAW,CACvC,OAAQ,CACV,GACA,EAAQ,aAAa,CAAC,EACxB,CAOA,SAAS,GAAmB,CAAK,EAC/B,IAAM,EAAO,EAAM,MAAM,CAAC,qBAAqB,GAC/C,MAAO,CACL,EAAG,EAAM,OAAO,CAAC,EAAE,CAAC,KAAK,CAAG,EAAK,IAAI,CACrC,EAAG,EAAM,OAAO,CAAC,EAAE,CAAC,KAAK,CAAG,EAAK,GAAG,AACtC,CACF,CASA,SAAS,GAAmB,CAAW,CAAE,CAAC,CAAE,CAAC,CAAE,CAAI,EACjD,EAAK,aAAa,CAAG,CAAA,EACrB,EAAK,QAAQ,CAAG,CAAA,EAChB,EAAK,QAAQ,CAAG,EAChB,EAAK,KAAK,CAAG,EACb,EAAK,KAAK,CAAG,EACb,EAAK,MAAM,CAAG,EACd,EAAK,MAAM,CAAG,EACd,GAAc,EAAK,OAAO,CAAE,GAAgC,CAC1D,EAAG,EACH,EAAG,CACL,EACF,CASA,SAAS,GAAiB,CAAW,CAAE,CAAC,CAAE,CAAC,CAAE,CAAI,EAC/C,IAAM,EAAY,EAAK,QAAQ,CAzF/B,gCA2FI,EAEJ,CAAA,EAAK,aAAa,CAAG,CAAA,EACrB,EAAK,QAAQ,CAAG,CAAA,EAChB,EAAK,QAAQ,CAAG,EAChB,EAAK,KAAK,CAAG,EACb,EAAK,KAAK,CAAG,EACb,EAAK,MAAM,CAAG,EACd,EAAK,MAAM,CAAG,EACd,GAAc,EAAK,OAAO,CAAE,EAAW,CACrC,EAAG,EACH,EAAG,CACL,EACF,CAiCA,SAAS,GAAkB,CAAW,CAAE,CAAC,CAAE,CAAC,CAAE,CAAI,EAEhD,IAAI,EAAK,EAAI,EAAK,KAAK,CACnB,EAAK,EAAI,EAAK,KAAK,CAGvB,GAFA,EAAK,KAAK,CAAG,EACb,EAAK,KAAK,CAAG,EACT,EAAK,QAAQ,CAAE,CACjB,IAAM,EAAQ,IAAI,YANF,GAMyB,CACvC,OAAQ,CACN,EAAG,EACH,EAAG,EACH,GAAI,EACJ,GAAI,CACN,CACF,GACA,EAAK,OAAO,CAAC,aAAa,CAAC,EAC7B,KACE,CAAA,KAAK,GAAG,CAAC,EAAI,EAAK,MAAM,EAvJF,IAwJtB,KAAK,GAAG,CAAC,EAAI,EAAK,MAAM,EAxJF,EAwJM,IAE5B,EAAK,QAAQ,CAAG,CAAA,EAChB,EAAK,kBAAkB,CAAG,CAAA,EAE9B,C,I,G,C,ECxMA,GAAiB,KAAK,KAAK,CAAC,ywtB,I,G,C,ErD6J5B,SAAS,GAAS,CAAS,EAEzB,GADA,AAAA,GAAW,aAAa,CAAC,GACrB,EAAe,KAiBJ,EAhBb,IAAM,EAAe,AAAC,CAAA,EAAY,CAAA,EAAiB,IACnD,AAAA,GAAc,MAAM,CAAC,GACjB,GAAc,OAAO,GAcZ,EAbH,EAAI,EAchB,GACE,AAAA,EAAO,YAAY,GACnB,CAAC,KAAK,EAAE,KAAK,KAAK,CAAC,GAAK,CAAC,CACzB,CACE,EAAG,EACH,EAAG,AAAA,EAAO,mBAAmB,GAAG,MAAM,AACxC,EACA,CAAE,MAAO,OAAQ,GAnBnB,CAEA,EAAgB,EAEhB,OAAO,qBAAqB,CAAC,GAC/B,CsD1KA,GAAiB,IAAA,IAAoB,wCAAA,YAAA,GAAA,EAAyC,QAAQ,GtDoMtF,IAAA,GALa,CACX,UA7IgB,GA8IhB,WApIF,eAA0B,CAAa,EACrC,AAAA,EAAO,UAAU,CAAC,GAClB,A8BnBK,SAAqB,CAAO,EACjC,IAAI,EAAgB,EACpB,IAAK,IAAM,KAAO,GAAQ,CACxB,IAAM,EAAU,EAAQ,WAAW,CAAC,EAAM,CAAC,EAAI,EACzC,EACJ,EAAQ,qBAAqB,CAAG,EAAQ,sBAAsB,CAC1D,EAAmB,GAAM,EAAS,EAAQ,sBAAsB,CACtE,EAAQ,QAAQ,CAAC,EAAM,CAAC,EAAI,CAAE,IAAO,EAAQ,KAAK,CAAE,GAC9B,EAAQ,YAAY,CAAC,EAAG,EAAG,EAAG,GAAG,IAAI,CAAC,EAAE,EACzC,IACnB,AAAA,EAAI,KAAK,CAAC,CAAC,MAAM,EAAE,EAAI,eAAe,CAAC,EACvC,EAAM,CAAC,EAAI,CAAG,CAAC,CAAC,EAAE,IAAgB,CAAC,CAAC,EAEtC,EAAQ,SAAS,CAAC,EAAG,EAAG,EAAQ,KAAK,CAAE,EACzC,CACF,E9BIc,AAAA,EAAO,YAAY,IAC/B,AAoBF,eoD6HM,EpD5HJ,IAAM,EAAS,AAAA,EAAO,SAAS,GoD4H3B,EAAW,CACb,QpD5HiC,EoD6HjC,cAAe,CAAA,EACf,SAAU,CAAA,EACV,EAAG,EACH,EAAG,EACH,oBAAqB,KACrB,mBAAoB,CAAA,CACtB,EAEA,ApDrImC,EoDqI3B,gBAAgB,CACtB,YACA,AAAC,IACC,AAAA,EAAI,KAAK,CAAC,aACH,GACL,GAAY,KAAK,CACjB,EAAM,OAAO,CACb,EAAM,OAAO,CACb,IAGJ,CAAE,QAAS,CAAA,CAAK,GAGlB,ApDnJmC,EoDmJ3B,gBAAgB,CACtB,UACA,AAAC,IACC,AAAA,EAAI,KAAK,CAAC,WACH,GACL,GAAY,KAAK,CACjB,EAAM,OAAO,CACb,EAAM,OAAO,CACb,IAGJ,CAAE,QAAS,CAAA,CAAK,GAElB,ApDhKmC,EoDgK3B,gBAAgB,CACtB,YACA,AAAC,IACC,AAAA,EAAI,KAAK,CAAC,aACU,EAAhB,EAAM,OAAO,EACf,GACE,GAAY,KAAK,CACjB,EAAM,OAAO,CACb,EAAM,OAAO,CACb,EAGN,EACA,CAAE,QAAS,CAAA,CAAK,GAElB,ApD/KmC,EoD+K3B,gBAAgB,CACtB,aACA,AAAC,IAEC,GADA,AAAA,EAAI,KAAK,CAAC,cACN,AAAgC,IAAhC,EAAM,cAAc,CAAC,MAAM,CAAQ,CACrC,IAAM,EAAS,GAAmB,EAClC,CAAA,EAAS,mBAAmB,CAAG,IAAI,EAAM,EAAO,CAAC,CAAE,EAAO,CAAC,EAC3D,GAAmB,GAAY,KAAK,CAAE,EAAO,CAAC,CAAE,EAAO,CAAC,CAAE,EAC5D,CACF,EACA,CAAE,QAAS,CAAA,CAAK,GAElB,ApD3LmC,EoD2L3B,gBAAgB,CACtB,WACA,AAAC,IACC,AAAA,EAAI,KAAK,CAAC,YAC0B,IAAhC,EAAM,cAAc,CAAC,MAAM,EAC7B,GACE,GAAY,KAAK,CACjB,EAAS,mBAAmB,EAAE,EAC9B,EAAS,mBAAmB,EAAE,EAC9B,GAGJ,EAAS,mBAAmB,CAAG,KAC/B,EAAS,kBAAkB,CAAG,CAAA,CAChC,EACA,CAAE,QAAS,CAAA,CAAK,GAElB,ApD5MmC,EoD4M3B,gBAAgB,CACtB,YACA,AAAC,IAEC,GADA,AAAA,EAAI,KAAK,CAAC,aACN,AAAgC,IAAhC,EAAM,cAAc,CAAC,MAAM,CAAQ,CACrC,IAAM,EAAS,GAAmB,GAClC,GAAkB,GAAY,KAAK,CAAE,EAAO,CAAC,CAAE,EAAO,CAAC,CAAE,GACzD,EAAS,kBAAkB,CAAG,CAAA,CAChC,CACF,EACA,CAAE,QAAS,CAAA,CAAK,GAElB,ApDxNmC,EoDwN3B,gBAAgB,CACtB,cACA,AAAC,QAvJqC,EAAG,EAwJvC,AAAA,EAAI,KAAK,CAAC,eAER,GAAY,KAAK,CA1JiB,EA2JlC,EAAS,mBAAmB,EAAE,EA3JO,EA4JrC,EAAS,mBAAmB,EAAE,EAzJpC,AA0JM,EA1JD,aAAa,CAAG,CAAA,EACrB,AAyJM,EAzJD,QAAQ,CAAG,CAAA,EAChB,AAwJM,EAxJD,QAAQ,CAAG,EAChB,AAuJM,EAvJD,KAAK,CAAG,EACb,AAsJM,EAtJD,KAAK,CAAG,EACb,AAqJM,EArJD,MAAM,CAAG,EACd,AAoJM,EApJD,MAAM,CAAG,EACd,GAAc,AAmJR,EAnJa,OAAO,CATR,GASqB,CACrC,EAAG,EACH,EAAG,CACL,GAkJI,EAAS,mBAAmB,CAAG,IACjC,EAEA,CAAE,QAAS,CAAA,CAAK,GAElB,ApDvOmC,EoDuO3B,gBAAgB,CAAC,QAAS,AAAC,IACjC,AAAA,EAAI,KAAK,CAAC,SACL,EAAS,kBAAkB,EAC9B,GpD1O+B,EoD0OR,GAAyB,CAC9C,EAAG,EAAM,OAAO,CAChB,EAAG,EAAM,OAAO,AAClB,GAEF,EAAS,kBAAkB,CAAG,CAAA,CAChC,GpD9OA,EAAO,gBAAgB,CAAC,GAAwC,AAAC,IAC/D,IAAM,EAAI,EAAM,MAAM,CAAC,CAAC,CAClB,EAAI,EAAM,MAAM,CAAC,CAAC,CAClB,EAAkB,AAAA,EAAO,yBAAyB,CAAC,EAAG,GACvD,AAAA,GAAI,YAAY,CAAC,IACpB,AAAA,GAAM,YAAY,CAAC,EAEvB,GAEA,EAAO,gBAAgB,CACrB,GACA,AAAC,IACC,IAAM,EAAI,EAAM,MAAM,CAAC,CAAC,CAClB,EAAI,EAAM,MAAM,CAAC,CAAC,CAClB,EAAkB,AAAA,EAAO,yBAAyB,CAAC,EAAG,GAC5D,AAAA,GAAI,kBAAkB,CAAC,EACzB,GAGF,EAAO,gBAAgB,CACrB,GACA,AAAC,IACC,IAAM,EAAI,EAAM,MAAM,CAAC,CAAC,CAClB,EAAI,EAAM,MAAM,CAAC,CAAC,CAClB,EAAkB,AAAA,EAAO,yBAAyB,CAAC,EAAG,GAC5D,AAAA,GAAI,gBAAgB,CAAC,EACvB,GAGF,EAAO,gBAAgB,CACrB,GACA,AAAC,IACC,IAAM,EAAI,EAAM,MAAM,CAAC,CAAC,CAClB,EAAI,EAAM,MAAM,CAAC,CAAC,CAClB,EAAkB,AAAA,EAAO,yBAAyB,CAAC,EAAG,GAC5D,AAAA,GAAI,oBAAoB,CAAC,EAC3B,GAGF,EAAO,gBAAgB,CACrB,GACA,AAAC,IACC,AAAA,GAAc,WAAW,CAAC,CAAC,EAAM,MAAM,CAAC,EAAE,CAAE,CAAC,EAAM,MAAM,CAAC,EAAE,CAC9D,GAGF,EAAO,gBAAgB,CAAC,cAAe,AAAC,IACtC,AAAA,EAAI,KAAK,CAAC,gBACV,IAAM,EAAI,EAAM,MAAM,CAAC,CAAC,CAClB,EAAI,EAAM,MAAM,CAAC,CAAC,CAClB,EAAkB,AAAA,EAAO,yBAAyB,CAAC,EAAG,GACvD,AAAA,GAAI,kBAAkB,CAAC,IAC1B,AAAA,GAAM,kBAAkB,CAAC,GAE3B,EAAM,cAAc,EACtB,EACF,IA7EE,AAAA,GAAG,YAAY,CAAC,kCAAmC,cAAe,QAC/D,IAAI,CAAC,IAAM,AAAA,GAAc,aAAa,CAAC,EAAA,IAAY,EAAA,MACnD,IAAI,CAAC,S+BxBsB,SAAA,E/BwBa,GAAkB,cAAc,C+BvBpE,MAAM,GACV,IAAI,CAAC,AAAC,GAAa,EAAS,IAAI,IAChC,IAAI,CAAC,AAAC,GAAS,GACf,KAAK,CAAC,AAAC,IACN,AAAA,EAAI,KAAK,CAAC,CAAC,eAAe,EAAE,EAAI,EAAE,EAAE,EAAO,CAAC,EACrC,S/BmBR,IAAI,CAAC,AAAC,GAAW,AAAA,GAAc,mBAAmB,CAAC,AiC4SzC,SAAqB,CAAM,EACxC,EAAQ,EAAO,KAAK,CAAC,SACrB,EAAmB,EAAE,CACrB,IAAI,EAAY,IAAI,GACd,EAAc,GAAsB,gBAAgB,CAAC,GAC3D,GAAI,CAAC,EACH,MAAM,AAAI,MAAM,iDAGlB,IAAI,EAAS,GACX,EAAY,aAAa,CACzB,EAAY,aAAa,CACzB,GAEF,KAAO,GAAQ,CACb,IAAM,EAAS,EAAO,KAAK,GACtB,GAAQ,eAAiB,EAAO,aAAa,GAAK,GAAU,KAAK,GACpE,EAAiB,IAAI,CAAC,GACtB,EAAY,IAAI,IAElB,EAAS,AAAC,EAEN,GAAe,EAAO,aAAa,CAAE,EAAO,aAAa,CAAE,GAD3D,IAEN,CACA,OAAO,CACT,EjCrUoE,KAC/D,IAAI,CAAC,KAAO,GACZ,IAAI,CAAC,IAAM,AAAA,GAAa,YAAY,CAAC,AAAA,GAAa,OAAO,CAAC,SAAS,GACnE,IAAI,CAAC,SA6ER,OAAO,qBAAqB,CAAC,KA5E1B,KAAK,CAAC,AAAC,IACN,AAAA,EAAI,KAAK,CAAC,GACV,MAAM,CAAC,0BAA0B,EAAE,EAAM,OAAO,CAAC,CAAC,CAEpD,EACJ,CAmHA,EFjKA,OAAO,gBAAgB,CAAC,OAAQ,KAG9B,GAAI,CACF,AAAA,GAAK,UAAU,CAAC,CACd,MAJiB,IAKjB,OAJkB,IAKlB,SAAU,IACV,SAAU,EACV,aAAc,QACd,MAAO,CAAA,CACT,EACF,CAAE,MAAO,EAAO,CACd,AAAA,EAAI,KAAK,CAAC,EACZ,CACF","sources":["<anon>","src/scripts/index.js","src/scripts/utils/logging.js","src/scripts/utils/game/game.js","src/scripts/utils/game/screen.js","src/scripts/utils/text/fonts.js","src/scripts/utils/geometry.js","src/scripts/utils/maths.js","src/scripts/utils/game/world.js","src/scripts/utils/game/hud.js","src/scripts/utils/game/actors.js","src/scripts/dnd/interact.js","src/scripts/utils/effects/transient.js","src/scripts/utils/sprites/sprite.js","src/scripts/utils/sprites/spriteRenderers.js","src/scripts/utils/text/text.js","src/scripts/utils/debug.js","src/scripts/utils/sprites/animation.js","src/scripts/utils/sprites/imageManager.js","src/scripts/utils/time/clock.js","src/scripts/utils/arrays/indexer.js","src/scripts/utils/sprites/faders.js","src/scripts/utils/sprites/modifiers.js","src/scripts/utils/sprites/movers.js","src/scripts/dnd/chance.js","src/scripts/utils/dice.js","src/scripts/utils/dom/ui.js","src/scripts/utils/dom/components.js","src/scripts/utils/game/gameConstants.js","src/scripts/utils/persistentData.js","src/scripts/utils/ui/interactions.js","src/scripts/utils/game/hudNavSet.js","src/scripts/utils/game/camera.js","src/scripts/utils/text/emojis.js","src/scripts/utils/assetLoaders.js","node_modules/@parcel/runtime-js/lib/runtime-db65a9e40efe3bb2.js","src/scripts/scriptReaders/scriptParser.js","src/scripts/scriptReaders/actorMap.js","src/scripts/constants/colours.js","src/scripts/scriptReaders/actorAnimationKeys.js","src/scripts/scriptReaders/sceneDefinitionParser.js","src/scripts/utils/tileMaps/tilePlan.js","src/scripts/utils/arrays/arrayManip.js","src/scripts/utils/tileMaps/tileMap.js","src/scripts/utils/tileMaps/pathFinder.js","src/scripts/utils/game/turnManager.js","src/scripts/utils/game/sceneManager.js","src/scripts/utils/game/fullscreen.js","src/scripts/utils/timers.js","src/scripts/dialogs/mainMenu.js","src/scripts/dialogs/settingsDialog.js","src/scripts/scriptReaders/symbolMapping.js","src/scripts/utils/game/scene.js","src/scripts/dnd/traits.js","src/scripts/utils/tileMaps/roomGenerator.js","src/scripts/utils/dom/pointerActions.js","src/assets/images/dungeon.json","node_modules/@parcel/runtime-js/lib/runtime-42e5f171258e217b.js"],"sourcesContent":["\nfunction $parcel$interopDefault(a) {\n  return a && a.__esModule ? a.default : a;\n}\n/**\n * @file Main entry point\n *\n * @module index\n */ /**\n * @license {@link https://opensource.org/license/mit/|MIT}\n *\n * Copyright 2024 Steve Butler\n */ /**\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the “Software”), to deal in\n * the Software without restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n * Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */ /**\n * @file Handle logging. This allows easier access to logs on mobile devices.\n *\n * @module utils/logging\n *\n * License {@link https://opensource.org/license/mit/|MIT}\n *\n * Copyright 2024 Steve Butler (henspace.com).\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the “Software”), to deal in\n * the Software without restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n * Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */ let $2d5b4e7cb639ebe1$var$messages = [];\n/** Add listener for syntax errors. */ window.addEventListener(\"error\", (event)=>{\n    alert(`ERROR: ${event.filename}; line ${event.lineno}\\n${event.message}\\n:Stack:\\n${event.error.stack}`);\n});\n/**\n * Log information.\n * @param  {...any} data\n */ function $2d5b4e7cb639ebe1$var$logGeneral(...data) {\n    console.log(...data);\n}\n/**\n * Log information.\n * @param  {...any} data\n */ function $2d5b4e7cb639ebe1$var$logInfo(...data) {\n    console.debug(...data);\n}\n/**\n * Log information.\n * @param  {...any} data\n */ function $2d5b4e7cb639ebe1$var$logDebug(...data) {\n    console.debug(...data);\n}\n/**\n * Log error information.\n * @param  {...any} data\n */ function $2d5b4e7cb639ebe1$var$logError(...data) {\n    console.error(...data);\n    $2d5b4e7cb639ebe1$var$messages = $2d5b4e7cb639ebe1$var$messages.concat(data);\n}\n/**\n * Log error information.\n * @param  {Error}} data\n */ function $2d5b4e7cb639ebe1$var$logFatal(error) {\n    console.error(error);\n    let message;\n    if (error.message) message = `${error.message}\\nStack:\\n${error.stack}`;\n    else message = error;\n    alert(`Fatal error: ${message}\\nPrevious errors:\\n${$2d5b4e7cb639ebe1$var$messages.join(\"\\n\")}`);\n    $2d5b4e7cb639ebe1$var$messages.push(message);\n}\n/**\n * Object to access logging routines.\n */ const $2d5b4e7cb639ebe1$var$LOG = {\n    log: $2d5b4e7cb639ebe1$var$logGeneral,\n    info: $2d5b4e7cb639ebe1$var$logInfo,\n    debug: $2d5b4e7cb639ebe1$var$logDebug,\n    error: $2d5b4e7cb639ebe1$var$logError,\n    fatal: $2d5b4e7cb639ebe1$var$logFatal\n};\nvar $2d5b4e7cb639ebe1$export$2e2bcd8739ae039 = $2d5b4e7cb639ebe1$var$LOG;\n\n\n/**\n * @file The main game. This is a singleton as there can only be a single game.\n *\n * @module utils/game/game\n *\n * License {@link https://opensource.org/license/mit/|MIT}\n *\n * Copyright 2024 Steve Butler\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the “Software”), to deal in\n * the Software without restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n * Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */ /**\n * @file Utilities for handling the screen size. The screen is implemented as\n * a singleton.\n * The game is configured as a world and a screen. The screen is the area that is\n * rendered with a canvas. The world is the total space in which objects can\n * exist. The world is potentially unbounded.\n *\n * The canvas is set to the same size as the screen and then the canvas is\n * resized to fit the display using CSS.\n *\n * The canvas is centred on the camera, so although the canvas rect and screen\n * rect are the same size, the screen always has its top left at 0, 0 in the world\n * whereas the canvas rect may effectively move around the world.\n *\n * @module utils/screen\n *\n * License {@link https://opensource.org/license/mit/|MIT}\n *\n * Copyright 2024 Steve Butler\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the “Software”), to deal in\n * the Software without restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n * Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */ /**\n * @file Font data\n *\n * @module utils/text/fonts\n *\n * License {@link https://opensource.org/license/mit/|MIT}\n *\n * Copyright 2024 Steve Butler\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the “Software”), to deal in\n * the Software without restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n * Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */ const $3c404572c27a35d5$var$baseSize = 15; // minimum pixel size\n/*\n * These should be replicated in the CSS.\n */ const $3c404572c27a35d5$var$H1_FONT_SCALE = 2.0;\nconst $3c404572c27a35d5$var$H2_FONT_SCALE = 1.5;\nconst $3c404572c27a35d5$var$H3_FONT_SCALE = 1.2;\nconst $3c404572c27a35d5$var$NORMAL_FONT = \"'UnifrakturCook', cursive\";\nconst $3c404572c27a35d5$var$HEADING_FONT = \"'UnifrakturCook', cursive\"; // cspell:disable-line\nconst $3c404572c27a35d5$var$EMOJI_SPRITE_FONT = \"'UnifrakturCook', cursive\"; // cspell:disable-line\n/**\n * @typedef {Object} TextInfo\n * @property {number} size\n * @property {string} fontName\n */ /**\n * Named styles.\n * @type {Object.<String, TextInfo>}\n */ const $3c404572c27a35d5$var$textInfo = {\n    normal: {\n        size: 15,\n        fontName: $3c404572c27a35d5$var$NORMAL_FONT\n    },\n    h1: {\n        size: 30,\n        fontName: $3c404572c27a35d5$var$HEADING_FONT\n    },\n    h2: {\n        size: 22,\n        fontName: $3c404572c27a35d5$var$HEADING_FONT\n    },\n    h3: {\n        size: 18,\n        fontName: $3c404572c27a35d5$var$HEADING_FONT\n    },\n    emojiSprite: {\n        size: 18,\n        fontName: $3c404572c27a35d5$var$EMOJI_SPRITE_FONT\n    }\n};\nfunction $3c404572c27a35d5$export$a0412074baa65d25(designWidth) {\n    $3c404572c27a35d5$var$textInfo.normal.size = $3c404572c27a35d5$var$baseSize + 0.390625 * (designWidth / 100);\n    $3c404572c27a35d5$var$textInfo.h1.size = $3c404572c27a35d5$var$textInfo.normal.size * $3c404572c27a35d5$var$H1_FONT_SCALE;\n    $3c404572c27a35d5$var$textInfo.h2.size = $3c404572c27a35d5$var$textInfo.normal.size * $3c404572c27a35d5$var$H2_FONT_SCALE;\n    $3c404572c27a35d5$var$textInfo.h3.size = $3c404572c27a35d5$var$textInfo.normal.size * $3c404572c27a35d5$var$H3_FONT_SCALE;\n    $3c404572c27a35d5$var$textInfo.emojiSprite.size = designWidth / 10;\n}\nfunction $3c404572c27a35d5$export$955358618f994a11(styleName) {\n    const info = $3c404572c27a35d5$var$textInfo[styleName] ?? $3c404572c27a35d5$var$textInfo[\"normal\"];\n    return `${info.size}px ${info.fontName}`;\n}\nfunction $3c404572c27a35d5$export$ef86e9b1c847b692() {\n    return $3c404572c27a35d5$var$textInfo.normal.size;\n}\n\n\n/**\n * @file Functions for dealing with geometry\n *\n * @module utils/geometry\n *\n * License {@link https://opensource.org/license/mit/|MIT}\n *\n * Copyright 2024 Steve Butler\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the “Software”), to deal in\n * the Software without restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n * Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */ /**\n * @file Maths utilities\n *\n * @module utils/maths\n *\n * License {@link https://opensource.org/license/mit/|MIT}\n *\n * Copyright 2024 Steve Butler\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the “Software”), to deal in\n * the Software without restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n * Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */ /**\n * Common angles\n */ const $05d58a132d6b5767$var$Radians = {\n    DEG_22_5: 1 / 8 * Math.PI,\n    DEG_45: 2 / 8 * Math.PI,\n    DEG_67_5: 3 / 8 * Math.PI,\n    DEG_90: 0.5 * Math.PI,\n    DEG_112_5: 5 / 8 * Math.PI,\n    DEG_135: 6 / 8 * Math.PI,\n    DEG_157_7: 7 / 8 * Math.PI,\n    DEG_180: Math.PI\n};\nfunction $05d58a132d6b5767$export$e0b576e7a74416cd(value, min, max) {\n    if (value < min) return min;\n    else if (value > max) return max;\n    return value;\n}\nconst $05d58a132d6b5767$export$624e7ee3f0468367 = {\n    NONE: -1,\n    N: 0,\n    NE: 1,\n    E: 2,\n    SE: 3,\n    S: 4,\n    SW: 5,\n    W: 6,\n    NW: 7\n};\nfunction $05d58a132d6b5767$export$cf2deb104c051cb7(angle) {\n    const absAngle = Math.abs(angle);\n    if (absAngle <= $05d58a132d6b5767$var$Radians.DEG_45) return $05d58a132d6b5767$export$624e7ee3f0468367.E;\n    if (absAngle <= $05d58a132d6b5767$var$Radians.DEG_135) return Math.sign(angle) > 0 ? $05d58a132d6b5767$export$624e7ee3f0468367.N : $05d58a132d6b5767$export$624e7ee3f0468367.S;\n    return $05d58a132d6b5767$export$624e7ee3f0468367.W;\n}\nfunction $05d58a132d6b5767$export$d9ac11c8e8c20b77(angle) {\n    const absAngle = Math.abs(angle);\n    if (absAngle <= $05d58a132d6b5767$var$Radians.DEG_22_5) return $05d58a132d6b5767$export$624e7ee3f0468367.E;\n    if (absAngle <= $05d58a132d6b5767$var$Radians.DEG_67_5) return Math.sign(angle) > 0 ? $05d58a132d6b5767$export$624e7ee3f0468367.NE : $05d58a132d6b5767$export$624e7ee3f0468367.SE;\n    if (absAngle <= $05d58a132d6b5767$var$Radians.DEG_112_5) return Math.sign(angle) > 0 ? $05d58a132d6b5767$export$624e7ee3f0468367.N : $05d58a132d6b5767$export$624e7ee3f0468367.S;\n    if (absAngle <= $05d58a132d6b5767$var$Radians.DEG_157_7) return Math.sign(angle) > 0 ? $05d58a132d6b5767$export$624e7ee3f0468367.NW : $05d58a132d6b5767$export$624e7ee3f0468367.SW;\n    return $05d58a132d6b5767$export$624e7ee3f0468367.W;\n}\nfunction $05d58a132d6b5767$export$b141de964f0a90c1(min, max) {\n    const minCeiled = Math.ceil(min);\n    const maxFloored = Math.floor(max);\n    return Math.floor(Math.random() * (maxFloored - minCeiled + 1) + minCeiled);\n}\nfunction $05d58a132d6b5767$export$75c671db1a13cf5f(min, max) {\n    const minCeiled = Math.ceil(min);\n    const maxFloored = Math.floor(max);\n    return Math.floor(Math.random() * (maxFloored - minCeiled + 1) + minCeiled);\n}\nfunction $05d58a132d6b5767$export$8ebf337bfea5f957(valueA, valueB, tolerance) {\n    return valueA - valueB < tolerance;\n}\nfunction $05d58a132d6b5767$export$77419d14798a5605(value, tolerance) {\n    return Math.abs(value) < tolerance;\n}\n\n\nclass $90999bd6b14cd690$export$baf26146a414f24a {\n    /** @type {number}*/ x;\n    /** @type {number}*/ y;\n    /**\n   * Create point\n   * @param {number} x\n   * @param {number} y\n   */ constructor(x, y){\n        this.x = x;\n        this.y = y;\n    }\n    /**\n   * Create a copy of a point.\n   * @param {Point} point\n   * @returns {Point}\n   */ static copy(point) {\n        return new $90999bd6b14cd690$export$baf26146a414f24a(point.x, point.y);\n    }\n    /**\n   * Check if points are coincident.\n   * @returns {boolean}\n   */ coincident(point) {\n        return this.x === point.x && this.y === point.y;\n    }\n    /**\n   * Get angle to target using normal cartesian coordinates; i.e up is +ve y.\n   * @param {Point} targetPos\n   * @returns {number} angle in radians.\n   */ getCartesianAngleTo(targetPos) {\n        return Math.atan2(targetPos.y - this.y, targetPos.x - this.x);\n    }\n    /**\n   * Get angle to target using normal screen coordinates; i.e down is +ve y.\n   * @param {Point} targetPos\n   * @returns {number} angle in radians.\n   */ getScreenAngleTo(targetPos) {\n        return Math.atan2(this.y - targetPos.y, targetPos.x - this.x);\n    }\n    /**\n   * String representation which can be used as key in maps.\n   * @returns {string}\n   */ toString() {\n        return `(${this.x},${this.y})`;\n    }\n    /**\n   * Test if the position is at the same point, rounded to integer as this.\n   * Rotation is ignored.\n   * @param {Position} position\n   * @returns {boolean}\n   */ isCoincident(position) {\n        return Math.round(this.x) === Math.round(position.x) && Math.round(this.y) === Math.round(position.y);\n    }\n    /**\n   * Test if points are adjacent, i.e within one\n   * @param {Point} other\n   * @param {number} distance\n   * @returns {boolean}\n   */ isOtherClose(other, distance) {\n        const dx = this.x - other.x;\n        const dy = this.y - other.y;\n        return Math.pow(dx, 2) + Math.pow(dy, 2) <= Math.pow(distance, 2);\n    }\n}\nclass $90999bd6b14cd690$export$4a23b3811cef465 {\n    /** x velocity @type {number} */ x;\n    /** y velocity @type {number} */ y;\n    /** rotational velocity @type {number} */ rotation;\n    /**\n   *\n   * @param {number} velX\n   * @param {number} velY\n   * @param {number} velRot\n   */ constructor(velX, velY, velRot){\n        this.x = velX;\n        this.y = velY;\n        this.rotation = velRot;\n    }\n    /**\n   * Get the angle in radians counterclockwise from x axis. This uses cartesian\n   * coordinates where the y axis is positive upwards.\n   * @returns {number}\n   */ getCartesianDirection() {\n        return Math.atan2(this.y, this.x);\n    }\n    /**\n   * Get the angle in radians counterclockwise from x axis. This uses screen\n   * coordinates where the y axis is positive downwards..\n   * @returns {number}\n   */ getScreenDirection() {\n        return Math.atan2(-this.y, this.x);\n    }\n    /**\n   * Test if velocity effectively zero.\n   * @param {number} tolerance\n   * @returns {boolean}\n   */ isZero(tolerance) {\n        return $05d58a132d6b5767$export$77419d14798a5605(this.x, tolerance) && $05d58a132d6b5767$export$77419d14798a5605(this.y, tolerance);\n    }\n}\nclass $90999bd6b14cd690$export$13807d9ee5a34a42 extends $90999bd6b14cd690$export$baf26146a414f24a {\n    /** type {number} */ rotation;\n    /**\n   *\n   * @param {number} x\n   * @param {number} y\n   * @param {number} rotation\n   */ constructor(x, y, rotation){\n        super(x, y);\n        this.y = y;\n        this.rotation = rotation;\n    }\n    /**\n   * Create a Position from a Point.\n   * @param {Point} point\n   * @returns {Position}\n   */ static fromPoint(point) {\n        return new $90999bd6b14cd690$export$13807d9ee5a34a42(point.x, point.y, 0);\n    }\n    /**\n   * Create copy\n   * @param {Position} position\n   */ static copy(position) {\n        return new $90999bd6b14cd690$export$13807d9ee5a34a42(position.x, position.y, position.rotation);\n    }\n    /** Get a new position representing this position relative to a new origin.\n   * @param {Position} origin\n   * @returns {Position}\n   */ getRelativeTo(origin) {\n        return new $90999bd6b14cd690$export$13807d9ee5a34a42(this.x - origin.x, this.y - origin.y, this.rotation - origin.rotation);\n    }\n    /**\n   * Test that both x and y coordinates are within the length.\n   * @param {Position} targetPos\n   * @param {number} length\n   * @returns {boolean}\n   */ withinSquare(targetPos, length) {\n        return Math.abs(targetPos.x - this.x) < length && Math.abs(targetPos.y - this.y) < length;\n    }\n}\nclass $90999bd6b14cd690$export$4617fb02663045ef {\n    /** @type {number} */ x;\n    /** @type {number} */ y;\n    /** @type {number} */ width;\n    /** @type {number} */ height;\n    /**\n   *\n   * @param {number} x\n   * @param {number} y\n   * @param {number} width\n   * @param {number} height\n   */ constructor(x, y, width, height){\n        this.x = x;\n        this.y = y;\n        this.width = width;\n        this.height = height;\n    }\n    /** Get the bottom right\n   * @returns {Point}\n   */ getBottomRight() {\n        return new $90999bd6b14cd690$export$baf26146a414f24a(this.x + this.width, this.y + this.height);\n    }\n    /** Get the top left\n   * @returns {Point}\n   */ getTopLeft() {\n        return new $90999bd6b14cd690$export$baf26146a414f24a(this.x, this.y);\n    }\n    /**\n   * Test if this overlaps another rectangle\n   * @param {Rectangle} otherRect\n   * @returns {boolean} true if overlapping.\n   */ overlaps(otherRect) {\n        const myBR = this.getBottomRight();\n        const otherRectBR = otherRect.getBottomRight();\n        const noOverlap = otherRect.x > myBR.x || otherRect.y > myBR.y || otherRectBR.x < this.x || otherRectBR.y < this.y;\n        return !noOverlap;\n    }\n    /**\n   * Test if this rectangle contains a point\n   * @param {Point | Position} point\n   * @returns {boolean} - true if point contained\n   */ containsPoint(point) {\n        return point.x >= this.x && point.x <= this.x + this.width && point.y >= this.y && point.y <= this.y + this.height;\n    }\n    /**\n   * Test if this rectangle contains a coordinate\n   * @param {number} x\n   * @param {number} y\n   * @returns {boolean} - true if point contained\n   */ containsCoordinate(x, y) {\n        return x >= this.x && x <= this.x + this.width && y >= this.y && y <= this.y + this.height;\n    }\n    /**\n   * Test if this rectangle equals another.\n   * @param {Rectangle} otherRect\n   * @returns {boolean}\n   */ equals(other) {\n        return this.x === other.x && this.y === other.y && this.width === other.width && this.height === other.height;\n    }\n}\nconst $90999bd6b14cd690$export$ffabdd03f47fc732 = new $90999bd6b14cd690$export$baf26146a414f24a(Number.MIN_VALUE, Number.MIN_VALUE);\nconst $90999bd6b14cd690$export$9bb5b4b8c6114d78 = new $90999bd6b14cd690$export$baf26146a414f24a(Number.MAX_VALUE, Number.MAX_VALUE);\n\n\n\n/**\n * @typedef {Object} ScreenDetails\n * @property {HTMLCanvasElement} canvas\n * @property {number} width\n * @property {number} height\n * @property {number} x\n * @property {number} y\n */ let $a1820c190f7a8b2e$var$throttleTimer = null;\nlet $a1820c190f7a8b2e$var$canvas = null;\nlet $a1820c190f7a8b2e$var$canvasRect = null;\nlet $a1820c190f7a8b2e$var$canvasHalfWidth = 0;\nlet $a1820c190f7a8b2e$var$canvasHalfHeight = 0;\nlet $a1820c190f7a8b2e$var$canvasAlpha = true;\nlet $a1820c190f7a8b2e$var$visibleCanvasRect = null;\nlet $a1820c190f7a8b2e$var$gameElement = null;\nlet $a1820c190f7a8b2e$var$left = 0;\nlet $a1820c190f7a8b2e$var$top = 0;\n//let screenRect;\nlet $a1820c190f7a8b2e$var$scale = 1;\nlet $a1820c190f7a8b2e$var$maxScale = 1;\nlet $a1820c190f7a8b2e$var$minScale = 0.1;\nlet $a1820c190f7a8b2e$var$sizingMethod = \"COVER\";\nlet $a1820c190f7a8b2e$var$cameraPosition = new (0, $90999bd6b14cd690$export$13807d9ee5a34a42)(0, 0, 0);\n/**\n * Add event listener to handle resizing of the window.\n */ window.addEventListener(\"resize\", ()=>{\n    if ($a1820c190f7a8b2e$var$throttleTimer !== null) return; // it will get handled.\n    $a1820c190f7a8b2e$var$throttleTimer = window.setTimeout(()=>{\n        $a1820c190f7a8b2e$var$resize();\n        $a1820c190f7a8b2e$var$throttleTimer = null;\n    }, 200);\n});\n/**\n * Get dimensions of the working area for the game.\n * @returns {import('../geometry.js').Dims2D}\n */ function $a1820c190f7a8b2e$var$getDisplayDims() {\n    return {\n        width: window.innerWidth,\n        height: window.innerHeight\n    };\n}\n/**\n * @param {Object} options - config options.\n * @param {number} options.width - the design width for the screen.\n * @param {number} options.height - the design height for the page.\n * @param {number} options.maxScale - maximum scaling allowed\n * @param {string} options.sizingMethod  - 'FIT' or 'COVER'. Defaults to 'FIT'\n * @param {boolean} options.alpha - Should canvas have an alpha channel\n */ function $a1820c190f7a8b2e$var$setOptions(options) {\n    if ($a1820c190f7a8b2e$var$canvas) {\n        (0, $2d5b4e7cb639ebe1$export$2e2bcd8739ae039).error(\"Multiple calls to setScreen ignored.\");\n        return;\n    }\n    $a1820c190f7a8b2e$var$gameElement = document.getElementById(\"game-content\");\n    $3c404572c27a35d5$export$a0412074baa65d25(options.width);\n    $a1820c190f7a8b2e$var$canvas = document.createElement(\"canvas\");\n    $a1820c190f7a8b2e$var$canvas.id = \"game-canvas\";\n    $a1820c190f7a8b2e$var$canvas.setAttribute(\"width\", options.width);\n    $a1820c190f7a8b2e$var$canvas.setAttribute(\"height\", options.height);\n    $a1820c190f7a8b2e$var$canvas.innerText = \"Loading the app.\";\n    $a1820c190f7a8b2e$var$canvasRect = new (0, $90999bd6b14cd690$export$4617fb02663045ef)(0, 0, options.width, options.height);\n    $a1820c190f7a8b2e$var$canvasHalfWidth = options.width / 2;\n    $a1820c190f7a8b2e$var$canvasHalfHeight = options.height / 2;\n    $a1820c190f7a8b2e$var$gameElement.appendChild($a1820c190f7a8b2e$var$canvas);\n    $a1820c190f7a8b2e$var$maxScale = options.maxScale;\n    $a1820c190f7a8b2e$var$minScale = options.minScale;\n    $a1820c190f7a8b2e$var$sizingMethod = options.sizingMethod;\n    $a1820c190f7a8b2e$var$canvasAlpha = options.alpha;\n    $a1820c190f7a8b2e$var$sizeScreen();\n    $a1820c190f7a8b2e$var$syncDomFonts();\n}\n/**\n * Size the screen\n * @param {number} aspectRatio - aspect ratio (width / height) of the screen\n * @param {number} windowAspectRatio - aspect ratio (width / height) of the screen\n * @param {string} method - FIT or COVER. Defaults to FIT\n */ function $a1820c190f7a8b2e$var$shouldFitHeight(aspectRatio, windowAspectRatio, sizingMethod) {\n    if (sizingMethod === \"COVER\") return aspectRatio > windowAspectRatio;\n    else return aspectRatio < windowAspectRatio;\n}\n/**\n * Resize the screen according to the current inner window dimensions.\n */ function $a1820c190f7a8b2e$var$sizeScreen() {\n    const dims = $a1820c190f7a8b2e$var$getDisplayDims();\n    let aspectRatio = $a1820c190f7a8b2e$var$canvasRect.width / $a1820c190f7a8b2e$var$canvasRect.height;\n    let displayedHeight = 0;\n    let displayedWidth = 0;\n    const windowAspectRatio = dims.width / dims.height;\n    const fitHeight = $a1820c190f7a8b2e$var$shouldFitHeight(aspectRatio, windowAspectRatio, $a1820c190f7a8b2e$var$sizingMethod);\n    if (fitHeight) {\n        displayedHeight = dims.height;\n        displayedWidth = displayedHeight * aspectRatio;\n    } else {\n        displayedWidth = dims.width;\n        displayedHeight = displayedWidth / aspectRatio;\n    }\n    $a1820c190f7a8b2e$var$scale = displayedWidth / $a1820c190f7a8b2e$var$canvasRect.width;\n    if ($a1820c190f7a8b2e$var$scale > $a1820c190f7a8b2e$var$maxScale) {\n        $a1820c190f7a8b2e$var$scale = $a1820c190f7a8b2e$var$maxScale;\n        displayedWidth = $a1820c190f7a8b2e$var$scale * $a1820c190f7a8b2e$var$canvasRect.width;\n        displayedHeight = $a1820c190f7a8b2e$var$scale * $a1820c190f7a8b2e$var$canvasRect.height;\n    } else if ($a1820c190f7a8b2e$var$scale < $a1820c190f7a8b2e$var$minScale) {\n        $a1820c190f7a8b2e$var$scale = $a1820c190f7a8b2e$var$minScale;\n        displayedWidth = $a1820c190f7a8b2e$var$scale * $a1820c190f7a8b2e$var$canvasRect.width;\n        displayedHeight = $a1820c190f7a8b2e$var$scale * $a1820c190f7a8b2e$var$canvasRect.height;\n    }\n    $a1820c190f7a8b2e$var$left = (dims.width - displayedWidth) / 2;\n    $a1820c190f7a8b2e$var$top = (dims.height - displayedHeight) / 2;\n    $a1820c190f7a8b2e$var$canvas.style.left = `${$a1820c190f7a8b2e$var$left}px`;\n    $a1820c190f7a8b2e$var$canvas.style.top = `${$a1820c190f7a8b2e$var$top}px`;\n    $a1820c190f7a8b2e$var$canvas.style.width = `${displayedWidth}px`;\n    $a1820c190f7a8b2e$var$canvas.style.height = `${displayedHeight}px`;\n    let visibleCanvasWidth;\n    let visibleCanvasHeight;\n    let visibleCanvasOffsetX;\n    let visibleCanvasOffsetY;\n    if ($a1820c190f7a8b2e$var$left < 0) {\n        visibleCanvasOffsetX = -$a1820c190f7a8b2e$var$left / $a1820c190f7a8b2e$var$scale;\n        visibleCanvasWidth = dims.width / $a1820c190f7a8b2e$var$scale;\n    } else {\n        visibleCanvasOffsetX = 0;\n        visibleCanvasWidth = $a1820c190f7a8b2e$var$canvasRect.width;\n    }\n    if ($a1820c190f7a8b2e$var$top < 0) {\n        visibleCanvasOffsetY = -$a1820c190f7a8b2e$var$top / $a1820c190f7a8b2e$var$scale;\n        visibleCanvasHeight = dims.height / $a1820c190f7a8b2e$var$scale;\n    } else {\n        visibleCanvasOffsetY = 0;\n        visibleCanvasHeight = $a1820c190f7a8b2e$var$canvasRect.height;\n    }\n    $a1820c190f7a8b2e$var$visibleCanvasRect = new (0, $90999bd6b14cd690$export$4617fb02663045ef)(visibleCanvasOffsetX, visibleCanvasOffsetY, visibleCanvasWidth, visibleCanvasHeight);\n    (0, $2d5b4e7cb639ebe1$export$2e2bcd8739ae039).debug(`Scale: ${$a1820c190f7a8b2e$var$scale}`);\n    (0, $2d5b4e7cb639ebe1$export$2e2bcd8739ae039).debug(`Window: width: ${dims.width}, height: ${dims.height}`);\n    (0, $2d5b4e7cb639ebe1$export$2e2bcd8739ae039).debug(`Display: left: ${$a1820c190f7a8b2e$var$left}, top: ${$a1820c190f7a8b2e$var$top}, width: ${displayedWidth}, height: ${displayedHeight}`);\n    (0, $2d5b4e7cb639ebe1$export$2e2bcd8739ae039).debug(`Visible canvas: left: ${visibleCanvasOffsetX}, top: ${visibleCanvasOffsetY}, width: ${visibleCanvasWidth}, height: ${visibleCanvasHeight}`);\n}\n/**\n * Adjust the font sizes to ensure glass in sync with canvas.\n */ function $a1820c190f7a8b2e$var$syncDomFonts() {\n    const rootFontSize = $3c404572c27a35d5$export$ef86e9b1c847b692() * $a1820c190f7a8b2e$var$scale;\n    document.documentElement.style.fontSize = `${rootFontSize}px`;\n}\n/**\n * Resize the screen.\n */ function $a1820c190f7a8b2e$var$resize() {\n    $a1820c190f7a8b2e$var$sizeScreen();\n    $a1820c190f7a8b2e$var$syncDomFonts();\n}\n/**\n * @typedef {Object} screenDetails\n * @property {HTMLCanvasElement} canvas\n * @property {number} width - design width\n * @property {number} height - design height\n */ /**\n * Clear the canvas.\n */ function $a1820c190f7a8b2e$var$clearCanvas() {\n    $a1820c190f7a8b2e$var$getContext2D().clearRect(0, 0, $a1820c190f7a8b2e$var$canvasRect.width, $a1820c190f7a8b2e$var$canvasRect.height);\n}\n/**\n * Get the bounds of the world that are plotted in the canvas.\n * @returns {Rectangle}\n */ function $a1820c190f7a8b2e$var$getWorldInCanvasBounds() {\n    return new (0, $90999bd6b14cd690$export$4617fb02663045ef)($a1820c190f7a8b2e$var$cameraPosition.x, $a1820c190f7a8b2e$var$cameraPosition.y, $a1820c190f7a8b2e$var$canvasRect.width, $a1820c190f7a8b2e$var$canvasRect.height);\n}\n/**\n * Get canvas dimensions.\n * @returns {Dims2D}\n */ function $a1820c190f7a8b2e$var$getCanvasDimensions() {\n    return {\n        width: $a1820c190f7a8b2e$var$canvasRect.width,\n        height: $a1820c190f7a8b2e$var$canvasRect.height\n    };\n}\n/**\n * Get the canvas context.\n * @returns {CanvasRenderingContext2D}\n */ function $a1820c190f7a8b2e$var$getContext2D() {\n    return $a1820c190f7a8b2e$var$canvas.getContext(\"2d\", {\n        alpha: $a1820c190f7a8b2e$var$canvasAlpha\n    });\n}\n/**\n * @typedef {Object} Closers\n * @property {Element} element - when clicked, this should close a display.\n * @property {number} response - the code returned if this element closed a display.\n */ /**\n * Set the content of the glass layer. OnClick events are added automatically to the\n * closers.\n * @param {HTMLElement} element\n * @param {Closers[]} closers - array of Closers. If not provided then the entire display\n * is used.\n * @param {string} className\n * @returns {Promise} fulfils to null when clicked.\n */ function $a1820c190f7a8b2e$var$displayOnGlass(element, closers, className) {\n    const glass = document.createElement(\"div\");\n    document.body.appendChild(glass);\n    glass.className = \"glass\";\n    const glassContent = document.createElement(\"div\");\n    glass.appendChild(glassContent);\n    glassContent.className = \"glass-content\";\n    glassContent.appendChild(element);\n    if (className) glass.classList.add(className);\n    glass.style.display = \"block\";\n    glass.style.opacity = 1;\n    const promises = [];\n    if (closers && closers.length > 0) closers.forEach((closer)=>{\n        const promise = new Promise((resolve)=>{\n            closer.element.addEventListener(\"click\", async ()=>{\n                resolve(closer.response);\n            });\n        });\n        promises.push(promise);\n    });\n    else {\n        const promise = new Promise((resolve)=>glassContent.addEventListener(\"click\", ()=>resolve()));\n        promises.push(promise);\n    }\n    let closingId;\n    return Promise.race(promises).then((id)=>{\n        closingId = id;\n        return $a1820c190f7a8b2e$var$wipeGlass(glass);\n    }).then(()=>closingId);\n}\n/**\n * Clear and close the glass layer. The layer is hidden and it's content removed.\n * @param {Element} glass\n * @returns {Promise} fulfils to undefined. This is to allow opacity transition.\n */ function $a1820c190f7a8b2e$var$wipeGlass(glass) {\n    glass.style.opacity = 0;\n    return new Promise((resolve)=>{\n        window.setTimeout(()=>{\n            glass.remove();\n            resolve();\n        }, 500);\n    });\n}\n/**\n * Pan the camera.\n * @param {number} dx - movement in world units\n * @param {number} dy - movement in world units\n */ function $a1820c190f7a8b2e$var$panCamera(dx, dy) {\n    $a1820c190f7a8b2e$var$cameraPosition.x += dx;\n    $a1820c190f7a8b2e$var$cameraPosition.y += dy;\n}\n/**\n * Centre the canvas on a point\n * @param {Point} point\n */ function $a1820c190f7a8b2e$var$centreCanvasOn(point) {\n    $a1820c190f7a8b2e$var$cameraPosition.x = point.x - $a1820c190f7a8b2e$var$canvasHalfWidth;\n    $a1820c190f7a8b2e$var$cameraPosition.y = point.y - $a1820c190f7a8b2e$var$canvasHalfHeight;\n}\n/**\n * Convert a distance from ui units to world units.\n * @param {number} dist\n * @returns {number}\n */ function $a1820c190f7a8b2e$var$uiToWorld(dist) {\n    return dist / $a1820c190f7a8b2e$var$scale;\n}\n/**\n * Convert a distance from world units to ui units.\n * @param {number} dist\n * @returns {number}\n */ function $a1820c190f7a8b2e$var$worldToUi(dist) {\n    return dist * $a1820c190f7a8b2e$var$scale;\n}\n/**\n * @typedef {Object} MappedPositions\n * @property {Position} canvas - position on the canvas\n * @property {Position} world - position in the world\n */ /**\n * Convert ui Coordinates to world Position\n * @param {number} x  -position in the ui\n * @param {number} y  -position in the ui\n * @returns {MappedPositions} position on the canvas\n */ function $a1820c190f7a8b2e$var$uiCoordsToMappedPositions(x, y) {\n    x = $a1820c190f7a8b2e$var$uiToWorld(x);\n    y = $a1820c190f7a8b2e$var$uiToWorld(y);\n    const canvasPosition = new (0, $90999bd6b14cd690$export$13807d9ee5a34a42)(Math.round(x), Math.round(y));\n    const worldPosition = new (0, $90999bd6b14cd690$export$13807d9ee5a34a42)(Math.round(x + $a1820c190f7a8b2e$var$cameraPosition.x), Math.round(y + $a1820c190f7a8b2e$var$cameraPosition.y), -$a1820c190f7a8b2e$var$cameraPosition.rotation);\n    return {\n        canvas: canvasPosition,\n        world: worldPosition\n    };\n}\n/**\n * Convert world Position to canvas Position\n * @param {Position} position  -position in the world\n * @returns {Position} position on the canvas\n */ function $a1820c190f7a8b2e$var$worldPositionToCanvas(position) {\n    return new (0, $90999bd6b14cd690$export$13807d9ee5a34a42)(position.x - $a1820c190f7a8b2e$var$cameraPosition.x, position.y - $a1820c190f7a8b2e$var$cameraPosition.y, position.rotation);\n}\n/**\n * Convert canvas Position to world Position\n * @param {Position} position  -position on the canvas\n * @returns {Position} position in the world\n */ function $a1820c190f7a8b2e$var$canvasPositionToWorld(position) {\n    return new (0, $90999bd6b14cd690$export$13807d9ee5a34a42)(position.x + $a1820c190f7a8b2e$var$cameraPosition.x, position.y + $a1820c190f7a8b2e$var$cameraPosition.y, position.rotation);\n}\n/**\n * Convert glass position to world position. Negative positions are calculated as\n * offsets from the right and bottom of the glass dimensions. Otherwise they are\n * calculated as offsets from the left and top.\n * @returns {Position}\n */ function $a1820c190f7a8b2e$var$glassPositionToWorld(position) {\n    const xOrigin = position.x < 0 ? $a1820c190f7a8b2e$var$visibleCanvasRect.x + $a1820c190f7a8b2e$var$visibleCanvasRect.width : $a1820c190f7a8b2e$var$visibleCanvasRect.x;\n    const yOrigin = position.y < 0 ? $a1820c190f7a8b2e$var$visibleCanvasRect.y + $a1820c190f7a8b2e$var$visibleCanvasRect.height : $a1820c190f7a8b2e$var$visibleCanvasRect.y;\n    let x = xOrigin + position.x;\n    let y = yOrigin + position.y;\n    return $a1820c190f7a8b2e$var$canvasPositionToWorld(new (0, $90999bd6b14cd690$export$13807d9ee5a34a42)(x, y, position.rotation));\n}\n/**\n * Test if rectangle on screen.\n * @param {Rectangle} rect\n * @return {boolean} true if on screen\n */ function $a1820c190f7a8b2e$var$isOnScreen(rect) {\n    return rect.overlaps($a1820c190f7a8b2e$var$canvasRect);\n}\n/**\n * Test if rectangle is visible on the canvas.\n * @param {Rectangle} rect - this should have been converted to canvas coordinates\n * @return {boolean} true if on screen\n */ function $a1820c190f7a8b2e$var$isOnCanvas(rect) {\n    return rect.overlaps($a1820c190f7a8b2e$var$canvasRect);\n}\n/**\n * Get the dimensions of the visible canvas.\n * @returns {Rectangle}\n */ function $a1820c190f7a8b2e$var$getVisibleCanvasRect() {\n    return $a1820c190f7a8b2e$var$visibleCanvasRect;\n}\n/**\n * Set the global opacity.\n * @param {number} opacity\n */ function $a1820c190f7a8b2e$var$setOpacity(opacity) {\n    $a1820c190f7a8b2e$var$getContext2D().globalAlpha = opacity;\n}\n/**\n * Screen object\n */ const $a1820c190f7a8b2e$var$SCREEN = {\n    canvasPositionToWorld: $a1820c190f7a8b2e$var$canvasPositionToWorld,\n    centreCanvasOn: $a1820c190f7a8b2e$var$centreCanvasOn,\n    clearCanvas: $a1820c190f7a8b2e$var$clearCanvas,\n    displayOnGlass: $a1820c190f7a8b2e$var$displayOnGlass,\n    getCanvas: ()=>$a1820c190f7a8b2e$var$canvas,\n    getContext2D: $a1820c190f7a8b2e$var$getContext2D,\n    getCanvasDimensions: $a1820c190f7a8b2e$var$getCanvasDimensions,\n    getWorldInCanvasBounds: $a1820c190f7a8b2e$var$getWorldInCanvasBounds,\n    getVisibleCanvasRect: $a1820c190f7a8b2e$var$getVisibleCanvasRect,\n    glassPositionToWorld: $a1820c190f7a8b2e$var$glassPositionToWorld,\n    isOnCanvas: $a1820c190f7a8b2e$var$isOnCanvas,\n    isOnScreen: $a1820c190f7a8b2e$var$isOnScreen,\n    panCamera: $a1820c190f7a8b2e$var$panCamera,\n    resize: $a1820c190f7a8b2e$var$resize,\n    setOpacity: $a1820c190f7a8b2e$var$setOpacity,\n    setOptions: $a1820c190f7a8b2e$var$setOptions,\n    wipeGlass: $a1820c190f7a8b2e$var$wipeGlass,\n    worldPositionToCanvas: $a1820c190f7a8b2e$var$worldPositionToCanvas,\n    worldToUi: $a1820c190f7a8b2e$var$worldToUi,\n    uiCoordsToMappedPositions: $a1820c190f7a8b2e$var$uiCoordsToMappedPositions,\n    uiToWorld: $a1820c190f7a8b2e$var$uiToWorld\n};\nvar $a1820c190f7a8b2e$export$2e2bcd8739ae039 = $a1820c190f7a8b2e$var$SCREEN;\n\n\n/**\n * @file World limitations\n *\n * @module utils/game/world\n *\n * License {@link https://opensource.org/license/mit/|MIT}\n *\n * Copyright 2024 Steve Butler\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the “Software”), to deal in\n * the Software without restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n * Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */ \n\n/**\n * @type {TileMap}\n */ let $f8633d94d0c88c58$var$worldTileMap;\n/**\n * @type {Map<string, Sprite>}\n */ const $f8633d94d0c88c58$var$actors = new Map();\n/**\n * Sprites that do not interact\n * @type {Map<string, Sprite>}\n */ const $f8633d94d0c88c58$var$passiveSprites = new Map();\n/**\n * Get the world dimensions. The dimensions are based on the worldTileMap size.\n * It defaults to the screen dimensions if no map has been set.\n * @returns {{number, number}} width and height\n */ function $f8633d94d0c88c58$var$getWorldDims() {\n    return $f8633d94d0c88c58$var$worldTileMap ? $f8633d94d0c88c58$var$worldTileMap.getDimensions() : (0, $a1820c190f7a8b2e$export$2e2bcd8739ae039).getCanvasDimensions();\n}\n/**\n * Add a actor to the world.\n * @param {import('./actors.js').Actor}\n */ function $f8633d94d0c88c58$var$addActor(target) {\n    $f8633d94d0c88c58$var$actors.set(target, target);\n    $f8633d94d0c88c58$var$worldTileMap.moveTileOccupancyGridPoint(target, null, $f8633d94d0c88c58$var$worldTileMap.worldPointToGrid(target.position));\n}\n/**\n * Remove actor from the world.\n * @param {import('./actors.js').Actor}\n */ function $f8633d94d0c88c58$var$removeActor(target) {\n    const gridPoint = $f8633d94d0c88c58$var$worldTileMap.worldPointToGrid(target.position);\n    $f8633d94d0c88c58$var$worldTileMap.deleteOccupancyOfGridPoint(target, gridPoint);\n    $f8633d94d0c88c58$var$actors.delete(target);\n}\n/**\n * Add effect sprite\n * @param {Sprite} sprite\n */ function $f8633d94d0c88c58$var$addPassiveSprite(sprite) {\n    $f8633d94d0c88c58$var$passiveSprites.set(sprite, sprite);\n}\n/**\n * Add effect sprite\n * @param {Sprite} sprite\n */ function $f8633d94d0c88c58$var$removePassiveSprite(sprite) {\n    (0, $2d5b4e7cb639ebe1$export$2e2bcd8739ae039).debug(\"Remove passive sprite.\");\n    $f8633d94d0c88c58$var$passiveSprites.delete(sprite);\n}\n/**\n * Set the tile map for the world.\n * @param {TileMap}\n */ function $f8633d94d0c88c58$var$setTileMap(tileMap) {\n    $f8633d94d0c88c58$var$worldTileMap = tileMap;\n}\n/**\n * Get the tile map for the world.\n * @returns {TileMap}\n */ function $f8633d94d0c88c58$var$getTileMap() {\n    return $f8633d94d0c88c58$var$worldTileMap;\n}\n/**\n * Remove the tile map from the world.\n * @param {TileMap}\n */ function $f8633d94d0c88c58$var$removeTileMap() {\n    $f8633d94d0c88c58$var$worldTileMap = null;\n}\n/**\n * Clear the map and all actors.\n */ function $f8633d94d0c88c58$var$clearAll() {\n    $f8633d94d0c88c58$var$actors.forEach((actor)=>$f8633d94d0c88c58$var$removeActor(actor));\n    $f8633d94d0c88c58$var$passiveSprites.forEach((sprite)=>$f8633d94d0c88c58$var$removePassiveSprite(sprite));\n    $f8633d94d0c88c58$var$removeTileMap();\n}\n/**\n * Update the world. This calls the update methods of the tile map and all sprites/\n * @param {number} deltaSeconds\n */ function $f8633d94d0c88c58$var$update(deltaSeconds) {\n    $f8633d94d0c88c58$var$worldTileMap?.update(deltaSeconds);\n    $f8633d94d0c88c58$var$actors.forEach((actor)=>{\n        const oldGridPoint = $f8633d94d0c88c58$var$worldTileMap.worldPointToGrid(actor.position);\n        actor.visible = $f8633d94d0c88c58$var$worldTileMap.canHeroSeeGridPoint(oldGridPoint);\n        actor.update(deltaSeconds);\n        const newGridPoint = $f8633d94d0c88c58$var$worldTileMap.worldPointToGrid(actor.position);\n        $f8633d94d0c88c58$var$worldTileMap.moveTileOccupancyGridPoint(actor, oldGridPoint, newGridPoint);\n    });\n    $f8633d94d0c88c58$var$passiveSprites.forEach((sprite)=>sprite.update(deltaSeconds));\n}\n/**\n * Resolve a ui click\n * @param {import('./screen.js').MappedPositions} positions - click coordinates in canvas and world coordinates.\n * @returns {boolean} true if resolved.\n */ function $f8633d94d0c88c58$var$resolveClick(positions) {\n    const tile = $f8633d94d0c88c58$var$worldTileMap?.getTileAtWorldPoint(positions.world);\n    if (tile) {\n        tile.actionClick(positions.world);\n        return true;\n    }\n    return false;\n}\n/**\n * Resolve a context menu event\n * @param {import('./screen.js').MappedPositions} positions - click coordinates in canvas and world coordinates.\n * @returns {boolean} true if resolved.\n */ function $f8633d94d0c88c58$var$resolveContextMenu(positions) {\n    const tile = $f8633d94d0c88c58$var$worldTileMap.getTileAtWorldPoint(positions.world);\n    if (tile) {\n        tile.actionContextClick(positions.world);\n        return true;\n    }\n    return false;\n}\n/**\n * Resolve a cancel event\n * @param {import('./screen.js').MappedPositions} positions - click coordinates in canvas and world coordinates.\n * @returns {boolean} true if resolved.\n */ function $f8633d94d0c88c58$var$resolveCancel(positionsUnused) {\n    return false;\n}\n/**\n * Get the actors\n * @returns {Map<Actor, Actor>}\n */ function $f8633d94d0c88c58$var$getActors() {\n    return $f8633d94d0c88c58$var$actors;\n}\n/**\n * World object singleton.\n */ const $f8633d94d0c88c58$var$WORLD = {\n    addActor: $f8633d94d0c88c58$var$addActor,\n    addPassiveSprite: $f8633d94d0c88c58$var$addPassiveSprite,\n    clearAll: $f8633d94d0c88c58$var$clearAll,\n    getActors: $f8633d94d0c88c58$var$getActors,\n    getTileMap: $f8633d94d0c88c58$var$getTileMap,\n    getWorldDims: $f8633d94d0c88c58$var$getWorldDims,\n    removeTileMap: $f8633d94d0c88c58$var$removeTileMap,\n    resolveCancel: $f8633d94d0c88c58$var$resolveCancel,\n    resolveClick: $f8633d94d0c88c58$var$resolveClick,\n    resolveContextMenu: $f8633d94d0c88c58$var$resolveContextMenu,\n    removeActor: $f8633d94d0c88c58$var$removeActor,\n    removePassiveSprite: $f8633d94d0c88c58$var$removePassiveSprite,\n    setTileMap: $f8633d94d0c88c58$var$setTileMap,\n    update: $f8633d94d0c88c58$var$update\n};\nvar $f8633d94d0c88c58$export$2e2bcd8739ae039 = $f8633d94d0c88c58$var$WORLD;\n\n\n/**\n * @file Heads-up display. Unlike the world, this never pans and so positions are\n * locked to the canvas coordinates.\n *\n * @module utils/game/hud\n *\n * License {@link https://opensource.org/license/mit/|MIT}\n *\n * Copyright 2024 Steve Butler\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the “Software”), to deal in\n * the Software without restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n * Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */ /**\n * @file Actor classes. Actors encapsulate a Sprite and represent moving objects\n * that can interact with the game.\n *\n * @module utils/game/actors\n *\n * License {@link https://opensource.org/license/mit/|MIT}\n *\n * Copyright 2024 Steve Butler\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the “Software”), to deal in\n * the Software without restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n * Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */ /**\n * @file Handle fights and other interactions.\n *\n * @module dnd/interact\n *\n * License {@link https://opensource.org/license/mit/|MIT}\n *\n * Copyright 2024 Steve Butler (henspace.com).\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the “Software”), to deal in\n * the Software without restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n * Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */ \n/**\n * @file Create transient effects.\n *\n * @module utils/effects/transient\n *\n * License {@link https://opensource.org/license/mit/|MIT}\n *\n * Copyright 2024 Steve Butler (henspace.com).\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the “Software”), to deal in\n * the Software without restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n * Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */ /**\n * @file Basic sprite control\n *\n * @module utils/sprites/sprite\n *\n * License {@link https://opensource.org/license/mit/|MIT}\n *\n * Copyright 2024 Steve Butler\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the “Software”), to deal in\n * the Software without restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n * Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */ \n/**\n * @file Handle sprite rendering on the canvas\n *\n * @module utils/sprites/spriteRenderers\n *\n * License {@link https://opensource.org/license/mit/|MIT}\n *\n * Copyright 2024 Steve Butler\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the “Software”), to deal in\n * the Software without restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n * Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */ \n/**\n * @file Canvas functions for handling text.\n *\n * @module utils/text/text\n *\n * License {@link https://opensource.org/license/mit/|MIT}\n *\n * Copyright 2024 Steve Butler\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the “Software”), to deal in\n * the Software without restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n * Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */ \nfunction $335738a0ba898678$export$85b404b88b79e37e(context, text) {\n    const metrics = context.measureText(text);\n    return {\n        width: metrics.width,\n        height: metrics.fontBoundingBoxAscent + metrics.fontBoundingBoxDescent,\n        offsetTop: -metrics.fontBoundingBoxAscent,\n        offsetCentreY: 0.5 * (metrics.fontBoundingBoxDescent - metrics.fontBoundingBoxAscent)\n    };\n}\n/**\n * Wrap text based on https://codepen.io/nishiohirokazu/pen/jjNyye\n * @param {CanvasRenderingContext2D} context\n * @param {string} paragraph\n * @param {import('../geometry.js').Position} position\n * @param {Object} options\n * @param {number} options.xWrapPosition - position to wrap text.\n * @param {number} [options.lineSpacing = 1] - multiplier for line height. 1 shifts lines by the total font height.\n * @returns {number} the next line y position.\n */ function $335738a0ba898678$var$wrapParagraph(context, paragraph, position, options) {\n    const words = paragraph.split(\" \");\n    let x = position.x ?? 0;\n    let y = position.y ?? 0;\n    let maxLineLength = options.xWrapPosition - x;\n    let lineSpacing = options.lineSpacing ?? 1;\n    let line = \"\";\n    let lineHeight;\n    for(let n = 0; n < words.length; n++){\n        let testLine = line + words[n] + \" \";\n        const bounds = $335738a0ba898678$export$85b404b88b79e37e(context);\n        if (!lineHeight) lineHeight = lineSpacing * bounds.height;\n        if (bounds.width > maxLineLength && n > 0) {\n            context.fillText(line, x, y);\n            line = words[n] + \" \";\n            y += lineHeight;\n        } else line = testLine;\n    }\n    context.fillText(line, x, y);\n    return y + lineHeight;\n}\nfunction $335738a0ba898678$export$bec150f75a9b8f11(context, text, position, options) {\n    context.font = $3c404572c27a35d5$export$955358618f994a11(options?.styleName);\n    context.fillStyle = options?.color ?? \"white\";\n    if (!options?.wrapAtX) context.fillText(text, position.x ?? 0, position.y ?? 0);\n    else {\n        var paragraphs = text.split(\"\\n\");\n        for(let n = 0; n < paragraphs.length; n++)options.y = $335738a0ba898678$var$wrapParagraph(context, paragraphs[n], position, options);\n    }\n}\n\n\n\n/**\n * @file Debug utilities\n *\n * @module utils/debug\n *\n * License {@link https://opensource.org/license/mit/|MIT}\n *\n * Copyright 2024 Steve Butler\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the “Software”), to deal in\n * the Software without restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n * Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */ const $f92f169e79f1c193$export$8eb3892b442747bd = {\n    /**\n   * Should sprite boxes be drawn.@type {boolean}\n   */ spriteBoxes: false,\n    /**\n   * Show framerate\n   */ showFps: true\n};\n\n\n\n\n/**\n * @file Animation support\n *\n * @module utils/sprites/animation\n *\n * License {@link https://opensource.org/license/mit/|MIT}\n *\n * Copyright 2024 Steve Butler\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the “Software”), to deal in\n * the Software without restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n * Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */ /**\n * @file Load and manage images. The image manager is implemented as a singleton.\n *\n * @module utils/sprites/imageManager\n *\n * License {@link https://opensource.org/license/mit/|MIT}\n *\n * Copyright 2024 Steve Butler\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the “Software”), to deal in\n * the Software without restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n * Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */ \n/**\n * @typedef {Object} SpriteBitmap\n * @property {Image} image\n * @property {number} width\n * @property {number} height\n * @property {number} centreX\n * @property {number} centreY\n */ /** @type {Array.Map<string, SpriteBitmap>} */ let $5840285c35321464$var$spriteMaps = [];\n/**\n * Load an image\n * @param {URL} srcUrl - source URL\n * @returns {Promise} fulfils to @type {Image}.\n */ function $5840285c35321464$var$loadImage(srcUrl) {\n    return new Promise((resolve)=>{\n        const image = new Image();\n        image.addEventListener(\"load\", ()=>{\n            (0, $2d5b4e7cb639ebe1$export$2e2bcd8739ae039).debug(\"Image loaded.\");\n            resolve(image);\n        });\n        image.src = srcUrl;\n    });\n}\n/**\n * Load a number of images\n * @param {URL[]} srcUrls - array of source URLs\n * @returns {Promise} fulfils to @type {Image[]}.\n */ function $5840285c35321464$var$loadImages(srcUrls) {\n    const promises = [];\n    srcUrls.forEach((url)=>promises.push($5840285c35321464$var$loadImage(url)));\n    return Promise.all(promises);\n}\n/**\n * Load sprite map.\n * @param {Object} spriteMapDef Sprite map definition from TexturePacker Array JSON file without multipack\n * @param {URL} textureUrl\n * @returns {Promise} fulfils to array of sprite map keys\n */ function $5840285c35321464$var$loadSpriteMap(spriteMapDef, textureUrl) {\n    return $5840285c35321464$var$loadImage(textureUrl).then((image)=>$5840285c35321464$var$buildSpriteMap(spriteMapDef, image));\n}\n/**\n * Build the sprite map\n * @param {Object} spriteMapDef - map definition from texture mapper. Array JSON no multi pack.\n * @param {Image} texture - images providing texture for sprite map.\n * @returns {Promise} fulfils to array of sprite map keys.\n */ function $5840285c35321464$var$buildSpriteMap(spriteMapDef, texture) {\n    const promises = [];\n    const map = new Map();\n    $5840285c35321464$var$spriteMaps.push(map);\n    spriteMapDef.frames.forEach((frame)=>{\n        promises.push(createImageBitmap(texture, frame.frame.x, frame.frame.y, frame.frame.w, frame.frame.h).then((spriteImage)=>{\n            const spriteBitmap = {\n                image: spriteImage,\n                width: frame.frame.w,\n                height: frame.frame.h,\n                centreX: frame.sourceSize.w / 2 - frame.spriteSourceSize.x,\n                centreY: frame.sourceSize.h / 2 - frame.spriteSourceSize.y\n            };\n            map.set(frame.filename, spriteBitmap);\n            return frame.filename;\n        }));\n    });\n    return Promise.all(promises);\n}\n/**\n * @param {number} spriteMapIndex\n * @param {string} filename\n * @returns {SpriteBitmap} null if filename not found.\n */ function $5840285c35321464$var$getSpriteBitmap(spriteMapIndex, filename) {\n    const result = $5840285c35321464$var$spriteMaps[spriteMapIndex].get(filename);\n    if (!result) (0, $2d5b4e7cb639ebe1$export$2e2bcd8739ae039).debug(`Failed to find image ${filename} at index ${spriteMapIndex}`);\n    return result;\n}\n/**\n * Singleton image manager.\n */ const $5840285c35321464$var$IMAGE_MANAGER = {\n    getSpriteBitmap: $5840285c35321464$var$getSpriteBitmap,\n    loadImage: $5840285c35321464$var$loadImage,\n    loadImages: $5840285c35321464$var$loadImages,\n    loadSpriteMap: $5840285c35321464$var$loadSpriteMap\n};\nvar $5840285c35321464$export$2e2bcd8739ae039 = $5840285c35321464$var$IMAGE_MANAGER;\n\n\n/**\n * @file Time utilities. Two clocks exist in the games: real and turn based.\n *\n * @module utils/time/clock\n *\n * License {@link https://opensource.org/license/mit/|MIT}\n *\n * Copyright 2024 Steve Butler\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the “Software”), to deal in\n * the Software without restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n * Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */ /**\n * @type {DOMHighResTimeStamp}\n */ let $92e1ec0ff12c1fbf$var$currentTimeMs = 0;\n/**\n * @param {DOMHighResTimeStamp} timeNowMs\n */ function $92e1ec0ff12c1fbf$var$updateTimeNow(timeNowMs) {\n    $92e1ec0ff12c1fbf$var$currentTimeMs = timeNowMs;\n}\n/**\n * Get a frame counter.\n * @param {number} framePeriodMs - time between frames\n * @returns {number}\n */ function $92e1ec0ff12c1fbf$var$getFrameCount(framePeriodMs) {\n    return Math.floor($92e1ec0ff12c1fbf$var$currentTimeMs / framePeriodMs);\n}\n/**\n *  Game clock as singleton.\n */ const $92e1ec0ff12c1fbf$var$GAME_CLOCK = {\n    updateTimeNow: $92e1ec0ff12c1fbf$var$updateTimeNow,\n    getFrameCount: $92e1ec0ff12c1fbf$var$getFrameCount\n};\nvar $92e1ec0ff12c1fbf$export$2e2bcd8739ae039 = $92e1ec0ff12c1fbf$var$GAME_CLOCK;\n\n\n/**\n * @file Simple indexer for arrays.\n *\n * @module utils/arrays/indexer\n *\n * License {@link https://opensource.org/license/mit/|MIT}\n *\n * Copyright 2024 Steve Butler\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the “Software”), to deal in\n * the Software without restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n * Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */ \nconst $af167e06ffca879a$export$cab6ba75b045ad71 = {\n    WRAP: 0,\n    REVERSE: 1,\n    STOP: 2\n};\nclass $af167e06ffca879a$export$7ed7e8a26b54b288 {\n    /** @type {number} */ #length;\n    /** @type {number} */ #maxIndex;\n    /** @type {number} */ #loopMethod;\n    /** @type {number} */ #direction;\n    /** @type {number} */ #index;\n    /**\n   * @param {number} length\n   * @param {LoopMethod} loopMethod\n   */ constructor(length, loopMethod){\n        this.#length = length;\n        this.#maxIndex = length - 1;\n        this.#loopMethod = loopMethod;\n        this.#direction = 1;\n        this.#index = 0;\n    }\n    /**\n   * Get current index.\n   */ get index() {\n        return this.#index;\n    }\n    /**\n   * Set current index. This will be clipped to a valid value.\n   */ set index(value) {\n        this.#index = $05d58a132d6b5767$export$e0b576e7a74416cd(value, 0, this.#length - 1);\n    }\n    /** Advance to the index.\n   * @param {number} distance - amount to move. This should be positive.\n   * @returns {number} the new index\n   */ advanceBy(distance) {\n        if (this.#length < 1) return this.#index;\n        switch(this.#loopMethod){\n            case $af167e06ffca879a$export$cab6ba75b045ad71.WRAP:\n                return this.#advanceByWrap(distance);\n            case $af167e06ffca879a$export$cab6ba75b045ad71.REVERSE:\n                return this.#advanceByReverse(distance);\n            case $af167e06ffca879a$export$cab6ba75b045ad71.NONE:\n            default:\n                return this.#advanceByStop(distance);\n        }\n    }\n    /** Advance the index by distance. The direction is maintained by the indexer\n   * itself. Wrap at ends.\n   * @param {number} distance - amount to move. This should be positive.\n   * @returns {number} the new index\n   */ #advanceByWrap(distance) {\n        distance = distance % this.#length;\n        this.#index += distance % this.#length;\n        if (this.#index >= this.#length) this.#index = this.#index - this.#length;\n        return this.#index;\n    }\n    /** Advance the index by distance. The direction is maintained by the indexer\n   * itself. Reverse at ends.\n   * @param {number} distance - amount to move. This should be positive.\n   * @returns {number} the new index\n   */ #advanceByReverse(distance) {\n        const nFullTraversals = Math.floor(distance / this.#length);\n        if (nFullTraversals % 2) this.#direction = -this.#direction; // odd so reversing\n        distance = distance % this.#length;\n        if (this.#direction > 0) {\n            this.#index += distance;\n            const overshoot = this.#index - this.#maxIndex;\n            if (overshoot > 0) {\n                this.#index = this.#maxIndex - overshoot;\n                this.#direction = -1;\n            }\n        } else if (this.#direction < 0) {\n            this.#index -= distance;\n            if (this.#index < 0) {\n                this.#index = -this.#index;\n                this.#direction = 1;\n            }\n        }\n        return this.#index;\n    }\n    /** Advance the index by distance. The direction is maintained by the indexer\n   * itself. Stop at ends.\n   * @param {number} distance - amount to move. This should be positive.\n   * @returns {number} the new index\n   */ #advanceByStop(distance) {\n        if (this.#direction > 0) this.#index = Math.min(this.#maxIndex, this.#index + distance);\n        else if (this.#direction < 0) this.#index = Math.max(0, this.#index - distance);\n        return this.#index;\n    }\n}\n\n\n\nclass $7f41e47310ae6543$export$9d5734c725768403 {\n    /** @type {boolean} */ playing;\n    /** @type {import('./imageManager.js').SpriteBitmap[]} */ #frames;\n    /** @type {Indexer} */ #indexer;\n    /** @type {number} */ #lastFrameCount;\n    /** Period in ms for frame animations @type {number}*/ #framePeriodMs;\n    /**\n   * Construct animation.\n   * @param {number} textureIndex\n   * @param {Object | string} filenamePattern - if a string is parsed then the image is a single frame.\n   * @param {string} filenamePattern.prefix\n   * @param {number} filenamePattern.startIndex - starting index.\n   * @param {number} filePattern.padding - index is padded with leading zeros to padding length\n   * @param {string} filenamePattern.suffix\n   * @param {Object} options\n   * @param {number} options.framePeriodMs - period in ms for frame animations.\n   * @param {LoopMethod} options.loopMethod - method of looping animation.\n   */ constructor(textureIndex, filenamePattern, options){\n        this.#frames = [];\n        this.#lastFrameCount = 0;\n        if (typeof filenamePattern === \"string\") {\n            this.#frames.push((0, $5840285c35321464$export$2e2bcd8739ae039).getSpriteBitmap(textureIndex, filenamePattern));\n            return;\n        }\n        this.#framePeriodMs = Math.max(1, options.framePeriodMs);\n        let index = filenamePattern.startIndex ?? 0;\n        let padding = filenamePattern.padding ?? 0;\n        let textureFrame;\n        do {\n            const fileName = `${filenamePattern.prefix}${index.toString().padStart(padding, \"0\")}${filenamePattern.suffix}`;\n            textureFrame = (0, $5840285c35321464$export$2e2bcd8739ae039).getSpriteBitmap(textureIndex, fileName); // imageManager.getFrame(textureIndex, fileName);\n            if (textureFrame) this.#frames.push(textureFrame);\n            index++;\n        }while (textureFrame);\n        this.#indexer = new (0, $af167e06ffca879a$export$7ed7e8a26b54b288)(this.#frames.length, options.loopMethod);\n        this.playing = true;\n    }\n    /**\n   * Get current frame\n   * @returns {import('./imageManager.js').SpriteBitmap}\n   */ getCurrentFrame() {\n        if (this.#frames.length > 1) {\n            if (this.playing) {\n                const frameCount = (0, $92e1ec0ff12c1fbf$export$2e2bcd8739ae039).getFrameCount(this.#framePeriodMs);\n                if (frameCount !== this.#lastFrameCount) {\n                    this.#indexer.advanceBy(frameCount - this.#lastFrameCount);\n                    this.#lastFrameCount = frameCount;\n                }\n            }\n            return this.#frames[this.#indexer.index];\n        } else return this.#frames[0];\n    }\n    /**\n   * Manual movement of frames. Note this automatically switches off playing.\n   * @param {number} index - frame index. This will be clipped to the ends of the\n   * array.\n   */ setCurrentIndex(index) {\n        if (this.#frames.length > 1) {\n            this.playing = false;\n            this.#indexer.index = index;\n        }\n    }\n    /**\n   * Get the current index.\n   * @returns {number}\n   */ getCurrentIndex() {\n        if (this.#frames.length > 1) return this.#indexer.index;\n        else return 0;\n    }\n}\nclass $7f41e47310ae6543$export$7ded0ab8d4b1a54f {\n    /** @type {Object.<string, AnimatedImage>} */ #animatedImages;\n    /** @type {string} */ #currentImage;\n    /**\n   * Create the keyed animated image\n   * @param {string} key\n   * @param {AnimatedImage} animatedImage\n   */ constructor(key, animatedImage){\n        this.#animatedImages = {};\n        this.#animatedImages[key] = animatedImage;\n        this.#currentImage = animatedImage;\n    }\n    /**\n   * Get the current image.\n   */ get image() {\n        return this.#currentImage;\n    }\n    /**\n   * Add image to available images.\n   * @param {string} key\n   * @param {AnimatedImage} animatedImage\n   */ addAnimatedImage(key, animatedImage) {\n        this.#animatedImages[key] = animatedImage;\n    }\n    /**\n   * Set the current animation key. Ignored if it does not exist.\n   * @param {string} key\n   */ setCurrentKey(key) {\n        //eslint-disable-next-line no-prototype-builtins\n        if (this.#animatedImages.hasOwnProperty(key)) this.#currentImage = this.#animatedImages[key];\n        else (0, $2d5b4e7cb639ebe1$export$2e2bcd8739ae039).error(`Attempt to set current key to nonexistent value of ${key}`);\n    }\n    /**\n   * Get current frame\n   * @returns {import('./imageManager.js').SpriteBitmap}\n   */ getCurrentFrame() {\n        return this.#currentImage.getCurrentFrame();\n    }\n}\n\n\n\n\n/**\n * @typedef {Object} RenderGeometry\n * @property {number} width\n * @property {number} height\n * @property {import('../geometry.js').Point} origin - origin relative to the centre\n */ /**\n * Convert RenderGeometry to Rectangle\n * @param {import('../geometry.js').Position} position\n * @param {RenderGeometry} renderGeom\n * @returns {import('../geometry.js').Rectangle}\n */ function $f1adbd10d5a753d6$var$renderGeometryToRect(position, renderGeom) {\n    return new (0, $90999bd6b14cd690$export$4617fb02663045ef)(position.x - renderGeom.width / 2, position.y - renderGeom.height / 2, renderGeom.width, renderGeom.height);\n}\nclass $f1adbd10d5a753d6$export$b1e2fc7f480e9342 {\n    /** @type {CanvasRenderingContext2D} */ _context;\n    /** @type {import('../geometry.js').Rectangle} */ _boundingBoxCanvas;\n    /**\n   * Construct base renderer\n   * @param {CanvasRenderingContext2D} context\n   */ constructor(context){\n        this._context = context;\n        this._boundingBoxCanvas = new (0, $90999bd6b14cd690$export$4617fb02663045ef)(0, 0, 0, 0);\n    }\n    /**\n   * Get the context. This is just provided to allow classes other than children\n   * to read the context. _context could be used but that is not the intent.\n   */ getContext() {\n        return this._context;\n    }\n    /**\n   * Get the axis aligned bounding box\n   * @returns {import('../geometry.js').Rectangle}\n   */ getBoundingBoxCanvas() {\n        return this._boundingBoxCanvas;\n    }\n    /**\n   * Render the sprite.\n   * @param {import('../geometry.js').Position} position in the world\n   * @param {number} opacity\n   */ render(position, opacity) {\n        position = (0, $a1820c190f7a8b2e$export$2e2bcd8739ae039).worldPositionToCanvas(position);\n        if (!this.isOnCanvas(position)) return;\n        const currentAlpha = this._context.globalAlpha;\n        this._context.globalAlpha = currentAlpha * opacity;\n        const rotated = position.rotation;\n        if (rotated) {\n            this._context.save();\n            this._context.translate(position.x, position.y);\n            this._context.rotate(-position.rotation);\n            this._context.translate(-position.x, -position.y);\n        }\n        this._doRender(position);\n        if (rotated) this._context.restore();\n        if ($f92f169e79f1c193$export$8eb3892b442747bd.spriteBoxes) {\n            this._context.strokeStyle = \"green\";\n            this._context.strokeRect(this._boundingBoxCanvas.x, this._boundingBoxCanvas.y, this._boundingBoxCanvas.width, this._boundingBoxCanvas.height);\n        }\n        this._context.globalAlpha = currentAlpha;\n    }\n    /**\n   * Render the sprite\n   * @param {import('../geometry.js').Position} position\n   */ _doRender(positionUnused) {\n        (0, $2d5b4e7cb639ebe1$export$2e2bcd8739ae039).error(\"_doRender method should be overridden.\");\n    }\n    /**\n   * Check if it will be on screen\n   * @param {import('../geometry.js').Position} position\n   * @returns {boolean} true if on screen.\n   */ isOnScreen(position) {\n        const rect = new (0, $90999bd6b14cd690$export$4617fb02663045ef)(position.x - this._boundingBoxCanvas.width / 2, position.y - this._boundingBoxCanvas.height / 2, this._boundingBoxCanvas.width, this._boundingBoxCanvas.height);\n        return (0, $a1820c190f7a8b2e$export$2e2bcd8739ae039).isOnScreen(rect);\n    }\n    /**\n   * Check if it will be on screen\n   * @param {import('../geometry.js').Position} position - this should be in canvas coordinates.\n   * @returns {boolean} true if on screen.\n   */ isOnCanvas(position) {\n        const rect = new (0, $90999bd6b14cd690$export$4617fb02663045ef)(position.x - this._boundingBoxCanvas.width / 2, position.y - this._boundingBoxCanvas.height / 2, this._boundingBoxCanvas.width, this._boundingBoxCanvas.height);\n        return (0, $a1820c190f7a8b2e$export$2e2bcd8739ae039).isOnCanvas(rect);\n    }\n}\nclass $f1adbd10d5a753d6$export$544ff2c168abc0f9 extends $f1adbd10d5a753d6$export$b1e2fc7f480e9342 {\n    /** Name used to access font styles from the fonts.\n   * @type {string}\n   */ #styleName;\n    /** @type {string} */ #lastCalculatedText;\n    /** @type {RenderGeometry} */ #renderGeometry;\n    /** @type {string} */ text;\n    /**\n   * @param {CanvasRenderingContext2D} context\n   * @param {string} text\n   * @param {string} [styleName = 'normal']\n   */ constructor(context, text, styleName = \"normal\"){\n        super(context);\n        this.text = text;\n        this.#styleName = styleName;\n    }\n    /**\n   * Calculate the renderGeometry of the text.\n   * @param {string} text\n   */ #calculateRenderGeometry(text) {\n        this._context.font = $3c404572c27a35d5$export$955358618f994a11(this.#styleName);\n        const metrics = this._context.measureText(text);\n        this.#renderGeometry = {\n            width: metrics.width,\n            height: metrics.fontBoundingBoxAscent + metrics.fontBoundingBoxDescent,\n            origin: {\n                x: -0.5 * metrics.width,\n                y: 0.5 * (metrics.fontBoundingBoxAscent - metrics.fontBoundingBoxDescent)\n            }\n        };\n        this.#lastCalculatedText = text;\n    }\n    /**\n   * Render the sprite\n   * @param {import('../geometry.js').Position} position - this will have been adjusted to the screen.\n   */ _doRender(position) {\n        if (this.text !== this.#lastCalculatedText) this.#calculateRenderGeometry(this.text);\n        const renderPosition = {\n            x: position.x + this.#renderGeometry.origin.x,\n            y: position.y + this.#renderGeometry.origin.y,\n            rotation: position.rotation\n        };\n        $335738a0ba898678$export$bec150f75a9b8f11(this._context, this.#lastCalculatedText, renderPosition, {\n            styleName: this.#styleName\n        });\n        this._boundingBoxCanvas = $f1adbd10d5a753d6$var$renderGeometryToRect(position, this.#renderGeometry);\n    }\n}\nclass $f1adbd10d5a753d6$export$bea6a7ef06354cc extends $f1adbd10d5a753d6$export$b1e2fc7f480e9342 {\n    #width;\n    #height;\n    #halfWidth;\n    #halfHeight;\n    #fillStyle;\n    #strokeStyle;\n    /**\n   *\n   * @param {CanvasRenderingContext2D} context\n   * @param {Object} options\n   * @param {number} options.width\n   * @param {number} options.height\n   * @param {string} options.fillStyle\n   * @param {string} options.strokeStyle\n   */ constructor(context, options){\n        super(context);\n        this.#width = options.width ?? 10;\n        this.#height = options.height ?? 10;\n        this.#halfWidth = this.#width / 2;\n        this.#halfHeight = this.#height / 2;\n        this.#fillStyle = options.fillStyle;\n        this.#strokeStyle = options.strokeStyle;\n    }\n    /**\n   * Render the sprite.\n   * @param {import('../geometry.js').Position} position - this will have been adjusted to the screen.\n   */ _doRender(position) {\n        const x = position.x - this.#halfWidth;\n        const y = position.y - this.#halfHeight;\n        if (this.#fillStyle) {\n            this._context.fillStyle = this.#fillStyle;\n            this._context.fillRect(x, y, this.#width, this.#height);\n        }\n        if (this.#strokeStyle) {\n            this._context.strokeStyle = this.#strokeStyle;\n            this._context.strokeRect(x, y, this.#width, this.#height);\n        }\n        this._boundingBoxCanvas = new (0, $90999bd6b14cd690$export$4617fb02663045ef)(x, y, this.#width, this.#height);\n    }\n}\nclass $f1adbd10d5a753d6$export$184b92f2ec28e2e2 extends $f1adbd10d5a753d6$export$b1e2fc7f480e9342 {\n    #height;\n    #halfHeight;\n    #width;\n    #halfWidth;\n    #fillStyle;\n    #strokeStyle;\n    #offsetX;\n    #offsetY;\n    #fillHeight;\n    #halfFillHeight;\n    /**\n   *\n   * @param {CanvasRenderingContext2D} context\n   * @param {Object} options\n   * @param {number} options.width\n   * @param {number} options.height\n   * @param {string} options.fillStyle\n   * @param {string} options.strokeStyle\n   * @param {number} options.offsetX - sprite is offset from the normal sprite position.\n   * @param {number} options.offsetY - sprite is offset from the normal sprite position.\n   */ constructor(context, options){\n        super(context);\n        this.#height = options.height;\n        this.#halfHeight = this.#height / 2;\n        this.#width = options.width;\n        this.#halfWidth = this.#width / 2;\n        this.#fillStyle = options.fillStyle;\n        this.#strokeStyle = options.strokeStyle;\n        this.#offsetX = options.offsetX ?? 0;\n        this.#offsetY = options.offsetY ?? 0;\n        this.setLevel(0);\n    }\n    /** Set the level of the gauge.\n   * @param {number} proportion - 0 to 1\n   */ setLevel(proportion) {\n        this.#fillHeight = Math.min(proportion, 1) * this.#height;\n        this.#halfFillHeight = 0.5 * this.#fillHeight;\n    }\n    /**\n   * Render the sprite.\n   * @param {import('../geometry.js').Position} position - this will have been adjusted to the screen.\n   */ _doRender(position) {\n        const topStroke = position.y - this.#halfHeight + this.#offsetY;\n        const topFill = position.y + this.#halfHeight - this.#fillHeight + this.#offsetY;\n        const x = position.x - this.#halfWidth + this.#offsetX;\n        if (this.#fillStyle) {\n            this._context.fillStyle = this.#fillStyle;\n            this._context.fillRect(x, topFill, this.#width, this.#fillHeight);\n        }\n        if (this.#strokeStyle) {\n            this._context.strokeStyle = this.#strokeStyle;\n            this._context.strokeRect(x, topStroke, this.#width, this.#height);\n        }\n        this._boundingBoxCanvas = new (0, $90999bd6b14cd690$export$4617fb02663045ef)(x, topStroke, this.#width, this.#height);\n    }\n}\nclass $f1adbd10d5a753d6$export$f1bb2dcf27836475 extends $f1adbd10d5a753d6$export$b1e2fc7f480e9342 {\n    #gaugeRenderers;\n    /**\n   * The number of gauges is determined by the maximum length of the fill styles and\n   * stroke styles\n   * @param {CanvasRenderingContext2D} context\n   * @param {Object} options\n   * @param {number} options.tileSize\n   * @param {string[]} options.fillStyles\n   * @param {string[]} options.strokeStyles\n   */ constructor(context, options){\n        super(context);\n        const nGauges = Math.max(options.fillStyles.length ?? 0, options.strokeStyles.length ?? 0);\n        if (nGauges === 0) {\n            (0, $2d5b4e7cb639ebe1$export$2e2bcd8739ae039).error(\"Attempt to create MultiGaugeTileRenderer with no gauges.\");\n            return;\n        }\n        this.#gaugeRenderers = [];\n        const gaugeWidth = options.tileSize / nGauges;\n        let gaugePosX = -options.tileSize / 2 + gaugeWidth / 2;\n        for(let index = 0; index < nGauges; index++)this.#gaugeRenderers.push(new $f1adbd10d5a753d6$export$184b92f2ec28e2e2(context, {\n            width: gaugeWidth,\n            height: options.tileSize,\n            fillStyle: options.fillStyles?.[index],\n            strokeStyle: options.strokeStyles?.[index],\n            offsetX: gaugePosX + gaugeWidth * index,\n            offsetY: 0\n        }));\n    }\n    /**\n   * Set the level of a gauge.\n   * @param {number} gaugeIndex\n   * @param {number} proportion - 0 to 1\n   */ setLevel(gaugeIndex, proportion) {\n        this.#gaugeRenderers[gaugeIndex]?.setLevel(proportion);\n    }\n    /**\n   * Render the sprite.\n   * @param {import('../geometry.js').Position} position - this will have been adjusted to the screen.\n   */ render(position) {\n        this.#gaugeRenderers?.forEach((renderer)=>renderer.render(position));\n    }\n}\nclass $f1adbd10d5a753d6$export$f6eddc3f9306e494 extends $f1adbd10d5a753d6$export$b1e2fc7f480e9342 {\n    /** @type {RenderGeometry} */ #renderGeometry;\n    /** @type {Point[]} */ path;\n    /**\n   * Create a path renderer.\n   * @param {CanvasRenderingContext2D} context\n   * @param {Point[]} path\n   */ constructor(context, path){\n        super(context);\n        this.path = path;\n    }\n    /** Calculate the rendering geometry.\n   * @param {Point[]} path\n   * @param {import('../geometry.js').Position} position\n   */ #calculateGeometry(path, positionUnused) {\n        let minPoint = (0, $90999bd6b14cd690$export$9bb5b4b8c6114d78);\n        let maxPoint = (0, $90999bd6b14cd690$export$ffabdd03f47fc732);\n        path.forEach((point)=>{\n            minPoint.x = Math.min(minPoint.x, point.x);\n            minPoint.y = Math.min(minPoint.y, point.y);\n            maxPoint.x = Math.max(maxPoint.x, point.x);\n            maxPoint.y = Math.max(maxPoint.y, point.y);\n        });\n        this.#renderGeometry = {\n            width: maxPoint.x - minPoint.x,\n            height: maxPoint.y - minPoint.y,\n            origin: {\n                x: 0.5 * (minPoint.x + maxPoint.x),\n                y: 0.5 * (minPoint.y + maxPoint.y)\n            }\n        };\n    }\n    /**\n   * Render the sprite.\n   * @param {import('../geometry.js').Position} position - this will have been adjusted to the screen.\n   */ _doRender(position) {\n        if (this.path.length < 2) {\n            (0, $2d5b4e7cb639ebe1$export$2e2bcd8739ae039).error(\"Path sprite needs at least 2 points.\");\n            return;\n        }\n        if (!this.#renderGeometry) this.#calculateGeometry(this.path, position);\n        this._context.beginPath();\n        this._context.strokeStyle = \"blue\";\n        this._context.moveTo(this.path[0].x + position.x, this.path[0].y + position.y);\n        for(let n = 1; n < this.path.length; n++)this._context.lineTo(this.path[n].x + position.x, this.path[n].y + position.y);\n        this._context.closePath();\n        this._context.stroke();\n        this._boundingBoxCanvas = $f1adbd10d5a753d6$var$renderGeometryToRect(position, this.#renderGeometry);\n    }\n}\nclass $f1adbd10d5a753d6$export$c1626e6e036a584 extends $f1adbd10d5a753d6$export$b1e2fc7f480e9342 {\n    /** @type {import('./imageManager.js').SpriteBitmap} */ #spriteBitmap;\n    /** @type {animation.KeyedAnimatedImages} */ #animation;\n    /**\n   * Create an image renderer.\n   * @param {CanvasRenderingContext2D} context\n   * @param {SpriteBitmap | animation.AnimatedImage | animation.KeyAnimatedImages} imageDefinition\n   */ constructor(context, imageDefinition){\n        super(context);\n        if (imageDefinition?.getCurrentFrame) {\n            this.#animation = imageDefinition;\n            this.#spriteBitmap = this.#animation.getCurrentFrame();\n        } else this.#spriteBitmap = imageDefinition;\n        if (this.#spriteBitmap) {\n            this._boundingBoxCanvas.width = this.#spriteBitmap?.width ?? 0;\n            this._boundingBoxCanvas.height = this.#spriteBitmap?.height ?? 0;\n        } else (0, $2d5b4e7cb639ebe1$export$2e2bcd8739ae039).error(`No image frame available for sprite.`, imageDefinition);\n    }\n    /**\n   * Render the sprite.\n   * @param {import('../geometry.js').Position} position - this will have been adjusted to the screen.\n   */ _doRender(position) {\n        if (!this.#spriteBitmap) return;\n        const frame = this.#animation ? this.#animation.getCurrentFrame() : this.#spriteBitmap;\n        this._boundingBoxCanvas.x = position.x - this._boundingBoxCanvas.width / 2;\n        this._boundingBoxCanvas.y = position.y - this._boundingBoxCanvas.height / 2;\n        this._context.drawImage(frame.image, position.x - frame.centreX, position.y - frame.centreY);\n    }\n}\n\n\nclass $5b82fcc8e5572650$export$3075603db8e6204c {\n    /** @type {Position}*/ #position = new (0, $90999bd6b14cd690$export$13807d9ee5a34a42)(0, 0, 0);\n    /** @type {Velocity} */ #velocity = new (0, $90999bd6b14cd690$export$4a23b3811cef465)(0, 0, 0);\n    /** @type {SpriteCanvasRenderer[]} */ #renderer;\n    /** @type {boolean} */ #multiRenderers;\n    /** @type {AbstractModifier} */ modifier;\n    /** @type {boolean} */ visible;\n    /** @type {number} */ opacity;\n    /**\n   * @param {Object} options\n   * @param {SpriteCanvasRenderer } options.renderer - the renderer or renderers that render the sprite\n   * rather than the world.\n   */ constructor(options){\n        this.#renderer = options?.renderer;\n        this.#multiRenderers = Array.isArray(this.#renderer);\n        this.visible = true;\n        this.opacity = 1;\n    }\n    /**\n   * Get the current position.\n   * @returns {Position}\n   */ get position() {\n        return this.#position;\n    }\n    /**\n   * Set the current position. Invalid values become 0.\n   * @param {Position} nextPosition\n   */ set position(nextPosition) {\n        this.#position.x = this.valueOrZero(nextPosition.x);\n        this.#position.y = this.valueOrZero(nextPosition.y);\n        this.#position.rotation = this.valueOrZero(nextPosition.rotation);\n    }\n    /**\n   * Get the current motion.\n   * @returns {Velocity}\n   */ get velocity() {\n        return this.#velocity;\n    }\n    /**\n   * Set the current Velocity. Invalid values become 0.\n   * @param {Velocity} nextVelocity\n   */ set velocity(nextVelocity) {\n        this.#velocity.x = this.valueOrZero(nextVelocity.x);\n        this.#velocity.y = this.valueOrZero(nextVelocity.y);\n        this.#velocity.rotation = this.valueOrZero(nextVelocity.rotation);\n    }\n    /**\n   * Returns the value but converts non-numeric values to 0.\n   * @param {number} value\n   * @returns {number}\n   */ valueOrZero(value) {\n        return typeof value === \"number\" ? value : 0;\n    }\n    /**\n   * Update the sprite. Calls the sprite's mover and then renderer.\n   * @param {number} deltaSeconds - elapsed time.\n   */ update(deltaSeconds) {\n        if (this.modifier) this.modifier = this.modifier.update(this, deltaSeconds);\n        if (this.visible) this.#render();\n    }\n    /**\n   * Render the sprite by calling the sprite's renderer\n   */ #render() {\n        if (!this.#renderer) return;\n        if (!this.#renderer.forEach) this.#renderer.render(this.#position, this.opacity);\n        else this.#renderer.forEach((renderer)=>renderer.render(this.#position, this.opacity));\n    }\n    /** Get the bounding box for the sprite.\n   * @returns {geometry.Rectangle}\n   */ getBoundingBox() {\n        const boundsCanvas = this.#renderer.getBoundingBoxCanvas();\n        return new (0, $90999bd6b14cd690$export$4617fb02663045ef)(this.position.x - boundsCanvas.width / 2, this.position.y - boundsCanvas.height / 2, boundsCanvas.width, boundsCanvas.height);\n    }\n}\n\n\n\n\n/**\n * @file Faders which adjust opacity\n *\n * @module utils/sprites/faders\n *\n * License {@link https://opensource.org/license/mit/|MIT}\n *\n * Copyright 2024 Steve Butler (henspace.com).\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the “Software”), to deal in\n * the Software without restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n * Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */ /**\n * @file Modifiers for updates\n *\n * @module utils\\sprites\\modifiers\n *\n * License {@link https://opensource.org/license/mit/|MIT}\n *\n * Copyright 2024 Steve Butler\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the “Software”), to deal in\n * the Software without restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n * Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */ \n/** Default timeout for transient modifiers. @type {number} */ const $f8eb19ad944a8e76$var$DEFAULT_TIMEOUT_SECS = 10;\nclass $f8eb19ad944a8e76$export$f929ba4d0b405b8b {\n    /** @type {AbstractModifier} */ decoratedModifier;\n    /** The resolve function for transient modifiers @type {function(*)} */ #resolveFunc;\n    /** Total active time in seconds */ #activeSeconds;\n    /** Timeout duration */ #timeoutSeconds;\n    /**\n   *\n   * @param {AbstractModifier} [decoratedModifier]\n   */ constructor(decoratedModifier){\n        this.#activeSeconds = 0;\n        this.#timeoutSeconds = 0;\n        this.decoratedModifier = decoratedModifier;\n    }\n    /**\n   * Apply the modifier as transient to a sprite.\n   * @param {AbstractModifier} modifier\n   * @param {Sprite} sprite\n   * @param {number} [timeoutSeconds =\n   * @returns {Promise} fulfils to null on completion;\n   */ applyAsTransientToSprite(sprite, timeoutSeconds = $f8eb19ad944a8e76$var$DEFAULT_TIMEOUT_SECS) {\n        this.#timeoutSeconds = timeoutSeconds;\n        return new Promise((resolve)=>{\n            this.#resolveFunc = resolve;\n            sprite.modifier = this;\n        });\n    }\n    /**\n   * Apply the modifier as continuous to a sprite.\n   * @param {Sprite} sprite\n   */ applyAsContinuousToSprite(sprite) {\n        sprite.modifier = this;\n    }\n    /** Do the update modification. If a decoratedModifier has been set, this is then\n   * called. If after calling update, the modifier is removed, it is removed from\n   * the owning decoratedModifier. Its children are retained.\n   * @param {Sprite} sprite\n   * @param {number} deltaSeconds - elapsed time since last update.\n   * @returns {AbstractModifier} - the modifier required for the next update. This\n   * normally returns itself. If null is return, this indicates that the modifier\n   * has completed its action and can be removed from the chain of decorated\n   * modifiers. This method handles removal of its own decoratedModifier, but removal\n   * of the root, if appropriate, is the responsibility of the Sprite.\n   */ update(sprite, deltaSeconds) {\n        if (this.#resolveFunc) this.#activeSeconds += deltaSeconds;\n        if (this.decoratedModifier) this.decoratedModifier = this.decoratedModifier?.update(sprite, deltaSeconds);\n        const nextModifier = this.doUpdate(sprite, deltaSeconds);\n        if (!nextModifier || this.#activeSeconds > this.#timeoutSeconds) {\n            this.#resolveFunc?.(null);\n            return null;\n        }\n        return nextModifier;\n    }\n    /** Do the update modification for this modifier.\n   * @param {Sprite} sprite\n   * @param {number} deltaSeconds - elapsed time since last update.\n   * @returns {AbstractModifier} - the modifier for the next update.\n   */ doUpdate(spriteUnused, deltaSecondsUnused) {\n        (0, $2d5b4e7cb639ebe1$export$2e2bcd8739ae039).error(\"doUpdate should be overridden.\");\n        return this;\n    }\n}\n\n\nclass $cf74d2982f28ade3$export$709baf898a5dceda extends (0, $f8eb19ad944a8e76$export$f929ba4d0b405b8b) {\n    #deltaOpacityPerSec;\n    /**\n   * Construct aligner. Rotations are worked out counter clockwise from the positive\n   * x axis direction. However, sprites are normally drawn vertically as you look at them;\n   * i.e they are pointing downwards or at -90 degrees from the horizontal axis. You can\n   * set this using the baseDirection parameter.\n   * @param {number} lifetimeSecs - default alignment.\n   * @param {AbstractModifier} decoratedModifier\n   */ constructor(lifetimeSecs, decoratedModifier){\n        super(decoratedModifier);\n        this.#deltaOpacityPerSec = 1 / Math.max(lifetimeSecs, 0.5);\n    }\n    /**\n   * Adjust sprite opacity depending on time. When the time is complete, this\n   * modify returns null to indicate completion.\n   * @param {import('./sprite.js').Sprite} sprite\n   * @param {number} deltaSeconds - elapsed time\n   * @returns {AbstractModifier}\n   */ doUpdate(sprite, deltaSeconds) {\n        sprite.opacity = Math.max(0, sprite.opacity - deltaSeconds * this.#deltaOpacityPerSec);\n        return sprite.opacity > 0 ? this : null;\n    }\n}\n\n\n\n/**\n * @file Movers for sprites\n *\n * @module utils/sprites/movers\n *\n * License {@link https://opensource.org/license/mit/|MIT}\n *\n * Copyright 2024 Steve Butler\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the “Software”), to deal in\n * the Software without restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n * Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */ \nclass $6b87500f649b76df$var$VariableSpeed {\n    /** @type {number} */ #speed;\n    /** @type {boolean} */ #linear;\n    /** Create variable speed.\n   * @param {number} speed - base speed.\n   * @param {boolean} linear - true if speed constant, otherwise speed faster if\n   * further away.\n   */ constructor(speed, linear){\n        this.#speed = speed;\n        this.#linear = linear;\n    }\n    /**\n   * Get speed to move between points.\n   * @param {Point} pointA\n   * @param {Point} pointB\n   * @returns {number}\n   */ getSpeedBetweenPoints(pointA, pointB) {\n        if (this.#linear) return this.#speed;\n        else {\n            const separation = Math.abs(pointA.x - pointB.x) + Math.abs(pointA.y - pointB.y);\n            return (1 + 0.1 * separation) * this.#speed;\n        }\n    }\n}\nclass $6b87500f649b76df$export$9600794ac1f85e81 extends (0, $f8eb19ad944a8e76$export$f929ba4d0b405b8b) {\n    /** @type {import('../geometry.js').Point} */ #topLeft;\n    /** @type {import('../geometry.js').Point} */ #bottomRight;\n    /**\n   * @param {AbstractModifier} decoratedModifier\n   */ constructor(decoratedModifier){\n        super(decoratedModifier);\n    }\n    /**\n   * Move sprite using its velocity\n   * @param {import('./sprite.js').Sprite} sprite\n   * @param {number} deltaSeconds - elapsed time\n   * @returns {AbstractModifier}\n   */ doUpdate(sprite, deltaSeconds) {\n        const position = sprite.position;\n        const velocity = sprite.velocity;\n        position.x += velocity.x * deltaSeconds;\n        position.y += velocity.y * deltaSeconds;\n        sprite.position = position;\n        sprite.velocity = velocity;\n        return this;\n    }\n}\nclass $6b87500f649b76df$export$9a9871e8ef5d3528 extends (0, $f8eb19ad944a8e76$export$f929ba4d0b405b8b) {\n    /** @type {number} */ #baseDirection;\n    /**\n   * Construct aligner. Rotations are worked out counter clockwise from the positive\n   * x axis direction. However, sprites are normally drawn vertically as you look at them;\n   * i.e they are pointing downwards or at -90 degrees from the horizontal axis. You can\n   * set this using the baseDirection parameter.\n   * @param {number} baseDirection - default alignment.\n   * @param {AbstractModifier} decoratedModifier\n   */ constructor(baseDirection = -Math.PI / 2, decoratedModifier){\n        super(decoratedModifier);\n        this.#baseDirection = baseDirection;\n    }\n    /**\n   * Create a VelocityAligner. This is a convenience factory method that automatically\n   * sets the base direction to -90 degrees which is how sprites are normally drawn; i.e. upright\n   * instead of horizontally.\n   * @param {AbstractModifier} decoratedModifier\n   * @returns {VelocityAligner}\n   */ static createUprightAligner(decoratedModifier) {\n        return new $6b87500f649b76df$export$9a9871e8ef5d3528(-Math.PI / 2, decoratedModifier);\n    }\n    /**\n   * Align sprite using its velocity.\n   * @param {import('./sprite.js').Sprite} sprite\n   * @param {number} deltaSeconds - elapsed time\n   * @returns {AbstractModifier}\n   */ doUpdate(sprite, deltaSecondsIgnored) {\n        sprite.position.rotation = sprite.velocity.getScreenDirection() - this.#baseDirection;\n        return this;\n    }\n}\nclass $6b87500f649b76df$export$81812ec41a0682d1 extends (0, $f8eb19ad944a8e76$export$f929ba4d0b405b8b) {\n    /** @type {import('../geometry.js').Point} */ #topLeft;\n    /** @type {import('../geometry.js').Point} */ #bottomRight;\n    /**\n   * @param {import('../geometry.js').Rectangle} bounds\n   * @param {AbstractModifier} decoratedModifier\n   */ constructor(bounds, decoratedModifier){\n        super(decoratedModifier);\n        this.#topLeft = bounds.getTopLeft();\n        this.#bottomRight = bounds.getBottomRight();\n    }\n    /**\n   * Move sprite using its velocity and bouncing on screen.\n   * @param {import('./sprite.js').Sprite} sprite\n   * @param {number} deltaSeconds - elapsed time\n   * @returns {AbstractModifier}\n   */ doUpdate(sprite, deltaSeconds) {\n        const position = sprite.position;\n        const velocity = sprite.velocity;\n        position.x += velocity.x * deltaSeconds;\n        position.y += velocity.y * deltaSeconds;\n        position.rotation += velocity.rotation * deltaSeconds;\n        if (position.x < this.#topLeft.x || position.x > this.#bottomRight.x) velocity.x *= -1;\n        if (position.y < this.#topLeft.y || position.y > this.#bottomRight.y) velocity.y *= -1;\n        sprite.position = position;\n        sprite.velocity = velocity;\n        return this;\n    }\n}\nclass $6b87500f649b76df$export$254d9747e34ddc90 extends (0, $f8eb19ad944a8e76$export$f929ba4d0b405b8b) {\n    /** @type {import('./sprite.js').Sprite} */ #prey;\n    /** @type {number} */ #maxSeparation;\n    /** @type {number} */ #variableSpeed;\n    /**\n   *\n   * @param {Object} options\n   * @param {import('./sprite.js').Sprite} options.prey\n   * @param {number} options.maxSeparation - allowable distance between hunter and prey\n   * @param {number} options.speed - pixels / second\n   * @param {boolean} options.linear - if linear the speed is constant, otherwise it speeds up if further away\n   * @param {AbstractModifier} decoratedModifier\n   */ constructor(options, decoratedModifier){\n        super(decoratedModifier);\n        this.#prey = options.prey;\n        this.#maxSeparation = options.maxSeparation;\n        this.#variableSpeed = new $6b87500f649b76df$var$VariableSpeed(options.speed, options.linear);\n    }\n    /**\n   * Update the sprite to track the hunter.\n   * @param {import('./sprite.js').Sprite} hunter\n   * @param {*} deltaSeconds\n   * @returns {AbstractModifier}\n   */ doUpdate(hunter, deltaSeconds) {\n        const preyPos = this.#prey.position;\n        const hunterPos = hunter.position;\n        const approachSpeed = this.#variableSpeed.getSpeedBetweenPoints(preyPos, hunterPos);\n        if (!hunterPos.withinSquare(preyPos, this.#maxSeparation)) {\n            const angle = hunterPos.getCartesianAngleTo(preyPos);\n            hunter.velocity.x = approachSpeed * Math.cos(angle);\n            hunter.velocity.y = approachSpeed * Math.sin(angle);\n            const dx = hunter.velocity.x * deltaSeconds;\n            const dy = hunter.velocity.y * deltaSeconds;\n            hunter.position.x += this.getMinMove(dx, preyPos.x, hunterPos.x);\n            hunter.position.y += this.getMinMove(dy, preyPos.y, hunterPos.y);\n        }\n        return this;\n    }\n    /**\n   * Get the minimum movement to go from targetValue to currentValue.\n   * @param {number} maxMovement - maximum movement. NB. In this context, max ignores sign.\n   * @param {number} targetValue\n   * @param {number} currentValue\n   */ getMinMove(maxMovement, targetValue, currentValue) {\n        const requiredMovement = targetValue - currentValue;\n        if (Math.sign(maxMovement) < 0) return Math.max(maxMovement, requiredMovement);\n        else return Math.min(maxMovement, requiredMovement);\n    }\n}\nclass $6b87500f649b76df$export$c14f425b03c3e261 extends (0, $f8eb19ad944a8e76$export$f929ba4d0b405b8b) {\n    /** @type {Point[]} */ #path;\n    /** @type {number} */ #index;\n    /** @type {import('../geometry.js').Point} */ #targetPoint;\n    /** @type {VariableSpeed} */ #variableSpeed;\n    /**\n   *\n   * @param {Object} options\n   * @param {Point[]} options.path\n   * @param {number} options.speed - pixels / second\n   * @param {boolean} options.linear - if linear the speed is constant, otherwise it speeds up if further away\n   * @param {AbstractModifier} decoratedModifier\n   */ constructor(options, decoratedModifier){\n        super(decoratedModifier);\n        this.#path = options.path;\n        this.#index = 0;\n        this.#targetPoint = options.path[0];\n        this.#variableSpeed = new $6b87500f649b76df$var$VariableSpeed(options.speed, options.linear);\n    }\n    /**\n   * Update the sprite to track the hunter.\n   * @param {import('./sprite.js').Sprite} subject\n   * @param {*} deltaSeconds\n   * @returns {AbstractModifier}\n   */ doUpdate(subject, deltaSeconds) {\n        const subjectPos = subject.position;\n        const approachSpeed = this.#variableSpeed.getSpeedBetweenPoints(this.#targetPoint, subjectPos);\n        const angle = subjectPos.getCartesianAngleTo(this.#targetPoint);\n        subject.velocity.x = approachSpeed * Math.cos(angle);\n        subject.velocity.y = approachSpeed * Math.sin(angle);\n        const dx = subject.velocity.x * deltaSeconds;\n        const dy = subject.velocity.y * deltaSeconds;\n        subjectPos.x += this.getMinMove(dx, this.#targetPoint.x, subjectPos.x);\n        subjectPos.y += this.getMinMove(dy, this.#targetPoint.y, subjectPos.y);\n        if (subjectPos.isCoincident(this.#targetPoint)) {\n            if (++this.#index >= this.#path.length) {\n                subject.velocity.x = 0;\n                subject.velocity.y = 0;\n                return this.decoratedModifier; // Remove itself from chain\n            } else this.#targetPoint = this.#path[this.#index];\n        }\n        return this;\n    }\n    /**\n   * Get the minimum movement to go from targetValue to currentValue.\n   * @param {number} maxMovement - maximum movement. NB. In this context, max ignores sign.\n   * @param {number} targetValue\n   * @param {number} currentValue\n   */ getMinMove(maxMovement, targetValue, currentValue) {\n        const requiredMovement = targetValue - currentValue;\n        if (Math.sign(maxMovement) < 0) return Math.max(maxMovement, requiredMovement);\n        else return Math.min(maxMovement, requiredMovement);\n    }\n}\n\n\nfunction $ae446a5a8f069dac$export$d72d5d6e5d0daa8f(renderer, options) {\n    const sprite = new (0, $5b82fcc8e5572650$export$3075603db8e6204c)({\n        renderer: renderer\n    });\n    sprite.position = options.position;\n    sprite.velocity = options.velocity;\n    (0, $f8633d94d0c88c58$export$2e2bcd8739ae039).addPassiveSprite(sprite);\n    new (0, $cf74d2982f28ade3$export$709baf898a5dceda)(options.lifetimeSecs, new (0, $6b87500f649b76df$export$9600794ac1f85e81)()).applyAsTransientToSprite(sprite, 20).then(()=>(0, $f8633d94d0c88c58$export$2e2bcd8739ae039).removePassiveSprite(sprite));\n}\nfunction $ae446a5a8f069dac$export$5b6dfdcdc3ef8663(image, options) {\n    $ae446a5a8f069dac$export$d72d5d6e5d0daa8f(new (0, $f1adbd10d5a753d6$export$c1626e6e036a584)((0, $a1820c190f7a8b2e$export$2e2bcd8739ae039).getContext2D(), image), options);\n}\nfunction $ae446a5a8f069dac$export$dc0b517182376fca(text, options) {\n    $ae446a5a8f069dac$export$d72d5d6e5d0daa8f(new (0, $f1adbd10d5a753d6$export$544ff2c168abc0f9)((0, $a1820c190f7a8b2e$export$2e2bcd8739ae039).getContext2D(), text), options);\n}\n\n\n\n\n\n/**\n * @file Resolve events that depend on chance or dix roles.\n *\n * @module dnd/chance\n *\n * License {@link https://opensource.org/license/mit/|MIT}\n *\n * Copyright 2024 Steve Butler (henspace.com).\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the “Software”), to deal in\n * the Software without restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n * Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */ /**\n * @file Simulation of dice\n *\n * @module utils/dice\n *\n * License {@link https://opensource.org/license/mit/|MIT}\n *\n * Copyright 2024 Steve Butler (henspace.com).\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the “Software”), to deal in\n * the Software without restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n * Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */ \nfunction $d9f2d68cf2746c78$export$b9d1fef74bbc4c0c(sides = 6) {\n    return $05d58a132d6b5767$export$75c671db1a13cf5f(1, sides);\n}\n\n\nfunction $06641744454462bb$export$a05dd61416876500(actor, opponent) {\n    return (0, $d9f2d68cf2746c78$export$b9d1fef74bbc4c0c)(20) > 10; // @ToDo\n}\nfunction $06641744454462bb$export$6c66c80d2a1b1770(actor, opponent) {\n    return (0, $d9f2d68cf2746c78$export$b9d1fef74bbc4c0c)(20) > 10; // @ToDo\n}\nfunction $06641744454462bb$export$ce79f130bc6bf5cd(actor, opponent) {\n    return (0, $d9f2d68cf2746c78$export$b9d1fef74bbc4c0c)(6); // @ToDo\n}\n\n\n/**\n * @file Dialogs for use in the game\n *\n * @module utils/dom/ui\n *\n * License {@link https://opensource.org/license/mit/|MIT}\n *\n * Copyright 2024 Steve Butler (henspace.com).\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the “Software”), to deal in\n * the Software without restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n * Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */ \n/**\n * @file Classes for managing menues.\n *\n * @module utils/dom/menu\n *\n * License {@link https://opensource.org/license/mit/|MIT}\n *\n * Copyright 2024 Steve Butler (henspace.com).\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the “Software”), to deal in\n * the Software without restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n * Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */ \n/**\n * @file Game constants\n *\n * @module utils/game/gameConstants\n *\n * License {@link https://opensource.org/license/mit/|MIT}\n *\n * Copyright 2024 Steve Butler (henspace.com).\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the “Software”), to deal in\n * the Software without restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n * Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */ const $e49c2c8387e6101d$var$GameConstants = {\n    TILE_SIZE: 48\n};\nvar $e49c2c8387e6101d$export$2e2bcd8739ae039 = $e49c2c8387e6101d$var$GameConstants;\n\n\n/**\n * @file Settings\n *\n * @module utils/settings\n *\n * License {@link https://opensource.org/license/mit/|MIT}\n *\n * Copyright 2024 Steve Butler (henspace.com).\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the “Software”), to deal in\n * the Software without restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n * Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */ \n/** Encapsulate storage. */ class $3474d2bbacd35b48$var$PersistentData {\n    /**\n   * Cached objects so they don't need to be reparsed.\n   * @type {Map<string, *>}\n   */ #cache;\n    /**\n   * Create persistent data object.\n   */ constructor(){\n        this.#cache = new Map();\n    }\n    /**\n   * Set value\n   * @param {string} key\n   * @param {*} value\n   */ set(key, value) {\n        this.#cache.set(key, value);\n        try {\n            localStorage.setItem(key, JSON.stringify(value));\n        } catch (error) {\n            (0, $2d5b4e7cb639ebe1$export$2e2bcd8739ae039).error(`Cannot save setting. ${error.message}`);\n        }\n    }\n    /**\n   * Get a value. Uses the cache if already set.\n   * @param {string} key\n   * @param {*} defaultValue\n   * @returns {*} stored data or default value if not present or unparsable.\n   */ get(key, defaultValue) {\n        if (this.#cache.has(key)) return this.#cache.get(key);\n        let value = defaultValue;\n        try {\n            const encodedValue = localStorage.getItem(key);\n            if (encodedValue !== null) value = JSON.parse(encodedValue);\n        } catch (error) {\n            (0, $2d5b4e7cb639ebe1$export$2e2bcd8739ae039).error(`Cannot parse value from local storage. ${error.message}`);\n        }\n        this.#cache.set(key, value);\n        return value;\n    }\n}\nconst $3474d2bbacd35b48$var$PERSISTENT_DATA = new $3474d2bbacd35b48$var$PersistentData();\nvar $3474d2bbacd35b48$export$2e2bcd8739ae039 = $3474d2bbacd35b48$var$PERSISTENT_DATA;\n\n\nclass $de9cad813c8cf1e8$export$cfc7921d29ef7b80 {\n    /** @type {string} */ #label;\n    /** @type {import(\"../sprites/imageManager.js\").SpriteBitmap} */ #bitmap;\n    /** @type {function():Promise} */ #action;\n    /**\n   * Create the action button.\n   * @param {Object} options\n   * @param {*} options.label\n   * @param {*} options.image\n   * @param {*} options.action\n   */ constructor(options){\n        this.#label = options.label;\n        this.#bitmap = options.image;\n        this.#action = options.action;\n    }\n    /** Get HTML element for the button.\n   * @returns {Element}\n   */ getElement() {\n        const container = document.createElement(\"button\");\n        const canvas = document.createElement(\"canvas\");\n        canvas.setAttribute(\"width\", this.#bitmap.width);\n        canvas.setAttribute(\"height\", this.#bitmap.height);\n        const context = canvas.getContext(\"2d\");\n        context.drawImage(this.#bitmap.image, 0, 0);\n        container.appendChild(canvas);\n        const labelEl = document.createElement(\"span\");\n        labelEl.innerText = this.#label;\n        container.appendChild(labelEl);\n        return container;\n    }\n    /**\n   * executes the menu item's promise.\n   * @returns {Promise}\n   */ execute() {\n        if (this.#action) return this.#action();\n        else return Promise.resolve();\n    }\n}\nclass $de9cad813c8cf1e8$export$3e9165d18613c27e {\n    /**\n   * @type {Element}\n   */ element;\n    /** @type {string} */ id;\n    /** Create the button */ constructor(options){\n        this.element = document.createElement(\"button\");\n        this.element.appendChild(document.createTextNode(options.label));\n    }\n}\nclass $de9cad813c8cf1e8$export$240946c56899011 {\n    /** @type {import(\"../sprites/imageManager.js\").SpriteBitmap} */ #bitmapUp;\n    /** @type {import(\"../sprites/imageManager.js\").SpriteBitmap} */ #bitmapDown;\n    /** @type {Element} */ #element;\n    /** @type {CanvasRenderingContext2D} */ #context;\n    /** @type {boolean} */ #selected;\n    /** @type {function: Promise} */ action;\n    /** @type {string} */ id;\n    /**\n   * Create a toggle control button. Buttons are sized the same size as a tile\n   * as defined in GameConstants.TILE_SIZE.\n   * @param {Object} options\n   * @param {string} label\n   * @param {string} id - used in responses.\n   * @param {string} options.imageNameUp - the image will be taken from the IMAGE_MANAGER using index 0.\n   * @param {string} [options.imageNameDown] - the image will be taken from the IMAGE_MANAGER using index 0.\n   * If not provided, the up button is used.\n   * @param {boolean} options.internalLabel - set whether the label in inside or outside the button.\n   * @param {function: Promise} options.action - action executed on release. If this is provided, the button is\n   * treated as a momentary button. Otherwise it is treated as a latched button or toggle button.\n   */ constructor(options){\n        if (!options.imageNameDown && !options.action) throw Error(\"Attempt to create a button with no down image and no action. One or other must be supplied.\");\n        this.id = options.id;\n        const button = document.createElement(\"button\");\n        if (options.imageNameUp) {\n            this.#bitmapUp = (0, $5840285c35321464$export$2e2bcd8739ae039).getSpriteBitmap(0, options.imageNameUp);\n            this.#bitmapDown = options.imageNameDown ? (0, $5840285c35321464$export$2e2bcd8739ae039).getSpriteBitmap(0, options.imageNameDown) : this.#bitmapUp;\n            const canvas = document.createElement(\"canvas\");\n            canvas.setAttribute(\"width\", (0, $e49c2c8387e6101d$export$2e2bcd8739ae039).TILE_SIZE);\n            canvas.setAttribute(\"height\", (0, $e49c2c8387e6101d$export$2e2bcd8739ae039).TILE_SIZE);\n            this.#context = canvas.getContext(\"2d\");\n            button.appendChild(canvas);\n        }\n        if (options.internalLabel || !this.#context) {\n            this.#element = button;\n            button.classList.add(\"icon-button-internal\");\n            const span = this.#element.appendChild(document.createElement(\"span\"));\n            span.appendChild(document.createTextNode(options.label));\n        } else {\n            button.classList.add(\"icon-button-external\");\n            this.#element = document.createElement(\"label\");\n            this.#element.appendChild(document.createTextNode(options.label));\n            this.#element.appendChild(button);\n        }\n        this.#element.addEventListener(\"mousedown\", ()=>this.#pressed());\n        this.#element.addEventListener(\"touchstart\", ()=>this.#pressed(), {\n            passive: true\n        });\n        this.#element.addEventListener(\"mouseup\", async ()=>this.#released());\n        this.#element.addEventListener(\"touchend\", async ()=>this.#released());\n        this.#element.addEventListener(\"touchcancel\", ()=>this.#cancelled());\n        this.selected = false;\n        this.action = options.action;\n    }\n    /**\n   * Get the underlying HTML element;\n   */ get element() {\n        return this.#element;\n    }\n    /**\n   * Get current selection state\n   * @returns {boolean}\n   */ get selected() {\n        return this.#selected;\n    }\n    /**\n   * Set current selection state.\n   * @param {boolean} value\n   */ set selected(value) {\n        this.#selected = value;\n        this.#showSelectionImage();\n    }\n    /** Handle pressed state. */ #pressed() {\n        this.#drawImage(this.#bitmapDown);\n    }\n    /** Handle released state. */ #released() {\n        this.#selected = !this.#selected;\n        this.#showSelectionImage();\n    }\n    /** Handle cancelled event. */ #cancelled() {\n        this.#showSelectionImage();\n    }\n    /** show image appropriate to the current selection state. */ #showSelectionImage() {\n        this.#drawImage(this.#selected ? this.#bitmapDown : this.#bitmapUp);\n    }\n    /**\n   * Draw image onto the button\n   * @param {import('../sprites/imageManager.js').SpriteBitmap} spriteBitmap\n   */ #drawImage(spriteBitmap) {\n        this.#context.clearRect(0, 0, (0, $e49c2c8387e6101d$export$2e2bcd8739ae039).TILE_SIZE, (0, $e49c2c8387e6101d$export$2e2bcd8739ae039).TILE_SIZE);\n        this.#context.drawImage(spriteBitmap.image, 0.5 * ((0, $e49c2c8387e6101d$export$2e2bcd8739ae039).TILE_SIZE - spriteBitmap.width), 0.5 * ((0, $e49c2c8387e6101d$export$2e2bcd8739ae039).TILE_SIZE - spriteBitmap.height));\n    }\n}\nclass $de9cad813c8cf1e8$export$92481776a9137611 extends $de9cad813c8cf1e8$export$240946c56899011 {\n    /**\n   * Create checkbox control.\n   * @param {string} label\n   */ constructor(label){\n        super({\n            label: label,\n            imageNameUp: \"ui-checkbox00.png\",\n            imageNameDown: \"ui-checkbox01.png\",\n            internalLabel: false,\n            action: null\n        });\n    }\n}\nconst $de9cad813c8cf1e8$export$82f9c7d14b0424b = {\n    TEXT_BUTTON: \"text button\",\n    CHECKBOX: \"checkbox\"\n};\nfunction $de9cad813c8cf1e8$export$b42320c90cd2b176(definition) {\n    let control;\n    switch(definition.controlType){\n        case $de9cad813c8cf1e8$export$82f9c7d14b0424b.TEXT_BUTTON:\n            control = new $de9cad813c8cf1e8$export$3e9165d18613c27e(definition);\n            break;\n        case $de9cad813c8cf1e8$export$82f9c7d14b0424b.CHECKBOX:\n            control = new $de9cad813c8cf1e8$export$92481776a9137611(definition.label);\n            if (definition.persistent) {\n                control.selected = (0, $3474d2bbacd35b48$export$2e2bcd8739ae039).get(definition.key, definition.defValue);\n                control.action = ()=>{\n                    (0, $3474d2bbacd35b48$export$2e2bcd8739ae039).set(definition.key, control.selected);\n                    return definition.action ? definition.action : Promise.resolve();\n                };\n            } else {\n                control.selected = definition.defValue;\n                control.action = definition.action;\n            }\n            break;\n    }\n    return control;\n}\n\n\nconst $81dd6b24526c5347$export$c2043c90d147849d = {\n    OK: 0,\n    CANCEL: 1,\n    YES: 2,\n    NO: 3\n};\n/**\n * Get a message element. This returns a div which contains the message text.\n * @param {string} message\n */ function $81dd6b24526c5347$var$createMessageElement(message) {\n    const element = document.createElement(\"div\");\n    element.innerText = message;\n    element.classList.add([\n        \"scrollable\"\n    ]);\n    return element;\n}\n/** Create a message that is removed on any click. This sits above everything\n * as a self contained popup.\n * @param {string} message\n */ function $81dd6b24526c5347$var$showMessage(message) {\n    const popup = document.createElement(\"div\");\n    popup.appendChild(document.createTextNode(message));\n    popup.className = \"popup\";\n    popup.style.opacity = 1;\n    document.body.appendChild(popup);\n    popup.addEventListener(\"click\", ()=>popup.remove());\n}\n/** Create an okDialog.\n * @param {string} message\n * @param {string} [okButtonLabel = 'OK']\n * @param {string} className\n * @returns {Promise} fulfils to DialogResponse.OK\n */ function $81dd6b24526c5347$var$showOkDialog(message, okButtonLabel = \"OK\", className) {\n    const container = document.createElement(\"div\");\n    container.appendChild($81dd6b24526c5347$var$createMessageElement(message));\n    const buttonEl = document.createElement(\"button\");\n    buttonEl.appendChild(document.createTextNode(okButtonLabel));\n    container.appendChild(buttonEl);\n    return (0, $a1820c190f7a8b2e$export$2e2bcd8739ae039).displayOnGlass(container, [\n        {\n            element: buttonEl,\n            response: $81dd6b24526c5347$export$c2043c90d147849d.OK,\n            closer: true\n        }\n    ], className);\n}\n/** Create a controls dialog.\n * @param {string} message\n * @param {IconButtonControl[]} ActionButton\n * @param {string} className\n * @returns {Promise} fulfils to DialogResponse.OK\n */ function $81dd6b24526c5347$var$showControlsDialog(message, actionButtons, className) {\n    const container = document.createElement(\"div\");\n    container.appendChild($81dd6b24526c5347$var$createMessageElement(message));\n    const closers = [];\n    actionButtons?.forEach((button)=>{\n        container.appendChild(button.element);\n        if (button.action) button.element.addEventListener(\"click\", ()=>button.action());\n        else closers.push({\n            element: button.element,\n            response: button.id\n        });\n    });\n    if (closers.length === 0) {\n        const okButton = new (0, $de9cad813c8cf1e8$export$3e9165d18613c27e)({\n            label: \"OK\"\n        });\n        container.appendChild(okButton.element);\n        closers.push(okButton);\n    }\n    return (0, $a1820c190f7a8b2e$export$2e2bcd8739ae039).displayOnGlass(container, closers, className);\n}\n/**\n * The UI singleton.\n */ const $81dd6b24526c5347$var$UI = {\n    showMessage: $81dd6b24526c5347$var$showMessage,\n    showOkDialog: $81dd6b24526c5347$var$showOkDialog,\n    showControlsDialog: $81dd6b24526c5347$var$showControlsDialog\n};\nvar $81dd6b24526c5347$export$2e2bcd8739ae039 = $81dd6b24526c5347$var$UI;\n\n\n\nclass $31cf9b99c7a79e42$export$1426bb19337c692e {\n    /** Actor owning the interaction @type {Actor} */ actor;\n    /**\n   *\n   * @param {Actor} actor\n   */ constructor(actor){\n        this.actor = actor;\n    }\n    /**\n   * @param {import('../utils/game/actors.js').Actor} reactor\n   * @returns {Promise}\n   */ enact(reactorUnused) {\n        return Promise.resolve();\n    }\n    /**\n   * @param {import('../utils/game/actors.js').Actor} enactor\n   * @returns {Promise}\n   */ react(enactorUnused) {\n        return Promise.resolve();\n    }\n    /**\n   * Test to see if actor can run away from an interaction. If the actor cannot,\n   * a failed message appears. The actual move is not undertaken\n   * @param {Actor} escaper\n   * @returns {boolean} true if can run\n   */ allowEscape(escaperUnused) {\n        return true;\n    }\n}\nclass $31cf9b99c7a79e42$export$56070c78bbcda189 extends $31cf9b99c7a79e42$export$1426bb19337c692e {\n    /**\n   * Construct the interaction.\n   * @param {Actor} actor - parent actor.\n   */ constructor(actor){\n        super(actor);\n    }\n    /**\n   * @param {import('../utils/game/actors.js').Actor} reactor\n   * @returns {Promise}\n   */ enact(reactor) {\n        return this.#resolveAttackerDefender(this.actor, reactor);\n    }\n    /**\n   * @param {import('../utils/game/actors.js').Actor} enactor\n   * @returns {Promise}\n   */ react(enactor) {\n        return this.#resolveAttackerDefender(enactor, this.actor);\n    }\n    /**\n   * Test to see if actor can run away from an interaction. If the actor cannot,\n   * a failed message appears. The actual move is not undertaken\n   * @param {Actor} escaper\n   * @returns {boolean} true if can run\n   */ allowEscape(escaper) {\n        if (!$06641744454462bb$export$6c66c80d2a1b1770(escaper, this.actor)) {\n            (0, $ae446a5a8f069dac$export$dc0b517182376fca)(\"Failed to run.\", {\n                lifetimeSecs: 2,\n                position: escaper.position,\n                velocity: new (0, $90999bd6b14cd690$export$4a23b3811cef465)(0, -100, 0)\n            });\n            return false;\n        }\n        return true;\n    }\n    /**\n   * Display an attack\n   * @param {Actor} attacker\n   * @param {Actor} defender\n   * @returns {Promise}\n   */ #displayAttack(attacker, defender) {\n        const startPoint = (0, $90999bd6b14cd690$export$baf26146a414f24a).copy(attacker.position);\n        const attackPoint = new (0, $90999bd6b14cd690$export$baf26146a414f24a)(attacker.position.x + 0.2 * (defender.position.x - attacker.position.x), attacker.position.y + 0.2 * (defender.position.y - attacker.position.y));\n        const pathModifier = new (0, $6b87500f649b76df$export$c14f425b03c3e261)({\n            path: [\n                attackPoint,\n                startPoint\n            ],\n            speed: 100\n        });\n        return pathModifier.applyAsTransientToSprite(attacker.sprite);\n    }\n    /**\n   * Undertake attack. Note that the defender is not removed if its hit points\n   * hit zero.\n   * @param {Actor} attacker\n   * @param {Actor} defender\n   * @returns {Promise} fulfils to the defender's HP.\n   */ #undertakeAttack(attacker, defender) {\n        return new Promise((resolve)=>{\n            if (!$06641744454462bb$export$a05dd61416876500(attacker, defender)) {\n                (0, $ae446a5a8f069dac$export$dc0b517182376fca)(\"Missed\", {\n                    lifetimeSecs: 2,\n                    position: defender.position,\n                    velocity: new (0, $90999bd6b14cd690$export$4a23b3811cef465)(0, -100, 0)\n                });\n                resolve();\n                return;\n            } else (0, $ae446a5a8f069dac$export$5b6dfdcdc3ef8663)((0, $5840285c35321464$export$2e2bcd8739ae039).getSpriteBitmap(0, (0, $3474d2bbacd35b48$export$2e2bcd8739ae039).get(\"BLOOD_ON\") ? \"blood-splat.png\" : \"pow.png\"), {\n                lifetimeSecs: 1,\n                position: defender.position,\n                velocity: new (0, $90999bd6b14cd690$export$4a23b3811cef465)(0, 0, 0)\n            });\n            let defenderHP = defender.traits.get(\"HP\");\n            const damage = $06641744454462bb$export$ce79f130bc6bf5cd(attacker, defender);\n            defenderHP = Math.max(0, defenderHP - damage);\n            defender.traits.set(\"HP\", defenderHP);\n            if (defenderHP === 0) {\n                (0, $2d5b4e7cb639ebe1$export$2e2bcd8739ae039).info(\"Killed actor.\");\n                defender.interaction = new $31cf9b99c7a79e42$export$efe6ccfe4b6f8278();\n                defender.alive = false;\n            } else (0, $ae446a5a8f069dac$export$dc0b517182376fca)(`-${damage} HP`, {\n                lifetimeSecs: 2,\n                position: defender.position,\n                velocity: new (0, $90999bd6b14cd690$export$4a23b3811cef465)(0, -200, 0)\n            });\n            resolve(defenderHP);\n        });\n    }\n    /**\n   * Resolve a fight.\n   * @param {Actor} attacker\n   * @param {Actor} defender\n   * @returns {Promise}\n   */ #resolveAttackerDefender(attacker, defender) {\n        return this.#displayAttack(attacker, defender).then(()=>this.#undertakeAttack(attacker, defender));\n    }\n}\nclass $31cf9b99c7a79e42$export$efe6ccfe4b6f8278 extends $31cf9b99c7a79e42$export$1426bb19337c692e {\n    /**\n   * Construct the interaction.\n   * @param {Actor} actor - parent actor.\n   */ constructor(actor){\n        super(actor);\n    }\n    /**\n   * Respond to a search\n   * @param {import('../utils/game/actors.js').Actor} reactor\n   * @returns {Promise}\n   */ react(reactorUnused) {\n        return (0, $81dd6b24526c5347$export$2e2bcd8739ae039).showOkDialog(\"A bit macabre, but you're trying to search a corpse. I haven't written the code yet.\");\n    }\n}\nclass $31cf9b99c7a79e42$export$366210f9de782ba6 extends $31cf9b99c7a79e42$export$1426bb19337c692e {\n    /**\n   * Construct the interaction.\n   * @param {Actor} actor - parent actor.\n   */ constructor(actor){\n        super(actor);\n    }\n    /**\n   * Trades are passive. Only the hero can initiate a trade.\n   * @param {import('../utils/game/actors.js').Actor} enactor\n   * @returns {Promise}\n   */ react(enactorUnused) {\n        return (0, $81dd6b24526c5347$export$2e2bcd8739ae039).showOkDialog(\"Time to trade. I haven't written the code yet.\");\n    }\n}\n\n\n/**\n * @file Interactions with the ui\n *\n * @module utils/ui/interactions\n *\n * License {@link https://opensource.org/license/mit/|MIT}\n *\n * Copyright 2024 Steve Butler\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the “Software”), to deal in\n * the Software without restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n * Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */ /**\n * @typedef {function} UiClickCallback\n * @param {Object} target - initial object that triggered the handler\n * @param {import('../geometry.js').Point} point - the position that was clicked in world coordinates\n */ /**\n * BAse for all UiClickHandlers\n */ class $0244e696098defc3$export$a82f6454288e7804 {\n    /** @type {UiClickCallback} */ #onClick;\n    /** @type {UiClickCallback} */ #onContextClick;\n    /** @type {UiClickCallback} */ #onPointerDown;\n    /** @type {UiClickCallback} */ #onPointerUp;\n    /** Set click handler. Note that this does not add a listener for the event.\n   * @param {UiClickCallback} handler\n   */ setOnClick(handler) {\n        this.#onClick = handler;\n    }\n    /** Set on context Click handler.\n   * @param {UiClickCallback} handler\n   */ setOnContextClick(handler) {\n        this.#onContextClick = handler;\n    }\n    /** Set pointer down handler. Note that this does not add a listener for the event.\n   * @param {UiClickCallback} handler\n   */ setOnPointerDown(handler) {\n        this.#onPointerDown = handler;\n    }\n    /** Set pointer up handler. Note that this does not add a listener for the event.\n   * @param {UiClickCallback} handler\n   */ setOnPointerUp(handler) {\n        this.#onPointerUp = handler;\n    }\n    /**\n   * Handle click\n   * @param {import('../geometry.js').Point} point\n   */ actionClick(point) {\n        this.#onClick?.(this, point);\n    }\n    /**\n   * Handle context click\n   * @param {import('../geometry.js').Point} point\n   */ actionContextClick(point) {\n        this.#onContextClick?.(this, point);\n    }\n    /**\n   * Handle pointer down\n   * @param {import('../geometry.js').Point} point\n   */ actionPointerDown(point) {\n        this.#onPointerDown?.(this, point);\n    }\n    /**\n   * Handle pointer up\n   * @param {import('../geometry.js').Point} point\n   */ actionPointerUp(point) {\n        this.#onPointerUp?.(this, point);\n    }\n}\n\n\nclass $803bed4de7d49df0$export$f73d3eb6fd876d80 extends (0, $0244e696098defc3$export$a82f6454288e7804) {\n    /** @type {number} */ maxTilesPerMove;\n    /** @type {import('../sprites/sprite.js').Sprite} */ sprite;\n    /** @type {ActorTraits} */ traits;\n    /** @type {AbstractInteraction} */ interaction;\n    /** @type {boolean} */ alive;\n    /**\n   * Create the actor.\n   * @param {import('../sprites/sprite.js').Sprite} sprite\n   */ constructor(sprite){\n        super();\n        this.interaction = new (0, $31cf9b99c7a79e42$export$1426bb19337c692e)();\n        this.sprite = sprite;\n        this.sprite.obstacle = true;\n        this.maxTilesPerMove = 4;\n        this.alive = true;\n    }\n    /** Set the underlying sprite visibility.\n   * @param {boolean}\n   */ set visible(value) {\n        this.sprite.visible = value;\n    }\n    /** Get the underlying sprite visibility.\n   * @returns {boolean}\n   */ get visible() {\n        return this.sprite.visible;\n    }\n    /**\n   * Get obstacle property. This comes from the underlying sprite.\n   * @param {boolean} value\n   */ get obstacle() {\n        return this.sprite.obstacle;\n    }\n    /**\n   * Set as obstacle. This sets the underlying sprite's property.\n   * @param {boolean} value\n   */ set obstacle(value) {\n        this.sprite.obstacle = value;\n    }\n    /**\n   * Get the actor's position.\n   * @returns {import('../geometry.js').Position}\n   */ get position() {\n        return this.sprite.position;\n    }\n    /**\n   * Set the actor's position.\n   * @param {import('../geometry.js').Position} value\n   */ set position(value) {\n        this.sprite.position = value;\n    }\n    /**\n   * Get the current motion.\n   * @returns {Velocity}\n   */ get velocity() {\n        return this.sprite.velocity;\n    }\n    /**\n   * Set the current Velocity. Invalid values become 0.\n   * @param {Velocity} nextVelocity\n   */ set velocity(nextVelocity) {\n        this.sprite.velocity = nextVelocity;\n    }\n    /**\n   * Is this a wandering actor.\n   * @returns {boolean}\n   */ isWandering() {\n        return this?.traits.get(\"MOVE\") === \"wander\";\n    }\n    /**\n   * Is the actor passable?\n   * @param {Actor} otherActor\n   * @returns {boolean}\n   */ isPassableByActor(otherActorUnused) {\n        return !this.alive || !this.obstacle;\n    }\n    /**\n   * Can it share a tile location with another actor?\n   * @param {Actor} otherActor\n   * @returns {boolean}\n   */ canShareLocationWithActor(otherActorUnused) {\n        return !this.obstacle;\n    }\n    /**\n   * Call update on the underlying sprite\n   * @param {number} deltaSeconds\n   */ update(deltaSeconds) {\n        this.sprite.update(deltaSeconds);\n    }\n    /**\n   * Handle the click but change the point to the sprite's position\n   */ actionClick(pointUnused) {\n        super.actionClick(this.sprite.position);\n    }\n    /**\n   * Handle the click but change the point to the sprite's position\n   */ actionContextClick(pointUnused) {\n        super.actionContextClick(this.sprite.position);\n    }\n    /**\n   * Handle the pointer up event but change the point to the sprite's position\n   */ actionPointerUp(pointUnused) {\n        super.actionPointerUp(this.sprite.position);\n    }\n    /**\n   * Handle the pointer down event but change the point to the sprite's position\n   */ actionPointerDown(pointUnused) {\n        super.actionPointerDown(this.sprite.position);\n    }\n}\n\n\n\n\n\n\n/**\n * @file Navigation button set for the HUD\n *\n * @module utils/game/hudNavSet\n *\n * License {@link https://opensource.org/license/mit/|MIT}\n *\n * Copyright 2024 Steve Butler (henspace.com).\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the “Software”), to deal in\n * the Software without restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n * Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */ \n\n\n/**\n * @file Camera dolly class. This provides a mechanism to allow the canvas to\n * track a specified Sprite.\n *\n * @module utils/game/camera\n *\n * License {@link https://opensource.org/license/mit/|MIT}\n *\n * Copyright 2024 Steve Butler\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the “Software”), to deal in\n * the Software without restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n * Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */ \n\n\n\nconst $1e8586c4726fc461$export$17735bdb93cbf279 = {\n    OFF: 0,\n    HERO: 1,\n    VELOCITY: 2\n};\nclass $1e8586c4726fc461$export$39ca3bda943df04d {\n    /** @type {import('../sprites/sprite.js').Sprite} */ #sprite;\n    /** @type @type {import('../sprites/modifiers.js').AbstractModifier} */ #heroTracker;\n    /** @type @type {import('../sprites/modifiers.js').AbstractModifier} */ #velocityTracker;\n    /** @type {number} */ #trackingMethod;\n    /**\n   * Create a camera dolly. This is a sprite that is designed to track a target.\n   * @param {Sprite} target\n   * @param {number} speed\n   * @param {number} proportionSeparated - max space between camera and target as proportion of minimum screen dimension.\n   */ constructor(target, speed, proportionSeparated = 0){\n        const canvasDims = (0, $a1820c190f7a8b2e$export$2e2bcd8739ae039).getCanvasDimensions();\n        const separation = proportionSeparated * Math.min(canvasDims.width, canvasDims.height);\n        this.#sprite = new (0, $5b82fcc8e5572650$export$3075603db8e6204c)();\n        this.#heroTracker = new (0, $6b87500f649b76df$export$254d9747e34ddc90)({\n            prey: target,\n            speed: speed,\n            maxSeparation: separation\n        });\n        this.#velocityTracker = new (0, $6b87500f649b76df$export$9600794ac1f85e81)();\n        this.#heroTracker.applyAsContinuousToSprite(this.#sprite);\n    }\n    /**\n   * Update the camera position.\n   * @param {number} deltaSeconds - elapsed time since last update.\n   */ update(deltaSeconds) {\n        if (this.#trackingMethod !== $1e8586c4726fc461$export$17735bdb93cbf279.OFF) {\n            this.#sprite.update(deltaSeconds);\n            (0, $a1820c190f7a8b2e$export$2e2bcd8739ae039).centreCanvasOn(this.#sprite.position);\n        }\n    }\n    /**\n   * Set the velocity to dX, dY. This will automatically set tracking to velocity.\n   * @param {number} dX\n   * @param {number} dY\n   */ setVelocity(vX, vY) {\n        this.setTrackingMethod($1e8586c4726fc461$export$17735bdb93cbf279.VELOCITY);\n        this.#sprite.velocity.x = vX;\n        this.#sprite.velocity.y = vY;\n    }\n    /**\n   * Pan the camera by dx, dy. Automatic tracking is switched off.\n   * @param {number} dx\n   * @param {number} dy\n   */ panBy(dx, dy) {\n        this.#sprite.position.x += dx;\n        this.#sprite.position.y += dy;\n        (0, $a1820c190f7a8b2e$export$2e2bcd8739ae039).centreCanvasOn(this.#sprite.position);\n    }\n    /**\n   * Set the trackingMethod\n   * @param {number} method - CameraTracking enum\n   */ setTrackingMethod(method) {\n        if (method === this.#trackingMethod) return;\n        this.#trackingMethod = method;\n        switch(method){\n            case $1e8586c4726fc461$export$17735bdb93cbf279.HERO:\n                this.#heroTracker.applyAsContinuousToSprite(this.#sprite);\n                break;\n            case $1e8586c4726fc461$export$17735bdb93cbf279.VELOCITY:\n                this.#velocityTracker.applyAsContinuousToSprite(this.#sprite);\n                break;\n            case $1e8586c4726fc461$export$17735bdb93cbf279.OFF:\n                break;\n            default:\n                (0, $2d5b4e7cb639ebe1$export$2e2bcd8739ae039).error(`Attempt to set invalid tracking method of ${method} ignored.`);\n        }\n    }\n}\n\n\n/**\n * @type {number}\n */ const $54c6f0aaef62f1b7$var$SCROLL_TILES_PER_SEC = 3;\nconst $54c6f0aaef62f1b7$export$763f95e026c05695 = {\n    TR: 0,\n    BR: 1,\n    BL: 2,\n    TL: 3\n};\nclass $54c6f0aaef62f1b7$export$5e8c6d32f039cdeb {\n    /** @type {CameraDolly} */ #cameraDolly;\n    /** @type {Actor} */ #trackingButton;\n    /** @type {import('../sprites/imageManager.js').SpriteBitmap} */ #trackingButtonImage;\n    /**\n   *\n   * @param {CameraDolly} cameraDolly\n   * @param {number} gridSize\n   * @param {NavigationLocation} location\n   */ constructor(cameraDolly, gridSize, location){\n        this.#cameraDolly = cameraDolly;\n        this.#createButtonSet(gridSize, location);\n    }\n    /**\n   * Create the buttons.\n   * @param {number} gridSize\n   * @param {NavigationLocation} location\n   */ #createButtonSet(gridSize, location) {\n        let centreX;\n        let centreY;\n        switch(location){\n            case $54c6f0aaef62f1b7$export$763f95e026c05695.TL:\n                centreX = 2 * gridSize;\n                centreY = 2 * gridSize;\n                break;\n            case $54c6f0aaef62f1b7$export$763f95e026c05695.TR:\n                centreX = -2 * gridSize;\n                centreY = 2 * gridSize;\n                break;\n            case $54c6f0aaef62f1b7$export$763f95e026c05695.BR:\n                centreX = -2 * gridSize;\n                centreY = -2 * gridSize;\n                break;\n            case $54c6f0aaef62f1b7$export$763f95e026c05695.BL:\n                centreX = 2 * gridSize;\n                centreY = -2 * gridSize;\n                break;\n        }\n        this.#createCentreButton(centreX, centreY);\n        this.#createArrowButtons(centreX, centreY, gridSize);\n    }\n    /** Create the centre button.\n   * @param {number} centreX\n   * @param {number} centreY\n   */ #createCentreButton(centreX, centreY) {\n        this.#trackingButtonImage = new (0, $7f41e47310ae6543$export$9d5734c725768403)(0, {\n            prefix: \"hud-auto-centre\",\n            startIndex: 0,\n            padding: 2,\n            suffix: \".png\"\n        }, {\n            framePeriodMs: 1,\n            loopMethod: (0, $af167e06ffca879a$export$cab6ba75b045ad71).STOP\n        });\n        this.#trackingButton = (0, $3ce6241a7c9b35c7$export$2e2bcd8739ae039).addButton(this.#trackingButtonImage, ()=>{\n            this.setTrackingState(true);\n        }, ()=>{\n            this.setTrackingState(false);\n        });\n        this.#trackingButton.position.x = centreX;\n        this.#trackingButton.position.y = centreY;\n        this.#trackingButton.actionClick(null); // defaulting to selected.\n    }\n    /**\n   * Set the tracking state.\n   * @param {boolean} on\n   */ setTrackingState(on) {\n        if (on) {\n            this.#trackingButtonImage.setCurrentIndex(1);\n            this.#cameraDolly.setTrackingMethod((0, $1e8586c4726fc461$export$17735bdb93cbf279).HERO);\n        } else {\n            this.#trackingButtonImage.setCurrentIndex(0);\n            this.#cameraDolly.setTrackingMethod((0, $1e8586c4726fc461$export$17735bdb93cbf279).OFF);\n        }\n    }\n    /**\n   * Create the arrow buttons\n   * @param {number} centreX\n   * @param {number} centreY\n   * @param {number} gridSize\n   */ #createArrowButtons(centreX, centreY, gridSize) {\n        const scrollSpeed = $54c6f0aaef62f1b7$var$SCROLL_TILES_PER_SEC * gridSize;\n        this.#createMomentaryButton(\"hud-arrow-up\", centreX, centreY - gridSize, ()=>{\n            this.setTrackingState(false);\n            this.#cameraDolly.setVelocity(0, -scrollSpeed);\n        }, ()=>this.#cameraDolly.setTrackingMethod((0, $1e8586c4726fc461$export$17735bdb93cbf279).OFF));\n        this.#createMomentaryButton(\"hud-arrow-right\", centreX + gridSize, centreY, ()=>{\n            this.setTrackingState(false);\n            this.#cameraDolly.setVelocity(scrollSpeed, 0);\n        }, ()=>this.#cameraDolly.setTrackingMethod((0, $1e8586c4726fc461$export$17735bdb93cbf279).OFF));\n        this.#createMomentaryButton(\"hud-arrow-down\", centreX, centreY + gridSize, ()=>{\n            this.setTrackingState(false);\n            this.#cameraDolly.setVelocity(0, scrollSpeed);\n        }, ()=>this.#cameraDolly.setTrackingMethod((0, $1e8586c4726fc461$export$17735bdb93cbf279).OFF));\n        this.#createMomentaryButton(\"hud-arrow-left\", centreX - gridSize, centreY, ()=>{\n            this.setTrackingState(false);\n            this.#cameraDolly.setVelocity(-scrollSpeed, 0);\n        }, ()=>this.#cameraDolly.setTrackingMethod((0, $1e8586c4726fc461$export$17735bdb93cbf279).OFF));\n    }\n    /**\n   * Create a momentary button.\n   * @param {string} imageNamePrefix - images are assumed to be imageNamePrefixNNN.png\n   * @param {number} x - x position\n   * @param {number} y - y position\n   * @param {function} callbackDown\n   * @param {function} callbackUp\n   */ #createMomentaryButton(imageNamePrefix, x, y, callbackDown, callbackUp) {\n        const animatedImage = new (0, $7f41e47310ae6543$export$9d5734c725768403)(0, {\n            prefix: imageNamePrefix,\n            startIndex: 0,\n            padding: 2,\n            suffix: \".png\"\n        }, {\n            framePeriodMs: 1,\n            loopMethod: (0, $af167e06ffca879a$export$cab6ba75b045ad71).STOP\n        });\n        let button = (0, $3ce6241a7c9b35c7$export$2e2bcd8739ae039).addMomentaryButton(animatedImage, callbackDown, callbackUp);\n        button.position.x = x;\n        button.position.y = y;\n        animatedImage.setCurrentIndex(0);\n    }\n}\n\n\n/**\n * @type {Map<string, Sprite>}\n */ const $3ce6241a7c9b35c7$var$actors = new Map();\n/** @type {boolean} */ let $3ce6241a7c9b35c7$var$visible = false;\n/**\n * Add a button to the hud. If two callbacks are provided, an AnimatedImage\n * is required with two frames.\n * @param {SpriteBitmap | AnimatedImage} image\n * @param {import('../ui/interactions.js').UiClickCallback} callbackOn\n * @param {import('../ui/interactions.js').UiClickCallback} callbackOff\n * @returns {Actor}\n */ function $3ce6241a7c9b35c7$var$addButton(image, callbackOn, callbackOff) {\n    const actor = new (0, $803bed4de7d49df0$export$f73d3eb6fd876d80)(new (0, $5b82fcc8e5572650$export$3075603db8e6204c)({\n        renderer: new (0, $f1adbd10d5a753d6$export$c1626e6e036a584)((0, $a1820c190f7a8b2e$export$2e2bcd8739ae039).getContext2D(), image)\n    }));\n    $3ce6241a7c9b35c7$var$actors.set(actor, actor);\n    actor.setOnClick(()=>{\n        if (!callbackOff) callbackOn();\n        else if (image.getCurrentIndex() === 0) {\n            image.setCurrentIndex(1);\n            callbackOn();\n        } else {\n            image.setCurrentIndex(0);\n            callbackOff();\n        }\n    });\n    image.setCurrentIndex(0);\n    return actor;\n}\n/**\n * Add a momentary button to the hud. If two callbacks are provided, an AnimatedImage\n * is required with two frames.\n * @param {SpriteBitmap | AnimatedImage} image\n * @param {import('../ui/interactions.js').UiClickCallback} callbackOn\n * @param {import('../ui/interactions.js').UiClickCallback} callbackOff\n * @returns {Actor}\n */ function $3ce6241a7c9b35c7$var$addMomentaryButton(image, callbackOn, callbackOff) {\n    const actor = new (0, $803bed4de7d49df0$export$f73d3eb6fd876d80)(new (0, $5b82fcc8e5572650$export$3075603db8e6204c)({\n        renderer: new (0, $f1adbd10d5a753d6$export$c1626e6e036a584)((0, $a1820c190f7a8b2e$export$2e2bcd8739ae039).getContext2D(), image)\n    }));\n    $3ce6241a7c9b35c7$var$actors.set(actor, actor);\n    actor.setOnPointerDown(()=>{\n        image.setCurrentIndex(1);\n        callbackOn?.();\n    });\n    actor.setOnPointerUp(()=>{\n        image.setCurrentIndex(0);\n        callbackOff?.();\n    });\n    return actor;\n}\n/**\n * Remove sprite from the hud.\n * @param {import('../sprites/sprite.js').Sprite}\n */ function $3ce6241a7c9b35c7$var$removeButton(target) {\n    $3ce6241a7c9b35c7$var$actors.delete(target);\n}\n/**\n * Clear the HUD\n */ function $3ce6241a7c9b35c7$var$clear() {\n    $3ce6241a7c9b35c7$var$actors.clear();\n}\n/**\n * Update the world. This calls the update methods of the tile map and all sprites/\n * @param {number} deltaSeconds\n */ function $3ce6241a7c9b35c7$var$update(deltaSeconds) {\n    if (!$3ce6241a7c9b35c7$var$visible) return;\n    $3ce6241a7c9b35c7$var$actors.forEach((sprite)=>{\n        const uiPos = (0, $90999bd6b14cd690$export$13807d9ee5a34a42).copy(sprite.position);\n        sprite.position = (0, $a1820c190f7a8b2e$export$2e2bcd8739ae039).glassPositionToWorld(sprite.position);\n        sprite.update(deltaSeconds);\n        sprite.position = uiPos;\n    });\n}\n/** Debug function. */ function $3ce6241a7c9b35c7$var$borderHUD() {\n    const rect = (0, $a1820c190f7a8b2e$export$2e2bcd8739ae039).getVisibleCanvasRect();\n    const context = (0, $a1820c190f7a8b2e$export$2e2bcd8739ae039).getContext2D();\n    context.strokeStyle = \"green\";\n    context.lineWidth = 4;\n    (0, $a1820c190f7a8b2e$export$2e2bcd8739ae039).getContext2D().strokeRect(rect.x + 5, rect.y + 5, rect.width - 10, rect.height - 10);\n}\n/**\n * Check if the click is in a actor.\n * @param {import('./screen.js').MappedPositions} positions - canvas and world positions\n * @param {Actor} actor\n */ function $3ce6241a7c9b35c7$var$isHittingActor(positions, actor) {\n    const actorCanvasPos = (0, $a1820c190f7a8b2e$export$2e2bcd8739ae039).glassPositionToWorld(actor.position);\n    let boundingBox = actor.sprite.getBoundingBox();\n    const canvasBox = new (0, $90999bd6b14cd690$export$4617fb02663045ef)(actorCanvasPos.x - boundingBox.width / 2, actorCanvasPos.y - boundingBox.height / 2, boundingBox.width, boundingBox.height);\n    return canvasBox.containsCoordinate(positions.world.x, positions.world.y);\n}\n/**\n * Resolve a ui click\n * @param {import('./screen.js').MappedPositions} positions - click in canvas and world coordinates.\n * @returns {boolean} true if resolved.\n */ function $3ce6241a7c9b35c7$var$resolveClick(positions) {\n    if (!$3ce6241a7c9b35c7$var$visible) return false;\n    for (const [keyUnused, actor] of $3ce6241a7c9b35c7$var$actors)if ($3ce6241a7c9b35c7$var$isHittingActor(positions, actor)) {\n        actor.actionClick(actor, positions.canvas);\n        return true;\n    }\n    return false;\n}\n/**\n * Resolve a pointer down\n * @param {import('./screen.js').MappedPositions} positions - click in canvas and world coordinates.\n * @returns {boolean} true if resolved.\n */ function $3ce6241a7c9b35c7$var$resolvePointerDown(positions) {\n    if (!$3ce6241a7c9b35c7$var$visible) return false;\n    if (!$3ce6241a7c9b35c7$var$visible) return false;\n    for (const [keyUnused, actor] of $3ce6241a7c9b35c7$var$actors)if ($3ce6241a7c9b35c7$var$isHittingActor(positions, actor)) {\n        actor.actionPointerDown(actor, positions.canvas);\n        return true;\n    }\n    return false;\n}\n/**\n * Resolve a ui pointer up event\n * @param {import('./screen.js').MappedPositions} positions - click in canvas and world coordinates.\n * @returns {boolean} true if resolved.\n */ function $3ce6241a7c9b35c7$var$resolvePointerUp(positions) {\n    if (!$3ce6241a7c9b35c7$var$visible) return false;\n    if (!$3ce6241a7c9b35c7$var$visible) return false;\n    for (const [keyUnused, actor] of $3ce6241a7c9b35c7$var$actors)if ($3ce6241a7c9b35c7$var$isHittingActor(positions, actor)) {\n        actor.actionPointerUp(actor, positions.canvas);\n        return true;\n    }\n    return false;\n}\n/**\n * Resolve a context menu event.\n * @param {import('./screen.js').MappedPositions} positions - click in canvas and world coordinates.\n * @returns {boolean} true if resolved.\n */ function $3ce6241a7c9b35c7$var$resolveContextMenu(positionsUnused) {\n    return false;\n}\n/**\n * Resolve a cancel event. For the HUD, a cancel event is treated the same as a pointer\n * up event.\n * @param {import('./screen.js').MappedPositions} positions - click in canvas and world coordinates.\n * @returns {boolean} true if resolved.\n */ function $3ce6241a7c9b35c7$var$resolvePointerCancel(positions) {\n    return $3ce6241a7c9b35c7$var$resolvePointerUp(positions);\n}\n/**\n * Set the visibility of the HUD.\n * @param {boolean} visibility - true to show.\n */ function $3ce6241a7c9b35c7$var$setVisible(visibility) {\n    $3ce6241a7c9b35c7$var$visible = visibility;\n}\n/**\n * HUD object\n */ const $3ce6241a7c9b35c7$var$HUD = {\n    addButton: $3ce6241a7c9b35c7$var$addButton,\n    addMomentaryButton: $3ce6241a7c9b35c7$var$addMomentaryButton,\n    clear: $3ce6241a7c9b35c7$var$clear,\n    removeButton: $3ce6241a7c9b35c7$var$removeButton,\n    update: $3ce6241a7c9b35c7$var$update,\n    resolvePointerCancel: $3ce6241a7c9b35c7$var$resolvePointerCancel,\n    resolveClick: $3ce6241a7c9b35c7$var$resolveClick,\n    resolveContextMenu: $3ce6241a7c9b35c7$var$resolveContextMenu,\n    resolvePointerDown: $3ce6241a7c9b35c7$var$resolvePointerDown,\n    resolvePointerUp: $3ce6241a7c9b35c7$var$resolvePointerUp,\n    setVisible: $3ce6241a7c9b35c7$var$setVisible\n};\nvar $3ce6241a7c9b35c7$export$2e2bcd8739ae039 = $3ce6241a7c9b35c7$var$HUD;\n\n\n/**\n * @file Support for emojis, especially as sprites.\n *\n * @module utils/text/emojis\n *\n * License {@link https://opensource.org/license/mit/|MIT}\n *\n * Copyright 2024 Steve Butler\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the “Software”), to deal in\n * the Software without restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n * Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */ \nconst $2b83232840d61fcb$export$57244dfe9a4da758 = {\n    GRINNING: \"\\uD83D\\uDE00\",\n    SANTA: \"\\uD83C\\uDF85\",\n    SHAKING: \"\\uD83E\\uDEE8\"\n};\nfunction $2b83232840d61fcb$export$9d534e3026b35ff(context) {\n    let fallbackIndex = 0;\n    for(const key in $2b83232840d61fcb$export$57244dfe9a4da758){\n        const metrics = context.measureText($2b83232840d61fcb$export$57244dfe9a4da758[key]);\n        const height = metrics.fontBoundingBoxAscent + metrics.fontBoundingBoxDescent;\n        const centreToBaseLine = 0.5 * height - metrics.fontBoundingBoxDescent;\n        context.fillText($2b83232840d61fcb$export$57244dfe9a4da758[key], -0.5 * metrics.width, centreToBaseLine);\n        const alphaAtCentre = context.getImageData(0, 0, 1, 1).data[3];\n        if (alphaAtCentre <= 0) {\n            (0, $2d5b4e7cb639ebe1$export$2e2bcd8739ae039).debug(`Emoji ${key} not supported.`);\n            $2b83232840d61fcb$export$57244dfe9a4da758[key] = `[${fallbackIndex++}]`;\n        }\n        context.clearRect(0, 0, metrics.width, height);\n    }\n}\n\n\n\n\n\n/**\n * @file Load assets. This module is placed in the assets folder to simplify\n * dynamic imports using Parcel's import.meta.url property.\n *\n * @module utils\\assetLoaders.js\n *\n * License {@link https://opensource.org/license/mit/|MIT}\n *\n * Copyright 2024 Steve Butler (henspace.com).\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the “Software”), to deal in\n * the Software without restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n * Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */ \nvar $f579d6f2ff49d46e$exports = {};\n$f579d6f2ff49d46e$exports = new URL(\"dungeon_script.e102251e.txt\", import.meta.url).toString();\n\n\nconst $5114bd1ce9a158d7$export$350d529e1ecdc71 = {\n    DUNGEON_SCRIPT: new URL($f579d6f2ff49d46e$exports)\n};\nfunction $5114bd1ce9a158d7$export$fa2f0f26e19d189b(url) {\n    return fetch(url).then((response)=>response.text()).then((text)=>text).catch((reason)=>{\n        (0, $2d5b4e7cb639ebe1$export$2e2bcd8739ae039).error(`Error fetching ${url}: ${reason}`);\n        return null;\n    });\n}\nfunction $5114bd1ce9a158d7$export$942e11b08cbf2222(url) {\n    return fetch(url).then((response)=>response.text()).then((text)=>text).catch((reason)=>{\n        (0, $2d5b4e7cb639ebe1$export$2e2bcd8739ae039).error(`Error fetching ${url}: ${reason}`);\n        return null;\n    });\n}\n\n\n/**\n * @file File that actually processes the script.\n * The script parser acts as a state machine as it parses the script.\n * Dungeons work as levels.\n *\n * @module scriptReaders/scriptParser\n *\n * License {@link https://opensource.org/license/mit/|MIT}\n *\n * Copyright 2024 Steve Butler\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the “Software”), to deal in\n * the Software without restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n * Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */ /**\n * @file Map of names to actor factories in the dungeon.\n *\n * @module scriptReaders/actorMap\n *\n * License {@link https://opensource.org/license/mit/|MIT}\n *\n * Copyright 2024 Steve Butler (henspace.com).\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the “Software”), to deal in\n * the Software without restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n * Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */ \n\n\n\n\n\n\n\n/**\n * @file Colours used in the game.\n *\n * @module constants/colours\n *\n * License {@link https://opensource.org/license/mit/|MIT}\n *\n * Copyright 2024 Steve Butler (henspace.com).\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the “Software”), to deal in\n * the Software without restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n * Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */ /**\n * Colours used in the game.\n * @enum {string}\n */ const $96351d318e97c3e1$export$1f4d983d2ef95b6b = {\n    HP_GAUGE: \"rgba(255, 0, 0, 0.2)\",\n    MORALE_GAUGE: \"rgba(0, 0, 255, 0.2)\"\n};\n\n\n\n/**\n * @file Standard animation keys.\n *\n * @module scriptReaders\\actorAnimationKeys\n *\n * License {@link https://opensource.org/license/mit/|MIT}\n *\n * Copyright 2024 Steve Butler (henspace.com).\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the “Software”), to deal in\n * the Software without restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n * Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */ \n\n/**\n * Standard animation defintions for an actor.\n * It is assumed that animation images are formed from a root nam\n */ const $cfb969eb0974fd3f$var$AnimationDefns = {\n    DEAD: {\n        keyName: \"DEAD\",\n        suffix: \"dead\",\n        options: {\n            framePeriodMs: 100,\n            loopMethod: (0, $af167e06ffca879a$export$cab6ba75b045ad71).STOP\n        }\n    },\n    IDLE: {\n        keyName: \"IDLE\",\n        suffix: \"idle\",\n        options: {\n            framePeriodMs: 300,\n            loopMethod: (0, $af167e06ffca879a$export$cab6ba75b045ad71).REVERSE\n        }\n    },\n    WALK_NORTH: {\n        keyName: \"WALK_N\",\n        suffix: \"walk-n\",\n        options: {\n            framePeriodMs: 100,\n            loopMethod: (0, $af167e06ffca879a$export$cab6ba75b045ad71).REVERSE\n        }\n    },\n    WALK_EAST: {\n        keyName: \"WALK_E\",\n        suffix: \"walk-e\",\n        options: {\n            framePeriodMs: 100,\n            loopMethod: (0, $af167e06ffca879a$export$cab6ba75b045ad71).REVERSE\n        }\n    },\n    WALK_SOUTH: {\n        keyName: \"WALK_S\",\n        suffix: \"walk-s\",\n        options: {\n            framePeriodMs: 100,\n            loopMethod: (0, $af167e06ffca879a$export$cab6ba75b045ad71).REVERSE\n        }\n    },\n    WALK_WEST: {\n        keyName: \"WALK_W\",\n        suffix: \"walk-w\",\n        options: {\n            framePeriodMs: 100,\n            loopMethod: (0, $af167e06ffca879a$export$cab6ba75b045ad71).REVERSE\n        }\n    }\n};\n/**\n * Form the frame name for an image\n * @param {string} key - the key name for the animation.\n * @param {string} imageName\n */ function $cfb969eb0974fd3f$var$formFrameNameRoot(key, imageName) {\n    const suffix = $cfb969eb0974fd3f$var$AnimationDefns[key]?.suffix;\n    if (!suffix) throw new Error(`Attempt made to use invalid standard animation key of '${key}'`);\n    return `${imageName}-${suffix}`;\n}\n/** Object to access standard animations. */ const $cfb969eb0974fd3f$var$StdAnimations = {\n    definitions: $cfb969eb0974fd3f$var$AnimationDefns,\n    formFrameNameRoot: $cfb969eb0974fd3f$var$formFrameNameRoot\n};\nvar $cfb969eb0974fd3f$export$2e2bcd8739ae039 = $cfb969eb0974fd3f$var$StdAnimations;\n\n\n\n\n/**\n * Specialist traits renderer\n */ class $ea4c834f4d2249c2$var$ActorTraitsRenderer extends $f1adbd10d5a753d6$export$f1bb2dcf27836475 {\n    /** @type {Actor} */ actor;\n    /**\n   * The number of gauges is determined by the maximum length of the fill styles and\n   * stroke styles\n   * @param {CanvasRenderingContext2D} context\n   * @param {Object} options\n   * @param {number} options.tileSize\n   * @param {string[]} options.fillStyles\n   * @param {string[]} options.strokeStyles\n   */ constructor(context, options){\n        super(context, options);\n    }\n    /**\n   * Render the sprite.\n   * @param {import('../geometry.js').Position} position - this will have been adjusted to the screen.\n   */ render(position) {\n        if (this.actor && this.actor.traits) {\n            const hp = this.actor.traits.get(\"HP\");\n            const hpMax = this.actor.traits.get(\"HP_MAX\");\n            this.setLevel(0, hp / hpMax);\n            this.setLevel(1, 1);\n        }\n        super.render(position);\n    }\n}\n/**\n * Animation that automatically adjusts the animation based on the actor's velocity\n * and alive property.\n */ class $ea4c834f4d2249c2$var$ActorStateAnimator extends $7f41e47310ae6543$export$7ded0ab8d4b1a54f {\n    /** @type {Actor} */ #actor;\n    /** Number from eight point compass. */ #compassDir;\n    /** @type{boolean}*/ #aliveStatus;\n    /**\n   * Create the keyed animated image\n   * @param {string} key\n   * @param {AnimatedImage} animatedImage\n   */ constructor(key, animatedImage){\n        super(key, animatedImage);\n        this.#compassDir = $05d58a132d6b5767$export$624e7ee3f0468367.NONE;\n    }\n    /**\n   * Set the actor who's velocity will be monitored.\n   * @param {Actor} actor\n   */ setActor(actor) {\n        this.#actor = actor;\n        this.#aliveStatus = this.#actor.alive;\n    }\n    /** override */ getCurrentFrame() {\n        const dir = this.#getCurrentDirection();\n        if (dir !== this.#compassDir || this.#aliveStatus != this.#actor?.alive) {\n            this.#compassDir = dir;\n            this.#aliveStatus = this.#actor?.alive;\n            this.#setAnimationForState();\n        }\n        return super.getCurrentFrame();\n    }\n    #getCurrentDirection() {\n        if (!this.#actor || this.#actor.velocity.isZero(0.1)) return $05d58a132d6b5767$export$624e7ee3f0468367.NONE;\n        else {\n            const dir = this.#actor.velocity.getScreenDirection();\n            return $05d58a132d6b5767$export$cf2deb104c051cb7(dir);\n        }\n    }\n    /**\n   * Set the appropriate animation based on the the current compass direction.\n   * Only four points supported.\n   */ #setAnimationForState() {\n        if (!this.#actor.alive) return this.setCurrentKey((0, $cfb969eb0974fd3f$export$2e2bcd8739ae039).definitions.DEAD.keyName);\n        switch(this.#compassDir){\n            case $05d58a132d6b5767$export$624e7ee3f0468367.NONE:\n                this.setCurrentKey((0, $cfb969eb0974fd3f$export$2e2bcd8739ae039).definitions.IDLE.keyName);\n                break;\n            case $05d58a132d6b5767$export$624e7ee3f0468367.E:\n                this.setCurrentKey((0, $cfb969eb0974fd3f$export$2e2bcd8739ae039).definitions.WALK_EAST.keyName);\n                break;\n            case $05d58a132d6b5767$export$624e7ee3f0468367.N:\n            case $05d58a132d6b5767$export$624e7ee3f0468367.NW:\n            case $05d58a132d6b5767$export$624e7ee3f0468367.NE:\n                this.setCurrentKey((0, $cfb969eb0974fd3f$export$2e2bcd8739ae039).definitions.WALK_NORTH.keyName);\n                break;\n            case $05d58a132d6b5767$export$624e7ee3f0468367.W:\n                this.setCurrentKey((0, $cfb969eb0974fd3f$export$2e2bcd8739ae039).definitions.WALK_WEST.keyName);\n                break;\n            default:\n                this.setCurrentKey((0, $cfb969eb0974fd3f$export$2e2bcd8739ae039).definitions.WALK_SOUTH.keyName);\n                break;\n        }\n    }\n}\n/**\n * Create set of standard animations.\n * @returns {animation.KeyedAnimatedImages}\n */ function $ea4c834f4d2249c2$var$createStandardKeyFrames(imageName) {\n    const keyedAnimations = new $ea4c834f4d2249c2$var$ActorStateAnimator(\"still\", new $7f41e47310ae6543$export$9d5734c725768403(0, `${imageName}.png`));\n    for(const key in (0, $cfb969eb0974fd3f$export$2e2bcd8739ae039).definitions){\n        const anim = (0, $cfb969eb0974fd3f$export$2e2bcd8739ae039).definitions[key];\n        keyedAnimations.addAnimatedImage((0, $cfb969eb0974fd3f$export$2e2bcd8739ae039).definitions[key].keyName, new $7f41e47310ae6543$export$9d5734c725768403(0, {\n            prefix: (0, $cfb969eb0974fd3f$export$2e2bcd8739ae039).formFrameNameRoot(key, imageName),\n            suffix: \".png\",\n            startIndex: 0,\n            padding: 2\n        }, anim.options));\n    }\n    keyedAnimations.setCurrentKey((0, $cfb969eb0974fd3f$export$2e2bcd8739ae039).definitions.IDLE.keyName);\n    return keyedAnimations;\n}\n/**\n * Create the actor.\n * @param {string} imageName - no extension\n * @returns {Actor}\n */ function $ea4c834f4d2249c2$var$createAnimatedActor(imageName) {\n    const keyedAnimation = $ea4c834f4d2249c2$var$createStandardKeyFrames(imageName);\n    const imageRenderer = new $f1adbd10d5a753d6$export$c1626e6e036a584((0, $a1820c190f7a8b2e$export$2e2bcd8739ae039).getContext2D(), keyedAnimation);\n    const traitsRenderer = new $ea4c834f4d2249c2$var$ActorTraitsRenderer((0, $a1820c190f7a8b2e$export$2e2bcd8739ae039).getContext2D(), {\n        tileSize: (0, $f8633d94d0c88c58$export$2e2bcd8739ae039).getTileMap().getGridSize() - 2,\n        fillStyles: [\n            (0, $96351d318e97c3e1$export$1f4d983d2ef95b6b).HP_GAUGE,\n            (0, $96351d318e97c3e1$export$1f4d983d2ef95b6b).MORALE_GAUGE\n        ],\n        strokeStyles: []\n    });\n    const actor = new (0, $803bed4de7d49df0$export$f73d3eb6fd876d80)(new (0, $5b82fcc8e5572650$export$3075603db8e6204c)({\n        renderer: [\n            traitsRenderer,\n            imageRenderer\n        ]\n    }));\n    keyedAnimation.setActor(actor);\n    traitsRenderer.actor = actor;\n    actor.position = new (0, $90999bd6b14cd690$export$13807d9ee5a34a42)((0, $e49c2c8387e6101d$export$2e2bcd8739ae039).TILE_SIZE, (0, $e49c2c8387e6101d$export$2e2bcd8739ae039).TILE_SIZE, 0);\n    actor.velocity = {\n        x: 0,\n        y: 0,\n        rotation: 0.1\n    };\n    return actor;\n}\n/**\n * @param {string} imageName - without extension\n * @returns {Actor}\n */ function $ea4c834f4d2249c2$var$createUnanimatedActor(imageName) {\n    const actor = new (0, $803bed4de7d49df0$export$f73d3eb6fd876d80)(new (0, $5b82fcc8e5572650$export$3075603db8e6204c)({\n        renderer: new $f1adbd10d5a753d6$export$c1626e6e036a584((0, $a1820c190f7a8b2e$export$2e2bcd8739ae039).getContext2D(), (0, $5840285c35321464$export$2e2bcd8739ae039).getSpriteBitmap(0, `${imageName}.png`))\n    }));\n    return actor;\n}\n/**\n * Create animated fighter\n * @param {string} imageName - without extension\n * @returns {Actor}\n */ function $ea4c834f4d2249c2$var$createAnimatedFighter(imageName) {\n    const actor = $ea4c834f4d2249c2$var$createAnimatedActor(imageName);\n    actor.interaction = new (0, $31cf9b99c7a79e42$export$56070c78bbcda189)(actor);\n    return actor;\n}\n/**\n * Create animated trader\n * @param {string} imageName - without extension\n * @returns {Actor}\n */ function $ea4c834f4d2249c2$var$createAnimatedTrader(imageName) {\n    const actor = $ea4c834f4d2249c2$var$createAnimatedActor(imageName);\n    actor.interaction = new (0, $31cf9b99c7a79e42$export$366210f9de782ba6)(actor);\n    return actor;\n}\n/**\n * @typedef {Object} ActorMapCreator\n * @property {function():Actor} create\n */ /**\n * Map of actor creators which are used to create actors based on a key.\n * @type {Map<string, ActorMapCreator>}\n */ const $ea4c834f4d2249c2$var$ACTOR_MAP = new Map([\n    [\n        \"HERO\",\n        {\n            create: ()=>$ea4c834f4d2249c2$var$createAnimatedActor(\"hero\")\n        }\n    ],\n    [\n        \"MONSTER\",\n        {\n            create: ()=>$ea4c834f4d2249c2$var$createAnimatedFighter(\"orc\")\n        }\n    ],\n    [\n        \"TRADER\",\n        {\n            create: ()=>$ea4c834f4d2249c2$var$createAnimatedTrader(\"trader\")\n        }\n    ]\n]);\nvar $ea4c834f4d2249c2$export$2e2bcd8739ae039 = $ea4c834f4d2249c2$var$ACTOR_MAP;\n\n\n/**\n * @file Convert a screen definition into a scene.\n *\n * @module scriptReaders/sceneDefinitionParser\n *\n * License {@link https://opensource.org/license/mit/|MIT}\n *\n * Copyright 2024 Steve Butler (henspace.com).\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the “Software”), to deal in\n * the Software without restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n * Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */ /**\n * @file Tile map support\n *\n * @module utils/tileMaps/tilePlan\n *\n * License {@link https://opensource.org/license/mit/|MIT}\n *\n * Copyright 2024 Steve Butler\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the “Software”), to deal in\n * the Software without restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n * Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */ \n/**\n * @file Various utilities for handling arrays\n *\n * @module utils/arrays/arrayManip\n *\n * License {@link https://opensource.org/license/mit/|MIT}\n *\n * Copyright 2024 Steve Butler\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the “Software”), to deal in\n * the Software without restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n * Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */ /**\n * @typedef Surrounds\n * @property {*} centre - value at centre\n * @property {*} tl - value to top left\n * @property {*} above - value above\n * @property {*} tr - value to top right\n * @property {*} right - value to right\n * @property {*} br - value to bottom right\n * @property {*} below - value below\n * @property {*} bl - value to bottom\n * @property {*} left - value to left\n */ /**\n * Get the surround values from a 2D matrix\n * @param {Array.<Array.<*>>} matrix\n * @param {number} rowIndex\n * @param {number} columnIndex\n * @returns {Surrounds}\n */ function $27af28d7e434b74b$export$7c548b14ef6e7713(matrix, rowIndex, columnIndex) {\n    return {\n        centre: matrix[rowIndex]?.[columnIndex],\n        tl: matrix[rowIndex - 1]?.[columnIndex - 1],\n        above: matrix[rowIndex - 1]?.[columnIndex],\n        tr: matrix[rowIndex - 1]?.[columnIndex + 1],\n        right: matrix[rowIndex]?.[columnIndex + 1],\n        br: matrix[rowIndex + 1]?.[columnIndex + 1],\n        below: matrix[rowIndex + 1]?.[columnIndex],\n        bl: matrix[rowIndex + 1]?.[columnIndex - 1],\n        left: matrix[rowIndex]?.[columnIndex - 1]\n    };\n}\nfunction $27af28d7e434b74b$export$f3448602f079b6d0(source) {\n    let currentIndex = source.length;\n    let randomIndex;\n    // While there remain elements to shuffle.\n    while(currentIndex > 0){\n        randomIndex = Math.floor(Math.random() * currentIndex);\n        currentIndex--;\n        // swap\n        [source[currentIndex], source[randomIndex]] = [\n            source[randomIndex],\n            source[currentIndex]\n        ];\n    }\n    return source;\n}\n\n\n\n/** Symbol used to mark void tiles @type {string} */ const $aa430e5af6097d50$var$VOID_SYMBOL = \" \";\nconst $aa430e5af6097d50$export$1b3c5bcd5a8a9304 = {\n    WALL: [\n        \"#\",\n        \"*\",\n        \"|\"\n    ],\n    DOOR_IN: [\n        \"-\"\n    ],\n    DOOR_OUT: [\n        \"=\"\n    ],\n    GROUND: [\n        \".\",\n        \":\",\n        \",\",\n        \";\"\n    ],\n    VOID: [\n        \" \"\n    ]\n};\n/**\n * Clarifiers appended to ambiguous design symbols.\n */ const $aa430e5af6097d50$var$Clarifiers = {\n    TOP_LEFT: \"-TL\",\n    TOP_LEFT_INTERNAL: \"-TLI\",\n    TOP: \"-T\",\n    TOP_RIGHT: \"-TR\",\n    TOP_RIGHT_INTERNAL: \"-TRI\",\n    RIGHT: \"-R\",\n    BOTTOM_RIGHT: \"-BR\",\n    BOTTOM_RIGHT_INTERNAL: \"-BRI\",\n    BOTTOM: \"-B\",\n    BOTTOM_LEFT: \"-BL\",\n    BOTTOM_LEFT_INTERNAL: \"-BLI\",\n    LEFT: \"-L\",\n    TOP_TEE: \"-TTEE\",\n    RIGHT_TEE: \"-RTEE\",\n    BOTTOM_TEE: \"-BTEE\",\n    LEFT_TEE: \"-LTEE\",\n    INTERNAL_CROSS: \"-XI\",\n    INTERNAL_VERTICAL: \"-VI\",\n    INTERNAL_HORIZONTAL: \"-HI\"\n};\n/**\n * Shadow clarifiers. Added to some symbols to mark it as being below a top wall.\n */ const $aa430e5af6097d50$var$ShadowClarifier = {\n    BELOW_WALL: \"-SBW\",\n    BELOW_END_WALL: \"-SBE\"\n};\nclass $aa430e5af6097d50$export$5bb21ea01a6aaf38 {\n    /** @type {Array.<Array.<*>>} */ matrix;\n    /** @type {Point} */ entryPointByDoor;\n    /** @type {Point} */ exitPointByDoor;\n    constructor(){\n        this.entryPointByDoor = new (0, $90999bd6b14cd690$export$baf26146a414f24a)(0, 0);\n        this.exitPointByDoor = new (0, $90999bd6b14cd690$export$baf26146a414f24a)(0, 0);\n    }\n    /**\n   * Converts a tile map design into a tile map plan\n   * @param {TileMapDesign} design\n   * @param {SymbolMap}} symbolMap\n   * @returns {TilePlan}\n   */ static generateTileMapPlan(design, symbolMap) {\n        const tilePlan = new $aa430e5af6097d50$export$5bb21ea01a6aaf38();\n        let matrix = tilePlan.convertToMatrix(design);\n        matrix = tilePlan.clarifyMatrix(matrix);\n        tilePlan.createPlan(matrix, symbolMap);\n        return tilePlan;\n    }\n    /**\n   * Convert the user's design from array of strings into a 2D array.\n   * @returns {Array.string[]}\n   */ convertToMatrix(design) {\n        const matrix = [];\n        let nColumns = 0;\n        design.forEach((row)=>{\n            nColumns = Math.max(nColumns, row.length);\n        });\n        design.forEach((row)=>{\n            if (row.length < nColumns) row = row + \" \".repeat(nColumns - length);\n            matrix.push(row.split(\"\"));\n        });\n        return matrix;\n    }\n    /**\n   * Go through the design matrix and convert any ambiguous symbols to more specific\n   * ones. Note the tilePlan matrix is not adjusted. The entry and exit tiles are discovered though.\n   * @param {Array.string[]} matrix\n   */ clarifyMatrix(matrix) {\n        const unambiguousMatrix = [];\n        matrix.forEach((rowValue, rowIndex)=>{\n            const correctedRow = [];\n            unambiguousMatrix.push(correctedRow);\n            rowValue.forEach((colValue, colIndex)=>{\n                const surrounds = (0, $27af28d7e434b74b$export$7c548b14ef6e7713)(matrix, rowIndex, colIndex);\n                if ($aa430e5af6097d50$var$isVoid(colValue)) colValue = $aa430e5af6097d50$var$VOID_SYMBOL;\n                else if ($aa430e5af6097d50$var$isGround(colValue)) {\n                    colValue = $aa430e5af6097d50$var$clarifyGround(colValue, surrounds);\n                    if ($aa430e5af6097d50$var$isEntryTile(colValue, surrounds)) this.entryPointByDoor = new (0, $90999bd6b14cd690$export$baf26146a414f24a)(colIndex, rowIndex);\n                    else if ($aa430e5af6097d50$var$isExitTile(colValue, surrounds)) this.exitPointByDoor = new (0, $90999bd6b14cd690$export$baf26146a414f24a)(colIndex, rowIndex);\n                } else if ($aa430e5af6097d50$var$isPartOfWall(colValue)) colValue = $aa430e5af6097d50$var$clarifyWallPart(colValue, surrounds);\n                correctedRow.push(colValue);\n            });\n        });\n        return unambiguousMatrix;\n    }\n    /**\n   * Convert a clarified design plan matrix into a tile plan.\n   * @param {string[][]} matrix\n   * @param {Map<string, *>} symbolMap\n   * @returns {Array.<Array.<*>>}\n   */ createPlan(matrix, symbolMap) {\n        const planMatrix = [];\n        matrix.forEach((rowValue)=>{\n            const planRow = [];\n            planMatrix.push(planRow);\n            rowValue.forEach((columnValue)=>{\n                planRow.push($aa430e5af6097d50$var$getDesignInfo(columnValue, symbolMap));\n            });\n        });\n        this.matrix = planMatrix;\n    }\n}\n/**\n * Test if symbol is a void.\n * @returns {boolean}\n */ function $aa430e5af6097d50$var$isVoid(symbol) {\n    return $aa430e5af6097d50$export$1b3c5bcd5a8a9304.VOID.includes(symbol);\n}\n/**\n * Test if symbol is an entrance.\n * @returns {boolean}\n */ function $aa430e5af6097d50$var$isEntrance(symbol) {\n    return $aa430e5af6097d50$export$1b3c5bcd5a8a9304.DOOR_IN.includes(symbol);\n}\n/**\n * Test if symbol is an exit.\n * @returns {boolean}\n */ function $aa430e5af6097d50$var$isExit(symbol) {\n    return $aa430e5af6097d50$export$1b3c5bcd5a8a9304.DOOR_OUT.includes(symbol);\n}\n/**\n * Test if symbol is a door.\n * @returns {boolean}\n */ function $aa430e5af6097d50$var$isDoor(symbol) {\n    return $aa430e5af6097d50$var$isEntrance(symbol) || $aa430e5af6097d50$var$isExit(symbol);\n}\n/**\n * Test if symbol is a wall.\n * @returns {boolean}\n */ function $aa430e5af6097d50$var$isWall(symbol) {\n    return $aa430e5af6097d50$export$1b3c5bcd5a8a9304.WALL.includes(symbol);\n}\n/**\n * Test if symbol is ground.\n * @returns {boolean}\n */ function $aa430e5af6097d50$var$isGround(symbol) {\n    return $aa430e5af6097d50$export$1b3c5bcd5a8a9304.GROUND.includes(symbol);\n}\n/**\n * Test if the symbol, unclarified, is part of a wall.\n * @param {string} symbol\n * @returns {boolean}\n */ function $aa430e5af6097d50$var$isPartOfWall(symbol) {\n    return $aa430e5af6097d50$var$isWall(symbol) || $aa430e5af6097d50$var$isDoor(symbol);\n}\n/**\n * Clarify the ground.\n * @param {string} value\n * @param {import('../arrays/arrayManip.js').Surrounds} surrounds\n * @return {string}\n */ function $aa430e5af6097d50$var$clarifyGround(value, surrounds) {\n    if ($aa430e5af6097d50$var$isPartOfWall(surrounds.above)) {\n        if ($aa430e5af6097d50$var$isPartOfWall(surrounds.tl)) value += $aa430e5af6097d50$var$ShadowClarifier.BELOW_WALL;\n        else value += $aa430e5af6097d50$var$ShadowClarifier.BELOW_END_WALL;\n    }\n    return value;\n}\n/**\n * Check if this floor tile is the entry tile. This is the tile the hero will\n * appear on when entering the map. The tests are made in the order of where\n * the doors is most likely to be placed assuming a left to right, top to bottom\n * design.\n * @param {string} value\n * @param {import('../arrays/arrayManip.js').Surrounds} surrounds\n * @returns {boolean}\n */ function $aa430e5af6097d50$var$isEntryTile(value, surrounds) {\n    return $aa430e5af6097d50$var$isEntrance(surrounds.left) || $aa430e5af6097d50$var$isEntrance(surrounds.above) || $aa430e5af6097d50$var$isEntrance(surrounds.right) || $aa430e5af6097d50$var$isEntrance(surrounds.below);\n}\n/**\n * Check if this floor tile is the exit tile. This is the tile the hero will\n * appear on when entering the map. The tests are made in the order of where\n * the doors is most likely to be placed assuming a left to right, top to bottom\n * design.\n * @param {string} value\n * @param {import('../arrays/arrayManip.js').Surrounds} surrounds\n * @returns {boolean}\n */ function $aa430e5af6097d50$var$isExitTile(value, surrounds) {\n    return $aa430e5af6097d50$var$isExit(surrounds.right) || $aa430e5af6097d50$var$isExit(surrounds.below) || $aa430e5af6097d50$var$isExit(surrounds.left) || $aa430e5af6097d50$var$isExit(surrounds.above);\n}\n/**\n * Distinguish the type of tile based on its surroundings.\n * This function does not handle corners.\n * @param {string} value\n * @param {import('../arrays/arrayManip.js').Surrounds} surrounds\n * @return {string}\n */ function $aa430e5af6097d50$var$clarifyWallPart(value, surrounds) {\n    let result = value;\n    // internals centre cross\n    if ($aa430e5af6097d50$var$isPartOfWall(surrounds.above) && $aa430e5af6097d50$var$isPartOfWall(surrounds.right) && $aa430e5af6097d50$var$isPartOfWall(surrounds.below) && $aa430e5af6097d50$var$isPartOfWall(surrounds.left)) result += $aa430e5af6097d50$var$Clarifiers.INTERNAL_CROSS;\n    else if ($aa430e5af6097d50$var$isGround(surrounds.left) && $aa430e5af6097d50$var$isGround(surrounds.right)) result += $aa430e5af6097d50$var$Clarifiers.INTERNAL_VERTICAL;\n    else if ($aa430e5af6097d50$var$isGround(surrounds.above) && $aa430e5af6097d50$var$isGround(surrounds.below)) result += $aa430e5af6097d50$var$Clarifiers.INTERNAL_HORIZONTAL;\n    else if ($aa430e5af6097d50$var$isPartOfWall(surrounds.left) && $aa430e5af6097d50$var$isPartOfWall(surrounds.right) && $aa430e5af6097d50$var$isPartOfWall(surrounds.below)) result += $aa430e5af6097d50$var$Clarifiers.TOP_TEE;\n    else if ($aa430e5af6097d50$var$isPartOfWall(surrounds.above) && $aa430e5af6097d50$var$isPartOfWall(surrounds.below) && $aa430e5af6097d50$var$isPartOfWall(surrounds.left)) result += $aa430e5af6097d50$var$Clarifiers.RIGHT_TEE;\n    else if ($aa430e5af6097d50$var$isPartOfWall(surrounds.left) && $aa430e5af6097d50$var$isPartOfWall(surrounds.right) && $aa430e5af6097d50$var$isPartOfWall(surrounds.above)) result += $aa430e5af6097d50$var$Clarifiers.BOTTOM_TEE;\n    else if ($aa430e5af6097d50$var$isPartOfWall(surrounds.above) && $aa430e5af6097d50$var$isPartOfWall(surrounds.below) && $aa430e5af6097d50$var$isPartOfWall(surrounds.right)) result += $aa430e5af6097d50$var$Clarifiers.LEFT_TEE;\n    else if ($aa430e5af6097d50$var$isPartOfWall(surrounds.right) && $aa430e5af6097d50$var$isPartOfWall(surrounds.below)) result += $aa430e5af6097d50$var$isGround(surrounds.br) ? $aa430e5af6097d50$var$Clarifiers.TOP_LEFT : $aa430e5af6097d50$var$Clarifiers.TOP_LEFT_INTERNAL;\n    else if ($aa430e5af6097d50$var$isPartOfWall(surrounds.left) && $aa430e5af6097d50$var$isPartOfWall(surrounds.below)) result += $aa430e5af6097d50$var$isGround(surrounds.bl) ? $aa430e5af6097d50$var$Clarifiers.TOP_RIGHT : $aa430e5af6097d50$var$Clarifiers.TOP_RIGHT_INTERNAL;\n    else if ($aa430e5af6097d50$var$isPartOfWall(surrounds.left) && $aa430e5af6097d50$var$isPartOfWall(surrounds.above)) result += $aa430e5af6097d50$var$isGround(surrounds.tl) ? $aa430e5af6097d50$var$Clarifiers.BOTTOM_RIGHT : $aa430e5af6097d50$var$Clarifiers.BOTTOM_RIGHT_INTERNAL;\n    else if ($aa430e5af6097d50$var$isPartOfWall(surrounds.right) && $aa430e5af6097d50$var$isPartOfWall(surrounds.above)) result += $aa430e5af6097d50$var$isGround(surrounds.tr) ? $aa430e5af6097d50$var$Clarifiers.BOTTOM_LEFT : $aa430e5af6097d50$var$Clarifiers.BOTTOM_LEFT_INTERNAL;\n    else if ($aa430e5af6097d50$var$isPartOfWall(surrounds.above) && $aa430e5af6097d50$var$isPartOfWall(surrounds.below)) // vertical\n    result += $aa430e5af6097d50$var$isGround(surrounds.right) ? $aa430e5af6097d50$var$Clarifiers.LEFT : $aa430e5af6097d50$var$Clarifiers.RIGHT;\n    else if ($aa430e5af6097d50$var$isPartOfWall(surrounds.right) && $aa430e5af6097d50$var$isPartOfWall(surrounds.left)) // horizontal\n    result += $aa430e5af6097d50$var$isGround(surrounds.below) ? $aa430e5af6097d50$var$Clarifiers.TOP : $aa430e5af6097d50$var$Clarifiers.BOTTOM;\n    if ($aa430e5af6097d50$var$isPartOfWall(surrounds.above)) return result += $aa430e5af6097d50$var$ShadowClarifier.BELOW_WALL;\n    return result;\n}\n/** Get the design info from the symbol map. The function reduces the specialism\n * of the symbol if it cannot find it. I.e it removes any shadow clarifiers and\n * then all other clarifiers when hunting for the symbol in the symbol map.\n * @param {string} symbol - clarified symbol.\n * @param {Map<string, *>} symbolMap\n * @returns {TileDesignInfo}\n */ function $aa430e5af6097d50$var$getDesignInfo(symbol, symbolMap) {\n    if (symbol === $aa430e5af6097d50$var$VOID_SYMBOL) return null;\n    const match = symbol.match(/(.)(-[^-]*)?(-[^-]*)?/);\n    let info = symbolMap.get(symbol);\n    if (!info && match[2] && match[3]) info = symbolMap.get(`${match[1]}${match[2]}`); // no shadow clarifier\n    if (!info && match[2]) info = symbolMap.get(match[1]); // no clarifiers at all\n    if (!info) {\n        const fallbackSymbol = $aa430e5af6097d50$var$getFirstOfCohort(match[1]);\n        if (fallbackSymbol && fallbackSymbol !== match[1]) return $aa430e5af6097d50$var$getDesignInfo($aa430e5af6097d50$var$formClarifiedSymbol(fallbackSymbol, match[2], match[3]), symbolMap);\n        else (0, $2d5b4e7cb639ebe1$export$2e2bcd8739ae039).error(`Failed to find symbol for ${symbol}`);\n    }\n    return info;\n}\n/**\n * Searches the SpecialSymbols and finds the first entry in the array that matches\n * the unclarified symbol.\n * @param {string} unclarifiedSymbol\n * @returns {string} null if not found\n */ function $aa430e5af6097d50$var$getFirstOfCohort(unclarifiedSymbol) {\n    for(const prop in $aa430e5af6097d50$export$1b3c5bcd5a8a9304){\n        if ($aa430e5af6097d50$export$1b3c5bcd5a8a9304[prop].includes(unclarifiedSymbol)) return $aa430e5af6097d50$export$1b3c5bcd5a8a9304[prop][0];\n    }\n    return null;\n}\n/**\n * Add clarifiers onto symbol.\n * @param {string} unclarifiedSymbol\n * @param {string} clarifier\n * @param {string} shadowClarifier\n */ function $aa430e5af6097d50$var$formClarifiedSymbol(unclarifiedSymbol, clarifier, shadowClarifier) {\n    let result = unclarifiedSymbol;\n    if (clarifier) result += clarifier;\n    if (shadowClarifier) result += shadowClarifier;\n    return result;\n}\n\n\n/**\n * @file Tile map\n *\n * @module utils/tileMaps/tileMap\n *\n * License {@link https://opensource.org/license/mit/|MIT}\n *\n * Copyright 2024 Steve Butler\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the “Software”), to deal in\n * the Software without restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n * Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */ \n\n\n\n\n\n\n\n/**\n * @file Path finders within a tile map\n *\n * @module utils/tileMaps/pathFinder\n *\n * License {@link https://opensource.org/license/mit/|MIT}\n *\n * Copyright 2024 Steve Butler\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the “Software”), to deal in\n * the Software without restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n * Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */ \n\nclass $2d040b97465ee48e$export$3565eb3d00ca5a74 {\n    /** @type {Map<string, Point[]>} */ #routes;\n    /** @type {import('./tileMap.js').TileMap} */ #tileMap;\n    /**\n   * Create routes.\n   * @param {import('./tileMap.js').TileMap} tileMap\n   */ constructor(tileMap){\n        this.#tileMap = tileMap;\n        this.#routes = new Map();\n    }\n    /**\n   * Set route to reach coordinates\n   * @param {Point[]} route\n   * @param {*} x\n   * @param {*} y\n   */ setRouteToCoords(route, x, y) {\n        this.#routes.set(this.coordsToKey(x, y), route);\n    }\n    /**\n   * Get route to reach coordinates\n   * @param {*} x\n   * @param {*} y\n   * @returns {Point[]} route}\n   */ getRouteToCoords(x, y) {\n        return this.#routes.get(this.coordsToKey(x, y));\n    }\n    /** Test if routes has route to coords.\n   * @param {number} x - grid position\n   * @param {number} y - grid position\n   * @returns {boolean}\n   */ hasRouteToCoords(x, y) {\n        return this.#routes.has(this.coordsToKey(x, y));\n    }\n    /**\n   * Create a key for the routes map from a row and column.\n   * @param {number} x\n   * @param {number} y\n   * @returns {string}\n   */ coordsToKey(x, y) {\n        return `${x}|${y}`;\n    }\n    /**\n   * Convert a map key to a grid reference.\n   * @param {string} key\n   * @returns {Point} Point giving the tile map grid reference.\n   */ keyToGridPoint(key) {\n        const reference = key.split(\"|\");\n        return new (0, $90999bd6b14cd690$export$baf26146a414f24a)(parseInt(reference[0]), parseInt(reference[1]));\n    }\n    /**\n   * Get the entries\n   * @returns {Iterator}\n   */ forEach(callback) {\n        this.#routes.forEach((value, key, map)=>callback(value, key, map));\n    }\n    /**\n   * Check if any routes contains the coordinates\n   * @param {Point} point\n   * @returns {boolean}\n   */ containsGridPoint(point) {\n        return this.#routes.has(this.coordsToKey(point.x, point.y));\n    }\n    /**\n   * Get wayPoints to get to destination of x, y. The starting point is stripped\n   * off. Points are returned as grid references\n   * @param {Point} destination\n   * @returns {Point[]} array of points to reach grid reference x, y. Null if no route.\n   */ getWaypointsAsGridPoints(destination) {\n        const points = this.getRouteToCoords(destination.x, destination.y);\n        if (points.length > 1) return points.slice(1);\n        else return null;\n    }\n    /**\n   * Get wayPoints to get to destination of x, y. The starting point is stripped\n   * off.\n   * @param {Point} destination\n   * @returns {Point[]} array of points to reach grid reference x, y\n   */ getWaypointsAsWorldPoints(destination) {\n        const waypoints = this.getWaypointsAsGridPoints(destination);\n        if (waypoints) return waypoints.map((gridPoint)=>this.#tileMap.gridPointToWorldPoint(gridPoint));\n        else return waypoints;\n    }\n}\nclass $2d040b97465ee48e$export$4c535f8fc4520664 {\n    /** Actor trying to find routes. @type {import('./tileMap.js').Actor} */ actor;\n    /** @type {Route[]} */ #routes;\n    /** @type {import('./tileMap.js').TileMap} */ #tileMap;\n    /** @type {Point} */ #startPoint;\n    /** Create the route finder.\n   * @param {import('./tileMap.js').TileMap} tileMap\n   * @param {import('./tileMap.js').Actor} actor\n   */ constructor(tileMap, actor){\n        this.#tileMap = tileMap;\n        this.actor = actor;\n    }\n    /**\n   * Find a route to the destination gridPoint. Note that it tries to find a route\n   * adjacent to the target grid point, not actually on the grid point. The resulting\n   * route is dumb, in that it does not try all options to maximise movement.\n   * @param {Point} startingGridPoint - starting point\n   * @param {Point} targetGridPoint - starting point\n   * @param {*} maxMove - maximum number of moves allowed.\n   * @returns {Map<string, Point[]>} null if no path available or necessary.\n   */ getDumbRouteNextTo(startingGridPoint, targetGridPoint, maxMove) {\n        let destination = this.#getAdjacentTarget(startingGridPoint, targetGridPoint);\n        if (destination.coincident(startingGridPoint)) return [];\n        if (!this.#tileMap.canGridPointBeOccupiedByActor(destination, this.actor)) destination = this.#rotateGridPointAbout(destination, targetGridPoint);\n        let path = [];\n        let dX = Math.sign(destination.x - startingGridPoint.x);\n        let dY = Math.sign(destination.y - startingGridPoint.y);\n        let waypoint = (0, $90999bd6b14cd690$export$baf26146a414f24a).copy(startingGridPoint);\n        let movingX = Math.random() < 0.5;\n        let consecutiveFails = 0;\n        while(maxMove > 0){\n            let nextPoint = (0, $90999bd6b14cd690$export$baf26146a414f24a).copy(waypoint);\n            let moved = false;\n            if (movingX && dX !== 0 && waypoint.x != destination.x) {\n                nextPoint.x += dX;\n                moved = true;\n            } else if (!movingX && dY !== 0 && waypoint.y != destination.y) {\n                nextPoint.y += dY;\n                moved = true;\n            }\n            moved = moved && this.#tileMap.canGridPointBeOccupiedByActor(nextPoint, this.actor);\n            if (moved) {\n                consecutiveFails = 0;\n                waypoint = nextPoint;\n                maxMove--;\n            } else {\n                if (++consecutiveFails >= 2) break;\n                if (!waypoint.coincident(startingGridPoint)) path.push(this.#tileMap.gridPointToWorldPoint(waypoint));\n                startingGridPoint = waypoint;\n                movingX = !movingX; //flip axi\n            }\n        }\n        if (!waypoint.coincident(startingGridPoint)) path.push(this.#tileMap.gridPointToWorldPoint(waypoint));\n        return path;\n    }\n    /**\n   * Get all available routes as a Map of paths.\n   * @param {Point} startingGridPoint - starting point\n   * @param {*} maxMove - maximum number of moves allowed.\n   * @returns {Map<string, Point[]>}\n   */ getAllRoutesFrom(startingGridPoint, maxMove) {\n        this.#routes = new $2d040b97465ee48e$export$3565eb3d00ca5a74(this.#tileMap);\n        this.#startPoint = startingGridPoint;\n        this.#findRoutes(startingGridPoint.x, startingGridPoint.y, maxMove, null);\n        return this.#routes;\n    }\n    /**\n   * @param {number} x - tile x index of current tile\n   * @param {number} y - tile y index of current tile\n   * @param {number} maxTiles - the maximum number of tiles that can be moved.\n   * @param {Point[]} [routePoints] - array of points that\n   * represent current path taken to get here. If null, this is the start of the\n   * route.\n   */ #findRoutes(x, y, movesLeft, routePoints) {\n        if (!routePoints) /* Initialise route. Don't check if it's clear as it may well be occupied\n       * by the sprite seeking a route.\n       */ routePoints = [\n            new (0, $90999bd6b14cd690$export$baf26146a414f24a)(x, y)\n        ];\n        else {\n            if (x === this.#startPoint.x && y === this.#startPoint.y) return;\n            else if (!this.#isTilePassable(x, y)) return;\n            const existingRoute = this.#routes.getRouteToCoords(x, y);\n            if (!existingRoute || routePoints.length < existingRoute.length - 1) {\n                routePoints.push(new (0, $90999bd6b14cd690$export$baf26146a414f24a)(x, y)); // we have a route to this point\n                if (this.#canTileBeOccupied(x, y)) // only save route if we are actually allowed to occupy its end point.\n                this.#routes.setRouteToCoords(routePoints, x, y);\n                movesLeft--;\n            } else return;\n        }\n        if (movesLeft > 0) {\n            // try all 4 directions\n            this.#findRoutes(x, y - 1, movesLeft, [\n                ...routePoints\n            ]); // up\n            this.#findRoutes(x + 1, y, movesLeft, [\n                ...routePoints\n            ]); // right\n            this.#findRoutes(x, y + 1, movesLeft, [\n                ...routePoints\n            ]); // down\n            this.#findRoutes(x - 1, y, movesLeft, [\n                ...routePoints\n            ]); // left\n        }\n    }\n    /** Check if tile is passable.\n   * @param {number} x\n   * @param {number} y\n   * @returns {boolean}\n   *\n   */ #isTilePassable(x, y) {\n        return this.#tileMap.isGridPointPassableByActor(new (0, $90999bd6b14cd690$export$baf26146a414f24a)(x, y), this.actor);\n    }\n    /** Check if tile can be occupied.\n   * @param {number} x\n   * @param {number} y\n   * @returns {boolean}\n   *\n   */ #canTileBeOccupied(x, y) {\n        return this.#tileMap.canGridPointBeOccupiedByActor(new (0, $90999bd6b14cd690$export$baf26146a414f24a)(x, y), this.actor);\n    }\n    #getAdjacentTarget(current, target) {\n        const deltaX = target.x - current.x;\n        const deltaY = target.y - current.y;\n        let adjX = target.x;\n        let adjY = target.y;\n        if (Math.abs(deltaX) > Math.abs(deltaY)) adjX -= Math.sign(deltaX);\n        else adjY -= Math.sign(deltaY);\n        return new (0, $90999bd6b14cd690$export$baf26146a414f24a)(adjX, adjY);\n    }\n    /**\n   * Rotate a grid point about a target grid point. This does not rotate to\n   * diagonals.\n   */ #rotateGridPointAbout(gridPoint, originPoint) {\n        if (gridPoint.x === originPoint.x && gridPoint.y < originPoint.y) return new (0, $90999bd6b14cd690$export$baf26146a414f24a)(gridPoint.x + 1, gridPoint.y + 1);\n        else if (gridPoint.x > originPoint.x && gridPoint.y === originPoint.y) return new (0, $90999bd6b14cd690$export$baf26146a414f24a)(gridPoint.x - 1, gridPoint.y + 1);\n        if (gridPoint.x === originPoint.x && gridPoint.y > originPoint.y) return new (0, $90999bd6b14cd690$export$baf26146a414f24a)(gridPoint.x - 1, gridPoint.y - 1);\n        if (gridPoint.x < originPoint.x && gridPoint.y === originPoint.y) return new (0, $90999bd6b14cd690$export$baf26146a414f24a)(gridPoint.x + 1, gridPoint.y - 1);\n        return gridPoint;\n    }\n}\nclass $2d040b97465ee48e$export$e832cee54e4e1a4d {\n    /** Actor tracing rays. @type {import('./tileMap.js').Actor} */ #actor;\n    /** Start point of the ray. @type {Point} */ #rayStartPoint;\n    /** @type {import('./tileMap.js').TileMap} */ #tileMap;\n    /** @type {Map<string, Point} */ #reachedPoints;\n    /** @type {Point}   */ #lastStartPoint;\n    /** @type {Rectangle} */ #bounds;\n    /** @type {Rectangle} */ #lastBounds;\n    /** Create the ray tracer.\n   * @param {import('./tileMap.js').TileMap} tileMap\n   * @param {import('./tileMap.js').Actor} actor\n   */ constructor(tileMap, actor){\n        this.#tileMap = tileMap;\n        this.#actor = actor;\n    }\n    /**\n   * Find all the tiles that are reached from the actor.\n   * @returns {Map<Point>} grid points of reached tiles.\n   */ findReachedTiles() {\n        this.#rayStartPoint = this.#tileMap.worldPointToGrid(this.#actor.position);\n        // this.#bounds = this.#tileMap.getVisibleGridPointRect();\n        this.#bounds = this.#tileMap.getMapGridPointRect();\n        if (this.#lastStartPoint && this.#lastStartPoint.coincident(this.#rayStartPoint) && this.#bounds && this.#bounds.equals(this.#lastBounds)) return this.#reachedPoints;\n        this.#reachedPoints = new Map();\n        this.#reachedPoints.set(this.#rayStartPoint.toString(), this.#rayStartPoint);\n        this.#getRayEnds().forEach((endPoint)=>{\n            this.#traceRayToEnd(endPoint);\n        });\n        this.#lastStartPoint = this.#rayStartPoint;\n        this.#lastBounds = this.#bounds;\n        return this.#reachedPoints;\n    }\n    /**\n   * Test if grid point in rays.\n   * @param {Point} gridPoint\n   * @returns {boolean}\n   */ isGridPointInRays(gridPoint) {\n        return this.#reachedPoints ? this.#reachedPoints.has(gridPoint.toString()) : false;\n    }\n    /**\n   * Get the end point of the rays.\n   * @returns {Point[]} array of the end grid points for each ray.\n   */ #getRayEnds() {\n        const rayEnds = [];\n        for(let col = this.#bounds.x; col <= this.#bounds.x + this.#bounds.width; col++){\n            rayEnds.push(new (0, $90999bd6b14cd690$export$baf26146a414f24a)(col, this.#bounds.y));\n            rayEnds.push(new (0, $90999bd6b14cd690$export$baf26146a414f24a)(col, this.#bounds.y + this.#bounds.height));\n        }\n        for(let row = this.#bounds.y + 1; row <= this.#bounds.y + this.#bounds.height - 1; row++){\n            rayEnds.push(new (0, $90999bd6b14cd690$export$baf26146a414f24a)(this.#bounds.x, row));\n            rayEnds.push(new (0, $90999bd6b14cd690$export$baf26146a414f24a)(this.#bounds.x + this.#bounds.width, row));\n        }\n        return rayEnds;\n    }\n    /**\n   * Trace the ray to its end. Note that calculations are done in cartesian coordinates\n   * and so Y values need to be negated during calculations.\n   * @param {Point} endPoint\n   */ #traceRayToEnd(endPoint) {\n        let dx;\n        let dy;\n        let steps;\n        const angle = this.#rayStartPoint.getScreenAngleTo(endPoint);\n        const compassDirection = $05d58a132d6b5767$export$d9ac11c8e8c20b77(angle);\n        if (Math.abs(endPoint.x - this.#rayStartPoint.x) >= Math.abs(endPoint.y - this.#rayStartPoint.y)) {\n            dx = Math.sign(endPoint.x - this.#rayStartPoint.x);\n            steps = Math.abs(endPoint.x - this.#rayStartPoint.x);\n            dy = steps < 1 ? 0 : (endPoint.y - this.#rayStartPoint.y) / steps;\n        } else {\n            dy = Math.sign(endPoint.y - this.#rayStartPoint.y);\n            steps = Math.abs(endPoint.y - this.#rayStartPoint.y);\n            dx = steps < 1 ? 0 : (endPoint.x - this.#rayStartPoint.x) / steps;\n        }\n        let x = this.#rayStartPoint.x;\n        let y = this.#rayStartPoint.y;\n        let firstPoint = true;\n        while(steps >= 0){\n            const gridPoint = new (0, $90999bd6b14cd690$export$baf26146a414f24a)(Math.round(x), Math.round(y));\n            if (firstPoint || this.#tileMap.isSeeThrough(gridPoint, this.#actor)) this.#markReachedPoint(gridPoint, compassDirection);\n            else break; // ray ends.\n            firstPoint = false;\n            x += dx;\n            y += dy;\n            steps--;\n        }\n    }\n    /**\n   * Mark the point as reached. Note that surrounding obstacle tiles need to be\n   * shown as well otherwise wall will not appear.\n   * @param {Point} point\n   * @param {number} compassDir - eight point compass direction of ray\n   */ #markReachedPoint(point, compassDir) {\n        this.#reachedPoints.set(point.toString(), point);\n        switch(compassDir){\n            case $05d58a132d6b5767$export$624e7ee3f0468367.N:\n                this.#markReachedIfNotSeeThrough(new (0, $90999bd6b14cd690$export$baf26146a414f24a)(point.x - 1, point.y - 1));\n                this.#markReachedIfNotSeeThrough(new (0, $90999bd6b14cd690$export$baf26146a414f24a)(point.x, point.y - 1));\n                this.#markReachedIfNotSeeThrough(new (0, $90999bd6b14cd690$export$baf26146a414f24a)(point.x + 1, point.y - 1));\n                break;\n            case $05d58a132d6b5767$export$624e7ee3f0468367.NE:\n                this.#markReachedIfNotSeeThrough(new (0, $90999bd6b14cd690$export$baf26146a414f24a)(point.x, point.y - 1));\n                this.#markReachedIfNotSeeThrough(new (0, $90999bd6b14cd690$export$baf26146a414f24a)(point.x + 1, point.y - 1));\n                this.#markReachedIfNotSeeThrough(new (0, $90999bd6b14cd690$export$baf26146a414f24a)(point.x + 1, point.y));\n                break;\n            case $05d58a132d6b5767$export$624e7ee3f0468367.E:\n                this.#markReachedIfNotSeeThrough(new (0, $90999bd6b14cd690$export$baf26146a414f24a)(point.x + 1, point.y - 1));\n                this.#markReachedIfNotSeeThrough(new (0, $90999bd6b14cd690$export$baf26146a414f24a)(point.x + 1, point.y));\n                this.#markReachedIfNotSeeThrough(new (0, $90999bd6b14cd690$export$baf26146a414f24a)(point.x + 1, point.y + 1));\n                break;\n            case $05d58a132d6b5767$export$624e7ee3f0468367.SE:\n                this.#markReachedIfNotSeeThrough(new (0, $90999bd6b14cd690$export$baf26146a414f24a)(point.x + 1, point.y));\n                this.#markReachedIfNotSeeThrough(new (0, $90999bd6b14cd690$export$baf26146a414f24a)(point.x + 1, point.y + 1));\n                this.#markReachedIfNotSeeThrough(new (0, $90999bd6b14cd690$export$baf26146a414f24a)(point.x, point.y + 1));\n                break;\n            case $05d58a132d6b5767$export$624e7ee3f0468367.S:\n                this.#markReachedIfNotSeeThrough(new (0, $90999bd6b14cd690$export$baf26146a414f24a)(point.x - 1, point.y + 1));\n                this.#markReachedIfNotSeeThrough(new (0, $90999bd6b14cd690$export$baf26146a414f24a)(point.x, point.y + 1));\n                this.#markReachedIfNotSeeThrough(new (0, $90999bd6b14cd690$export$baf26146a414f24a)(point.x + 1, point.y + 1));\n                break;\n            case $05d58a132d6b5767$export$624e7ee3f0468367.SW:\n                this.#markReachedIfNotSeeThrough(new (0, $90999bd6b14cd690$export$baf26146a414f24a)(point.x - 1, point.y));\n                this.#markReachedIfNotSeeThrough(new (0, $90999bd6b14cd690$export$baf26146a414f24a)(point.x - 1, point.y + 1));\n                this.#markReachedIfNotSeeThrough(new (0, $90999bd6b14cd690$export$baf26146a414f24a)(point.x, point.y + 1));\n                break;\n            case $05d58a132d6b5767$export$624e7ee3f0468367.W:\n                this.#markReachedIfNotSeeThrough(new (0, $90999bd6b14cd690$export$baf26146a414f24a)(point.x - 1, point.y - 1));\n                this.#markReachedIfNotSeeThrough(new (0, $90999bd6b14cd690$export$baf26146a414f24a)(point.x - 1, point.y));\n                this.#markReachedIfNotSeeThrough(new (0, $90999bd6b14cd690$export$baf26146a414f24a)(point.x - 1, point.y + 1));\n                break;\n            case $05d58a132d6b5767$export$624e7ee3f0468367.NW:\n                this.#markReachedIfNotSeeThrough(new (0, $90999bd6b14cd690$export$baf26146a414f24a)(point.x - 1, point.y));\n                this.#markReachedIfNotSeeThrough(new (0, $90999bd6b14cd690$export$baf26146a414f24a)(point.x - 1, point.y - 1));\n                this.#markReachedIfNotSeeThrough(new (0, $90999bd6b14cd690$export$baf26146a414f24a)(point.x, point.y - 1));\n                break;\n        }\n    }\n    /**\n   * Mark a tile as Reached if not see through\n   * @param {Point} point\n   */ #markReachedIfNotSeeThrough(point) {\n        if (!this.#tileMap.isSeeThrough(point)) this.#reachedPoints.set(point.toString(), point);\n    }\n}\n\n\n/**\n * @file Manage the game turns. The turnManager is a state machine and implemented\n * as a singleton.\n *\n * @module utils/game/turnManager/turnManager\n *\n * License {@link https://opensource.org/license/mit/|MIT}\n *\n * Copyright 2024 Steve Butler\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the “Software”), to deal in\n * the Software without restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n * Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */ \n\n\n\n\n/**\n * @file Scene manager\n *\n * @module utils/game/sceneManager\n *\n * License {@link https://opensource.org/license/mit/|MIT}\n *\n * Copyright 2024 Steve Butler (henspace.com).\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the “Software”), to deal in\n * the Software without restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n * Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */ \n\n/**\n * @file Fullscreen button\n *\n * @module utils/game/fullscreen\n *\n * License {@link https://opensource.org/license/mit/|MIT}\n *\n * Copyright 2024 Steve Butler (henspace.com).\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the “Software”), to deal in\n * the Software without restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n * Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */ \n\n\n\n\n/** @type {Actor} */ let $1e31a0b2c366ad73$var$fullscreenButton;\nlet $1e31a0b2c366ad73$var$fullscreenButtonImage;\n/**\n * Request full screen mode.\n * @param {Element} element - what should go full screen.\n * @param {Object} options - see {@link https://developer.mozilla.org/en-US/docs/Web/API/Element/requestFullscreen}\n * @returns {Promise}\n */ function $1e31a0b2c366ad73$var$requestFullscreen(element, options) {\n    if (element.requestFullscreen) return element.requestFullscreen(options);\n    return Promise.reject(new Error(\"Fullscreen requests not supported by browser\"));\n}\nfunction $1e31a0b2c366ad73$export$6bc2b396b4cd0b89() {\n    addEventListener(\"fullscreenchange\", ()=>{\n        if (!document.fullscreenElement) {\n            (0, $2d5b4e7cb639ebe1$export$2e2bcd8739ae039).debug(\"Exiting fullscreen mode.\");\n            $1e31a0b2c366ad73$var$fullscreenButtonImage.setCurrentIndex(0);\n        } else {\n            (0, $2d5b4e7cb639ebe1$export$2e2bcd8739ae039).debug(\"Entering fullscreen mode\");\n            $1e31a0b2c366ad73$var$fullscreenButtonImage.setCurrentIndex(1);\n        }\n    });\n    $1e31a0b2c366ad73$var$fullscreenButtonImage = new (0, $7f41e47310ae6543$export$9d5734c725768403)(0, {\n        prefix: \"hud-fullscreen\",\n        startIndex: 0,\n        padding: 2,\n        suffix: \".png\"\n    }, {\n        framePeriodMs: 1,\n        loopMethod: (0, $af167e06ffca879a$export$cab6ba75b045ad71).STOP\n    });\n    $1e31a0b2c366ad73$var$fullscreenButton = (0, $3ce6241a7c9b35c7$export$2e2bcd8739ae039).addButton($1e31a0b2c366ad73$var$fullscreenButtonImage, ()=>{\n        $1e31a0b2c366ad73$var$requestFullscreen(document.body, {\n            navigationUI: \"hide\"\n        });\n    }, ()=>{\n        document.exitFullscreen();\n    });\n    $1e31a0b2c366ad73$var$fullscreenButton.position.x = (0, $e49c2c8387e6101d$export$2e2bcd8739ae039).TILE_SIZE;\n    $1e31a0b2c366ad73$var$fullscreenButton.position.y = -(0, $e49c2c8387e6101d$export$2e2bcd8739ae039).TILE_SIZE;\n}\n\n\n\n\n\n\n/** @type {import('../sprites/sprite.js').Sprite}  */ let $b8e5621826152c93$var$cameraDolly;\nlet $b8e5621826152c93$var$sceneDefinitions;\nlet $b8e5621826152c93$var$currentIndex;\nlet $b8e5621826152c93$var$currentScene;\n/** @type {import('./actors.js').Actor} */ let $b8e5621826152c93$var$hero;\nlet $b8e5621826152c93$var$navigationButtons;\n/**\n * Set camera dolly\n * @param {import('../sprites/sprite.js').Sprite} sprite\n * @param {number} speed - See {@link module:utils/game/camera.createCameraDolly}\n * @param {number} proportionSeparated - See {@link module:utils/game/camera.createCameraDolly}\n */ function $b8e5621826152c93$var$setCameraToTrack(sprite, speed, proportionSeparated) {\n    $b8e5621826152c93$var$cameraDolly = new (0, $1e8586c4726fc461$export$39ca3bda943df04d)(sprite, speed, proportionSeparated);\n}\n/**\n * Create the HUD\n */ function $b8e5621826152c93$var$createHud() {\n    $b8e5621826152c93$var$navigationButtons = new (0, $54c6f0aaef62f1b7$export$5e8c6d32f039cdeb)($b8e5621826152c93$var$cameraDolly, 48, (0, $54c6f0aaef62f1b7$export$763f95e026c05695).BR);\n    (0, $1e31a0b2c366ad73$export$6bc2b396b4cd0b89)();\n    (0, $3ce6241a7c9b35c7$export$2e2bcd8739ae039).setVisible(true);\n}\n/**\n * Clear the HUD.\n */ function $b8e5621826152c93$var$clearHud() {\n    $b8e5621826152c93$var$navigationButtons = null;\n    (0, $3ce6241a7c9b35c7$export$2e2bcd8739ae039).clear();\n    (0, $3ce6241a7c9b35c7$export$2e2bcd8739ae039).setVisible(false);\n}\n/** Set the current scene, unloading any existing scene\n * @param {import('./scene.js').Scene} scene\n * @returns {Promise} fulfils to undefined.\n * Rejects if scene is undefined or null.\n */ function $b8e5621826152c93$var$setScene(scene) {\n    if (!scene) {\n        (0, $2d5b4e7cb639ebe1$export$2e2bcd8739ae039).error(\"Attempt made to switch to the next scene when there are no more.\");\n        return Promise.reject();\n    }\n    return $b8e5621826152c93$var$unloadScene($b8e5621826152c93$var$currentScene).then(()=>$b8e5621826152c93$var$loadScene(scene));\n}\n/**\n * Load scene\n * @param {import('./scene.js').Scene} scene\n * @returns {Promise} fulfills to null\n */ function $b8e5621826152c93$var$loadScene(scene) {\n    return scene.load().then(()=>scene.initialise()).then(()=>{\n        $b8e5621826152c93$var$createHud();\n        $b8e5621826152c93$var$currentScene = scene;\n    });\n}\n/**\n * Unload scene\n * @param {import('./scene.js').Scene} scene\n * @returns {Promise} fulfills to null\n */ function $b8e5621826152c93$var$unloadScene(scene) {\n    if (scene) return scene.unload().then(()=>{\n        (0, $f8633d94d0c88c58$export$2e2bcd8739ae039).clearAll();\n        $b8e5621826152c93$var$currentScene = null;\n        $b8e5621826152c93$var$clearHud();\n        return Promise.resolve();\n    });\n    else return Promise.resolve(null);\n}\n/**\n * Unload current scene\n * @returns {Promise} fulfills to null\n */ function $b8e5621826152c93$var$unloadCurrentScene() {\n    return $b8e5621826152c93$var$unloadScene($b8e5621826152c93$var$currentScene);\n}\n/**\n * Configure the scenes from the script.\n * @param {import('../../scriptReaders/index.js').SceneDefinition} sceneDefns\n */ function $b8e5621826152c93$var$setSceneDefinitions(sceneDefns) {\n    $b8e5621826152c93$var$sceneDefinitions = sceneDefns;\n    $b8e5621826152c93$var$currentIndex = -1;\n}\n/**\n * @returns {import('./scene.js').Scene} scene constructed from requested scene definition.\n * null if there are no more scenes.\n */ function $b8e5621826152c93$var$getNextScene() {\n    $b8e5621826152c93$var$currentIndex++;\n    return $b8e5621826152c93$var$currentIndex < $b8e5621826152c93$var$sceneDefinitions.length ? (0, $fee0c02ce96028b6$export$cc8138686166266c)($b8e5621826152c93$var$sceneDefinitions[$b8e5621826152c93$var$currentIndex]) : null;\n}\n/**\n * Test to see if there are more scenes.\n * @returns {boolean}\n */ function $b8e5621826152c93$var$areThereMoreScenes() {\n    return $b8e5621826152c93$var$currentIndex < $b8e5621826152c93$var$sceneDefinitions.length - 1;\n}\n/**\n * Reset the index and return the first scene.\n * @returns {import('./scene.js').Scene} scene constructed from requested scene definition.\n * null if there are no more scenes.\n */ function $b8e5621826152c93$var$getFirstScene() {\n    $b8e5621826152c93$var$currentIndex = -1;\n    return $b8e5621826152c93$var$getNextScene();\n}\n/**\n * Switch to the first scene.\n * @returns {Promise} fulfils to undefined on success.\n * Rejects if no scenes.\n */ function $b8e5621826152c93$var$switchToFirstScene() {\n    return $b8e5621826152c93$var$setScene($b8e5621826152c93$var$getFirstScene());\n}\n/**\n * Switch to the next scene.\n * @returns {Promise} fulfils to undefined on success.\n * Rejects if there are no more.\n */ function $b8e5621826152c93$var$switchToNextScene() {\n    return $b8e5621826152c93$var$setScene($b8e5621826152c93$var$getNextScene());\n}\n/**\n * UPdate the scene\n * @param {number} deltaSeconds\n */ function $b8e5621826152c93$var$update(deltaSeconds) {\n    $b8e5621826152c93$var$currentScene?.update(deltaSeconds);\n    $b8e5621826152c93$var$cameraDolly?.update(deltaSeconds);\n}\n/**\n * Pan the camera.\n * @param {number} dx\n * @param {number} dy\n */ function $b8e5621826152c93$var$panCameraBy(dx, dy) {\n    $b8e5621826152c93$var$cameraDolly.panBy(dx, dy);\n    $b8e5621826152c93$var$cameraDolly.setTrackingMethod((0, $1e8586c4726fc461$export$17735bdb93cbf279).OFF);\n    $b8e5621826152c93$var$navigationButtons.setTrackingState(false);\n}\n/**\n * SCENE_MANAGER Singleton.\n */ const $b8e5621826152c93$var$SCENE_MANAGER = {\n    areThereMoreScenes: $b8e5621826152c93$var$areThereMoreScenes,\n    setCameraToTrack: $b8e5621826152c93$var$setCameraToTrack,\n    panCameraBy: $b8e5621826152c93$var$panCameraBy,\n    setSceneDefinitions: $b8e5621826152c93$var$setSceneDefinitions,\n    switchToFirstScene: $b8e5621826152c93$var$switchToFirstScene,\n    switchToNextScene: $b8e5621826152c93$var$switchToNextScene,\n    unloadCurrentScene: $b8e5621826152c93$var$unloadCurrentScene,\n    update: $b8e5621826152c93$var$update\n};\nvar $b8e5621826152c93$export$2e2bcd8739ae039 = $b8e5621826152c93$var$SCENE_MANAGER;\n\n\n\n/**\n * @file Timers\n *\n * @module utils/timers\n *\n * License {@link https://opensource.org/license/mit/|MIT}\n *\n * Copyright 2024 Steve Butler (henspace.com).\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the “Software”), to deal in\n * the Software without restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n * Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */ /**\n *\n * @param {number} secs\n * @returns {Promise} fulfils to null\n */ function $f65da51c58cb4dd3$export$229c72e5fdee233b(secs) {\n    return new Promise((resolve)=>{\n        setTimeout(()=>resolve(), secs * 1000);\n    });\n}\n\n\n\n\n\n/**\n * @file Main menu\n *\n * @module menus/mainMenu\n *\n * License {@link https://opensource.org/license/mit/|MIT}\n *\n * Copyright 2024 Steve Butler (henspace.com).\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the “Software”), to deal in\n * the Software without restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n * Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */ \n\n/**\n * @file Settings dialog\n *\n * @module dialogs/settingsDialog\n *\n * License {@link https://opensource.org/license/mit/|MIT}\n *\n * Copyright 2024 Steve Butler (henspace.com).\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the “Software”), to deal in\n * the Software without restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n * Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */ \n\n/** Settings */ const $76f86892cf60c694$var$SETTINGS = [\n    {\n        key: \"BLOOD_ON\",\n        label: \"Blood on\",\n        defValue: true,\n        controlType: (0, $de9cad813c8cf1e8$export$82f9c7d14b0424b).CHECKBOX,\n        persistent: true,\n        action: null\n    },\n    {\n        key: \"UNUSED\",\n        label: \"Not used yet\",\n        defValue: false,\n        controlType: (0, $de9cad813c8cf1e8$export$82f9c7d14b0424b).CHECKBOX,\n        persistent: true,\n        action: null\n    }\n];\nfunction $76f86892cf60c694$export$7da80b63b5cb0fd0() {\n    const controls = [];\n    $76f86892cf60c694$var$SETTINGS.forEach((setting)=>{\n        controls.push((0, $de9cad813c8cf1e8$export$b42320c90cd2b176)(setting));\n    });\n    return (0, $81dd6b24526c5347$export$2e2bcd8739ae039).showControlsDialog(\"Settings\", controls, \"door\");\n}\n\n\nfunction $80c5728456151bbf$export$7e05f8bc47a87cf8() {\n    const play = new (0, $de9cad813c8cf1e8$export$240946c56899011)({\n        id: \"PLAY\",\n        label: \"Play\",\n        imageNameUp: \"ui-play00.png\",\n        imageNameDown: \"ui-play01.png\",\n        internalLabel: true\n    });\n    const settings = new (0, $de9cad813c8cf1e8$export$240946c56899011)({\n        id: \"SETTINGS\",\n        label: \"Settings\",\n        imageNameUp: \"ui-settings00.png\",\n        imageNameDown: \"ui-settings01.png\",\n        internalLabel: true,\n        action: ()=>(0, $76f86892cf60c694$export$7da80b63b5cb0fd0)()\n    });\n    return (0, $81dd6b24526c5347$export$2e2bcd8739ae039).showControlsDialog(\"Welcome to the Scripted Dungeon\", [\n        settings,\n        play\n    ], \"door\");\n}\n\n\n\n/**\n * Factor that is multiplied by the maxMovesPerTurn property of an actor to determine\n * if it will bother trying to reach the hero.\n */ const $ce5abd6ee7a09c2e$var$TOO_MANY_TURNS_TO_REACH = 2;\n/**\n * Enumeration of supported events\n * @enum {number}\n */ const $ce5abd6ee7a09c2e$var$EventId = {\n    MAIN_MENU: 0,\n    CLICKED_FREE_GROUND: 1,\n    CLICKED_ENTRANCE: 2,\n    CLICKED_EXIT: 3\n};\n/**\n * Class that allows a simulated movement of an actor. The movement using\n * the route finder takes place immediately, so that the effect of the actor's\n * final position can be used to affect other actors without waiting for the normal\n * duration of the move. The actual motion can then be actioned by a subsequent call to reenact.\n *\n */ class $ce5abd6ee7a09c2e$var$ReplayableActorMover {\n    /** @type {Actor} */ #actor;\n    /** @type {AbstractModifier} */ #modifier;\n    /** @type {Position} */ #originalPosition;\n    /** @type {TileMap} */ #tileMap;\n    /** @type {RouteFinder} */ #routeFinder;\n    /**\n   *\n   * @param {Actor} actor\n   * @param {TileMap} tileMap\n   * @param {RouteFinder} routeFinder\n   */ constructor(actor, tileMap, routeFinder){\n        this.#actor = actor;\n        this.#tileMap = tileMap;\n        this.#routeFinder = routeFinder;\n    }\n    /**\n   * Move actor to hero using the route finder. The move takes place instantly\n   * but can be replayed using the replay method.\n   */ moveInstantly() {\n        this.#originalPosition = (0, $90999bd6b14cd690$export$13807d9ee5a34a42).copy(this.#actor.position);\n        const actorGridPos = this.#tileMap.worldPointToGrid(this.#actor.position);\n        const targetGridPos = this.#actor.isWandering() ? this.#getRandomGridPosition(actorGridPos, this.#actor.maxTilesPerMove) : this.#tileMap.worldPointToGrid($ce5abd6ee7a09c2e$var$heroActor.position);\n        const orthoSeparation = Math.abs(targetGridPos.x - actorGridPos.x) + Math.abs(targetGridPos.y - actorGridPos.y);\n        const maxSeparation = this.#actor.maxTilesPerMove * $ce5abd6ee7a09c2e$var$TOO_MANY_TURNS_TO_REACH;\n        if (orthoSeparation <= maxSeparation && this.#tileMap.canHeroSeeGridPoint(actorGridPos)) {\n            this.#routeFinder.actor = this.#actor;\n            let waypoints = this.#routeFinder.getDumbRouteNextTo(actorGridPos, targetGridPos, this.#actor.maxTilesPerMove);\n            if (waypoints.length > 0) {\n                this.#modifier = new (0, $6b87500f649b76df$export$c14f425b03c3e261)({\n                    path: waypoints,\n                    speed: 100\n                }, this.#actor.sprite.modifier);\n                this.#setActorsPosition(waypoints[waypoints.length - 1]);\n            }\n        }\n    }\n    /**\n   * Get a random target point.\n   * @param {Point} currentGrid\n   * @param {number} maxDistance - max movement in any direction\n   * @returns {Point}\n   */ #getRandomGridPosition(currentGrid, maxDistance) {\n        const x = $05d58a132d6b5767$export$75c671db1a13cf5f(currentGrid.x - maxDistance, currentGrid.x + maxDistance);\n        const y = $05d58a132d6b5767$export$75c671db1a13cf5f(currentGrid.y - maxDistance, currentGrid.y + maxDistance);\n        const dims = this.#tileMap.getDimsInTiles();\n        return new (0, $90999bd6b14cd690$export$baf26146a414f24a)($05d58a132d6b5767$export$e0b576e7a74416cd(x, 0, dims.width - 1), $05d58a132d6b5767$export$e0b576e7a74416cd(y, 0, dims.height - 1));\n    }\n    /**\n   * Set the actors position, updating the tile map occupancy as required.\n   * @param {Position} position\n   */ #setActorsPosition(position) {\n        const oldGridPoint = this.#tileMap.worldPointToGrid(this.#actor.position);\n        this.#actor.position = position;\n        const newGridPoint = this.#tileMap.worldPointToGrid(this.#actor.position);\n        this.#tileMap.moveTileOccupancyGridPoint(this.#actor, oldGridPoint, newGridPoint);\n    }\n    /**\n   * Restore the actor's original position.\n   */ #restorePosition() {\n        this.#setActorsPosition(this.#originalPosition);\n    }\n    /**\n   * Undertake the move defined by the modifier.\n   * @returns {Promise} fulfils to undefined.\n   */ replay() {\n        this.#restorePosition();\n        if (this.#modifier) return this.#modifier.applyAsTransientToSprite(this.#actor.sprite);\n        return Promise.resolve();\n    }\n}\n/**\n * Class used to handle multiple ReplayableActorMovers.\n */ class $ce5abd6ee7a09c2e$var$MovementReplayer {\n    /** @type {TileMap} */ #tileMap;\n    /** @type {RouteFinder} */ #routeFinder;\n    /** @type {ReplayableActorMover[]} */ #movers;\n    /**\n   *\n   * @param {TileMap} tileMap\n   * @param {RouteFinder} routeFinder\n   */ constructor(tileMap, routeFinder){\n        this.#movers = [];\n        this.#tileMap = tileMap;\n        this.#routeFinder = routeFinder;\n    }\n    /**\n   * Add the actor and move immediately to hero\n   * @param {Actor} actor\n   */ addAndMoveActor(actor) {\n        const replayableMover = new $ce5abd6ee7a09c2e$var$ReplayableActorMover(actor, this.#tileMap, this.#routeFinder);\n        replayableMover.moveInstantly();\n        this.#movers.push(replayableMover);\n    }\n    /**\n   * Replay all movements in parallel.\n   * @returns {Promise} fulfils to undefined when all movements complete.\n   */ replay() {\n        const promises = [];\n        this.#movers.forEach((mover)=>promises.push(mover.replay()));\n        return Promise.all(promises);\n    }\n}\n/**\n * Basic State class\n */ class $ce5abd6ee7a09c2e$var$State {\n    constructor(){}\n    /**\n   * Transition to a new state\n   * @returns {Promise} fulfills to null\n   */ async transitionTo(state) {\n        await this.onExit().then(()=>{\n            $ce5abd6ee7a09c2e$var$currentState = state;\n            return state.onEntry();\n        });\n    }\n    /**\n   * Perform actions on entering the state.\n   * @returns {Promise} fulfills to null\n   */ onEntry() {\n        return Promise.resolve();\n    }\n    /**\n   * Handle event.\n   * @param {number} eventId\n   * @param  {import('../sprites/sprite.js').Sprite} sprite - the sprite initiating the event\n   * @param {Object} detail - object will depend on the eventId\n   * @returns {Promise} fulfills to null\n   */ onEvent(eventIdUnused) {\n        return Promise.resolve(null);\n    }\n    /**\n   * Actions when the state exits\n   * @returns {Promise} fulfills to null\n   */ onExit() {\n        return Promise.resolve(null);\n    }\n}\n/**\n * At WaitingToStart\n */ class $ce5abd6ee7a09c2e$var$WaitingToStart extends $ce5abd6ee7a09c2e$var$State {\n    onEntry() {\n        (0, $2d5b4e7cb639ebe1$export$2e2bcd8739ae039).log(\"WaitingToStart state\");\n    }\n    /**\n   * @override\n   * @param {number} eventId\n   * @param  {import('../sprites/sprite.js').Sprite} point - the point initiating the event\n   * @param {Object} detail - object will depend on the eventId\n   */ async onEvent(eventId, pointUnused, detailUnused) {\n        if (eventId === $ce5abd6ee7a09c2e$var$EventId.MAIN_MENU) this.transitionTo(new $ce5abd6ee7a09c2e$var$AtMainMenu());\n    }\n}\n/**\n * At main Menu\n */ class $ce5abd6ee7a09c2e$var$AtMainMenu extends $ce5abd6ee7a09c2e$var$State {\n    onEntry() {\n        const play = new (0, $de9cad813c8cf1e8$export$240946c56899011)({\n            id: \"PLAY\",\n            label: \"Play\",\n            imageNameUp: \"hero-idle00.png\",\n            imageNameDown: \"hero-idle01.png\",\n            internalLabel: true\n        });\n        return (0, $80c5728456151bbf$export$7e05f8bc47a87cf8)().then(()=>this.transitionTo(new $ce5abd6ee7a09c2e$var$AtStart()));\n    }\n}\n/**\n * At start state\n */ class $ce5abd6ee7a09c2e$var$AtStart extends $ce5abd6ee7a09c2e$var$State {\n    onEntry() {\n        (0, $2d5b4e7cb639ebe1$export$2e2bcd8739ae039).log(\"Enter AtStart\");\n        return (0, $81dd6b24526c5347$export$2e2bcd8739ae039).showOkDialog(\"You are in a dark and dingy dungeon.\", \"Conquer it!\", \"wall\").then(()=>(0, $b8e5621826152c93$export$2e2bcd8739ae039).switchToFirstScene()).then(()=>{\n            $ce5abd6ee7a09c2e$var$heroActor.sprite.position = (0, $f8633d94d0c88c58$export$2e2bcd8739ae039).getTileMap().getWorldPositionOfTileByEntry();\n            return $ce5abd6ee7a09c2e$var$currentState.transitionTo(new $ce5abd6ee7a09c2e$var$HeroTurnIdle());\n        });\n    }\n}\n/**\n * At Game Over\n */ class $ce5abd6ee7a09c2e$var$AtGameOver extends $ce5abd6ee7a09c2e$var$State {\n    async onEntry() {\n        (0, $2d5b4e7cb639ebe1$export$2e2bcd8739ae039).log(\"Enter AtGameOver\");\n        (0, $ae446a5a8f069dac$export$dc0b517182376fca)(\"YOU DIED!\", {\n            lifetimeSecs: 2,\n            position: $ce5abd6ee7a09c2e$var$heroActor.position,\n            velocity: new (0, $90999bd6b14cd690$export$4a23b3811cef465)(0, -100, 0)\n        });\n        await (0, $f65da51c58cb4dd3$export$229c72e5fdee233b)(2).then(()=>(0, $81dd6b24526c5347$export$2e2bcd8739ae039).showOkDialog(\"Game over. You died.\", \"Try again\")).then(()=>(0, $b8e5621826152c93$export$2e2bcd8739ae039).unloadCurrentScene()).then(()=>this.transitionTo(new $ce5abd6ee7a09c2e$var$AtMainMenu()));\n    }\n}\n/**\n * At Game Completed\n */ class $ce5abd6ee7a09c2e$var$AtGameCompleted extends $ce5abd6ee7a09c2e$var$State {\n    async onEntry() {\n        (0, $2d5b4e7cb639ebe1$export$2e2bcd8739ae039).log(\"Enter AtGameCompleted\");\n        await (0, $81dd6b24526c5347$export$2e2bcd8739ae039).showOkDialog(\"You've done it. Well done.\", \"Try again\").then(()=>(0, $b8e5621826152c93$export$2e2bcd8739ae039).unloadCurrentScene()).then(()=>this.transitionTo(new $ce5abd6ee7a09c2e$var$AtMainMenu()));\n    }\n}\n/**\n * State where the hero is in the map.\n */ class $ce5abd6ee7a09c2e$var$HeroTurnIdle extends $ce5abd6ee7a09c2e$var$State {\n    constructor(){\n        super();\n    }\n    /**\n   * @override\n   */ async onEntry() {\n        await super.onEntry();\n        (0, $2d5b4e7cb639ebe1$export$2e2bcd8739ae039).log(\"Enter HeroTurnIdle\");\n        await $ce5abd6ee7a09c2e$var$prepareHeroTurn();\n    }\n    /**\n   * @override\n   * @param {number} eventId\n   * @param  {import('../sprites/sprite.js').Sprite} point - the point initiating the event\n   * @param {Object} detail - object will depend on the eventId\n   */ async onEvent(eventId, point, detail) {\n        switch(eventId){\n            case $ce5abd6ee7a09c2e$var$EventId.CLICKED_FREE_GROUND:\n                if (detail?.filter === (0, $e5bc60fa707f771a$export$ea490c48f1c71643).COMBAT_TILE) (0, $2d5b4e7cb639ebe1$export$2e2bcd8739ae039).error(\"Unexpected click on combat tile ignored.\");\n                else await $ce5abd6ee7a09c2e$var$moveHeroToPoint(point);\n                this.transitionTo(new $ce5abd6ee7a09c2e$var$ComputerTurnIdle());\n                break;\n            case $ce5abd6ee7a09c2e$var$EventId.CLICKED_ENTRANCE:\n                alert(\"Wow! Leaving so early. That bit of code is not ready yet.\");\n                break;\n            case $ce5abd6ee7a09c2e$var$EventId.CLICKED_EXIT:\n                (0, $2d5b4e7cb639ebe1$export$2e2bcd8739ae039).log(\"Escaping\");\n                await $ce5abd6ee7a09c2e$var$moveHeroToPoint(point);\n                if ((0, $b8e5621826152c93$export$2e2bcd8739ae039).areThereMoreScenes()) await $ce5abd6ee7a09c2e$var$startNextScene(this);\n                else this.transitionTo(new $ce5abd6ee7a09c2e$var$AtGameCompleted());\n                break;\n        }\n        return Promise.resolve(null);\n    }\n}\n/**\n * State where the hero is in the map.\n */ class $ce5abd6ee7a09c2e$var$HeroTurnFighting extends $ce5abd6ee7a09c2e$var$State {\n    constructor(){\n        super();\n    }\n    /**\n   * @override\n   */ async onEntry() {\n        await super.onEntry();\n        (0, $2d5b4e7cb639ebe1$export$2e2bcd8739ae039).log(\"Enter HeroTurnFighting\");\n        await $ce5abd6ee7a09c2e$var$prepareHeroTurn();\n    }\n    /**\n   * @override\n   * @param {number} eventId\n   * @param  {import('../sprites/sprite.js').Sprite} point - the point initiating the event\n   * @param {Object} detail - object will depend on the eventId\n   */ async onEvent(eventId, point, detail) {\n        switch(eventId){\n            case $ce5abd6ee7a09c2e$var$EventId.CLICKED_FREE_GROUND:\n                if (detail?.filter === (0, $e5bc60fa707f771a$export$ea490c48f1c71643).COMBAT_TILE) await this.#fight(point);\n                else await this.#tryToRun(point);\n                if ((0, $f8633d94d0c88c58$export$2e2bcd8739ae039).getTileMap().getParticipants($ce5abd6ee7a09c2e$var$heroActor).length === 0) this.transitionTo(new $ce5abd6ee7a09c2e$var$ComputerTurnIdle());\n                else this.transitionTo(new $ce5abd6ee7a09c2e$var$ComputerTurnFighting());\n                break;\n            case $ce5abd6ee7a09c2e$var$EventId.CLICKED_ENTRANCE:\n                alert(\"Wow! Leaving so early. That bit of code is not ready yet.\");\n                break;\n            case $ce5abd6ee7a09c2e$var$EventId.CLICKED_EXIT:\n                (0, $2d5b4e7cb639ebe1$export$2e2bcd8739ae039).log(\"Escaping\");\n                await $ce5abd6ee7a09c2e$var$moveHeroToPoint(point);\n                if ((0, $b8e5621826152c93$export$2e2bcd8739ae039).areThereMoreScenes()) await $ce5abd6ee7a09c2e$var$startNextScene(this);\n                else this.transitionTo(new $ce5abd6ee7a09c2e$var$AtGameCompleted());\n                break;\n        }\n        return Promise.resolve(null);\n    }\n    /**\n   * Fight point\n   * @param {Point} point - position in world.\n   * @returns {Promise}\n   */ #fight(point) {\n        /** @type {import('../tileMaps/tileMap.js').TileMap} */ const tileMap = (0, $f8633d94d0c88c58$export$2e2bcd8739ae039).getTileMap();\n        const tile = tileMap.getTileAtWorldPoint(point);\n        const targets = tile.getOccupants();\n        const promises = [];\n        for (const target of targets.values())if (target.interaction) promises.push(target.interaction.react($ce5abd6ee7a09c2e$var$heroActor));\n        return Promise.all(promises);\n    }\n    /**\n   * Try to run\n   * @param {Point} point - position in world.\n   * @returns {Promise}\n   */ #tryToRun(point) {\n        const opponents = (0, $f8633d94d0c88c58$export$2e2bcd8739ae039).getTileMap().getParticipants($ce5abd6ee7a09c2e$var$heroActor);\n        for (const opponent of opponents){\n            if (opponent.alive && !opponent.interaction.allowEscape($ce5abd6ee7a09c2e$var$heroActor)) return Promise.resolve(false);\n        }\n        return $ce5abd6ee7a09c2e$var$moveHeroToPoint(point);\n    }\n}\nclass $ce5abd6ee7a09c2e$var$ComputerTurnIdle extends $ce5abd6ee7a09c2e$var$State {\n    constructor(){\n        super();\n    }\n    async onEntry() {\n        await super.onEntry();\n        (0, $2d5b4e7cb639ebe1$export$2e2bcd8739ae039).log(\"Enter ComputerTurnIdle\");\n        const tileMap = (0, $f8633d94d0c88c58$export$2e2bcd8739ae039).getTileMap();\n        const routeFinder = new (0, $2d040b97465ee48e$export$4c535f8fc4520664)(tileMap);\n        const replayer = new $ce5abd6ee7a09c2e$var$MovementReplayer(tileMap, routeFinder);\n        const heroGridPoint = tileMap.worldPointToGrid($ce5abd6ee7a09c2e$var$heroActor.position);\n        for (const actor of (0, $f8633d94d0c88c58$export$2e2bcd8739ae039).getActors().values())if (actor !== $ce5abd6ee7a09c2e$var$heroActor && actor.alive) {\n            if (actor.isWandering()) {\n                const actorGridPoint = tileMap.worldPointToGrid(actor.position);\n                if (!actorGridPoint.isOtherClose(heroGridPoint, 1.5)) replayer.addAndMoveActor(actor);\n            } else replayer.addAndMoveActor(actor);\n        }\n        await replayer.replay();\n        if (tileMap.getParticipants($ce5abd6ee7a09c2e$var$heroActor).length === 0) this.transitionTo(new $ce5abd6ee7a09c2e$var$HeroTurnIdle());\n        else this.transitionTo(new $ce5abd6ee7a09c2e$var$HeroTurnFighting());\n        return Promise.resolve(null);\n    }\n}\nclass $ce5abd6ee7a09c2e$var$ComputerTurnFighting extends $ce5abd6ee7a09c2e$var$State {\n    constructor(){\n        super();\n    }\n    async onEntry() {\n        await super.onEntry();\n        (0, $2d5b4e7cb639ebe1$export$2e2bcd8739ae039).log(\"Enter ComputerTurnFighting\");\n        const tileMap = (0, $f8633d94d0c88c58$export$2e2bcd8739ae039).getTileMap();\n        const routeFinder = new (0, $2d040b97465ee48e$export$4c535f8fc4520664)(tileMap);\n        const replayer = new $ce5abd6ee7a09c2e$var$MovementReplayer(tileMap, routeFinder);\n        const participants = tileMap.getParticipants($ce5abd6ee7a09c2e$var$heroActor);\n        for (const actor of (0, $f8633d94d0c88c58$export$2e2bcd8739ae039).getActors().values())if (actor !== $ce5abd6ee7a09c2e$var$heroActor && actor.alive) {\n            if (participants.includes(actor)) await actor.interaction.enact($ce5abd6ee7a09c2e$var$heroActor);\n            else replayer.addAndMoveActor(actor);\n        }\n        await replayer.replay();\n        if ($ce5abd6ee7a09c2e$var$heroActor.traits.get(\"HP\") === 0) this.transitionTo(new $ce5abd6ee7a09c2e$var$AtGameOver());\n        else if (participants.length === 0) this.transitionTo(new $ce5abd6ee7a09c2e$var$HeroTurnIdle());\n        else this.transitionTo(new $ce5abd6ee7a09c2e$var$HeroTurnFighting());\n        return Promise.resolve(null);\n    }\n}\n/**\n * Prepare hero turn\n * @returns {Promise}\n */ function $ce5abd6ee7a09c2e$var$prepareHeroTurn() {\n    const tileMap = (0, $f8633d94d0c88c58$export$2e2bcd8739ae039).getTileMap();\n    const routes = new (0, $2d040b97465ee48e$export$4c535f8fc4520664)(tileMap, $ce5abd6ee7a09c2e$var$heroActor).getAllRoutesFrom(tileMap.worldPointToGrid($ce5abd6ee7a09c2e$var$heroActor.sprite.position), $ce5abd6ee7a09c2e$var$heroActor.maxTilesPerMove);\n    tileMap.setMovementRoutes(routes);\n    tileMap.setCombatActors(tileMap.getParticipants($ce5abd6ee7a09c2e$var$heroActor));\n    return Promise.resolve(null);\n}\n/**\n * Move to point\n * @param {Point} point\n * @returns {Promise}\n */ function $ce5abd6ee7a09c2e$var$moveHeroToPoint(point) {\n    const tileMap = (0, $f8633d94d0c88c58$export$2e2bcd8739ae039).getTileMap();\n    const waypoints = tileMap.getWaypointsToWorldPoint(point);\n    tileMap.setMovementRoutes(null);\n    tileMap.setCombatActors(null);\n    if (waypoints) {\n        const modifier = new (0, $6b87500f649b76df$export$c14f425b03c3e261)({\n            path: waypoints,\n            speed: 100\n        }, $ce5abd6ee7a09c2e$var$heroActor.sprite.modifier);\n        return modifier.applyAsTransientToSprite($ce5abd6ee7a09c2e$var$heroActor.sprite);\n    } else return Promise.resolve();\n}\n/**\n * Start next scene.\n * @param {State} currentState\n * @returns {Promise} fulfils to undefined.\n */ function $ce5abd6ee7a09c2e$var$startNextScene(currentState) {\n    return (0, $b8e5621826152c93$export$2e2bcd8739ae039).switchToNextScene().then(()=>{\n        $ce5abd6ee7a09c2e$var$heroActor.sprite.position = (0, $f8633d94d0c88c58$export$2e2bcd8739ae039).getTileMap().getWorldPositionOfTileByEntry();\n        return currentState.transitionTo(new $ce5abd6ee7a09c2e$var$HeroTurnIdle());\n    });\n}\n/**\n * Trigger an event. This will then be passed to the current State to handle.\n * @param {number} eventId\n * @param  {import('../sprites/sprite.js').Sprite} sprite - the sprite initiating the event\n * @param {Object} detail - object will depend on the eventId\n */ function $ce5abd6ee7a09c2e$var$triggerEvent(eventId, sprite, detail) {\n    if ($ce5abd6ee7a09c2e$var$ignoreEvents) {\n        (0, $2d5b4e7cb639ebe1$export$2e2bcd8739ae039).debug(`Ignoring event ${eventId} as still processing earlier event.`);\n        return;\n    }\n    $ce5abd6ee7a09c2e$var$ignoreEvents = true;\n    $ce5abd6ee7a09c2e$var$currentState.onEvent(eventId, sprite, detail).then(()=>{\n        $ce5abd6ee7a09c2e$var$ignoreEvents = false;\n    });\n}\n/**\n * Set the current hero sprite.\n * @returns {import('./actors.js').Actor}\n */ function $ce5abd6ee7a09c2e$var$getHeroActor() {\n    return $ce5abd6ee7a09c2e$var$heroActor;\n}\n/**\n * Start\n * @param {import('./actors.js').Actor} actor - the hero actor\n */ function $ce5abd6ee7a09c2e$var$setHero(actor) {\n    $ce5abd6ee7a09c2e$var$heroActor = actor;\n}\n/**\n * @type {import('./actors.js').Actor}\n */ let $ce5abd6ee7a09c2e$var$heroActor;\n/**\n * @type {State}\n */ let $ce5abd6ee7a09c2e$var$currentState = new $ce5abd6ee7a09c2e$var$WaitingToStart();\n/**\n * Flag to determine whether events are accepted.\n */ let $ce5abd6ee7a09c2e$var$ignoreEvents = false;\n/**\n * Single instance of the turn manager.\n */ const $ce5abd6ee7a09c2e$var$TURN_MANAGER = {\n    EventId: $ce5abd6ee7a09c2e$var$EventId,\n    getHeroActor: $ce5abd6ee7a09c2e$var$getHeroActor,\n    setHero: $ce5abd6ee7a09c2e$var$setHero,\n    triggerEvent: $ce5abd6ee7a09c2e$var$triggerEvent\n};\nvar $ce5abd6ee7a09c2e$export$2e2bcd8739ae039 = $ce5abd6ee7a09c2e$var$TURN_MANAGER;\n\n\nconst $e5bc60fa707f771a$export$ea490c48f1c71643 = {\n    MOVEMENT_TILE: 0,\n    COMBAT_TILE: 1\n};\nconst $e5bc60fa707f771a$export$b57fd20cbd2711c3 = {\n    OBSTACLE: -1,\n    GROUND: 0,\n    ENTRANCE: 1,\n    EXIT: 2,\n    STAIRS_UP: 3,\n    STAIRS_DOWN: 4\n};\nclass $e5bc60fa707f771a$export$235cb65c20ad2b7 extends (0, $0244e696098defc3$export$a82f6454288e7804) {\n    /** @type {Sprite} */ sprite;\n    /** @type {boolean} */ obstacle;\n    /** @type {import('../game/actors.js').Actor[]} */ #occupants;\n    /** @type {Point} */ #gridPoint;\n    /** @type {Point} */ #worldPoint;\n    /** @type {TileRole} */ #role;\n    /** Construct tile\n   * @param {Sprite} tileSprite;\n   * @param {Object} options;\n   * @param {boolean} options.obstacle;\n   * @param {!Point} options.gridPoint;\n   * @param {!Point} options.worldPoint;\n   * @param {TileRole} options.role;\n   */ constructor(tileSprite, options){\n        super();\n        this.sprite = tileSprite;\n        this.#occupants = new Map();\n        this.obstacle = options.obstacle;\n        this.#gridPoint = options.gridPoint;\n        this.#worldPoint = options.worldPoint;\n        this.#role = options.role;\n    }\n    /**\n   * Get the role.\n   */ get role() {\n        return this.#role;\n    }\n    /**\n   * Get the grid point.\n   * @returns {Point}\n   */ get gridPoint() {\n        return this.#gridPoint;\n    }\n    /**\n   * Get the world point.\n   * @returns {Point}\n   */ get worldPoint() {\n        return this.#worldPoint;\n    }\n    /** Add occupant.\n   * @param {import('../game/actors.js').Actor\n   */ addOccupant(occupant) {\n        this.#occupants.set(occupant, occupant);\n    }\n    /** Remove occupant.\n   * @param {import('../game/actors.js').Actor}\n   */ deleteOccupant(occupant) {\n        this.#occupants.delete(occupant);\n    }\n    /** get occupants.\n   * @param {import('../game/actors.js').Actor[]}\n   */ getOccupants() {\n        return this.#occupants;\n    }\n    /**\n   * Handle the click but change the point to the sprites' position\n   */ actionClick(pointUnused) {\n        super.actionClick(this.sprite.position);\n    }\n    /**\n   * Handle the click but change the point to the sprites' position\n   */ actionContextClick(pointUnused) {\n        super.actionClick(this.sprite.position);\n    }\n    /**\n   * Test if occupied\n   * @returns {boolean}\n   */ isOccupied() {\n        return this.#occupants.size > 0;\n    }\n    /**\n   * Test if tile can be passed by the actor\n   * @param {Object} actor\n   * @returns {boolean}\n   */ isPassableByActor(actor) {\n        if (this.obstacle) return false;\n        for (const occupant of this.#occupants.values()){\n            if (occupant !== actor && !occupant.isPassableByActor(actor)) return false;\n        }\n        return true;\n    }\n    /**\n   * Test if tile can be occupied by the actor\n   * @param {Object} actor\n   * @returns {boolean}\n   */ canBeOccupiedByActor(actor) {\n        if (this.obstacle) return false;\n        for (const occupant of this.#occupants.values()){\n            if (occupant !== actor && !occupant.canShareLocationWithActor(actor)) return false;\n        }\n        return true;\n    }\n    /**\n   * Test if tile can be seen through by the actor\n   * @param {Object} actor\n   * @returns {boolean}\n   */ isSeeThrough(actorUnused) {\n        if (this.obstacle || this.#role === $e5bc60fa707f771a$export$b57fd20cbd2711c3.ENTRANCE || this.#role === $e5bc60fa707f771a$export$b57fd20cbd2711c3.EXIT) return false;\n        return true;\n    }\n}\nclass $e5bc60fa707f771a$export$16ec26812de3ce7a {\n    /** @type {CanvasRenderingContext2D} */ #context;\n    /** @type {Tile[]} */ #tiles;\n    #tilesX;\n    #tilesY;\n    #gridSize;\n    #width;\n    #height;\n    /** @type {import('./pathFinder.js').Routes} */ #movementRoutes;\n    /** @type {Point{}} */ #movementGridPoints;\n    /** @type {Sprite} */ #movementTileHighlighter;\n    /** @type {Tile} */ #entrance;\n    /** @type {Tile} */ #exit;\n    /** @type {Point} */ #entryGridPointByDoor;\n    /** @type {Point} */ #exitGridPointByDoor;\n    /** @type {Tile[]} */ #randomGround;\n    /** @type {RayTracer} */ #heroRayTracer;\n    /** @type {Tile[]} */ #combatTileGridPoints;\n    /** @type {Sprite} */ #combatTileHighlighter;\n    /**\n   * Create tile map from 2D matrix\n   * @param {CanvasRenderingContext2D} context\n   * @param {TilePlan} plan\n   * @param {number} gridSize - in world coordinates\n   */ constructor(context, plan, gridSize){\n        const matrix = plan.matrix;\n        this.#entryGridPointByDoor = plan.entryPointByDoor;\n        this.#exitGridPointByDoor = plan.exitPointByDoor;\n        this.#context = context;\n        this.#movementTileHighlighter = new (0, $5b82fcc8e5572650$export$3075603db8e6204c)({\n            renderer: new (0, $f1adbd10d5a753d6$export$bea6a7ef06354cc)(context, {\n                width: gridSize,\n                height: gridSize,\n                fillStyle: null,\n                strokeStyle: \"white\"\n            })\n        });\n        this.#combatTileHighlighter = new (0, $5b82fcc8e5572650$export$3075603db8e6204c)({\n            renderer: new (0, $f1adbd10d5a753d6$export$bea6a7ef06354cc)(context, {\n                width: gridSize,\n                height: gridSize,\n                fillStyle: null,\n                strokeStyle: \"red\"\n            })\n        });\n        this.#gridSize = gridSize;\n        this.#tiles = [];\n        this.#tilesY = matrix.length;\n        this.#tilesX = matrix[0].length;\n        this.#width = gridSize * this.tilesX;\n        this.#height = gridSize * this.tilesY;\n        this.#randomGround = [];\n        matrix.forEach((row, rowIndex)=>{\n            const tileRow = [];\n            this.#tiles.push(tileRow);\n            row.forEach((tileDefn, columnIndex)=>{\n                if (tileDefn) {\n                    const sprite = new (0, $5b82fcc8e5572650$export$3075603db8e6204c)({\n                        renderer: new (0, $f1adbd10d5a753d6$export$c1626e6e036a584)(context, (0, $5840285c35321464$export$2e2bcd8739ae039).getSpriteBitmap(0, tileDefn.image))\n                    });\n                    const gridPoint = new (0, $90999bd6b14cd690$export$baf26146a414f24a)(columnIndex, rowIndex);\n                    const worldPoint = this.gridPointToWorldPoint(gridPoint);\n                    let tile = new $e5bc60fa707f771a$export$235cb65c20ad2b7(sprite, {\n                        obstacle: tileDefn.role === $e5bc60fa707f771a$export$b57fd20cbd2711c3.OBSTACLE,\n                        gridPoint: gridPoint,\n                        worldPoint: worldPoint,\n                        role: tileDefn.role\n                    });\n                    if (tileDefn.onClick) {\n                        tile.setOnClick((target, point)=>this.#filterClick(target, point, tileDefn.onClick));\n                        tile.setOnContextClick(tileDefn.onContextClick);\n                    }\n                    this.processTileRole(tile);\n                    tileRow.push(tile);\n                    sprite.position.x = columnIndex * this.#gridSize + this.#gridSize / 2;\n                    sprite.position.y = rowIndex * this.#gridSize + this.#gridSize / 2;\n                } else tileRow.push(null);\n            });\n        });\n        if (!this.#entrance) {\n            (0, $2d5b4e7cb639ebe1$export$2e2bcd8739ae039).error(\"No entrance has been set. Setting to the first ground tile\");\n            this.#entrance = this.#randomGround[0];\n        }\n    }\n    /**\n   * Get tilemap dimensions in terms of number of tiles.\n   * @returns {import('../geometry.js').Dims2D}\n   */ getDimsInTiles() {\n        return {\n            width: this.#tilesX,\n            height: this.#tilesY\n        };\n    }\n    /**\n   * Process a tile's specific role.\n   * @param {Tile} tile\n   */ processTileRole(tile) {\n        switch(tile.role){\n            case $e5bc60fa707f771a$export$b57fd20cbd2711c3.ENTRANCE:\n                if (this.#entrance) {\n                    const gp = tile.gridPoint;\n                    (0, $2d5b4e7cb639ebe1$export$2e2bcd8739ae039).error(`Duplicate entrance found at (${gp.x}, ${gp.y}). Ignored.`);\n                } else this.#entrance = tile;\n                break;\n            case $e5bc60fa707f771a$export$b57fd20cbd2711c3.EXIT:\n                if (this.#exit) {\n                    const gp = tile.gridPoint;\n                    (0, $2d5b4e7cb639ebe1$export$2e2bcd8739ae039).error(`Duplicate exit found at (${gp.x}, ${gp.y}). Ignored.`);\n                } else this.#exit = tile;\n                break;\n            case $e5bc60fa707f771a$export$b57fd20cbd2711c3.GROUND:\n                if (!tile.gridPoint.coincident(this.#entryGridPointByDoor)) this.#randomGround.push(tile);\n                break;\n        }\n    }\n    /**\n   * Update method to render tiles.\n   * @param {number} deltaSeconds - elapsed time.\n   */ update(deltaSeconds) {\n        this.#setRayTracer();\n        const visibleGridPoints = this.getVisibleGridPointRect();\n        for(let row = visibleGridPoints.y; row <= visibleGridPoints.y + visibleGridPoints.height; row++){\n            for(let col = visibleGridPoints.x; col <= visibleGridPoints.x + visibleGridPoints.width; col++)if (this.#heroRayTracer?.isGridPointInRays(new (0, $90999bd6b14cd690$export$baf26146a414f24a)(col, row))) {\n                const tile = this.#tiles[row][col];\n                tile?.sprite.update(deltaSeconds);\n            }\n        }\n        this.#highlightTiles(deltaSeconds);\n    }\n    /**\n   * Set up the ray tracer if not already set.\n   */ #setRayTracer() {\n        const hero = (0, $ce5abd6ee7a09c2e$export$2e2bcd8739ae039).getHeroActor();\n        if (hero) {\n            if (!this.#heroRayTracer) this.#heroRayTracer = new (0, $2d040b97465ee48e$export$e832cee54e4e1a4d)(this, hero);\n            const heroTile = this.getTileAtWorldPoint(hero.position);\n            if (heroTile) {\n                const heroTileRole = heroTile.role;\n                if (heroTileRole != $e5bc60fa707f771a$export$b57fd20cbd2711c3.ENTRANCE && heroTileRole != $e5bc60fa707f771a$export$b57fd20cbd2711c3.EXIT) this.#heroRayTracer.findReachedTiles();\n            } else (0, $2d5b4e7cb639ebe1$export$2e2bcd8739ae039).error(`Hero at ${hero.position.toString()} but no tile found.`);\n        }\n    }\n    /**\n   * Get the tilemap bounds as a rectangle in gridpoints.\n   * @returns {Rectangle}\n   */ getMapGridPointRect() {\n        return new (0, $90999bd6b14cd690$export$4617fb02663045ef)(0, 0, this.#tilesX, this.#tilesY);\n    }\n    /**\n   * Get the visible bounds as a rectangle in gridpoints.\n   * @returns {Rectangle}\n   */ getVisibleGridPointRect() {\n        const visibleBounds = (0, $a1820c190f7a8b2e$export$2e2bcd8739ae039).getWorldInCanvasBounds();\n        const gridPointTL = this.worldPointToGrid(new (0, $90999bd6b14cd690$export$baf26146a414f24a)(visibleBounds.x, visibleBounds.y));\n        const gridPointBR = this.worldPointToGrid(new (0, $90999bd6b14cd690$export$baf26146a414f24a)(visibleBounds.x + visibleBounds.width, visibleBounds.y + visibleBounds.height));\n        const minCol = Math.max(0, gridPointTL.x);\n        const maxCol = Math.min(this.#tilesX - 1, gridPointBR.x);\n        const minRow = Math.max(0, gridPointTL.y);\n        const maxRow = Math.min(this.#tilesY - 1, gridPointBR.y);\n        return new (0, $90999bd6b14cd690$export$4617fb02663045ef)(minCol, minRow, maxCol - minCol, maxRow - minRow);\n    }\n    /**\n   * Get the gridsize\n   * @returns {number}\n   */ getGridSize() {\n        return this.#gridSize;\n    }\n    /** Get world dimensions.\n   * @returns {import('../geometry.js').Dims2D}\n   */ getDimensions() {\n        return {\n            width: this.#width,\n            height: this.#height\n        };\n    }\n    /**\n   * Get sprite at position.\n   * @param {Point} point - in world coordinates.\n   * @returns {Tile} null if no tile.\n   */ getTileAtWorldPoint(point) {\n        const gridPoint = this.worldPointToGrid(point);\n        return this.getTileAtGridPoint(gridPoint);\n    }\n    /**\n   * Get sprite at position.\n   * @param {Point} point - in grid coordinates.\n   * @returns {Tile} null if no tile.\n   */ getTileAtGridPoint(gridPoint) {\n        if (!gridPoint) return null;\n        const row = gridPoint.y;\n        const col = gridPoint.x;\n        if (col >= 0 && row >= 0 && col < this.#tilesX && row < this.#tilesY) return this.#tiles[row][col];\n        return null;\n    }\n    /**\n   * Convert world coordinate to mad grid reference.\n   * @param {Point} point\n   * @returns {Point}\n   */ worldPointToGrid(point) {\n        return new (0, $90999bd6b14cd690$export$baf26146a414f24a)(Math.floor(point.x / this.#gridSize), Math.floor(point.y / this.#gridSize));\n    }\n    /**\n   * Get a world point aligned to the centre of a tile\n   * @param {Point} point\n   */ gridAlignedWorldPoint(point) {\n        const gridPoint = this.worldPointToGrid(point);\n        return this.gridPointToWorldPoint(gridPoint);\n    }\n    /** Convert a point in tile coordinates to world coordinates.\n   * @param {Point}\n   * @returns {Point}\n   */ gridPointToWorldPoint(point) {\n        const halfGrid = 0.5 * this.#gridSize;\n        return new (0, $90999bd6b14cd690$export$baf26146a414f24a)(point.x * this.#gridSize + halfGrid, point.y * this.#gridSize + halfGrid);\n    }\n    /** Get the world position of the entrance. The default is the first tile if there\n   * is no door\n   * @returns {Point}\n   */ getWorldPositionOfTileByEntry() {\n        return this.gridPointToWorldPoint(this.#entryGridPointByDoor);\n    }\n    /** Get the grid position of the door at index. If there are no doors, then\n   * the entrance is the first ground tile\n   * @returns {Point}\n   */ getGridPositionOfEntrance() {\n        return this.#entrance.gridPoint;\n    }\n    /**\n   * Set the highlighted routes.\n   * @param {*} routes\n   */ setMovementRoutes(routes) {\n        this.#movementRoutes = routes;\n        if (routes) {\n            this.#movementGridPoints = new Map();\n            this.#movementRoutes.forEach((gridPoints)=>gridPoints.forEach((gridPoint)=>{\n                    this.#movementGridPoints.set(gridPoint, gridPoint);\n                }));\n        } else this.#movementGridPoints = null;\n    }\n    /**\n   * Set combat tiles\n   * @param {Actor[]} actors - actors where combat can take place.\n   */ setCombatActors(actors) {\n        this.#combatTileGridPoints = [];\n        actors?.forEach((actor)=>{\n            this.#combatTileGridPoints.push(this.worldPointToGrid(actor.position));\n        });\n    }\n    /**\n   * Highlight routes marked by the highlighters. There are three possible highlights:\n   * movement, combat and interaction.\n   * @param {number} deltaSeconds\n   */ #highlightTiles(deltaSeconds) {\n        this.#highlightMovementTiles(deltaSeconds);\n        this.#highlightCombatTiles(deltaSeconds);\n    }\n    /**\n   * Highlight movement routes.\n   * @param {number} deltaSeconds\n   */ #highlightMovementTiles(deltaSeconds) {\n        this.#movementGridPoints?.forEach((gridPoint)=>{\n            this.#movementTileHighlighter.position = this.gridPointToWorldPoint(gridPoint);\n            this.#movementTileHighlighter.update(deltaSeconds);\n        });\n    }\n    /**\n   * Highlight movement routes.\n   * @param {number} deltaSeconds\n   */ #highlightCombatTiles(deltaSeconds) {\n        this.#combatTileGridPoints?.forEach((gp)=>{\n            this.#combatTileHighlighter.position = this.gridPointToWorldPoint(gp);\n            this.#combatTileHighlighter.update(deltaSeconds);\n        });\n    }\n    /**\n   * Handle a tile click.\n   * To be actioned a tile must be in the highlightedRoutes\n   * @param {Sprite} target - the sprite that was clicked. This prevents the need\n   * to use 'this' which may not be correct in the context.\n   * @param {Point} point - the position in the world that was clicked\n   * @param {import('../sprites/sprite.js').SpriteClickHandler} clickHandler\n   */ #filterClick(target, point, clickHandler) {\n        if (this.#movementRoutes?.containsGridPoint(this.worldPointToGrid(point))) {\n            clickHandler(target, point, {\n                filter: $e5bc60fa707f771a$export$ea490c48f1c71643.MOVEMENT_TILE\n            });\n            return;\n        }\n        const gridPoint = this.worldPointToGrid(point);\n        this.#combatTileGridPoints?.forEach((gp)=>{\n            if (gp.isCoincident(gridPoint)) {\n                clickHandler(target, point, {\n                    filter: $e5bc60fa707f771a$export$ea490c48f1c71643.COMBAT_TILE\n                });\n                return;\n            }\n        });\n        (0, $2d5b4e7cb639ebe1$export$2e2bcd8739ae039).debug(\"Ignore click outside of highlighted area\");\n    }\n    /**\n   * Get waypoints to reach destination grid point\n   * @param {Point} worldPoint - destination\n   * @returns {Point[]} null if no route currently found.\n   */ getWaypointsToWorldPoint(worldPoint) {\n        const destination = this.worldPointToGrid(worldPoint);\n        return this.#movementRoutes?.getWaypointsAsWorldPoints(destination);\n    }\n    /**\n   * Get a random unoccupied ground tile.\n   * @returns {Tile} null if no free ground tile.\n   */ getRandomFreeGroundTile() {\n        (0, $27af28d7e434b74b$export$f3448602f079b6d0)(this.#randomGround);\n        for (const tile of this.#randomGround){\n            if (!tile.isOccupied()) return tile;\n        }\n        return null;\n    }\n    /**\n   * Test if point is passable.\n   * @param {Point} gridPoint - row and col coordinates.\n   * @param {import('../game/actors.js').Actor} actor - actor trying to pass\n   * @returns {boolean}\n   */ isGridPointPassableByActor(gridPoint, actor) {\n        const tile = this.getTileAtGridPoint(gridPoint);\n        if (!tile) return false;\n        return tile.isPassableByActor(actor);\n    }\n    /**\n   * Test if tile can be occupied by the actor\n   * @param {Point} gridPoint - row and col coordinates.\n   * @param {import('../game/actors.js').Actor} actor - actor trying to occupy location\n   * @returns {boolean}\n   */ canGridPointBeOccupiedByActor(gridPoint, actor) {\n        const tile = this.getTileAtGridPoint(gridPoint);\n        if (!tile) return false;\n        return tile.canBeOccupiedByActor(actor);\n    }\n    /**\n   * Is the grid point visible by the hero.\n   * @param {Point} gridPoint\n   * @returns {boolean}\n   */ canHeroSeeGridPoint(gridPoint) {\n        return this.#heroRayTracer?.isGridPointInRays(gridPoint) ?? true;\n    }\n    /**\n   * Test if point can be seen through.\n   * @param {Point} gridPoint - row and col coordinates.\n   * @param {import('../game/actors.js').Actor} actor - actor trying to see\n   * @returns {boolean}\n   */ isSeeThrough(gridPoint, actor) {\n        const tile = this.getTileAtGridPoint(gridPoint);\n        if (!tile) return true;\n        return tile.isSeeThrough(actor);\n    }\n    /**\n   * Get the tiles surrounding a reference.\n   * @param {Point} gridPoint\n   */ getSurroundingTiles(gridPoint) {\n        return (0, $27af28d7e434b74b$export$7c548b14ef6e7713)(this.#tiles, gridPoint.y, gridPoint.x);\n    }\n    /**\n   * Removed occupant from the list of occupants\n   * of the tile at the grid point.\n   * @param {Object} occupant\n   * @param {Point} gridPoint\n   */ deleteOccupancyOfGridPoint(occupant, gridPoint) {\n        this.getTileAtGridPoint(gridPoint)?.deleteOccupant(occupant);\n    }\n    /**\n   * Set the object's tile occupancy. It is removed from the list of occupants\n   * of the tile at the previous point and added to those of the next.\n   * @param {Object} occupant\n   * @param {Point} oldGridPoint\n   * @param {Point} newGridPoint\n   */ moveTileOccupancyGridPoint(occupant, oldGridPoint, newGridPoint) {\n        if (newGridPoint !== oldGridPoint) {\n            this.getTileAtGridPoint(oldGridPoint)?.deleteOccupant(occupant);\n            this.getTileAtGridPoint(newGridPoint)?.addOccupant(occupant);\n        }\n    }\n    /**\n   * Get all the participants around an actor. Diagonals are not included in\n   * potential participants.\n   * @param {Actor} actor\n   * @returns {Actor[]}\n   */ getParticipants(actor) {\n        const participants = [];\n        const surrounds = this.getSurroundingTiles(this.worldPointToGrid(actor.position));\n        const tiles = [\n            surrounds.above,\n            surrounds.right,\n            surrounds.below,\n            surrounds.left\n        ];\n        tiles.forEach((tile)=>{\n            let tileOccupants = tile?.getOccupants();\n            tileOccupants?.forEach((occupant)=>{\n                participants.push(occupant);\n            });\n        });\n        return participants;\n    }\n}\n\n\n\n\n\n\n/**\n * @file Conversion of map plan keys to images and tile definitions.\n *\n * @module scriptReaders/symbolMapping\n *\n * License {@link https://opensource.org/license/mit/|MIT}\n *\n * Copyright 2024 Steve Butler (henspace.com).\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the “Software”), to deal in\n * the Software without restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n * Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */ \n\n/**\n * @typedef {import('./tileMap.js').TileDefinition} TileDefinition\n */ /**\n * @param {string} imageName\n * @returns {TileDefinition}\n */ function $611de0d332640d82$var$createGroundDefn(imageName) {\n    return {\n        role: (0, $e5bc60fa707f771a$export$b57fd20cbd2711c3).GROUND,\n        onClick: (target, point, detail)=>(0, $ce5abd6ee7a09c2e$export$2e2bcd8739ae039).triggerEvent((0, $ce5abd6ee7a09c2e$export$2e2bcd8739ae039).EventId.CLICKED_FREE_GROUND, point, detail),\n        image: imageName\n    };\n}\n/**\n * @param {string} imageName\n * @returns {TileDefinition}\n */ function $611de0d332640d82$var$createEntranceDefn(imageName) {\n    return {\n        role: (0, $e5bc60fa707f771a$export$b57fd20cbd2711c3).ENTRANCE,\n        onClick: (target, point, detail)=>(0, $ce5abd6ee7a09c2e$export$2e2bcd8739ae039).triggerEvent((0, $ce5abd6ee7a09c2e$export$2e2bcd8739ae039).EventId.CLICKED_ENTRANCE, point, detail),\n        image: imageName\n    };\n}\n/**\n * @param {string} imageName\n * @returns {TileDefinition}\n */ function $611de0d332640d82$var$createExitDefn(imageName) {\n    return {\n        role: (0, $e5bc60fa707f771a$export$b57fd20cbd2711c3).EXIT,\n        onClick: (target, point, detail)=>(0, $ce5abd6ee7a09c2e$export$2e2bcd8739ae039).triggerEvent((0, $ce5abd6ee7a09c2e$export$2e2bcd8739ae039).EventId.CLICKED_EXIT, point, detail),\n        image: imageName\n    };\n}\nconst $611de0d332640d82$export$7dccdb77f761a8ef = new Map([\n    [\n        \"x\",\n        {\n            role: (0, $e5bc60fa707f771a$export$b57fd20cbd2711c3).OBSTACLE,\n            image: \"block.png\"\n        }\n    ],\n    // wall parts\n    [\n        \"#-TL\",\n        {\n            role: (0, $e5bc60fa707f771a$export$b57fd20cbd2711c3).OBSTACLE,\n            image: \"wall-TL.png\"\n        }\n    ],\n    [\n        \"#-TLI\",\n        {\n            role: (0, $e5bc60fa707f771a$export$b57fd20cbd2711c3).OBSTACLE,\n            image: \"wall-TLI.png\"\n        }\n    ],\n    [\n        \"#-T\",\n        {\n            role: (0, $e5bc60fa707f771a$export$b57fd20cbd2711c3).OBSTACLE,\n            image: \"wall-T.png\"\n        }\n    ],\n    [\n        \"#-TR\",\n        {\n            role: (0, $e5bc60fa707f771a$export$b57fd20cbd2711c3).OBSTACLE,\n            image: \"wall-TR.png\"\n        }\n    ],\n    [\n        \"#-TRI\",\n        {\n            role: (0, $e5bc60fa707f771a$export$b57fd20cbd2711c3).OBSTACLE,\n            image: \"wall-TRI.png\"\n        }\n    ],\n    [\n        \"#-R\",\n        {\n            role: (0, $e5bc60fa707f771a$export$b57fd20cbd2711c3).OBSTACLE,\n            image: \"wall-R.png\"\n        }\n    ],\n    [\n        \"#-BR\",\n        {\n            role: (0, $e5bc60fa707f771a$export$b57fd20cbd2711c3).OBSTACLE,\n            image: \"wall-BR.png\"\n        }\n    ],\n    [\n        \"#-BRI\",\n        {\n            role: (0, $e5bc60fa707f771a$export$b57fd20cbd2711c3).OBSTACLE,\n            image: \"wall-BRI.png\"\n        }\n    ],\n    [\n        \"#-B\",\n        {\n            role: (0, $e5bc60fa707f771a$export$b57fd20cbd2711c3).OBSTACLE,\n            image: \"wall-B.png\"\n        }\n    ],\n    [\n        \"#-BL\",\n        {\n            role: (0, $e5bc60fa707f771a$export$b57fd20cbd2711c3).OBSTACLE,\n            image: \"wall-BL.png\"\n        }\n    ],\n    [\n        \"#-BLI\",\n        {\n            role: (0, $e5bc60fa707f771a$export$b57fd20cbd2711c3).OBSTACLE,\n            image: \"wall-BLI.png\"\n        }\n    ],\n    [\n        \"#-L\",\n        {\n            role: (0, $e5bc60fa707f771a$export$b57fd20cbd2711c3).OBSTACLE,\n            image: \"wall-L.png\"\n        }\n    ],\n    [\n        \"#-XI\",\n        {\n            role: (0, $e5bc60fa707f771a$export$b57fd20cbd2711c3).OBSTACLE,\n            image: \"wall-XI.png\"\n        }\n    ],\n    [\n        \"#-VI\",\n        {\n            role: (0, $e5bc60fa707f771a$export$b57fd20cbd2711c3).OBSTACLE,\n            image: \"wall-VI.png\"\n        }\n    ],\n    [\n        \"#-HI\",\n        {\n            role: (0, $e5bc60fa707f771a$export$b57fd20cbd2711c3).OBSTACLE,\n            image: \"wall-HI.png\"\n        }\n    ],\n    [\n        \"#-TTEE\",\n        {\n            role: (0, $e5bc60fa707f771a$export$b57fd20cbd2711c3).OBSTACLE,\n            image: \"wall-TTEE.png\"\n        }\n    ],\n    [\n        \"#-RTEE\",\n        {\n            role: (0, $e5bc60fa707f771a$export$b57fd20cbd2711c3).OBSTACLE,\n            image: \"wall-RTEE.png\"\n        }\n    ],\n    [\n        \"#-BTEE\",\n        {\n            role: (0, $e5bc60fa707f771a$export$b57fd20cbd2711c3).OBSTACLE,\n            image: \"wall-BTEE.png\"\n        }\n    ],\n    [\n        \"#-LTEE\",\n        {\n            role: (0, $e5bc60fa707f771a$export$b57fd20cbd2711c3).OBSTACLE,\n            image: \"wall-LTEE.png\"\n        }\n    ],\n    [\n        \"#\",\n        {\n            role: (0, $e5bc60fa707f771a$export$b57fd20cbd2711c3).OBSTACLE,\n            image: \"block.png\"\n        }\n    ],\n    // doors\n    [\n        \"=-T\",\n        $611de0d332640d82$var$createExitDefn(\"door-T.png\")\n    ],\n    [\n        \"=-R\",\n        $611de0d332640d82$var$createExitDefn(\"door-R.png\")\n    ],\n    [\n        \"=-B\",\n        $611de0d332640d82$var$createExitDefn(\"door-B.png\")\n    ],\n    [\n        \"=-L\",\n        $611de0d332640d82$var$createExitDefn(\"door-L.png\")\n    ],\n    [\n        \"--T\",\n        $611de0d332640d82$var$createEntranceDefn(\"door-T.png\")\n    ],\n    [\n        \"--R\",\n        $611de0d332640d82$var$createEntranceDefn(\"door-R.png\")\n    ],\n    [\n        \"--B\",\n        $611de0d332640d82$var$createEntranceDefn(\"door-B.png\")\n    ],\n    [\n        \"--L\",\n        $611de0d332640d82$var$createEntranceDefn(\"door-L.png\")\n    ],\n    [\n        \"=\",\n        {\n            role: (0, $e5bc60fa707f771a$export$b57fd20cbd2711c3).OBSTACLE,\n            image: \"block.png\"\n        }\n    ],\n    [\n        \"-\",\n        {\n            role: (0, $e5bc60fa707f771a$export$b57fd20cbd2711c3).OBSTACLE,\n            image: \"block.png\"\n        }\n    ],\n    // ground\n    [\n        \".\",\n        $611de0d332640d82$var$createGroundDefn(\"floor.png\")\n    ],\n    [\n        \".-SBW\",\n        $611de0d332640d82$var$createGroundDefn(\"floor-SBW.png\")\n    ],\n    [\n        \".-SBE\",\n        $611de0d332640d82$var$createGroundDefn(\"floor-SBE.png\")\n    ],\n    [\n        \",-SBE\",\n        $611de0d332640d82$var$createGroundDefn(\"floor2-SBE.png\")\n    ],\n    [\n        \",-SBW\",\n        $611de0d332640d82$var$createGroundDefn(\"floor2-SBW.png\")\n    ],\n    [\n        \",\",\n        $611de0d332640d82$var$createGroundDefn(\"floor2.png\")\n    ]\n]);\n\n\n/**\n * @file Encapsulation of a Scene. A scene equates normally to a level in a\n * dungeon.\n *\n * @module utils/game/scene\n *\n * License {@link https://opensource.org/license/mit/|MIT}\n *\n * Copyright 2024 Steve Butler\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the “Software”), to deal in\n * the Software without restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n * Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */ \n\n\nclass $3751b2d81c8b6353$export$765fdbac0eda2a0b {\n    /** @type {number} */ #globalOpacity;\n    /** @type {number} */ #deltaOpacityPerSec;\n    /** @type {number} */ #fadeInSecs;\n    /** @type {number} */ #fadeOutSecs;\n    /** Fade out promise resolution @type {function}  */ #fadeOutResolve;\n    /** @type {import('./actors.js').Actor} */ heroActor;\n    /**\n   * Create the scene.\n   * @param {number} [fadeInSecs = 2]\n   * @param {number} [fadeOutSecs = 2]\n   */ constructor(fadeInSecs = 2, fadeOutSecs = 2){\n        if (fadeInSecs > 0) {\n            this.#globalOpacity = 0;\n            this.#deltaOpacityPerSec = 1 / fadeInSecs;\n        } else this.#deltaOpacityPerSec = 1;\n        this.#fadeInSecs = fadeInSecs;\n        this.#fadeOutSecs = fadeOutSecs;\n    }\n    /**\n   * Get the global opacity.\n   * @returns {number}\n   */ getOpacity() {\n        return this.#globalOpacity;\n    }\n    /**\n   * Called at start. Game waits for preload before calling initialise.\n   * @function Scene#load\n   * @returns {Promise} fulfills to null\n   */ load() {\n        return this.doLoad();\n    }\n    /**\n   * Called after load. Game waits for initialise before starting the loop.\n   * @function Scene#initialise\n   * @returns {Promise} fulfills to null\n   */ initialise() {\n        return this.doInitialise();\n    }\n    /**\n   * Called in animation phase\n   * @function Scene#update\n   * @param {number} deltaSeconds\n   */ update(deltaSeconds) {\n        (0, $a1820c190f7a8b2e$export$2e2bcd8739ae039).clearCanvas();\n        (0, $a1820c190f7a8b2e$export$2e2bcd8739ae039).setOpacity(this.#globalOpacity);\n        (0, $f8633d94d0c88c58$export$2e2bcd8739ae039).update(deltaSeconds);\n        this.doUpdate(deltaSeconds);\n        (0, $3ce6241a7c9b35c7$export$2e2bcd8739ae039).update(deltaSeconds);\n        (0, $a1820c190f7a8b2e$export$2e2bcd8739ae039).setOpacity(1);\n        if (this.#deltaOpacityPerSec !== 0) {\n            this.#globalOpacity += deltaSeconds * this.#deltaOpacityPerSec;\n            if (this.#globalOpacity > 1) {\n                this.#deltaOpacityPerSec = 0;\n                this.#globalOpacity = 1;\n            } else if (this.#globalOpacity < 0) {\n                this.#deltaOpacityPerSec = 0;\n                this.#globalOpacity = 0;\n            }\n        }\n        if (this.#fadeOutResolve && this.#globalOpacity === 0) {\n            this.#fadeOutResolve();\n            this.#fadeOutResolve = null;\n        }\n    }\n    /**\n   * Called when scene swapped out\n   * @function Scene#unload\n   * @returns {Promise} fulfills to null\n   */ unload() {\n        return this.#fadeOut().then(()=>this.doUnload());\n    }\n    /**\n   * Fade out the scene\n   * @returns {Promise} fulfils to undefined when fade complete.\n   */ #fadeOut() {\n        if (this.#fadeOutSecs > 0) {\n            this.#deltaOpacityPerSec = -1 / this.#fadeOutSecs;\n            return new Promise((resolve)=>{\n                this.#fadeOutResolve = resolve;\n            });\n        } else return Promise.resolve();\n    }\n    /**\n   * Called at start. Game waits for preload before calling initialise.\n   * This should be overridden.\n   * @returns {Promise} fulfills to null\n   */ doLoad() {\n        return Promise.resolve();\n    }\n    /**\n   * Called after load. Game waits for initialise before starting the loop.\n   * This should be overridden\n   * @returns {Promise} fulfills to null\n   */ doInitialise() {\n        return Promise.resolve();\n    }\n    /**\n   * Called in animation phase\n   * This should be overridden\n   * @param {number} deltaSeconds\n   */ doUpdate(deltaSecondsUnused) {\n        return Promise.resolve();\n    }\n    /**\n   * Called when scene swapped out\n   * This should be overridden\n   * @returns {Promise} fulfills to null\n   */ doUnload() {\n        return Promise.resolve();\n    }\n}\n\n\n\n\nconst $fee0c02ce96028b6$var$GRID_SIZE = (0, $e49c2c8387e6101d$export$2e2bcd8739ae039).TILE_SIZE;\n/** @type {Actor} */ let $fee0c02ce96028b6$var$lastHero;\nclass $fee0c02ce96028b6$export$2a8e6ebcf5b5c91 {\n    /** @type {string} */ intro;\n    /** @type {ActorDefn} */ hero;\n    /** @type {ActorDefn[]} */ enemies;\n    /** @type {string[]} */ mapDesign;\n    /**\n   * Construct an empty scene\n   */ constructor(){\n        this.enemies = [];\n        this.mapDesign = [];\n    }\n}\n/**\n * Create the hero. If the scene definition doesn't have a hero definition, the\n * lastHero is used.\n * @param {SceneDefinition} sceneDefn\n * @returns {Actor}\n */ function $fee0c02ce96028b6$var$createHero(sceneDefn) {\n    if (sceneDefn.hero) {\n        const actor = (0, $ea4c834f4d2249c2$export$2e2bcd8739ae039).get(sceneDefn.hero.id).create();\n        actor.traits = sceneDefn.hero.traits.clone();\n        $fee0c02ce96028b6$var$lastHero = actor;\n        return actor;\n    } else {\n        if (!$fee0c02ce96028b6$var$lastHero) throw new Error(\"No hero has been defined.\");\n        return $fee0c02ce96028b6$var$lastHero;\n    }\n}\n/**\n * Create the enemies.\n * @param {SceneDefinition} sceneDefn\n * @returns {Actor[]}\n */ function $fee0c02ce96028b6$var$createEnemies(sceneDefn) {\n    const enemies = [];\n    sceneDefn.enemies.forEach((enemy)=>{\n        const actor = (0, $ea4c834f4d2249c2$export$2e2bcd8739ae039).get(enemy.id).create();\n        actor.traits = enemy.traits;\n        enemies.push(actor);\n    });\n    return enemies;\n}\n/**\n * Scene created from a scene definition.\n */ class $fee0c02ce96028b6$var$ParsedScene extends (0, $3751b2d81c8b6353$export$765fdbac0eda2a0b) {\n    /** @type {SceneDefinition} */ #sceneDefn;\n    /** Construct the scene from a definition. */ constructor(sceneDefn){\n        super();\n        this.#sceneDefn = sceneDefn;\n    }\n    /** @override */ doLoad() {\n        return Promise.resolve();\n    }\n    doInitialise() {\n        const tilePlan = (0, $aa430e5af6097d50$export$5bb21ea01a6aaf38).generateTileMapPlan(this.#sceneDefn.mapDesign, (0, $611de0d332640d82$export$7dccdb77f761a8ef));\n        const tileMap = new (0, $e5bc60fa707f771a$export$16ec26812de3ce7a)((0, $a1820c190f7a8b2e$export$2e2bcd8739ae039).getContext2D(), tilePlan, $fee0c02ce96028b6$var$GRID_SIZE);\n        (0, $f8633d94d0c88c58$export$2e2bcd8739ae039).setTileMap(tileMap);\n        this.heroActor = $fee0c02ce96028b6$var$createHero(this.#sceneDefn);\n        $fee0c02ce96028b6$var$createEnemies(this.#sceneDefn).forEach((enemy)=>{\n            enemy.position = tileMap.getRandomFreeGroundTile().worldPoint;\n            (0, $f8633d94d0c88c58$export$2e2bcd8739ae039).addActor(enemy);\n        });\n        (0, $b8e5621826152c93$export$2e2bcd8739ae039).setCameraToTrack(this.heroActor.sprite, 200, 0);\n        (0, $f8633d94d0c88c58$export$2e2bcd8739ae039).addActor(this.heroActor);\n        (0, $ce5abd6ee7a09c2e$export$2e2bcd8739ae039).setHero(this.heroActor);\n        return Promise.resolve();\n    }\n    /**\n   * @override\n   */ doUpdate(deltaSecondsUnused) {\n        return;\n    }\n    /**\n   * @override\n   */ doUnload() {\n        return Promise.resolve(null);\n    }\n}\nfunction $fee0c02ce96028b6$export$cc8138686166266c(sceneDefn) {\n    return new $fee0c02ce96028b6$var$ParsedScene(sceneDefn);\n}\n\n\n/**\n * @file Dungeon and dragons properties\n *\n * @module dnd/traits\n *\n * License {@link https://opensource.org/license/mit/|MIT}\n *\n * Copyright 2024 Steve Butler (henspace.com).\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the “Software”), to deal in\n * the Software without restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n * Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */ /**\n * This is basically a Map but with the key difference that\n * only keys set during the configuration are allowed. If no keys are provided,\n * the traits are regarded as freeform and any keys are allowed.\n */ class $95c3fa23148200d5$export$74478a765f6f47fa {\n    /** Characteristics @type {Map<string, *>} */ #traits;\n    /** @type {boolean} */ #freeform;\n    /**\n   * Initialise the traits.\n   * @param {Map<string, *>} initialValues\n   */ constructor(initialValues){\n        if (initialValues) {\n            this.#traits = new Map(initialValues);\n            this.#freeform = false;\n        } else {\n            this.#traits = new Map();\n            this.#freeform = true;\n        }\n    }\n    /**\n   * @param {string} key\n   * @param {*} value\n   * @throws {Error} thrown if key invalid.\n   */ set(key, value) {\n        if (this.#freeform || this.#traits.has(key)) this.#traits.set(key, value);\n        else throw new Error(`Attempt to set invalid key '${key}'`);\n    }\n    /**\n   * Get the trait value.\n   * @param {string} key\n   * @returns {*}\n   */ get(key) {\n        return this.#traits.get(key);\n    }\n    /**\n   * Populate the traits from a string definition. The definition comprises a\n   * comma separated list of characteristics with each characteristic comprising\n   * a keyword followed by a space or equals sign and then its value.\n   * @param {string} definition\n   * @returns {ActorTraits} returns this to allow chaining.\n   * @throws {Error} if definition invalid.\n   */ setFromString(definition) {\n        definition.split(\",\").forEach((item)=>{\n            const match = item.match(/^\\s*(\\w+)\\s*[=: ]\\s*(.+?)\\s*$/);\n            if (match) this.#setAutoMaxValue(match[1], match[2]);\n            else throw new Error(`Invalid property definition'${item}'`);\n        });\n        return this;\n    }\n    /**\n   * Set the trait for key to value. If value is a fraction, then the value for\n   * the key is set to the numerator and a new key key_MAX is created, set to the\n   * denominator.\n   * @param {string} key\n   * @param {string} value\n   */ #setAutoMaxValue(key, value) {\n        const minMaxMatch = value.match(/(\\d+) *[/] *(\\d+) */);\n        if (minMaxMatch) {\n            this.#traits.set(key, minMaxMatch[1]);\n            this.#traits.set(`${key}_MAX`, minMaxMatch[2]);\n        } else this.#traits.set(key, value);\n    }\n    /**\n   * Clone traits.\n   * @return {ActorTraits}\n   */ clone() {\n        const actorTraits = new $95c3fa23148200d5$export$74478a765f6f47fa(this.#traits);\n        actorTraits.#freeform = this.#freeform;\n        return actorTraits;\n    }\n}\nclass $95c3fa23148200d5$export$939a756f171fd090 extends $95c3fa23148200d5$export$74478a765f6f47fa {\n    /**\n   *\n   * @param {Map<string, *>} initialTraits\n   */ constructor(initialTraits){\n        super(initialTraits ?? new Map([\n            [\n                \"NAME\",\n                \"mystery\"\n            ],\n            [\n                \"MOVEMENT\",\n                \"wander\"\n            ],\n            [\n                \"HP\",\n                10\n            ],\n            [\n                \"HP_MAX\",\n                10\n            ],\n            [\n                \"STR\",\n                10\n            ],\n            [\n                \"STR_MAX\",\n                10\n            ]\n        ]));\n    }\n}\n\n\n/**\n * @file Random room generator\n *\n * @module utils/tileMaps/roomGenerator\n *\n * License {@link https://opensource.org/license/mit/|MIT}\n *\n * Copyright 2024 Steve Butler (henspace.com).\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the “Software”), to deal in\n * the Software without restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n * Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */ \n\n\n\nclass $ff98e45c12875199$export$46f5471185d8bc9e {\n    #maxCols;\n    #maxRows;\n    #maxRoomCols;\n    #maxRoomRows;\n    #wallChr;\n    #floorChr;\n    #entranceChr;\n    #exitChr;\n    #landChr;\n    #dungeon;\n    /**\n   *\n   * @param {Object} options\n   * @param {number} options.minCols\n   * @param {number} options.minRows\n   * @param {number} options.maxCols\n   * @param {number} options.maxRows\n   * @param {number} options.maxRoomWidth\n   * @param {number} options.maxRoomheight\n   */ constructor(options){\n        this.#maxCols = $05d58a132d6b5767$export$75c671db1a13cf5f(options.minCols, options.maxCols);\n        this.#maxRows = $05d58a132d6b5767$export$75c671db1a13cf5f(options.minRows, options.maxRows);\n        this.#maxRoomCols = options.maxRoomCols;\n        this.#maxRoomRows = options.maxRoomRows;\n        this.#wallChr = (0, $aa430e5af6097d50$export$1b3c5bcd5a8a9304).WALL[0];\n        this.#floorChr = (0, $aa430e5af6097d50$export$1b3c5bcd5a8a9304).GROUND[0];\n        this.#landChr = (0, $aa430e5af6097d50$export$1b3c5bcd5a8a9304).VOID[0];\n        this.#entranceChr = (0, $aa430e5af6097d50$export$1b3c5bcd5a8a9304).DOOR_IN[0];\n        this.#exitChr = (0, $aa430e5af6097d50$export$1b3c5bcd5a8a9304).DOOR_OUT[0];\n    }\n    /**\n   * Generate a room.\n   * @returns {String[]}\n   */ generate() {\n        const minRoomCols = 4;\n        const minRoomRows = 4;\n        this.#dungeon = [];\n        let lastLeftLandCols = 0;\n        let lastRoomCols = this.#maxCols;\n        while(this.#dungeon.length < this.#maxRows - minRoomRows){\n            const maxLeftLand = lastLeftLandCols + lastRoomCols - minRoomCols - 2;\n            const leftLandCols = maxLeftLand > 0 ? $05d58a132d6b5767$export$b141de964f0a90c1(0, maxLeftLand) : 0;\n            const reqdMinRoomWidth = Math.max(lastLeftLandCols - leftLandCols + minRoomCols, minRoomCols);\n            let reqdMaxRoomWidth = Math.min(this.#maxRoomCols, this.#maxCols - leftLandCols);\n            const roomCols = reqdMaxRoomWidth > reqdMinRoomWidth ? $05d58a132d6b5767$export$b141de964f0a90c1(reqdMinRoomWidth, reqdMaxRoomWidth) : reqdMinRoomWidth;\n            const rightLandCols = this.#maxCols - leftLandCols - roomCols;\n            const maxHeight = Math.min(this.#maxRoomRows, this.#maxRows - this.#dungeon.length);\n            const roomRows = $05d58a132d6b5767$export$b141de964f0a90c1(minRoomRows, maxHeight);\n            this.#createRoom(leftLandCols, roomCols, rightLandCols, roomRows);\n            lastLeftLandCols = leftLandCols;\n            lastRoomCols = roomCols;\n        }\n        this.#removeInternalWalls();\n        this.#locateDoors();\n        return this.getMatrixAsStrings();\n    }\n    /**\n   * Convert matrix to a plan design.\n   * @returns {string[]}\n   */ getMatrixAsStrings() {\n        return this.#dungeon.map((columns)=>columns.join(\"\"));\n    }\n    /**\n   *\n   * @param {number} leftLandCols\n   * @param {number} roomCols\n   * @param {number} rightLandCols\n   * @param {number} numberOfRows\n   */ #createRoom(leftLandCols, roomCols, rightLandCols, numberOfRows) {\n        (0, $2d5b4e7cb639ebe1$export$2e2bcd8739ae039).log(`Create room ${leftLandCols} ${roomCols} ${rightLandCols} ${numberOfRows}`);\n        let columns = \"\";\n        columns += this.#landChr.repeat(leftLandCols);\n        columns += this.#wallChr.repeat(roomCols);\n        columns += this.#landChr.repeat(rightLandCols);\n        this.#dungeon.push(columns.split(\"\"));\n        for(let internalRow = 0; internalRow < numberOfRows - 2; internalRow++){\n            columns = \"\";\n            columns += this.#landChr.repeat(leftLandCols);\n            columns += this.#wallChr;\n            columns += this.#floorChr.repeat(roomCols - 2);\n            columns += this.#wallChr;\n            columns += this.#landChr.repeat(rightLandCols);\n            this.#dungeon.push(columns.split(\"\"));\n        }\n        columns = \"\";\n        columns += this.#landChr.repeat(leftLandCols);\n        columns += this.#wallChr.repeat(roomCols);\n        columns += this.#landChr.repeat(rightLandCols);\n        this.#dungeon.push(columns.split(\"\"));\n    }\n    /** Go through the dungeon removing internal walls. */ #removeInternalWalls() {\n        for(let row = 1; row < this.#dungeon.length - 1; row++){\n            for(let col = 1; col < this.#dungeon[0].length - 2; col++)if (this.#dungeon[row][col] === this.#wallChr && this.#dungeon[row + 1][col] === this.#wallChr && this.#dungeon[row - 1][col] === this.#floorChr && this.#dungeon[row + 2][col] === this.#floorChr) {\n                this.#dungeon[row][col] = this.#floorChr;\n                this.#dungeon[row + 1][col] = this.#floorChr;\n            }\n        }\n    }\n    /**\n   * Is this a vertical wall where a door could go.\n   * @param {import('../arrays/arrayManip.js').Surrounds} surrounds\n   * @returns {boolean}\n   */ #isVerticalWall(surrounds) {\n        return surrounds.above === this.#wallChr && surrounds.centre === this.#wallChr && surrounds.below === this.#wallChr;\n    }\n    /**\n   * Is this a Horizontal wall where a door could go.\n   * @param {import('../arrays/arrayManip.js').Surrounds} surrounds\n   * @returns {boolean}\n   */ #isHorizontalWall(surrounds) {\n        return surrounds.left === this.#wallChr && surrounds.centre === this.#wallChr && surrounds.right === this.#wallChr;\n    }\n    /**\n   * Position the doors.\n   */ #locateDoors() {\n        const possibleLocations = [];\n        this.#dungeon.forEach((rowValue, rowIndex)=>rowValue.forEach((colValue, colIndex)=>{\n                const surrounds = $27af28d7e434b74b$export$7c548b14ef6e7713(this.#dungeon, rowIndex, colIndex);\n                if (this.#isHorizontalWall(surrounds) || this.#isVerticalWall(surrounds)) possibleLocations.push({\n                    row: rowIndex,\n                    col: colIndex\n                });\n            }));\n        const randomLocations = $27af28d7e434b74b$export$f3448602f079b6d0(possibleLocations);\n        let location = randomLocations[0];\n        this.#dungeon[location.row][location.col] = this.#entranceChr;\n        location = randomLocations[1];\n        this.#dungeon[location.row][location.col] = this.#exitChr;\n    }\n}\n\n\n\n/**\n * @typedef {Object} SectionParsingResult\n * @property {string} nextSectionId\n * @property {number} nextLineIndex\n */ /**\n * Section IDs\n * @enum {string}\n */ const $a63c524e2668f377$var$SectionId = {\n    HERO: \"HERO\",\n    LEVEL: \"LEVEL\",\n    CAST: \"CAST\",\n    MAP: \"MAP\"\n};\n/** Basic parser for a section of the script. */ class $a63c524e2668f377$var$AbstractSectionParser {\n    /** @type {SceneDefinition} */ sceneDefn;\n    /** Lines of the script. @type {string[]} */ lines;\n    /** @type {number} lineIndex */ lineIndex;\n    /**\n   * Construct parser.\n   * @param {number} lines\n   * @param {number} startLine\n   * @param {SceneDefinition} sceneDefn\n   */ constructor(lines, startLine, sceneDefn){\n        this.lines = lines;\n        this.lineIndex = startLine;\n        this.sceneDefn = sceneDefn;\n    }\n    /**\n   * Parse lines.\n   * @returns {SectionParsingResult} next section and line\n   * @throws {Exception} parsing error has occurred.\n   */ parse() {\n        while(this.lineIndex < this.lines.length){\n            const line = this.lines[this.lineIndex];\n            const nextSectionId = $a63c524e2668f377$var$AbstractSectionParser.getSectionIdFromLine(line);\n            if (nextSectionId) return {\n                nextSectionId: nextSectionId,\n                nextLineIndex: this.lineIndex\n            };\n            else {\n                this.parseLine(line);\n                this.lineIndex++;\n            }\n        }\n        return null;\n    }\n    /**\n   * Find the first section in an array of lines.\n   * @param {string[]} lines \n   * @returns {SectionParsingResult} next section and line. Null if not found.\n   \n   */ static findFirstSection(lines) {\n        for(let index = 0; index < lines.length; index++){\n            const id = $a63c524e2668f377$var$AbstractSectionParser.getSectionIdFromLine(lines[index].trim());\n            if (id) return {\n                nextSectionId: id,\n                nextLineIndex: index\n            };\n        }\n        return null;\n    }\n    /**\n   * Parse.\n   * @param {string} line;\n   */ parseLine(lineUnused) {\n        throw \"Method parseLine should be overridden.\";\n    }\n    /** Check the line to see if it is a section marker.\n   * @returns {string} the section section marker. Null if not a section marker.\n   */ static getSectionIdFromLine(line) {\n        const match = line.match(/^\\s*\\[ *([\\w ]+) *\\]/);\n        if (match) return match[1].toUpperCase();\n        return null;\n    }\n    /**\n   * Handle an error.\n   * @param {string} message\n   * @throws {Error}\n   */ fatalError(message) {\n        throw new Error(`Error parsing script on line ${this.lineIndex + 1}: ${message}`);\n    }\n    /**\n   * Handle ignorable error.\n   * @param {string} message\n   */ ignoreError(message) {\n        (0, $2d5b4e7cb639ebe1$export$2e2bcd8739ae039).debug(`Ignoring error parsing script on line ${this.lineIndex}: ${message}`);\n    }\n}\n/**\n * Parser for introductions.\n */ class $a63c524e2668f377$var$IntroParser extends $a63c524e2668f377$var$AbstractSectionParser {\n    /**\n   * Construct parser.\n   * @param {number} lines\n   * @param {number} startLine\n   * @param {SceneDefinition} sceneDefn\n   */ constructor(lines, startLine, sceneDefn){\n        super(lines, startLine, sceneDefn);\n        this.sceneDefn.intro = \"\";\n    }\n    /**\n   * Parse a line.\n   * @override\n   */ parseLine(line) {\n        this.sceneDefn.intro += line === \"\" ? \"\\n\" : line;\n    }\n}\n/**\n * Parser for the cast list.\n */ class $a63c524e2668f377$var$HeroParser extends $a63c524e2668f377$var$AbstractSectionParser {\n    /**\n   * Construct parser.\n   * @param {number} lines\n   * @param {number} startLine\n   * @param {SceneDefinition} sceneDefn\n   */ constructor(lines, startLine, sceneDefn){\n        super(lines, startLine, sceneDefn);\n    }\n    /**\n   * Parse a line.\n   * @override\n   */ parseLine(line) {\n        const match = line.match(/^\\s*(\\w+?) *: *([\\w,:= /]*)/);\n        if (match) this.#parseShortFormHero(match);\n        else this.#parseLongFormHero(line);\n    }\n    /**\n   * Parse a short form single line actor definition.\n   * @param {string[]} matchResults - results from regex match.\n   */ #parseShortFormHero(matchResults) {\n        const name = matchResults[1];\n        const traitsDefn = matchResults[2];\n        try {\n            const traits = new (0, $95c3fa23148200d5$export$939a756f171fd090)().setFromString(traitsDefn);\n            this.sceneDefn.hero = {\n                id: \"HERO\",\n                name: name || \"mystery\",\n                traits: traits\n            };\n        } catch (error) {\n            this.fatalError(error.message);\n        }\n    }\n    /**\n   * Parse a line to build a long form, multiline actor\n   * @param {string} line - current line.\n   */ #parseLongFormHero(lineIgnored) {\n        this.fatalError(\"Long form actors not supported.\");\n    }\n}\n/**\n * Parser for the cast list.\n */ class $a63c524e2668f377$var$CastParser extends $a63c524e2668f377$var$AbstractSectionParser {\n    /**\n   * Construct parser.\n   * @param {number} lines\n   * @param {number} startLine\n   * @param {SceneDefinition} sceneDefn\n   */ constructor(lines, startLine, sceneDefn){\n        super(lines, startLine, sceneDefn);\n    }\n    /**\n   * Parse a line.\n   * @override\n   */ parseLine(line) {\n        const match = line.match(/^\\s*(\\w+?) *x(\\d{1,2}) *([^:]*): *([\\w,:= /]*)/);\n        if (match) this.#parseShortFormActor(match);\n        else this.#parseLongFormActor(line);\n    }\n    /**\n   * Parse a short form single line actor definition.\n   * @param {string[]} matchResults - results from regex match.\n   */ #parseShortFormActor(matchResults) {\n        const actorId = matchResults[1].toUpperCase();\n        const number = parseInt(matchResults[2]);\n        const name = matchResults[3];\n        const traitsDefn = matchResults[4];\n        for(let n = 0; n < number; n++){\n            if ((0, $ea4c834f4d2249c2$export$2e2bcd8739ae039).has(actorId)) try {\n                const traits = new (0, $95c3fa23148200d5$export$939a756f171fd090)().setFromString(traitsDefn);\n                this.sceneDefn.enemies.push({\n                    id: actorId,\n                    name: name || \"mystery\",\n                    traits: traits\n                });\n            } catch (error) {\n                this.fatalError(error.message);\n            }\n            else this.fatalError(`Cast member ${actorId} does not exist.`);\n        }\n    }\n    /**\n   * Parse a line to build a long form, multiline actor\n   * @param {string} line - current line.\n   */ #parseLongFormActor(lineIgnored) {\n        this.fatalError(\"Long form actors not supported.\");\n    }\n}\n/**\n * Parser for dungeon map.\n */ class $a63c524e2668f377$var$MapParser extends $a63c524e2668f377$var$AbstractSectionParser {\n    #randomised;\n    #randomRegex;\n    /**\n   * Construct parser.\n   * @param {number} lines\n   * @param {number} startLine\n   * @param {SceneDefinition} sceneDefn\n   */ constructor(lines, startLine, sceneDefn){\n        super(lines, startLine, sceneDefn);\n        this.#randomised = false;\n        this.#randomRegex = /^\\s*random\\s*$/i;\n    }\n    /**\n   * Parse a line.\n   * @override\n   */ parseLine(line) {\n        if (this.#randomised) return;\n        if (line !== \"\") {\n            if (this.#randomRegex.test(line)) {\n                const creator = new (0, $ff98e45c12875199$export$46f5471185d8bc9e)({\n                    minCols: 12,\n                    maxCols: 40,\n                    maxRoomCols: 10,\n                    minRows: 12,\n                    maxRows: 40,\n                    maxRoomRows: 6\n                });\n                this.sceneDefn.mapDesign = creator.generate();\n                this.#randomised = true;\n                (0, $2d5b4e7cb639ebe1$export$2e2bcd8739ae039).debug(\"Random map\");\n                this.sceneDefn.mapDesign.forEach((line)=>(0, $2d5b4e7cb639ebe1$export$2e2bcd8739ae039).debug(line));\n            } else this.sceneDefn.mapDesign.push(line);\n        }\n    }\n}\n/** Lines of the script. @type {string[]} */ let $a63c524e2668f377$var$lines;\n/** Scenes @type {SceneDefinition[]} */ let $a63c524e2668f377$var$sceneDefinitions;\n/**\n * Get a section parser for the section Id.\n * @param {string} sectionId\n * @param {number} lineIndex\n * @param {SceneDefinition} sceneDefn\n * @returns {SectionParser} null if the id is not valid.\n */ function $a63c524e2668f377$var$getParserForId(sectionId, lineIndex, sceneDefn) {\n    switch(sectionId){\n        case $a63c524e2668f377$var$SectionId.HERO:\n            return new $a63c524e2668f377$var$HeroParser($a63c524e2668f377$var$lines, lineIndex + 1, sceneDefn); // skip the actual section ID line.\n        case $a63c524e2668f377$var$SectionId.LEVEL:\n            return new $a63c524e2668f377$var$IntroParser($a63c524e2668f377$var$lines, lineIndex + 1, sceneDefn); // skip the actual section ID line.\n        case $a63c524e2668f377$var$SectionId.CAST:\n            return new $a63c524e2668f377$var$CastParser($a63c524e2668f377$var$lines, lineIndex + 1, sceneDefn); // skip the actual section ID line.\n        case $a63c524e2668f377$var$SectionId.MAP:\n            return new $a63c524e2668f377$var$MapParser($a63c524e2668f377$var$lines, lineIndex + 1, sceneDefn); // skip the actual section ID line.\n    }\n    return null;\n}\nfunction $a63c524e2668f377$export$2e2bcd8739ae039(script) {\n    $a63c524e2668f377$var$lines = script.split(/\\r?\\n/);\n    $a63c524e2668f377$var$sceneDefinitions = [];\n    let sceneDefn = new (0, $fee0c02ce96028b6$export$2a8e6ebcf5b5c91)();\n    const sectionHunt = $a63c524e2668f377$var$AbstractSectionParser.findFirstSection($a63c524e2668f377$var$lines);\n    if (!sectionHunt) throw new Error(`Invalid script. No section identifiers found.`);\n    let parser = $a63c524e2668f377$var$getParserForId(sectionHunt.nextSectionId, sectionHunt.nextLineIndex, sceneDefn);\n    while(parser){\n        const result = parser.parse();\n        if (!result?.nextSectionId || result.nextSectionId === $a63c524e2668f377$var$SectionId.LEVEL) {\n            $a63c524e2668f377$var$sceneDefinitions.push(sceneDefn);\n            sceneDefn = new (0, $fee0c02ce96028b6$export$2a8e6ebcf5b5c91)();\n        }\n        parser = !result ? null : $a63c524e2668f377$var$getParserForId(result.nextSectionId, result.nextLineIndex, sceneDefn);\n    }\n    return $a63c524e2668f377$var$sceneDefinitions;\n}\n\n\n\n\n\n/**\n * @file Functions to allow touch and mouse handling.\n *\n * @module utils/dom/pointerActions\n *\n * License {@link https://opensource.org/license/mit/|MIT}\n *\n * Copyright 2024 Steve Butler\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the “Software”), to deal in\n * the Software without restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n * Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */ \n\nconst $f6529945ae220c94$export$90ded0e426ce21 = \"custom-pointer-down-event\";\nconst $f6529945ae220c94$export$3853e404217e8f25 = \"custom-pointer-up-event\";\nconst $f6529945ae220c94$export$f1ed6970fd95c8d6 = \"custom-pointer-cancel-event\";\nconst $f6529945ae220c94$export$a5ec1de9afad15ae = \"custom-click-event\";\nconst $f6529945ae220c94$export$d69198a72de4964d = \"custom-pointer-drag-event\";\nconst $f6529945ae220c94$export$3ddad254732bb8a8 = \"custom-pointer-drag-end-event\";\n/** Minimum movement that constitutes a drag. */ const $f6529945ae220c94$var$MIN_DRAG_MOVEMENT = 10;\n/** @enum {number} */ const $f6529945ae220c94$var$EventSource = {\n    MOUSE: 0,\n    TOUCH: 1\n};\n/**\n * @typedef {Object} CustomEventDetail\n * @property {number} x\n * @property {number} y\n * @property {number} dx\n * @property {number} dy\n */ /**\n * @typedef {Object} DragData\n * @param {ELement} element\n * @property {boolean} actionStarted\n * @property {boolean} dragging\n * @property {number} lastX\n * @property {number} lastY\n * @property {number} startX\n * @property {number} startY\n * @property {number} x\n * @property {number} y\n * @property {Point} lastTouchStartPoint\n * @property {boolean} suppressClickEvent\n */ /**\n * Dispatch an event. Detail is dispatched in the event detail.\n * @param {Element} element\n * @param {string} eventName\n * @param {Object} detail\n */ function $f6529945ae220c94$var$dispatchEvent(element, eventName, detail) {\n    const event = new CustomEvent(eventName, {\n        detail: detail\n    });\n    element.dispatchEvent(event);\n}\n/**\n * Gets offsetX and offsetY equivalent to a MouseEvent\n * @param {TouchEvent} event\n * @returns {Object}\n */ function $f6529945ae220c94$var$getOffsetFromTouch(event) {\n    const rect = event.target.getBoundingClientRect();\n    return {\n        x: event.touches[0].pageX - rect.left,\n        y: event.touches[0].pageY - rect.top\n    };\n}\n/**\n * Process the start of the action.\n * @param {number} eventSource\n * @param {number} x - x coordinate relative to target\n * @param {number} y - y coordinate relative to target\n * @param {DragData} data\n */ function $f6529945ae220c94$var$processStartAction(eventSource, x, y, data) {\n    data.actionStarted = true;\n    data.dragging = false;\n    data.distance = 0;\n    data.lastX = x;\n    data.lastY = y;\n    data.startX = x;\n    data.startY = y;\n    $f6529945ae220c94$var$dispatchEvent(data.element, $f6529945ae220c94$export$90ded0e426ce21, {\n        x: x,\n        y: y\n    });\n}\n/**\n * Process the start of the action.\n * @param {number} eventSource\n * @param {number} x - x coordinate relative to target\n * @param {number} y - y coordinate relative to target\n * @param {DragData} data\n */ function $f6529945ae220c94$var$processEndAction(eventSource, x, y, data) {\n    const eventName = data.dragging ? $f6529945ae220c94$export$3ddad254732bb8a8 : $f6529945ae220c94$export$3853e404217e8f25;\n    data.actionStarted = false;\n    data.dragging = false;\n    data.distance = 0;\n    data.lastX = x;\n    data.lastY = y;\n    data.startX = x;\n    data.startY = y;\n    $f6529945ae220c94$var$dispatchEvent(data.element, eventName, {\n        x: x,\n        y: y\n    });\n}\n/**\n * Process the start of the action.\n * @param {number} eventSource\n * @param {number} x - x coordinate relative to target\n * @param {number} y - y coordinate relative to target\n * @param {DragData} data\n */ function $f6529945ae220c94$var$processCancelAction(eventSource, x, y, data) {\n    const eventName = $f6529945ae220c94$export$f1ed6970fd95c8d6;\n    data.actionStarted = false;\n    data.dragging = false;\n    data.distance = 0;\n    data.lastX = x;\n    data.lastY = y;\n    data.startX = x;\n    data.startY = y;\n    $f6529945ae220c94$var$dispatchEvent(data.element, eventName, {\n        x: x,\n        y: y\n    });\n}\n/**\n * Process the start of the action.\n * @param {number} eventSource\n * @param {number} x - x coordinate relative to target\n * @param {number} y - y coordinate relative to target\n * @param {DragData} data\n * @return {CustomEvent} null if no event should be dispatched.\n */ function $f6529945ae220c94$var$processMoveAction(eventSource, x, y, data) {\n    const eventName = $f6529945ae220c94$export$d69198a72de4964d;\n    let dx = x - data.lastX;\n    let dy = y - data.lastY;\n    data.lastX = x;\n    data.lastY = y;\n    if (data.dragging) {\n        const event = new CustomEvent(eventName, {\n            detail: {\n                x: x,\n                y: y,\n                dx: dx,\n                dy: dy\n            }\n        });\n        data.element.dispatchEvent(event);\n    } else if (Math.abs(x - data.startX) > $f6529945ae220c94$var$MIN_DRAG_MOVEMENT || Math.abs(y - data.startY) > $f6529945ae220c94$var$MIN_DRAG_MOVEMENT) {\n        data.dragging = true;\n        data.suppressClickEvent = true;\n    }\n}\nfunction $f6529945ae220c94$export$2b4524682ad19724(element) {\n    let dragData = {\n        element: element,\n        actionStarted: false,\n        dragging: false,\n        x: 0,\n        y: 0,\n        lastTouchStartPoint: null,\n        suppressClickEvent: false\n    };\n    element.addEventListener(\"mousedown\", (event)=>{\n        (0, $2d5b4e7cb639ebe1$export$2e2bcd8739ae039).debug(\"mousedown\");\n        return $f6529945ae220c94$var$processStartAction($f6529945ae220c94$var$EventSource.MOUSE, event.offsetX, event.offsetY, dragData);\n    }, {\n        passive: true\n    });\n    element.addEventListener(\"mouseup\", (event)=>{\n        (0, $2d5b4e7cb639ebe1$export$2e2bcd8739ae039).debug(\"mouseup\");\n        return $f6529945ae220c94$var$processEndAction($f6529945ae220c94$var$EventSource.MOUSE, event.offsetX, event.offsetY, dragData);\n    }, {\n        passive: true\n    });\n    element.addEventListener(\"mousemove\", (event)=>{\n        (0, $2d5b4e7cb639ebe1$export$2e2bcd8739ae039).debug(\"mousemove\");\n        if (event.buttons & 1) $f6529945ae220c94$var$processMoveAction($f6529945ae220c94$var$EventSource.MOUSE, event.offsetX, event.offsetY, dragData);\n    }, {\n        passive: true\n    });\n    element.addEventListener(\"touchstart\", (event)=>{\n        (0, $2d5b4e7cb639ebe1$export$2e2bcd8739ae039).debug(\"touchstart\");\n        if (event.changedTouches.length === 1) {\n            const offset = $f6529945ae220c94$var$getOffsetFromTouch(event);\n            dragData.lastTouchStartPoint = new (0, $90999bd6b14cd690$export$baf26146a414f24a)(offset.x, offset.y);\n            $f6529945ae220c94$var$processStartAction($f6529945ae220c94$var$EventSource.TOUCH, offset.x, offset.y, dragData);\n        }\n    }, {\n        passive: true\n    });\n    element.addEventListener(\"touchend\", (event)=>{\n        (0, $2d5b4e7cb639ebe1$export$2e2bcd8739ae039).debug(\"touchend\");\n        if (event.changedTouches.length === 1) $f6529945ae220c94$var$processEndAction($f6529945ae220c94$var$EventSource.TOUCH, dragData.lastTouchStartPoint?.x, dragData.lastTouchStartPoint?.y, dragData);\n        dragData.lastTouchStartPoint = null;\n        dragData.suppressClickEvent = false;\n    }, {\n        passive: true\n    });\n    element.addEventListener(\"touchmove\", (event)=>{\n        (0, $2d5b4e7cb639ebe1$export$2e2bcd8739ae039).debug(\"touchmove\");\n        if (event.changedTouches.length === 1) {\n            const offset = $f6529945ae220c94$var$getOffsetFromTouch(event);\n            $f6529945ae220c94$var$processMoveAction($f6529945ae220c94$var$EventSource.TOUCH, offset.x, offset.y, dragData);\n            dragData.suppressClickEvent = true;\n        }\n    }, {\n        passive: true\n    });\n    element.addEventListener(\"touchcancel\", (event)=>{\n        (0, $2d5b4e7cb639ebe1$export$2e2bcd8739ae039).debug(\"touchcancel\");\n        $f6529945ae220c94$var$processCancelAction($f6529945ae220c94$var$EventSource.TOUCH, dragData.lastTouchStartPoint?.x, dragData.lastTouchStartPoint?.y, dragData);\n        dragData.lastTouchStartPoint = null;\n    }, {\n        passive: true\n    });\n    element.addEventListener(\"click\", (event)=>{\n        (0, $2d5b4e7cb639ebe1$export$2e2bcd8739ae039).debug(\"click\");\n        if (!dragData.suppressClickEvent) $f6529945ae220c94$var$dispatchEvent(element, $f6529945ae220c94$export$a5ec1de9afad15ae, {\n            x: event.offsetX,\n            y: event.offsetY\n        });\n        dragData.suppressClickEvent = false;\n    });\n}\n\n\n\n\nvar $e8347232c61bf163$exports = {};\n$e8347232c61bf163$exports = JSON.parse('{\"frames\":[{\"filename\":\"blank.png\",\"frame\":{\"x\":333,\"y\":246,\"w\":3,\"h\":3},\"rotated\":false,\"trimmed\":true,\"spriteSourceSize\":{\"x\":0,\"y\":0,\"w\":3,\"h\":3},\"sourceSize\":{\"w\":48,\"h\":48}},{\"filename\":\"block.png\",\"frame\":{\"x\":97,\"y\":1,\"w\":48,\"h\":48},\"rotated\":false,\"trimmed\":false,\"spriteSourceSize\":{\"x\":0,\"y\":0,\"w\":48,\"h\":48},\"sourceSize\":{\"w\":48,\"h\":48}},{\"filename\":\"blood-splat.png\",\"frame\":{\"x\":1,\"y\":1,\"w\":94,\"h\":92},\"rotated\":false,\"trimmed\":true,\"spriteSourceSize\":{\"x\":1,\"y\":4,\"w\":94,\"h\":92},\"sourceSize\":{\"w\":96,\"h\":96}},{\"filename\":\"door-B.png\",\"frame\":{\"x\":1,\"y\":190,\"w\":48,\"h\":48},\"rotated\":false,\"trimmed\":false,\"spriteSourceSize\":{\"x\":0,\"y\":0,\"w\":48,\"h\":48},\"sourceSize\":{\"w\":48,\"h\":48}},{\"filename\":\"door-L.png\",\"frame\":{\"x\":702,\"y\":197,\"w\":33,\"h\":48},\"rotated\":false,\"trimmed\":true,\"spriteSourceSize\":{\"x\":15,\"y\":0,\"w\":33,\"h\":48},\"sourceSize\":{\"w\":48,\"h\":48}},{\"filename\":\"door-R.png\",\"frame\":{\"x\":721,\"y\":101,\"w\":33,\"h\":48},\"rotated\":false,\"trimmed\":true,\"spriteSourceSize\":{\"x\":0,\"y\":0,\"w\":33,\"h\":48},\"sourceSize\":{\"w\":48,\"h\":48}},{\"filename\":\"door-T.png\",\"frame\":{\"x\":147,\"y\":1,\"w\":48,\"h\":48},\"rotated\":false,\"trimmed\":false,\"spriteSourceSize\":{\"x\":0,\"y\":0,\"w\":48,\"h\":48},\"sourceSize\":{\"w\":48,\"h\":48}},{\"filename\":\"floor-SBE.png\",\"frame\":{\"x\":197,\"y\":1,\"w\":48,\"h\":48},\"rotated\":false,\"trimmed\":false,\"spriteSourceSize\":{\"x\":0,\"y\":0,\"w\":48,\"h\":48},\"sourceSize\":{\"w\":48,\"h\":48}},{\"filename\":\"floor-SBW.png\",\"frame\":{\"x\":247,\"y\":1,\"w\":48,\"h\":48},\"rotated\":false,\"trimmed\":false,\"spriteSourceSize\":{\"x\":0,\"y\":0,\"w\":48,\"h\":48},\"sourceSize\":{\"w\":48,\"h\":48}},{\"filename\":\"floor.png\",\"frame\":{\"x\":297,\"y\":1,\"w\":48,\"h\":48},\"rotated\":false,\"trimmed\":false,\"spriteSourceSize\":{\"x\":0,\"y\":0,\"w\":48,\"h\":48},\"sourceSize\":{\"w\":48,\"h\":48}},{\"filename\":\"floor2-SBE.png\",\"frame\":{\"x\":347,\"y\":1,\"w\":48,\"h\":48},\"rotated\":false,\"trimmed\":false,\"spriteSourceSize\":{\"x\":0,\"y\":0,\"w\":48,\"h\":48},\"sourceSize\":{\"w\":48,\"h\":48}},{\"filename\":\"floor2-SBW.png\",\"frame\":{\"x\":397,\"y\":1,\"w\":48,\"h\":48},\"rotated\":false,\"trimmed\":false,\"spriteSourceSize\":{\"x\":0,\"y\":0,\"w\":48,\"h\":48},\"sourceSize\":{\"w\":48,\"h\":48}},{\"filename\":\"floor2.png\",\"frame\":{\"x\":447,\"y\":1,\"w\":48,\"h\":48},\"rotated\":false,\"trimmed\":false,\"spriteSourceSize\":{\"x\":0,\"y\":0,\"w\":48,\"h\":48},\"sourceSize\":{\"w\":48,\"h\":48}},{\"filename\":\"hero-dead00.png\",\"frame\":{\"x\":771,\"y\":150,\"w\":48,\"h\":33},\"rotated\":false,\"trimmed\":true,\"spriteSourceSize\":{\"x\":0,\"y\":7,\"w\":48,\"h\":33},\"sourceSize\":{\"w\":48,\"h\":48}},{\"filename\":\"hero-idle00.png\",\"frame\":{\"x\":784,\"y\":51,\"w\":46,\"h\":47},\"rotated\":false,\"trimmed\":true,\"spriteSourceSize\":{\"x\":1,\"y\":1,\"w\":46,\"h\":47},\"sourceSize\":{\"w\":48,\"h\":48}},{\"filename\":\"hero-idle01.png\",\"frame\":{\"x\":497,\"y\":1,\"w\":48,\"h\":48},\"rotated\":false,\"trimmed\":false,\"spriteSourceSize\":{\"x\":0,\"y\":0,\"w\":48,\"h\":48},\"sourceSize\":{\"w\":48,\"h\":48}},{\"filename\":\"hero-idle02.png\",\"frame\":{\"x\":832,\"y\":51,\"w\":46,\"h\":47},\"rotated\":false,\"trimmed\":true,\"spriteSourceSize\":{\"x\":1,\"y\":1,\"w\":46,\"h\":47},\"sourceSize\":{\"w\":48,\"h\":48}},{\"filename\":\"hero-idle03.png\",\"frame\":{\"x\":197,\"y\":51,\"w\":47,\"h\":48},\"rotated\":false,\"trimmed\":true,\"spriteSourceSize\":{\"x\":1,\"y\":0,\"w\":47,\"h\":48},\"sourceSize\":{\"w\":48,\"h\":48}},{\"filename\":\"hero-walk-e00.png\",\"frame\":{\"x\":862,\"y\":150,\"w\":34,\"h\":47},\"rotated\":false,\"trimmed\":true,\"spriteSourceSize\":{\"x\":10,\"y\":1,\"w\":34,\"h\":47},\"sourceSize\":{\"w\":48,\"h\":48}},{\"filename\":\"hero-walk-e01.png\",\"frame\":{\"x\":889,\"y\":199,\"w\":35,\"h\":47},\"rotated\":false,\"trimmed\":true,\"spriteSourceSize\":{\"x\":10,\"y\":1,\"w\":35,\"h\":47},\"sourceSize\":{\"w\":48,\"h\":48}},{\"filename\":\"hero-walk-e02.png\",\"frame\":{\"x\":1060,\"y\":101,\"w\":39,\"h\":48},\"rotated\":false,\"trimmed\":true,\"spriteSourceSize\":{\"x\":9,\"y\":0,\"w\":39,\"h\":48},\"sourceSize\":{\"w\":48,\"h\":48}},{\"filename\":\"hero-walk-e03.png\",\"frame\":{\"x\":1176,\"y\":151,\"w\":30,\"h\":48},\"rotated\":false,\"trimmed\":true,\"spriteSourceSize\":{\"x\":10,\"y\":0,\"w\":30,\"h\":48},\"sourceSize\":{\"w\":48,\"h\":48}},{\"filename\":\"hero-walk-n00.png\",\"frame\":{\"x\":880,\"y\":51,\"w\":46,\"h\":47},\"rotated\":false,\"trimmed\":true,\"spriteSourceSize\":{\"x\":2,\"y\":1,\"w\":46,\"h\":47},\"sourceSize\":{\"w\":48,\"h\":48}},{\"filename\":\"hero-walk-n01.png\",\"frame\":{\"x\":246,\"y\":51,\"w\":47,\"h\":48},\"rotated\":false,\"trimmed\":true,\"spriteSourceSize\":{\"x\":1,\"y\":0,\"w\":47,\"h\":48},\"sourceSize\":{\"w\":48,\"h\":48}},{\"filename\":\"hero-walk-n02.png\",\"frame\":{\"x\":880,\"y\":51,\"w\":46,\"h\":47},\"rotated\":false,\"trimmed\":true,\"spriteSourceSize\":{\"x\":2,\"y\":1,\"w\":46,\"h\":47},\"sourceSize\":{\"w\":48,\"h\":48}},{\"filename\":\"hero-walk-n03.png\",\"frame\":{\"x\":1167,\"y\":51,\"w\":40,\"h\":48},\"rotated\":false,\"trimmed\":true,\"spriteSourceSize\":{\"x\":8,\"y\":0,\"w\":40,\"h\":48},\"sourceSize\":{\"w\":48,\"h\":48}},{\"filename\":\"hero-walk-s00.png\",\"frame\":{\"x\":928,\"y\":51,\"w\":46,\"h\":47},\"rotated\":false,\"trimmed\":true,\"spriteSourceSize\":{\"x\":1,\"y\":1,\"w\":46,\"h\":47},\"sourceSize\":{\"w\":48,\"h\":48}},{\"filename\":\"hero-walk-s01.png\",\"frame\":{\"x\":547,\"y\":1,\"w\":48,\"h\":48},\"rotated\":false,\"trimmed\":false,\"spriteSourceSize\":{\"x\":0,\"y\":0,\"w\":48,\"h\":48},\"sourceSize\":{\"w\":48,\"h\":48}},{\"filename\":\"hero-walk-s02.png\",\"frame\":{\"x\":928,\"y\":51,\"w\":46,\"h\":47},\"rotated\":false,\"trimmed\":true,\"spriteSourceSize\":{\"x\":1,\"y\":1,\"w\":46,\"h\":47},\"sourceSize\":{\"w\":48,\"h\":48}},{\"filename\":\"hero-walk-s03.png\",\"frame\":{\"x\":1120,\"y\":51,\"w\":45,\"h\":48},\"rotated\":false,\"trimmed\":true,\"spriteSourceSize\":{\"x\":3,\"y\":0,\"w\":45,\"h\":48},\"sourceSize\":{\"w\":48,\"h\":48}},{\"filename\":\"hero-walk-w00.png\",\"frame\":{\"x\":1101,\"y\":101,\"w\":39,\"h\":48},\"rotated\":false,\"trimmed\":true,\"spriteSourceSize\":{\"x\":1,\"y\":0,\"w\":39,\"h\":48},\"sourceSize\":{\"w\":48,\"h\":48}},{\"filename\":\"hero-walk-w01.png\",\"frame\":{\"x\":51,\"y\":190,\"w\":43,\"h\":48},\"rotated\":false,\"trimmed\":true,\"spriteSourceSize\":{\"x\":0,\"y\":0,\"w\":43,\"h\":48},\"sourceSize\":{\"w\":48,\"h\":48}},{\"filename\":\"hero-walk-w02.png\",\"frame\":{\"x\":821,\"y\":150,\"w\":39,\"h\":47},\"rotated\":false,\"trimmed\":true,\"spriteSourceSize\":{\"x\":1,\"y\":1,\"w\":39,\"h\":47},\"sourceSize\":{\"w\":48,\"h\":48}},{\"filename\":\"hero-walk-w03.png\",\"frame\":{\"x\":1137,\"y\":151,\"w\":37,\"h\":48},\"rotated\":false,\"trimmed\":true,\"spriteSourceSize\":{\"x\":3,\"y\":0,\"w\":37,\"h\":48},\"sourceSize\":{\"w\":48,\"h\":48}},{\"filename\":\"hero.png\",\"frame\":{\"x\":976,\"y\":51,\"w\":46,\"h\":47},\"rotated\":false,\"trimmed\":true,\"spriteSourceSize\":{\"x\":1,\"y\":1,\"w\":46,\"h\":47},\"sourceSize\":{\"w\":48,\"h\":48}},{\"filename\":\"hud-arrow-down00.png\",\"frame\":{\"x\":145,\"y\":101,\"w\":46,\"h\":46},\"rotated\":false,\"trimmed\":true,\"spriteSourceSize\":{\"x\":1,\"y\":1,\"w\":46,\"h\":46},\"sourceSize\":{\"w\":48,\"h\":48}},{\"filename\":\"hud-arrow-down01.png\",\"frame\":{\"x\":193,\"y\":101,\"w\":46,\"h\":46},\"rotated\":false,\"trimmed\":true,\"spriteSourceSize\":{\"x\":1,\"y\":1,\"w\":46,\"h\":46},\"sourceSize\":{\"w\":48,\"h\":48}},{\"filename\":\"hud-arrow-left00.png\",\"frame\":{\"x\":241,\"y\":101,\"w\":46,\"h\":46},\"rotated\":false,\"trimmed\":true,\"spriteSourceSize\":{\"x\":1,\"y\":1,\"w\":46,\"h\":46},\"sourceSize\":{\"w\":48,\"h\":48}},{\"filename\":\"hud-arrow-left01.png\",\"frame\":{\"x\":289,\"y\":101,\"w\":46,\"h\":46},\"rotated\":false,\"trimmed\":true,\"spriteSourceSize\":{\"x\":1,\"y\":1,\"w\":46,\"h\":46},\"sourceSize\":{\"w\":48,\"h\":48}},{\"filename\":\"hud-arrow-right00.png\",\"frame\":{\"x\":337,\"y\":101,\"w\":46,\"h\":46},\"rotated\":false,\"trimmed\":true,\"spriteSourceSize\":{\"x\":1,\"y\":1,\"w\":46,\"h\":46},\"sourceSize\":{\"w\":48,\"h\":48}},{\"filename\":\"hud-arrow-right01.png\",\"frame\":{\"x\":385,\"y\":101,\"w\":46,\"h\":46},\"rotated\":false,\"trimmed\":true,\"spriteSourceSize\":{\"x\":1,\"y\":1,\"w\":46,\"h\":46},\"sourceSize\":{\"w\":48,\"h\":48}},{\"filename\":\"hud-arrow-up00.png\",\"frame\":{\"x\":433,\"y\":101,\"w\":46,\"h\":46},\"rotated\":false,\"trimmed\":true,\"spriteSourceSize\":{\"x\":1,\"y\":1,\"w\":46,\"h\":46},\"sourceSize\":{\"w\":48,\"h\":48}},{\"filename\":\"hud-arrow-up01.png\",\"frame\":{\"x\":481,\"y\":101,\"w\":46,\"h\":46},\"rotated\":false,\"trimmed\":true,\"spriteSourceSize\":{\"x\":1,\"y\":1,\"w\":46,\"h\":46},\"sourceSize\":{\"w\":48,\"h\":48}},{\"filename\":\"hud-auto-centre00.png\",\"frame\":{\"x\":529,\"y\":101,\"w\":46,\"h\":46},\"rotated\":false,\"trimmed\":true,\"spriteSourceSize\":{\"x\":1,\"y\":1,\"w\":46,\"h\":46},\"sourceSize\":{\"w\":48,\"h\":48}},{\"filename\":\"hud-auto-centre01.png\",\"frame\":{\"x\":577,\"y\":101,\"w\":46,\"h\":46},\"rotated\":false,\"trimmed\":true,\"spriteSourceSize\":{\"x\":1,\"y\":1,\"w\":46,\"h\":46},\"sourceSize\":{\"w\":48,\"h\":48}},{\"filename\":\"hud-fullscreen00.png\",\"frame\":{\"x\":625,\"y\":101,\"w\":46,\"h\":46},\"rotated\":false,\"trimmed\":true,\"spriteSourceSize\":{\"x\":1,\"y\":1,\"w\":46,\"h\":46},\"sourceSize\":{\"w\":48,\"h\":48}},{\"filename\":\"hud-fullscreen01.png\",\"frame\":{\"x\":673,\"y\":101,\"w\":46,\"h\":46},\"rotated\":false,\"trimmed\":true,\"spriteSourceSize\":{\"x\":1,\"y\":1,\"w\":46,\"h\":46},\"sourceSize\":{\"w\":48,\"h\":48}},{\"filename\":\"orc-dead00.png\",\"frame\":{\"x\":721,\"y\":151,\"w\":48,\"h\":34},\"rotated\":false,\"trimmed\":true,\"spriteSourceSize\":{\"x\":0,\"y\":11,\"w\":48,\"h\":34},\"sourceSize\":{\"w\":48,\"h\":48}},{\"filename\":\"orc-idle00.png\",\"frame\":{\"x\":295,\"y\":51,\"w\":47,\"h\":48},\"rotated\":false,\"trimmed\":true,\"spriteSourceSize\":{\"x\":1,\"y\":0,\"w\":47,\"h\":48},\"sourceSize\":{\"w\":48,\"h\":48}},{\"filename\":\"orc-idle01.png\",\"frame\":{\"x\":344,\"y\":51,\"w\":47,\"h\":48},\"rotated\":false,\"trimmed\":true,\"spriteSourceSize\":{\"x\":0,\"y\":0,\"w\":47,\"h\":48},\"sourceSize\":{\"w\":48,\"h\":48}},{\"filename\":\"orc-idle02.png\",\"frame\":{\"x\":393,\"y\":51,\"w\":47,\"h\":48},\"rotated\":false,\"trimmed\":true,\"spriteSourceSize\":{\"x\":1,\"y\":0,\"w\":47,\"h\":48},\"sourceSize\":{\"w\":48,\"h\":48}},{\"filename\":\"orc-idle03.png\",\"frame\":{\"x\":442,\"y\":51,\"w\":47,\"h\":48},\"rotated\":false,\"trimmed\":true,\"spriteSourceSize\":{\"x\":1,\"y\":0,\"w\":47,\"h\":48},\"sourceSize\":{\"w\":48,\"h\":48}},{\"filename\":\"orc-walk-e00.png\",\"frame\":{\"x\":1015,\"y\":150,\"w\":38,\"h\":48},\"rotated\":false,\"trimmed\":true,\"spriteSourceSize\":{\"x\":9,\"y\":0,\"w\":38,\"h\":48},\"sourceSize\":{\"w\":48,\"h\":48}},{\"filename\":\"orc-walk-e01.png\",\"frame\":{\"x\":776,\"y\":201,\"w\":36,\"h\":48},\"rotated\":false,\"trimmed\":true,\"spriteSourceSize\":{\"x\":9,\"y\":0,\"w\":36,\"h\":48},\"sourceSize\":{\"w\":48,\"h\":48}},{\"filename\":\"orc-walk-e02.png\",\"frame\":{\"x\":898,\"y\":149,\"w\":33,\"h\":48},\"rotated\":false,\"trimmed\":true,\"spriteSourceSize\":{\"x\":9,\"y\":0,\"w\":33,\"h\":48},\"sourceSize\":{\"w\":48,\"h\":48}},{\"filename\":\"orc-walk-e03.png\",\"frame\":{\"x\":1142,\"y\":101,\"w\":39,\"h\":48},\"rotated\":false,\"trimmed\":true,\"spriteSourceSize\":{\"x\":9,\"y\":0,\"w\":39,\"h\":48},\"sourceSize\":{\"w\":48,\"h\":48}},{\"filename\":\"orc-walk-n00.png\",\"frame\":{\"x\":96,\"y\":188,\"w\":45,\"h\":48},\"rotated\":false,\"trimmed\":true,\"spriteSourceSize\":{\"x\":2,\"y\":0,\"w\":45,\"h\":48},\"sourceSize\":{\"w\":48,\"h\":48}},{\"filename\":\"orc-walk-n01.png\",\"frame\":{\"x\":491,\"y\":51,\"w\":47,\"h\":48},\"rotated\":false,\"trimmed\":true,\"spriteSourceSize\":{\"x\":1,\"y\":0,\"w\":47,\"h\":48},\"sourceSize\":{\"w\":48,\"h\":48}},{\"filename\":\"orc-walk-n02.png\",\"frame\":{\"x\":687,\"y\":51,\"w\":46,\"h\":48},\"rotated\":false,\"trimmed\":true,\"spriteSourceSize\":{\"x\":2,\"y\":0,\"w\":46,\"h\":48},\"sourceSize\":{\"w\":48,\"h\":48}},{\"filename\":\"orc-walk-n03.png\",\"frame\":{\"x\":976,\"y\":100,\"w\":40,\"h\":48},\"rotated\":false,\"trimmed\":true,\"spriteSourceSize\":{\"x\":8,\"y\":0,\"w\":40,\"h\":48},\"sourceSize\":{\"w\":48,\"h\":48}},{\"filename\":\"orc-walk-s00.png\",\"frame\":{\"x\":735,\"y\":51,\"w\":47,\"h\":47},\"rotated\":false,\"trimmed\":true,\"spriteSourceSize\":{\"x\":1,\"y\":1,\"w\":47,\"h\":47},\"sourceSize\":{\"w\":48,\"h\":48}},{\"filename\":\"orc-walk-s01.png\",\"frame\":{\"x\":540,\"y\":51,\"w\":47,\"h\":48},\"rotated\":false,\"trimmed\":true,\"spriteSourceSize\":{\"x\":0,\"y\":0,\"w\":47,\"h\":48},\"sourceSize\":{\"w\":48,\"h\":48}},{\"filename\":\"orc-walk-s02.png\",\"frame\":{\"x\":735,\"y\":51,\"w\":47,\"h\":47},\"rotated\":false,\"trimmed\":true,\"spriteSourceSize\":{\"x\":1,\"y\":1,\"w\":47,\"h\":47},\"sourceSize\":{\"w\":48,\"h\":48}},{\"filename\":\"orc-walk-s03.png\",\"frame\":{\"x\":239,\"y\":197,\"w\":45,\"h\":48},\"rotated\":false,\"trimmed\":true,\"spriteSourceSize\":{\"x\":3,\"y\":0,\"w\":45,\"h\":48},\"sourceSize\":{\"w\":48,\"h\":48}},{\"filename\":\"orc-walk-w00.png\",\"frame\":{\"x\":933,\"y\":100,\"w\":41,\"h\":48},\"rotated\":false,\"trimmed\":true,\"spriteSourceSize\":{\"x\":1,\"y\":0,\"w\":41,\"h\":48},\"sourceSize\":{\"w\":48,\"h\":48}},{\"filename\":\"orc-walk-w01.png\",\"frame\":{\"x\":756,\"y\":100,\"w\":42,\"h\":48},\"rotated\":false,\"trimmed\":true,\"spriteSourceSize\":{\"x\":0,\"y\":0,\"w\":42,\"h\":48},\"sourceSize\":{\"w\":48,\"h\":48}},{\"filename\":\"orc-walk-w02.png\",\"frame\":{\"x\":589,\"y\":51,\"w\":47,\"h\":48},\"rotated\":false,\"trimmed\":true,\"spriteSourceSize\":{\"x\":1,\"y\":0,\"w\":47,\"h\":48},\"sourceSize\":{\"w\":48,\"h\":48}},{\"filename\":\"orc-walk-w03.png\",\"frame\":{\"x\":800,\"y\":100,\"w\":42,\"h\":48},\"rotated\":false,\"trimmed\":true,\"spriteSourceSize\":{\"x\":3,\"y\":0,\"w\":42,\"h\":48},\"sourceSize\":{\"w\":48,\"h\":48}},{\"filename\":\"orc.png\",\"frame\":{\"x\":638,\"y\":51,\"w\":47,\"h\":48},\"rotated\":false,\"trimmed\":true,\"spriteSourceSize\":{\"x\":1,\"y\":0,\"w\":47,\"h\":48},\"sourceSize\":{\"w\":48,\"h\":48}},{\"filename\":\"pow.png\",\"frame\":{\"x\":1,\"y\":95,\"w\":92,\"h\":93},\"rotated\":false,\"trimmed\":true,\"spriteSourceSize\":{\"x\":1,\"y\":1,\"w\":92,\"h\":93},\"sourceSize\":{\"w\":96,\"h\":96}},{\"filename\":\"RIP.png\",\"frame\":{\"x\":97,\"y\":51,\"w\":48,\"h\":46},\"rotated\":false,\"trimmed\":true,\"spriteSourceSize\":{\"x\":0,\"y\":2,\"w\":48,\"h\":46},\"sourceSize\":{\"w\":48,\"h\":48}},{\"filename\":\"trader-dead00.png\",\"frame\":{\"x\":95,\"y\":149,\"w\":48,\"h\":37},\"rotated\":false,\"trimmed\":true,\"spriteSourceSize\":{\"x\":0,\"y\":5,\"w\":48,\"h\":37},\"sourceSize\":{\"w\":48,\"h\":48}},{\"filename\":\"trader-idle-s03.png\",\"frame\":{\"x\":1024,\"y\":51,\"w\":46,\"h\":48},\"rotated\":false,\"trimmed\":true,\"spriteSourceSize\":{\"x\":2,\"y\":0,\"w\":46,\"h\":48},\"sourceSize\":{\"w\":48,\"h\":48}},{\"filename\":\"trader-idle00.png\",\"frame\":{\"x\":427,\"y\":197,\"w\":44,\"h\":47},\"rotated\":false,\"trimmed\":true,\"spriteSourceSize\":{\"x\":2,\"y\":1,\"w\":44,\"h\":47},\"sourceSize\":{\"w\":48,\"h\":48}},{\"filename\":\"trader-idle01.png\",\"frame\":{\"x\":657,\"y\":197,\"w\":43,\"h\":48},\"rotated\":false,\"trimmed\":true,\"spriteSourceSize\":{\"x\":3,\"y\":0,\"w\":43,\"h\":48},\"sourceSize\":{\"w\":48,\"h\":48}},{\"filename\":\"trader-idle02.png\",\"frame\":{\"x\":473,\"y\":197,\"w\":44,\"h\":47},\"rotated\":false,\"trimmed\":true,\"spriteSourceSize\":{\"x\":2,\"y\":1,\"w\":44,\"h\":47},\"sourceSize\":{\"w\":48,\"h\":48}},{\"filename\":\"trader-walk-e00.png\",\"frame\":{\"x\":850,\"y\":199,\"w\":37,\"h\":47},\"rotated\":false,\"trimmed\":true,\"spriteSourceSize\":{\"x\":0,\"y\":1,\"w\":37,\"h\":47},\"sourceSize\":{\"w\":48,\"h\":48}},{\"filename\":\"trader-walk-e01.png\",\"frame\":{\"x\":1018,\"y\":101,\"w\":40,\"h\":47},\"rotated\":false,\"trimmed\":true,\"spriteSourceSize\":{\"x\":0,\"y\":1,\"w\":40,\"h\":47},\"sourceSize\":{\"w\":48,\"h\":48}},{\"filename\":\"trader-walk-e02.png\",\"frame\":{\"x\":814,\"y\":201,\"w\":34,\"h\":48},\"rotated\":false,\"trimmed\":true,\"spriteSourceSize\":{\"x\":1,\"y\":0,\"w\":34,\"h\":48},\"sourceSize\":{\"w\":48,\"h\":48}},{\"filename\":\"trader-walk-e03.png\",\"frame\":{\"x\":737,\"y\":201,\"w\":37,\"h\":48},\"rotated\":false,\"trimmed\":true,\"spriteSourceSize\":{\"x\":0,\"y\":0,\"w\":37,\"h\":48},\"sourceSize\":{\"w\":48,\"h\":48}},{\"filename\":\"trader-walk-n00.png\",\"frame\":{\"x\":519,\"y\":197,\"w\":44,\"h\":47},\"rotated\":false,\"trimmed\":true,\"spriteSourceSize\":{\"x\":2,\"y\":1,\"w\":44,\"h\":47},\"sourceSize\":{\"w\":48,\"h\":48}},{\"filename\":\"trader-walk-n01.png\",\"frame\":{\"x\":844,\"y\":100,\"w\":42,\"h\":48},\"rotated\":false,\"trimmed\":true,\"spriteSourceSize\":{\"x\":4,\"y\":0,\"w\":42,\"h\":48},\"sourceSize\":{\"w\":48,\"h\":48}},{\"filename\":\"trader-walk-n02.png\",\"frame\":{\"x\":565,\"y\":197,\"w\":44,\"h\":47},\"rotated\":false,\"trimmed\":true,\"spriteSourceSize\":{\"x\":2,\"y\":1,\"w\":44,\"h\":47},\"sourceSize\":{\"w\":48,\"h\":48}},{\"filename\":\"trader-walk-n03.png\",\"frame\":{\"x\":933,\"y\":150,\"w\":39,\"h\":48},\"rotated\":false,\"trimmed\":true,\"spriteSourceSize\":{\"x\":8,\"y\":0,\"w\":39,\"h\":48},\"sourceSize\":{\"w\":48,\"h\":48}},{\"filename\":\"trader-walk-s00.png\",\"frame\":{\"x\":333,\"y\":197,\"w\":45,\"h\":47},\"rotated\":false,\"trimmed\":true,\"spriteSourceSize\":{\"x\":2,\"y\":1,\"w\":45,\"h\":47},\"sourceSize\":{\"w\":48,\"h\":48}},{\"filename\":\"trader-walk-s01.png\",\"frame\":{\"x\":286,\"y\":197,\"w\":45,\"h\":48},\"rotated\":false,\"trimmed\":true,\"spriteSourceSize\":{\"x\":3,\"y\":0,\"w\":45,\"h\":48},\"sourceSize\":{\"w\":48,\"h\":48}},{\"filename\":\"trader-walk-s02.png\",\"frame\":{\"x\":380,\"y\":197,\"w\":45,\"h\":47},\"rotated\":false,\"trimmed\":true,\"spriteSourceSize\":{\"x\":2,\"y\":1,\"w\":45,\"h\":47},\"sourceSize\":{\"w\":48,\"h\":48}},{\"filename\":\"trader-walk-s03.png\",\"frame\":{\"x\":1072,\"y\":51,\"w\":46,\"h\":48},\"rotated\":false,\"trimmed\":true,\"spriteSourceSize\":{\"x\":2,\"y\":0,\"w\":46,\"h\":48},\"sourceSize\":{\"w\":48,\"h\":48}},{\"filename\":\"trader-walk-w00.png\",\"frame\":{\"x\":974,\"y\":150,\"w\":39,\"h\":48},\"rotated\":false,\"trimmed\":true,\"spriteSourceSize\":{\"x\":8,\"y\":0,\"w\":39,\"h\":48},\"sourceSize\":{\"w\":48,\"h\":48}},{\"filename\":\"trader-walk-w01.png\",\"frame\":{\"x\":888,\"y\":100,\"w\":43,\"h\":47},\"rotated\":false,\"trimmed\":true,\"spriteSourceSize\":{\"x\":5,\"y\":1,\"w\":43,\"h\":47},\"sourceSize\":{\"w\":48,\"h\":48}},{\"filename\":\"trader-walk-w02.png\",\"frame\":{\"x\":1055,\"y\":151,\"w\":39,\"h\":47},\"rotated\":false,\"trimmed\":true,\"spriteSourceSize\":{\"x\":9,\"y\":1,\"w\":39,\"h\":47},\"sourceSize\":{\"w\":48,\"h\":48}},{\"filename\":\"trader-walk-w03.png\",\"frame\":{\"x\":1096,\"y\":151,\"w\":39,\"h\":47},\"rotated\":false,\"trimmed\":true,\"spriteSourceSize\":{\"x\":9,\"y\":1,\"w\":39,\"h\":47},\"sourceSize\":{\"w\":48,\"h\":48}},{\"filename\":\"trader.png\",\"frame\":{\"x\":611,\"y\":197,\"w\":44,\"h\":47},\"rotated\":false,\"trimmed\":true,\"spriteSourceSize\":{\"x\":2,\"y\":1,\"w\":44,\"h\":47},\"sourceSize\":{\"w\":48,\"h\":48}},{\"filename\":\"ui-checkbox00.png\",\"frame\":{\"x\":145,\"y\":149,\"w\":46,\"h\":46},\"rotated\":false,\"trimmed\":true,\"spriteSourceSize\":{\"x\":1,\"y\":1,\"w\":46,\"h\":46},\"sourceSize\":{\"w\":48,\"h\":48}},{\"filename\":\"ui-checkbox01.png\",\"frame\":{\"x\":193,\"y\":149,\"w\":46,\"h\":46},\"rotated\":false,\"trimmed\":true,\"spriteSourceSize\":{\"x\":1,\"y\":1,\"w\":46,\"h\":46},\"sourceSize\":{\"w\":48,\"h\":48}},{\"filename\":\"ui-play00.png\",\"frame\":{\"x\":241,\"y\":149,\"w\":46,\"h\":46},\"rotated\":false,\"trimmed\":true,\"spriteSourceSize\":{\"x\":1,\"y\":1,\"w\":46,\"h\":46},\"sourceSize\":{\"w\":48,\"h\":48}},{\"filename\":\"ui-play01.png\",\"frame\":{\"x\":289,\"y\":149,\"w\":46,\"h\":46},\"rotated\":false,\"trimmed\":true,\"spriteSourceSize\":{\"x\":1,\"y\":1,\"w\":46,\"h\":46},\"sourceSize\":{\"w\":48,\"h\":48}},{\"filename\":\"ui-settings00.png\",\"frame\":{\"x\":337,\"y\":149,\"w\":46,\"h\":46},\"rotated\":false,\"trimmed\":true,\"spriteSourceSize\":{\"x\":1,\"y\":1,\"w\":46,\"h\":46},\"sourceSize\":{\"w\":48,\"h\":48}},{\"filename\":\"ui-settings01.png\",\"frame\":{\"x\":385,\"y\":149,\"w\":46,\"h\":46},\"rotated\":false,\"trimmed\":true,\"spriteSourceSize\":{\"x\":1,\"y\":1,\"w\":46,\"h\":46},\"sourceSize\":{\"w\":48,\"h\":48}},{\"filename\":\"ui-spinner-down00.png\",\"frame\":{\"x\":433,\"y\":149,\"w\":46,\"h\":46},\"rotated\":false,\"trimmed\":true,\"spriteSourceSize\":{\"x\":1,\"y\":1,\"w\":46,\"h\":46},\"sourceSize\":{\"w\":48,\"h\":48}},{\"filename\":\"ui-spinner-down01.png\",\"frame\":{\"x\":481,\"y\":149,\"w\":46,\"h\":46},\"rotated\":false,\"trimmed\":true,\"spriteSourceSize\":{\"x\":1,\"y\":1,\"w\":46,\"h\":46},\"sourceSize\":{\"w\":48,\"h\":48}},{\"filename\":\"ui-spinner-left00.png\",\"frame\":{\"x\":529,\"y\":149,\"w\":46,\"h\":46},\"rotated\":false,\"trimmed\":true,\"spriteSourceSize\":{\"x\":1,\"y\":1,\"w\":46,\"h\":46},\"sourceSize\":{\"w\":48,\"h\":48}},{\"filename\":\"ui-spinner-left01.png\",\"frame\":{\"x\":577,\"y\":149,\"w\":46,\"h\":46},\"rotated\":false,\"trimmed\":true,\"spriteSourceSize\":{\"x\":1,\"y\":1,\"w\":46,\"h\":46},\"sourceSize\":{\"w\":48,\"h\":48}},{\"filename\":\"ui-spinner-right00.png\",\"frame\":{\"x\":625,\"y\":149,\"w\":46,\"h\":46},\"rotated\":false,\"trimmed\":true,\"spriteSourceSize\":{\"x\":1,\"y\":1,\"w\":46,\"h\":46},\"sourceSize\":{\"w\":48,\"h\":48}},{\"filename\":\"ui-spinner-right01.png\",\"frame\":{\"x\":673,\"y\":149,\"w\":46,\"h\":46},\"rotated\":false,\"trimmed\":true,\"spriteSourceSize\":{\"x\":1,\"y\":1,\"w\":46,\"h\":46},\"sourceSize\":{\"w\":48,\"h\":48}},{\"filename\":\"ui-spinner-up00.png\",\"frame\":{\"x\":143,\"y\":197,\"w\":46,\"h\":46},\"rotated\":false,\"trimmed\":true,\"spriteSourceSize\":{\"x\":1,\"y\":1,\"w\":46,\"h\":46},\"sourceSize\":{\"w\":48,\"h\":48}},{\"filename\":\"ui-spinner-up01.png\",\"frame\":{\"x\":191,\"y\":197,\"w\":46,\"h\":46},\"rotated\":false,\"trimmed\":true,\"spriteSourceSize\":{\"x\":1,\"y\":1,\"w\":46,\"h\":46},\"sourceSize\":{\"w\":48,\"h\":48}},{\"filename\":\"wall-B.png\",\"frame\":{\"x\":597,\"y\":1,\"w\":48,\"h\":48},\"rotated\":false,\"trimmed\":false,\"spriteSourceSize\":{\"x\":0,\"y\":0,\"w\":48,\"h\":48},\"sourceSize\":{\"w\":48,\"h\":48}},{\"filename\":\"wall-BL.png\",\"frame\":{\"x\":962,\"y\":201,\"w\":33,\"h\":48},\"rotated\":false,\"trimmed\":true,\"spriteSourceSize\":{\"x\":15,\"y\":0,\"w\":33,\"h\":48},\"sourceSize\":{\"w\":48,\"h\":48}},{\"filename\":\"wall-BLI.png\",\"frame\":{\"x\":647,\"y\":1,\"w\":48,\"h\":48},\"rotated\":false,\"trimmed\":false,\"spriteSourceSize\":{\"x\":0,\"y\":0,\"w\":48,\"h\":48},\"sourceSize\":{\"w\":48,\"h\":48}},{\"filename\":\"wall-BR.png\",\"frame\":{\"x\":926,\"y\":201,\"w\":34,\"h\":48},\"rotated\":false,\"trimmed\":true,\"spriteSourceSize\":{\"x\":0,\"y\":0,\"w\":34,\"h\":48},\"sourceSize\":{\"w\":48,\"h\":48}},{\"filename\":\"wall-BRI.png\",\"frame\":{\"x\":697,\"y\":1,\"w\":48,\"h\":48},\"rotated\":false,\"trimmed\":false,\"spriteSourceSize\":{\"x\":0,\"y\":0,\"w\":48,\"h\":48},\"sourceSize\":{\"w\":48,\"h\":48}},{\"filename\":\"wall-BTEE.png\",\"frame\":{\"x\":747,\"y\":1,\"w\":48,\"h\":48},\"rotated\":false,\"trimmed\":false,\"spriteSourceSize\":{\"x\":0,\"y\":0,\"w\":48,\"h\":48},\"sourceSize\":{\"w\":48,\"h\":48}},{\"filename\":\"wall-HI.png\",\"frame\":{\"x\":797,\"y\":1,\"w\":48,\"h\":48},\"rotated\":false,\"trimmed\":false,\"spriteSourceSize\":{\"x\":0,\"y\":0,\"w\":48,\"h\":48},\"sourceSize\":{\"w\":48,\"h\":48}},{\"filename\":\"wall-L.png\",\"frame\":{\"x\":997,\"y\":201,\"w\":33,\"h\":48},\"rotated\":false,\"trimmed\":true,\"spriteSourceSize\":{\"x\":15,\"y\":0,\"w\":33,\"h\":48},\"sourceSize\":{\"w\":48,\"h\":48}},{\"filename\":\"wall-LTEE.png\",\"frame\":{\"x\":1032,\"y\":201,\"w\":33,\"h\":48},\"rotated\":false,\"trimmed\":true,\"spriteSourceSize\":{\"x\":15,\"y\":0,\"w\":33,\"h\":48},\"sourceSize\":{\"w\":48,\"h\":48}},{\"filename\":\"wall-R.png\",\"frame\":{\"x\":1067,\"y\":201,\"w\":33,\"h\":48},\"rotated\":false,\"trimmed\":true,\"spriteSourceSize\":{\"x\":0,\"y\":0,\"w\":33,\"h\":48},\"sourceSize\":{\"w\":48,\"h\":48}},{\"filename\":\"wall-RTEE.png\",\"frame\":{\"x\":1102,\"y\":201,\"w\":33,\"h\":48},\"rotated\":false,\"trimmed\":true,\"spriteSourceSize\":{\"x\":0,\"y\":0,\"w\":33,\"h\":48},\"sourceSize\":{\"w\":48,\"h\":48}},{\"filename\":\"wall-T.png\",\"frame\":{\"x\":847,\"y\":1,\"w\":48,\"h\":48},\"rotated\":false,\"trimmed\":false,\"spriteSourceSize\":{\"x\":0,\"y\":0,\"w\":48,\"h\":48},\"sourceSize\":{\"w\":48,\"h\":48}},{\"filename\":\"wall-TL.png\",\"frame\":{\"x\":1137,\"y\":201,\"w\":33,\"h\":48},\"rotated\":false,\"trimmed\":true,\"spriteSourceSize\":{\"x\":15,\"y\":0,\"w\":33,\"h\":48},\"sourceSize\":{\"w\":48,\"h\":48}},{\"filename\":\"wall-TLI.png\",\"frame\":{\"x\":897,\"y\":1,\"w\":48,\"h\":48},\"rotated\":false,\"trimmed\":false,\"spriteSourceSize\":{\"x\":0,\"y\":0,\"w\":48,\"h\":48},\"sourceSize\":{\"w\":48,\"h\":48}},{\"filename\":\"wall-TR.png\",\"frame\":{\"x\":1172,\"y\":201,\"w\":33,\"h\":48},\"rotated\":false,\"trimmed\":true,\"spriteSourceSize\":{\"x\":0,\"y\":0,\"w\":33,\"h\":48},\"sourceSize\":{\"w\":48,\"h\":48}},{\"filename\":\"wall-TRI.png\",\"frame\":{\"x\":947,\"y\":1,\"w\":48,\"h\":48},\"rotated\":false,\"trimmed\":false,\"spriteSourceSize\":{\"x\":0,\"y\":0,\"w\":48,\"h\":48},\"sourceSize\":{\"w\":48,\"h\":48}},{\"filename\":\"wall-TTEE.png\",\"frame\":{\"x\":997,\"y\":1,\"w\":48,\"h\":48},\"rotated\":false,\"trimmed\":false,\"spriteSourceSize\":{\"x\":0,\"y\":0,\"w\":48,\"h\":48},\"sourceSize\":{\"w\":48,\"h\":48}},{\"filename\":\"wall-VI.png\",\"frame\":{\"x\":1047,\"y\":1,\"w\":48,\"h\":48},\"rotated\":false,\"trimmed\":false,\"spriteSourceSize\":{\"x\":0,\"y\":0,\"w\":48,\"h\":48},\"sourceSize\":{\"w\":48,\"h\":48}},{\"filename\":\"wall-XI.png\",\"frame\":{\"x\":1097,\"y\":1,\"w\":48,\"h\":48},\"rotated\":false,\"trimmed\":false,\"spriteSourceSize\":{\"x\":0,\"y\":0,\"w\":48,\"h\":48},\"sourceSize\":{\"w\":48,\"h\":48}},{\"filename\":\"wall2-B.png\",\"frame\":{\"x\":1147,\"y\":1,\"w\":48,\"h\":48},\"rotated\":false,\"trimmed\":false,\"spriteSourceSize\":{\"x\":0,\"y\":0,\"w\":48,\"h\":48},\"sourceSize\":{\"w\":48,\"h\":48}},{\"filename\":\"wall2-HI.png\",\"frame\":{\"x\":95,\"y\":99,\"w\":48,\"h\":48},\"rotated\":false,\"trimmed\":false,\"spriteSourceSize\":{\"x\":0,\"y\":0,\"w\":48,\"h\":48},\"sourceSize\":{\"w\":48,\"h\":48}},{\"filename\":\"wall2-T.png\",\"frame\":{\"x\":147,\"y\":51,\"w\":48,\"h\":48},\"rotated\":false,\"trimmed\":false,\"spriteSourceSize\":{\"x\":0,\"y\":0,\"w\":48,\"h\":48},\"sourceSize\":{\"w\":48,\"h\":48}}],\"meta\":{\"app\":\"https://www.codeandweb.com/texturepacker\",\"version\":\"1.0\",\"image\":\"dungeon.png\",\"format\":\"RGBA8888\",\"size\":{\"w\":1208,\"h\":250},\"scale\":\"1\",\"smartupdate\":\"$TexturePacker:SmartUpdate:4534e0ee2047f5c5e3b4b1eab74e2e70:5c8c3f7b31e25a52db917ab223c06f93:9c0fba27a8a0c106083a8713f6c67b32$\"}}');\n\n\nvar $a3a9222774fc4465$exports = {};\n$a3a9222774fc4465$exports = new URL(\"dungeon.c7fee6f0.png\", import.meta.url).toString();\n\n\n/**\n * Tile size to use throughout the game\n */ const $22a8782d7473db79$var$TILE_SIZE = 48;\n/** @type {DOMHighResTimeStamp} */ let $22a8782d7473db79$var$lastTimeStamp;\n/**\n * Initialise the game engine.\n * @param {Object} screenOptions - @see {@link module:utils/game/screen~setScreen} for\n * details of options.\n */ async function $22a8782d7473db79$var$initialise(screenOptions) {\n    (0, $a1820c190f7a8b2e$export$2e2bcd8739ae039).setOptions(screenOptions);\n    (0, $2b83232840d61fcb$export$9d534e3026b35ff)((0, $a1820c190f7a8b2e$export$2e2bcd8739ae039).getContext2D());\n    $22a8782d7473db79$var$setupListeners();\n    // Need a menu here but for now, just load the test screen.\n    (0, $81dd6b24526c5347$export$2e2bcd8739ae039).showOkDialog(\"Welcome to the Scripted Dungeon\", \"Let's start\", \"door\").then(()=>(0, $5840285c35321464$export$2e2bcd8739ae039).loadSpriteMap((0, (/*@__PURE__*/$parcel$interopDefault($e8347232c61bf163$exports))), (0, (/*@__PURE__*/$parcel$interopDefault($a3a9222774fc4465$exports))))).then(()=>$5114bd1ce9a158d7$export$fa2f0f26e19d189b($5114bd1ce9a158d7$export$350d529e1ecdc71.DUNGEON_SCRIPT)).then((script)=>(0, $b8e5621826152c93$export$2e2bcd8739ae039).setSceneDefinitions((0, $a63c524e2668f377$export$2e2bcd8739ae039)(script))).then(()=>{}).then(()=>(0, $ce5abd6ee7a09c2e$export$2e2bcd8739ae039).triggerEvent((0, $ce5abd6ee7a09c2e$export$2e2bcd8739ae039).EventId.MAIN_MENU)).then(()=>$22a8782d7473db79$var$startGame()).catch((error)=>{\n        (0, $2d5b4e7cb639ebe1$export$2e2bcd8739ae039).error(error);\n        alert(`Fatal error in main game. ${error.message}`);\n        return;\n    });\n}\n/**\n * Set up the listeners.\n */ function $22a8782d7473db79$var$setupListeners() {\n    const canvas = (0, $a1820c190f7a8b2e$export$2e2bcd8739ae039).getCanvas();\n    $f6529945ae220c94$export$2b4524682ad19724(canvas);\n    canvas.addEventListener($f6529945ae220c94$export$a5ec1de9afad15ae, (event)=>{\n        const x = event.detail.x;\n        const y = event.detail.y;\n        const mappedPositions = (0, $a1820c190f7a8b2e$export$2e2bcd8739ae039).uiCoordsToMappedPositions(x, y);\n        if (!(0, $3ce6241a7c9b35c7$export$2e2bcd8739ae039).resolveClick(mappedPositions)) (0, $f8633d94d0c88c58$export$2e2bcd8739ae039).resolveClick(mappedPositions);\n    });\n    canvas.addEventListener($f6529945ae220c94$export$90ded0e426ce21, (event)=>{\n        const x = event.detail.x;\n        const y = event.detail.y;\n        const mappedPositions = (0, $a1820c190f7a8b2e$export$2e2bcd8739ae039).uiCoordsToMappedPositions(x, y);\n        (0, $3ce6241a7c9b35c7$export$2e2bcd8739ae039).resolvePointerDown(mappedPositions);\n    });\n    canvas.addEventListener($f6529945ae220c94$export$3853e404217e8f25, (event)=>{\n        const x = event.detail.x;\n        const y = event.detail.y;\n        const mappedPositions = (0, $a1820c190f7a8b2e$export$2e2bcd8739ae039).uiCoordsToMappedPositions(x, y);\n        (0, $3ce6241a7c9b35c7$export$2e2bcd8739ae039).resolvePointerUp(mappedPositions);\n    });\n    canvas.addEventListener($f6529945ae220c94$export$f1ed6970fd95c8d6, (event)=>{\n        const x = event.detail.x;\n        const y = event.detail.y;\n        const mappedPositions = (0, $a1820c190f7a8b2e$export$2e2bcd8739ae039).uiCoordsToMappedPositions(x, y);\n        (0, $3ce6241a7c9b35c7$export$2e2bcd8739ae039).resolvePointerCancel(mappedPositions);\n    });\n    canvas.addEventListener($f6529945ae220c94$export$d69198a72de4964d, (event)=>{\n        (0, $b8e5621826152c93$export$2e2bcd8739ae039).panCameraBy(-event.detail.dx, -event.detail.dy);\n    });\n    canvas.addEventListener(\"contextmenu\", (event)=>{\n        (0, $2d5b4e7cb639ebe1$export$2e2bcd8739ae039).debug(\"Context menu\");\n        const x = event.detail.x;\n        const y = event.detail.y;\n        const mappedPositions = (0, $a1820c190f7a8b2e$export$2e2bcd8739ae039).uiCoordsToMappedPositions(x, y);\n        if (!(0, $3ce6241a7c9b35c7$export$2e2bcd8739ae039).resolveContextMenu(mappedPositions)) (0, $f8633d94d0c88c58$export$2e2bcd8739ae039).resolveContextMenu(mappedPositions);\n        event.preventDefault();\n    });\n}\n/**\n * Start the game.\n */ function $22a8782d7473db79$var$startGame() {\n    window.requestAnimationFrame($22a8782d7473db79$var$gameLoop);\n}\n/**\n * Main animation loop.\n * @param {DOMHighResTimeStamp} timeStamp\n */ function $22a8782d7473db79$var$gameLoop(timeStamp) {\n    (0, $92e1ec0ff12c1fbf$export$2e2bcd8739ae039).updateTimeNow(timeStamp);\n    if ($22a8782d7473db79$var$lastTimeStamp) {\n        const deltaSeconds = (timeStamp - $22a8782d7473db79$var$lastTimeStamp) / 1000;\n        (0, $b8e5621826152c93$export$2e2bcd8739ae039).update(deltaSeconds);\n        if ($f92f169e79f1c193$export$8eb3892b442747bd.showFps) $22a8782d7473db79$var$showFps(1 / deltaSeconds);\n    }\n    $22a8782d7473db79$var$lastTimeStamp = timeStamp;\n    window.requestAnimationFrame($22a8782d7473db79$var$gameLoop);\n}\n/**\n * Show frames per second on screen.\n * @param {number} fps - frames per second\n */ function $22a8782d7473db79$var$showFps(fps) {\n    $335738a0ba898678$export$bec150f75a9b8f11((0, $a1820c190f7a8b2e$export$2e2bcd8739ae039).getContext2D(), `FPS: ${Math.round(fps)}`, {\n        x: 0,\n        y: (0, $a1820c190f7a8b2e$export$2e2bcd8739ae039).getCanvasDimensions().height\n    }, {\n        color: \"green\"\n    });\n}\n/**\n * The game singleton\n */ const $22a8782d7473db79$var$GAME = {\n    TILE_SIZE: $22a8782d7473db79$var$TILE_SIZE,\n    initialise: $22a8782d7473db79$var$initialise\n};\nvar $22a8782d7473db79$export$2e2bcd8739ae039 = $22a8782d7473db79$var$GAME;\n\n\nwindow.addEventListener(\"load\", ()=>{\n    const DESIGN_WIDTH = 800;\n    const DESIGN_HEIGHT = 600;\n    try {\n        (0, $22a8782d7473db79$export$2e2bcd8739ae039).initialise({\n            width: DESIGN_WIDTH,\n            height: DESIGN_HEIGHT,\n            maxScale: 2.4,\n            minScale: 1,\n            sizingMethod: \"COVER\",\n            alpha: false\n        });\n    } catch (error) {\n        (0, $2d5b4e7cb639ebe1$export$2e2bcd8739ae039).fatal(error);\n    }\n});\n\n\n//# sourceMappingURL=index.91e28fc6.js.map\n","/**\n * @file Main entry point\n *\n * @module index\n */\n/**\n * @license {@link https://opensource.org/license/mit/|MIT}\n *\n * Copyright 2024 Steve Butler\n */\n/**\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the “Software”), to deal in\n * the Software without restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n * Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */\nimport LOG from './utils/logging.js';\nimport GAME from './utils/game/game.js';\n\nwindow.addEventListener('load', () => {\n  const DESIGN_WIDTH = 800;\n  const DESIGN_HEIGHT = 600;\n  try {\n    GAME.initialise({\n      width: DESIGN_WIDTH,\n      height: DESIGN_HEIGHT,\n      maxScale: 2.4,\n      minScale: 1,\n      sizingMethod: 'COVER',\n      alpha: false,\n    });\n  } catch (error) {\n    LOG.fatal(error);\n  }\n});\n","/**\n * @file Handle logging. This allows easier access to logs on mobile devices.\n *\n * @module utils/logging\n *\n * License {@link https://opensource.org/license/mit/|MIT}\n *\n * Copyright 2024 Steve Butler (henspace.com).\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the “Software”), to deal in\n * the Software without restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n * Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */\n\nlet messages = [];\n\n/** Add listener for syntax errors. */\nwindow.addEventListener('error', (event) => {\n  alert(\n    `ERROR: ${event.filename}; line ${event.lineno}\\n${event.message}\\n:Stack:\\n${event.error.stack}`\n  );\n});\n\n/**\n * Log information.\n * @param  {...any} data\n */\nfunction logGeneral(...data) {\n  console.log(...data);\n}\n\n/**\n * Log information.\n * @param  {...any} data\n */\nfunction logInfo(...data) {\n  console.debug(...data);\n}\n\n/**\n * Log information.\n * @param  {...any} data\n */\nfunction logDebug(...data) {\n  console.debug(...data);\n}\n\n/**\n * Log error information.\n * @param  {...any} data\n */\nfunction logError(...data) {\n  console.error(...data);\n  messages = messages.concat(data);\n}\n\n/**\n * Log error information.\n * @param  {Error}} data\n */\nfunction logFatal(error) {\n  console.error(error);\n  let message;\n  if (error.message) {\n    message = `${error.message}\\nStack:\\n${error.stack}`;\n  } else {\n    message = error;\n  }\n  alert(`Fatal error: ${message}\\nPrevious errors:\\n${messages.join('\\n')}`);\n  messages.push(message);\n}\n\n/**\n * Object to access logging routines.\n */\nconst LOG = {\n  log: logGeneral,\n  info: logInfo,\n  debug: logDebug,\n  error: logError,\n  fatal: logFatal,\n};\n\nexport default LOG;\n","/**\n * @file The main game. This is a singleton as there can only be a single game.\n *\n * @module utils/game/game\n *\n * License {@link https://opensource.org/license/mit/|MIT}\n *\n * Copyright 2024 Steve Butler\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the “Software”), to deal in\n * the Software without restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n * Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */\nimport SCREEN from './screen.js';\nimport WORLD from './world.js';\nimport HUD from './hud.js';\nimport { checkEmojis } from '../text/emojis.js';\nimport GAME_CLOCK from '../time/clock.js';\nimport * as debug from '../debug.js';\nimport * as text from '../text/text.js';\nimport * as assetLoaders from '../assetLoaders.js';\nimport parseScript from '../../scriptReaders/scriptParser.js';\nimport SCENE_MANAGER from '../game/sceneManager.js';\nimport UI from '../dom/ui.js';\nimport LOG from '../logging.js';\n\nimport * as pointerActions from '../dom/pointerActions.js';\nimport TURN_MANAGER from './turnManager.js';\n\nimport IMAGE_MANAGER from '../sprites/imageManager.js';\nimport textureMap from '../../../assets/images/dungeon.json';\nimport textureUrl from '../../../assets/images/dungeon.png';\n\n/**\n * Tile size to use throughout the game\n */\nconst TILE_SIZE = 48;\n\n/** @type {DOMHighResTimeStamp} */\nlet lastTimeStamp;\n\n/**\n * Initialise the game engine.\n * @param {Object} screenOptions - @see {@link module:utils/game/screen~setScreen} for\n * details of options.\n */\nasync function initialise(screenOptions) {\n  SCREEN.setOptions(screenOptions);\n  checkEmojis(SCREEN.getContext2D());\n  setupListeners();\n  // Need a menu here but for now, just load the test screen.\n\n  UI.showOkDialog('Welcome to the Scripted Dungeon', \"Let's start\", 'door')\n    .then(() => IMAGE_MANAGER.loadSpriteMap(textureMap, textureUrl))\n    .then(() => assetLoaders.loadTextFromUrl(assetLoaders.Urls.DUNGEON_SCRIPT))\n    .then((script) => SCENE_MANAGER.setSceneDefinitions(parseScript(script)))\n    .then(() => {})\n    .then(() => TURN_MANAGER.triggerEvent(TURN_MANAGER.EventId.MAIN_MENU))\n    .then(() => startGame())\n    .catch((error) => {\n      LOG.error(error);\n      alert(`Fatal error in main game. ${error.message}`);\n      return;\n    });\n}\n\n/**\n * Set up the listeners.\n */\nfunction setupListeners() {\n  const canvas = SCREEN.getCanvas();\n  pointerActions.addPointerListeners(canvas);\n\n  canvas.addEventListener(pointerActions.CUSTOM_CLICK_EVENT_NAME, (event) => {\n    const x = event.detail.x;\n    const y = event.detail.y;\n    const mappedPositions = SCREEN.uiCoordsToMappedPositions(x, y);\n    if (!HUD.resolveClick(mappedPositions)) {\n      WORLD.resolveClick(mappedPositions);\n    }\n  });\n\n  canvas.addEventListener(\n    pointerActions.CUSTOM_POINTER_DOWN_EVENT_NAME,\n    (event) => {\n      const x = event.detail.x;\n      const y = event.detail.y;\n      const mappedPositions = SCREEN.uiCoordsToMappedPositions(x, y);\n      HUD.resolvePointerDown(mappedPositions);\n    }\n  );\n\n  canvas.addEventListener(\n    pointerActions.CUSTOM_POINTER_UP_EVENT_NAME,\n    (event) => {\n      const x = event.detail.x;\n      const y = event.detail.y;\n      const mappedPositions = SCREEN.uiCoordsToMappedPositions(x, y);\n      HUD.resolvePointerUp(mappedPositions);\n    }\n  );\n\n  canvas.addEventListener(\n    pointerActions.CUSTOM_POINTER_CANCEL_EVENT_NAME,\n    (event) => {\n      const x = event.detail.x;\n      const y = event.detail.y;\n      const mappedPositions = SCREEN.uiCoordsToMappedPositions(x, y);\n      HUD.resolvePointerCancel(mappedPositions);\n    }\n  );\n\n  canvas.addEventListener(\n    pointerActions.CUSTOM_POINTER_DRAG_EVENT_NAME,\n    (event) => {\n      SCENE_MANAGER.panCameraBy(-event.detail.dx, -event.detail.dy);\n    }\n  );\n\n  canvas.addEventListener('contextmenu', (event) => {\n    LOG.debug('Context menu');\n    const x = event.detail.x;\n    const y = event.detail.y;\n    const mappedPositions = SCREEN.uiCoordsToMappedPositions(x, y);\n    if (!HUD.resolveContextMenu(mappedPositions)) {\n      WORLD.resolveContextMenu(mappedPositions);\n    }\n    event.preventDefault();\n  });\n}\n\n/**\n * Start the game.\n */\nfunction startGame() {\n  window.requestAnimationFrame(gameLoop);\n}\n\n/**\n * Main animation loop.\n * @param {DOMHighResTimeStamp} timeStamp\n */\nfunction gameLoop(timeStamp) {\n  GAME_CLOCK.updateTimeNow(timeStamp);\n  if (lastTimeStamp) {\n    const deltaSeconds = (timeStamp - lastTimeStamp) / 1000;\n    SCENE_MANAGER.update(deltaSeconds);\n    if (debug.OPTIONS.showFps) {\n      showFps(1 / deltaSeconds);\n    }\n  }\n\n  lastTimeStamp = timeStamp;\n\n  window.requestAnimationFrame(gameLoop);\n}\n\n/**\n * Show frames per second on screen.\n * @param {number} fps - frames per second\n */\nfunction showFps(fps) {\n  text.writeText(\n    SCREEN.getContext2D(),\n    `FPS: ${Math.round(fps)}`,\n    {\n      x: 0,\n      y: SCREEN.getCanvasDimensions().height,\n    },\n    { color: 'green' }\n  );\n}\n\n/**\n * The game singleton\n */\nconst GAME = {\n  TILE_SIZE: TILE_SIZE,\n  initialise: initialise,\n};\n\nexport default GAME;\n","/**\n * @file Utilities for handling the screen size. The screen is implemented as\n * a singleton.\n * The game is configured as a world and a screen. The screen is the area that is\n * rendered with a canvas. The world is the total space in which objects can\n * exist. The world is potentially unbounded.\n *\n * The canvas is set to the same size as the screen and then the canvas is\n * resized to fit the display using CSS.\n *\n * The canvas is centred on the camera, so although the canvas rect and screen\n * rect are the same size, the screen always has its top left at 0, 0 in the world\n * whereas the canvas rect may effectively move around the world.\n *\n * @module utils/screen\n *\n * License {@link https://opensource.org/license/mit/|MIT}\n *\n * Copyright 2024 Steve Butler\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the “Software”), to deal in\n * the Software without restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n * Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */\n\nimport * as fonts from '../text/fonts.js';\nimport { Position, Rectangle } from '../geometry.js';\nimport LOG from '../logging.js';\n\n/**\n * @typedef {Object} ScreenDetails\n * @property {HTMLCanvasElement} canvas\n * @property {number} width\n * @property {number} height\n * @property {number} x\n * @property {number} y\n */\nlet throttleTimer = null;\n\nlet canvas = null;\nlet canvasRect = null;\nlet canvasHalfWidth = 0;\nlet canvasHalfHeight = 0;\nlet canvasAlpha = true;\nlet visibleCanvasRect = null;\nlet gameElement = null;\n\nlet left = 0;\nlet top = 0;\n//let screenRect;\nlet scale = 1;\nlet maxScale = 1;\nlet minScale = 0.1;\nlet sizingMethod = 'COVER';\nlet cameraPosition = new Position(0, 0, 0);\n\n/**\n * Add event listener to handle resizing of the window.\n */\nwindow.addEventListener('resize', () => {\n  if (throttleTimer !== null) {\n    return; // it will get handled.\n  }\n  throttleTimer = window.setTimeout(() => {\n    resize();\n    throttleTimer = null;\n  }, 200);\n});\n\n/**\n * Get dimensions of the working area for the game.\n * @returns {import('../geometry.js').Dims2D}\n */\nfunction getDisplayDims() {\n  return { width: window.innerWidth, height: window.innerHeight };\n}\n/**\n * @param {Object} options - config options.\n * @param {number} options.width - the design width for the screen.\n * @param {number} options.height - the design height for the page.\n * @param {number} options.maxScale - maximum scaling allowed\n * @param {string} options.sizingMethod  - 'FIT' or 'COVER'. Defaults to 'FIT'\n * @param {boolean} options.alpha - Should canvas have an alpha channel\n */\nfunction setOptions(options) {\n  if (canvas) {\n    LOG.error('Multiple calls to setScreen ignored.');\n    return;\n  }\n  gameElement = document.getElementById('game-content');\n  fonts.initialise(options.width);\n  canvas = document.createElement('canvas');\n  canvas.id = 'game-canvas';\n  canvas.setAttribute('width', options.width);\n  canvas.setAttribute('height', options.height);\n  canvas.innerText = 'Loading the app.';\n  canvasRect = new Rectangle(0, 0, options.width, options.height);\n  canvasHalfWidth = options.width / 2;\n  canvasHalfHeight = options.height / 2;\n\n  gameElement.appendChild(canvas);\n\n  maxScale = options.maxScale;\n  minScale = options.minScale;\n  sizingMethod = options.sizingMethod;\n  canvasAlpha = options.alpha;\n  sizeScreen();\n  syncDomFonts();\n}\n\n/**\n * Size the screen\n * @param {number} aspectRatio - aspect ratio (width / height) of the screen\n * @param {number} windowAspectRatio - aspect ratio (width / height) of the screen\n * @param {string} method - FIT or COVER. Defaults to FIT\n */\nfunction shouldFitHeight(aspectRatio, windowAspectRatio, sizingMethod) {\n  if (sizingMethod === 'COVER') {\n    return aspectRatio > windowAspectRatio;\n  } else {\n    return aspectRatio < windowAspectRatio;\n  }\n}\n/**\n * Resize the screen according to the current inner window dimensions.\n */\nfunction sizeScreen() {\n  const dims = getDisplayDims();\n  let aspectRatio = canvasRect.width / canvasRect.height;\n  let displayedHeight = 0;\n  let displayedWidth = 0;\n  const windowAspectRatio = dims.width / dims.height;\n  const fitHeight = shouldFitHeight(\n    aspectRatio,\n    windowAspectRatio,\n    sizingMethod\n  );\n  if (fitHeight) {\n    displayedHeight = dims.height;\n    displayedWidth = displayedHeight * aspectRatio;\n  } else {\n    displayedWidth = dims.width;\n    displayedHeight = displayedWidth / aspectRatio;\n  }\n\n  scale = displayedWidth / canvasRect.width;\n  if (scale > maxScale) {\n    scale = maxScale;\n    displayedWidth = scale * canvasRect.width;\n    displayedHeight = scale * canvasRect.height;\n  } else if (scale < minScale) {\n    scale = minScale;\n    displayedWidth = scale * canvasRect.width;\n    displayedHeight = scale * canvasRect.height;\n  }\n\n  left = (dims.width - displayedWidth) / 2;\n  top = (dims.height - displayedHeight) / 2;\n\n  canvas.style.left = `${left}px`;\n  canvas.style.top = `${top}px`;\n  canvas.style.width = `${displayedWidth}px`;\n  canvas.style.height = `${displayedHeight}px`;\n\n  let visibleCanvasWidth;\n  let visibleCanvasHeight;\n  let visibleCanvasOffsetX;\n  let visibleCanvasOffsetY;\n  if (left < 0) {\n    visibleCanvasOffsetX = -left / scale;\n    visibleCanvasWidth = dims.width / scale;\n  } else {\n    visibleCanvasOffsetX = 0;\n    visibleCanvasWidth = canvasRect.width;\n  }\n  if (top < 0) {\n    visibleCanvasOffsetY = -top / scale;\n    visibleCanvasHeight = dims.height / scale;\n  } else {\n    visibleCanvasOffsetY = 0;\n    visibleCanvasHeight = canvasRect.height;\n  }\n\n  visibleCanvasRect = new Rectangle(\n    visibleCanvasOffsetX,\n    visibleCanvasOffsetY,\n    visibleCanvasWidth,\n    visibleCanvasHeight\n  );\n  LOG.debug(`Scale: ${scale}`);\n  LOG.debug(`Window: width: ${dims.width}, height: ${dims.height}`);\n  LOG.debug(\n    `Display: left: ${left}, top: ${top}, width: ${displayedWidth}, height: ${displayedHeight}`\n  );\n  LOG.debug(\n    `Visible canvas: left: ${visibleCanvasOffsetX}, top: ${visibleCanvasOffsetY}, width: ${visibleCanvasWidth}, height: ${visibleCanvasHeight}`\n  );\n}\n\n/**\n * Adjust the font sizes to ensure glass in sync with canvas.\n */\nfunction syncDomFonts() {\n  const rootFontSize = fonts.getRootFontSize() * scale;\n  document.documentElement.style.fontSize = `${rootFontSize}px`;\n}\n\n/**\n * Resize the screen.\n */\nfunction resize() {\n  sizeScreen();\n  syncDomFonts();\n}\n/**\n * @typedef {Object} screenDetails\n * @property {HTMLCanvasElement} canvas\n * @property {number} width - design width\n * @property {number} height - design height\n */\n\n/**\n * Clear the canvas.\n */\nfunction clearCanvas() {\n  getContext2D().clearRect(0, 0, canvasRect.width, canvasRect.height);\n}\n\n/**\n * Get the bounds of the world that are plotted in the canvas.\n * @returns {Rectangle}\n */\nfunction getWorldInCanvasBounds() {\n  return new Rectangle(\n    cameraPosition.x,\n    cameraPosition.y,\n    canvasRect.width,\n    canvasRect.height\n  );\n}\n\n/**\n * Get canvas dimensions.\n * @returns {Dims2D}\n */\nfunction getCanvasDimensions() {\n  return { width: canvasRect.width, height: canvasRect.height };\n}\n\n/**\n * Get the canvas context.\n * @returns {CanvasRenderingContext2D}\n */\nfunction getContext2D() {\n  return canvas.getContext('2d', { alpha: canvasAlpha });\n}\n\n/**\n * @typedef {Object} Closers\n * @property {Element} element - when clicked, this should close a display.\n * @property {number} response - the code returned if this element closed a display.\n */\n/**\n * Set the content of the glass layer. OnClick events are added automatically to the\n * closers.\n * @param {HTMLElement} element\n * @param {Closers[]} closers - array of Closers. If not provided then the entire display\n * is used.\n * @param {string} className\n * @returns {Promise} fulfils to null when clicked.\n */\nfunction displayOnGlass(element, closers, className) {\n  const glass = document.createElement('div');\n  document.body.appendChild(glass);\n  glass.className = 'glass';\n  const glassContent = document.createElement('div');\n  glass.appendChild(glassContent);\n  glassContent.className = 'glass-content';\n  glassContent.appendChild(element);\n  if (className) {\n    glass.classList.add(className);\n  }\n  glass.style.display = 'block';\n  glass.style.opacity = 1;\n  const promises = [];\n  if (closers && closers.length > 0) {\n    closers.forEach((closer) => {\n      const promise = new Promise((resolve) => {\n        closer.element.addEventListener('click', async () => {\n          resolve(closer.response);\n        });\n      });\n      promises.push(promise);\n    });\n  } else {\n    const promise = new Promise((resolve) =>\n      glassContent.addEventListener('click', () => resolve())\n    );\n    promises.push(promise);\n  }\n  let closingId;\n  return Promise.race(promises)\n    .then((id) => {\n      closingId = id;\n      return wipeGlass(glass);\n    })\n    .then(() => closingId);\n}\n\n/**\n * Clear and close the glass layer. The layer is hidden and it's content removed.\n * @param {Element} glass\n * @returns {Promise} fulfils to undefined. This is to allow opacity transition.\n */\nfunction wipeGlass(glass) {\n  glass.style.opacity = 0;\n  return new Promise((resolve) => {\n    window.setTimeout(() => {\n      glass.remove();\n      resolve();\n    }, 500);\n  });\n}\n\n/**\n * Pan the camera.\n * @param {number} dx - movement in world units\n * @param {number} dy - movement in world units\n */\nfunction panCamera(dx, dy) {\n  cameraPosition.x += dx;\n  cameraPosition.y += dy;\n}\n\n/**\n * Centre the canvas on a point\n * @param {Point} point\n */\nfunction centreCanvasOn(point) {\n  cameraPosition.x = point.x - canvasHalfWidth;\n  cameraPosition.y = point.y - canvasHalfHeight;\n}\n\n/**\n * Convert a distance from ui units to world units.\n * @param {number} dist\n * @returns {number}\n */\nfunction uiToWorld(dist) {\n  return dist / scale;\n}\n\n/**\n * Convert a distance from world units to ui units.\n * @param {number} dist\n * @returns {number}\n */\nfunction worldToUi(dist) {\n  return dist * scale;\n}\n\n/**\n * @typedef {Object} MappedPositions\n * @property {Position} canvas - position on the canvas\n * @property {Position} world - position in the world\n */\n/**\n * Convert ui Coordinates to world Position\n * @param {number} x  -position in the ui\n * @param {number} y  -position in the ui\n * @returns {MappedPositions} position on the canvas\n */\nfunction uiCoordsToMappedPositions(x, y) {\n  x = uiToWorld(x);\n  y = uiToWorld(y);\n  const canvasPosition = new Position(Math.round(x), Math.round(y));\n  const worldPosition = new Position(\n    Math.round(x + cameraPosition.x),\n    Math.round(y + cameraPosition.y),\n    -cameraPosition.rotation\n  );\n  return { canvas: canvasPosition, world: worldPosition };\n}\n\n/**\n * Convert world Position to canvas Position\n * @param {Position} position  -position in the world\n * @returns {Position} position on the canvas\n */\nfunction worldPositionToCanvas(position) {\n  return new Position(\n    position.x - cameraPosition.x,\n    position.y - cameraPosition.y,\n    position.rotation\n  );\n}\n\n/**\n * Convert canvas Position to world Position\n * @param {Position} position  -position on the canvas\n * @returns {Position} position in the world\n */\nfunction canvasPositionToWorld(position) {\n  return new Position(\n    position.x + cameraPosition.x,\n    position.y + cameraPosition.y,\n    position.rotation\n  );\n}\n\n/**\n * Convert glass position to world position. Negative positions are calculated as\n * offsets from the right and bottom of the glass dimensions. Otherwise they are\n * calculated as offsets from the left and top.\n * @returns {Position}\n */\nfunction glassPositionToWorld(position) {\n  const xOrigin =\n    position.x < 0\n      ? visibleCanvasRect.x + visibleCanvasRect.width\n      : visibleCanvasRect.x;\n  const yOrigin =\n    position.y < 0\n      ? visibleCanvasRect.y + visibleCanvasRect.height\n      : visibleCanvasRect.y;\n\n  let x = xOrigin + position.x;\n  let y = yOrigin + position.y;\n\n  return canvasPositionToWorld(new Position(x, y, position.rotation));\n}\n\n/**\n * Test if rectangle on screen.\n * @param {Rectangle} rect\n * @return {boolean} true if on screen\n */\nfunction isOnScreen(rect) {\n  return rect.overlaps(canvasRect);\n}\n\n/**\n * Test if rectangle is visible on the canvas.\n * @param {Rectangle} rect - this should have been converted to canvas coordinates\n * @return {boolean} true if on screen\n */\nfunction isOnCanvas(rect) {\n  return rect.overlaps(canvasRect);\n}\n\n/**\n * Get the dimensions of the visible canvas.\n * @returns {Rectangle}\n */\nfunction getVisibleCanvasRect() {\n  return visibleCanvasRect;\n}\n\n/**\n * Set the global opacity.\n * @param {number} opacity\n */\nfunction setOpacity(opacity) {\n  getContext2D().globalAlpha = opacity;\n}\n/**\n * Screen object\n */\nconst SCREEN = {\n  canvasPositionToWorld: canvasPositionToWorld,\n  centreCanvasOn: centreCanvasOn,\n  clearCanvas: clearCanvas,\n  displayOnGlass: displayOnGlass,\n  getCanvas: () => canvas,\n  getContext2D: getContext2D,\n  getCanvasDimensions: getCanvasDimensions,\n  getWorldInCanvasBounds: getWorldInCanvasBounds,\n  getVisibleCanvasRect: getVisibleCanvasRect,\n  glassPositionToWorld: glassPositionToWorld,\n  isOnCanvas: isOnCanvas,\n  isOnScreen: isOnScreen,\n  panCamera: panCamera,\n  resize: resize,\n  setOpacity: setOpacity,\n  setOptions: setOptions,\n  wipeGlass: wipeGlass,\n  worldPositionToCanvas: worldPositionToCanvas,\n  worldToUi: worldToUi,\n  uiCoordsToMappedPositions: uiCoordsToMappedPositions,\n  uiToWorld: uiToWorld,\n};\n\nexport default SCREEN;\n","/**\n * @file Font data\n *\n * @module utils/text/fonts\n *\n * License {@link https://opensource.org/license/mit/|MIT}\n *\n * Copyright 2024 Steve Butler\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the “Software”), to deal in\n * the Software without restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n * Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */\n\nconst baseSize = 15; // minimum pixel size\n\n/*\n * These should be replicated in the CSS.\n */\nconst H1_FONT_SCALE = 2.0;\nconst H2_FONT_SCALE = 1.5;\nconst H3_FONT_SCALE = 1.2;\n\nconst NORMAL_FONT = \"'UnifrakturCook', cursive\";\nconst HEADING_FONT = \"'UnifrakturCook', cursive\"; // cspell:disable-line\nconst EMOJI_SPRITE_FONT = \"'UnifrakturCook', cursive\"; // cspell:disable-line\n\n/**\n * @typedef {Object} TextInfo\n * @property {number} size\n * @property {string} fontName\n */\n/**\n * Named styles.\n * @type {Object.<String, TextInfo>}\n */\nconst textInfo = {\n  normal: { size: 15, fontName: NORMAL_FONT },\n  h1: { size: 30, fontName: HEADING_FONT },\n  h2: { size: 22, fontName: HEADING_FONT },\n  h3: { size: 18, fontName: HEADING_FONT },\n  emojiSprite: { size: 18, fontName: EMOJI_SPRITE_FONT },\n};\n\n/**\n * Sets up font sizes based on the design display width.\n * The actual normal font size is worked out using the CSS formula normally\n * based on the display width.\n * @param {number} designWidth\n */\nexport function initialise(designWidth) {\n  textInfo.normal.size = baseSize + 0.390625 * (designWidth / 100);\n  textInfo.h1.size = textInfo.normal.size * H1_FONT_SCALE;\n  textInfo.h2.size = textInfo.normal.size * H2_FONT_SCALE;\n  textInfo.h3.size = textInfo.normal.size * H3_FONT_SCALE;\n  textInfo.emojiSprite.size = designWidth / 10;\n}\n\n/**\n * Get font CSS for styleName.\n * @param {string} styleName - default, h1, h2, or h3. Defaults to default.\n * @returns {string}\n */\nexport function getCss(styleName) {\n  const info = textInfo[styleName] ?? textInfo['normal'];\n  return `${info.size}px ${info.fontName}`;\n}\n\n/**\n * Get the root font size. This is the size base on the design dimensions and is\n * the size as written to the canvas. It does not allow for any scaling of the\n * canvas by CSS.\n */\nexport function getRootFontSize() {\n  return textInfo.normal.size;\n}\n","/**\n * @file Functions for dealing with geometry\n *\n * @module utils/geometry\n *\n * License {@link https://opensource.org/license/mit/|MIT}\n *\n * Copyright 2024 Steve Butler\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the “Software”), to deal in\n * the Software without restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n * Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */\n\nimport * as maths from './maths.js';\n\n/**\n * Simple 2D dimension\n * @typedef {Object} Dims2D\n * @property {number} width\n * @property {number} height\n */\n\n/**\n * Simple encapsulation of a Point\n */\nexport class Point {\n  /** @type {number}*/\n  x;\n  /** @type {number}*/\n  y;\n\n  /**\n   * Create point\n   * @param {number} x\n   * @param {number} y\n   */\n  constructor(x, y) {\n    this.x = x;\n    this.y = y;\n  }\n\n  /**\n   * Create a copy of a point.\n   * @param {Point} point\n   * @returns {Point}\n   */\n  static copy(point) {\n    return new Point(point.x, point.y);\n  }\n\n  /**\n   * Check if points are coincident.\n   * @returns {boolean}\n   */\n  coincident(point) {\n    return this.x === point.x && this.y === point.y;\n  }\n\n  /**\n   * Get angle to target using normal cartesian coordinates; i.e up is +ve y.\n   * @param {Point} targetPos\n   * @returns {number} angle in radians.\n   */\n  getCartesianAngleTo(targetPos) {\n    return Math.atan2(targetPos.y - this.y, targetPos.x - this.x);\n  }\n\n  /**\n   * Get angle to target using normal screen coordinates; i.e down is +ve y.\n   * @param {Point} targetPos\n   * @returns {number} angle in radians.\n   */\n  getScreenAngleTo(targetPos) {\n    return Math.atan2(this.y - targetPos.y, targetPos.x - this.x);\n  }\n\n  /**\n   * String representation which can be used as key in maps.\n   * @returns {string}\n   */\n  toString() {\n    return `(${this.x},${this.y})`;\n  }\n\n  /**\n   * Test if the position is at the same point, rounded to integer as this.\n   * Rotation is ignored.\n   * @param {Position} position\n   * @returns {boolean}\n   */\n  isCoincident(position) {\n    return (\n      Math.round(this.x) === Math.round(position.x) &&\n      Math.round(this.y) === Math.round(position.y)\n    );\n  }\n\n  /**\n   * Test if points are adjacent, i.e within one\n   * @param {Point} other\n   * @param {number} distance\n   * @returns {boolean}\n   */\n  isOtherClose(other, distance) {\n    const dx = this.x - other.x;\n    const dy = this.y - other.y;\n    return Math.pow(dx, 2) + Math.pow(dy, 2) <= Math.pow(distance, 2);\n  }\n}\n/**\n * Velocity class\n */\nexport class Velocity {\n  /** x velocity @type {number} */\n  x;\n  /** y velocity @type {number} */\n  y;\n  /** rotational velocity @type {number} */\n  rotation;\n\n  /**\n   *\n   * @param {number} velX\n   * @param {number} velY\n   * @param {number} velRot\n   */\n  constructor(velX, velY, velRot) {\n    this.x = velX;\n    this.y = velY;\n    this.rotation = velRot;\n  }\n\n  /**\n   * Get the angle in radians counterclockwise from x axis. This uses cartesian\n   * coordinates where the y axis is positive upwards.\n   * @returns {number}\n   */\n  getCartesianDirection() {\n    return Math.atan2(this.y, this.x);\n  }\n  /**\n   * Get the angle in radians counterclockwise from x axis. This uses screen\n   * coordinates where the y axis is positive downwards..\n   * @returns {number}\n   */\n  getScreenDirection() {\n    return Math.atan2(-this.y, this.x);\n  }\n\n  /**\n   * Test if velocity effectively zero.\n   * @param {number} tolerance\n   * @returns {boolean}\n   */\n  isZero(tolerance) {\n    return (\n      maths.floatIsZero(this.x, tolerance) &&\n      maths.floatIsZero(this.y, tolerance)\n    );\n  }\n}\n\n/**\n * Simple 2D position. Similar to point but including rotation.\n * @implements {Point}\n */\nexport class Position extends Point {\n  /** type {number} */\n  rotation;\n\n  /**\n   *\n   * @param {number} x\n   * @param {number} y\n   * @param {number} rotation\n   */\n  constructor(x, y, rotation) {\n    super(x, y);\n    this.y = y;\n    this.rotation = rotation;\n  }\n\n  /**\n   * Create a Position from a Point.\n   * @param {Point} point\n   * @returns {Position}\n   */\n  static fromPoint(point) {\n    return new Position(point.x, point.y, 0);\n  }\n\n  /**\n   * Create copy\n   * @param {Position} position\n   */\n  static copy(position) {\n    return new Position(position.x, position.y, position.rotation);\n  }\n\n  /** Get a new position representing this position relative to a new origin.\n   * @param {Position} origin\n   * @returns {Position}\n   */\n  getRelativeTo(origin) {\n    return new Position(\n      this.x - origin.x,\n      this.y - origin.y,\n      this.rotation - origin.rotation\n    );\n  }\n\n  /**\n   * Test that both x and y coordinates are within the length.\n   * @param {Position} targetPos\n   * @param {number} length\n   * @returns {boolean}\n   */\n  withinSquare(targetPos, length) {\n    return (\n      Math.abs(targetPos.x - this.x) < length &&\n      Math.abs(targetPos.y - this.y) < length\n    );\n  }\n}\n\n/**\n * @typedef {Object} RectangleBounds\n * @property {number} x;\n * @property {number} y;\n * @property {number} right;\n * @property {number} bottom;\n * @property {number} width;\n * @property {number} height;\n */\n\n/**\n * Simple rectangle.\n */\nexport class Rectangle {\n  /** @type {number} */\n  x;\n  /** @type {number} */\n  y;\n  /** @type {number} */\n  width;\n  /** @type {number} */\n  height;\n\n  /**\n   *\n   * @param {number} x\n   * @param {number} y\n   * @param {number} width\n   * @param {number} height\n   */\n  constructor(x, y, width, height) {\n    this.x = x;\n    this.y = y;\n    this.width = width;\n    this.height = height;\n  }\n\n  /** Get the bottom right\n   * @returns {Point}\n   */\n  getBottomRight() {\n    return new Point(this.x + this.width, this.y + this.height);\n  }\n\n  /** Get the top left\n   * @returns {Point}\n   */\n  getTopLeft() {\n    return new Point(this.x, this.y);\n  }\n  /**\n   * Test if this overlaps another rectangle\n   * @param {Rectangle} otherRect\n   * @returns {boolean} true if overlapping.\n   */\n  overlaps(otherRect) {\n    const myBR = this.getBottomRight();\n    const otherRectBR = otherRect.getBottomRight();\n    const noOverlap =\n      otherRect.x > myBR.x ||\n      otherRect.y > myBR.y ||\n      otherRectBR.x < this.x ||\n      otherRectBR.y < this.y;\n    return !noOverlap;\n  }\n\n  /**\n   * Test if this rectangle contains a point\n   * @param {Point | Position} point\n   * @returns {boolean} - true if point contained\n   */\n  containsPoint(point) {\n    return (\n      point.x >= this.x &&\n      point.x <= this.x + this.width &&\n      point.y >= this.y &&\n      point.y <= this.y + this.height\n    );\n  }\n  /**\n   * Test if this rectangle contains a coordinate\n   * @param {number} x\n   * @param {number} y\n   * @returns {boolean} - true if point contained\n   */\n  containsCoordinate(x, y) {\n    return (\n      x >= this.x &&\n      x <= this.x + this.width &&\n      y >= this.y &&\n      y <= this.y + this.height\n    );\n  }\n  /**\n   * Test if this rectangle equals another.\n   * @param {Rectangle} otherRect\n   * @returns {boolean}\n   */\n  equals(other) {\n    return (\n      this.x === other.x &&\n      this.y === other.y &&\n      this.width === other.width &&\n      this.height === other.height\n    );\n  }\n}\n\n/** Min point */\nexport const MIN_POINT = new Point(Number.MIN_VALUE, Number.MIN_VALUE);\n/** Max point */\nexport const MAX_POINT = new Point(Number.MAX_VALUE, Number.MAX_VALUE);\n","/**\n * @file Maths utilities\n *\n * @module utils/maths\n *\n * License {@link https://opensource.org/license/mit/|MIT}\n *\n * Copyright 2024 Steve Butler\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the “Software”), to deal in\n * the Software without restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n * Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */\n\n/**\n * Common angles\n */\nconst Radians = {\n  DEG_22_5: (1 / 8) * Math.PI,\n  DEG_45: (2 / 8) * Math.PI,\n  DEG_67_5: (3 / 8) * Math.PI,\n  DEG_90: (4 / 8) * Math.PI,\n  DEG_112_5: (5 / 8) * Math.PI,\n  DEG_135: (6 / 8) * Math.PI,\n  DEG_157_7: (7 / 8) * Math.PI,\n  DEG_180: Math.PI,\n};\n\n/**\n * Clip a value between min and max inclusive.\n * @param {number} value\n * @param {number} min\n * @param {number} max\n * @returns {number}\n */\nexport function clip(value, min, max) {\n  if (value < min) {\n    return min;\n  } else if (value > max) {\n    return max;\n  }\n  return value;\n}\n\n/** Enumeration of travel directions\n * @enum {number}\n */\nexport const CompassEightPoint = {\n  NONE: -1,\n  N: 0,\n  NE: 1,\n  E: 2,\n  SE: 3,\n  S: 4,\n  SW: 5,\n  W: 6,\n  NW: 7,\n};\n\n/**\n * Convert an angle to an eight point compass direction.\n * Converts the angle to a compass direction.\n * @param {number} angle - -PI/2 to +PI/2. This is the same range as values returned\n * from the standard Math trigometric functions. Note that this expects the\n * angle to be based on cartesian coordinates, +y upwards. For angles calculated\n * using screen coordinates, +y downwards, you should negate the angle before\n * calling.\n * @param {number} angle - -PI/2 to +PI/2\n * @returns {number} compass point. From CompassEightPoint enum.\n */\nexport function angleToFourPointCompass(angle) {\n  const absAngle = Math.abs(angle);\n  if (absAngle <= Radians.DEG_45) {\n    return CompassEightPoint.E;\n  }\n  if (absAngle <= Radians.DEG_135) {\n    return Math.sign(angle) > 0 ? CompassEightPoint.N : CompassEightPoint.S;\n  }\n  return CompassEightPoint.W;\n}\n/**\n * Convert an angle to an eight point compass direction.\n * Converts the angle to a compass direction.\n * @param {number} angle - -PI/2 to +PI/2. This is the same range as values returned\n * from the standard Math trigometric functions. Note that this expects the\n * angle to be based on cartesian coordinates, +y upwards. For angles calculated\n * using screen coordinates, +y downwards, you should negate the angle before\n * calling.\n * @param {number} angle - -PI/2 to +PI/2\n * @returns {number} compass point. From CompassEightPoint enum.\n */\nexport function angleToEightPointCompass(angle) {\n  const absAngle = Math.abs(angle);\n  if (absAngle <= Radians.DEG_22_5) {\n    return CompassEightPoint.E;\n  }\n  if (absAngle <= Radians.DEG_67_5) {\n    return Math.sign(angle) > 0 ? CompassEightPoint.NE : CompassEightPoint.SE;\n  }\n  if (absAngle <= Radians.DEG_112_5) {\n    return Math.sign(angle) > 0 ? CompassEightPoint.N : CompassEightPoint.S;\n  }\n  if (absAngle <= Radians.DEG_157_7) {\n    return Math.sign(angle) > 0 ? CompassEightPoint.NW : CompassEightPoint.SW;\n  }\n  return CompassEightPoint.W;\n}\n\n/**\n * Get random number between min and max, inclusive\n * @param {number} min - inclusive minimum\n * @param {number} max - exclusive maximum\n * @returns {number}\n */\nexport function getRandomInt(min, max) {\n  const minCeiled = Math.ceil(min);\n  const maxFloored = Math.floor(max);\n  return Math.floor(Math.random() * (maxFloored - minCeiled + 1) + minCeiled);\n}\n/**\n * Get random number between min and max, inclusive\n * @param {number} min - inclusive minimum\n * @param {number} max -inclusive maximum\n * @returns {number}\n */\nexport function getRandomIntInclusive(min, max) {\n  const minCeiled = Math.ceil(min);\n  const maxFloored = Math.floor(max);\n  return Math.floor(Math.random() * (maxFloored - minCeiled + 1) + minCeiled);\n}\n\n/**\n * Test if float equals another float.\n * @param {number} valueA\n * @param {number} valueB\n * @param {number} tolerance\n * @returns {boolean}\n */\nexport function floatsAreEqual(valueA, valueB, tolerance) {\n  return valueA - valueB < tolerance;\n}\n\n/**\n * Test if float is almost zero.\n * @param {number} value\n * @param {number} tolerance\n * @returns {boolean}\n */\nexport function floatIsZero(value, tolerance) {\n  return Math.abs(value) < tolerance;\n}\n","/**\n * @file World limitations\n *\n * @module utils/game/world\n *\n * License {@link https://opensource.org/license/mit/|MIT}\n *\n * Copyright 2024 Steve Butler\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the “Software”), to deal in\n * the Software without restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n * Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */\n\nimport SCREEN from './screen.js';\nimport LOG from '../logging.js';\n\n/**\n * @type {TileMap}\n */\nlet worldTileMap;\n\n/**\n * @type {Map<string, Sprite>}\n */\nconst actors = new Map();\n\n/**\n * Sprites that do not interact\n * @type {Map<string, Sprite>}\n */\nconst passiveSprites = new Map();\n\n/**\n * Get the world dimensions. The dimensions are based on the worldTileMap size.\n * It defaults to the screen dimensions if no map has been set.\n * @returns {{number, number}} width and height\n */\nfunction getWorldDims() {\n  return worldTileMap\n    ? worldTileMap.getDimensions()\n    : SCREEN.getCanvasDimensions();\n}\n\n/**\n * Add a actor to the world.\n * @param {import('./actors.js').Actor}\n */\nfunction addActor(target) {\n  actors.set(target, target);\n  worldTileMap.moveTileOccupancyGridPoint(\n    target,\n    null,\n    worldTileMap.worldPointToGrid(target.position)\n  );\n}\n\n/**\n * Remove actor from the world.\n * @param {import('./actors.js').Actor}\n */\nfunction removeActor(target) {\n  const gridPoint = worldTileMap.worldPointToGrid(target.position);\n  worldTileMap.deleteOccupancyOfGridPoint(target, gridPoint);\n  actors.delete(target);\n}\n\n/**\n * Add effect sprite\n * @param {Sprite} sprite\n */\nfunction addPassiveSprite(sprite) {\n  passiveSprites.set(sprite, sprite);\n}\n\n/**\n * Add effect sprite\n * @param {Sprite} sprite\n */\nfunction removePassiveSprite(sprite) {\n  LOG.debug('Remove passive sprite.');\n  passiveSprites.delete(sprite);\n}\n\n/**\n * Set the tile map for the world.\n * @param {TileMap}\n */\nfunction setTileMap(tileMap) {\n  worldTileMap = tileMap;\n}\n\n/**\n * Get the tile map for the world.\n * @returns {TileMap}\n */\nfunction getTileMap() {\n  return worldTileMap;\n}\n\n/**\n * Remove the tile map from the world.\n * @param {TileMap}\n */\nfunction removeTileMap() {\n  worldTileMap = null;\n}\n\n/**\n * Clear the map and all actors.\n */\nfunction clearAll() {\n  actors.forEach((actor) => removeActor(actor));\n  passiveSprites.forEach((sprite) => removePassiveSprite(sprite));\n  removeTileMap();\n}\n\n/**\n * Update the world. This calls the update methods of the tile map and all sprites/\n * @param {number} deltaSeconds\n */\nfunction update(deltaSeconds) {\n  worldTileMap?.update(deltaSeconds);\n  actors.forEach((actor) => {\n    const oldGridPoint = worldTileMap.worldPointToGrid(actor.position);\n    actor.visible = worldTileMap.canHeroSeeGridPoint(oldGridPoint);\n    actor.update(deltaSeconds);\n    const newGridPoint = worldTileMap.worldPointToGrid(actor.position);\n    worldTileMap.moveTileOccupancyGridPoint(actor, oldGridPoint, newGridPoint);\n  });\n\n  passiveSprites.forEach((sprite) => sprite.update(deltaSeconds));\n}\n\n/**\n * Resolve a ui click\n * @param {import('./screen.js').MappedPositions} positions - click coordinates in canvas and world coordinates.\n * @returns {boolean} true if resolved.\n */\nfunction resolveClick(positions) {\n  const tile = worldTileMap?.getTileAtWorldPoint(positions.world);\n  if (tile) {\n    tile.actionClick(positions.world);\n    return true;\n  }\n  return false;\n}\n\n/**\n * Resolve a context menu event\n * @param {import('./screen.js').MappedPositions} positions - click coordinates in canvas and world coordinates.\n * @returns {boolean} true if resolved.\n */\nfunction resolveContextMenu(positions) {\n  const tile = worldTileMap.getTileAtWorldPoint(positions.world);\n  if (tile) {\n    tile.actionContextClick(positions.world);\n    return true;\n  }\n  return false;\n}\n\n/**\n * Resolve a cancel event\n * @param {import('./screen.js').MappedPositions} positions - click coordinates in canvas and world coordinates.\n * @returns {boolean} true if resolved.\n */\nfunction resolveCancel(positionsUnused) {\n  return false;\n}\n\n/**\n * Get the actors\n * @returns {Map<Actor, Actor>}\n */\nfunction getActors() {\n  return actors;\n}\n\n/**\n * World object singleton.\n */\nconst WORLD = {\n  addActor: addActor,\n  addPassiveSprite: addPassiveSprite,\n  clearAll: clearAll,\n  getActors: getActors,\n  getTileMap: getTileMap,\n  getWorldDims: getWorldDims,\n  removeTileMap: removeTileMap,\n  resolveCancel: resolveCancel,\n  resolveClick: resolveClick,\n  resolveContextMenu: resolveContextMenu,\n  removeActor: removeActor,\n  removePassiveSprite: removePassiveSprite,\n  setTileMap: setTileMap,\n  update: update,\n};\n\nexport default WORLD;\n","/**\n * @file Heads-up display. Unlike the world, this never pans and so positions are\n * locked to the canvas coordinates.\n *\n * @module utils/game/hud\n *\n * License {@link https://opensource.org/license/mit/|MIT}\n *\n * Copyright 2024 Steve Butler\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the “Software”), to deal in\n * the Software without restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n * Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */\n\nimport { Actor } from './actors.js';\nimport { ImageSpriteCanvasRenderer } from '../sprites/spriteRenderers.js';\nimport SCREEN from './screen.js';\nimport { Sprite } from '../sprites/sprite.js';\nimport { Position } from '../geometry.js';\nimport { Rectangle } from '../geometry.js';\nimport { NavigationButtons } from './hudNavSet.js';\n\n/**\n * @type {Map<string, Sprite>}\n */\nconst actors = new Map();\n\n/** @type {boolean} */\nlet visible = false;\n\n/**\n * Add a button to the hud. If two callbacks are provided, an AnimatedImage\n * is required with two frames.\n * @param {SpriteBitmap | AnimatedImage} image\n * @param {import('../ui/interactions.js').UiClickCallback} callbackOn\n * @param {import('../ui/interactions.js').UiClickCallback} callbackOff\n * @returns {Actor}\n */\nfunction addButton(image, callbackOn, callbackOff) {\n  const actor = new Actor(\n    new Sprite({\n      renderer: new ImageSpriteCanvasRenderer(SCREEN.getContext2D(), image),\n    })\n  );\n\n  actors.set(actor, actor);\n  actor.setOnClick(() => {\n    if (!callbackOff) {\n      callbackOn();\n    } else if (image.getCurrentIndex() === 0) {\n      image.setCurrentIndex(1);\n      callbackOn();\n    } else {\n      image.setCurrentIndex(0);\n      callbackOff();\n    }\n  });\n  image.setCurrentIndex(0);\n  return actor;\n}\n\n/**\n * Add a momentary button to the hud. If two callbacks are provided, an AnimatedImage\n * is required with two frames.\n * @param {SpriteBitmap | AnimatedImage} image\n * @param {import('../ui/interactions.js').UiClickCallback} callbackOn\n * @param {import('../ui/interactions.js').UiClickCallback} callbackOff\n * @returns {Actor}\n */\nfunction addMomentaryButton(image, callbackOn, callbackOff) {\n  const actor = new Actor(\n    new Sprite({\n      renderer: new ImageSpriteCanvasRenderer(SCREEN.getContext2D(), image),\n    })\n  );\n\n  actors.set(actor, actor);\n  actor.setOnPointerDown(() => {\n    image.setCurrentIndex(1);\n    callbackOn?.();\n  });\n  actor.setOnPointerUp(() => {\n    image.setCurrentIndex(0);\n    callbackOff?.();\n  });\n  return actor;\n}\n\n/**\n * Remove sprite from the hud.\n * @param {import('../sprites/sprite.js').Sprite}\n */\nfunction removeButton(target) {\n  actors.delete(target);\n}\n\n/**\n * Clear the HUD\n */\nfunction clear() {\n  actors.clear();\n}\n\n/**\n * Update the world. This calls the update methods of the tile map and all sprites/\n * @param {number} deltaSeconds\n */\nfunction update(deltaSeconds) {\n  if (!visible) {\n    return;\n  }\n  actors.forEach((sprite) => {\n    const uiPos = Position.copy(sprite.position);\n    sprite.position = SCREEN.glassPositionToWorld(sprite.position);\n    sprite.update(deltaSeconds);\n    sprite.position = uiPos;\n  });\n}\n\n/** Debug function. */\nfunction borderHUD() {\n  const rect = SCREEN.getVisibleCanvasRect();\n  const context = SCREEN.getContext2D();\n  context.strokeStyle = 'green';\n  context.lineWidth = 4;\n  SCREEN.getContext2D().strokeRect(\n    rect.x + 5,\n    rect.y + 5,\n    rect.width - 10,\n    rect.height - 10\n  );\n}\n\n/**\n * Check if the click is in a actor.\n * @param {import('./screen.js').MappedPositions} positions - canvas and world positions\n * @param {Actor} actor\n */\nfunction isHittingActor(positions, actor) {\n  const actorCanvasPos = SCREEN.glassPositionToWorld(actor.position);\n  let boundingBox = actor.sprite.getBoundingBox();\n  const canvasBox = new Rectangle(\n    actorCanvasPos.x - boundingBox.width / 2,\n    actorCanvasPos.y - boundingBox.height / 2,\n    boundingBox.width,\n    boundingBox.height\n  );\n\n  return canvasBox.containsCoordinate(positions.world.x, positions.world.y);\n}\n\n/**\n * Resolve a ui click\n * @param {import('./screen.js').MappedPositions} positions - click in canvas and world coordinates.\n * @returns {boolean} true if resolved.\n */\nfunction resolveClick(positions) {\n  if (!visible) {\n    return false;\n  }\n  for (const [keyUnused, actor] of actors) {\n    if (isHittingActor(positions, actor)) {\n      actor.actionClick(actor, positions.canvas);\n      return true;\n    }\n  }\n  return false;\n}\n\n/**\n * Resolve a pointer down\n * @param {import('./screen.js').MappedPositions} positions - click in canvas and world coordinates.\n * @returns {boolean} true if resolved.\n */\nfunction resolvePointerDown(positions) {\n  if (!visible) {\n    return false;\n  }\n  if (!visible) {\n    return false;\n  }\n  for (const [keyUnused, actor] of actors) {\n    if (isHittingActor(positions, actor)) {\n      actor.actionPointerDown(actor, positions.canvas);\n      return true;\n    }\n  }\n  return false;\n}\n\n/**\n * Resolve a ui pointer up event\n * @param {import('./screen.js').MappedPositions} positions - click in canvas and world coordinates.\n * @returns {boolean} true if resolved.\n */\nfunction resolvePointerUp(positions) {\n  if (!visible) {\n    return false;\n  }\n  if (!visible) {\n    return false;\n  }\n  for (const [keyUnused, actor] of actors) {\n    if (isHittingActor(positions, actor)) {\n      actor.actionPointerUp(actor, positions.canvas);\n      return true;\n    }\n  }\n  return false;\n}\n\n/**\n * Resolve a context menu event.\n * @param {import('./screen.js').MappedPositions} positions - click in canvas and world coordinates.\n * @returns {boolean} true if resolved.\n */\nfunction resolveContextMenu(positionsUnused) {\n  return false;\n}\n\n/**\n * Resolve a cancel event. For the HUD, a cancel event is treated the same as a pointer\n * up event.\n * @param {import('./screen.js').MappedPositions} positions - click in canvas and world coordinates.\n * @returns {boolean} true if resolved.\n */\nfunction resolvePointerCancel(positions) {\n  return resolvePointerUp(positions);\n}\n\n/**\n * Set the visibility of the HUD.\n * @param {boolean} visibility - true to show.\n */\nfunction setVisible(visibility) {\n  visible = visibility;\n}\n\n/**\n * HUD object\n */\nconst HUD = {\n  addButton: addButton,\n  addMomentaryButton: addMomentaryButton,\n  clear: clear,\n  removeButton: removeButton,\n  update: update,\n  resolvePointerCancel: resolvePointerCancel,\n  resolveClick: resolveClick,\n  resolveContextMenu: resolveContextMenu,\n  resolvePointerDown: resolvePointerDown,\n  resolvePointerUp: resolvePointerUp,\n  setVisible: setVisible,\n};\n\nexport default HUD;\n","/**\n * @file Actor classes. Actors encapsulate a Sprite and represent moving objects\n * that can interact with the game.\n *\n * @module utils/game/actors\n *\n * License {@link https://opensource.org/license/mit/|MIT}\n *\n * Copyright 2024 Steve Butler\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the “Software”), to deal in\n * the Software without restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n * Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */\n\nimport { EmptyInteraction } from '../../dnd/interact.js';\nimport { UiClickHandler } from '../ui/interactions.js';\n\n/**\n * @typedef {Map<string, *>} Traits\n */\n/**\n * Actor class. An actor is a sprite that exists in the world and can interact\n * with other actors.\n */\nexport class Actor extends UiClickHandler {\n  /** @type {number} */\n  maxTilesPerMove;\n  /** @type {import('../sprites/sprite.js').Sprite} */\n  sprite;\n  /** @type {ActorTraits} */\n  traits;\n  /** @type {AbstractInteraction} */\n  interaction;\n  /** @type {boolean} */\n  alive;\n\n  /**\n   * Create the actor.\n   * @param {import('../sprites/sprite.js').Sprite} sprite\n   */\n  constructor(sprite) {\n    super();\n    this.interaction = new EmptyInteraction();\n    this.sprite = sprite;\n    this.sprite.obstacle = true;\n    this.maxTilesPerMove = 4;\n    this.alive = true;\n  }\n\n  /** Set the underlying sprite visibility.\n   * @param {boolean}\n   */\n  set visible(value) {\n    this.sprite.visible = value;\n  }\n\n  /** Get the underlying sprite visibility.\n   * @returns {boolean}\n   */\n  get visible() {\n    return this.sprite.visible;\n  }\n  /**\n   * Get obstacle property. This comes from the underlying sprite.\n   * @param {boolean} value\n   */\n  get obstacle() {\n    return this.sprite.obstacle;\n  }\n\n  /**\n   * Set as obstacle. This sets the underlying sprite's property.\n   * @param {boolean} value\n   */\n  set obstacle(value) {\n    this.sprite.obstacle = value;\n  }\n\n  /**\n   * Get the actor's position.\n   * @returns {import('../geometry.js').Position}\n   */\n  get position() {\n    return this.sprite.position;\n  }\n\n  /**\n   * Set the actor's position.\n   * @param {import('../geometry.js').Position} value\n   */\n  set position(value) {\n    this.sprite.position = value;\n  }\n\n  /**\n   * Get the current motion.\n   * @returns {Velocity}\n   */\n\n  get velocity() {\n    return this.sprite.velocity;\n  }\n\n  /**\n   * Set the current Velocity. Invalid values become 0.\n   * @param {Velocity} nextVelocity\n   */\n  set velocity(nextVelocity) {\n    this.sprite.velocity = nextVelocity;\n  }\n\n  /**\n   * Is this a wandering actor.\n   * @returns {boolean}\n   */\n  isWandering() {\n    return this?.traits.get('MOVE') === 'wander';\n  }\n\n  /**\n   * Is the actor passable?\n   * @param {Actor} otherActor\n   * @returns {boolean}\n   */\n  isPassableByActor(otherActorUnused) {\n    return !this.alive || !this.obstacle;\n  }\n\n  /**\n   * Can it share a tile location with another actor?\n   * @param {Actor} otherActor\n   * @returns {boolean}\n   */\n  canShareLocationWithActor(otherActorUnused) {\n    return !this.obstacle;\n  }\n\n  /**\n   * Call update on the underlying sprite\n   * @param {number} deltaSeconds\n   */\n  update(deltaSeconds) {\n    this.sprite.update(deltaSeconds);\n  }\n\n  /**\n   * Handle the click but change the point to the sprite's position\n   */\n  actionClick(pointUnused) {\n    super.actionClick(this.sprite.position);\n  }\n  /**\n   * Handle the click but change the point to the sprite's position\n   */\n  actionContextClick(pointUnused) {\n    super.actionContextClick(this.sprite.position);\n  }\n\n  /**\n   * Handle the pointer up event but change the point to the sprite's position\n   */\n  actionPointerUp(pointUnused) {\n    super.actionPointerUp(this.sprite.position);\n  }\n  /**\n   * Handle the pointer down event but change the point to the sprite's position\n   */\n  actionPointerDown(pointUnused) {\n    super.actionPointerDown(this.sprite.position);\n  }\n}\n","/**\n * @file Handle fights and other interactions.\n *\n * @module dnd/interact\n *\n * License {@link https://opensource.org/license/mit/|MIT}\n *\n * Copyright 2024 Steve Butler (henspace.com).\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the “Software”), to deal in\n * the Software without restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n * Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */\nimport LOG from '../utils/logging.js';\nimport { addFadingImage, addFadingText } from '../utils/effects/transient.js';\nimport { Velocity } from '../utils/geometry.js';\nimport IMAGE_MANAGER from '../utils/sprites/imageManager.js';\nimport { PathFollower } from '../utils/sprites/movers.js';\nimport { Point } from '../utils/geometry.js';\nimport * as chance from './chance.js';\nimport UI from '../utils/dom/ui.js';\n\nimport PERSISTENT_DATA from '../utils/persistentData.js';\n\n/** Dummy interaction that does nothing\n */\nexport class EmptyInteraction {\n  /** Actor owning the interaction @type {Actor} */\n  actor;\n\n  /**\n   *\n   * @param {Actor} actor\n   */\n  constructor(actor) {\n    this.actor = actor;\n  }\n  /**\n   * @param {import('../utils/game/actors.js').Actor} reactor\n   * @returns {Promise}\n   */\n  enact(reactorUnused) {\n    return Promise.resolve();\n  }\n\n  /**\n   * @param {import('../utils/game/actors.js').Actor} enactor\n   * @returns {Promise}\n   */\n  react(enactorUnused) {\n    return Promise.resolve();\n  }\n\n  /**\n   * Test to see if actor can run away from an interaction. If the actor cannot,\n   * a failed message appears. The actual move is not undertaken\n   * @param {Actor} escaper\n   * @returns {boolean} true if can run\n   */\n  allowEscape(escaperUnused) {\n    return true;\n  }\n}\n\n/**\n * Class to handle fights.\n * @implements {ActorInteraction}\n */\nexport class Fight extends EmptyInteraction {\n  /**\n   * Construct the interaction.\n   * @param {Actor} actor - parent actor.\n   */\n  constructor(actor) {\n    super(actor);\n  }\n\n  /**\n   * @param {import('../utils/game/actors.js').Actor} reactor\n   * @returns {Promise}\n   */\n  enact(reactor) {\n    return this.#resolveAttackerDefender(this.actor, reactor);\n  }\n\n  /**\n   * @param {import('../utils/game/actors.js').Actor} enactor\n   * @returns {Promise}\n   */\n  react(enactor) {\n    return this.#resolveAttackerDefender(enactor, this.actor);\n  }\n\n  /**\n   * Test to see if actor can run away from an interaction. If the actor cannot,\n   * a failed message appears. The actual move is not undertaken\n   * @param {Actor} escaper\n   * @returns {boolean} true if can run\n   */\n  allowEscape(escaper) {\n    if (!chance.evades(escaper, this.actor)) {\n      addFadingText('Failed to run.', {\n        lifetimeSecs: 2,\n        position: escaper.position,\n        velocity: new Velocity(0, -100, 0),\n      });\n      return false;\n    }\n    return true;\n  }\n\n  /**\n   * Display an attack\n   * @param {Actor} attacker\n   * @param {Actor} defender\n   * @returns {Promise}\n   */\n  #displayAttack(attacker, defender) {\n    const startPoint = Point.copy(attacker.position);\n    const attackPoint = new Point(\n      attacker.position.x + 0.2 * (defender.position.x - attacker.position.x),\n      attacker.position.y + 0.2 * (defender.position.y - attacker.position.y)\n    );\n    const pathModifier = new PathFollower({\n      path: [attackPoint, startPoint],\n      speed: 100,\n    });\n    return pathModifier.applyAsTransientToSprite(attacker.sprite);\n  }\n\n  /**\n   * Undertake attack. Note that the defender is not removed if its hit points\n   * hit zero.\n   * @param {Actor} attacker\n   * @param {Actor} defender\n   * @returns {Promise} fulfils to the defender's HP.\n   */\n  #undertakeAttack(attacker, defender) {\n    return new Promise((resolve) => {\n      if (!chance.hits(attacker, defender)) {\n        addFadingText('Missed', {\n          lifetimeSecs: 2,\n          position: defender.position,\n          velocity: new Velocity(0, -100, 0),\n        });\n        resolve();\n        return;\n      } else {\n        addFadingImage(\n          IMAGE_MANAGER.getSpriteBitmap(\n            0,\n            PERSISTENT_DATA.get('BLOOD_ON') ? 'blood-splat.png' : 'pow.png'\n          ),\n          {\n            lifetimeSecs: 1,\n            position: defender.position,\n            velocity: new Velocity(0, 0, 0),\n          }\n        );\n      }\n      let defenderHP = defender.traits.get('HP');\n      const damage = chance.damageInflicted(attacker, defender);\n      defenderHP = Math.max(0, defenderHP - damage);\n      defender.traits.set('HP', defenderHP);\n      if (defenderHP === 0) {\n        LOG.info('Killed actor.');\n        defender.interaction = new SearchCorpse();\n        defender.alive = false;\n      } else {\n        addFadingText(`-${damage} HP`, {\n          lifetimeSecs: 2,\n          position: defender.position,\n          velocity: new Velocity(0, -200, 0),\n        });\n      }\n      resolve(defenderHP);\n    });\n  }\n\n  /**\n   * Resolve a fight.\n   * @param {Actor} attacker\n   * @param {Actor} defender\n   * @returns {Promise}\n   */\n  #resolveAttackerDefender(attacker, defender) {\n    return this.#displayAttack(attacker, defender).then(() =>\n      this.#undertakeAttack(attacker, defender)\n    );\n  }\n}\n\n/**\n * Class to handle searching a corpse.\n * @implements {ActorInteraction}\n */\nexport class SearchCorpse extends EmptyInteraction {\n  /**\n   * Construct the interaction.\n   * @param {Actor} actor - parent actor.\n   */\n  constructor(actor) {\n    super(actor);\n  }\n\n  /**\n   * Respond to a search\n   * @param {import('../utils/game/actors.js').Actor} reactor\n   * @returns {Promise}\n   */\n  react(reactorUnused) {\n    return UI.showOkDialog(\n      \"A bit macabre, but you're trying to search a corpse. I haven't written the code yet.\"\n    );\n  }\n}\n\n/**\n * Class to handle trading.\n */\nexport class Trade extends EmptyInteraction {\n  /**\n   * Construct the interaction.\n   * @param {Actor} actor - parent actor.\n   */\n  constructor(actor) {\n    super(actor);\n  }\n\n  /**\n   * Trades are passive. Only the hero can initiate a trade.\n   * @param {import('../utils/game/actors.js').Actor} enactor\n   * @returns {Promise}\n   */\n  react(enactorUnused) {\n    return UI.showOkDialog(\"Time to trade. I haven't written the code yet.\");\n  }\n}\n","/**\n * @file Create transient effects.\n *\n * @module utils/effects/transient\n *\n * License {@link https://opensource.org/license/mit/|MIT}\n *\n * Copyright 2024 Steve Butler (henspace.com).\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the “Software”), to deal in\n * the Software without restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n * Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */\n\nimport { Sprite } from '../sprites/sprite.js';\nimport {\n  ImageSpriteCanvasRenderer,\n  SpriteCanvasRenderer,\n  TextSpriteCanvasRenderer,\n} from '../sprites/spriteRenderers.js';\nimport SCREEN from '../game/screen.js';\nimport { TimeFader } from '../sprites/faders.js';\nimport WORLD from '../game/world.js';\nimport { VelocityMover } from '../sprites/movers.js';\n\n/**\n * Create a transient sprite\n * @param {SpriteCanvasRenderer} renderer\n * @param {Object} options\n * @param {Point} position\n * @param {Velocity} velocity\n * @param {number} lifetimeSecs\n */\nexport function createFadingSprite(renderer, options) {\n  const sprite = new Sprite({\n    renderer: renderer,\n  });\n  sprite.position = options.position;\n  sprite.velocity = options.velocity;\n  WORLD.addPassiveSprite(sprite);\n  new TimeFader(options.lifetimeSecs, new VelocityMover())\n    .applyAsTransientToSprite(sprite, 20)\n    .then(() => WORLD.removePassiveSprite(sprite));\n}\n\n/**\n * Create a transient image\n * @param {import('../sprites/imageManager.js').SpriteBitmap} imageName\n * @param {Object} options\n * @param {Point} position\n * @param {Velocity} velocity\n * @param {number} lifetimeSecs\n */\nexport function addFadingImage(image, options) {\n  createFadingSprite(\n    new ImageSpriteCanvasRenderer(SCREEN.getContext2D(), image),\n    options\n  );\n}\n\n/**\n * Create transient text\n * @param {string} text\n * @param {Object} options\n * @param {Point} position\n * @param {Velocity} velocity\n * @param {number} lifetimeSecs\n */\nexport function addFadingText(text, options) {\n  createFadingSprite(\n    new TextSpriteCanvasRenderer(SCREEN.getContext2D(), text),\n    options\n  );\n}\n","/**\n * @file Basic sprite control\n *\n * @module utils/sprites/sprite\n *\n * License {@link https://opensource.org/license/mit/|MIT}\n *\n * Copyright 2024 Steve Butler\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the “Software”), to deal in\n * the Software without restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n * Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */\nimport { Position, Rectangle, Velocity } from '../geometry.js';\nimport { SpriteCanvasRenderer } from './spriteRenderers.js'; //eslint-disable-line no-unused-vars\n\n/**\n * @typedef {function} SpriteClickHandler\n * @param {Sprite} target - the sprite that was clicked. This prevents the need\n * to use 'this' which may not be correct in the context.\n * @param {Point} relativePoint - the position in the Sprite relative to its top left corner\n * @param {Object} detail - extended event information.\n */\n\n/**\n * Encapsulated sprite.\n */\nexport class Sprite {\n  /** @type {Position}*/\n  #position = new Position(0, 0, 0);\n  /** @type {Velocity} */\n  #velocity = new Velocity(0, 0, 0);\n  /** @type {SpriteCanvasRenderer[]} */\n  #renderer;\n  /** @type {boolean} */\n  #multiRenderers;\n  /** @type {AbstractModifier} */\n  modifier;\n  /** @type {boolean} */\n  visible;\n  /** @type {number} */\n  opacity;\n\n  /**\n   * @param {Object} options\n   * @param {SpriteCanvasRenderer } options.renderer - the renderer or renderers that render the sprite\n   * rather than the world.\n   */\n  constructor(options) {\n    this.#renderer = options?.renderer;\n    this.#multiRenderers = Array.isArray(this.#renderer);\n    this.visible = true;\n    this.opacity = 1;\n  }\n  /**\n   * Get the current position.\n   * @returns {Position}\n   */\n  get position() {\n    return this.#position;\n  }\n\n  /**\n   * Set the current position. Invalid values become 0.\n   * @param {Position} nextPosition\n   */\n  set position(nextPosition) {\n    this.#position.x = this.valueOrZero(nextPosition.x);\n    this.#position.y = this.valueOrZero(nextPosition.y);\n    this.#position.rotation = this.valueOrZero(nextPosition.rotation);\n  }\n\n  /**\n   * Get the current motion.\n   * @returns {Velocity}\n   */\n\n  get velocity() {\n    return this.#velocity;\n  }\n\n  /**\n   * Set the current Velocity. Invalid values become 0.\n   * @param {Velocity} nextVelocity\n   */\n  set velocity(nextVelocity) {\n    this.#velocity.x = this.valueOrZero(nextVelocity.x);\n    this.#velocity.y = this.valueOrZero(nextVelocity.y);\n    this.#velocity.rotation = this.valueOrZero(nextVelocity.rotation);\n  }\n\n  /**\n   * Returns the value but converts non-numeric values to 0.\n   * @param {number} value\n   * @returns {number}\n   */\n  valueOrZero(value) {\n    return typeof value === 'number' ? value : 0;\n  }\n\n  /**\n   * Update the sprite. Calls the sprite's mover and then renderer.\n   * @param {number} deltaSeconds - elapsed time.\n   */\n  update(deltaSeconds) {\n    if (this.modifier) {\n      this.modifier = this.modifier.update(this, deltaSeconds);\n    }\n    if (this.visible) {\n      this.#render();\n    }\n  }\n  /**\n   * Render the sprite by calling the sprite's renderer\n   */\n  #render() {\n    if (!this.#renderer) {\n      return;\n    }\n    if (!this.#renderer.forEach) {\n      this.#renderer.render(this.#position, this.opacity);\n    } else {\n      this.#renderer.forEach((renderer) =>\n        renderer.render(this.#position, this.opacity)\n      );\n    }\n  }\n\n  /** Get the bounding box for the sprite.\n   * @returns {geometry.Rectangle}\n   */\n  getBoundingBox() {\n    const boundsCanvas = this.#renderer.getBoundingBoxCanvas();\n    return new Rectangle(\n      this.position.x - boundsCanvas.width / 2,\n      this.position.y - boundsCanvas.height / 2,\n      boundsCanvas.width,\n      boundsCanvas.height\n    );\n  }\n}\n","/**\n * @file Handle sprite rendering on the canvas\n *\n * @module utils/sprites/spriteRenderers\n *\n * License {@link https://opensource.org/license/mit/|MIT}\n *\n * Copyright 2024 Steve Butler\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the “Software”), to deal in\n * the Software without restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n * Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */\nimport LOG from '../logging.js';\nimport * as canvasText from '../text/text.js';\nimport * as fonts from '../text/fonts.js';\nimport * as debug from '../debug.js';\nimport SCREEN from '../game/screen.js';\nimport { MIN_POINT, MAX_POINT, Rectangle } from '../geometry.js';\nimport * as animation from './animation.js'; //eslint-disable-line no-unused-vars\nimport HUD from '../game/hud.js';\nimport { Sprite } from './sprite.js';\n\n/**\n * @typedef {Object} RenderGeometry\n * @property {number} width\n * @property {number} height\n * @property {import('../geometry.js').Point} origin - origin relative to the centre\n */\n\n/**\n * Convert RenderGeometry to Rectangle\n * @param {import('../geometry.js').Position} position\n * @param {RenderGeometry} renderGeom\n * @returns {import('../geometry.js').Rectangle}\n */\nfunction renderGeometryToRect(position, renderGeom) {\n  return new Rectangle(\n    position.x - renderGeom.width / 2,\n    position.y - renderGeom.height / 2,\n    renderGeom.width,\n    renderGeom.height\n  );\n}\n\n/**\n * Base class for all sprite renderers.\n * @abstract\n */\nexport class SpriteCanvasRenderer {\n  /** @type {CanvasRenderingContext2D} */\n  _context;\n\n  /** @type {import('../geometry.js').Rectangle} */\n  _boundingBoxCanvas;\n\n  /**\n   * Construct base renderer\n   * @param {CanvasRenderingContext2D} context\n   */\n  constructor(context) {\n    this._context = context;\n    this._boundingBoxCanvas = new Rectangle(0, 0, 0, 0);\n  }\n\n  /**\n   * Get the context. This is just provided to allow classes other than children\n   * to read the context. _context could be used but that is not the intent.\n   */\n  getContext() {\n    return this._context;\n  }\n\n  /**\n   * Get the axis aligned bounding box\n   * @returns {import('../geometry.js').Rectangle}\n   */\n  getBoundingBoxCanvas() {\n    return this._boundingBoxCanvas;\n  }\n  /**\n   * Render the sprite.\n   * @param {import('../geometry.js').Position} position in the world\n   * @param {number} opacity\n   */\n  render(position, opacity) {\n    position = SCREEN.worldPositionToCanvas(position);\n    if (!this.isOnCanvas(position)) {\n      return;\n    }\n    const currentAlpha = this._context.globalAlpha;\n    this._context.globalAlpha = currentAlpha * opacity;\n    const rotated = position.rotation;\n    if (rotated) {\n      this._context.save();\n      this._context.translate(position.x, position.y);\n      this._context.rotate(-position.rotation);\n      this._context.translate(-position.x, -position.y);\n    }\n    this._doRender(position);\n    if (rotated) {\n      this._context.restore();\n    }\n    if (debug.OPTIONS.spriteBoxes) {\n      this._context.strokeStyle = 'green';\n      this._context.strokeRect(\n        this._boundingBoxCanvas.x,\n        this._boundingBoxCanvas.y,\n        this._boundingBoxCanvas.width,\n        this._boundingBoxCanvas.height\n      );\n    }\n    this._context.globalAlpha = currentAlpha;\n  }\n  /**\n   * Render the sprite\n   * @param {import('../geometry.js').Position} position\n   */\n  _doRender(positionUnused) {\n    LOG.error('_doRender method should be overridden.');\n  }\n\n  /**\n   * Check if it will be on screen\n   * @param {import('../geometry.js').Position} position\n   * @returns {boolean} true if on screen.\n   */\n  isOnScreen(position) {\n    const rect = new Rectangle(\n      position.x - this._boundingBoxCanvas.width / 2,\n      position.y - this._boundingBoxCanvas.height / 2,\n      this._boundingBoxCanvas.width,\n      this._boundingBoxCanvas.height\n    );\n    return SCREEN.isOnScreen(rect);\n  }\n\n  /**\n   * Check if it will be on screen\n   * @param {import('../geometry.js').Position} position - this should be in canvas coordinates.\n   * @returns {boolean} true if on screen.\n   */\n  isOnCanvas(position) {\n    const rect = new Rectangle(\n      position.x - this._boundingBoxCanvas.width / 2,\n      position.y - this._boundingBoxCanvas.height / 2,\n      this._boundingBoxCanvas.width,\n      this._boundingBoxCanvas.height\n    );\n    return SCREEN.isOnCanvas(rect);\n  }\n}\n\n/**\n * Renderer for TextSprites.\n */\nexport class TextSpriteCanvasRenderer extends SpriteCanvasRenderer {\n  /** Name used to access font styles from the fonts.\n   * @type {string}\n   */\n  #styleName;\n\n  /** @type {string} */\n  #lastCalculatedText;\n  /** @type {RenderGeometry} */\n  #renderGeometry;\n\n  /** @type {string} */\n  text;\n\n  /**\n   * @param {CanvasRenderingContext2D} context\n   * @param {string} text\n   * @param {string} [styleName = 'normal']\n   */\n  constructor(context, text, styleName = 'normal') {\n    super(context);\n    this.text = text;\n    this.#styleName = styleName;\n  }\n\n  /**\n   * Calculate the renderGeometry of the text.\n   * @param {string} text\n   */\n  #calculateRenderGeometry(text) {\n    this._context.font = fonts.getCss(this.#styleName);\n    const metrics = this._context.measureText(text);\n    this.#renderGeometry = {\n      width: metrics.width,\n      height: metrics.fontBoundingBoxAscent + metrics.fontBoundingBoxDescent,\n      origin: {\n        x: -0.5 * metrics.width,\n        y:\n          0.5 *\n          (metrics.fontBoundingBoxAscent - metrics.fontBoundingBoxDescent),\n      },\n    };\n    this.#lastCalculatedText = text;\n  }\n\n  /**\n   * Render the sprite\n   * @param {import('../geometry.js').Position} position - this will have been adjusted to the screen.\n   */\n  _doRender(position) {\n    if (this.text !== this.#lastCalculatedText) {\n      this.#calculateRenderGeometry(this.text);\n    }\n    const renderPosition = {\n      x: position.x + this.#renderGeometry.origin.x,\n      y: position.y + this.#renderGeometry.origin.y,\n      rotation: position.rotation,\n    };\n\n    canvasText.writeText(\n      this._context,\n      this.#lastCalculatedText,\n      renderPosition,\n      { styleName: this.#styleName }\n    );\n\n    this._boundingBoxCanvas = renderGeometryToRect(\n      position,\n      this.#renderGeometry\n    );\n  }\n}\n\n/**\n * Renderer for rectangle sprites\n */\nexport class RectSpriteCanvasRenderer extends SpriteCanvasRenderer {\n  #width;\n  #height;\n  #halfWidth;\n  #halfHeight;\n  #fillStyle;\n  #strokeStyle;\n  /**\n   *\n   * @param {CanvasRenderingContext2D} context\n   * @param {Object} options\n   * @param {number} options.width\n   * @param {number} options.height\n   * @param {string} options.fillStyle\n   * @param {string} options.strokeStyle\n   */\n  constructor(context, options) {\n    super(context);\n    this.#width = options.width ?? 10;\n    this.#height = options.height ?? 10;\n    this.#halfWidth = this.#width / 2;\n    this.#halfHeight = this.#height / 2;\n    this.#fillStyle = options.fillStyle;\n    this.#strokeStyle = options.strokeStyle;\n  }\n\n  /**\n   * Render the sprite.\n   * @param {import('../geometry.js').Position} position - this will have been adjusted to the screen.\n   */\n  _doRender(position) {\n    const x = position.x - this.#halfWidth;\n    const y = position.y - this.#halfHeight;\n    if (this.#fillStyle) {\n      this._context.fillStyle = this.#fillStyle;\n      this._context.fillRect(x, y, this.#width, this.#height);\n    }\n    if (this.#strokeStyle) {\n      this._context.strokeStyle = this.#strokeStyle;\n      this._context.strokeRect(x, y, this.#width, this.#height);\n    }\n\n    this._boundingBoxCanvas = new Rectangle(x, y, this.#width, this.#height);\n  }\n}\n\n/**\n * Renderer for percentage properties.\n */\nexport class GaugeSpriteCanvasRenderer extends SpriteCanvasRenderer {\n  #height;\n  #halfHeight;\n  #width;\n  #halfWidth;\n  #fillStyle;\n  #strokeStyle;\n  #offsetX;\n  #offsetY;\n  #fillHeight;\n  #halfFillHeight;\n\n  /**\n   *\n   * @param {CanvasRenderingContext2D} context\n   * @param {Object} options\n   * @param {number} options.width\n   * @param {number} options.height\n   * @param {string} options.fillStyle\n   * @param {string} options.strokeStyle\n   * @param {number} options.offsetX - sprite is offset from the normal sprite position.\n   * @param {number} options.offsetY - sprite is offset from the normal sprite position.\n   */\n  constructor(context, options) {\n    super(context);\n    this.#height = options.height;\n    this.#halfHeight = this.#height / 2;\n    this.#width = options.width;\n    this.#halfWidth = this.#width / 2;\n    this.#fillStyle = options.fillStyle;\n    this.#strokeStyle = options.strokeStyle;\n    this.#offsetX = options.offsetX ?? 0;\n    this.#offsetY = options.offsetY ?? 0;\n    this.setLevel(0);\n  }\n\n  /** Set the level of the gauge.\n   * @param {number} proportion - 0 to 1\n   */\n  setLevel(proportion) {\n    this.#fillHeight = Math.min(proportion, 1) * this.#height;\n    this.#halfFillHeight = 0.5 * this.#fillHeight;\n  }\n\n  /**\n   * Render the sprite.\n   * @param {import('../geometry.js').Position} position - this will have been adjusted to the screen.\n   */\n  _doRender(position) {\n    const topStroke = position.y - this.#halfHeight + this.#offsetY;\n    const topFill =\n      position.y + this.#halfHeight - this.#fillHeight + this.#offsetY;\n\n    const x = position.x - this.#halfWidth + this.#offsetX;\n    if (this.#fillStyle) {\n      this._context.fillStyle = this.#fillStyle;\n      this._context.fillRect(x, topFill, this.#width, this.#fillHeight);\n    }\n    if (this.#strokeStyle) {\n      this._context.strokeStyle = this.#strokeStyle;\n      this._context.strokeRect(x, topStroke, this.#width, this.#height);\n    }\n\n    this._boundingBoxCanvas = new Rectangle(\n      x,\n      topStroke,\n      this.#width,\n      this.#height\n    );\n  }\n}\n\n/** Special renderer for multiple gauges applied over a square tile */\nexport class MultiGaugeTileRenderer extends SpriteCanvasRenderer {\n  #gaugeRenderers;\n\n  /**\n   * The number of gauges is determined by the maximum length of the fill styles and\n   * stroke styles\n   * @param {CanvasRenderingContext2D} context\n   * @param {Object} options\n   * @param {number} options.tileSize\n   * @param {string[]} options.fillStyles\n   * @param {string[]} options.strokeStyles\n   */\n  constructor(context, options) {\n    super(context);\n    const nGauges = Math.max(\n      options.fillStyles.length ?? 0,\n      options.strokeStyles.length ?? 0\n    );\n    if (nGauges === 0) {\n      LOG.error('Attempt to create MultiGaugeTileRenderer with no gauges.');\n      return;\n    }\n    this.#gaugeRenderers = [];\n    const gaugeWidth = options.tileSize / nGauges;\n    let gaugePosX = -options.tileSize / 2 + gaugeWidth / 2;\n\n    for (let index = 0; index < nGauges; index++) {\n      this.#gaugeRenderers.push(\n        new GaugeSpriteCanvasRenderer(context, {\n          width: gaugeWidth,\n          height: options.tileSize,\n          fillStyle: options.fillStyles?.[index],\n          strokeStyle: options.strokeStyles?.[index],\n          offsetX: gaugePosX + gaugeWidth * index,\n          offsetY: 0,\n        })\n      );\n    }\n  }\n\n  /**\n   * Set the level of a gauge.\n   * @param {number} gaugeIndex\n   * @param {number} proportion - 0 to 1\n   */\n  setLevel(gaugeIndex, proportion) {\n    this.#gaugeRenderers[gaugeIndex]?.setLevel(proportion);\n  }\n\n  /**\n   * Render the sprite.\n   * @param {import('../geometry.js').Position} position - this will have been adjusted to the screen.\n   */\n  render(position) {\n    this.#gaugeRenderers?.forEach((renderer) => renderer.render(position));\n  }\n}\n\n/**\n * Renderer for Path Sprites.\n */\nexport class PathSpriteCanvasRenderer extends SpriteCanvasRenderer {\n  /** @type {RenderGeometry} */\n  #renderGeometry;\n\n  /** @type {Point[]} */\n  path;\n\n  /**\n   * Create a path renderer.\n   * @param {CanvasRenderingContext2D} context\n   * @param {Point[]} path\n   */\n  constructor(context, path) {\n    super(context);\n    this.path = path;\n  }\n\n  /** Calculate the rendering geometry.\n   * @param {Point[]} path\n   * @param {import('../geometry.js').Position} position\n   */\n  #calculateGeometry(path, positionUnused) {\n    let minPoint = MAX_POINT;\n    let maxPoint = MIN_POINT;\n    path.forEach((point) => {\n      minPoint.x = Math.min(minPoint.x, point.x);\n      minPoint.y = Math.min(minPoint.y, point.y);\n      maxPoint.x = Math.max(maxPoint.x, point.x);\n      maxPoint.y = Math.max(maxPoint.y, point.y);\n    });\n\n    this.#renderGeometry = {\n      width: maxPoint.x - minPoint.x,\n      height: maxPoint.y - minPoint.y,\n      origin: {\n        x: 0.5 * (minPoint.x + maxPoint.x),\n        y: 0.5 * (minPoint.y + maxPoint.y),\n      },\n    };\n  }\n  /**\n   * Render the sprite.\n   * @param {import('../geometry.js').Position} position - this will have been adjusted to the screen.\n   */\n  _doRender(position) {\n    if (this.path.length < 2) {\n      LOG.error('Path sprite needs at least 2 points.');\n      return;\n    }\n    if (!this.#renderGeometry) {\n      this.#calculateGeometry(this.path, position);\n    }\n\n    this._context.beginPath();\n    this._context.strokeStyle = 'blue';\n    this._context.moveTo(\n      this.path[0].x + position.x,\n      this.path[0].y + position.y\n    );\n    for (let n = 1; n < this.path.length; n++) {\n      this._context.lineTo(\n        this.path[n].x + position.x,\n        this.path[n].y + position.y\n      );\n    }\n    this._context.closePath();\n    this._context.stroke();\n\n    this._boundingBoxCanvas = renderGeometryToRect(\n      position,\n      this.#renderGeometry\n    );\n  }\n}\n\n/**\n * Renderer for Image Sprites.\n */\nexport class ImageSpriteCanvasRenderer extends SpriteCanvasRenderer {\n  /** @type {import('./imageManager.js').SpriteBitmap} */\n  #spriteBitmap;\n  /** @type {animation.KeyedAnimatedImages} */\n  #animation;\n\n  /**\n   * Create an image renderer.\n   * @param {CanvasRenderingContext2D} context\n   * @param {SpriteBitmap | animation.AnimatedImage | animation.KeyAnimatedImages} imageDefinition\n   */\n  constructor(context, imageDefinition) {\n    super(context);\n    if (imageDefinition?.getCurrentFrame) {\n      this.#animation = imageDefinition;\n      this.#spriteBitmap = this.#animation.getCurrentFrame();\n    } else {\n      this.#spriteBitmap = imageDefinition;\n    }\n    if (this.#spriteBitmap) {\n      this._boundingBoxCanvas.width = this.#spriteBitmap?.width ?? 0;\n      this._boundingBoxCanvas.height = this.#spriteBitmap?.height ?? 0;\n    } else {\n      LOG.error(`No image frame available for sprite.`, imageDefinition);\n    }\n  }\n\n  /**\n   * Render the sprite.\n   * @param {import('../geometry.js').Position} position - this will have been adjusted to the screen.\n   */\n  _doRender(position) {\n    if (!this.#spriteBitmap) {\n      return;\n    }\n    const frame = this.#animation\n      ? this.#animation.getCurrentFrame()\n      : this.#spriteBitmap;\n\n    this._boundingBoxCanvas.x = position.x - this._boundingBoxCanvas.width / 2;\n    this._boundingBoxCanvas.y = position.y - this._boundingBoxCanvas.height / 2;\n\n    this._context.drawImage(\n      frame.image,\n      position.x - frame.centreX,\n      position.y - frame.centreY\n    );\n  }\n}\n","/**\n * @file Canvas functions for handling text.\n *\n * @module utils/text/text\n *\n * License {@link https://opensource.org/license/mit/|MIT}\n *\n * Copyright 2024 Steve Butler\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the “Software”), to deal in\n * the Software without restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n * Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */\n\nimport * as fonts from './fonts.js';\n\n/**\n * @typedef {Object} TextBounds\n * @property {number} width - width of text\n * @property {number} width - height of text\n * @property {number} offsetTop - offset from text y position to top. This is negative.\n * @property {number} offsetCentreY - offset from text y position to centre. This is negative.\n */\n\n/**\n * Calculate the text bounds. Note that the box surrounds the entire text including\n * descenders.\n * @param {CanvasRenderingContext2D} context\n * @param {string} text\n * @returns {TextBounds}\n */\nexport function getTextBounds(context, text) {\n  const metrics = context.measureText(text);\n  return {\n    width: metrics.width,\n    height: metrics.fontBoundingBoxAscent + metrics.fontBoundingBoxDescent,\n    offsetTop: -metrics.fontBoundingBoxAscent,\n    offsetCentreY:\n      0.5 * (metrics.fontBoundingBoxDescent - metrics.fontBoundingBoxAscent),\n  };\n}\n\n/**\n * Wrap text based on https://codepen.io/nishiohirokazu/pen/jjNyye\n * @param {CanvasRenderingContext2D} context\n * @param {string} paragraph\n * @param {import('../geometry.js').Position} position\n * @param {Object} options\n * @param {number} options.xWrapPosition - position to wrap text.\n * @param {number} [options.lineSpacing = 1] - multiplier for line height. 1 shifts lines by the total font height.\n * @returns {number} the next line y position.\n */\nfunction wrapParagraph(context, paragraph, position, options) {\n  const words = paragraph.split(' ');\n  let x = position.x ?? 0;\n  let y = position.y ?? 0;\n  let maxLineLength = options.xWrapPosition - x;\n  let lineSpacing = options.lineSpacing ?? 1;\n  let line = '';\n  let lineHeight;\n\n  for (let n = 0; n < words.length; n++) {\n    let testLine = line + words[n] + ' ';\n    const bounds = getTextBounds(context);\n    if (!lineHeight) {\n      lineHeight = lineSpacing * bounds.height;\n    }\n    if (bounds.width > maxLineLength && n > 0) {\n      context.fillText(line, x, y);\n      line = words[n] + ' ';\n      y += lineHeight;\n    } else {\n      line = testLine;\n    }\n  }\n  context.fillText(line, x, y);\n  return y + lineHeight;\n}\n/**\n * Write text to the canvas. Text can be wrapped if required.\n * @param {CanvasRenderingContext2D} context\n * @param {*} text\n * @param {import('../geometry.js').Position} position\n * @param {Object} options\n * @param {number} [options.wrapAtX] - if null, undefined or zero, no wrapping occurs.\n * @param {number} [options.lineSpacing = 1] - multiplier for line height. 1 shifts lines by the total font height.\n * @param {string} [options.styleName] - named style. Picks up settings from module:utils/fonts\n * @param {string} [options.color] - color\n */\nexport function writeText(context, text, position, options) {\n  context.font = fonts.getCss(options?.styleName);\n  context.fillStyle = options?.color ?? 'white';\n  if (!options?.wrapAtX) {\n    context.fillText(text, position.x ?? 0, position.y ?? 0);\n  } else {\n    var paragraphs = text.split('\\n');\n    for (let n = 0; n < paragraphs.length; n++) {\n      options.y = wrapParagraph(context, paragraphs[n], position, options);\n    }\n  }\n}\n","/**\n * @file Debug utilities\n *\n * @module utils/debug\n *\n * License {@link https://opensource.org/license/mit/|MIT}\n *\n * Copyright 2024 Steve Butler\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the “Software”), to deal in\n * the Software without restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n * Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */\nexport const OPTIONS = {\n  /**\n   * Should sprite boxes be drawn.@type {boolean}\n   */\n  spriteBoxes: false,\n  /**\n   * Show framerate\n   */\n  showFps: true,\n};\n","/**\n * @file Animation support\n *\n * @module utils/sprites/animation\n *\n * License {@link https://opensource.org/license/mit/|MIT}\n *\n * Copyright 2024 Steve Butler\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the “Software”), to deal in\n * the Software without restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n * Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */\n\nimport IMAGE_MANAGER from './imageManager.js';\nimport GAME_CLOCK from '../time/clock.js';\nimport { Indexer } from '../arrays/indexer.js';\nimport LOG from '../logging.js';\n\n/**\n * Collection of SpriteBitmap objects\n */\nexport class AnimatedImage {\n  /** @type {boolean} */\n  playing;\n  /** @type {import('./imageManager.js').SpriteBitmap[]} */\n  #frames;\n  /** @type {Indexer} */\n  #indexer;\n  /** @type {number} */\n  #lastFrameCount;\n\n  /** Period in ms for frame animations @type {number}*/\n  #framePeriodMs;\n  /**\n   * Construct animation.\n   * @param {number} textureIndex\n   * @param {Object | string} filenamePattern - if a string is parsed then the image is a single frame.\n   * @param {string} filenamePattern.prefix\n   * @param {number} filenamePattern.startIndex - starting index.\n   * @param {number} filePattern.padding - index is padded with leading zeros to padding length\n   * @param {string} filenamePattern.suffix\n   * @param {Object} options\n   * @param {number} options.framePeriodMs - period in ms for frame animations.\n   * @param {LoopMethod} options.loopMethod - method of looping animation.\n   */\n  constructor(textureIndex, filenamePattern, options) {\n    this.#frames = [];\n    this.#lastFrameCount = 0;\n    if (typeof filenamePattern === 'string') {\n      this.#frames.push(\n        IMAGE_MANAGER.getSpriteBitmap(textureIndex, filenamePattern)\n      );\n      return;\n    }\n\n    this.#framePeriodMs = Math.max(1, options.framePeriodMs);\n\n    let index = filenamePattern.startIndex ?? 0;\n    let padding = filenamePattern.padding ?? 0;\n    let textureFrame;\n    do {\n      const fileName = `${filenamePattern.prefix}${index\n        .toString()\n        .padStart(padding, '0')}${filenamePattern.suffix}`;\n      textureFrame = IMAGE_MANAGER.getSpriteBitmap(textureIndex, fileName); // imageManager.getFrame(textureIndex, fileName);\n      if (textureFrame) {\n        this.#frames.push(textureFrame);\n      }\n      index++;\n    } while (textureFrame);\n    this.#indexer = new Indexer(this.#frames.length, options.loopMethod);\n    this.playing = true;\n  }\n\n  /**\n   * Get current frame\n   * @returns {import('./imageManager.js').SpriteBitmap}\n   */\n  getCurrentFrame() {\n    if (this.#frames.length > 1) {\n      if (this.playing) {\n        const frameCount = GAME_CLOCK.getFrameCount(this.#framePeriodMs);\n        if (frameCount !== this.#lastFrameCount) {\n          this.#indexer.advanceBy(frameCount - this.#lastFrameCount);\n          this.#lastFrameCount = frameCount;\n        }\n      }\n      return this.#frames[this.#indexer.index];\n    } else {\n      return this.#frames[0];\n    }\n  }\n\n  /**\n   * Manual movement of frames. Note this automatically switches off playing.\n   * @param {number} index - frame index. This will be clipped to the ends of the\n   * array.\n   */\n\n  setCurrentIndex(index) {\n    if (this.#frames.length > 1) {\n      this.playing = false;\n      this.#indexer.index = index;\n    }\n  }\n\n  /**\n   * Get the current index.\n   * @returns {number}\n   */\n  getCurrentIndex() {\n    if (this.#frames.length > 1) {\n      return this.#indexer.index;\n    } else {\n      return 0;\n    }\n  }\n}\n\n/**\n * Create keyed animated images.\n */\nexport class KeyedAnimatedImages {\n  /** @type {Object.<string, AnimatedImage>} */\n  #animatedImages;\n  /** @type {string} */\n  #currentImage;\n\n  /**\n   * Create the keyed animated image\n   * @param {string} key\n   * @param {AnimatedImage} animatedImage\n   */\n  constructor(key, animatedImage) {\n    this.#animatedImages = {};\n    this.#animatedImages[key] = animatedImage;\n    this.#currentImage = animatedImage;\n  }\n\n  /**\n   * Get the current image.\n   */\n  get image() {\n    return this.#currentImage;\n  }\n  /**\n   * Add image to available images.\n   * @param {string} key\n   * @param {AnimatedImage} animatedImage\n   */\n\n  addAnimatedImage(key, animatedImage) {\n    this.#animatedImages[key] = animatedImage;\n  }\n\n  /**\n   * Set the current animation key. Ignored if it does not exist.\n   * @param {string} key\n   */\n  setCurrentKey(key) {\n    //eslint-disable-next-line no-prototype-builtins\n    if (this.#animatedImages.hasOwnProperty(key)) {\n      this.#currentImage = this.#animatedImages[key];\n    } else {\n      LOG.error(`Attempt to set current key to nonexistent value of ${key}`);\n    }\n  }\n\n  /**\n   * Get current frame\n   * @returns {import('./imageManager.js').SpriteBitmap}\n   */\n  getCurrentFrame() {\n    return this.#currentImage.getCurrentFrame();\n  }\n}\n","/**\n * @file Load and manage images. The image manager is implemented as a singleton.\n *\n * @module utils/sprites/imageManager\n *\n * License {@link https://opensource.org/license/mit/|MIT}\n *\n * Copyright 2024 Steve Butler\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the “Software”), to deal in\n * the Software without restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n * Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */\n\nimport LOG from '../logging.js';\n\n/**\n * @typedef {Object} SpriteBitmap\n * @property {Image} image\n * @property {number} width\n * @property {number} height\n * @property {number} centreX\n * @property {number} centreY\n */\n\n/** @type {Array.Map<string, SpriteBitmap>} */\nlet spriteMaps = [];\n\n/**\n * Load an image\n * @param {URL} srcUrl - source URL\n * @returns {Promise} fulfils to @type {Image}.\n */\nfunction loadImage(srcUrl) {\n  return new Promise((resolve) => {\n    const image = new Image();\n    image.addEventListener('load', () => {\n      LOG.debug('Image loaded.');\n      resolve(image);\n    });\n    image.src = srcUrl;\n  });\n}\n\n/**\n * Load a number of images\n * @param {URL[]} srcUrls - array of source URLs\n * @returns {Promise} fulfils to @type {Image[]}.\n */\nfunction loadImages(srcUrls) {\n  const promises = [];\n  srcUrls.forEach((url) => promises.push(loadImage(url)));\n  return Promise.all(promises);\n}\n\n/**\n * Load sprite map.\n * @param {Object} spriteMapDef Sprite map definition from TexturePacker Array JSON file without multipack\n * @param {URL} textureUrl\n * @returns {Promise} fulfils to array of sprite map keys\n */\nfunction loadSpriteMap(spriteMapDef, textureUrl) {\n  return loadImage(textureUrl).then((image) =>\n    buildSpriteMap(spriteMapDef, image)\n  );\n}\n\n/**\n * Build the sprite map\n * @param {Object} spriteMapDef - map definition from texture mapper. Array JSON no multi pack.\n * @param {Image} texture - images providing texture for sprite map.\n * @returns {Promise} fulfils to array of sprite map keys.\n */\nfunction buildSpriteMap(spriteMapDef, texture) {\n  const promises = [];\n  const map = new Map();\n  spriteMaps.push(map);\n  spriteMapDef.frames.forEach((frame) => {\n    promises.push(\n      createImageBitmap(\n        texture,\n        frame.frame.x,\n        frame.frame.y,\n        frame.frame.w,\n        frame.frame.h\n      ).then((spriteImage) => {\n        const spriteBitmap = {\n          image: spriteImage,\n          width: frame.frame.w,\n          height: frame.frame.h,\n          centreX: frame.sourceSize.w / 2 - frame.spriteSourceSize.x,\n          centreY: frame.sourceSize.h / 2 - frame.spriteSourceSize.y,\n        };\n        map.set(frame.filename, spriteBitmap);\n        return frame.filename;\n      })\n    );\n  });\n\n  return Promise.all(promises);\n}\n\n/**\n * @param {number} spriteMapIndex\n * @param {string} filename\n * @returns {SpriteBitmap} null if filename not found.\n */\nfunction getSpriteBitmap(spriteMapIndex, filename) {\n  const result = spriteMaps[spriteMapIndex].get(filename);\n  if (!result) {\n    LOG.debug(`Failed to find image ${filename} at index ${spriteMapIndex}`);\n  }\n  return result;\n}\n\n/**\n * Singleton image manager.\n */\nconst IMAGE_MANAGER = {\n  getSpriteBitmap: getSpriteBitmap,\n  loadImage: loadImage,\n  loadImages: loadImages,\n  loadSpriteMap: loadSpriteMap,\n};\n\nexport default IMAGE_MANAGER;\n","/**\n * @file Time utilities. Two clocks exist in the games: real and turn based.\n *\n * @module utils/time/clock\n *\n * License {@link https://opensource.org/license/mit/|MIT}\n *\n * Copyright 2024 Steve Butler\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the “Software”), to deal in\n * the Software without restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n * Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */\n\n/**\n * @type {DOMHighResTimeStamp}\n */\nlet currentTimeMs = 0;\n\n/**\n * @param {DOMHighResTimeStamp} timeNowMs\n */\nfunction updateTimeNow(timeNowMs) {\n  currentTimeMs = timeNowMs;\n}\n\n/**\n * Get a frame counter.\n * @param {number} framePeriodMs - time between frames\n * @returns {number}\n */\nfunction getFrameCount(framePeriodMs) {\n  return Math.floor(currentTimeMs / framePeriodMs);\n}\n\n/**\n *  Game clock as singleton.\n */\nconst GAME_CLOCK = {\n  updateTimeNow: updateTimeNow,\n  getFrameCount: getFrameCount,\n};\n\nexport default GAME_CLOCK;\n","/**\n * @file Simple indexer for arrays.\n *\n * @module utils/arrays/indexer\n *\n * License {@link https://opensource.org/license/mit/|MIT}\n *\n * Copyright 2024 Steve Butler\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the “Software”), to deal in\n * the Software without restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n * Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */\n\nimport * as maths from '../maths.js';\n\n/**\n * Looping methods\n * @enum {number}\n */\nexport const LoopMethod = {\n  WRAP: 0,\n  REVERSE: 1,\n  STOP: 2,\n};\n\n/**\n * Class to handle indexing through arrays. This allows an index to be incremented\n * so that it wraps at the end for a circular buffer, reverses for an oscillating\n * index or just stops at the end.\n */\nexport class Indexer {\n  /** @type {number} */\n  #length;\n  /** @type {number} */\n  #maxIndex;\n  /** @type {number} */\n  #loopMethod;\n  /** @type {number} */\n  #direction;\n  /** @type {number} */\n  #index;\n\n  /**\n   * @param {number} length\n   * @param {LoopMethod} loopMethod\n   */\n  constructor(length, loopMethod) {\n    this.#length = length;\n    this.#maxIndex = length - 1;\n    this.#loopMethod = loopMethod;\n    this.#direction = 1;\n    this.#index = 0;\n  }\n\n  /**\n   * Get current index.\n   */\n  get index() {\n    return this.#index;\n  }\n\n  /**\n   * Set current index. This will be clipped to a valid value.\n   */\n  set index(value) {\n    this.#index = maths.clip(value, 0, this.#length - 1);\n  }\n\n  /** Advance to the index.\n   * @param {number} distance - amount to move. This should be positive.\n   * @returns {number} the new index\n   */\n  advanceBy(distance) {\n    if (this.#length < 1) {\n      return this.#index;\n    }\n    switch (this.#loopMethod) {\n      case LoopMethod.WRAP:\n        return this.#advanceByWrap(distance);\n      case LoopMethod.REVERSE:\n        return this.#advanceByReverse(distance);\n      case LoopMethod.NONE:\n      default:\n        return this.#advanceByStop(distance);\n    }\n  }\n\n  /** Advance the index by distance. The direction is maintained by the indexer\n   * itself. Wrap at ends.\n   * @param {number} distance - amount to move. This should be positive.\n   * @returns {number} the new index\n   */\n  #advanceByWrap(distance) {\n    distance = distance % this.#length;\n    this.#index += distance % this.#length;\n    if (this.#index >= this.#length) {\n      this.#index = this.#index - this.#length;\n    }\n    return this.#index;\n  }\n\n  /** Advance the index by distance. The direction is maintained by the indexer\n   * itself. Reverse at ends.\n   * @param {number} distance - amount to move. This should be positive.\n   * @returns {number} the new index\n   */\n  #advanceByReverse(distance) {\n    const nFullTraversals = Math.floor(distance / this.#length);\n    if (nFullTraversals % 2) {\n      this.#direction = -this.#direction; // odd so reversing\n    }\n    distance = distance % this.#length;\n    if (this.#direction > 0) {\n      this.#index += distance;\n      const overshoot = this.#index - this.#maxIndex;\n      if (overshoot > 0) {\n        this.#index = this.#maxIndex - overshoot;\n        this.#direction = -1;\n      }\n    } else if (this.#direction < 0) {\n      this.#index -= distance;\n      if (this.#index < 0) {\n        this.#index = -this.#index;\n        this.#direction = 1;\n      }\n    }\n    return this.#index;\n  }\n\n  /** Advance the index by distance. The direction is maintained by the indexer\n   * itself. Stop at ends.\n   * @param {number} distance - amount to move. This should be positive.\n   * @returns {number} the new index\n   */\n  #advanceByStop(distance) {\n    if (this.#direction > 0) {\n      this.#index = Math.min(this.#maxIndex, this.#index + distance);\n    } else if (this.#direction < 0) {\n      this.#index = Math.max(0, this.#index - distance);\n    }\n    return this.#index;\n  }\n}\n","/**\n * @file Faders which adjust opacity\n *\n * @module utils/sprites/faders\n *\n * License {@link https://opensource.org/license/mit/|MIT}\n *\n * Copyright 2024 Steve Butler (henspace.com).\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the “Software”), to deal in\n * the Software without restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n * Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */\n\nimport { AbstractModifier } from './modifiers.js';\n\n/**\n * Sprite fader\n */\nexport class TimeFader extends AbstractModifier {\n  #deltaOpacityPerSec;\n\n  /**\n   * Construct aligner. Rotations are worked out counter clockwise from the positive\n   * x axis direction. However, sprites are normally drawn vertically as you look at them;\n   * i.e they are pointing downwards or at -90 degrees from the horizontal axis. You can\n   * set this using the baseDirection parameter.\n   * @param {number} lifetimeSecs - default alignment.\n   * @param {AbstractModifier} decoratedModifier\n   */\n  constructor(lifetimeSecs, decoratedModifier) {\n    super(decoratedModifier);\n    this.#deltaOpacityPerSec = 1 / Math.max(lifetimeSecs, 0.5);\n  }\n\n  /**\n   * Adjust sprite opacity depending on time. When the time is complete, this\n   * modify returns null to indicate completion.\n   * @param {import('./sprite.js').Sprite} sprite\n   * @param {number} deltaSeconds - elapsed time\n   * @returns {AbstractModifier}\n   */\n  doUpdate(sprite, deltaSeconds) {\n    sprite.opacity = Math.max(\n      0,\n      sprite.opacity - deltaSeconds * this.#deltaOpacityPerSec\n    );\n    return sprite.opacity > 0 ? this : null;\n  }\n}\n","/**\n * @file Modifiers for updates\n *\n * @module utils\\sprites\\modifiers\n *\n * License {@link https://opensource.org/license/mit/|MIT}\n *\n * Copyright 2024 Steve Butler\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the “Software”), to deal in\n * the Software without restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n * Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */\n\nimport LOG from '../logging.js';\n\n/** Default timeout for transient modifiers. @type {number} */\nconst DEFAULT_TIMEOUT_SECS = 10;\n\n/**\n * Base for all modifiers\n */\nexport class AbstractModifier {\n  /** @type {AbstractModifier} */\n  decoratedModifier;\n  /** The resolve function for transient modifiers @type {function(*)} */\n  #resolveFunc;\n  /** Total active time in seconds */\n  #activeSeconds;\n  /** Timeout duration */\n  #timeoutSeconds;\n\n  /**\n   *\n   * @param {AbstractModifier} [decoratedModifier]\n   */\n  constructor(decoratedModifier) {\n    this.#activeSeconds = 0;\n    this.#timeoutSeconds = 0;\n    this.decoratedModifier = decoratedModifier;\n  }\n\n  /**\n   * Apply the modifier as transient to a sprite.\n   * @param {AbstractModifier} modifier\n   * @param {Sprite} sprite\n   * @param {number} [timeoutSeconds =\n   * @returns {Promise} fulfils to null on completion;\n   */\n  applyAsTransientToSprite(sprite, timeoutSeconds = DEFAULT_TIMEOUT_SECS) {\n    this.#timeoutSeconds = timeoutSeconds;\n    return new Promise((resolve) => {\n      this.#resolveFunc = resolve;\n      sprite.modifier = this;\n    });\n  }\n\n  /**\n   * Apply the modifier as continuous to a sprite.\n   * @param {Sprite} sprite\n   */\n  applyAsContinuousToSprite(sprite) {\n    sprite.modifier = this;\n  }\n\n  /** Do the update modification. If a decoratedModifier has been set, this is then\n   * called. If after calling update, the modifier is removed, it is removed from\n   * the owning decoratedModifier. Its children are retained.\n   * @param {Sprite} sprite\n   * @param {number} deltaSeconds - elapsed time since last update.\n   * @returns {AbstractModifier} - the modifier required for the next update. This\n   * normally returns itself. If null is return, this indicates that the modifier\n   * has completed its action and can be removed from the chain of decorated\n   * modifiers. This method handles removal of its own decoratedModifier, but removal\n   * of the root, if appropriate, is the responsibility of the Sprite.\n   */\n  update(sprite, deltaSeconds) {\n    if (this.#resolveFunc) {\n      this.#activeSeconds += deltaSeconds;\n    }\n    if (this.decoratedModifier) {\n      this.decoratedModifier = this.decoratedModifier?.update(\n        sprite,\n        deltaSeconds\n      );\n    }\n\n    const nextModifier = this.doUpdate(sprite, deltaSeconds);\n    if (!nextModifier || this.#activeSeconds > this.#timeoutSeconds) {\n      this.#resolveFunc?.(null);\n      return null;\n    }\n    return nextModifier;\n  }\n\n  /** Do the update modification for this modifier.\n   * @param {Sprite} sprite\n   * @param {number} deltaSeconds - elapsed time since last update.\n   * @returns {AbstractModifier} - the modifier for the next update.\n   */\n  doUpdate(spriteUnused, deltaSecondsUnused) {\n    LOG.error('doUpdate should be overridden.');\n    return this;\n  }\n}\n","/**\n * @file Movers for sprites\n *\n * @module utils/sprites/movers\n *\n * License {@link https://opensource.org/license/mit/|MIT}\n *\n * Copyright 2024 Steve Butler\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the “Software”), to deal in\n * the Software without restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n * Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */\n\nimport { AbstractModifier } from './modifiers.js';\n\nclass VariableSpeed {\n  /** @type {number} */\n  #speed;\n  /** @type {boolean} */\n  #linear;\n\n  /** Create variable speed.\n   * @param {number} speed - base speed.\n   * @param {boolean} linear - true if speed constant, otherwise speed faster if\n   * further away.\n   */\n  constructor(speed, linear) {\n    this.#speed = speed;\n    this.#linear = linear;\n  }\n\n  /**\n   * Get speed to move between points.\n   * @param {Point} pointA\n   * @param {Point} pointB\n   * @returns {number}\n   */\n  getSpeedBetweenPoints(pointA, pointB) {\n    if (this.#linear) {\n      return this.#speed;\n    } else {\n      const separation =\n        Math.abs(pointA.x - pointB.x) + Math.abs(pointA.y - pointB.y);\n      return (1 + 0.1 * separation) * this.#speed;\n    }\n  }\n}\n/**\n * Simple unbounded velocity mover\n */\nexport class VelocityMover extends AbstractModifier {\n  /** @type {import('../geometry.js').Point} */\n  #topLeft;\n  /** @type {import('../geometry.js').Point} */\n  #bottomRight;\n\n  /**\n   * @param {AbstractModifier} decoratedModifier\n   */\n  constructor(decoratedModifier) {\n    super(decoratedModifier);\n  }\n\n  /**\n   * Move sprite using its velocity\n   * @param {import('./sprite.js').Sprite} sprite\n   * @param {number} deltaSeconds - elapsed time\n   * @returns {AbstractModifier}\n   */\n  doUpdate(sprite, deltaSeconds) {\n    const position = sprite.position;\n    const velocity = sprite.velocity;\n\n    position.x += velocity.x * deltaSeconds;\n    position.y += velocity.y * deltaSeconds;\n\n    sprite.position = position;\n    sprite.velocity = velocity;\n    return this;\n  }\n}\n\n/**\n * Velocity aligner\n */\nexport class VelocityAligner extends AbstractModifier {\n  /** @type {number} */\n  #baseDirection;\n\n  /**\n   * Construct aligner. Rotations are worked out counter clockwise from the positive\n   * x axis direction. However, sprites are normally drawn vertically as you look at them;\n   * i.e they are pointing downwards or at -90 degrees from the horizontal axis. You can\n   * set this using the baseDirection parameter.\n   * @param {number} baseDirection - default alignment.\n   * @param {AbstractModifier} decoratedModifier\n   */\n  constructor(baseDirection = -Math.PI / 2, decoratedModifier) {\n    super(decoratedModifier);\n    this.#baseDirection = baseDirection;\n  }\n\n  /**\n   * Create a VelocityAligner. This is a convenience factory method that automatically\n   * sets the base direction to -90 degrees which is how sprites are normally drawn; i.e. upright\n   * instead of horizontally.\n   * @param {AbstractModifier} decoratedModifier\n   * @returns {VelocityAligner}\n   */\n  static createUprightAligner(decoratedModifier) {\n    return new VelocityAligner(-Math.PI / 2, decoratedModifier);\n  }\n\n  /**\n   * Align sprite using its velocity.\n   * @param {import('./sprite.js').Sprite} sprite\n   * @param {number} deltaSeconds - elapsed time\n   * @returns {AbstractModifier}\n   */\n  doUpdate(sprite, deltaSecondsIgnored) {\n    sprite.position.rotation =\n      sprite.velocity.getScreenDirection() - this.#baseDirection;\n    return this;\n  }\n}\n/**\n * Bouncer mover\n */\nexport class Bouncer extends AbstractModifier {\n  /** @type {import('../geometry.js').Point} */\n  #topLeft;\n  /** @type {import('../geometry.js').Point} */\n  #bottomRight;\n\n  /**\n   * @param {import('../geometry.js').Rectangle} bounds\n   * @param {AbstractModifier} decoratedModifier\n   */\n  constructor(bounds, decoratedModifier) {\n    super(decoratedModifier);\n    this.#topLeft = bounds.getTopLeft();\n    this.#bottomRight = bounds.getBottomRight();\n  }\n\n  /**\n   * Move sprite using its velocity and bouncing on screen.\n   * @param {import('./sprite.js').Sprite} sprite\n   * @param {number} deltaSeconds - elapsed time\n   * @returns {AbstractModifier}\n   */\n  doUpdate(sprite, deltaSeconds) {\n    const position = sprite.position;\n    const velocity = sprite.velocity;\n\n    position.x += velocity.x * deltaSeconds;\n    position.y += velocity.y * deltaSeconds;\n    position.rotation += velocity.rotation * deltaSeconds;\n    if (position.x < this.#topLeft.x || position.x > this.#bottomRight.x) {\n      velocity.x *= -1;\n    }\n    if (position.y < this.#topLeft.y || position.y > this.#bottomRight.y) {\n      velocity.y *= -1;\n    }\n\n    sprite.position = position;\n    sprite.velocity = velocity;\n    return this;\n  }\n}\n\n/**\n * Tracker mover.\n */\nexport class Tracker extends AbstractModifier {\n  /** @type {import('./sprite.js').Sprite} */\n  #prey;\n  /** @type {number} */\n  #maxSeparation;\n  /** @type {number} */\n  #variableSpeed;\n\n  /**\n   *\n   * @param {Object} options\n   * @param {import('./sprite.js').Sprite} options.prey\n   * @param {number} options.maxSeparation - allowable distance between hunter and prey\n   * @param {number} options.speed - pixels / second\n   * @param {boolean} options.linear - if linear the speed is constant, otherwise it speeds up if further away\n   * @param {AbstractModifier} decoratedModifier\n   */\n  constructor(options, decoratedModifier) {\n    super(decoratedModifier);\n    this.#prey = options.prey;\n    this.#maxSeparation = options.maxSeparation;\n    this.#variableSpeed = new VariableSpeed(options.speed, options.linear);\n  }\n\n  /**\n   * Update the sprite to track the hunter.\n   * @param {import('./sprite.js').Sprite} hunter\n   * @param {*} deltaSeconds\n   * @returns {AbstractModifier}\n   */\n  doUpdate(hunter, deltaSeconds) {\n    const preyPos = this.#prey.position;\n    const hunterPos = hunter.position;\n    const approachSpeed = this.#variableSpeed.getSpeedBetweenPoints(\n      preyPos,\n      hunterPos\n    );\n\n    if (!hunterPos.withinSquare(preyPos, this.#maxSeparation)) {\n      const angle = hunterPos.getCartesianAngleTo(preyPos);\n      hunter.velocity.x = approachSpeed * Math.cos(angle);\n      hunter.velocity.y = approachSpeed * Math.sin(angle);\n      const dx = hunter.velocity.x * deltaSeconds;\n      const dy = hunter.velocity.y * deltaSeconds;\n      hunter.position.x += this.getMinMove(dx, preyPos.x, hunterPos.x);\n      hunter.position.y += this.getMinMove(dy, preyPos.y, hunterPos.y);\n    }\n    return this;\n  }\n\n  /**\n   * Get the minimum movement to go from targetValue to currentValue.\n   * @param {number} maxMovement - maximum movement. NB. In this context, max ignores sign.\n   * @param {number} targetValue\n   * @param {number} currentValue\n   */\n  getMinMove(maxMovement, targetValue, currentValue) {\n    const requiredMovement = targetValue - currentValue;\n    if (Math.sign(maxMovement) < 0) {\n      return Math.max(maxMovement, requiredMovement);\n    } else {\n      return Math.min(maxMovement, requiredMovement);\n    }\n  }\n}\n\n/**\n * PathFollower. Provides a one-off movement.\n * Once it hits its target, it removes itself from the chain.\n */\nexport class PathFollower extends AbstractModifier {\n  /** @type {Point[]} */\n  #path;\n  /** @type {number} */\n  #index;\n  /** @type {import('../geometry.js').Point} */\n  #targetPoint;\n  /** @type {VariableSpeed} */\n  #variableSpeed;\n  /**\n   *\n   * @param {Object} options\n   * @param {Point[]} options.path\n   * @param {number} options.speed - pixels / second\n   * @param {boolean} options.linear - if linear the speed is constant, otherwise it speeds up if further away\n   * @param {AbstractModifier} decoratedModifier\n   */\n  constructor(options, decoratedModifier) {\n    super(decoratedModifier);\n    this.#path = options.path;\n    this.#index = 0;\n    this.#targetPoint = options.path[0];\n    this.#variableSpeed = new VariableSpeed(options.speed, options.linear);\n  }\n\n  /**\n   * Update the sprite to track the hunter.\n   * @param {import('./sprite.js').Sprite} subject\n   * @param {*} deltaSeconds\n   * @returns {AbstractModifier}\n   */\n  doUpdate(subject, deltaSeconds) {\n    const subjectPos = subject.position;\n    const approachSpeed = this.#variableSpeed.getSpeedBetweenPoints(\n      this.#targetPoint,\n      subjectPos\n    );\n    const angle = subjectPos.getCartesianAngleTo(this.#targetPoint);\n    subject.velocity.x = approachSpeed * Math.cos(angle);\n    subject.velocity.y = approachSpeed * Math.sin(angle);\n    const dx = subject.velocity.x * deltaSeconds;\n    const dy = subject.velocity.y * deltaSeconds;\n    subjectPos.x += this.getMinMove(dx, this.#targetPoint.x, subjectPos.x);\n    subjectPos.y += this.getMinMove(dy, this.#targetPoint.y, subjectPos.y);\n    if (subjectPos.isCoincident(this.#targetPoint)) {\n      if (++this.#index >= this.#path.length) {\n        subject.velocity.x = 0;\n        subject.velocity.y = 0;\n        return this.decoratedModifier; // Remove itself from chain\n      } else {\n        this.#targetPoint = this.#path[this.#index];\n      }\n    }\n    return this;\n  }\n\n  /**\n   * Get the minimum movement to go from targetValue to currentValue.\n   * @param {number} maxMovement - maximum movement. NB. In this context, max ignores sign.\n   * @param {number} targetValue\n   * @param {number} currentValue\n   */\n  getMinMove(maxMovement, targetValue, currentValue) {\n    const requiredMovement = targetValue - currentValue;\n    if (Math.sign(maxMovement) < 0) {\n      return Math.max(maxMovement, requiredMovement);\n    } else {\n      return Math.min(maxMovement, requiredMovement);\n    }\n  }\n}\n","/**\n * @file Resolve events that depend on chance or dix roles.\n *\n * @module dnd/chance\n *\n * License {@link https://opensource.org/license/mit/|MIT}\n *\n * Copyright 2024 Steve Butler (henspace.com).\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the “Software”), to deal in\n * the Software without restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n * Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */\n\nimport { rollDice } from '../utils/dice.js';\n\n/**\n * Can actor hit opponent\n * @param {} actor - the person attempting to perform the action.\n * @param {*} opponent - the opposing actor\n * @returns {boolean}\n */\nexport function hits(actor, opponent) {\n  return rollDice(20) > 10; // @ToDo\n}\n\n/**\n * Can actor evade opponent.\n * @param {} actor - the person attempting to perform the action.\n * @param {*} opponent - the opposing actor\n * @returns {boolean}\n */\nexport function evades(actor, opponent) {\n  return rollDice(20) > 10; // @ToDo\n}\n\n/**\n * Can actor evade opponent.\n * @param {} actor - the person attempting to perform the action.\n * @param {*} opponent - the opposing actor\n * @returns {number} - amount of damage inflicted.\n */\nexport function damageInflicted(actor, opponent) {\n  return rollDice(6); // @ToDo\n}\n","/**\n * @file Simulation of dice\n *\n * @module utils/dice\n *\n * License {@link https://opensource.org/license/mit/|MIT}\n *\n * Copyright 2024 Steve Butler (henspace.com).\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the “Software”), to deal in\n * the Software without restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n * Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */\n\nimport * as maths from './maths.js';\n\n/**\n * Roll a dice\n * @param {number} [sides = 6] - number of sides on the dice\n * @returns {number}\n */\nexport function rollDice(sides = 6) {\n  return maths.getRandomIntInclusive(1, sides);\n}\n","/**\n * @file Dialogs for use in the game\n *\n * @module utils/dom/ui\n *\n * License {@link https://opensource.org/license/mit/|MIT}\n *\n * Copyright 2024 Steve Butler (henspace.com).\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the “Software”), to deal in\n * the Software without restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n * Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */\n\nimport SCREEN from '../game/screen.js';\nimport { TextButtonControl } from './components.js';\n\n/**\n * Dialog response codes.\n */\nexport const DialogResponse = {\n  OK: 0,\n  CANCEL: 1,\n  YES: 2,\n  NO: 3,\n};\n\n/**\n * Get a message element. This returns a div which contains the message text.\n * @param {string} message\n */\nfunction createMessageElement(message) {\n  const element = document.createElement('div');\n  element.innerText = message;\n  element.classList.add(['scrollable']);\n  return element;\n}\n\n/** Create a message that is removed on any click. This sits above everything\n * as a self contained popup.\n * @param {string} message\n */\nfunction showMessage(message) {\n  const popup = document.createElement('div');\n  popup.appendChild(document.createTextNode(message));\n  popup.className = 'popup';\n  popup.style.opacity = 1;\n  document.body.appendChild(popup);\n  popup.addEventListener('click', () => popup.remove());\n}\n\n/** Create an okDialog.\n * @param {string} message\n * @param {string} [okButtonLabel = 'OK']\n * @param {string} className\n * @returns {Promise} fulfils to DialogResponse.OK\n */\nfunction showOkDialog(message, okButtonLabel = 'OK', className) {\n  const container = document.createElement('div');\n  container.appendChild(createMessageElement(message));\n  const buttonEl = document.createElement('button');\n  buttonEl.appendChild(document.createTextNode(okButtonLabel));\n  container.appendChild(buttonEl);\n  return SCREEN.displayOnGlass(\n    container,\n    [\n      {\n        element: buttonEl,\n        response: DialogResponse.OK,\n        closer: true,\n      },\n    ],\n    className\n  );\n}\n\n/** Create a controls dialog.\n * @param {string} message\n * @param {IconButtonControl[]} ActionButton\n * @param {string} className\n * @returns {Promise} fulfils to DialogResponse.OK\n */\nfunction showControlsDialog(message, actionButtons, className) {\n  const container = document.createElement('div');\n  container.appendChild(createMessageElement(message));\n  const closers = [];\n  actionButtons?.forEach((button) => {\n    container.appendChild(button.element);\n    if (button.action) {\n      button.element.addEventListener('click', () => button.action());\n    } else {\n      closers.push({\n        element: button.element,\n        response: button.id,\n      });\n    }\n  });\n  if (closers.length === 0) {\n    const okButton = new TextButtonControl({ label: 'OK' });\n    container.appendChild(okButton.element);\n    closers.push(okButton);\n  }\n  return SCREEN.displayOnGlass(container, closers, className);\n}\n\n/**\n * The UI singleton.\n */\nconst UI = {\n  showMessage: showMessage,\n  showOkDialog: showOkDialog,\n  showControlsDialog: showControlsDialog,\n};\n\nexport default UI;\n","/**\n * @file Classes for managing menues.\n *\n * @module utils/dom/menu\n *\n * License {@link https://opensource.org/license/mit/|MIT}\n *\n * Copyright 2024 Steve Butler (henspace.com).\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the “Software”), to deal in\n * the Software without restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n * Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */\n\nimport IMAGE_MANAGER from '../sprites/imageManager.js';\nimport GameConstants from '../game/gameConstants.js';\nimport PERSISTENT_DATA from '../persistentData.js';\n\n/**\n * Menu item.\n */\nexport class ActionButton {\n  /** @type {string} */\n  #label;\n  /** @type {import(\"../sprites/imageManager.js\").SpriteBitmap} */\n  #bitmap;\n  /** @type {function():Promise} */\n  #action;\n\n  /**\n   * Create the action button.\n   * @param {Object} options\n   * @param {*} options.label\n   * @param {*} options.image\n   * @param {*} options.action\n   */\n  constructor(options) {\n    this.#label = options.label;\n    this.#bitmap = options.image;\n    this.#action = options.action;\n  }\n\n  /** Get HTML element for the button.\n   * @returns {Element}\n   */\n  getElement() {\n    const container = document.createElement('button');\n    const canvas = document.createElement('canvas');\n    canvas.setAttribute('width', this.#bitmap.width);\n    canvas.setAttribute('height', this.#bitmap.height);\n    const context = canvas.getContext('2d');\n    context.drawImage(this.#bitmap.image, 0, 0);\n    container.appendChild(canvas);\n    const labelEl = document.createElement('span');\n    labelEl.innerText = this.#label;\n    container.appendChild(labelEl);\n    return container;\n  }\n\n  /**\n   * executes the menu item's promise.\n   * @returns {Promise}\n   */\n  execute() {\n    if (this.#action) {\n      return this.#action();\n    } else {\n      return Promise.resolve();\n    }\n  }\n}\n\n/**\n * Text button\n */\nexport class TextButtonControl {\n  /**\n   * @type {Element}\n   */\n  element;\n  /** @type {string} */\n  id;\n\n  /** Create the button */\n  constructor(options) {\n    this.element = document.createElement('button');\n    this.element.appendChild(document.createTextNode(options.label));\n  }\n}\n\n/**\n * Universal control that can be used as an action button or a toggle selection.\n */\nexport class IconButtonControl {\n  /** @type {import(\"../sprites/imageManager.js\").SpriteBitmap} */\n  #bitmapUp;\n  /** @type {import(\"../sprites/imageManager.js\").SpriteBitmap} */\n  #bitmapDown;\n  /** @type {Element} */\n  #element;\n  /** @type {CanvasRenderingContext2D} */\n  #context;\n  /** @type {boolean} */\n  #selected;\n  /** @type {function: Promise} */\n  action;\n  /** @type {string} */\n  id;\n\n  /**\n   * Create a toggle control button. Buttons are sized the same size as a tile\n   * as defined in GameConstants.TILE_SIZE.\n   * @param {Object} options\n   * @param {string} label\n   * @param {string} id - used in responses.\n   * @param {string} options.imageNameUp - the image will be taken from the IMAGE_MANAGER using index 0.\n   * @param {string} [options.imageNameDown] - the image will be taken from the IMAGE_MANAGER using index 0.\n   * If not provided, the up button is used.\n   * @param {boolean} options.internalLabel - set whether the label in inside or outside the button.\n   * @param {function: Promise} options.action - action executed on release. If this is provided, the button is\n   * treated as a momentary button. Otherwise it is treated as a latched button or toggle button.\n   */\n  constructor(options) {\n    if (!options.imageNameDown && !options.action) {\n      throw Error(\n        'Attempt to create a button with no down image and no action. One or other must be supplied.'\n      );\n    }\n    this.id = options.id;\n    const button = document.createElement('button');\n    if (options.imageNameUp) {\n      this.#bitmapUp = IMAGE_MANAGER.getSpriteBitmap(0, options.imageNameUp);\n      this.#bitmapDown = options.imageNameDown\n        ? IMAGE_MANAGER.getSpriteBitmap(0, options.imageNameDown)\n        : this.#bitmapUp;\n      const canvas = document.createElement('canvas');\n      canvas.setAttribute('width', GameConstants.TILE_SIZE);\n      canvas.setAttribute('height', GameConstants.TILE_SIZE);\n      this.#context = canvas.getContext('2d');\n      button.appendChild(canvas);\n    }\n\n    if (options.internalLabel || !this.#context) {\n      this.#element = button;\n      button.classList.add('icon-button-internal');\n      const span = this.#element.appendChild(document.createElement('span'));\n      span.appendChild(document.createTextNode(options.label));\n    } else {\n      button.classList.add('icon-button-external');\n      this.#element = document.createElement('label');\n      this.#element.appendChild(document.createTextNode(options.label));\n      this.#element.appendChild(button);\n    }\n    this.#element.addEventListener('mousedown', () => this.#pressed());\n    this.#element.addEventListener('touchstart', () => this.#pressed(), {\n      passive: true,\n    });\n    this.#element.addEventListener('mouseup', async () => this.#released());\n    this.#element.addEventListener('touchend', async () => this.#released());\n    this.#element.addEventListener('touchcancel', () => this.#cancelled());\n    this.selected = false;\n    this.action = options.action;\n  }\n\n  /**\n   * Get the underlying HTML element;\n   */\n  get element() {\n    return this.#element;\n  }\n\n  /**\n   * Get current selection state\n   * @returns {boolean}\n   */\n  get selected() {\n    return this.#selected;\n  }\n\n  /**\n   * Set current selection state.\n   * @param {boolean} value\n   */\n  set selected(value) {\n    this.#selected = value;\n    this.#showSelectionImage();\n  }\n\n  /** Handle pressed state. */\n  #pressed() {\n    this.#drawImage(this.#bitmapDown);\n  }\n\n  /** Handle released state. */\n  #released() {\n    this.#selected = !this.#selected;\n    this.#showSelectionImage();\n  }\n\n  /** Handle cancelled event. */\n  #cancelled() {\n    this.#showSelectionImage();\n  }\n\n  /** show image appropriate to the current selection state. */\n  #showSelectionImage() {\n    this.#drawImage(this.#selected ? this.#bitmapDown : this.#bitmapUp);\n  }\n\n  /**\n   * Draw image onto the button\n   * @param {import('../sprites/imageManager.js').SpriteBitmap} spriteBitmap\n   */\n  #drawImage(spriteBitmap) {\n    this.#context.clearRect(\n      0,\n      0,\n      GameConstants.TILE_SIZE,\n      GameConstants.TILE_SIZE\n    );\n    this.#context.drawImage(\n      spriteBitmap.image,\n      0.5 * (GameConstants.TILE_SIZE - spriteBitmap.width),\n      0.5 * (GameConstants.TILE_SIZE - spriteBitmap.height)\n    );\n  }\n}\n\n/**\n * IconButtonControl but with the icons set to the standard checkbox icons.\n */\nexport class CheckboxControl extends IconButtonControl {\n  /**\n   * Create checkbox control.\n   * @param {string} label\n   */\n  constructor(label) {\n    super({\n      label: label,\n      imageNameUp: 'ui-checkbox00.png',\n      imageNameDown: 'ui-checkbox01.png',\n      internalLabel: false,\n      action: null,\n    });\n  }\n}\n\n/**\n * Control UI types.\n * @enum {string}\n */\nexport const ControlType = {\n  TEXT_BUTTON: 'text button',\n  CHECKBOX: 'checkbox',\n};\n\n/**\n * @typedef {Object} ControlDefinition\n * @param {string} key - identification for the control. Used as a key for storage.\n * @param {string} label - text displayed on control\n * @param {*}   defValue - default value,\n * @param {ControlType} controlType - type of control required,\n * @param {boolean} persistent - whether the value is stored in persistent data.\n * @param {function: Promise} action - action to perform when clicked.\n */\n\n/**\n * Create a control type.\n * @param {ControlDefinition} definition\n * @returns {IconButtonControl}\n */\nexport function createControl(definition) {\n  let control;\n  switch (definition.controlType) {\n    case ControlType.TEXT_BUTTON:\n      control = new TextButtonControl(definition);\n      break;\n    case ControlType.CHECKBOX:\n      control = new CheckboxControl(definition.label);\n      if (definition.persistent) {\n        control.selected = PERSISTENT_DATA.get(\n          definition.key,\n          definition.defValue\n        );\n        control.action = () => {\n          PERSISTENT_DATA.set(definition.key, control.selected);\n          return definition.action ? definition.action : Promise.resolve();\n        };\n      } else {\n        control.selected = definition.defValue;\n        control.action = definition.action;\n      }\n      break;\n  }\n  return control;\n}\n","/**\n * @file Game constants\n *\n * @module utils/game/gameConstants\n *\n * License {@link https://opensource.org/license/mit/|MIT}\n *\n * Copyright 2024 Steve Butler (henspace.com).\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the “Software”), to deal in\n * the Software without restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n * Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */\n\nconst GameConstants = {\n  TILE_SIZE: 48,\n};\n\nexport default GameConstants;\n","/**\n * @file Settings\n *\n * @module utils/settings\n *\n * License {@link https://opensource.org/license/mit/|MIT}\n *\n * Copyright 2024 Steve Butler (henspace.com).\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the “Software”), to deal in\n * the Software without restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n * Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */\nimport LOG from './logging.js';\n\n/** Encapsulate storage. */\nclass PersistentData {\n  /**\n   * Cached objects so they don't need to be reparsed.\n   * @type {Map<string, *>}\n   */\n  #cache;\n\n  /**\n   * Create persistent data object.\n   */\n  constructor() {\n    this.#cache = new Map();\n  }\n  /**\n   * Set value\n   * @param {string} key\n   * @param {*} value\n   */\n  set(key, value) {\n    this.#cache.set(key, value);\n    try {\n      localStorage.setItem(key, JSON.stringify(value));\n    } catch (error) {\n      LOG.error(`Cannot save setting. ${error.message}`);\n    }\n  }\n\n  /**\n   * Get a value. Uses the cache if already set.\n   * @param {string} key\n   * @param {*} defaultValue\n   * @returns {*} stored data or default value if not present or unparsable.\n   */\n  get(key, defaultValue) {\n    if (this.#cache.has(key)) {\n      return this.#cache.get(key);\n    }\n    let value = defaultValue;\n    try {\n      const encodedValue = localStorage.getItem(key);\n      if (encodedValue !== null) {\n        value = JSON.parse(encodedValue);\n      }\n    } catch (error) {\n      LOG.error(`Cannot parse value from local storage. ${error.message}`);\n    }\n    this.#cache.set(key, value);\n    return value;\n  }\n}\n\nconst PERSISTENT_DATA = new PersistentData();\n\nexport default PERSISTENT_DATA;\n","/**\n * @file Interactions with the ui\n *\n * @module utils/ui/interactions\n *\n * License {@link https://opensource.org/license/mit/|MIT}\n *\n * Copyright 2024 Steve Butler\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the “Software”), to deal in\n * the Software without restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n * Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */\n\n/**\n * @typedef {function} UiClickCallback\n * @param {Object} target - initial object that triggered the handler\n * @param {import('../geometry.js').Point} point - the position that was clicked in world coordinates\n */\n\n/**\n * BAse for all UiClickHandlers\n */\nexport class UiClickHandler {\n  /** @type {UiClickCallback} */\n  #onClick;\n  /** @type {UiClickCallback} */\n  #onContextClick;\n  /** @type {UiClickCallback} */\n  #onPointerDown;\n  /** @type {UiClickCallback} */\n  #onPointerUp;\n\n  /** Set click handler. Note that this does not add a listener for the event.\n   * @param {UiClickCallback} handler\n   */\n  setOnClick(handler) {\n    this.#onClick = handler;\n  }\n\n  /** Set on context Click handler.\n   * @param {UiClickCallback} handler\n   */\n  setOnContextClick(handler) {\n    this.#onContextClick = handler;\n  }\n\n  /** Set pointer down handler. Note that this does not add a listener for the event.\n   * @param {UiClickCallback} handler\n   */\n  setOnPointerDown(handler) {\n    this.#onPointerDown = handler;\n  }\n\n  /** Set pointer up handler. Note that this does not add a listener for the event.\n   * @param {UiClickCallback} handler\n   */\n  setOnPointerUp(handler) {\n    this.#onPointerUp = handler;\n  }\n  /**\n   * Handle click\n   * @param {import('../geometry.js').Point} point\n   */\n  actionClick(point) {\n    this.#onClick?.(this, point);\n  }\n\n  /**\n   * Handle context click\n   * @param {import('../geometry.js').Point} point\n   */\n  actionContextClick(point) {\n    this.#onContextClick?.(this, point);\n  }\n\n  /**\n   * Handle pointer down\n   * @param {import('../geometry.js').Point} point\n   */\n  actionPointerDown(point) {\n    this.#onPointerDown?.(this, point);\n  }\n\n  /**\n   * Handle pointer up\n   * @param {import('../geometry.js').Point} point\n   */\n  actionPointerUp(point) {\n    this.#onPointerUp?.(this, point);\n  }\n}\n","/**\n * @file Navigation button set for the HUD\n *\n * @module utils/game/hudNavSet\n *\n * License {@link https://opensource.org/license/mit/|MIT}\n *\n * Copyright 2024 Steve Butler (henspace.com).\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the “Software”), to deal in\n * the Software without restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n * Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */\n\nimport HUD from './hud.js';\nimport { AnimatedImage } from '../sprites/animation.js';\nimport { LoopMethod } from '../arrays/indexer.js';\nimport { CameraTracking } from './camera.js';\n\n/**\n * @type {number}\n */\nconst SCROLL_TILES_PER_SEC = 3;\n\n/**\n * Location of the navigation buttons\n * @enum {number}\n */\nexport const NavigationLocation = {\n  TR: 0,\n  BR: 1,\n  BL: 2,\n  TL: 3,\n};\n\n/** Encapsulation of navigation buttons. */\nexport class NavigationButtons {\n  /** @type {CameraDolly} */\n  #cameraDolly;\n\n  /** @type {Actor} */\n  #trackingButton;\n\n  /** @type {import('../sprites/imageManager.js').SpriteBitmap} */\n  #trackingButtonImage;\n\n  /**\n   *\n   * @param {CameraDolly} cameraDolly\n   * @param {number} gridSize\n   * @param {NavigationLocation} location\n   */\n  constructor(cameraDolly, gridSize, location) {\n    this.#cameraDolly = cameraDolly;\n    this.#createButtonSet(gridSize, location);\n  }\n\n  /**\n   * Create the buttons.\n   * @param {number} gridSize\n   * @param {NavigationLocation} location\n   */\n  #createButtonSet(gridSize, location) {\n    let centreX;\n    let centreY;\n    switch (location) {\n      case NavigationLocation.TL:\n        centreX = 2 * gridSize;\n        centreY = 2 * gridSize;\n        break;\n      case NavigationLocation.TR:\n        centreX = -2 * gridSize;\n        centreY = 2 * gridSize;\n        break;\n      case NavigationLocation.BR:\n        centreX = -2 * gridSize;\n        centreY = -2 * gridSize;\n        break;\n      case NavigationLocation.BL:\n        centreX = 2 * gridSize;\n        centreY = -2 * gridSize;\n        break;\n    }\n    this.#createCentreButton(centreX, centreY);\n    this.#createArrowButtons(centreX, centreY, gridSize);\n  }\n\n  /** Create the centre button.\n   * @param {number} centreX\n   * @param {number} centreY\n   */\n  #createCentreButton(centreX, centreY) {\n    this.#trackingButtonImage = new AnimatedImage(\n      0,\n      {\n        prefix: 'hud-auto-centre',\n        startIndex: 0,\n        padding: 2,\n        suffix: '.png',\n      },\n      { framePeriodMs: 1, loopMethod: LoopMethod.STOP }\n    );\n    this.#trackingButton = HUD.addButton(\n      this.#trackingButtonImage,\n      () => {\n        this.setTrackingState(true);\n      },\n      () => {\n        this.setTrackingState(false);\n      }\n    );\n    this.#trackingButton.position.x = centreX;\n    this.#trackingButton.position.y = centreY;\n    this.#trackingButton.actionClick(null); // defaulting to selected.\n  }\n\n  /**\n   * Set the tracking state.\n   * @param {boolean} on\n   */\n  setTrackingState(on) {\n    if (on) {\n      this.#trackingButtonImage.setCurrentIndex(1);\n      this.#cameraDolly.setTrackingMethod(CameraTracking.HERO);\n    } else {\n      this.#trackingButtonImage.setCurrentIndex(0);\n      this.#cameraDolly.setTrackingMethod(CameraTracking.OFF);\n    }\n  }\n\n  /**\n   * Create the arrow buttons\n   * @param {number} centreX\n   * @param {number} centreY\n   * @param {number} gridSize\n   */\n  #createArrowButtons(centreX, centreY, gridSize) {\n    const scrollSpeed = SCROLL_TILES_PER_SEC * gridSize;\n    this.#createMomentaryButton(\n      'hud-arrow-up',\n      centreX,\n      centreY - gridSize,\n      () => {\n        this.setTrackingState(false);\n        this.#cameraDolly.setVelocity(0, -scrollSpeed);\n      },\n      () => this.#cameraDolly.setTrackingMethod(CameraTracking.OFF)\n    );\n\n    this.#createMomentaryButton(\n      'hud-arrow-right',\n      centreX + gridSize,\n      centreY,\n      () => {\n        this.setTrackingState(false);\n        this.#cameraDolly.setVelocity(scrollSpeed, 0);\n      },\n      () => this.#cameraDolly.setTrackingMethod(CameraTracking.OFF)\n    );\n\n    this.#createMomentaryButton(\n      'hud-arrow-down',\n      centreX,\n      centreY + gridSize,\n      () => {\n        this.setTrackingState(false);\n        this.#cameraDolly.setVelocity(0, scrollSpeed);\n      },\n      () => this.#cameraDolly.setTrackingMethod(CameraTracking.OFF)\n    );\n\n    this.#createMomentaryButton(\n      'hud-arrow-left',\n      centreX - gridSize,\n      centreY,\n      () => {\n        this.setTrackingState(false);\n        this.#cameraDolly.setVelocity(-scrollSpeed, 0);\n      },\n      () => this.#cameraDolly.setTrackingMethod(CameraTracking.OFF)\n    );\n  }\n\n  /**\n   * Create a momentary button.\n   * @param {string} imageNamePrefix - images are assumed to be imageNamePrefixNNN.png\n   * @param {number} x - x position\n   * @param {number} y - y position\n   * @param {function} callbackDown\n   * @param {function} callbackUp\n   */\n  #createMomentaryButton(imageNamePrefix, x, y, callbackDown, callbackUp) {\n    const animatedImage = new AnimatedImage(\n      0,\n      {\n        prefix: imageNamePrefix,\n        startIndex: 0,\n        padding: 2,\n        suffix: '.png',\n      },\n      { framePeriodMs: 1, loopMethod: LoopMethod.STOP }\n    );\n    let button = HUD.addMomentaryButton(\n      animatedImage,\n      callbackDown,\n      callbackUp\n    );\n    button.position.x = x;\n    button.position.y = y;\n    animatedImage.setCurrentIndex(0);\n  }\n}\n","/**\n * @file Camera dolly class. This provides a mechanism to allow the canvas to\n * track a specified Sprite.\n *\n * @module utils/game/camera\n *\n * License {@link https://opensource.org/license/mit/|MIT}\n *\n * Copyright 2024 Steve Butler\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the “Software”), to deal in\n * the Software without restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n * Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */\n\nimport SCREEN from './screen.js';\nimport { Sprite } from '../sprites/sprite.js';\nimport { Tracker, VelocityMover } from '../sprites/movers.js';\nimport LOG from '../logging.js';\n\n/**\n * Set the methods of tracking\n * @enum {number}\n */\nexport const CameraTracking = {\n  OFF: 0,\n  HERO: 1,\n  VELOCITY: 2,\n};\n\n/**\n * Camera dolly class\n */\nexport class CameraDolly {\n  /** @type {import('../sprites/sprite.js').Sprite} */\n  #sprite;\n  /** @type @type {import('../sprites/modifiers.js').AbstractModifier} */\n  #heroTracker;\n  /** @type @type {import('../sprites/modifiers.js').AbstractModifier} */\n  #velocityTracker;\n  /** @type {number} */\n  #trackingMethod;\n\n  /**\n   * Create a camera dolly. This is a sprite that is designed to track a target.\n   * @param {Sprite} target\n   * @param {number} speed\n   * @param {number} proportionSeparated - max space between camera and target as proportion of minimum screen dimension.\n   */\n  constructor(target, speed, proportionSeparated = 0) {\n    const canvasDims = SCREEN.getCanvasDimensions();\n    const separation =\n      proportionSeparated * Math.min(canvasDims.width, canvasDims.height);\n    this.#sprite = new Sprite();\n\n    this.#heroTracker = new Tracker({\n      prey: target,\n      speed: speed,\n      maxSeparation: separation,\n    });\n\n    this.#velocityTracker = new VelocityMover();\n    this.#heroTracker.applyAsContinuousToSprite(this.#sprite);\n  }\n\n  /**\n   * Update the camera position.\n   * @param {number} deltaSeconds - elapsed time since last update.\n   */\n  update(deltaSeconds) {\n    if (this.#trackingMethod !== CameraTracking.OFF) {\n      this.#sprite.update(deltaSeconds);\n      SCREEN.centreCanvasOn(this.#sprite.position);\n    }\n  }\n  /**\n   * Set the velocity to dX, dY. This will automatically set tracking to velocity.\n   * @param {number} dX\n   * @param {number} dY\n   */\n  setVelocity(vX, vY) {\n    this.setTrackingMethod(CameraTracking.VELOCITY);\n    this.#sprite.velocity.x = vX;\n    this.#sprite.velocity.y = vY;\n  }\n\n  /**\n   * Pan the camera by dx, dy. Automatic tracking is switched off.\n   * @param {number} dx\n   * @param {number} dy\n   */\n  panBy(dx, dy) {\n    this.#sprite.position.x += dx;\n    this.#sprite.position.y += dy;\n    SCREEN.centreCanvasOn(this.#sprite.position);\n  }\n\n  /**\n   * Set the trackingMethod\n   * @param {number} method - CameraTracking enum\n   */\n  setTrackingMethod(method) {\n    if (method === this.#trackingMethod) {\n      return;\n    }\n    this.#trackingMethod = method;\n    switch (method) {\n      case CameraTracking.HERO:\n        this.#heroTracker.applyAsContinuousToSprite(this.#sprite);\n        break;\n      case CameraTracking.VELOCITY:\n        this.#velocityTracker.applyAsContinuousToSprite(this.#sprite);\n        break;\n      case CameraTracking.OFF:\n        break;\n      default:\n        LOG.error(\n          `Attempt to set invalid tracking method of ${method} ignored.`\n        );\n    }\n  }\n}\n","/**\n * @file Support for emojis, especially as sprites.\n *\n * @module utils/text/emojis\n *\n * License {@link https://opensource.org/license/mit/|MIT}\n *\n * Copyright 2024 Steve Butler\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the “Software”), to deal in\n * the Software without restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n * Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */\n\nimport LOG from '../logging.js';\n\nexport const Emojis = {\n  GRINNING: '😀',\n  SANTA: '🎅',\n  SHAKING: '\\u{1FAE8}',\n};\n\n/**\n * Check to see if the emojis are supported. Any emoji which fails to render,\n * is replaced by a number in square brackets. Note that the function just checks the centre\n * pixel so it may fail in some situations and think that a valid emoji has not\n * rendered.\n * @param {CanvasRenderingContext2D} context\n */\nexport function checkEmojis(context) {\n  let fallbackIndex = 0;\n  for (const key in Emojis) {\n    const metrics = context.measureText(Emojis[key]);\n    const height =\n      metrics.fontBoundingBoxAscent + metrics.fontBoundingBoxDescent;\n    const centreToBaseLine = 0.5 * height - metrics.fontBoundingBoxDescent;\n    context.fillText(Emojis[key], -0.5 * metrics.width, centreToBaseLine);\n    const alphaAtCentre = context.getImageData(0, 0, 1, 1).data[3];\n    if (alphaAtCentre <= 0) {\n      LOG.debug(`Emoji ${key} not supported.`);\n      Emojis[key] = `[${fallbackIndex++}]`;\n    }\n    context.clearRect(0, 0, metrics.width, height);\n  }\n}\n","/**\n * @file Load assets. This module is placed in the assets folder to simplify\n * dynamic imports using Parcel's import.meta.url property.\n *\n * @module utils\\assetLoaders.js\n *\n * License {@link https://opensource.org/license/mit/|MIT}\n *\n * Copyright 2024 Steve Butler (henspace.com).\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the “Software”), to deal in\n * the Software without restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n * Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */\nimport LOG from './logging.js';\n/**\n * @type {Object<string, URL>} Urls for dynamically loading resources\n */\nexport const Urls = {\n  DUNGEON_SCRIPT: new URL(\n    '../../assets/stories/dungeon_script.txt',\n    import.meta.url\n  ),\n};\n\n/**\n * Load text file from URL.\n * @param {URL} url\n * @return {Promise} fulfils to text or null.\n */\nexport function loadTextFromUrl(url) {\n  return fetch(url)\n    .then((response) => response.text())\n    .then((text) => text)\n    .catch((reason) => {\n      LOG.error(`Error fetching ${url}: ${reason}`);\n      return null;\n    });\n}\n\n/**\n * Load json from URL.\n * @param {URL} url\n * @return {Promise} fulfils to json object or null.\n */\nexport function loadJsonFromUrl(url) {\n  return fetch(url)\n    .then((response) => response.text())\n    .then((text) => text)\n    .catch((reason) => {\n      LOG.error(`Error fetching ${url}: ${reason}`);\n      return null;\n    });\n}\n","module.exports = new __parcel__URL__(\"dungeon_script.e102251e.txt\").toString();","/**\n * @file File that actually processes the script.\n * The script parser acts as a state machine as it parses the script.\n * Dungeons work as levels.\n *\n * @module scriptReaders/scriptParser\n *\n * License {@link https://opensource.org/license/mit/|MIT}\n *\n * Copyright 2024 Steve Butler\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the “Software”), to deal in\n * the Software without restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n * Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */\n\nimport ACTOR_MAP from './actorMap.js';\nimport { SceneDefinition } from './sceneDefinitionParser.js';\nimport { CharacterTraits } from '../dnd/traits.js';\nimport { RoomCreator } from '../utils/tileMaps/roomGenerator.js';\nimport LOG from '../utils/logging.js';\n\n/**\n * @typedef {Object} SectionParsingResult\n * @property {string} nextSectionId\n * @property {number} nextLineIndex\n */\n\n/**\n * Section IDs\n * @enum {string}\n */\nconst SectionId = {\n  HERO: 'HERO',\n  LEVEL: 'LEVEL',\n  CAST: 'CAST',\n  MAP: 'MAP',\n};\n\n/** Basic parser for a section of the script. */\nclass AbstractSectionParser {\n  /** @type {SceneDefinition} */\n  sceneDefn;\n  /** Lines of the script. @type {string[]} */\n  lines;\n\n  /** @type {number} lineIndex */\n  lineIndex;\n\n  /**\n   * Construct parser.\n   * @param {number} lines\n   * @param {number} startLine\n   * @param {SceneDefinition} sceneDefn\n   */\n  constructor(lines, startLine, sceneDefn) {\n    this.lines = lines;\n    this.lineIndex = startLine;\n    this.sceneDefn = sceneDefn;\n  }\n  /**\n   * Parse lines.\n   * @returns {SectionParsingResult} next section and line\n   * @throws {Exception} parsing error has occurred.\n   */\n  parse() {\n    while (this.lineIndex < this.lines.length) {\n      const line = this.lines[this.lineIndex];\n      const nextSectionId = AbstractSectionParser.getSectionIdFromLine(line);\n      if (nextSectionId) {\n        return { nextSectionId: nextSectionId, nextLineIndex: this.lineIndex };\n      } else {\n        this.parseLine(line);\n        this.lineIndex++;\n      }\n    }\n    return null;\n  }\n\n  /**\n   * Find the first section in an array of lines.\n   * @param {string[]} lines \n   * @returns {SectionParsingResult} next section and line. Null if not found.\n   \n   */\n  static findFirstSection(lines) {\n    for (let index = 0; index < lines.length; index++) {\n      const id = AbstractSectionParser.getSectionIdFromLine(\n        lines[index].trim()\n      );\n      if (id) {\n        return { nextSectionId: id, nextLineIndex: index };\n      }\n    }\n    return null;\n  }\n\n  /**\n   * Parse.\n   * @param {string} line;\n   */\n  parseLine(lineUnused) {\n    throw 'Method parseLine should be overridden.';\n  }\n\n  /** Check the line to see if it is a section marker.\n   * @returns {string} the section section marker. Null if not a section marker.\n   */\n  static getSectionIdFromLine(line) {\n    const match = line.match(/^\\s*\\[ *([\\w ]+) *\\]/);\n    if (match) {\n      return match[1].toUpperCase();\n    }\n    return null;\n  }\n\n  /**\n   * Handle an error.\n   * @param {string} message\n   * @throws {Error}\n   */\n  fatalError(message) {\n    throw new Error(\n      `Error parsing script on line ${this.lineIndex + 1}: ${message}`\n    );\n  }\n\n  /**\n   * Handle ignorable error.\n   * @param {string} message\n   */\n  ignoreError(message) {\n    LOG.debug(\n      `Ignoring error parsing script on line ${this.lineIndex}: ${message}`\n    );\n  }\n}\n\n/**\n * Parser for introductions.\n */\nclass IntroParser extends AbstractSectionParser {\n  /**\n   * Construct parser.\n   * @param {number} lines\n   * @param {number} startLine\n   * @param {SceneDefinition} sceneDefn\n   */\n  constructor(lines, startLine, sceneDefn) {\n    super(lines, startLine, sceneDefn);\n    this.sceneDefn.intro = '';\n  }\n  /**\n   * Parse a line.\n   * @override\n   */\n  parseLine(line) {\n    this.sceneDefn.intro += line === '' ? '\\n' : line;\n  }\n}\n\n/**\n * Parser for the cast list.\n */\nclass HeroParser extends AbstractSectionParser {\n  /**\n   * Construct parser.\n   * @param {number} lines\n   * @param {number} startLine\n   * @param {SceneDefinition} sceneDefn\n   */\n  constructor(lines, startLine, sceneDefn) {\n    super(lines, startLine, sceneDefn);\n  }\n  /**\n   * Parse a line.\n   * @override\n   */\n  parseLine(line) {\n    const match = line.match(/^\\s*(\\w+?) *: *([\\w,:= /]*)/);\n    if (match) {\n      this.#parseShortFormHero(match);\n    } else {\n      this.#parseLongFormHero(line);\n    }\n  }\n\n  /**\n   * Parse a short form single line actor definition.\n   * @param {string[]} matchResults - results from regex match.\n   */\n  #parseShortFormHero(matchResults) {\n    const name = matchResults[1];\n    const traitsDefn = matchResults[2];\n\n    try {\n      const traits = new CharacterTraits().setFromString(traitsDefn);\n      this.sceneDefn.hero = {\n        id: 'HERO',\n        name: name || 'mystery',\n        traits: traits,\n      };\n    } catch (error) {\n      this.fatalError(error.message);\n    }\n  }\n  /**\n   * Parse a line to build a long form, multiline actor\n   * @param {string} line - current line.\n   */\n  #parseLongFormHero(lineIgnored) {\n    this.fatalError('Long form actors not supported.');\n  }\n}\n\n/**\n * Parser for the cast list.\n */\nclass CastParser extends AbstractSectionParser {\n  /**\n   * Construct parser.\n   * @param {number} lines\n   * @param {number} startLine\n   * @param {SceneDefinition} sceneDefn\n   */\n  constructor(lines, startLine, sceneDefn) {\n    super(lines, startLine, sceneDefn);\n  }\n  /**\n   * Parse a line.\n   * @override\n   */\n  parseLine(line) {\n    const match = line.match(/^\\s*(\\w+?) *x(\\d{1,2}) *([^:]*): *([\\w,:= /]*)/);\n    if (match) {\n      this.#parseShortFormActor(match);\n    } else {\n      this.#parseLongFormActor(line);\n    }\n  }\n\n  /**\n   * Parse a short form single line actor definition.\n   * @param {string[]} matchResults - results from regex match.\n   */\n  #parseShortFormActor(matchResults) {\n    const actorId = matchResults[1].toUpperCase();\n    const number = parseInt(matchResults[2]);\n    const name = matchResults[3];\n    const traitsDefn = matchResults[4];\n    for (let n = 0; n < number; n++) {\n      if (ACTOR_MAP.has(actorId)) {\n        try {\n          const traits = new CharacterTraits().setFromString(traitsDefn);\n          this.sceneDefn.enemies.push({\n            id: actorId,\n            name: name || 'mystery',\n            traits: traits,\n          });\n        } catch (error) {\n          this.fatalError(error.message);\n        }\n      } else {\n        this.fatalError(`Cast member ${actorId} does not exist.`);\n      }\n    }\n  }\n  /**\n   * Parse a line to build a long form, multiline actor\n   * @param {string} line - current line.\n   */\n  #parseLongFormActor(lineIgnored) {\n    this.fatalError('Long form actors not supported.');\n  }\n}\n\n/**\n * Parser for dungeon map.\n */\nclass MapParser extends AbstractSectionParser {\n  #randomised;\n  #randomRegex;\n  /**\n   * Construct parser.\n   * @param {number} lines\n   * @param {number} startLine\n   * @param {SceneDefinition} sceneDefn\n   */\n  constructor(lines, startLine, sceneDefn) {\n    super(lines, startLine, sceneDefn);\n    this.#randomised = false;\n    this.#randomRegex = /^\\s*random\\s*$/i;\n  }\n  /**\n   * Parse a line.\n   * @override\n   */\n  parseLine(line) {\n    if (this.#randomised) {\n      return;\n    }\n    if (line !== '') {\n      if (this.#randomRegex.test(line)) {\n        const creator = new RoomCreator({\n          minCols: 12,\n          maxCols: 40,\n          maxRoomCols: 10,\n          minRows: 12,\n          maxRows: 40,\n          maxRoomRows: 6,\n        });\n        this.sceneDefn.mapDesign = creator.generate();\n        this.#randomised = true;\n        LOG.debug('Random map');\n        this.sceneDefn.mapDesign.forEach((line) => LOG.debug(line));\n      } else {\n        this.sceneDefn.mapDesign.push(line);\n      }\n    }\n  }\n}\n\n/** Lines of the script. @type {string[]} */\nlet lines;\n\n/** Scenes @type {SceneDefinition[]} */\nlet sceneDefinitions;\n\n/**\n * Get a section parser for the section Id.\n * @param {string} sectionId\n * @param {number} lineIndex\n * @param {SceneDefinition} sceneDefn\n * @returns {SectionParser} null if the id is not valid.\n */\nfunction getParserForId(sectionId, lineIndex, sceneDefn) {\n  switch (sectionId) {\n    case SectionId.HERO:\n      return new HeroParser(lines, lineIndex + 1, sceneDefn); // skip the actual section ID line.\n    case SectionId.LEVEL:\n      return new IntroParser(lines, lineIndex + 1, sceneDefn); // skip the actual section ID line.\n    case SectionId.CAST:\n      return new CastParser(lines, lineIndex + 1, sceneDefn); // skip the actual section ID line.\n    case SectionId.MAP:\n      return new MapParser(lines, lineIndex + 1, sceneDefn); // skip the actual section ID line.\n  }\n  return null;\n}\n\n/**\n * Parse the script.\n *  @param {string} script\n * @returns {SceneDefinition[]} array of all the scene definitions.\n * @throws {Exception} thrown on parsing error.\n */\nexport default function parseScript(script) {\n  lines = script.split(/\\r?\\n/);\n  sceneDefinitions = [];\n  let sceneDefn = new SceneDefinition();\n  const sectionHunt = AbstractSectionParser.findFirstSection(lines);\n  if (!sectionHunt) {\n    throw new Error(`Invalid script. No section identifiers found.`);\n  }\n\n  let parser = getParserForId(\n    sectionHunt.nextSectionId,\n    sectionHunt.nextLineIndex,\n    sceneDefn\n  );\n  while (parser) {\n    const result = parser.parse();\n    if (!result?.nextSectionId || result.nextSectionId === SectionId.LEVEL) {\n      sceneDefinitions.push(sceneDefn);\n      sceneDefn = new SceneDefinition();\n    }\n    parser = !result\n      ? null\n      : getParserForId(result.nextSectionId, result.nextLineIndex, sceneDefn);\n  }\n  return sceneDefinitions;\n}\n","/**\n * @file Map of names to actor factories in the dungeon.\n *\n * @module scriptReaders/actorMap\n *\n * License {@link https://opensource.org/license/mit/|MIT}\n *\n * Copyright 2024 Steve Butler (henspace.com).\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the “Software”), to deal in\n * the Software without restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n * Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */\n\nimport { Sprite } from '../utils/sprites/sprite.js';\nimport { Actor } from '../utils/game/actors.js';\nimport * as spriteRenderers from '../utils/sprites/spriteRenderers.js';\nimport IMAGE_MANAGER from '../utils/sprites/imageManager.js';\nimport * as animation from '../utils/sprites/animation.js';\nimport { Position } from '../utils/geometry.js';\nimport SCREEN from '../utils/game/screen.js';\nimport WORLD from '../utils/game/world.js';\nimport { Colours } from '../constants/colours.js';\nimport { Fight, Trade } from '../dnd/interact.js';\nimport StdAnimations from './actorAnimationKeys.js';\nimport * as maths from '../utils/maths.js';\nimport GameConstants from '../utils/game/gameConstants.js';\n\n/**\n * Specialist traits renderer\n */\nclass ActorTraitsRenderer extends spriteRenderers.MultiGaugeTileRenderer {\n  /** @type {Actor} */\n  actor;\n  /**\n   * The number of gauges is determined by the maximum length of the fill styles and\n   * stroke styles\n   * @param {CanvasRenderingContext2D} context\n   * @param {Object} options\n   * @param {number} options.tileSize\n   * @param {string[]} options.fillStyles\n   * @param {string[]} options.strokeStyles\n   */\n  constructor(context, options) {\n    super(context, options);\n  }\n  /**\n   * Render the sprite.\n   * @param {import('../geometry.js').Position} position - this will have been adjusted to the screen.\n   */\n  render(position) {\n    if (this.actor && this.actor.traits) {\n      const hp = this.actor.traits.get('HP');\n      const hpMax = this.actor.traits.get('HP_MAX');\n      this.setLevel(0, hp / hpMax);\n      this.setLevel(1, 1);\n    }\n    super.render(position);\n  }\n}\n\n/**\n * Animation that automatically adjusts the animation based on the actor's velocity\n * and alive property.\n */\nclass ActorStateAnimator extends animation.KeyedAnimatedImages {\n  /** @type {Actor} */\n  #actor;\n\n  /** Number from eight point compass. */\n  #compassDir;\n\n  /** @type{boolean}*/\n  #aliveStatus;\n\n  /**\n   * Create the keyed animated image\n   * @param {string} key\n   * @param {AnimatedImage} animatedImage\n   */\n  constructor(key, animatedImage) {\n    super(key, animatedImage);\n    this.#compassDir = maths.CompassEightPoint.NONE;\n  }\n\n  /**\n   * Set the actor who's velocity will be monitored.\n   * @param {Actor} actor\n   */\n  setActor(actor) {\n    this.#actor = actor;\n    this.#aliveStatus = this.#actor.alive;\n  }\n\n  /** override */\n  getCurrentFrame() {\n    const dir = this.#getCurrentDirection();\n    if (dir !== this.#compassDir || this.#aliveStatus != this.#actor?.alive) {\n      this.#compassDir = dir;\n      this.#aliveStatus = this.#actor?.alive;\n      this.#setAnimationForState();\n    }\n    return super.getCurrentFrame();\n  }\n\n  #getCurrentDirection() {\n    if (!this.#actor || this.#actor.velocity.isZero(0.1)) {\n      return maths.CompassEightPoint.NONE;\n    } else {\n      const dir = this.#actor.velocity.getScreenDirection();\n      return maths.angleToFourPointCompass(dir);\n    }\n  }\n\n  /**\n   * Set the appropriate animation based on the the current compass direction.\n   * Only four points supported.\n   */\n  #setAnimationForState() {\n    if (!this.#actor.alive) {\n      return this.setCurrentKey(StdAnimations.definitions.DEAD.keyName);\n    }\n    switch (this.#compassDir) {\n      case maths.CompassEightPoint.NONE:\n        this.setCurrentKey(StdAnimations.definitions.IDLE.keyName);\n        break;\n      case maths.CompassEightPoint.E:\n        this.setCurrentKey(StdAnimations.definitions.WALK_EAST.keyName);\n        break;\n      case maths.CompassEightPoint.N:\n      case maths.CompassEightPoint.NW:\n      case maths.CompassEightPoint.NE:\n        this.setCurrentKey(StdAnimations.definitions.WALK_NORTH.keyName);\n        break;\n      case maths.CompassEightPoint.W:\n        this.setCurrentKey(StdAnimations.definitions.WALK_WEST.keyName);\n        break;\n      default:\n        this.setCurrentKey(StdAnimations.definitions.WALK_SOUTH.keyName);\n        break;\n    }\n  }\n}\n\n/**\n * Create set of standard animations.\n * @returns {animation.KeyedAnimatedImages}\n */\nfunction createStandardKeyFrames(imageName) {\n  const keyedAnimations = new ActorStateAnimator(\n    'still',\n    new animation.AnimatedImage(0, `${imageName}.png`)\n  );\n\n  for (const key in StdAnimations.definitions) {\n    const anim = StdAnimations.definitions[key];\n    keyedAnimations.addAnimatedImage(\n      StdAnimations.definitions[key].keyName,\n      new animation.AnimatedImage(\n        0,\n        {\n          prefix: StdAnimations.formFrameNameRoot(key, imageName),\n          suffix: '.png',\n          startIndex: 0,\n          padding: 2,\n        },\n        anim.options\n      )\n    );\n  }\n  keyedAnimations.setCurrentKey(StdAnimations.definitions.IDLE.keyName);\n  return keyedAnimations;\n}\n/**\n * Create the actor.\n * @param {string} imageName - no extension\n * @returns {Actor}\n */\nfunction createAnimatedActor(imageName) {\n  const keyedAnimation = createStandardKeyFrames(imageName);\n  const imageRenderer = new spriteRenderers.ImageSpriteCanvasRenderer(\n    SCREEN.getContext2D(),\n    keyedAnimation\n  );\n\n  const traitsRenderer = new ActorTraitsRenderer(SCREEN.getContext2D(), {\n    tileSize: WORLD.getTileMap().getGridSize() - 2,\n    fillStyles: [Colours.HP_GAUGE, Colours.MORALE_GAUGE],\n    strokeStyles: [],\n  });\n  const actor = new Actor(\n    new Sprite({\n      renderer: [traitsRenderer, imageRenderer],\n    })\n  );\n  keyedAnimation.setActor(actor);\n  traitsRenderer.actor = actor;\n  actor.position = new Position(\n    GameConstants.TILE_SIZE,\n    GameConstants.TILE_SIZE,\n    0\n  );\n  actor.velocity = { x: 0, y: 0, rotation: 0.1 };\n  return actor;\n}\n\n/**\n * @param {string} imageName - without extension\n * @returns {Actor}\n */\nfunction createUnanimatedActor(imageName) {\n  const actor = new Actor(\n    new Sprite({\n      renderer: new spriteRenderers.ImageSpriteCanvasRenderer(\n        SCREEN.getContext2D(),\n        IMAGE_MANAGER.getSpriteBitmap(0, `${imageName}.png`)\n      ),\n    })\n  );\n  return actor;\n}\n\n/**\n * Create animated fighter\n * @param {string} imageName - without extension\n * @returns {Actor}\n */\nfunction createAnimatedFighter(imageName) {\n  const actor = createAnimatedActor(imageName);\n  actor.interaction = new Fight(actor);\n  return actor;\n}\n\n/**\n * Create animated trader\n * @param {string} imageName - without extension\n * @returns {Actor}\n */\nfunction createAnimatedTrader(imageName) {\n  const actor = createAnimatedActor(imageName);\n  actor.interaction = new Trade(actor);\n  return actor;\n}\n\n/**\n * @typedef {Object} ActorMapCreator\n * @property {function():Actor} create\n */\n/**\n * Map of actor creators which are used to create actors based on a key.\n * @type {Map<string, ActorMapCreator>}\n */\n\nconst ACTOR_MAP = new Map([\n  ['HERO', { create: () => createAnimatedActor('hero') }],\n  ['MONSTER', { create: () => createAnimatedFighter('orc') }],\n  ['TRADER', { create: () => createAnimatedTrader('trader') }],\n]);\n\nexport default ACTOR_MAP;\n","/**\n * @file Colours used in the game.\n *\n * @module constants/colours\n *\n * License {@link https://opensource.org/license/mit/|MIT}\n *\n * Copyright 2024 Steve Butler (henspace.com).\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the “Software”), to deal in\n * the Software without restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n * Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */\n\n/**\n * Colours used in the game.\n * @enum {string}\n */\nexport const Colours = {\n  HP_GAUGE: 'rgba(255, 0, 0, 0.2)',\n  MORALE_GAUGE: 'rgba(0, 0, 255, 0.2)',\n};\n","/**\n * @file Standard animation keys.\n *\n * @module scriptReaders\\actorAnimationKeys\n *\n * License {@link https://opensource.org/license/mit/|MIT}\n *\n * Copyright 2024 Steve Butler (henspace.com).\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the “Software”), to deal in\n * the Software without restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n * Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */\n\nimport LOG from '../utils/logging.js';\nimport { LoopMethod } from '../utils/arrays/indexer.js';\n\n/**\n * Standard animation defintions for an actor.\n * It is assumed that animation images are formed from a root nam\n */\nconst AnimationDefns = {\n  DEAD: {\n    keyName: 'DEAD',\n    suffix: 'dead',\n    options: {\n      framePeriodMs: 100,\n      loopMethod: LoopMethod.STOP,\n    },\n  },\n  IDLE: {\n    keyName: 'IDLE',\n    suffix: 'idle',\n    options: {\n      framePeriodMs: 300,\n      loopMethod: LoopMethod.REVERSE,\n    },\n  },\n  WALK_NORTH: {\n    keyName: 'WALK_N',\n    suffix: 'walk-n',\n    options: {\n      framePeriodMs: 100,\n      loopMethod: LoopMethod.REVERSE,\n    },\n  },\n  WALK_EAST: {\n    keyName: 'WALK_E',\n    suffix: 'walk-e',\n    options: {\n      framePeriodMs: 100,\n      loopMethod: LoopMethod.REVERSE,\n    },\n  },\n  WALK_SOUTH: {\n    keyName: 'WALK_S',\n    suffix: 'walk-s',\n    options: {\n      framePeriodMs: 100,\n      loopMethod: LoopMethod.REVERSE,\n    },\n  },\n  WALK_WEST: {\n    keyName: 'WALK_W',\n    suffix: 'walk-w',\n    options: {\n      framePeriodMs: 100,\n      loopMethod: LoopMethod.REVERSE,\n    },\n  },\n};\n\n/**\n * Form the frame name for an image\n * @param {string} key - the key name for the animation.\n * @param {string} imageName\n */\nfunction formFrameNameRoot(key, imageName) {\n  const suffix = AnimationDefns[key]?.suffix;\n  if (!suffix) {\n    throw new Error(\n      `Attempt made to use invalid standard animation key of '${key}'`\n    );\n  }\n  return `${imageName}-${suffix}`;\n}\n\n/** Object to access standard animations. */\nconst StdAnimations = {\n  definitions: AnimationDefns,\n  formFrameNameRoot: formFrameNameRoot,\n};\n\nexport default StdAnimations;\n","/**\n * @file Convert a screen definition into a scene.\n *\n * @module scriptReaders/sceneDefinitionParser\n *\n * License {@link https://opensource.org/license/mit/|MIT}\n *\n * Copyright 2024 Steve Butler (henspace.com).\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the “Software”), to deal in\n * the Software without restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n * Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */\n\nimport { TilePlan } from '../utils/tileMaps/tilePlan.js';\nimport { TileMap } from '../utils/tileMaps/tileMap.js';\nimport TURN_MANAGER from '../utils/game/turnManager.js';\nimport WORLD from '../utils/game/world.js';\nimport ACTOR_MAP from './actorMap.js';\nimport SCREEN from '../utils/game/screen.js';\nimport { TILE_MAP_KEYS } from './symbolMapping.js';\nimport { AbstractScene } from '../utils/game/scene.js';\nimport SCENE_MANAGER from '../utils/game/sceneManager.js';\nimport GameConstants from '../utils/game/gameConstants.js';\n\nconst GRID_SIZE = GameConstants.TILE_SIZE;\n\n/** @type {Actor} */\nlet lastHero;\n\n/**\n * @typedef {Object} ActorDefn\n * @property {string} name\n * @property {import('../dnd/traits.js').CharacterTraits} traits\n */\n/**\n * Definition of a scene\n */\nexport class SceneDefinition {\n  /** @type {string} */\n  intro;\n  /** @type {ActorDefn} */\n  hero;\n  /** @type {ActorDefn[]} */\n  enemies;\n  /** @type {string[]} */\n  mapDesign;\n  /**\n   * Construct an empty scene\n   */\n  constructor() {\n    this.enemies = [];\n    this.mapDesign = [];\n  }\n}\n\n/**\n * Create the hero. If the scene definition doesn't have a hero definition, the\n * lastHero is used.\n * @param {SceneDefinition} sceneDefn\n * @returns {Actor}\n */\nfunction createHero(sceneDefn) {\n  if (sceneDefn.hero) {\n    const actor = ACTOR_MAP.get(sceneDefn.hero.id).create();\n    actor.traits = sceneDefn.hero.traits.clone();\n    lastHero = actor;\n    return actor;\n  } else {\n    if (!lastHero) {\n      throw new Error('No hero has been defined.');\n    }\n    return lastHero;\n  }\n}\n/**\n * Create the enemies.\n * @param {SceneDefinition} sceneDefn\n * @returns {Actor[]}\n */\nfunction createEnemies(sceneDefn) {\n  const enemies = [];\n  sceneDefn.enemies.forEach((enemy) => {\n    const actor = ACTOR_MAP.get(enemy.id).create();\n    actor.traits = enemy.traits;\n    enemies.push(actor);\n  });\n  return enemies;\n}\n\n/**\n * Scene created from a scene definition.\n */\nclass ParsedScene extends AbstractScene {\n  /** @type {SceneDefinition} */\n  #sceneDefn;\n\n  /** Construct the scene from a definition. */\n  constructor(sceneDefn) {\n    super();\n    this.#sceneDefn = sceneDefn;\n  }\n\n  /** @override */\n  doLoad() {\n    return Promise.resolve();\n  }\n\n  doInitialise() {\n    const tilePlan = TilePlan.generateTileMapPlan(\n      this.#sceneDefn.mapDesign,\n      TILE_MAP_KEYS\n    );\n    const tileMap = new TileMap(SCREEN.getContext2D(), tilePlan, GRID_SIZE);\n    WORLD.setTileMap(tileMap);\n    this.heroActor = createHero(this.#sceneDefn);\n    createEnemies(this.#sceneDefn).forEach((enemy) => {\n      enemy.position = tileMap.getRandomFreeGroundTile().worldPoint;\n      WORLD.addActor(enemy);\n    });\n    SCENE_MANAGER.setCameraToTrack(this.heroActor.sprite, 200, 0);\n    WORLD.addActor(this.heroActor);\n    TURN_MANAGER.setHero(this.heroActor);\n    return Promise.resolve();\n  }\n\n  /**\n   * @override\n   */\n  doUpdate(deltaSecondsUnused) {\n    return;\n  }\n\n  /**\n   * @override\n   */\n  doUnload() {\n    return Promise.resolve(null);\n  }\n}\n/**\n * Parse the scene definition to create a Scene\n * @param {SceneDefinition} sceneDefn\n * @returns {Scene}\n */\nexport function parseSceneDefinition(sceneDefn) {\n  return new ParsedScene(sceneDefn);\n}\n","/**\n * @file Tile map support\n *\n * @module utils/tileMaps/tilePlan\n *\n * License {@link https://opensource.org/license/mit/|MIT}\n *\n * Copyright 2024 Steve Butler\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the “Software”), to deal in\n * the Software without restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n * Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */\nimport LOG from '../logging.js';\nimport { getSurrounds } from '../arrays/arrayManip.js';\nimport { Point } from '../geometry.js';\n\n/** Symbol used to mark void tiles @type {string} */\nconst VOID_SYMBOL = ' ';\n\n/** Special symbols for constructing the dungeon.\n * The first character in each array is used as the default, so there should be\n * an image for that. Note that the symbols in the arrays must be single characters.\n * @type {Object<string, string[]>}\n */\nexport const SpecialSymbols = {\n  WALL: ['#', '*', '|'],\n  DOOR_IN: ['-'],\n  DOOR_OUT: ['='],\n  GROUND: ['.', ':', ',', ';'],\n  VOID: [' '],\n};\n\n/**\n * Clarifiers appended to ambiguous design symbols.\n */\nconst Clarifiers = {\n  TOP_LEFT: '-TL',\n  TOP_LEFT_INTERNAL: '-TLI',\n  TOP: '-T',\n  TOP_RIGHT: '-TR',\n  TOP_RIGHT_INTERNAL: '-TRI',\n  RIGHT: '-R',\n  BOTTOM_RIGHT: '-BR',\n  BOTTOM_RIGHT_INTERNAL: '-BRI',\n  BOTTOM: '-B',\n  BOTTOM_LEFT: '-BL',\n  BOTTOM_LEFT_INTERNAL: '-BLI',\n  LEFT: '-L',\n  TOP_TEE: '-TTEE',\n  RIGHT_TEE: '-RTEE',\n  BOTTOM_TEE: '-BTEE',\n  LEFT_TEE: '-LTEE',\n  INTERNAL_CROSS: '-XI',\n  INTERNAL_VERTICAL: '-VI',\n  INTERNAL_HORIZONTAL: '-HI',\n};\n\n/**\n * Shadow clarifiers. Added to some symbols to mark it as being below a top wall.\n */\nconst ShadowClarifier = {\n  BELOW_WALL: '-SBW',\n  BELOW_END_WALL: '-SBE',\n};\n\n/**\n * Design created by users for a tile map.\n * The design comprises an array of strings. Each string is row in the tile map.\n * A single character is used for each tile. Users can use any character they want\n * except for the {@link SpecialSymbols} characters which have predefined meanings.\n * These predefined symbols can be ambiguous. E.g. the CORNER could be any of four possible\n * corners. These are clarified automatically and have a suffix added to clarify\n * its position.\n *  @typedef {string[]}TileMapDesign\n */\n\n/**\n * Two dimensional array of tile design information. This is different from the\n * design information as the design now exists as a two dimensional array of\n * TileDefinition.\n *\n * @typedef {Array.TileDefinition[]} TilePlan\n */\n\n/**\n * Tile Design Information.\n * @typedef {Object} TileDefinition\n * @property {string} name\n * @property {string} image\n */\n\n/**\n * Map of symbols to names and image names. The name just allows different tile\n * types to use the same image.\n * @typedef {Map<string, TileDesignInfo>} SymbolMap\n */\n\n/**\n * Encapsulated tile plan.\n */\nexport class TilePlan {\n  /** @type {Array.<Array.<*>>} */\n  matrix;\n  /** @type {Point} */\n  entryPointByDoor;\n  /** @type {Point} */\n  exitPointByDoor;\n\n  constructor() {\n    this.entryPointByDoor = new Point(0, 0);\n    this.exitPointByDoor = new Point(0, 0);\n  }\n\n  /**\n   * Converts a tile map design into a tile map plan\n   * @param {TileMapDesign} design\n   * @param {SymbolMap}} symbolMap\n   * @returns {TilePlan}\n   */\n  static generateTileMapPlan(design, symbolMap) {\n    const tilePlan = new TilePlan();\n    let matrix = tilePlan.convertToMatrix(design);\n    matrix = tilePlan.clarifyMatrix(matrix);\n    tilePlan.createPlan(matrix, symbolMap);\n    return tilePlan;\n  }\n  /**\n   * Convert the user's design from array of strings into a 2D array.\n   * @returns {Array.string[]}\n   */\n  convertToMatrix(design) {\n    const matrix = [];\n    let nColumns = 0;\n    design.forEach((row) => {\n      nColumns = Math.max(nColumns, row.length);\n    });\n    design.forEach((row) => {\n      if (row.length < nColumns) {\n        row = row + ' '.repeat(nColumns - length);\n      }\n      matrix.push(row.split(''));\n    });\n    return matrix;\n  }\n\n  /**\n   * Go through the design matrix and convert any ambiguous symbols to more specific\n   * ones. Note the tilePlan matrix is not adjusted. The entry and exit tiles are discovered though.\n   * @param {Array.string[]} matrix\n   */\n  clarifyMatrix(matrix) {\n    const unambiguousMatrix = [];\n    matrix.forEach((rowValue, rowIndex) => {\n      const correctedRow = [];\n      unambiguousMatrix.push(correctedRow);\n      rowValue.forEach((colValue, colIndex) => {\n        const surrounds = getSurrounds(matrix, rowIndex, colIndex);\n        if (isVoid(colValue)) {\n          colValue = VOID_SYMBOL;\n        } else if (isGround(colValue)) {\n          colValue = clarifyGround(colValue, surrounds);\n          if (isEntryTile(colValue, surrounds)) {\n            this.entryPointByDoor = new Point(colIndex, rowIndex);\n          } else if (isExitTile(colValue, surrounds)) {\n            this.exitPointByDoor = new Point(colIndex, rowIndex);\n          }\n        } else if (isPartOfWall(colValue)) {\n          colValue = clarifyWallPart(colValue, surrounds);\n        }\n        correctedRow.push(colValue);\n      });\n    });\n    return unambiguousMatrix;\n  }\n  /**\n   * Convert a clarified design plan matrix into a tile plan.\n   * @param {string[][]} matrix\n   * @param {Map<string, *>} symbolMap\n   * @returns {Array.<Array.<*>>}\n   */\n  createPlan(matrix, symbolMap) {\n    const planMatrix = [];\n    matrix.forEach((rowValue) => {\n      const planRow = [];\n      planMatrix.push(planRow);\n      rowValue.forEach((columnValue) => {\n        planRow.push(getDesignInfo(columnValue, symbolMap));\n      });\n    });\n    this.matrix = planMatrix;\n  }\n}\n\n/**\n * Test if symbol is a void.\n * @returns {boolean}\n */\nfunction isVoid(symbol) {\n  return SpecialSymbols.VOID.includes(symbol);\n}\n\n/**\n * Test if symbol is an entrance.\n * @returns {boolean}\n */\nfunction isEntrance(symbol) {\n  return SpecialSymbols.DOOR_IN.includes(symbol);\n}\n\n/**\n * Test if symbol is an exit.\n * @returns {boolean}\n */\nfunction isExit(symbol) {\n  return SpecialSymbols.DOOR_OUT.includes(symbol);\n}\n\n/**\n * Test if symbol is a door.\n * @returns {boolean}\n */\nfunction isDoor(symbol) {\n  return isEntrance(symbol) || isExit(symbol);\n}\n\n/**\n * Test if symbol is a wall.\n * @returns {boolean}\n */\nfunction isWall(symbol) {\n  return SpecialSymbols.WALL.includes(symbol);\n}\n\n/**\n * Test if symbol is ground.\n * @returns {boolean}\n */\nfunction isGround(symbol) {\n  return SpecialSymbols.GROUND.includes(symbol);\n}\n/**\n * Test if the symbol, unclarified, is part of a wall.\n * @param {string} symbol\n * @returns {boolean}\n */\nfunction isPartOfWall(symbol) {\n  return isWall(symbol) || isDoor(symbol);\n}\n\n/**\n * Clarify the ground.\n * @param {string} value\n * @param {import('../arrays/arrayManip.js').Surrounds} surrounds\n * @return {string}\n */\nfunction clarifyGround(value, surrounds) {\n  if (isPartOfWall(surrounds.above)) {\n    if (isPartOfWall(surrounds.tl)) {\n      value += ShadowClarifier.BELOW_WALL;\n    } else {\n      value += ShadowClarifier.BELOW_END_WALL;\n    }\n  }\n  return value;\n}\n\n/**\n * Check if this floor tile is the entry tile. This is the tile the hero will\n * appear on when entering the map. The tests are made in the order of where\n * the doors is most likely to be placed assuming a left to right, top to bottom\n * design.\n * @param {string} value\n * @param {import('../arrays/arrayManip.js').Surrounds} surrounds\n * @returns {boolean}\n */\nfunction isEntryTile(value, surrounds) {\n  return (\n    isEntrance(surrounds.left) ||\n    isEntrance(surrounds.above) ||\n    isEntrance(surrounds.right) ||\n    isEntrance(surrounds.below)\n  );\n}\n\n/**\n * Check if this floor tile is the exit tile. This is the tile the hero will\n * appear on when entering the map. The tests are made in the order of where\n * the doors is most likely to be placed assuming a left to right, top to bottom\n * design.\n * @param {string} value\n * @param {import('../arrays/arrayManip.js').Surrounds} surrounds\n * @returns {boolean}\n */\nfunction isExitTile(value, surrounds) {\n  return (\n    isExit(surrounds.right) ||\n    isExit(surrounds.below) ||\n    isExit(surrounds.left) ||\n    isExit(surrounds.above)\n  );\n}\n/**\n * Distinguish the type of tile based on its surroundings.\n * This function does not handle corners.\n * @param {string} value\n * @param {import('../arrays/arrayManip.js').Surrounds} surrounds\n * @return {string}\n */\nfunction clarifyWallPart(value, surrounds) {\n  let result = value;\n  // internals centre cross\n  if (\n    isPartOfWall(surrounds.above) &&\n    isPartOfWall(surrounds.right) &&\n    isPartOfWall(surrounds.below) &&\n    isPartOfWall(surrounds.left)\n  ) {\n    result += Clarifiers.INTERNAL_CROSS;\n  } else if (isGround(surrounds.left) && isGround(surrounds.right)) {\n    result += Clarifiers.INTERNAL_VERTICAL;\n  } else if (isGround(surrounds.above) && isGround(surrounds.below)) {\n    result += Clarifiers.INTERNAL_HORIZONTAL;\n  }\n\n  // Tees\n  else if (\n    isPartOfWall(surrounds.left) &&\n    isPartOfWall(surrounds.right) &&\n    isPartOfWall(surrounds.below)\n  ) {\n    result += Clarifiers.TOP_TEE;\n  } else if (\n    isPartOfWall(surrounds.above) &&\n    isPartOfWall(surrounds.below) &&\n    isPartOfWall(surrounds.left)\n  ) {\n    result += Clarifiers.RIGHT_TEE;\n  } else if (\n    isPartOfWall(surrounds.left) &&\n    isPartOfWall(surrounds.right) &&\n    isPartOfWall(surrounds.above)\n  ) {\n    result += Clarifiers.BOTTOM_TEE;\n  } else if (\n    isPartOfWall(surrounds.above) &&\n    isPartOfWall(surrounds.below) &&\n    isPartOfWall(surrounds.right)\n  ) {\n    result += Clarifiers.LEFT_TEE;\n  }\n  // corners\n  else if (isPartOfWall(surrounds.right) && isPartOfWall(surrounds.below)) {\n    result += isGround(surrounds.br)\n      ? Clarifiers.TOP_LEFT\n      : Clarifiers.TOP_LEFT_INTERNAL;\n  } else if (isPartOfWall(surrounds.left) && isPartOfWall(surrounds.below)) {\n    result += isGround(surrounds.bl)\n      ? Clarifiers.TOP_RIGHT\n      : Clarifiers.TOP_RIGHT_INTERNAL;\n  } else if (isPartOfWall(surrounds.left) && isPartOfWall(surrounds.above)) {\n    result += isGround(surrounds.tl)\n      ? Clarifiers.BOTTOM_RIGHT\n      : Clarifiers.BOTTOM_RIGHT_INTERNAL;\n  } else if (isPartOfWall(surrounds.right) && isPartOfWall(surrounds.above)) {\n    result += isGround(surrounds.tr)\n      ? Clarifiers.BOTTOM_LEFT\n      : Clarifiers.BOTTOM_LEFT_INTERNAL;\n  }\n  // straights\n  else if (isPartOfWall(surrounds.above) && isPartOfWall(surrounds.below)) {\n    // vertical\n    result += isGround(surrounds.right) ? Clarifiers.LEFT : Clarifiers.RIGHT;\n  } else if (isPartOfWall(surrounds.right) && isPartOfWall(surrounds.left)) {\n    // horizontal\n    result += isGround(surrounds.below) ? Clarifiers.TOP : Clarifiers.BOTTOM;\n  }\n\n  if (isPartOfWall(surrounds.above)) {\n    return (result += ShadowClarifier.BELOW_WALL);\n  }\n  return result;\n}\n\n/** Get the design info from the symbol map. The function reduces the specialism\n * of the symbol if it cannot find it. I.e it removes any shadow clarifiers and\n * then all other clarifiers when hunting for the symbol in the symbol map.\n * @param {string} symbol - clarified symbol.\n * @param {Map<string, *>} symbolMap\n * @returns {TileDesignInfo}\n */\nfunction getDesignInfo(symbol, symbolMap) {\n  if (symbol === VOID_SYMBOL) {\n    return null;\n  }\n  const match = symbol.match(/(.)(-[^-]*)?(-[^-]*)?/);\n  let info = symbolMap.get(symbol);\n  if (!info && match[2] && match[3]) {\n    info = symbolMap.get(`${match[1]}${match[2]}`); // no shadow clarifier\n  }\n  if (!info && match[2]) {\n    info = symbolMap.get(match[1]); // no clarifiers at all\n  }\n\n  if (!info) {\n    const fallbackSymbol = getFirstOfCohort(match[1]);\n    if (fallbackSymbol && fallbackSymbol !== match[1]) {\n      return getDesignInfo(\n        formClarifiedSymbol(fallbackSymbol, match[2], match[3]),\n        symbolMap\n      );\n    } else {\n      LOG.error(`Failed to find symbol for ${symbol}`);\n    }\n  }\n  return info;\n}\n\n/**\n * Searches the SpecialSymbols and finds the first entry in the array that matches\n * the unclarified symbol.\n * @param {string} unclarifiedSymbol\n * @returns {string} null if not found\n */\nfunction getFirstOfCohort(unclarifiedSymbol) {\n  for (const prop in SpecialSymbols) {\n    if (SpecialSymbols[prop].includes(unclarifiedSymbol)) {\n      return SpecialSymbols[prop][0];\n    }\n  }\n  return null;\n}\n\n/**\n * Add clarifiers onto symbol.\n * @param {string} unclarifiedSymbol\n * @param {string} clarifier\n * @param {string} shadowClarifier\n */\nfunction formClarifiedSymbol(unclarifiedSymbol, clarifier, shadowClarifier) {\n  let result = unclarifiedSymbol;\n  if (clarifier) {\n    result += clarifier;\n  }\n  if (shadowClarifier) {\n    result += shadowClarifier;\n  }\n  return result;\n}\n","/**\n * @file Various utilities for handling arrays\n *\n * @module utils/arrays/arrayManip\n *\n * License {@link https://opensource.org/license/mit/|MIT}\n *\n * Copyright 2024 Steve Butler\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the “Software”), to deal in\n * the Software without restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n * Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */\n\n/**\n * @typedef Surrounds\n * @property {*} centre - value at centre\n * @property {*} tl - value to top left\n * @property {*} above - value above\n * @property {*} tr - value to top right\n * @property {*} right - value to right\n * @property {*} br - value to bottom right\n * @property {*} below - value below\n * @property {*} bl - value to bottom\n * @property {*} left - value to left\n */\n\n/**\n * Get the surround values from a 2D matrix\n * @param {Array.<Array.<*>>} matrix\n * @param {number} rowIndex\n * @param {number} columnIndex\n * @returns {Surrounds}\n */\nexport function getSurrounds(matrix, rowIndex, columnIndex) {\n  return {\n    centre: matrix[rowIndex]?.[columnIndex],\n    tl: matrix[rowIndex - 1]?.[columnIndex - 1],\n    above: matrix[rowIndex - 1]?.[columnIndex],\n    tr: matrix[rowIndex - 1]?.[columnIndex + 1],\n    right: matrix[rowIndex]?.[columnIndex + 1],\n    br: matrix[rowIndex + 1]?.[columnIndex + 1],\n    below: matrix[rowIndex + 1]?.[columnIndex],\n    bl: matrix[rowIndex + 1]?.[columnIndex - 1],\n    left: matrix[rowIndex]?.[columnIndex - 1],\n  };\n}\n\n/**\n * Randomise an array.\n * @param {Object[]} source - array to randomise. The original will be modified.\n * @returns {Object[]} The source array which will have been randomised.\n */\nexport function randomise(source) {\n  let currentIndex = source.length;\n  let randomIndex;\n\n  // While there remain elements to shuffle.\n  while (currentIndex > 0) {\n    randomIndex = Math.floor(Math.random() * currentIndex);\n    currentIndex--;\n    // swap\n    [source[currentIndex], source[randomIndex]] = [\n      source[randomIndex],\n      source[currentIndex],\n    ];\n  }\n\n  return source;\n}\n","/**\n * @file Tile map\n *\n * @module utils/tileMaps/tileMap\n *\n * License {@link https://opensource.org/license/mit/|MIT}\n *\n * Copyright 2024 Steve Butler\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the “Software”), to deal in\n * the Software without restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n * Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */\nimport LOG from '../logging.js';\nimport { Sprite } from '../sprites/sprite.js';\nimport IMAGE_MANAGER from '../sprites/imageManager.js';\nimport {\n  ImageSpriteCanvasRenderer,\n  RectSpriteCanvasRenderer,\n} from '../sprites/spriteRenderers.js';\nimport { Point, Rectangle } from '../geometry.js';\nimport { UiClickHandler } from '../ui/interactions.js';\nimport { randomise } from '../arrays/arrayManip.js';\nimport { getSurrounds } from '../arrays/arrayManip.js';\nimport SCREEN from '../game/screen.js';\nimport { RayTracer } from './pathFinder.js';\nimport TURN_MANAGER from '../game/turnManager.js';\n\n/**\n * Detail for click events.\n * @enum {number}\n */\nexport const ClickEventFilter = {\n  MOVEMENT_TILE: 0,\n  COMBAT_TILE: 1,\n};\n\n/**\n * Roles that tiles adopt.\n * @enum {number}\n */\nexport const TileRole = {\n  OBSTACLE: -1,\n  GROUND: 0,\n  ENTRANCE: 1,\n  EXIT: 2,\n  STAIRS_UP: 3,\n  STAIRS_DOWN: 4,\n};\n/**\n * @typedef {Object} TileDefinition\n * @property {TileRole} role\n * @property {import('../sprites/sprite.js').SpriteClickHandler} onClick\n * @property {import('../sprites/sprite.js').SpriteClickHandler} onContextClick\n * @property {string} image - used to create the sprite.\n */\n\n/**\n * Tile class\n */\nexport class Tile extends UiClickHandler {\n  /** @type {Sprite} */\n  sprite;\n  /** @type {boolean} */\n  obstacle;\n  /** @type {import('../game/actors.js').Actor[]} */\n  #occupants;\n  /** @type {Point} */\n  #gridPoint;\n  /** @type {Point} */\n  #worldPoint;\n  /** @type {TileRole} */\n  #role;\n\n  /** Construct tile\n   * @param {Sprite} tileSprite;\n   * @param {Object} options;\n   * @param {boolean} options.obstacle;\n   * @param {!Point} options.gridPoint;\n   * @param {!Point} options.worldPoint;\n   * @param {TileRole} options.role;\n   */\n  constructor(tileSprite, options) {\n    super();\n    this.sprite = tileSprite;\n    this.#occupants = new Map();\n    this.obstacle = options.obstacle;\n    this.#gridPoint = options.gridPoint;\n    this.#worldPoint = options.worldPoint;\n    this.#role = options.role;\n  }\n\n  /**\n   * Get the role.\n   */\n  get role() {\n    return this.#role;\n  }\n\n  /**\n   * Get the grid point.\n   * @returns {Point}\n   */\n  get gridPoint() {\n    return this.#gridPoint;\n  }\n  /**\n   * Get the world point.\n   * @returns {Point}\n   */\n  get worldPoint() {\n    return this.#worldPoint;\n  }\n\n  /** Add occupant.\n   * @param {import('../game/actors.js').Actor\n   */\n  addOccupant(occupant) {\n    this.#occupants.set(occupant, occupant);\n  }\n\n  /** Remove occupant.\n   * @param {import('../game/actors.js').Actor}\n   */\n  deleteOccupant(occupant) {\n    this.#occupants.delete(occupant);\n  }\n\n  /** get occupants.\n   * @param {import('../game/actors.js').Actor[]}\n   */\n  getOccupants() {\n    return this.#occupants;\n  }\n\n  /**\n   * Handle the click but change the point to the sprites' position\n   */\n  actionClick(pointUnused) {\n    super.actionClick(this.sprite.position);\n  }\n  /**\n   * Handle the click but change the point to the sprites' position\n   */\n  actionContextClick(pointUnused) {\n    super.actionClick(this.sprite.position);\n  }\n\n  /**\n   * Test if occupied\n   * @returns {boolean}\n   */\n  isOccupied() {\n    return this.#occupants.size > 0;\n  }\n\n  /**\n   * Test if tile can be passed by the actor\n   * @param {Object} actor\n   * @returns {boolean}\n   */\n  isPassableByActor(actor) {\n    if (this.obstacle) {\n      return false;\n    }\n    for (const occupant of this.#occupants.values()) {\n      if (occupant !== actor && !occupant.isPassableByActor(actor)) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  /**\n   * Test if tile can be occupied by the actor\n   * @param {Object} actor\n   * @returns {boolean}\n   */\n  canBeOccupiedByActor(actor) {\n    if (this.obstacle) {\n      return false;\n    }\n    for (const occupant of this.#occupants.values()) {\n      if (occupant !== actor && !occupant.canShareLocationWithActor(actor)) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  /**\n   * Test if tile can be seen through by the actor\n   * @param {Object} actor\n   * @returns {boolean}\n   */\n  isSeeThrough(actorUnused) {\n    if (\n      this.obstacle ||\n      this.#role === TileRole.ENTRANCE ||\n      this.#role === TileRole.EXIT\n    ) {\n      return false;\n    }\n    return true;\n  }\n}\n\n/**\n * Tile map\n */\nexport class TileMap {\n  /** @type {CanvasRenderingContext2D} */\n  #context;\n  /** @type {Tile[]} */\n  #tiles;\n  #tilesX;\n  #tilesY;\n  #gridSize;\n  #width;\n  #height;\n  /** @type {import('./pathFinder.js').Routes} */\n  #movementRoutes;\n  /** @type {Point{}} */\n  #movementGridPoints;\n  /** @type {Sprite} */\n  #movementTileHighlighter;\n  /** @type {Tile} */\n  #entrance;\n  /** @type {Tile} */\n  #exit;\n  /** @type {Point} */\n  #entryGridPointByDoor;\n  /** @type {Point} */\n  #exitGridPointByDoor;\n  /** @type {Tile[]} */\n  #randomGround;\n  /** @type {RayTracer} */\n  #heroRayTracer;\n  /** @type {Tile[]} */\n  #combatTileGridPoints;\n  /** @type {Sprite} */\n  #combatTileHighlighter;\n\n  /**\n   * Create tile map from 2D matrix\n   * @param {CanvasRenderingContext2D} context\n   * @param {TilePlan} plan\n   * @param {number} gridSize - in world coordinates\n   */\n  constructor(context, plan, gridSize) {\n    const matrix = plan.matrix;\n    this.#entryGridPointByDoor = plan.entryPointByDoor;\n    this.#exitGridPointByDoor = plan.exitPointByDoor;\n    this.#context = context;\n    this.#movementTileHighlighter = new Sprite({\n      renderer: new RectSpriteCanvasRenderer(context, {\n        width: gridSize,\n        height: gridSize,\n        fillStyle: null,\n        strokeStyle: 'white',\n      }),\n    });\n    this.#combatTileHighlighter = new Sprite({\n      renderer: new RectSpriteCanvasRenderer(context, {\n        width: gridSize,\n        height: gridSize,\n        fillStyle: null,\n        strokeStyle: 'red',\n      }),\n    });\n    this.#gridSize = gridSize;\n    this.#tiles = [];\n    this.#tilesY = matrix.length;\n    this.#tilesX = matrix[0].length;\n    this.#width = gridSize * this.tilesX;\n    this.#height = gridSize * this.tilesY;\n    this.#randomGround = [];\n    matrix.forEach((row, rowIndex) => {\n      const tileRow = [];\n      this.#tiles.push(tileRow);\n      row.forEach((tileDefn, columnIndex) => {\n        if (tileDefn) {\n          const sprite = new Sprite({\n            renderer: new ImageSpriteCanvasRenderer(\n              context,\n              IMAGE_MANAGER.getSpriteBitmap(0, tileDefn.image)\n            ),\n          });\n          const gridPoint = new Point(columnIndex, rowIndex);\n          const worldPoint = this.gridPointToWorldPoint(gridPoint);\n          let tile = new Tile(sprite, {\n            obstacle: tileDefn.role === TileRole.OBSTACLE,\n            gridPoint: gridPoint,\n            worldPoint: worldPoint,\n            role: tileDefn.role,\n          });\n          if (tileDefn.onClick) {\n            tile.setOnClick((target, point) =>\n              this.#filterClick(target, point, tileDefn.onClick)\n            );\n            tile.setOnContextClick(tileDefn.onContextClick);\n          }\n          this.processTileRole(tile);\n          tileRow.push(tile);\n          sprite.position.x = columnIndex * this.#gridSize + this.#gridSize / 2;\n          sprite.position.y = rowIndex * this.#gridSize + this.#gridSize / 2;\n        } else {\n          tileRow.push(null);\n        }\n      });\n    });\n    if (!this.#entrance) {\n      LOG.error('No entrance has been set. Setting to the first ground tile');\n      this.#entrance = this.#randomGround[0];\n    }\n  }\n\n  /**\n   * Get tilemap dimensions in terms of number of tiles.\n   * @returns {import('../geometry.js').Dims2D}\n   */\n  getDimsInTiles() {\n    return { width: this.#tilesX, height: this.#tilesY };\n  }\n  /**\n   * Process a tile's specific role.\n   * @param {Tile} tile\n   */\n  processTileRole(tile) {\n    switch (tile.role) {\n      case TileRole.ENTRANCE:\n        if (this.#entrance) {\n          const gp = tile.gridPoint;\n          LOG.error(`Duplicate entrance found at (${gp.x}, ${gp.y}). Ignored.`);\n        } else {\n          this.#entrance = tile;\n        }\n        break;\n      case TileRole.EXIT:\n        if (this.#exit) {\n          const gp = tile.gridPoint;\n          LOG.error(`Duplicate exit found at (${gp.x}, ${gp.y}). Ignored.`);\n        } else {\n          this.#exit = tile;\n        }\n        break;\n      case TileRole.GROUND:\n        if (!tile.gridPoint.coincident(this.#entryGridPointByDoor)) {\n          this.#randomGround.push(tile);\n        }\n        break;\n    }\n  }\n\n  /**\n   * Update method to render tiles.\n   * @param {number} deltaSeconds - elapsed time.\n   */\n  update(deltaSeconds) {\n    this.#setRayTracer();\n    const visibleGridPoints = this.getVisibleGridPointRect();\n    for (\n      let row = visibleGridPoints.y;\n      row <= visibleGridPoints.y + visibleGridPoints.height;\n      row++\n    ) {\n      for (\n        let col = visibleGridPoints.x;\n        col <= visibleGridPoints.x + visibleGridPoints.width;\n        col++\n      ) {\n        if (this.#heroRayTracer?.isGridPointInRays(new Point(col, row))) {\n          const tile = this.#tiles[row][col];\n          tile?.sprite.update(deltaSeconds);\n        }\n      }\n    }\n    this.#highlightTiles(deltaSeconds);\n  }\n\n  /**\n   * Set up the ray tracer if not already set.\n   */\n  #setRayTracer() {\n    const hero = TURN_MANAGER.getHeroActor();\n    if (hero) {\n      if (!this.#heroRayTracer) {\n        this.#heroRayTracer = new RayTracer(this, hero);\n      }\n      const heroTile = this.getTileAtWorldPoint(hero.position);\n      if (heroTile) {\n        const heroTileRole = heroTile.role;\n        if (\n          heroTileRole != TileRole.ENTRANCE &&\n          heroTileRole != TileRole.EXIT\n        ) {\n          this.#heroRayTracer.findReachedTiles();\n        }\n      } else {\n        LOG.error(`Hero at ${hero.position.toString()} but no tile found.`);\n      }\n    }\n  }\n\n  /**\n   * Get the tilemap bounds as a rectangle in gridpoints.\n   * @returns {Rectangle}\n   */\n  getMapGridPointRect() {\n    return new Rectangle(0, 0, this.#tilesX, this.#tilesY);\n  }\n\n  /**\n   * Get the visible bounds as a rectangle in gridpoints.\n   * @returns {Rectangle}\n   */\n  getVisibleGridPointRect() {\n    const visibleBounds = SCREEN.getWorldInCanvasBounds();\n    const gridPointTL = this.worldPointToGrid(\n      new Point(visibleBounds.x, visibleBounds.y)\n    );\n    const gridPointBR = this.worldPointToGrid(\n      new Point(\n        visibleBounds.x + visibleBounds.width,\n        visibleBounds.y + visibleBounds.height\n      )\n    );\n    const minCol = Math.max(0, gridPointTL.x);\n    const maxCol = Math.min(this.#tilesX - 1, gridPointBR.x);\n    const minRow = Math.max(0, gridPointTL.y);\n    const maxRow = Math.min(this.#tilesY - 1, gridPointBR.y);\n    return new Rectangle(minCol, minRow, maxCol - minCol, maxRow - minRow);\n  }\n\n  /**\n   * Get the gridsize\n   * @returns {number}\n   */\n  getGridSize() {\n    return this.#gridSize;\n  }\n\n  /** Get world dimensions.\n   * @returns {import('../geometry.js').Dims2D}\n   */\n  getDimensions() {\n    return { width: this.#width, height: this.#height };\n  }\n\n  /**\n   * Get sprite at position.\n   * @param {Point} point - in world coordinates.\n   * @returns {Tile} null if no tile.\n   */\n  getTileAtWorldPoint(point) {\n    const gridPoint = this.worldPointToGrid(point);\n    return this.getTileAtGridPoint(gridPoint);\n  }\n\n  /**\n   * Get sprite at position.\n   * @param {Point} point - in grid coordinates.\n   * @returns {Tile} null if no tile.\n   */\n  getTileAtGridPoint(gridPoint) {\n    if (!gridPoint) {\n      return null;\n    }\n    const row = gridPoint.y;\n    const col = gridPoint.x;\n    if (col >= 0 && row >= 0 && col < this.#tilesX && row < this.#tilesY) {\n      return this.#tiles[row][col];\n    }\n    return null;\n  }\n\n  /**\n   * Convert world coordinate to mad grid reference.\n   * @param {Point} point\n   * @returns {Point}\n   */\n  worldPointToGrid(point) {\n    return new Point(\n      Math.floor(point.x / this.#gridSize),\n      Math.floor(point.y / this.#gridSize)\n    );\n  }\n\n  /**\n   * Get a world point aligned to the centre of a tile\n   * @param {Point} point\n   */\n  gridAlignedWorldPoint(point) {\n    const gridPoint = this.worldPointToGrid(point);\n    return this.gridPointToWorldPoint(gridPoint);\n  }\n\n  /** Convert a point in tile coordinates to world coordinates.\n   * @param {Point}\n   * @returns {Point}\n   */\n  gridPointToWorldPoint(point) {\n    const halfGrid = 0.5 * this.#gridSize;\n    return new Point(\n      point.x * this.#gridSize + halfGrid,\n      point.y * this.#gridSize + halfGrid\n    );\n  }\n\n  /** Get the world position of the entrance. The default is the first tile if there\n   * is no door\n   * @returns {Point}\n   */\n  getWorldPositionOfTileByEntry() {\n    return this.gridPointToWorldPoint(this.#entryGridPointByDoor);\n  }\n  /** Get the grid position of the door at index. If there are no doors, then\n   * the entrance is the first ground tile\n   * @returns {Point}\n   */\n  getGridPositionOfEntrance() {\n    return this.#entrance.gridPoint;\n  }\n\n  /**\n   * Set the highlighted routes.\n   * @param {*} routes\n   */\n  setMovementRoutes(routes) {\n    this.#movementRoutes = routes;\n    if (routes) {\n      this.#movementGridPoints = new Map();\n      this.#movementRoutes.forEach((gridPoints) =>\n        gridPoints.forEach((gridPoint) => {\n          this.#movementGridPoints.set(gridPoint, gridPoint);\n        })\n      );\n    } else {\n      this.#movementGridPoints = null;\n    }\n  }\n\n  /**\n   * Set combat tiles\n   * @param {Actor[]} actors - actors where combat can take place.\n   */\n  setCombatActors(actors) {\n    this.#combatTileGridPoints = [];\n    actors?.forEach((actor) => {\n      this.#combatTileGridPoints.push(this.worldPointToGrid(actor.position));\n    });\n  }\n\n  /**\n   * Highlight routes marked by the highlighters. There are three possible highlights:\n   * movement, combat and interaction.\n   * @param {number} deltaSeconds\n   */\n  #highlightTiles(deltaSeconds) {\n    this.#highlightMovementTiles(deltaSeconds);\n    this.#highlightCombatTiles(deltaSeconds);\n  }\n\n  /**\n   * Highlight movement routes.\n   * @param {number} deltaSeconds\n   */\n  #highlightMovementTiles(deltaSeconds) {\n    this.#movementGridPoints?.forEach((gridPoint) => {\n      this.#movementTileHighlighter.position =\n        this.gridPointToWorldPoint(gridPoint);\n      this.#movementTileHighlighter.update(deltaSeconds);\n    });\n  }\n\n  /**\n   * Highlight movement routes.\n   * @param {number} deltaSeconds\n   */\n  #highlightCombatTiles(deltaSeconds) {\n    this.#combatTileGridPoints?.forEach((gp) => {\n      this.#combatTileHighlighter.position = this.gridPointToWorldPoint(gp);\n      this.#combatTileHighlighter.update(deltaSeconds);\n    });\n  }\n\n  /**\n   * Handle a tile click.\n   * To be actioned a tile must be in the highlightedRoutes\n   * @param {Sprite} target - the sprite that was clicked. This prevents the need\n   * to use 'this' which may not be correct in the context.\n   * @param {Point} point - the position in the world that was clicked\n   * @param {import('../sprites/sprite.js').SpriteClickHandler} clickHandler\n   */\n  #filterClick(target, point, clickHandler) {\n    if (this.#movementRoutes?.containsGridPoint(this.worldPointToGrid(point))) {\n      clickHandler(target, point, { filter: ClickEventFilter.MOVEMENT_TILE });\n      return;\n    }\n    const gridPoint = this.worldPointToGrid(point);\n    this.#combatTileGridPoints?.forEach((gp) => {\n      if (gp.isCoincident(gridPoint)) {\n        clickHandler(target, point, {\n          filter: ClickEventFilter.COMBAT_TILE,\n        });\n        return;\n      }\n    });\n    LOG.debug('Ignore click outside of highlighted area');\n  }\n\n  /**\n   * Get waypoints to reach destination grid point\n   * @param {Point} worldPoint - destination\n   * @returns {Point[]} null if no route currently found.\n   */\n  getWaypointsToWorldPoint(worldPoint) {\n    const destination = this.worldPointToGrid(worldPoint);\n    return this.#movementRoutes?.getWaypointsAsWorldPoints(destination);\n  }\n\n  /**\n   * Get a random unoccupied ground tile.\n   * @returns {Tile} null if no free ground tile.\n   */\n  getRandomFreeGroundTile() {\n    randomise(this.#randomGround);\n    for (const tile of this.#randomGround) {\n      if (!tile.isOccupied()) {\n        return tile;\n      }\n    }\n    return null;\n  }\n\n  /**\n   * Test if point is passable.\n   * @param {Point} gridPoint - row and col coordinates.\n   * @param {import('../game/actors.js').Actor} actor - actor trying to pass\n   * @returns {boolean}\n   */\n  isGridPointPassableByActor(gridPoint, actor) {\n    const tile = this.getTileAtGridPoint(gridPoint);\n    if (!tile) {\n      return false;\n    }\n\n    return tile.isPassableByActor(actor);\n  }\n\n  /**\n   * Test if tile can be occupied by the actor\n   * @param {Point} gridPoint - row and col coordinates.\n   * @param {import('../game/actors.js').Actor} actor - actor trying to occupy location\n   * @returns {boolean}\n   */\n  canGridPointBeOccupiedByActor(gridPoint, actor) {\n    const tile = this.getTileAtGridPoint(gridPoint);\n    if (!tile) {\n      return false;\n    }\n    return tile.canBeOccupiedByActor(actor);\n  }\n\n  /**\n   * Is the grid point visible by the hero.\n   * @param {Point} gridPoint\n   * @returns {boolean}\n   */\n  canHeroSeeGridPoint(gridPoint) {\n    return this.#heroRayTracer?.isGridPointInRays(gridPoint) ?? true;\n  }\n\n  /**\n   * Test if point can be seen through.\n   * @param {Point} gridPoint - row and col coordinates.\n   * @param {import('../game/actors.js').Actor} actor - actor trying to see\n   * @returns {boolean}\n   */\n  isSeeThrough(gridPoint, actor) {\n    const tile = this.getTileAtGridPoint(gridPoint);\n    if (!tile) {\n      return true;\n    }\n\n    return tile.isSeeThrough(actor);\n  }\n\n  /**\n   * Get the tiles surrounding a reference.\n   * @param {Point} gridPoint\n   */\n  getSurroundingTiles(gridPoint) {\n    return getSurrounds(this.#tiles, gridPoint.y, gridPoint.x);\n  }\n\n  /**\n   * Removed occupant from the list of occupants\n   * of the tile at the grid point.\n   * @param {Object} occupant\n   * @param {Point} gridPoint\n   */\n  deleteOccupancyOfGridPoint(occupant, gridPoint) {\n    this.getTileAtGridPoint(gridPoint)?.deleteOccupant(occupant);\n  }\n\n  /**\n   * Set the object's tile occupancy. It is removed from the list of occupants\n   * of the tile at the previous point and added to those of the next.\n   * @param {Object} occupant\n   * @param {Point} oldGridPoint\n   * @param {Point} newGridPoint\n   */\n  moveTileOccupancyGridPoint(occupant, oldGridPoint, newGridPoint) {\n    if (newGridPoint !== oldGridPoint) {\n      this.getTileAtGridPoint(oldGridPoint)?.deleteOccupant(occupant);\n      this.getTileAtGridPoint(newGridPoint)?.addOccupant(occupant);\n    }\n  }\n\n  /**\n   * Get all the participants around an actor. Diagonals are not included in\n   * potential participants.\n   * @param {Actor} actor\n   * @returns {Actor[]}\n   */\n  getParticipants(actor) {\n    const participants = [];\n    const surrounds = this.getSurroundingTiles(\n      this.worldPointToGrid(actor.position)\n    );\n    const tiles = [\n      surrounds.above,\n      surrounds.right,\n      surrounds.below,\n      surrounds.left,\n    ];\n    tiles.forEach((tile) => {\n      let tileOccupants = tile?.getOccupants();\n      tileOccupants?.forEach((occupant) => {\n        participants.push(occupant);\n      });\n    });\n    return participants;\n  }\n}\n","/**\n * @file Path finders within a tile map\n *\n * @module utils/tileMaps/pathFinder\n *\n * License {@link https://opensource.org/license/mit/|MIT}\n *\n * Copyright 2024 Steve Butler\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the “Software”), to deal in\n * the Software without restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n * Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */\n\nimport { Point } from '../geometry.js';\nimport * as maths from '../maths.js';\n\n/**\n * Map of located routes.\n * Note that all points are grid references NOT WORLD POINTS.\n */\nexport class Routes {\n  /** @type {Map<string, Point[]>} */\n  #routes;\n  /** @type {import('./tileMap.js').TileMap} */\n  #tileMap;\n\n  /**\n   * Create routes.\n   * @param {import('./tileMap.js').TileMap} tileMap\n   */\n  constructor(tileMap) {\n    this.#tileMap = tileMap;\n    this.#routes = new Map();\n  }\n\n  /**\n   * Set route to reach coordinates\n   * @param {Point[]} route\n   * @param {*} x\n   * @param {*} y\n   */\n  setRouteToCoords(route, x, y) {\n    this.#routes.set(this.coordsToKey(x, y), route);\n  }\n\n  /**\n   * Get route to reach coordinates\n   * @param {*} x\n   * @param {*} y\n   * @returns {Point[]} route}\n   */\n  getRouteToCoords(x, y) {\n    return this.#routes.get(this.coordsToKey(x, y));\n  }\n\n  /** Test if routes has route to coords.\n   * @param {number} x - grid position\n   * @param {number} y - grid position\n   * @returns {boolean}\n   */\n  hasRouteToCoords(x, y) {\n    return this.#routes.has(this.coordsToKey(x, y));\n  }\n  /**\n   * Create a key for the routes map from a row and column.\n   * @param {number} x\n   * @param {number} y\n   * @returns {string}\n   */\n  coordsToKey(x, y) {\n    return `${x}|${y}`;\n  }\n\n  /**\n   * Convert a map key to a grid reference.\n   * @param {string} key\n   * @returns {Point} Point giving the tile map grid reference.\n   */\n  keyToGridPoint(key) {\n    const reference = key.split('|');\n    return new Point(parseInt(reference[0]), parseInt(reference[1]));\n  }\n\n  /**\n   * Get the entries\n   * @returns {Iterator}\n   */\n  forEach(callback) {\n    this.#routes.forEach((value, key, map) => callback(value, key, map));\n  }\n\n  /**\n   * Check if any routes contains the coordinates\n   * @param {Point} point\n   * @returns {boolean}\n   */\n  containsGridPoint(point) {\n    return this.#routes.has(this.coordsToKey(point.x, point.y));\n  }\n\n  /**\n   * Get wayPoints to get to destination of x, y. The starting point is stripped\n   * off. Points are returned as grid references\n   * @param {Point} destination\n   * @returns {Point[]} array of points to reach grid reference x, y. Null if no route.\n   */\n  getWaypointsAsGridPoints(destination) {\n    const points = this.getRouteToCoords(destination.x, destination.y);\n    if (points.length > 1) {\n      return points.slice(1);\n    } else {\n      return null;\n    }\n  }\n\n  /**\n   * Get wayPoints to get to destination of x, y. The starting point is stripped\n   * off.\n   * @param {Point} destination\n   * @returns {Point[]} array of points to reach grid reference x, y\n   */\n  getWaypointsAsWorldPoints(destination) {\n    const waypoints = this.getWaypointsAsGridPoints(destination);\n    if (waypoints) {\n      return waypoints.map((gridPoint) =>\n        this.#tileMap.gridPointToWorldPoint(gridPoint)\n      );\n    } else {\n      return waypoints;\n    }\n  }\n}\n/**\n * Encapsulation of route finder for finding paths through routes.\n */\nexport class RouteFinder {\n  /** Actor trying to find routes. @type {import('./tileMap.js').Actor} */\n  actor;\n  /** @type {Route[]} */\n  #routes;\n  /** @type {import('./tileMap.js').TileMap} */\n  #tileMap;\n  /** @type {Point} */\n  #startPoint;\n\n  /** Create the route finder.\n   * @param {import('./tileMap.js').TileMap} tileMap\n   * @param {import('./tileMap.js').Actor} actor\n   */\n  constructor(tileMap, actor) {\n    this.#tileMap = tileMap;\n    this.actor = actor;\n  }\n  /**\n   * Find a route to the destination gridPoint. Note that it tries to find a route\n   * adjacent to the target grid point, not actually on the grid point. The resulting\n   * route is dumb, in that it does not try all options to maximise movement.\n   * @param {Point} startingGridPoint - starting point\n   * @param {Point} targetGridPoint - starting point\n   * @param {*} maxMove - maximum number of moves allowed.\n   * @returns {Map<string, Point[]>} null if no path available or necessary.\n   */\n  getDumbRouteNextTo(startingGridPoint, targetGridPoint, maxMove) {\n    let destination = this.#getAdjacentTarget(\n      startingGridPoint,\n      targetGridPoint\n    );\n    if (destination.coincident(startingGridPoint)) {\n      return [];\n    }\n    if (!this.#tileMap.canGridPointBeOccupiedByActor(destination, this.actor)) {\n      destination = this.#rotateGridPointAbout(destination, targetGridPoint);\n    }\n    let path = [];\n    let dX = Math.sign(destination.x - startingGridPoint.x);\n    let dY = Math.sign(destination.y - startingGridPoint.y);\n    let waypoint = Point.copy(startingGridPoint);\n    let movingX = Math.random() < 0.5;\n    let consecutiveFails = 0;\n    while (maxMove > 0) {\n      let nextPoint = Point.copy(waypoint);\n      let moved = false;\n      if (movingX && dX !== 0 && waypoint.x != destination.x) {\n        nextPoint.x += dX;\n        moved = true;\n      } else if (!movingX && dY !== 0 && waypoint.y != destination.y) {\n        nextPoint.y += dY;\n        moved = true;\n      }\n      moved =\n        moved &&\n        this.#tileMap.canGridPointBeOccupiedByActor(nextPoint, this.actor);\n\n      if (moved) {\n        consecutiveFails = 0;\n        waypoint = nextPoint;\n        maxMove--;\n      } else {\n        if (++consecutiveFails >= 2) {\n          break;\n        }\n        if (!waypoint.coincident(startingGridPoint)) {\n          path.push(this.#tileMap.gridPointToWorldPoint(waypoint));\n        }\n        startingGridPoint = waypoint;\n        movingX = !movingX; //flip axi\n      }\n    }\n    if (!waypoint.coincident(startingGridPoint)) {\n      path.push(this.#tileMap.gridPointToWorldPoint(waypoint));\n    }\n\n    return path;\n  }\n\n  /**\n   * Get all available routes as a Map of paths.\n   * @param {Point} startingGridPoint - starting point\n   * @param {*} maxMove - maximum number of moves allowed.\n   * @returns {Map<string, Point[]>}\n   */\n  getAllRoutesFrom(startingGridPoint, maxMove) {\n    this.#routes = new Routes(this.#tileMap);\n    this.#startPoint = startingGridPoint;\n    this.#findRoutes(startingGridPoint.x, startingGridPoint.y, maxMove, null);\n    return this.#routes;\n  }\n\n  /**\n   * @param {number} x - tile x index of current tile\n   * @param {number} y - tile y index of current tile\n   * @param {number} maxTiles - the maximum number of tiles that can be moved.\n   * @param {Point[]} [routePoints] - array of points that\n   * represent current path taken to get here. If null, this is the start of the\n   * route.\n   */\n  #findRoutes(x, y, movesLeft, routePoints) {\n    if (!routePoints) {\n      /* Initialise route. Don't check if it's clear as it may well be occupied\n       * by the sprite seeking a route.\n       */\n      routePoints = [new Point(x, y)];\n    } else {\n      if (x === this.#startPoint.x && y === this.#startPoint.y) {\n        return;\n      } else if (!this.#isTilePassable(x, y)) {\n        return;\n      }\n      const existingRoute = this.#routes.getRouteToCoords(x, y);\n      if (!existingRoute || routePoints.length < existingRoute.length - 1) {\n        routePoints.push(new Point(x, y)); // we have a route to this point\n        if (this.#canTileBeOccupied(x, y)) {\n          // only save route if we are actually allowed to occupy its end point.\n          this.#routes.setRouteToCoords(routePoints, x, y);\n        }\n        movesLeft--;\n      } else {\n        return;\n      }\n    }\n\n    if (movesLeft > 0) {\n      // try all 4 directions\n      this.#findRoutes(x, y - 1, movesLeft, [...routePoints]); // up\n      this.#findRoutes(x + 1, y, movesLeft, [...routePoints]); // right\n      this.#findRoutes(x, y + 1, movesLeft, [...routePoints]); // down\n      this.#findRoutes(x - 1, y, movesLeft, [...routePoints]); // left\n    }\n  }\n\n  /** Check if tile is passable.\n   * @param {number} x\n   * @param {number} y\n   * @returns {boolean}\n   *\n   */\n  #isTilePassable(x, y) {\n    return this.#tileMap.isGridPointPassableByActor(\n      new Point(x, y),\n      this.actor\n    );\n  }\n\n  /** Check if tile can be occupied.\n   * @param {number} x\n   * @param {number} y\n   * @returns {boolean}\n   *\n   */\n  #canTileBeOccupied(x, y) {\n    return this.#tileMap.canGridPointBeOccupiedByActor(\n      new Point(x, y),\n      this.actor\n    );\n  }\n\n  #getAdjacentTarget(current, target) {\n    const deltaX = target.x - current.x;\n    const deltaY = target.y - current.y;\n    let adjX = target.x;\n    let adjY = target.y;\n    if (Math.abs(deltaX) > Math.abs(deltaY)) {\n      adjX -= Math.sign(deltaX);\n    } else {\n      adjY -= Math.sign(deltaY);\n    }\n    return new Point(adjX, adjY);\n  }\n\n  /**\n   * Rotate a grid point about a target grid point. This does not rotate to\n   * diagonals.\n   */\n  #rotateGridPointAbout(gridPoint, originPoint) {\n    if (gridPoint.x === originPoint.x && gridPoint.y < originPoint.y) {\n      return new Point(gridPoint.x + 1, gridPoint.y + 1);\n    } else if (gridPoint.x > originPoint.x && gridPoint.y === originPoint.y) {\n      return new Point(gridPoint.x - 1, gridPoint.y + 1);\n    }\n    if (gridPoint.x === originPoint.x && gridPoint.y > originPoint.y) {\n      return new Point(gridPoint.x - 1, gridPoint.y - 1);\n    }\n    if (gridPoint.x < originPoint.x && gridPoint.y === originPoint.y) {\n      return new Point(gridPoint.x + 1, gridPoint.y - 1);\n    }\n    return gridPoint;\n  }\n}\n\n/**\n * Ray tracer from a starting point\n */\nexport class RayTracer {\n  /** Actor tracing rays. @type {import('./tileMap.js').Actor} */\n  #actor;\n  /** Start point of the ray. @type {Point} */\n  #rayStartPoint;\n  /** @type {import('./tileMap.js').TileMap} */\n  #tileMap;\n  /** @type {Map<string, Point} */\n  #reachedPoints;\n  /** @type {Point}   */\n  #lastStartPoint;\n  /** @type {Rectangle} */\n  #bounds;\n  /** @type {Rectangle} */\n  #lastBounds;\n\n  /** Create the ray tracer.\n   * @param {import('./tileMap.js').TileMap} tileMap\n   * @param {import('./tileMap.js').Actor} actor\n   */\n  constructor(tileMap, actor) {\n    this.#tileMap = tileMap;\n    this.#actor = actor;\n  }\n\n  /**\n   * Find all the tiles that are reached from the actor.\n   * @returns {Map<Point>} grid points of reached tiles.\n   */\n  findReachedTiles() {\n    this.#rayStartPoint = this.#tileMap.worldPointToGrid(this.#actor.position);\n    // this.#bounds = this.#tileMap.getVisibleGridPointRect();\n    this.#bounds = this.#tileMap.getMapGridPointRect();\n    if (\n      this.#lastStartPoint &&\n      this.#lastStartPoint.coincident(this.#rayStartPoint) &&\n      this.#bounds &&\n      this.#bounds.equals(this.#lastBounds)\n    ) {\n      return this.#reachedPoints;\n    }\n\n    this.#reachedPoints = new Map();\n    this.#reachedPoints.set(\n      this.#rayStartPoint.toString(),\n      this.#rayStartPoint\n    );\n    this.#getRayEnds().forEach((endPoint) => {\n      this.#traceRayToEnd(endPoint);\n    });\n    this.#lastStartPoint = this.#rayStartPoint;\n    this.#lastBounds = this.#bounds;\n    return this.#reachedPoints;\n  }\n\n  /**\n   * Test if grid point in rays.\n   * @param {Point} gridPoint\n   * @returns {boolean}\n   */\n  isGridPointInRays(gridPoint) {\n    return this.#reachedPoints\n      ? this.#reachedPoints.has(gridPoint.toString())\n      : false;\n  }\n\n  /**\n   * Get the end point of the rays.\n   * @returns {Point[]} array of the end grid points for each ray.\n   */\n  #getRayEnds() {\n    const rayEnds = [];\n    for (\n      let col = this.#bounds.x;\n      col <= this.#bounds.x + this.#bounds.width;\n      col++\n    ) {\n      rayEnds.push(new Point(col, this.#bounds.y));\n      rayEnds.push(new Point(col, this.#bounds.y + this.#bounds.height));\n    }\n\n    for (\n      let row = this.#bounds.y + 1;\n      row <= this.#bounds.y + this.#bounds.height - 1;\n      row++\n    ) {\n      rayEnds.push(new Point(this.#bounds.x, row));\n      rayEnds.push(new Point(this.#bounds.x + this.#bounds.width, row));\n    }\n    return rayEnds;\n  }\n\n  /**\n   * Trace the ray to its end. Note that calculations are done in cartesian coordinates\n   * and so Y values need to be negated during calculations.\n   * @param {Point} endPoint\n   */\n  #traceRayToEnd(endPoint) {\n    let dx;\n    let dy;\n    let steps;\n    const angle = this.#rayStartPoint.getScreenAngleTo(endPoint);\n    const compassDirection = maths.angleToEightPointCompass(angle);\n    if (\n      Math.abs(endPoint.x - this.#rayStartPoint.x) >=\n      Math.abs(endPoint.y - this.#rayStartPoint.y)\n    ) {\n      dx = Math.sign(endPoint.x - this.#rayStartPoint.x);\n      steps = Math.abs(endPoint.x - this.#rayStartPoint.x);\n      dy = steps < 1 ? 0 : (endPoint.y - this.#rayStartPoint.y) / steps;\n    } else {\n      dy = Math.sign(endPoint.y - this.#rayStartPoint.y);\n      steps = Math.abs(endPoint.y - this.#rayStartPoint.y);\n      dx = steps < 1 ? 0 : (endPoint.x - this.#rayStartPoint.x) / steps;\n    }\n    let x = this.#rayStartPoint.x;\n    let y = this.#rayStartPoint.y;\n\n    let firstPoint = true;\n    while (steps >= 0) {\n      const gridPoint = new Point(Math.round(x), Math.round(y));\n      if (firstPoint || this.#tileMap.isSeeThrough(gridPoint, this.#actor)) {\n        this.#markReachedPoint(gridPoint, compassDirection);\n      } else {\n        break; // ray ends.\n      }\n      firstPoint = false;\n      x += dx;\n      y += dy;\n      steps--;\n    }\n  }\n\n  /**\n   * Mark the point as reached. Note that surrounding obstacle tiles need to be\n   * shown as well otherwise wall will not appear.\n   * @param {Point} point\n   * @param {number} compassDir - eight point compass direction of ray\n   */\n  #markReachedPoint(point, compassDir) {\n    this.#reachedPoints.set(point.toString(), point);\n    switch (compassDir) {\n      case maths.CompassEightPoint.N:\n        this.#markReachedIfNotSeeThrough(new Point(point.x - 1, point.y - 1));\n        this.#markReachedIfNotSeeThrough(new Point(point.x, point.y - 1));\n        this.#markReachedIfNotSeeThrough(new Point(point.x + 1, point.y - 1));\n        break;\n      case maths.CompassEightPoint.NE:\n        this.#markReachedIfNotSeeThrough(new Point(point.x, point.y - 1));\n        this.#markReachedIfNotSeeThrough(new Point(point.x + 1, point.y - 1));\n        this.#markReachedIfNotSeeThrough(new Point(point.x + 1, point.y));\n        break;\n      case maths.CompassEightPoint.E:\n        this.#markReachedIfNotSeeThrough(new Point(point.x + 1, point.y - 1));\n        this.#markReachedIfNotSeeThrough(new Point(point.x + 1, point.y));\n        this.#markReachedIfNotSeeThrough(new Point(point.x + 1, point.y + 1));\n        break;\n      case maths.CompassEightPoint.SE:\n        this.#markReachedIfNotSeeThrough(new Point(point.x + 1, point.y));\n        this.#markReachedIfNotSeeThrough(new Point(point.x + 1, point.y + 1));\n        this.#markReachedIfNotSeeThrough(new Point(point.x, point.y + 1));\n        break;\n      case maths.CompassEightPoint.S:\n        this.#markReachedIfNotSeeThrough(new Point(point.x - 1, point.y + 1));\n        this.#markReachedIfNotSeeThrough(new Point(point.x, point.y + 1));\n        this.#markReachedIfNotSeeThrough(new Point(point.x + 1, point.y + 1));\n        break;\n      case maths.CompassEightPoint.SW:\n        this.#markReachedIfNotSeeThrough(new Point(point.x - 1, point.y));\n        this.#markReachedIfNotSeeThrough(new Point(point.x - 1, point.y + 1));\n        this.#markReachedIfNotSeeThrough(new Point(point.x, point.y + 1));\n        break;\n      case maths.CompassEightPoint.W:\n        this.#markReachedIfNotSeeThrough(new Point(point.x - 1, point.y - 1));\n        this.#markReachedIfNotSeeThrough(new Point(point.x - 1, point.y));\n        this.#markReachedIfNotSeeThrough(new Point(point.x - 1, point.y + 1));\n        break;\n      case maths.CompassEightPoint.NW:\n        this.#markReachedIfNotSeeThrough(new Point(point.x - 1, point.y));\n        this.#markReachedIfNotSeeThrough(new Point(point.x - 1, point.y - 1));\n        this.#markReachedIfNotSeeThrough(new Point(point.x, point.y - 1));\n        break;\n    }\n  }\n  /**\n   * Mark a tile as Reached if not see through\n   * @param {Point} point\n   */\n  #markReachedIfNotSeeThrough(point) {\n    if (!this.#tileMap.isSeeThrough(point)) {\n      this.#reachedPoints.set(point.toString(), point);\n    }\n  }\n}\n","/**\n * @file Manage the game turns. The turnManager is a state machine and implemented\n * as a singleton.\n *\n * @module utils/game/turnManager/turnManager\n *\n * License {@link https://opensource.org/license/mit/|MIT}\n *\n * Copyright 2024 Steve Butler\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the “Software”), to deal in\n * the Software without restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n * Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */\nimport { RouteFinder } from '../tileMaps/pathFinder.js';\nimport { PathFollower } from '../sprites/movers.js';\nimport { ClickEventFilter } from '../tileMaps/tileMap.js';\n\nimport WORLD from './world.js';\n\nimport UI from '../dom/ui.js';\nimport SCENE_MANAGER from './sceneManager.js';\n\nimport { addFadingText } from '../effects/transient.js';\nimport { pause } from '../timers.js';\nimport { Point, Position, Velocity } from '../geometry.js';\nimport LOG from '../logging.js';\nimport * as maths from '../maths.js';\nimport { showMainMenu } from '../../dialogs/mainMenu.js';\nimport { IconButtonControl } from '../dom/components.js';\n\n/**\n * Factor that is multiplied by the maxMovesPerTurn property of an actor to determine\n * if it will bother trying to reach the hero.\n */\nconst TOO_MANY_TURNS_TO_REACH = 2;\n/**\n * Enumeration of supported events\n * @enum {number}\n */\nconst EventId = {\n  MAIN_MENU: 0,\n  CLICKED_FREE_GROUND: 1,\n  CLICKED_ENTRANCE: 2,\n  CLICKED_EXIT: 3,\n};\n\n/**\n * Class that allows a simulated movement of an actor. The movement using\n * the route finder takes place immediately, so that the effect of the actor's\n * final position can be used to affect other actors without waiting for the normal\n * duration of the move. The actual motion can then be actioned by a subsequent call to reenact.\n *\n */\nclass ReplayableActorMover {\n  /** @type {Actor} */\n  #actor;\n  /** @type {AbstractModifier} */\n  #modifier;\n  /** @type {Position} */\n  #originalPosition;\n  /** @type {TileMap} */\n  #tileMap;\n  /** @type {RouteFinder} */\n  #routeFinder;\n\n  /**\n   *\n   * @param {Actor} actor\n   * @param {TileMap} tileMap\n   * @param {RouteFinder} routeFinder\n   */\n  constructor(actor, tileMap, routeFinder) {\n    this.#actor = actor;\n    this.#tileMap = tileMap;\n    this.#routeFinder = routeFinder;\n  }\n\n  /**\n   * Move actor to hero using the route finder. The move takes place instantly\n   * but can be replayed using the replay method.\n   */\n  moveInstantly() {\n    this.#originalPosition = Position.copy(this.#actor.position);\n    const actorGridPos = this.#tileMap.worldPointToGrid(this.#actor.position);\n    const targetGridPos = this.#actor.isWandering()\n      ? this.#getRandomGridPosition(actorGridPos, this.#actor.maxTilesPerMove)\n      : this.#tileMap.worldPointToGrid(heroActor.position);\n\n    const orthoSeparation =\n      Math.abs(targetGridPos.x - actorGridPos.x) +\n      Math.abs(targetGridPos.y - actorGridPos.y);\n    const maxSeparation = this.#actor.maxTilesPerMove * TOO_MANY_TURNS_TO_REACH;\n    if (\n      orthoSeparation <= maxSeparation &&\n      this.#tileMap.canHeroSeeGridPoint(actorGridPos)\n    ) {\n      this.#routeFinder.actor = this.#actor;\n      let waypoints = this.#routeFinder.getDumbRouteNextTo(\n        actorGridPos,\n        targetGridPos,\n        this.#actor.maxTilesPerMove\n      );\n      if (waypoints.length > 0) {\n        this.#modifier = new PathFollower(\n          { path: waypoints, speed: 100 },\n          this.#actor.sprite.modifier\n        );\n        this.#setActorsPosition(waypoints[waypoints.length - 1]);\n      }\n    }\n  }\n\n  /**\n   * Get a random target point.\n   * @param {Point} currentGrid\n   * @param {number} maxDistance - max movement in any direction\n   * @returns {Point}\n   */\n  #getRandomGridPosition(currentGrid, maxDistance) {\n    const x = maths.getRandomIntInclusive(\n      currentGrid.x - maxDistance,\n      currentGrid.x + maxDistance\n    );\n    const y = maths.getRandomIntInclusive(\n      currentGrid.y - maxDistance,\n      currentGrid.y + maxDistance\n    );\n    const dims = this.#tileMap.getDimsInTiles();\n    return new Point(\n      maths.clip(x, 0, dims.width - 1),\n      maths.clip(y, 0, dims.height - 1)\n    );\n  }\n\n  /**\n   * Set the actors position, updating the tile map occupancy as required.\n   * @param {Position} position\n   */\n  #setActorsPosition(position) {\n    const oldGridPoint = this.#tileMap.worldPointToGrid(this.#actor.position);\n    this.#actor.position = position;\n    const newGridPoint = this.#tileMap.worldPointToGrid(this.#actor.position);\n    this.#tileMap.moveTileOccupancyGridPoint(\n      this.#actor,\n      oldGridPoint,\n      newGridPoint\n    );\n  }\n  /**\n   * Restore the actor's original position.\n   */\n  #restorePosition() {\n    this.#setActorsPosition(this.#originalPosition);\n  }\n\n  /**\n   * Undertake the move defined by the modifier.\n   * @returns {Promise} fulfils to undefined.\n   */\n  replay() {\n    this.#restorePosition();\n    if (this.#modifier) {\n      return this.#modifier.applyAsTransientToSprite(this.#actor.sprite);\n    }\n    return Promise.resolve();\n  }\n}\n\n/**\n * Class used to handle multiple ReplayableActorMovers.\n */\nclass MovementReplayer {\n  /** @type {TileMap} */\n  #tileMap;\n  /** @type {RouteFinder} */\n  #routeFinder;\n  /** @type {ReplayableActorMover[]} */\n  #movers;\n  /**\n   *\n   * @param {TileMap} tileMap\n   * @param {RouteFinder} routeFinder\n   */\n  constructor(tileMap, routeFinder) {\n    this.#movers = [];\n    this.#tileMap = tileMap;\n    this.#routeFinder = routeFinder;\n  }\n\n  /**\n   * Add the actor and move immediately to hero\n   * @param {Actor} actor\n   */\n  addAndMoveActor(actor) {\n    const replayableMover = new ReplayableActorMover(\n      actor,\n      this.#tileMap,\n      this.#routeFinder\n    );\n    replayableMover.moveInstantly();\n    this.#movers.push(replayableMover);\n  }\n\n  /**\n   * Replay all movements in parallel.\n   * @returns {Promise} fulfils to undefined when all movements complete.\n   */\n  replay() {\n    const promises = [];\n    this.#movers.forEach((mover) => promises.push(mover.replay()));\n    return Promise.all(promises);\n  }\n}\n\n/**\n * Basic State class\n */\nclass State {\n  constructor() {}\n\n  /**\n   * Transition to a new state\n   * @returns {Promise} fulfills to null\n   */\n  async transitionTo(state) {\n    await this.onExit().then(() => {\n      currentState = state;\n      return state.onEntry();\n    });\n  }\n\n  /**\n   * Perform actions on entering the state.\n   * @returns {Promise} fulfills to null\n   */\n  onEntry() {\n    return Promise.resolve();\n  }\n  /**\n   * Handle event.\n   * @param {number} eventId\n   * @param  {import('../sprites/sprite.js').Sprite} sprite - the sprite initiating the event\n   * @param {Object} detail - object will depend on the eventId\n   * @returns {Promise} fulfills to null\n   */\n  onEvent(eventIdUnused) {\n    return Promise.resolve(null);\n  }\n  /**\n   * Actions when the state exits\n   * @returns {Promise} fulfills to null\n   */\n  onExit() {\n    return Promise.resolve(null);\n  }\n}\n\n/**\n * At WaitingToStart\n */\nclass WaitingToStart extends State {\n  onEntry() {\n    LOG.log('WaitingToStart state');\n  }\n  /**\n   * @override\n   * @param {number} eventId\n   * @param  {import('../sprites/sprite.js').Sprite} point - the point initiating the event\n   * @param {Object} detail - object will depend on the eventId\n   */\n  async onEvent(eventId, pointUnused, detailUnused) {\n    if (eventId === EventId.MAIN_MENU) {\n      this.transitionTo(new AtMainMenu());\n    }\n  }\n}\n\n/**\n * At main Menu\n */\nclass AtMainMenu extends State {\n  onEntry() {\n    const play = new IconButtonControl({\n      id: 'PLAY',\n      label: 'Play',\n      imageNameUp: 'hero-idle00.png',\n      imageNameDown: 'hero-idle01.png',\n      internalLabel: true,\n    });\n    return showMainMenu().then(() => this.transitionTo(new AtStart()));\n  }\n}\n/**\n * At start state\n */\nclass AtStart extends State {\n  onEntry() {\n    LOG.log('Enter AtStart');\n    return UI.showOkDialog(\n      'You are in a dark and dingy dungeon.',\n      'Conquer it!',\n      'wall'\n    )\n      .then(() => SCENE_MANAGER.switchToFirstScene())\n      .then(() => {\n        heroActor.sprite.position =\n          WORLD.getTileMap().getWorldPositionOfTileByEntry();\n        return currentState.transitionTo(new HeroTurnIdle());\n      });\n  }\n}\n\n/**\n * At Game Over\n */\nclass AtGameOver extends State {\n  async onEntry() {\n    LOG.log('Enter AtGameOver');\n    addFadingText('YOU DIED!', {\n      lifetimeSecs: 2,\n      position: heroActor.position,\n      velocity: new Velocity(0, -100, 0),\n    });\n    await pause(2)\n      .then(() => UI.showOkDialog('Game over. You died.', 'Try again'))\n      .then(() => SCENE_MANAGER.unloadCurrentScene())\n      .then(() => this.transitionTo(new AtMainMenu()));\n  }\n}\n\n/**\n * At Game Completed\n */\nclass AtGameCompleted extends State {\n  async onEntry() {\n    LOG.log('Enter AtGameCompleted');\n    await UI.showOkDialog(\"You've done it. Well done.\", 'Try again')\n      .then(() => SCENE_MANAGER.unloadCurrentScene())\n      .then(() => this.transitionTo(new AtMainMenu()));\n  }\n}\n\n/**\n * State where the hero is in the map.\n */\nclass HeroTurnIdle extends State {\n  constructor() {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  async onEntry() {\n    await super.onEntry();\n    LOG.log('Enter HeroTurnIdle');\n    await prepareHeroTurn();\n  }\n  /**\n   * @override\n   * @param {number} eventId\n   * @param  {import('../sprites/sprite.js').Sprite} point - the point initiating the event\n   * @param {Object} detail - object will depend on the eventId\n   */\n  async onEvent(eventId, point, detail) {\n    switch (eventId) {\n      case EventId.CLICKED_FREE_GROUND:\n        {\n          if (detail?.filter === ClickEventFilter.COMBAT_TILE) {\n            LOG.error('Unexpected click on combat tile ignored.');\n          } else {\n            await moveHeroToPoint(point);\n          }\n          this.transitionTo(new ComputerTurnIdle());\n        }\n\n        break;\n      case EventId.CLICKED_ENTRANCE:\n        alert('Wow! Leaving so early. That bit of code is not ready yet.');\n        break;\n      case EventId.CLICKED_EXIT:\n        LOG.log('Escaping');\n        await moveHeroToPoint(point);\n        if (SCENE_MANAGER.areThereMoreScenes()) {\n          await startNextScene(this);\n        } else {\n          this.transitionTo(new AtGameCompleted());\n        }\n        break;\n    }\n    return Promise.resolve(null);\n  }\n}\n\n/**\n * State where the hero is in the map.\n */\nclass HeroTurnFighting extends State {\n  constructor() {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  async onEntry() {\n    await super.onEntry();\n    LOG.log('Enter HeroTurnFighting');\n    await prepareHeroTurn();\n  }\n  /**\n   * @override\n   * @param {number} eventId\n   * @param  {import('../sprites/sprite.js').Sprite} point - the point initiating the event\n   * @param {Object} detail - object will depend on the eventId\n   */\n  async onEvent(eventId, point, detail) {\n    switch (eventId) {\n      case EventId.CLICKED_FREE_GROUND:\n        {\n          if (detail?.filter === ClickEventFilter.COMBAT_TILE) {\n            await this.#fight(point);\n          } else {\n            await this.#tryToRun(point);\n          }\n          if (WORLD.getTileMap().getParticipants(heroActor).length === 0) {\n            this.transitionTo(new ComputerTurnIdle());\n          } else {\n            this.transitionTo(new ComputerTurnFighting());\n          }\n        }\n\n        break;\n      case EventId.CLICKED_ENTRANCE:\n        alert('Wow! Leaving so early. That bit of code is not ready yet.');\n        break;\n      case EventId.CLICKED_EXIT:\n        LOG.log('Escaping');\n        await moveHeroToPoint(point);\n        if (SCENE_MANAGER.areThereMoreScenes()) {\n          await startNextScene(this);\n        } else {\n          this.transitionTo(new AtGameCompleted());\n        }\n        break;\n    }\n    return Promise.resolve(null);\n  }\n\n  /**\n   * Fight point\n   * @param {Point} point - position in world.\n   * @returns {Promise}\n   */\n  #fight(point) {\n    /** @type {import('../tileMaps/tileMap.js').TileMap} */\n    const tileMap = WORLD.getTileMap();\n    const tile = tileMap.getTileAtWorldPoint(point);\n    const targets = tile.getOccupants();\n    const promises = [];\n    for (const target of targets.values()) {\n      if (target.interaction) {\n        promises.push(target.interaction.react(heroActor));\n      }\n    }\n    return Promise.all(promises);\n  }\n\n  /**\n   * Try to run\n   * @param {Point} point - position in world.\n   * @returns {Promise}\n   */\n  #tryToRun(point) {\n    const opponents = WORLD.getTileMap().getParticipants(heroActor);\n    for (const opponent of opponents) {\n      if (opponent.alive && !opponent.interaction.allowEscape(heroActor)) {\n        return Promise.resolve(false);\n      }\n    }\n    return moveHeroToPoint(point);\n  }\n}\n\nclass ComputerTurnIdle extends State {\n  constructor() {\n    super();\n  }\n  async onEntry() {\n    await super.onEntry();\n    LOG.log('Enter ComputerTurnIdle');\n    const tileMap = WORLD.getTileMap();\n\n    const routeFinder = new RouteFinder(tileMap);\n    const replayer = new MovementReplayer(tileMap, routeFinder);\n    const heroGridPoint = tileMap.worldPointToGrid(heroActor.position);\n    for (const actor of WORLD.getActors().values()) {\n      if (actor !== heroActor && actor.alive) {\n        if (actor.isWandering()) {\n          const actorGridPoint = tileMap.worldPointToGrid(actor.position);\n          if (!actorGridPoint.isOtherClose(heroGridPoint, 1.5)) {\n            replayer.addAndMoveActor(actor);\n          }\n        } else {\n          replayer.addAndMoveActor(actor);\n        }\n      }\n    }\n    await replayer.replay();\n    if (tileMap.getParticipants(heroActor).length === 0) {\n      this.transitionTo(new HeroTurnIdle());\n    } else {\n      this.transitionTo(new HeroTurnFighting());\n    }\n\n    return Promise.resolve(null);\n  }\n}\n\nclass ComputerTurnFighting extends State {\n  constructor() {\n    super();\n  }\n  async onEntry() {\n    await super.onEntry();\n    LOG.log('Enter ComputerTurnFighting');\n    const tileMap = WORLD.getTileMap();\n\n    const routeFinder = new RouteFinder(tileMap);\n    const replayer = new MovementReplayer(tileMap, routeFinder);\n    const participants = tileMap.getParticipants(heroActor);\n    for (const actor of WORLD.getActors().values()) {\n      if (actor !== heroActor && actor.alive) {\n        if (participants.includes(actor)) {\n          await actor.interaction.enact(heroActor);\n        } else {\n          replayer.addAndMoveActor(actor);\n        }\n      }\n    }\n    await replayer.replay();\n    if (heroActor.traits.get('HP') === 0) {\n      this.transitionTo(new AtGameOver());\n    } else if (participants.length === 0) {\n      this.transitionTo(new HeroTurnIdle());\n    } else {\n      this.transitionTo(new HeroTurnFighting());\n    }\n\n    return Promise.resolve(null);\n  }\n}\n\n/**\n * Prepare hero turn\n * @returns {Promise}\n */\nfunction prepareHeroTurn() {\n  const tileMap = WORLD.getTileMap();\n  const routes = new RouteFinder(tileMap, heroActor).getAllRoutesFrom(\n    tileMap.worldPointToGrid(heroActor.sprite.position),\n    heroActor.maxTilesPerMove\n  );\n  tileMap.setMovementRoutes(routes);\n  tileMap.setCombatActors(tileMap.getParticipants(heroActor));\n  return Promise.resolve(null);\n}\n\n/**\n * Move to point\n * @param {Point} point\n * @returns {Promise}\n */\nfunction moveHeroToPoint(point) {\n  const tileMap = WORLD.getTileMap();\n  const waypoints = tileMap.getWaypointsToWorldPoint(point);\n  tileMap.setMovementRoutes(null);\n  tileMap.setCombatActors(null);\n  if (waypoints) {\n    const modifier = new PathFollower(\n      { path: waypoints, speed: 100 },\n      heroActor.sprite.modifier\n    );\n    return modifier.applyAsTransientToSprite(heroActor.sprite);\n  } else {\n    return Promise.resolve();\n  }\n}\n\n/**\n * Start next scene.\n * @param {State} currentState\n * @returns {Promise} fulfils to undefined.\n */\nfunction startNextScene(currentState) {\n  return SCENE_MANAGER.switchToNextScene().then(() => {\n    heroActor.sprite.position =\n      WORLD.getTileMap().getWorldPositionOfTileByEntry();\n    return currentState.transitionTo(new HeroTurnIdle());\n  });\n}\n\n/**\n * Trigger an event. This will then be passed to the current State to handle.\n * @param {number} eventId\n * @param  {import('../sprites/sprite.js').Sprite} sprite - the sprite initiating the event\n * @param {Object} detail - object will depend on the eventId\n */\nfunction triggerEvent(eventId, sprite, detail) {\n  if (ignoreEvents) {\n    LOG.debug(`Ignoring event ${eventId} as still processing earlier event.`);\n    return;\n  }\n  ignoreEvents = true;\n  currentState.onEvent(eventId, sprite, detail).then(() => {\n    ignoreEvents = false;\n  });\n}\n\n/**\n * Set the current hero sprite.\n * @returns {import('./actors.js').Actor}\n */\nfunction getHeroActor() {\n  return heroActor;\n}\n\n/**\n * Start\n * @param {import('./actors.js').Actor} actor - the hero actor\n */\nfunction setHero(actor) {\n  heroActor = actor;\n}\n\n/**\n * @type {import('./actors.js').Actor}\n */\nlet heroActor;\n\n/**\n * @type {State}\n */\nlet currentState = new WaitingToStart();\n\n/**\n * Flag to determine whether events are accepted.\n */\nlet ignoreEvents = false;\n\n/**\n * Single instance of the turn manager.\n */\nconst TURN_MANAGER = {\n  EventId: EventId,\n  getHeroActor: getHeroActor,\n  setHero: setHero,\n  triggerEvent: triggerEvent,\n};\n\nexport default TURN_MANAGER;\n","/**\n * @file Scene manager\n *\n * @module utils/game/sceneManager\n *\n * License {@link https://opensource.org/license/mit/|MIT}\n *\n * Copyright 2024 Steve Butler (henspace.com).\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the “Software”), to deal in\n * the Software without restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n * Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */\n\nimport { parseSceneDefinition } from '../../scriptReaders/sceneDefinitionParser.js';\nimport HUD from './hud.js';\nimport { addFullscreenButtonToHud } from './fullscreen.js';\nimport { NavigationButtons, NavigationLocation } from './hudNavSet.js';\nimport WORLD from './world.js';\nimport { CameraDolly, CameraTracking } from './camera.js';\nimport LOG from '../logging.js';\n\n/** @type {import('../sprites/sprite.js').Sprite}  */\nlet cameraDolly;\n\nlet sceneDefinitions;\n\nlet currentIndex;\n\nlet currentScene;\n\n/** @type {import('./actors.js').Actor} */\nlet hero;\n\nlet navigationButtons;\n\n/**\n * Set camera dolly\n * @param {import('../sprites/sprite.js').Sprite} sprite\n * @param {number} speed - See {@link module:utils/game/camera.createCameraDolly}\n * @param {number} proportionSeparated - See {@link module:utils/game/camera.createCameraDolly}\n */\nfunction setCameraToTrack(sprite, speed, proportionSeparated) {\n  cameraDolly = new CameraDolly(sprite, speed, proportionSeparated);\n}\n\n/**\n * Create the HUD\n */\nfunction createHud() {\n  navigationButtons = new NavigationButtons(\n    cameraDolly,\n    48,\n    NavigationLocation.BR\n  );\n  addFullscreenButtonToHud();\n\n  HUD.setVisible(true);\n}\n\n/**\n * Clear the HUD.\n */\nfunction clearHud() {\n  navigationButtons = null;\n  HUD.clear();\n  HUD.setVisible(false);\n}\n/** Set the current scene, unloading any existing scene\n * @param {import('./scene.js').Scene} scene\n * @returns {Promise} fulfils to undefined.\n * Rejects if scene is undefined or null.\n */\nfunction setScene(scene) {\n  if (!scene) {\n    LOG.error(\n      'Attempt made to switch to the next scene when there are no more.'\n    );\n    return Promise.reject();\n  }\n  return unloadScene(currentScene).then(() => loadScene(scene));\n}\n\n/**\n * Load scene\n * @param {import('./scene.js').Scene} scene\n * @returns {Promise} fulfills to null\n */\nfunction loadScene(scene) {\n  return scene\n    .load()\n    .then(() => scene.initialise())\n    .then(() => {\n      createHud();\n      currentScene = scene;\n    });\n}\n\n/**\n * Unload scene\n * @param {import('./scene.js').Scene} scene\n * @returns {Promise} fulfills to null\n */\nfunction unloadScene(scene) {\n  if (scene) {\n    return scene.unload().then(() => {\n      WORLD.clearAll();\n      currentScene = null;\n      clearHud();\n      return Promise.resolve();\n    });\n  } else {\n    return Promise.resolve(null);\n  }\n}\n\n/**\n * Unload current scene\n * @returns {Promise} fulfills to null\n */\nfunction unloadCurrentScene() {\n  return unloadScene(currentScene);\n}\n/**\n * Configure the scenes from the script.\n * @param {import('../../scriptReaders/index.js').SceneDefinition} sceneDefns\n */\nfunction setSceneDefinitions(sceneDefns) {\n  sceneDefinitions = sceneDefns;\n  currentIndex = -1;\n}\n\n/**\n * @returns {import('./scene.js').Scene} scene constructed from requested scene definition.\n * null if there are no more scenes.\n */\nfunction getNextScene() {\n  currentIndex++;\n  return currentIndex < sceneDefinitions.length\n    ? parseSceneDefinition(sceneDefinitions[currentIndex])\n    : null;\n}\n\n/**\n * Test to see if there are more scenes.\n * @returns {boolean}\n */\nfunction areThereMoreScenes() {\n  return currentIndex < sceneDefinitions.length - 1;\n}\n\n/**\n * Reset the index and return the first scene.\n * @returns {import('./scene.js').Scene} scene constructed from requested scene definition.\n * null if there are no more scenes.\n */\nfunction getFirstScene() {\n  currentIndex = -1;\n  return getNextScene();\n}\n\n/**\n * Switch to the first scene.\n * @returns {Promise} fulfils to undefined on success.\n * Rejects if no scenes.\n */\nfunction switchToFirstScene() {\n  return setScene(getFirstScene());\n}\n\n/**\n * Switch to the next scene.\n * @returns {Promise} fulfils to undefined on success.\n * Rejects if there are no more.\n */\nfunction switchToNextScene() {\n  return setScene(getNextScene());\n}\n\n/**\n * UPdate the scene\n * @param {number} deltaSeconds\n */\nfunction update(deltaSeconds) {\n  currentScene?.update(deltaSeconds);\n  cameraDolly?.update(deltaSeconds);\n}\n\n/**\n * Pan the camera.\n * @param {number} dx\n * @param {number} dy\n */\nfunction panCameraBy(dx, dy) {\n  cameraDolly.panBy(dx, dy);\n  cameraDolly.setTrackingMethod(CameraTracking.OFF);\n  navigationButtons.setTrackingState(false);\n}\n\n/**\n * SCENE_MANAGER Singleton.\n */\nconst SCENE_MANAGER = {\n  areThereMoreScenes: areThereMoreScenes,\n  setCameraToTrack: setCameraToTrack,\n  panCameraBy: panCameraBy,\n  setSceneDefinitions: setSceneDefinitions,\n  switchToFirstScene: switchToFirstScene,\n  switchToNextScene: switchToNextScene,\n  unloadCurrentScene: unloadCurrentScene,\n  update: update,\n};\n\nexport default SCENE_MANAGER;\n","/**\n * @file Fullscreen button\n *\n * @module utils/game/fullscreen\n *\n * License {@link https://opensource.org/license/mit/|MIT}\n *\n * Copyright 2024 Steve Butler (henspace.com).\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the “Software”), to deal in\n * the Software without restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n * Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */\nimport { AnimatedImage } from '../sprites/animation.js';\nimport GameConstants from './gameConstants.js';\nimport HUD from './hud.js';\nimport { LoopMethod } from '../arrays/indexer.js';\nimport LOG from '../logging.js';\n\n/** @type {Actor} */\nlet fullscreenButton;\nlet fullscreenButtonImage;\n\n/**\n * Request full screen mode.\n * @param {Element} element - what should go full screen.\n * @param {Object} options - see {@link https://developer.mozilla.org/en-US/docs/Web/API/Element/requestFullscreen}\n * @returns {Promise}\n */\nfunction requestFullscreen(element, options) {\n  if (element.requestFullscreen) {\n    return element.requestFullscreen(options);\n  }\n  return Promise.reject(\n    new Error('Fullscreen requests not supported by browser')\n  );\n}\n\n/**\n * Add a full screen button to the HUD\n */\nexport function addFullscreenButtonToHud() {\n  addEventListener('fullscreenchange', () => {\n    if (!document.fullscreenElement) {\n      LOG.debug('Exiting fullscreen mode.');\n      fullscreenButtonImage.setCurrentIndex(0);\n    } else {\n      LOG.debug('Entering fullscreen mode');\n      fullscreenButtonImage.setCurrentIndex(1);\n    }\n  });\n\n  fullscreenButtonImage = new AnimatedImage(\n    0,\n    {\n      prefix: 'hud-fullscreen',\n      startIndex: 0,\n      padding: 2,\n      suffix: '.png',\n    },\n    { framePeriodMs: 1, loopMethod: LoopMethod.STOP }\n  );\n  fullscreenButton = HUD.addButton(\n    fullscreenButtonImage,\n    () => {\n      requestFullscreen(document.body, { navigationUI: 'hide' });\n    },\n    () => {\n      document.exitFullscreen();\n    }\n  );\n  fullscreenButton.position.x = GameConstants.TILE_SIZE;\n  fullscreenButton.position.y = -GameConstants.TILE_SIZE;\n}\n","/**\n * @file Timers\n *\n * @module utils/timers\n *\n * License {@link https://opensource.org/license/mit/|MIT}\n *\n * Copyright 2024 Steve Butler (henspace.com).\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the “Software”), to deal in\n * the Software without restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n * Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */\n\n/**\n *\n * @param {number} secs\n * @returns {Promise} fulfils to null\n */\nexport function pause(secs) {\n  return new Promise((resolve) => {\n    setTimeout(() => resolve(), secs * 1000);\n  });\n}\n","/**\n * @file Main menu\n *\n * @module menus/mainMenu\n *\n * License {@link https://opensource.org/license/mit/|MIT}\n *\n * Copyright 2024 Steve Butler (henspace.com).\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the “Software”), to deal in\n * the Software without restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n * Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */\n\nimport UI from '../utils/dom/ui.js';\nimport { IconButtonControl } from '../utils/dom/components.js';\nimport { showSettingsDialog } from './settingsDialog.js';\n\n/**\n * Display the main menu. All actions are controlled by the main menu except play\n * which results in the menu resolving.\n * @returns {Promise} fulfils to undefined if play selected.\n */\nexport function showMainMenu() {\n  const play = new IconButtonControl({\n    id: 'PLAY',\n    label: 'Play',\n    imageNameUp: 'ui-play00.png',\n    imageNameDown: 'ui-play01.png',\n    internalLabel: true,\n  });\n  const settings = new IconButtonControl({\n    id: 'SETTINGS',\n    label: 'Settings',\n    imageNameUp: 'ui-settings00.png',\n    imageNameDown: 'ui-settings01.png',\n    internalLabel: true,\n    action: () => showSettingsDialog(),\n  });\n  return UI.showControlsDialog(\n    'Welcome to the Scripted Dungeon',\n    [settings, play],\n    'door'\n  );\n}\n","/**\n * @file Settings dialog\n *\n * @module dialogs/settingsDialog\n *\n * License {@link https://opensource.org/license/mit/|MIT}\n *\n * Copyright 2024 Steve Butler (henspace.com).\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the “Software”), to deal in\n * the Software without restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n * Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */\n\nimport { createControl, ControlType } from '../utils/dom/components.js';\nimport UI from '../utils/dom/ui.js';\n\n/** Settings */\nconst SETTINGS = [\n  {\n    key: 'BLOOD_ON',\n    label: 'Blood on',\n    defValue: true,\n    controlType: ControlType.CHECKBOX,\n    persistent: true,\n    action: null,\n  },\n  {\n    key: 'UNUSED',\n    label: 'Not used yet',\n    defValue: false,\n    controlType: ControlType.CHECKBOX,\n    persistent: true,\n    action: null,\n  },\n];\n\n/**\n * Display the settings dialog. This retrieves the current settings from local\n * storage and allows modifications. Changes are saved immediately.\n */\nexport function showSettingsDialog() {\n  const controls = [];\n  SETTINGS.forEach((setting) => {\n    controls.push(createControl(setting));\n  });\n  return UI.showControlsDialog('Settings', controls, 'door');\n}\n","/**\n * @file Conversion of map plan keys to images and tile definitions.\n *\n * @module scriptReaders/symbolMapping\n *\n * License {@link https://opensource.org/license/mit/|MIT}\n *\n * Copyright 2024 Steve Butler (henspace.com).\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the “Software”), to deal in\n * the Software without restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n * Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */\nimport { TileRole } from '../utils/tileMaps/tileMap.js';\nimport TURN_MANAGER from '../utils/game/turnManager.js';\n\n/**\n * @typedef {import('./tileMap.js').TileDefinition} TileDefinition\n */\n\n/**\n * @param {string} imageName\n * @returns {TileDefinition}\n */\nfunction createGroundDefn(imageName) {\n  return {\n    role: TileRole.GROUND,\n    onClick: (target, point, detail) =>\n      TURN_MANAGER.triggerEvent(\n        TURN_MANAGER.EventId.CLICKED_FREE_GROUND,\n        point,\n        detail\n      ),\n    image: imageName,\n  };\n}\n\n/**\n * @param {string} imageName\n * @returns {TileDefinition}\n */\nfunction createEntranceDefn(imageName) {\n  return {\n    role: TileRole.ENTRANCE,\n    onClick: (target, point, detail) =>\n      TURN_MANAGER.triggerEvent(\n        TURN_MANAGER.EventId.CLICKED_ENTRANCE,\n        point,\n        detail\n      ),\n    image: imageName,\n  };\n}\n\n/**\n * @param {string} imageName\n * @returns {TileDefinition}\n */\nfunction createExitDefn(imageName) {\n  return {\n    role: TileRole.EXIT,\n    onClick: (target, point, detail) =>\n      TURN_MANAGER.triggerEvent(\n        TURN_MANAGER.EventId.CLICKED_EXIT,\n        point,\n        detail\n      ),\n    image: imageName,\n  };\n}\n\nexport const TILE_MAP_KEYS = new Map([\n  ['x', { role: TileRole.OBSTACLE, image: 'block.png' }],\n  // wall parts\n  ['#-TL', { role: TileRole.OBSTACLE, image: 'wall-TL.png' }],\n  ['#-TLI', { role: TileRole.OBSTACLE, image: 'wall-TLI.png' }],\n  ['#-T', { role: TileRole.OBSTACLE, image: 'wall-T.png' }],\n  ['#-TR', { role: TileRole.OBSTACLE, image: 'wall-TR.png' }],\n  ['#-TRI', { role: TileRole.OBSTACLE, image: 'wall-TRI.png' }],\n  ['#-R', { role: TileRole.OBSTACLE, image: 'wall-R.png' }],\n  ['#-BR', { role: TileRole.OBSTACLE, image: 'wall-BR.png' }],\n  ['#-BRI', { role: TileRole.OBSTACLE, image: 'wall-BRI.png' }],\n  ['#-B', { role: TileRole.OBSTACLE, image: 'wall-B.png' }],\n  ['#-BL', { role: TileRole.OBSTACLE, image: 'wall-BL.png' }],\n  ['#-BLI', { role: TileRole.OBSTACLE, image: 'wall-BLI.png' }],\n  ['#-L', { role: TileRole.OBSTACLE, image: 'wall-L.png' }],\n  ['#-XI', { role: TileRole.OBSTACLE, image: 'wall-XI.png' }],\n  ['#-VI', { role: TileRole.OBSTACLE, image: 'wall-VI.png' }],\n  ['#-HI', { role: TileRole.OBSTACLE, image: 'wall-HI.png' }],\n  ['#-TTEE', { role: TileRole.OBSTACLE, image: 'wall-TTEE.png' }],\n  ['#-RTEE', { role: TileRole.OBSTACLE, image: 'wall-RTEE.png' }],\n  ['#-BTEE', { role: TileRole.OBSTACLE, image: 'wall-BTEE.png' }],\n  ['#-LTEE', { role: TileRole.OBSTACLE, image: 'wall-LTEE.png' }],\n  ['#', { role: TileRole.OBSTACLE, image: 'block.png' }],\n  // doors\n  ['=-T', createExitDefn('door-T.png')],\n  ['=-R', createExitDefn('door-R.png')],\n  ['=-B', createExitDefn('door-B.png')],\n  ['=-L', createExitDefn('door-L.png')],\n  ['--T', createEntranceDefn('door-T.png')],\n  ['--R', createEntranceDefn('door-R.png')],\n  ['--B', createEntranceDefn('door-B.png')],\n  ['--L', createEntranceDefn('door-L.png')],\n  ['=', { role: TileRole.OBSTACLE, image: 'block.png' }],\n  ['-', { role: TileRole.OBSTACLE, image: 'block.png' }],\n  // ground\n  ['.', createGroundDefn('floor.png')],\n  ['.-SBW', createGroundDefn('floor-SBW.png')],\n  ['.-SBE', createGroundDefn('floor-SBE.png')],\n\n  [',-SBE', createGroundDefn('floor2-SBE.png')],\n  [',-SBW', createGroundDefn('floor2-SBW.png')],\n  [',', createGroundDefn('floor2.png')],\n]);\n","/**\n * @file Encapsulation of a Scene. A scene equates normally to a level in a\n * dungeon.\n *\n * @module utils/game/scene\n *\n * License {@link https://opensource.org/license/mit/|MIT}\n *\n * Copyright 2024 Steve Butler\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the “Software”), to deal in\n * the Software without restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n * Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */\n\nimport WORLD from './world.js';\nimport HUD from './hud.js';\nimport SCREEN from './screen.js';\n\n/**\n * The base scene\n */\nexport class AbstractScene {\n  /** @type {number} */\n  #globalOpacity;\n  /** @type {number} */\n  #deltaOpacityPerSec;\n\n  /** @type {number} */\n  #fadeInSecs;\n  /** @type {number} */\n  #fadeOutSecs;\n\n  /** Fade out promise resolution @type {function}  */\n  #fadeOutResolve;\n\n  /** @type {import('./actors.js').Actor} */\n  heroActor;\n\n  /**\n   * Create the scene.\n   * @param {number} [fadeInSecs = 2]\n   * @param {number} [fadeOutSecs = 2]\n   */\n  constructor(fadeInSecs = 2, fadeOutSecs = 2) {\n    if (fadeInSecs > 0) {\n      this.#globalOpacity = 0;\n      this.#deltaOpacityPerSec = 1 / fadeInSecs;\n    } else {\n      this.#deltaOpacityPerSec = 1;\n    }\n    this.#fadeInSecs = fadeInSecs;\n    this.#fadeOutSecs = fadeOutSecs;\n  }\n\n  /**\n   * Get the global opacity.\n   * @returns {number}\n   */\n  getOpacity() {\n    return this.#globalOpacity;\n  }\n  /**\n   * Called at start. Game waits for preload before calling initialise.\n   * @function Scene#load\n   * @returns {Promise} fulfills to null\n   */\n  load() {\n    return this.doLoad();\n  }\n\n  /**\n   * Called after load. Game waits for initialise before starting the loop.\n   * @function Scene#initialise\n   * @returns {Promise} fulfills to null\n   */\n  initialise() {\n    return this.doInitialise();\n  }\n\n  /**\n   * Called in animation phase\n   * @function Scene#update\n   * @param {number} deltaSeconds\n   */\n  update(deltaSeconds) {\n    SCREEN.clearCanvas();\n    SCREEN.setOpacity(this.#globalOpacity);\n    WORLD.update(deltaSeconds);\n    this.doUpdate(deltaSeconds);\n    HUD.update(deltaSeconds);\n    SCREEN.setOpacity(1);\n    if (this.#deltaOpacityPerSec !== 0) {\n      this.#globalOpacity += deltaSeconds * this.#deltaOpacityPerSec;\n      if (this.#globalOpacity > 1) {\n        this.#deltaOpacityPerSec = 0;\n        this.#globalOpacity = 1;\n      } else if (this.#globalOpacity < 0) {\n        this.#deltaOpacityPerSec = 0;\n        this.#globalOpacity = 0;\n      }\n    }\n    if (this.#fadeOutResolve && this.#globalOpacity === 0) {\n      this.#fadeOutResolve();\n      this.#fadeOutResolve = null;\n    }\n  }\n\n  /**\n   * Called when scene swapped out\n   * @function Scene#unload\n   * @returns {Promise} fulfills to null\n   */\n  unload() {\n    return this.#fadeOut().then(() => this.doUnload());\n  }\n\n  /**\n   * Fade out the scene\n   * @returns {Promise} fulfils to undefined when fade complete.\n   */\n  #fadeOut() {\n    if (this.#fadeOutSecs > 0) {\n      this.#deltaOpacityPerSec = -1 / this.#fadeOutSecs;\n      return new Promise((resolve) => {\n        this.#fadeOutResolve = resolve;\n      });\n    } else {\n      return Promise.resolve();\n    }\n  }\n\n  /**\n   * Called at start. Game waits for preload before calling initialise.\n   * This should be overridden.\n   * @returns {Promise} fulfills to null\n   */\n  doLoad() {\n    return Promise.resolve();\n  }\n\n  /**\n   * Called after load. Game waits for initialise before starting the loop.\n   * This should be overridden\n   * @returns {Promise} fulfills to null\n   */\n  doInitialise() {\n    return Promise.resolve();\n  }\n\n  /**\n   * Called in animation phase\n   * This should be overridden\n   * @param {number} deltaSeconds\n   */\n  doUpdate(deltaSecondsUnused) {\n    return Promise.resolve();\n  }\n\n  /**\n   * Called when scene swapped out\n   * This should be overridden\n   * @returns {Promise} fulfills to null\n   */\n  doUnload() {\n    return Promise.resolve();\n  }\n}\n","/**\n * @file Dungeon and dragons properties\n *\n * @module dnd/traits\n *\n * License {@link https://opensource.org/license/mit/|MIT}\n *\n * Copyright 2024 Steve Butler (henspace.com).\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the “Software”), to deal in\n * the Software without restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n * Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */\n\n/**\n * This is basically a Map but with the key difference that\n * only keys set during the configuration are allowed. If no keys are provided,\n * the traits are regarded as freeform and any keys are allowed.\n */\nexport class ActorTraits {\n  /** Characteristics @type {Map<string, *>} */\n  #traits;\n  /** @type {boolean} */\n  #freeform;\n\n  /**\n   * Initialise the traits.\n   * @param {Map<string, *>} initialValues\n   */\n  constructor(initialValues) {\n    if (initialValues) {\n      this.#traits = new Map(initialValues);\n      this.#freeform = false;\n    } else {\n      this.#traits = new Map();\n      this.#freeform = true;\n    }\n  }\n\n  /**\n   * @param {string} key\n   * @param {*} value\n   * @throws {Error} thrown if key invalid.\n   */\n  set(key, value) {\n    if (this.#freeform || this.#traits.has(key)) {\n      this.#traits.set(key, value);\n    } else {\n      throw new Error(`Attempt to set invalid key '${key}'`);\n    }\n  }\n\n  /**\n   * Get the trait value.\n   * @param {string} key\n   * @returns {*}\n   */\n  get(key) {\n    return this.#traits.get(key);\n  }\n\n  /**\n   * Populate the traits from a string definition. The definition comprises a\n   * comma separated list of characteristics with each characteristic comprising\n   * a keyword followed by a space or equals sign and then its value.\n   * @param {string} definition\n   * @returns {ActorTraits} returns this to allow chaining.\n   * @throws {Error} if definition invalid.\n   */\n  setFromString(definition) {\n    definition.split(',').forEach((item) => {\n      const match = item.match(/^\\s*(\\w+)\\s*[=: ]\\s*(.+?)\\s*$/);\n      if (match) {\n        this.#setAutoMaxValue(match[1], match[2]);\n      } else {\n        throw new Error(`Invalid property definition'${item}'`);\n      }\n    });\n    return this;\n  }\n\n  /**\n   * Set the trait for key to value. If value is a fraction, then the value for\n   * the key is set to the numerator and a new key key_MAX is created, set to the\n   * denominator.\n   * @param {string} key\n   * @param {string} value\n   */\n  #setAutoMaxValue(key, value) {\n    const minMaxMatch = value.match(/(\\d+) *[/] *(\\d+) */);\n    if (minMaxMatch) {\n      this.#traits.set(key, minMaxMatch[1]);\n      this.#traits.set(`${key}_MAX`, minMaxMatch[2]);\n    } else {\n      this.#traits.set(key, value);\n    }\n  }\n\n  /**\n   * Clone traits.\n   * @return {ActorTraits}\n   */\n  clone() {\n    const actorTraits = new ActorTraits(this.#traits);\n    actorTraits.#freeform = this.#freeform;\n    return actorTraits;\n  }\n}\n\n/**\n * DnD character traits\n */\nexport class CharacterTraits extends ActorTraits {\n  /**\n   *\n   * @param {Map<string, *>} initialTraits\n   */\n  constructor(initialTraits) {\n    super(\n      initialTraits ??\n        new Map([\n          ['NAME', 'mystery'],\n          ['MOVEMENT', 'wander'],\n          ['HP', 10],\n          ['HP_MAX', 10],\n          ['STR', 10],\n          ['STR_MAX', 10],\n        ])\n    );\n  }\n}\n","/**\n * @file Random room generator\n *\n * @module utils/tileMaps/roomGenerator\n *\n * License {@link https://opensource.org/license/mit/|MIT}\n *\n * Copyright 2024 Steve Butler (henspace.com).\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the “Software”), to deal in\n * the Software without restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n * Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */\nimport LOG from '../logging.js';\nimport * as maths from '../maths.js';\nimport * as arrayManip from '../arrays/arrayManip.js';\nimport { SpecialSymbols } from './tilePlan.js';\n\n/**\n * Class used to create rooms\n */\nexport class RoomCreator {\n  #maxCols;\n  #maxRows;\n  #maxRoomCols;\n  #maxRoomRows;\n  #wallChr;\n  #floorChr;\n  #entranceChr;\n  #exitChr;\n  #landChr;\n  #dungeon;\n  /**\n   *\n   * @param {Object} options\n   * @param {number} options.minCols\n   * @param {number} options.minRows\n   * @param {number} options.maxCols\n   * @param {number} options.maxRows\n   * @param {number} options.maxRoomWidth\n   * @param {number} options.maxRoomheight\n   */\n  constructor(options) {\n    this.#maxCols = maths.getRandomIntInclusive(\n      options.minCols,\n      options.maxCols\n    );\n    this.#maxRows = maths.getRandomIntInclusive(\n      options.minRows,\n      options.maxRows\n    );\n    this.#maxRoomCols = options.maxRoomCols;\n    this.#maxRoomRows = options.maxRoomRows;\n    this.#wallChr = SpecialSymbols.WALL[0];\n    this.#floorChr = SpecialSymbols.GROUND[0];\n    this.#landChr = SpecialSymbols.VOID[0];\n    this.#entranceChr = SpecialSymbols.DOOR_IN[0];\n    this.#exitChr = SpecialSymbols.DOOR_OUT[0];\n  }\n\n  /**\n   * Generate a room.\n   * @returns {String[]}\n   */\n  generate() {\n    const minRoomCols = 4;\n    const minRoomRows = 4;\n    this.#dungeon = [];\n    let lastLeftLandCols = 0;\n    let lastRoomCols = this.#maxCols;\n    while (this.#dungeon.length < this.#maxRows - minRoomRows) {\n      const maxLeftLand = lastLeftLandCols + lastRoomCols - minRoomCols - 2;\n      const leftLandCols =\n        maxLeftLand > 0 ? maths.getRandomInt(0, maxLeftLand) : 0;\n      const reqdMinRoomWidth = Math.max(\n        lastLeftLandCols - leftLandCols + minRoomCols,\n        minRoomCols\n      );\n      let reqdMaxRoomWidth = Math.min(\n        this.#maxRoomCols,\n        this.#maxCols - leftLandCols\n      );\n\n      const roomCols =\n        reqdMaxRoomWidth > reqdMinRoomWidth\n          ? maths.getRandomInt(reqdMinRoomWidth, reqdMaxRoomWidth)\n          : reqdMinRoomWidth;\n      const rightLandCols = this.#maxCols - leftLandCols - roomCols;\n      const maxHeight = Math.min(\n        this.#maxRoomRows,\n        this.#maxRows - this.#dungeon.length\n      );\n      const roomRows = maths.getRandomInt(minRoomRows, maxHeight);\n      this.#createRoom(leftLandCols, roomCols, rightLandCols, roomRows);\n      lastLeftLandCols = leftLandCols;\n      lastRoomCols = roomCols;\n    }\n    this.#removeInternalWalls();\n    this.#locateDoors();\n    return this.getMatrixAsStrings();\n  }\n\n  /**\n   * Convert matrix to a plan design.\n   * @returns {string[]}\n   */\n  getMatrixAsStrings() {\n    return this.#dungeon.map((columns) => columns.join(''));\n  }\n\n  /**\n   *\n   * @param {number} leftLandCols\n   * @param {number} roomCols\n   * @param {number} rightLandCols\n   * @param {number} numberOfRows\n   */\n  #createRoom(leftLandCols, roomCols, rightLandCols, numberOfRows) {\n    LOG.log(\n      `Create room ${leftLandCols} ${roomCols} ${rightLandCols} ${numberOfRows}`\n    );\n    let columns = '';\n    columns += this.#landChr.repeat(leftLandCols);\n    columns += this.#wallChr.repeat(roomCols);\n    columns += this.#landChr.repeat(rightLandCols);\n    this.#dungeon.push(columns.split(''));\n    for (let internalRow = 0; internalRow < numberOfRows - 2; internalRow++) {\n      columns = '';\n      columns += this.#landChr.repeat(leftLandCols);\n      columns += this.#wallChr;\n      columns += this.#floorChr.repeat(roomCols - 2);\n      columns += this.#wallChr;\n      columns += this.#landChr.repeat(rightLandCols);\n      this.#dungeon.push(columns.split(''));\n    }\n    columns = '';\n    columns += this.#landChr.repeat(leftLandCols);\n    columns += this.#wallChr.repeat(roomCols);\n    columns += this.#landChr.repeat(rightLandCols);\n    this.#dungeon.push(columns.split(''));\n  }\n\n  /** Go through the dungeon removing internal walls. */\n  #removeInternalWalls() {\n    for (let row = 1; row < this.#dungeon.length - 1; row++) {\n      for (let col = 1; col < this.#dungeon[0].length - 2; col++) {\n        if (\n          this.#dungeon[row][col] === this.#wallChr &&\n          this.#dungeon[row + 1][col] === this.#wallChr &&\n          this.#dungeon[row - 1][col] === this.#floorChr &&\n          this.#dungeon[row + 2][col] === this.#floorChr\n        ) {\n          this.#dungeon[row][col] = this.#floorChr;\n          this.#dungeon[row + 1][col] = this.#floorChr;\n        }\n      }\n    }\n  }\n\n  /**\n   * Is this a vertical wall where a door could go.\n   * @param {import('../arrays/arrayManip.js').Surrounds} surrounds\n   * @returns {boolean}\n   */\n  #isVerticalWall(surrounds) {\n    return (\n      surrounds.above === this.#wallChr &&\n      surrounds.centre === this.#wallChr &&\n      surrounds.below === this.#wallChr\n    );\n  }\n  /**\n   * Is this a Horizontal wall where a door could go.\n   * @param {import('../arrays/arrayManip.js').Surrounds} surrounds\n   * @returns {boolean}\n   */\n  #isHorizontalWall(surrounds) {\n    return (\n      surrounds.left === this.#wallChr &&\n      surrounds.centre === this.#wallChr &&\n      surrounds.right === this.#wallChr\n    );\n  }\n\n  /**\n   * Position the doors.\n   */\n  #locateDoors() {\n    const possibleLocations = [];\n    this.#dungeon.forEach((rowValue, rowIndex) =>\n      rowValue.forEach((colValue, colIndex) => {\n        const surrounds = arrayManip.getSurrounds(\n          this.#dungeon,\n          rowIndex,\n          colIndex\n        );\n        if (\n          this.#isHorizontalWall(surrounds) ||\n          this.#isVerticalWall(surrounds)\n        ) {\n          possibleLocations.push({ row: rowIndex, col: colIndex });\n        }\n      })\n    );\n    const randomLocations = arrayManip.randomise(possibleLocations);\n    let location = randomLocations[0];\n    this.#dungeon[location.row][location.col] = this.#entranceChr;\n    location = randomLocations[1];\n    this.#dungeon[location.row][location.col] = this.#exitChr;\n  }\n}\n","/**\n * @file Functions to allow touch and mouse handling.\n *\n * @module utils/dom/pointerActions\n *\n * License {@link https://opensource.org/license/mit/|MIT}\n *\n * Copyright 2024 Steve Butler\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the “Software”), to deal in\n * the Software without restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n * Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */\nimport LOG from '../logging.js';\nimport { Point } from '../geometry.js';\n\n/**\n * Custom event names\n */\nexport const CUSTOM_POINTER_DOWN_EVENT_NAME = 'custom-pointer-down-event';\nexport const CUSTOM_POINTER_UP_EVENT_NAME = 'custom-pointer-up-event';\nexport const CUSTOM_POINTER_CANCEL_EVENT_NAME = 'custom-pointer-cancel-event';\nexport const CUSTOM_CLICK_EVENT_NAME = 'custom-click-event';\nexport const CUSTOM_POINTER_DRAG_EVENT_NAME = 'custom-pointer-drag-event';\nexport const CUSTOM_POINTER_DRAG_END_EVENT_NAME =\n  'custom-pointer-drag-end-event';\n\n/** Minimum movement that constitutes a drag. */\nconst MIN_DRAG_MOVEMENT = 10;\n\n/** @enum {number} */\nconst EventSource = {\n  MOUSE: 0,\n  TOUCH: 1,\n};\n\n/**\n * @typedef {Object} CustomEventDetail\n * @property {number} x\n * @property {number} y\n * @property {number} dx\n * @property {number} dy\n */\n\n/**\n * @typedef {Object} DragData\n * @param {ELement} element\n * @property {boolean} actionStarted\n * @property {boolean} dragging\n * @property {number} lastX\n * @property {number} lastY\n * @property {number} startX\n * @property {number} startY\n * @property {number} x\n * @property {number} y\n * @property {Point} lastTouchStartPoint\n * @property {boolean} suppressClickEvent\n */\n\n/**\n * Dispatch an event. Detail is dispatched in the event detail.\n * @param {Element} element\n * @param {string} eventName\n * @param {Object} detail\n */\nfunction dispatchEvent(element, eventName, detail) {\n  const event = new CustomEvent(eventName, {\n    detail: detail,\n  });\n  element.dispatchEvent(event);\n}\n\n/**\n * Gets offsetX and offsetY equivalent to a MouseEvent\n * @param {TouchEvent} event\n * @returns {Object}\n */\nfunction getOffsetFromTouch(event) {\n  const rect = event.target.getBoundingClientRect();\n  return {\n    x: event.touches[0].pageX - rect.left,\n    y: event.touches[0].pageY - rect.top,\n  };\n}\n\n/**\n * Process the start of the action.\n * @param {number} eventSource\n * @param {number} x - x coordinate relative to target\n * @param {number} y - y coordinate relative to target\n * @param {DragData} data\n */\nfunction processStartAction(eventSource, x, y, data) {\n  data.actionStarted = true;\n  data.dragging = false;\n  data.distance = 0;\n  data.lastX = x;\n  data.lastY = y;\n  data.startX = x;\n  data.startY = y;\n  dispatchEvent(data.element, CUSTOM_POINTER_DOWN_EVENT_NAME, {\n    x: x,\n    y: y,\n  });\n}\n\n/**\n * Process the start of the action.\n * @param {number} eventSource\n * @param {number} x - x coordinate relative to target\n * @param {number} y - y coordinate relative to target\n * @param {DragData} data\n */\nfunction processEndAction(eventSource, x, y, data) {\n  const eventName = data.dragging\n    ? CUSTOM_POINTER_DRAG_END_EVENT_NAME\n    : CUSTOM_POINTER_UP_EVENT_NAME;\n\n  data.actionStarted = false;\n  data.dragging = false;\n  data.distance = 0;\n  data.lastX = x;\n  data.lastY = y;\n  data.startX = x;\n  data.startY = y;\n  dispatchEvent(data.element, eventName, {\n    x: x,\n    y: y,\n  });\n}\n\n/**\n * Process the start of the action.\n * @param {number} eventSource\n * @param {number} x - x coordinate relative to target\n * @param {number} y - y coordinate relative to target\n * @param {DragData} data\n */\nfunction processCancelAction(eventSource, x, y, data) {\n  const eventName = CUSTOM_POINTER_CANCEL_EVENT_NAME;\n\n  data.actionStarted = false;\n  data.dragging = false;\n  data.distance = 0;\n  data.lastX = x;\n  data.lastY = y;\n  data.startX = x;\n  data.startY = y;\n  dispatchEvent(data.element, eventName, {\n    x: x,\n    y: y,\n  });\n}\n\n/**\n * Process the start of the action.\n * @param {number} eventSource\n * @param {number} x - x coordinate relative to target\n * @param {number} y - y coordinate relative to target\n * @param {DragData} data\n * @return {CustomEvent} null if no event should be dispatched.\n */\nfunction processMoveAction(eventSource, x, y, data) {\n  const eventName = CUSTOM_POINTER_DRAG_EVENT_NAME;\n  let dx = x - data.lastX;\n  let dy = y - data.lastY;\n  data.lastX = x;\n  data.lastY = y;\n  if (data.dragging) {\n    const event = new CustomEvent(eventName, {\n      detail: {\n        x: x,\n        y: y,\n        dx: dx,\n        dy: dy,\n      },\n    });\n    data.element.dispatchEvent(event);\n  } else if (\n    Math.abs(x - data.startX) > MIN_DRAG_MOVEMENT ||\n    Math.abs(y - data.startY) > MIN_DRAG_MOVEMENT\n  ) {\n    data.dragging = true;\n    data.suppressClickEvent = true;\n  }\n}\n\n/**\n * Add custom listeners which allows an object to listen to touch and mouse events\n * in a consistent manner.\n * the element or clicks. Custom events are sent to differentiate.\n * @param {*} element\n */\nexport function addPointerListeners(element) {\n  let dragData = {\n    element: element,\n    actionStarted: false,\n    dragging: false,\n    x: 0,\n    y: 0,\n    lastTouchStartPoint: null,\n    suppressClickEvent: false,\n  };\n\n  element.addEventListener(\n    'mousedown',\n    (event) => {\n      LOG.debug('mousedown');\n      return processStartAction(\n        EventSource.MOUSE,\n        event.offsetX,\n        event.offsetY,\n        dragData\n      );\n    },\n    { passive: true }\n  );\n\n  element.addEventListener(\n    'mouseup',\n    (event) => {\n      LOG.debug('mouseup');\n      return processEndAction(\n        EventSource.MOUSE,\n        event.offsetX,\n        event.offsetY,\n        dragData\n      );\n    },\n    { passive: true }\n  );\n  element.addEventListener(\n    'mousemove',\n    (event) => {\n      LOG.debug('mousemove');\n      if (event.buttons & 1) {\n        processMoveAction(\n          EventSource.MOUSE,\n          event.offsetX,\n          event.offsetY,\n          dragData\n        );\n      }\n    },\n    { passive: true }\n  );\n  element.addEventListener(\n    'touchstart',\n    (event) => {\n      LOG.debug('touchstart');\n      if (event.changedTouches.length === 1) {\n        const offset = getOffsetFromTouch(event);\n        dragData.lastTouchStartPoint = new Point(offset.x, offset.y);\n        processStartAction(EventSource.TOUCH, offset.x, offset.y, dragData);\n      }\n    },\n    { passive: true }\n  );\n  element.addEventListener(\n    'touchend',\n    (event) => {\n      LOG.debug('touchend');\n      if (event.changedTouches.length === 1) {\n        processEndAction(\n          EventSource.TOUCH,\n          dragData.lastTouchStartPoint?.x,\n          dragData.lastTouchStartPoint?.y,\n          dragData\n        );\n      }\n      dragData.lastTouchStartPoint = null;\n      dragData.suppressClickEvent = false;\n    },\n    { passive: true }\n  );\n  element.addEventListener(\n    'touchmove',\n    (event) => {\n      LOG.debug('touchmove');\n      if (event.changedTouches.length === 1) {\n        const offset = getOffsetFromTouch(event);\n        processMoveAction(EventSource.TOUCH, offset.x, offset.y, dragData);\n        dragData.suppressClickEvent = true;\n      }\n    },\n    { passive: true }\n  );\n  element.addEventListener(\n    'touchcancel',\n    (event) => {\n      LOG.debug('touchcancel');\n      processCancelAction(\n        EventSource.TOUCH,\n        dragData.lastTouchStartPoint?.x,\n        dragData.lastTouchStartPoint?.y,\n        dragData\n      );\n      dragData.lastTouchStartPoint = null;\n    },\n\n    { passive: true }\n  );\n  element.addEventListener('click', (event) => {\n    LOG.debug('click');\n    if (!dragData.suppressClickEvent) {\n      dispatchEvent(element, CUSTOM_CLICK_EVENT_NAME, {\n        x: event.offsetX,\n        y: event.offsetY,\n      });\n    }\n    dragData.suppressClickEvent = false;\n  });\n}\n","{\"frames\": [\r\n\r\n{\r\n\t\"filename\": \"blank.png\",\r\n\t\"frame\": {\"x\":333,\"y\":246,\"w\":3,\"h\":3},\r\n\t\"rotated\": false,\r\n\t\"trimmed\": true,\r\n\t\"spriteSourceSize\": {\"x\":0,\"y\":0,\"w\":3,\"h\":3},\r\n\t\"sourceSize\": {\"w\":48,\"h\":48}\r\n},\r\n{\r\n\t\"filename\": \"block.png\",\r\n\t\"frame\": {\"x\":97,\"y\":1,\"w\":48,\"h\":48},\r\n\t\"rotated\": false,\r\n\t\"trimmed\": false,\r\n\t\"spriteSourceSize\": {\"x\":0,\"y\":0,\"w\":48,\"h\":48},\r\n\t\"sourceSize\": {\"w\":48,\"h\":48}\r\n},\r\n{\r\n\t\"filename\": \"blood-splat.png\",\r\n\t\"frame\": {\"x\":1,\"y\":1,\"w\":94,\"h\":92},\r\n\t\"rotated\": false,\r\n\t\"trimmed\": true,\r\n\t\"spriteSourceSize\": {\"x\":1,\"y\":4,\"w\":94,\"h\":92},\r\n\t\"sourceSize\": {\"w\":96,\"h\":96}\r\n},\r\n{\r\n\t\"filename\": \"door-B.png\",\r\n\t\"frame\": {\"x\":1,\"y\":190,\"w\":48,\"h\":48},\r\n\t\"rotated\": false,\r\n\t\"trimmed\": false,\r\n\t\"spriteSourceSize\": {\"x\":0,\"y\":0,\"w\":48,\"h\":48},\r\n\t\"sourceSize\": {\"w\":48,\"h\":48}\r\n},\r\n{\r\n\t\"filename\": \"door-L.png\",\r\n\t\"frame\": {\"x\":702,\"y\":197,\"w\":33,\"h\":48},\r\n\t\"rotated\": false,\r\n\t\"trimmed\": true,\r\n\t\"spriteSourceSize\": {\"x\":15,\"y\":0,\"w\":33,\"h\":48},\r\n\t\"sourceSize\": {\"w\":48,\"h\":48}\r\n},\r\n{\r\n\t\"filename\": \"door-R.png\",\r\n\t\"frame\": {\"x\":721,\"y\":101,\"w\":33,\"h\":48},\r\n\t\"rotated\": false,\r\n\t\"trimmed\": true,\r\n\t\"spriteSourceSize\": {\"x\":0,\"y\":0,\"w\":33,\"h\":48},\r\n\t\"sourceSize\": {\"w\":48,\"h\":48}\r\n},\r\n{\r\n\t\"filename\": \"door-T.png\",\r\n\t\"frame\": {\"x\":147,\"y\":1,\"w\":48,\"h\":48},\r\n\t\"rotated\": false,\r\n\t\"trimmed\": false,\r\n\t\"spriteSourceSize\": {\"x\":0,\"y\":0,\"w\":48,\"h\":48},\r\n\t\"sourceSize\": {\"w\":48,\"h\":48}\r\n},\r\n{\r\n\t\"filename\": \"floor-SBE.png\",\r\n\t\"frame\": {\"x\":197,\"y\":1,\"w\":48,\"h\":48},\r\n\t\"rotated\": false,\r\n\t\"trimmed\": false,\r\n\t\"spriteSourceSize\": {\"x\":0,\"y\":0,\"w\":48,\"h\":48},\r\n\t\"sourceSize\": {\"w\":48,\"h\":48}\r\n},\r\n{\r\n\t\"filename\": \"floor-SBW.png\",\r\n\t\"frame\": {\"x\":247,\"y\":1,\"w\":48,\"h\":48},\r\n\t\"rotated\": false,\r\n\t\"trimmed\": false,\r\n\t\"spriteSourceSize\": {\"x\":0,\"y\":0,\"w\":48,\"h\":48},\r\n\t\"sourceSize\": {\"w\":48,\"h\":48}\r\n},\r\n{\r\n\t\"filename\": \"floor.png\",\r\n\t\"frame\": {\"x\":297,\"y\":1,\"w\":48,\"h\":48},\r\n\t\"rotated\": false,\r\n\t\"trimmed\": false,\r\n\t\"spriteSourceSize\": {\"x\":0,\"y\":0,\"w\":48,\"h\":48},\r\n\t\"sourceSize\": {\"w\":48,\"h\":48}\r\n},\r\n{\r\n\t\"filename\": \"floor2-SBE.png\",\r\n\t\"frame\": {\"x\":347,\"y\":1,\"w\":48,\"h\":48},\r\n\t\"rotated\": false,\r\n\t\"trimmed\": false,\r\n\t\"spriteSourceSize\": {\"x\":0,\"y\":0,\"w\":48,\"h\":48},\r\n\t\"sourceSize\": {\"w\":48,\"h\":48}\r\n},\r\n{\r\n\t\"filename\": \"floor2-SBW.png\",\r\n\t\"frame\": {\"x\":397,\"y\":1,\"w\":48,\"h\":48},\r\n\t\"rotated\": false,\r\n\t\"trimmed\": false,\r\n\t\"spriteSourceSize\": {\"x\":0,\"y\":0,\"w\":48,\"h\":48},\r\n\t\"sourceSize\": {\"w\":48,\"h\":48}\r\n},\r\n{\r\n\t\"filename\": \"floor2.png\",\r\n\t\"frame\": {\"x\":447,\"y\":1,\"w\":48,\"h\":48},\r\n\t\"rotated\": false,\r\n\t\"trimmed\": false,\r\n\t\"spriteSourceSize\": {\"x\":0,\"y\":0,\"w\":48,\"h\":48},\r\n\t\"sourceSize\": {\"w\":48,\"h\":48}\r\n},\r\n{\r\n\t\"filename\": \"hero-dead00.png\",\r\n\t\"frame\": {\"x\":771,\"y\":150,\"w\":48,\"h\":33},\r\n\t\"rotated\": false,\r\n\t\"trimmed\": true,\r\n\t\"spriteSourceSize\": {\"x\":0,\"y\":7,\"w\":48,\"h\":33},\r\n\t\"sourceSize\": {\"w\":48,\"h\":48}\r\n},\r\n{\r\n\t\"filename\": \"hero-idle00.png\",\r\n\t\"frame\": {\"x\":784,\"y\":51,\"w\":46,\"h\":47},\r\n\t\"rotated\": false,\r\n\t\"trimmed\": true,\r\n\t\"spriteSourceSize\": {\"x\":1,\"y\":1,\"w\":46,\"h\":47},\r\n\t\"sourceSize\": {\"w\":48,\"h\":48}\r\n},\r\n{\r\n\t\"filename\": \"hero-idle01.png\",\r\n\t\"frame\": {\"x\":497,\"y\":1,\"w\":48,\"h\":48},\r\n\t\"rotated\": false,\r\n\t\"trimmed\": false,\r\n\t\"spriteSourceSize\": {\"x\":0,\"y\":0,\"w\":48,\"h\":48},\r\n\t\"sourceSize\": {\"w\":48,\"h\":48}\r\n},\r\n{\r\n\t\"filename\": \"hero-idle02.png\",\r\n\t\"frame\": {\"x\":832,\"y\":51,\"w\":46,\"h\":47},\r\n\t\"rotated\": false,\r\n\t\"trimmed\": true,\r\n\t\"spriteSourceSize\": {\"x\":1,\"y\":1,\"w\":46,\"h\":47},\r\n\t\"sourceSize\": {\"w\":48,\"h\":48}\r\n},\r\n{\r\n\t\"filename\": \"hero-idle03.png\",\r\n\t\"frame\": {\"x\":197,\"y\":51,\"w\":47,\"h\":48},\r\n\t\"rotated\": false,\r\n\t\"trimmed\": true,\r\n\t\"spriteSourceSize\": {\"x\":1,\"y\":0,\"w\":47,\"h\":48},\r\n\t\"sourceSize\": {\"w\":48,\"h\":48}\r\n},\r\n{\r\n\t\"filename\": \"hero-walk-e00.png\",\r\n\t\"frame\": {\"x\":862,\"y\":150,\"w\":34,\"h\":47},\r\n\t\"rotated\": false,\r\n\t\"trimmed\": true,\r\n\t\"spriteSourceSize\": {\"x\":10,\"y\":1,\"w\":34,\"h\":47},\r\n\t\"sourceSize\": {\"w\":48,\"h\":48}\r\n},\r\n{\r\n\t\"filename\": \"hero-walk-e01.png\",\r\n\t\"frame\": {\"x\":889,\"y\":199,\"w\":35,\"h\":47},\r\n\t\"rotated\": false,\r\n\t\"trimmed\": true,\r\n\t\"spriteSourceSize\": {\"x\":10,\"y\":1,\"w\":35,\"h\":47},\r\n\t\"sourceSize\": {\"w\":48,\"h\":48}\r\n},\r\n{\r\n\t\"filename\": \"hero-walk-e02.png\",\r\n\t\"frame\": {\"x\":1060,\"y\":101,\"w\":39,\"h\":48},\r\n\t\"rotated\": false,\r\n\t\"trimmed\": true,\r\n\t\"spriteSourceSize\": {\"x\":9,\"y\":0,\"w\":39,\"h\":48},\r\n\t\"sourceSize\": {\"w\":48,\"h\":48}\r\n},\r\n{\r\n\t\"filename\": \"hero-walk-e03.png\",\r\n\t\"frame\": {\"x\":1176,\"y\":151,\"w\":30,\"h\":48},\r\n\t\"rotated\": false,\r\n\t\"trimmed\": true,\r\n\t\"spriteSourceSize\": {\"x\":10,\"y\":0,\"w\":30,\"h\":48},\r\n\t\"sourceSize\": {\"w\":48,\"h\":48}\r\n},\r\n{\r\n\t\"filename\": \"hero-walk-n00.png\",\r\n\t\"frame\": {\"x\":880,\"y\":51,\"w\":46,\"h\":47},\r\n\t\"rotated\": false,\r\n\t\"trimmed\": true,\r\n\t\"spriteSourceSize\": {\"x\":2,\"y\":1,\"w\":46,\"h\":47},\r\n\t\"sourceSize\": {\"w\":48,\"h\":48}\r\n},\r\n{\r\n\t\"filename\": \"hero-walk-n01.png\",\r\n\t\"frame\": {\"x\":246,\"y\":51,\"w\":47,\"h\":48},\r\n\t\"rotated\": false,\r\n\t\"trimmed\": true,\r\n\t\"spriteSourceSize\": {\"x\":1,\"y\":0,\"w\":47,\"h\":48},\r\n\t\"sourceSize\": {\"w\":48,\"h\":48}\r\n},\r\n{\r\n\t\"filename\": \"hero-walk-n02.png\",\r\n\t\"frame\": {\"x\":880,\"y\":51,\"w\":46,\"h\":47},\r\n\t\"rotated\": false,\r\n\t\"trimmed\": true,\r\n\t\"spriteSourceSize\": {\"x\":2,\"y\":1,\"w\":46,\"h\":47},\r\n\t\"sourceSize\": {\"w\":48,\"h\":48}\r\n},\r\n{\r\n\t\"filename\": \"hero-walk-n03.png\",\r\n\t\"frame\": {\"x\":1167,\"y\":51,\"w\":40,\"h\":48},\r\n\t\"rotated\": false,\r\n\t\"trimmed\": true,\r\n\t\"spriteSourceSize\": {\"x\":8,\"y\":0,\"w\":40,\"h\":48},\r\n\t\"sourceSize\": {\"w\":48,\"h\":48}\r\n},\r\n{\r\n\t\"filename\": \"hero-walk-s00.png\",\r\n\t\"frame\": {\"x\":928,\"y\":51,\"w\":46,\"h\":47},\r\n\t\"rotated\": false,\r\n\t\"trimmed\": true,\r\n\t\"spriteSourceSize\": {\"x\":1,\"y\":1,\"w\":46,\"h\":47},\r\n\t\"sourceSize\": {\"w\":48,\"h\":48}\r\n},\r\n{\r\n\t\"filename\": \"hero-walk-s01.png\",\r\n\t\"frame\": {\"x\":547,\"y\":1,\"w\":48,\"h\":48},\r\n\t\"rotated\": false,\r\n\t\"trimmed\": false,\r\n\t\"spriteSourceSize\": {\"x\":0,\"y\":0,\"w\":48,\"h\":48},\r\n\t\"sourceSize\": {\"w\":48,\"h\":48}\r\n},\r\n{\r\n\t\"filename\": \"hero-walk-s02.png\",\r\n\t\"frame\": {\"x\":928,\"y\":51,\"w\":46,\"h\":47},\r\n\t\"rotated\": false,\r\n\t\"trimmed\": true,\r\n\t\"spriteSourceSize\": {\"x\":1,\"y\":1,\"w\":46,\"h\":47},\r\n\t\"sourceSize\": {\"w\":48,\"h\":48}\r\n},\r\n{\r\n\t\"filename\": \"hero-walk-s03.png\",\r\n\t\"frame\": {\"x\":1120,\"y\":51,\"w\":45,\"h\":48},\r\n\t\"rotated\": false,\r\n\t\"trimmed\": true,\r\n\t\"spriteSourceSize\": {\"x\":3,\"y\":0,\"w\":45,\"h\":48},\r\n\t\"sourceSize\": {\"w\":48,\"h\":48}\r\n},\r\n{\r\n\t\"filename\": \"hero-walk-w00.png\",\r\n\t\"frame\": {\"x\":1101,\"y\":101,\"w\":39,\"h\":48},\r\n\t\"rotated\": false,\r\n\t\"trimmed\": true,\r\n\t\"spriteSourceSize\": {\"x\":1,\"y\":0,\"w\":39,\"h\":48},\r\n\t\"sourceSize\": {\"w\":48,\"h\":48}\r\n},\r\n{\r\n\t\"filename\": \"hero-walk-w01.png\",\r\n\t\"frame\": {\"x\":51,\"y\":190,\"w\":43,\"h\":48},\r\n\t\"rotated\": false,\r\n\t\"trimmed\": true,\r\n\t\"spriteSourceSize\": {\"x\":0,\"y\":0,\"w\":43,\"h\":48},\r\n\t\"sourceSize\": {\"w\":48,\"h\":48}\r\n},\r\n{\r\n\t\"filename\": \"hero-walk-w02.png\",\r\n\t\"frame\": {\"x\":821,\"y\":150,\"w\":39,\"h\":47},\r\n\t\"rotated\": false,\r\n\t\"trimmed\": true,\r\n\t\"spriteSourceSize\": {\"x\":1,\"y\":1,\"w\":39,\"h\":47},\r\n\t\"sourceSize\": {\"w\":48,\"h\":48}\r\n},\r\n{\r\n\t\"filename\": \"hero-walk-w03.png\",\r\n\t\"frame\": {\"x\":1137,\"y\":151,\"w\":37,\"h\":48},\r\n\t\"rotated\": false,\r\n\t\"trimmed\": true,\r\n\t\"spriteSourceSize\": {\"x\":3,\"y\":0,\"w\":37,\"h\":48},\r\n\t\"sourceSize\": {\"w\":48,\"h\":48}\r\n},\r\n{\r\n\t\"filename\": \"hero.png\",\r\n\t\"frame\": {\"x\":976,\"y\":51,\"w\":46,\"h\":47},\r\n\t\"rotated\": false,\r\n\t\"trimmed\": true,\r\n\t\"spriteSourceSize\": {\"x\":1,\"y\":1,\"w\":46,\"h\":47},\r\n\t\"sourceSize\": {\"w\":48,\"h\":48}\r\n},\r\n{\r\n\t\"filename\": \"hud-arrow-down00.png\",\r\n\t\"frame\": {\"x\":145,\"y\":101,\"w\":46,\"h\":46},\r\n\t\"rotated\": false,\r\n\t\"trimmed\": true,\r\n\t\"spriteSourceSize\": {\"x\":1,\"y\":1,\"w\":46,\"h\":46},\r\n\t\"sourceSize\": {\"w\":48,\"h\":48}\r\n},\r\n{\r\n\t\"filename\": \"hud-arrow-down01.png\",\r\n\t\"frame\": {\"x\":193,\"y\":101,\"w\":46,\"h\":46},\r\n\t\"rotated\": false,\r\n\t\"trimmed\": true,\r\n\t\"spriteSourceSize\": {\"x\":1,\"y\":1,\"w\":46,\"h\":46},\r\n\t\"sourceSize\": {\"w\":48,\"h\":48}\r\n},\r\n{\r\n\t\"filename\": \"hud-arrow-left00.png\",\r\n\t\"frame\": {\"x\":241,\"y\":101,\"w\":46,\"h\":46},\r\n\t\"rotated\": false,\r\n\t\"trimmed\": true,\r\n\t\"spriteSourceSize\": {\"x\":1,\"y\":1,\"w\":46,\"h\":46},\r\n\t\"sourceSize\": {\"w\":48,\"h\":48}\r\n},\r\n{\r\n\t\"filename\": \"hud-arrow-left01.png\",\r\n\t\"frame\": {\"x\":289,\"y\":101,\"w\":46,\"h\":46},\r\n\t\"rotated\": false,\r\n\t\"trimmed\": true,\r\n\t\"spriteSourceSize\": {\"x\":1,\"y\":1,\"w\":46,\"h\":46},\r\n\t\"sourceSize\": {\"w\":48,\"h\":48}\r\n},\r\n{\r\n\t\"filename\": \"hud-arrow-right00.png\",\r\n\t\"frame\": {\"x\":337,\"y\":101,\"w\":46,\"h\":46},\r\n\t\"rotated\": false,\r\n\t\"trimmed\": true,\r\n\t\"spriteSourceSize\": {\"x\":1,\"y\":1,\"w\":46,\"h\":46},\r\n\t\"sourceSize\": {\"w\":48,\"h\":48}\r\n},\r\n{\r\n\t\"filename\": \"hud-arrow-right01.png\",\r\n\t\"frame\": {\"x\":385,\"y\":101,\"w\":46,\"h\":46},\r\n\t\"rotated\": false,\r\n\t\"trimmed\": true,\r\n\t\"spriteSourceSize\": {\"x\":1,\"y\":1,\"w\":46,\"h\":46},\r\n\t\"sourceSize\": {\"w\":48,\"h\":48}\r\n},\r\n{\r\n\t\"filename\": \"hud-arrow-up00.png\",\r\n\t\"frame\": {\"x\":433,\"y\":101,\"w\":46,\"h\":46},\r\n\t\"rotated\": false,\r\n\t\"trimmed\": true,\r\n\t\"spriteSourceSize\": {\"x\":1,\"y\":1,\"w\":46,\"h\":46},\r\n\t\"sourceSize\": {\"w\":48,\"h\":48}\r\n},\r\n{\r\n\t\"filename\": \"hud-arrow-up01.png\",\r\n\t\"frame\": {\"x\":481,\"y\":101,\"w\":46,\"h\":46},\r\n\t\"rotated\": false,\r\n\t\"trimmed\": true,\r\n\t\"spriteSourceSize\": {\"x\":1,\"y\":1,\"w\":46,\"h\":46},\r\n\t\"sourceSize\": {\"w\":48,\"h\":48}\r\n},\r\n{\r\n\t\"filename\": \"hud-auto-centre00.png\",\r\n\t\"frame\": {\"x\":529,\"y\":101,\"w\":46,\"h\":46},\r\n\t\"rotated\": false,\r\n\t\"trimmed\": true,\r\n\t\"spriteSourceSize\": {\"x\":1,\"y\":1,\"w\":46,\"h\":46},\r\n\t\"sourceSize\": {\"w\":48,\"h\":48}\r\n},\r\n{\r\n\t\"filename\": \"hud-auto-centre01.png\",\r\n\t\"frame\": {\"x\":577,\"y\":101,\"w\":46,\"h\":46},\r\n\t\"rotated\": false,\r\n\t\"trimmed\": true,\r\n\t\"spriteSourceSize\": {\"x\":1,\"y\":1,\"w\":46,\"h\":46},\r\n\t\"sourceSize\": {\"w\":48,\"h\":48}\r\n},\r\n{\r\n\t\"filename\": \"hud-fullscreen00.png\",\r\n\t\"frame\": {\"x\":625,\"y\":101,\"w\":46,\"h\":46},\r\n\t\"rotated\": false,\r\n\t\"trimmed\": true,\r\n\t\"spriteSourceSize\": {\"x\":1,\"y\":1,\"w\":46,\"h\":46},\r\n\t\"sourceSize\": {\"w\":48,\"h\":48}\r\n},\r\n{\r\n\t\"filename\": \"hud-fullscreen01.png\",\r\n\t\"frame\": {\"x\":673,\"y\":101,\"w\":46,\"h\":46},\r\n\t\"rotated\": false,\r\n\t\"trimmed\": true,\r\n\t\"spriteSourceSize\": {\"x\":1,\"y\":1,\"w\":46,\"h\":46},\r\n\t\"sourceSize\": {\"w\":48,\"h\":48}\r\n},\r\n{\r\n\t\"filename\": \"orc-dead00.png\",\r\n\t\"frame\": {\"x\":721,\"y\":151,\"w\":48,\"h\":34},\r\n\t\"rotated\": false,\r\n\t\"trimmed\": true,\r\n\t\"spriteSourceSize\": {\"x\":0,\"y\":11,\"w\":48,\"h\":34},\r\n\t\"sourceSize\": {\"w\":48,\"h\":48}\r\n},\r\n{\r\n\t\"filename\": \"orc-idle00.png\",\r\n\t\"frame\": {\"x\":295,\"y\":51,\"w\":47,\"h\":48},\r\n\t\"rotated\": false,\r\n\t\"trimmed\": true,\r\n\t\"spriteSourceSize\": {\"x\":1,\"y\":0,\"w\":47,\"h\":48},\r\n\t\"sourceSize\": {\"w\":48,\"h\":48}\r\n},\r\n{\r\n\t\"filename\": \"orc-idle01.png\",\r\n\t\"frame\": {\"x\":344,\"y\":51,\"w\":47,\"h\":48},\r\n\t\"rotated\": false,\r\n\t\"trimmed\": true,\r\n\t\"spriteSourceSize\": {\"x\":0,\"y\":0,\"w\":47,\"h\":48},\r\n\t\"sourceSize\": {\"w\":48,\"h\":48}\r\n},\r\n{\r\n\t\"filename\": \"orc-idle02.png\",\r\n\t\"frame\": {\"x\":393,\"y\":51,\"w\":47,\"h\":48},\r\n\t\"rotated\": false,\r\n\t\"trimmed\": true,\r\n\t\"spriteSourceSize\": {\"x\":1,\"y\":0,\"w\":47,\"h\":48},\r\n\t\"sourceSize\": {\"w\":48,\"h\":48}\r\n},\r\n{\r\n\t\"filename\": \"orc-idle03.png\",\r\n\t\"frame\": {\"x\":442,\"y\":51,\"w\":47,\"h\":48},\r\n\t\"rotated\": false,\r\n\t\"trimmed\": true,\r\n\t\"spriteSourceSize\": {\"x\":1,\"y\":0,\"w\":47,\"h\":48},\r\n\t\"sourceSize\": {\"w\":48,\"h\":48}\r\n},\r\n{\r\n\t\"filename\": \"orc-walk-e00.png\",\r\n\t\"frame\": {\"x\":1015,\"y\":150,\"w\":38,\"h\":48},\r\n\t\"rotated\": false,\r\n\t\"trimmed\": true,\r\n\t\"spriteSourceSize\": {\"x\":9,\"y\":0,\"w\":38,\"h\":48},\r\n\t\"sourceSize\": {\"w\":48,\"h\":48}\r\n},\r\n{\r\n\t\"filename\": \"orc-walk-e01.png\",\r\n\t\"frame\": {\"x\":776,\"y\":201,\"w\":36,\"h\":48},\r\n\t\"rotated\": false,\r\n\t\"trimmed\": true,\r\n\t\"spriteSourceSize\": {\"x\":9,\"y\":0,\"w\":36,\"h\":48},\r\n\t\"sourceSize\": {\"w\":48,\"h\":48}\r\n},\r\n{\r\n\t\"filename\": \"orc-walk-e02.png\",\r\n\t\"frame\": {\"x\":898,\"y\":149,\"w\":33,\"h\":48},\r\n\t\"rotated\": false,\r\n\t\"trimmed\": true,\r\n\t\"spriteSourceSize\": {\"x\":9,\"y\":0,\"w\":33,\"h\":48},\r\n\t\"sourceSize\": {\"w\":48,\"h\":48}\r\n},\r\n{\r\n\t\"filename\": \"orc-walk-e03.png\",\r\n\t\"frame\": {\"x\":1142,\"y\":101,\"w\":39,\"h\":48},\r\n\t\"rotated\": false,\r\n\t\"trimmed\": true,\r\n\t\"spriteSourceSize\": {\"x\":9,\"y\":0,\"w\":39,\"h\":48},\r\n\t\"sourceSize\": {\"w\":48,\"h\":48}\r\n},\r\n{\r\n\t\"filename\": \"orc-walk-n00.png\",\r\n\t\"frame\": {\"x\":96,\"y\":188,\"w\":45,\"h\":48},\r\n\t\"rotated\": false,\r\n\t\"trimmed\": true,\r\n\t\"spriteSourceSize\": {\"x\":2,\"y\":0,\"w\":45,\"h\":48},\r\n\t\"sourceSize\": {\"w\":48,\"h\":48}\r\n},\r\n{\r\n\t\"filename\": \"orc-walk-n01.png\",\r\n\t\"frame\": {\"x\":491,\"y\":51,\"w\":47,\"h\":48},\r\n\t\"rotated\": false,\r\n\t\"trimmed\": true,\r\n\t\"spriteSourceSize\": {\"x\":1,\"y\":0,\"w\":47,\"h\":48},\r\n\t\"sourceSize\": {\"w\":48,\"h\":48}\r\n},\r\n{\r\n\t\"filename\": \"orc-walk-n02.png\",\r\n\t\"frame\": {\"x\":687,\"y\":51,\"w\":46,\"h\":48},\r\n\t\"rotated\": false,\r\n\t\"trimmed\": true,\r\n\t\"spriteSourceSize\": {\"x\":2,\"y\":0,\"w\":46,\"h\":48},\r\n\t\"sourceSize\": {\"w\":48,\"h\":48}\r\n},\r\n{\r\n\t\"filename\": \"orc-walk-n03.png\",\r\n\t\"frame\": {\"x\":976,\"y\":100,\"w\":40,\"h\":48},\r\n\t\"rotated\": false,\r\n\t\"trimmed\": true,\r\n\t\"spriteSourceSize\": {\"x\":8,\"y\":0,\"w\":40,\"h\":48},\r\n\t\"sourceSize\": {\"w\":48,\"h\":48}\r\n},\r\n{\r\n\t\"filename\": \"orc-walk-s00.png\",\r\n\t\"frame\": {\"x\":735,\"y\":51,\"w\":47,\"h\":47},\r\n\t\"rotated\": false,\r\n\t\"trimmed\": true,\r\n\t\"spriteSourceSize\": {\"x\":1,\"y\":1,\"w\":47,\"h\":47},\r\n\t\"sourceSize\": {\"w\":48,\"h\":48}\r\n},\r\n{\r\n\t\"filename\": \"orc-walk-s01.png\",\r\n\t\"frame\": {\"x\":540,\"y\":51,\"w\":47,\"h\":48},\r\n\t\"rotated\": false,\r\n\t\"trimmed\": true,\r\n\t\"spriteSourceSize\": {\"x\":0,\"y\":0,\"w\":47,\"h\":48},\r\n\t\"sourceSize\": {\"w\":48,\"h\":48}\r\n},\r\n{\r\n\t\"filename\": \"orc-walk-s02.png\",\r\n\t\"frame\": {\"x\":735,\"y\":51,\"w\":47,\"h\":47},\r\n\t\"rotated\": false,\r\n\t\"trimmed\": true,\r\n\t\"spriteSourceSize\": {\"x\":1,\"y\":1,\"w\":47,\"h\":47},\r\n\t\"sourceSize\": {\"w\":48,\"h\":48}\r\n},\r\n{\r\n\t\"filename\": \"orc-walk-s03.png\",\r\n\t\"frame\": {\"x\":239,\"y\":197,\"w\":45,\"h\":48},\r\n\t\"rotated\": false,\r\n\t\"trimmed\": true,\r\n\t\"spriteSourceSize\": {\"x\":3,\"y\":0,\"w\":45,\"h\":48},\r\n\t\"sourceSize\": {\"w\":48,\"h\":48}\r\n},\r\n{\r\n\t\"filename\": \"orc-walk-w00.png\",\r\n\t\"frame\": {\"x\":933,\"y\":100,\"w\":41,\"h\":48},\r\n\t\"rotated\": false,\r\n\t\"trimmed\": true,\r\n\t\"spriteSourceSize\": {\"x\":1,\"y\":0,\"w\":41,\"h\":48},\r\n\t\"sourceSize\": {\"w\":48,\"h\":48}\r\n},\r\n{\r\n\t\"filename\": \"orc-walk-w01.png\",\r\n\t\"frame\": {\"x\":756,\"y\":100,\"w\":42,\"h\":48},\r\n\t\"rotated\": false,\r\n\t\"trimmed\": true,\r\n\t\"spriteSourceSize\": {\"x\":0,\"y\":0,\"w\":42,\"h\":48},\r\n\t\"sourceSize\": {\"w\":48,\"h\":48}\r\n},\r\n{\r\n\t\"filename\": \"orc-walk-w02.png\",\r\n\t\"frame\": {\"x\":589,\"y\":51,\"w\":47,\"h\":48},\r\n\t\"rotated\": false,\r\n\t\"trimmed\": true,\r\n\t\"spriteSourceSize\": {\"x\":1,\"y\":0,\"w\":47,\"h\":48},\r\n\t\"sourceSize\": {\"w\":48,\"h\":48}\r\n},\r\n{\r\n\t\"filename\": \"orc-walk-w03.png\",\r\n\t\"frame\": {\"x\":800,\"y\":100,\"w\":42,\"h\":48},\r\n\t\"rotated\": false,\r\n\t\"trimmed\": true,\r\n\t\"spriteSourceSize\": {\"x\":3,\"y\":0,\"w\":42,\"h\":48},\r\n\t\"sourceSize\": {\"w\":48,\"h\":48}\r\n},\r\n{\r\n\t\"filename\": \"orc.png\",\r\n\t\"frame\": {\"x\":638,\"y\":51,\"w\":47,\"h\":48},\r\n\t\"rotated\": false,\r\n\t\"trimmed\": true,\r\n\t\"spriteSourceSize\": {\"x\":1,\"y\":0,\"w\":47,\"h\":48},\r\n\t\"sourceSize\": {\"w\":48,\"h\":48}\r\n},\r\n{\r\n\t\"filename\": \"pow.png\",\r\n\t\"frame\": {\"x\":1,\"y\":95,\"w\":92,\"h\":93},\r\n\t\"rotated\": false,\r\n\t\"trimmed\": true,\r\n\t\"spriteSourceSize\": {\"x\":1,\"y\":1,\"w\":92,\"h\":93},\r\n\t\"sourceSize\": {\"w\":96,\"h\":96}\r\n},\r\n{\r\n\t\"filename\": \"RIP.png\",\r\n\t\"frame\": {\"x\":97,\"y\":51,\"w\":48,\"h\":46},\r\n\t\"rotated\": false,\r\n\t\"trimmed\": true,\r\n\t\"spriteSourceSize\": {\"x\":0,\"y\":2,\"w\":48,\"h\":46},\r\n\t\"sourceSize\": {\"w\":48,\"h\":48}\r\n},\r\n{\r\n\t\"filename\": \"trader-dead00.png\",\r\n\t\"frame\": {\"x\":95,\"y\":149,\"w\":48,\"h\":37},\r\n\t\"rotated\": false,\r\n\t\"trimmed\": true,\r\n\t\"spriteSourceSize\": {\"x\":0,\"y\":5,\"w\":48,\"h\":37},\r\n\t\"sourceSize\": {\"w\":48,\"h\":48}\r\n},\r\n{\r\n\t\"filename\": \"trader-idle-s03.png\",\r\n\t\"frame\": {\"x\":1024,\"y\":51,\"w\":46,\"h\":48},\r\n\t\"rotated\": false,\r\n\t\"trimmed\": true,\r\n\t\"spriteSourceSize\": {\"x\":2,\"y\":0,\"w\":46,\"h\":48},\r\n\t\"sourceSize\": {\"w\":48,\"h\":48}\r\n},\r\n{\r\n\t\"filename\": \"trader-idle00.png\",\r\n\t\"frame\": {\"x\":427,\"y\":197,\"w\":44,\"h\":47},\r\n\t\"rotated\": false,\r\n\t\"trimmed\": true,\r\n\t\"spriteSourceSize\": {\"x\":2,\"y\":1,\"w\":44,\"h\":47},\r\n\t\"sourceSize\": {\"w\":48,\"h\":48}\r\n},\r\n{\r\n\t\"filename\": \"trader-idle01.png\",\r\n\t\"frame\": {\"x\":657,\"y\":197,\"w\":43,\"h\":48},\r\n\t\"rotated\": false,\r\n\t\"trimmed\": true,\r\n\t\"spriteSourceSize\": {\"x\":3,\"y\":0,\"w\":43,\"h\":48},\r\n\t\"sourceSize\": {\"w\":48,\"h\":48}\r\n},\r\n{\r\n\t\"filename\": \"trader-idle02.png\",\r\n\t\"frame\": {\"x\":473,\"y\":197,\"w\":44,\"h\":47},\r\n\t\"rotated\": false,\r\n\t\"trimmed\": true,\r\n\t\"spriteSourceSize\": {\"x\":2,\"y\":1,\"w\":44,\"h\":47},\r\n\t\"sourceSize\": {\"w\":48,\"h\":48}\r\n},\r\n{\r\n\t\"filename\": \"trader-walk-e00.png\",\r\n\t\"frame\": {\"x\":850,\"y\":199,\"w\":37,\"h\":47},\r\n\t\"rotated\": false,\r\n\t\"trimmed\": true,\r\n\t\"spriteSourceSize\": {\"x\":0,\"y\":1,\"w\":37,\"h\":47},\r\n\t\"sourceSize\": {\"w\":48,\"h\":48}\r\n},\r\n{\r\n\t\"filename\": \"trader-walk-e01.png\",\r\n\t\"frame\": {\"x\":1018,\"y\":101,\"w\":40,\"h\":47},\r\n\t\"rotated\": false,\r\n\t\"trimmed\": true,\r\n\t\"spriteSourceSize\": {\"x\":0,\"y\":1,\"w\":40,\"h\":47},\r\n\t\"sourceSize\": {\"w\":48,\"h\":48}\r\n},\r\n{\r\n\t\"filename\": \"trader-walk-e02.png\",\r\n\t\"frame\": {\"x\":814,\"y\":201,\"w\":34,\"h\":48},\r\n\t\"rotated\": false,\r\n\t\"trimmed\": true,\r\n\t\"spriteSourceSize\": {\"x\":1,\"y\":0,\"w\":34,\"h\":48},\r\n\t\"sourceSize\": {\"w\":48,\"h\":48}\r\n},\r\n{\r\n\t\"filename\": \"trader-walk-e03.png\",\r\n\t\"frame\": {\"x\":737,\"y\":201,\"w\":37,\"h\":48},\r\n\t\"rotated\": false,\r\n\t\"trimmed\": true,\r\n\t\"spriteSourceSize\": {\"x\":0,\"y\":0,\"w\":37,\"h\":48},\r\n\t\"sourceSize\": {\"w\":48,\"h\":48}\r\n},\r\n{\r\n\t\"filename\": \"trader-walk-n00.png\",\r\n\t\"frame\": {\"x\":519,\"y\":197,\"w\":44,\"h\":47},\r\n\t\"rotated\": false,\r\n\t\"trimmed\": true,\r\n\t\"spriteSourceSize\": {\"x\":2,\"y\":1,\"w\":44,\"h\":47},\r\n\t\"sourceSize\": {\"w\":48,\"h\":48}\r\n},\r\n{\r\n\t\"filename\": \"trader-walk-n01.png\",\r\n\t\"frame\": {\"x\":844,\"y\":100,\"w\":42,\"h\":48},\r\n\t\"rotated\": false,\r\n\t\"trimmed\": true,\r\n\t\"spriteSourceSize\": {\"x\":4,\"y\":0,\"w\":42,\"h\":48},\r\n\t\"sourceSize\": {\"w\":48,\"h\":48}\r\n},\r\n{\r\n\t\"filename\": \"trader-walk-n02.png\",\r\n\t\"frame\": {\"x\":565,\"y\":197,\"w\":44,\"h\":47},\r\n\t\"rotated\": false,\r\n\t\"trimmed\": true,\r\n\t\"spriteSourceSize\": {\"x\":2,\"y\":1,\"w\":44,\"h\":47},\r\n\t\"sourceSize\": {\"w\":48,\"h\":48}\r\n},\r\n{\r\n\t\"filename\": \"trader-walk-n03.png\",\r\n\t\"frame\": {\"x\":933,\"y\":150,\"w\":39,\"h\":48},\r\n\t\"rotated\": false,\r\n\t\"trimmed\": true,\r\n\t\"spriteSourceSize\": {\"x\":8,\"y\":0,\"w\":39,\"h\":48},\r\n\t\"sourceSize\": {\"w\":48,\"h\":48}\r\n},\r\n{\r\n\t\"filename\": \"trader-walk-s00.png\",\r\n\t\"frame\": {\"x\":333,\"y\":197,\"w\":45,\"h\":47},\r\n\t\"rotated\": false,\r\n\t\"trimmed\": true,\r\n\t\"spriteSourceSize\": {\"x\":2,\"y\":1,\"w\":45,\"h\":47},\r\n\t\"sourceSize\": {\"w\":48,\"h\":48}\r\n},\r\n{\r\n\t\"filename\": \"trader-walk-s01.png\",\r\n\t\"frame\": {\"x\":286,\"y\":197,\"w\":45,\"h\":48},\r\n\t\"rotated\": false,\r\n\t\"trimmed\": true,\r\n\t\"spriteSourceSize\": {\"x\":3,\"y\":0,\"w\":45,\"h\":48},\r\n\t\"sourceSize\": {\"w\":48,\"h\":48}\r\n},\r\n{\r\n\t\"filename\": \"trader-walk-s02.png\",\r\n\t\"frame\": {\"x\":380,\"y\":197,\"w\":45,\"h\":47},\r\n\t\"rotated\": false,\r\n\t\"trimmed\": true,\r\n\t\"spriteSourceSize\": {\"x\":2,\"y\":1,\"w\":45,\"h\":47},\r\n\t\"sourceSize\": {\"w\":48,\"h\":48}\r\n},\r\n{\r\n\t\"filename\": \"trader-walk-s03.png\",\r\n\t\"frame\": {\"x\":1072,\"y\":51,\"w\":46,\"h\":48},\r\n\t\"rotated\": false,\r\n\t\"trimmed\": true,\r\n\t\"spriteSourceSize\": {\"x\":2,\"y\":0,\"w\":46,\"h\":48},\r\n\t\"sourceSize\": {\"w\":48,\"h\":48}\r\n},\r\n{\r\n\t\"filename\": \"trader-walk-w00.png\",\r\n\t\"frame\": {\"x\":974,\"y\":150,\"w\":39,\"h\":48},\r\n\t\"rotated\": false,\r\n\t\"trimmed\": true,\r\n\t\"spriteSourceSize\": {\"x\":8,\"y\":0,\"w\":39,\"h\":48},\r\n\t\"sourceSize\": {\"w\":48,\"h\":48}\r\n},\r\n{\r\n\t\"filename\": \"trader-walk-w01.png\",\r\n\t\"frame\": {\"x\":888,\"y\":100,\"w\":43,\"h\":47},\r\n\t\"rotated\": false,\r\n\t\"trimmed\": true,\r\n\t\"spriteSourceSize\": {\"x\":5,\"y\":1,\"w\":43,\"h\":47},\r\n\t\"sourceSize\": {\"w\":48,\"h\":48}\r\n},\r\n{\r\n\t\"filename\": \"trader-walk-w02.png\",\r\n\t\"frame\": {\"x\":1055,\"y\":151,\"w\":39,\"h\":47},\r\n\t\"rotated\": false,\r\n\t\"trimmed\": true,\r\n\t\"spriteSourceSize\": {\"x\":9,\"y\":1,\"w\":39,\"h\":47},\r\n\t\"sourceSize\": {\"w\":48,\"h\":48}\r\n},\r\n{\r\n\t\"filename\": \"trader-walk-w03.png\",\r\n\t\"frame\": {\"x\":1096,\"y\":151,\"w\":39,\"h\":47},\r\n\t\"rotated\": false,\r\n\t\"trimmed\": true,\r\n\t\"spriteSourceSize\": {\"x\":9,\"y\":1,\"w\":39,\"h\":47},\r\n\t\"sourceSize\": {\"w\":48,\"h\":48}\r\n},\r\n{\r\n\t\"filename\": \"trader.png\",\r\n\t\"frame\": {\"x\":611,\"y\":197,\"w\":44,\"h\":47},\r\n\t\"rotated\": false,\r\n\t\"trimmed\": true,\r\n\t\"spriteSourceSize\": {\"x\":2,\"y\":1,\"w\":44,\"h\":47},\r\n\t\"sourceSize\": {\"w\":48,\"h\":48}\r\n},\r\n{\r\n\t\"filename\": \"ui-checkbox00.png\",\r\n\t\"frame\": {\"x\":145,\"y\":149,\"w\":46,\"h\":46},\r\n\t\"rotated\": false,\r\n\t\"trimmed\": true,\r\n\t\"spriteSourceSize\": {\"x\":1,\"y\":1,\"w\":46,\"h\":46},\r\n\t\"sourceSize\": {\"w\":48,\"h\":48}\r\n},\r\n{\r\n\t\"filename\": \"ui-checkbox01.png\",\r\n\t\"frame\": {\"x\":193,\"y\":149,\"w\":46,\"h\":46},\r\n\t\"rotated\": false,\r\n\t\"trimmed\": true,\r\n\t\"spriteSourceSize\": {\"x\":1,\"y\":1,\"w\":46,\"h\":46},\r\n\t\"sourceSize\": {\"w\":48,\"h\":48}\r\n},\r\n{\r\n\t\"filename\": \"ui-play00.png\",\r\n\t\"frame\": {\"x\":241,\"y\":149,\"w\":46,\"h\":46},\r\n\t\"rotated\": false,\r\n\t\"trimmed\": true,\r\n\t\"spriteSourceSize\": {\"x\":1,\"y\":1,\"w\":46,\"h\":46},\r\n\t\"sourceSize\": {\"w\":48,\"h\":48}\r\n},\r\n{\r\n\t\"filename\": \"ui-play01.png\",\r\n\t\"frame\": {\"x\":289,\"y\":149,\"w\":46,\"h\":46},\r\n\t\"rotated\": false,\r\n\t\"trimmed\": true,\r\n\t\"spriteSourceSize\": {\"x\":1,\"y\":1,\"w\":46,\"h\":46},\r\n\t\"sourceSize\": {\"w\":48,\"h\":48}\r\n},\r\n{\r\n\t\"filename\": \"ui-settings00.png\",\r\n\t\"frame\": {\"x\":337,\"y\":149,\"w\":46,\"h\":46},\r\n\t\"rotated\": false,\r\n\t\"trimmed\": true,\r\n\t\"spriteSourceSize\": {\"x\":1,\"y\":1,\"w\":46,\"h\":46},\r\n\t\"sourceSize\": {\"w\":48,\"h\":48}\r\n},\r\n{\r\n\t\"filename\": \"ui-settings01.png\",\r\n\t\"frame\": {\"x\":385,\"y\":149,\"w\":46,\"h\":46},\r\n\t\"rotated\": false,\r\n\t\"trimmed\": true,\r\n\t\"spriteSourceSize\": {\"x\":1,\"y\":1,\"w\":46,\"h\":46},\r\n\t\"sourceSize\": {\"w\":48,\"h\":48}\r\n},\r\n{\r\n\t\"filename\": \"ui-spinner-down00.png\",\r\n\t\"frame\": {\"x\":433,\"y\":149,\"w\":46,\"h\":46},\r\n\t\"rotated\": false,\r\n\t\"trimmed\": true,\r\n\t\"spriteSourceSize\": {\"x\":1,\"y\":1,\"w\":46,\"h\":46},\r\n\t\"sourceSize\": {\"w\":48,\"h\":48}\r\n},\r\n{\r\n\t\"filename\": \"ui-spinner-down01.png\",\r\n\t\"frame\": {\"x\":481,\"y\":149,\"w\":46,\"h\":46},\r\n\t\"rotated\": false,\r\n\t\"trimmed\": true,\r\n\t\"spriteSourceSize\": {\"x\":1,\"y\":1,\"w\":46,\"h\":46},\r\n\t\"sourceSize\": {\"w\":48,\"h\":48}\r\n},\r\n{\r\n\t\"filename\": \"ui-spinner-left00.png\",\r\n\t\"frame\": {\"x\":529,\"y\":149,\"w\":46,\"h\":46},\r\n\t\"rotated\": false,\r\n\t\"trimmed\": true,\r\n\t\"spriteSourceSize\": {\"x\":1,\"y\":1,\"w\":46,\"h\":46},\r\n\t\"sourceSize\": {\"w\":48,\"h\":48}\r\n},\r\n{\r\n\t\"filename\": \"ui-spinner-left01.png\",\r\n\t\"frame\": {\"x\":577,\"y\":149,\"w\":46,\"h\":46},\r\n\t\"rotated\": false,\r\n\t\"trimmed\": true,\r\n\t\"spriteSourceSize\": {\"x\":1,\"y\":1,\"w\":46,\"h\":46},\r\n\t\"sourceSize\": {\"w\":48,\"h\":48}\r\n},\r\n{\r\n\t\"filename\": \"ui-spinner-right00.png\",\r\n\t\"frame\": {\"x\":625,\"y\":149,\"w\":46,\"h\":46},\r\n\t\"rotated\": false,\r\n\t\"trimmed\": true,\r\n\t\"spriteSourceSize\": {\"x\":1,\"y\":1,\"w\":46,\"h\":46},\r\n\t\"sourceSize\": {\"w\":48,\"h\":48}\r\n},\r\n{\r\n\t\"filename\": \"ui-spinner-right01.png\",\r\n\t\"frame\": {\"x\":673,\"y\":149,\"w\":46,\"h\":46},\r\n\t\"rotated\": false,\r\n\t\"trimmed\": true,\r\n\t\"spriteSourceSize\": {\"x\":1,\"y\":1,\"w\":46,\"h\":46},\r\n\t\"sourceSize\": {\"w\":48,\"h\":48}\r\n},\r\n{\r\n\t\"filename\": \"ui-spinner-up00.png\",\r\n\t\"frame\": {\"x\":143,\"y\":197,\"w\":46,\"h\":46},\r\n\t\"rotated\": false,\r\n\t\"trimmed\": true,\r\n\t\"spriteSourceSize\": {\"x\":1,\"y\":1,\"w\":46,\"h\":46},\r\n\t\"sourceSize\": {\"w\":48,\"h\":48}\r\n},\r\n{\r\n\t\"filename\": \"ui-spinner-up01.png\",\r\n\t\"frame\": {\"x\":191,\"y\":197,\"w\":46,\"h\":46},\r\n\t\"rotated\": false,\r\n\t\"trimmed\": true,\r\n\t\"spriteSourceSize\": {\"x\":1,\"y\":1,\"w\":46,\"h\":46},\r\n\t\"sourceSize\": {\"w\":48,\"h\":48}\r\n},\r\n{\r\n\t\"filename\": \"wall-B.png\",\r\n\t\"frame\": {\"x\":597,\"y\":1,\"w\":48,\"h\":48},\r\n\t\"rotated\": false,\r\n\t\"trimmed\": false,\r\n\t\"spriteSourceSize\": {\"x\":0,\"y\":0,\"w\":48,\"h\":48},\r\n\t\"sourceSize\": {\"w\":48,\"h\":48}\r\n},\r\n{\r\n\t\"filename\": \"wall-BL.png\",\r\n\t\"frame\": {\"x\":962,\"y\":201,\"w\":33,\"h\":48},\r\n\t\"rotated\": false,\r\n\t\"trimmed\": true,\r\n\t\"spriteSourceSize\": {\"x\":15,\"y\":0,\"w\":33,\"h\":48},\r\n\t\"sourceSize\": {\"w\":48,\"h\":48}\r\n},\r\n{\r\n\t\"filename\": \"wall-BLI.png\",\r\n\t\"frame\": {\"x\":647,\"y\":1,\"w\":48,\"h\":48},\r\n\t\"rotated\": false,\r\n\t\"trimmed\": false,\r\n\t\"spriteSourceSize\": {\"x\":0,\"y\":0,\"w\":48,\"h\":48},\r\n\t\"sourceSize\": {\"w\":48,\"h\":48}\r\n},\r\n{\r\n\t\"filename\": \"wall-BR.png\",\r\n\t\"frame\": {\"x\":926,\"y\":201,\"w\":34,\"h\":48},\r\n\t\"rotated\": false,\r\n\t\"trimmed\": true,\r\n\t\"spriteSourceSize\": {\"x\":0,\"y\":0,\"w\":34,\"h\":48},\r\n\t\"sourceSize\": {\"w\":48,\"h\":48}\r\n},\r\n{\r\n\t\"filename\": \"wall-BRI.png\",\r\n\t\"frame\": {\"x\":697,\"y\":1,\"w\":48,\"h\":48},\r\n\t\"rotated\": false,\r\n\t\"trimmed\": false,\r\n\t\"spriteSourceSize\": {\"x\":0,\"y\":0,\"w\":48,\"h\":48},\r\n\t\"sourceSize\": {\"w\":48,\"h\":48}\r\n},\r\n{\r\n\t\"filename\": \"wall-BTEE.png\",\r\n\t\"frame\": {\"x\":747,\"y\":1,\"w\":48,\"h\":48},\r\n\t\"rotated\": false,\r\n\t\"trimmed\": false,\r\n\t\"spriteSourceSize\": {\"x\":0,\"y\":0,\"w\":48,\"h\":48},\r\n\t\"sourceSize\": {\"w\":48,\"h\":48}\r\n},\r\n{\r\n\t\"filename\": \"wall-HI.png\",\r\n\t\"frame\": {\"x\":797,\"y\":1,\"w\":48,\"h\":48},\r\n\t\"rotated\": false,\r\n\t\"trimmed\": false,\r\n\t\"spriteSourceSize\": {\"x\":0,\"y\":0,\"w\":48,\"h\":48},\r\n\t\"sourceSize\": {\"w\":48,\"h\":48}\r\n},\r\n{\r\n\t\"filename\": \"wall-L.png\",\r\n\t\"frame\": {\"x\":997,\"y\":201,\"w\":33,\"h\":48},\r\n\t\"rotated\": false,\r\n\t\"trimmed\": true,\r\n\t\"spriteSourceSize\": {\"x\":15,\"y\":0,\"w\":33,\"h\":48},\r\n\t\"sourceSize\": {\"w\":48,\"h\":48}\r\n},\r\n{\r\n\t\"filename\": \"wall-LTEE.png\",\r\n\t\"frame\": {\"x\":1032,\"y\":201,\"w\":33,\"h\":48},\r\n\t\"rotated\": false,\r\n\t\"trimmed\": true,\r\n\t\"spriteSourceSize\": {\"x\":15,\"y\":0,\"w\":33,\"h\":48},\r\n\t\"sourceSize\": {\"w\":48,\"h\":48}\r\n},\r\n{\r\n\t\"filename\": \"wall-R.png\",\r\n\t\"frame\": {\"x\":1067,\"y\":201,\"w\":33,\"h\":48},\r\n\t\"rotated\": false,\r\n\t\"trimmed\": true,\r\n\t\"spriteSourceSize\": {\"x\":0,\"y\":0,\"w\":33,\"h\":48},\r\n\t\"sourceSize\": {\"w\":48,\"h\":48}\r\n},\r\n{\r\n\t\"filename\": \"wall-RTEE.png\",\r\n\t\"frame\": {\"x\":1102,\"y\":201,\"w\":33,\"h\":48},\r\n\t\"rotated\": false,\r\n\t\"trimmed\": true,\r\n\t\"spriteSourceSize\": {\"x\":0,\"y\":0,\"w\":33,\"h\":48},\r\n\t\"sourceSize\": {\"w\":48,\"h\":48}\r\n},\r\n{\r\n\t\"filename\": \"wall-T.png\",\r\n\t\"frame\": {\"x\":847,\"y\":1,\"w\":48,\"h\":48},\r\n\t\"rotated\": false,\r\n\t\"trimmed\": false,\r\n\t\"spriteSourceSize\": {\"x\":0,\"y\":0,\"w\":48,\"h\":48},\r\n\t\"sourceSize\": {\"w\":48,\"h\":48}\r\n},\r\n{\r\n\t\"filename\": \"wall-TL.png\",\r\n\t\"frame\": {\"x\":1137,\"y\":201,\"w\":33,\"h\":48},\r\n\t\"rotated\": false,\r\n\t\"trimmed\": true,\r\n\t\"spriteSourceSize\": {\"x\":15,\"y\":0,\"w\":33,\"h\":48},\r\n\t\"sourceSize\": {\"w\":48,\"h\":48}\r\n},\r\n{\r\n\t\"filename\": \"wall-TLI.png\",\r\n\t\"frame\": {\"x\":897,\"y\":1,\"w\":48,\"h\":48},\r\n\t\"rotated\": false,\r\n\t\"trimmed\": false,\r\n\t\"spriteSourceSize\": {\"x\":0,\"y\":0,\"w\":48,\"h\":48},\r\n\t\"sourceSize\": {\"w\":48,\"h\":48}\r\n},\r\n{\r\n\t\"filename\": \"wall-TR.png\",\r\n\t\"frame\": {\"x\":1172,\"y\":201,\"w\":33,\"h\":48},\r\n\t\"rotated\": false,\r\n\t\"trimmed\": true,\r\n\t\"spriteSourceSize\": {\"x\":0,\"y\":0,\"w\":33,\"h\":48},\r\n\t\"sourceSize\": {\"w\":48,\"h\":48}\r\n},\r\n{\r\n\t\"filename\": \"wall-TRI.png\",\r\n\t\"frame\": {\"x\":947,\"y\":1,\"w\":48,\"h\":48},\r\n\t\"rotated\": false,\r\n\t\"trimmed\": false,\r\n\t\"spriteSourceSize\": {\"x\":0,\"y\":0,\"w\":48,\"h\":48},\r\n\t\"sourceSize\": {\"w\":48,\"h\":48}\r\n},\r\n{\r\n\t\"filename\": \"wall-TTEE.png\",\r\n\t\"frame\": {\"x\":997,\"y\":1,\"w\":48,\"h\":48},\r\n\t\"rotated\": false,\r\n\t\"trimmed\": false,\r\n\t\"spriteSourceSize\": {\"x\":0,\"y\":0,\"w\":48,\"h\":48},\r\n\t\"sourceSize\": {\"w\":48,\"h\":48}\r\n},\r\n{\r\n\t\"filename\": \"wall-VI.png\",\r\n\t\"frame\": {\"x\":1047,\"y\":1,\"w\":48,\"h\":48},\r\n\t\"rotated\": false,\r\n\t\"trimmed\": false,\r\n\t\"spriteSourceSize\": {\"x\":0,\"y\":0,\"w\":48,\"h\":48},\r\n\t\"sourceSize\": {\"w\":48,\"h\":48}\r\n},\r\n{\r\n\t\"filename\": \"wall-XI.png\",\r\n\t\"frame\": {\"x\":1097,\"y\":1,\"w\":48,\"h\":48},\r\n\t\"rotated\": false,\r\n\t\"trimmed\": false,\r\n\t\"spriteSourceSize\": {\"x\":0,\"y\":0,\"w\":48,\"h\":48},\r\n\t\"sourceSize\": {\"w\":48,\"h\":48}\r\n},\r\n{\r\n\t\"filename\": \"wall2-B.png\",\r\n\t\"frame\": {\"x\":1147,\"y\":1,\"w\":48,\"h\":48},\r\n\t\"rotated\": false,\r\n\t\"trimmed\": false,\r\n\t\"spriteSourceSize\": {\"x\":0,\"y\":0,\"w\":48,\"h\":48},\r\n\t\"sourceSize\": {\"w\":48,\"h\":48}\r\n},\r\n{\r\n\t\"filename\": \"wall2-HI.png\",\r\n\t\"frame\": {\"x\":95,\"y\":99,\"w\":48,\"h\":48},\r\n\t\"rotated\": false,\r\n\t\"trimmed\": false,\r\n\t\"spriteSourceSize\": {\"x\":0,\"y\":0,\"w\":48,\"h\":48},\r\n\t\"sourceSize\": {\"w\":48,\"h\":48}\r\n},\r\n{\r\n\t\"filename\": \"wall2-T.png\",\r\n\t\"frame\": {\"x\":147,\"y\":51,\"w\":48,\"h\":48},\r\n\t\"rotated\": false,\r\n\t\"trimmed\": false,\r\n\t\"spriteSourceSize\": {\"x\":0,\"y\":0,\"w\":48,\"h\":48},\r\n\t\"sourceSize\": {\"w\":48,\"h\":48}\r\n}],\r\n\"meta\": {\r\n\t\"app\": \"https://www.codeandweb.com/texturepacker\",\r\n\t\"version\": \"1.0\",\r\n\t\"image\": \"dungeon.png\",\r\n\t\"format\": \"RGBA8888\",\r\n\t\"size\": {\"w\":1208,\"h\":250},\r\n\t\"scale\": \"1\",\r\n\t\"smartupdate\": \"$TexturePacker:SmartUpdate:4534e0ee2047f5c5e3b4b1eab74e2e70:5c8c3f7b31e25a52db917ab223c06f93:9c0fba27a8a0c106083a8713f6c67b32$\"\r\n}\r\n}\r\n","module.exports = new __parcel__URL__(\"dungeon.c7fee6f0.png\").toString();"],"names":["$f8633d94d0c88c58$var$worldTileMap","$1e31a0b2c366ad73$var$fullscreenButton","$1e31a0b2c366ad73$var$fullscreenButtonImage","$b8e5621826152c93$var$cameraDolly","$b8e5621826152c93$var$sceneDefinitions","$b8e5621826152c93$var$currentIndex","$b8e5621826152c93$var$currentScene","$b8e5621826152c93$var$navigationButtons","$ce5abd6ee7a09c2e$var$heroActor","$fee0c02ce96028b6$var$lastHero","$a63c524e2668f377$var$lines","$a63c524e2668f377$var$sceneDefinitions","$22a8782d7473db79$var$lastTimeStamp","$parcel$interopDefault","a","__esModule","default","$2d5b4e7cb639ebe1$var$messages","window","addEventListener","event","alert","filename","lineno","message","error","stack","$2d5b4e7cb639ebe1$export$2e2bcd8739ae039","log","data","console","info","debug","concat","fatal","join","push","$3c404572c27a35d5$var$HEADING_FONT","$3c404572c27a35d5$var$textInfo","normal","size","fontName","h1","h2","h3","emojiSprite","$3c404572c27a35d5$export$955358618f994a11","styleName","$05d58a132d6b5767$var$Radians","DEG_22_5","Math","PI","DEG_45","DEG_67_5","DEG_112_5","DEG_135","DEG_157_7","$05d58a132d6b5767$export$e0b576e7a74416cd","value","min","max","$05d58a132d6b5767$export$624e7ee3f0468367","NONE","N","NE","E","SE","S","SW","W","NW","$05d58a132d6b5767$export$b141de964f0a90c1","minCeiled","ceil","floor","random","maxFloored","$05d58a132d6b5767$export$75c671db1a13cf5f","$90999bd6b14cd690$export$baf26146a414f24a","x","y","constructor","copy","point","coincident","getCartesianAngleTo","targetPos","atan2","getScreenAngleTo","toString","isCoincident","position","round","isOtherClose","other","distance","pow","$90999bd6b14cd690$export$4a23b3811cef465","rotation","velX","velY","velRot","getCartesianDirection","getScreenDirection","isZero","tolerance","abs","$90999bd6b14cd690$export$13807d9ee5a34a42","fromPoint","getRelativeTo","origin","withinSquare","length","$90999bd6b14cd690$export$4617fb02663045ef","width","height","getBottomRight","getTopLeft","overlaps","otherRect","myBR","otherRectBR","containsPoint","containsCoordinate","equals","Number","MIN_VALUE","MAX_VALUE","$a1820c190f7a8b2e$var$throttleTimer","$a1820c190f7a8b2e$var$canvas","$a1820c190f7a8b2e$var$canvasRect","$a1820c190f7a8b2e$var$canvasHalfWidth","$a1820c190f7a8b2e$var$canvasHalfHeight","$a1820c190f7a8b2e$var$canvasAlpha","$a1820c190f7a8b2e$var$visibleCanvasRect","$a1820c190f7a8b2e$var$gameElement","$a1820c190f7a8b2e$var$left","$a1820c190f7a8b2e$var$top","$a1820c190f7a8b2e$var$scale","$a1820c190f7a8b2e$var$maxScale","$a1820c190f7a8b2e$var$minScale","$a1820c190f7a8b2e$var$sizingMethod","$a1820c190f7a8b2e$var$cameraPosition","$a1820c190f7a8b2e$var$sizeScreen","visibleCanvasWidth","visibleCanvasHeight","visibleCanvasOffsetX","visibleCanvasOffsetY","dims","innerWidth","innerHeight","aspectRatio","displayedHeight","displayedWidth","windowAspectRatio","sizingMethod","style","left","top","$a1820c190f7a8b2e$var$syncDomFonts","rootFontSize","$3c404572c27a35d5$export$ef86e9b1c847b692","document","documentElement","fontSize","$a1820c190f7a8b2e$var$resize","$a1820c190f7a8b2e$var$getContext2D","getContext","alpha","$a1820c190f7a8b2e$var$wipeGlass","glass","opacity","Promise","resolve","setTimeout","remove","$a1820c190f7a8b2e$var$canvasPositionToWorld","$a1820c190f7a8b2e$export$2e2bcd8739ae039","canvasPositionToWorld","centreCanvasOn","clearCanvas","clearRect","displayOnGlass","element","closers","className","closingId","createElement","body","appendChild","glassContent","classList","add","display","promises","forEach","closer","promise","response","race","then","id","getCanvas","getContext2D","getCanvasDimensions","getWorldInCanvasBounds","getVisibleCanvasRect","glassPositionToWorld","xOrigin","yOrigin","isOnCanvas","rect","isOnScreen","panCamera","dx","dy","resize","setOpacity","globalAlpha","setOptions","options","designWidth","getElementById","$3c404572c27a35d5$var$baseSize","setAttribute","innerText","maxScale","minScale","wipeGlass","worldPositionToCanvas","worldToUi","dist","uiCoordsToMappedPositions","canvas","world","uiToWorld","$f8633d94d0c88c58$var$actors","Map","$f8633d94d0c88c58$var$passiveSprites","$f8633d94d0c88c58$var$removeActor","target","gridPoint","worldPointToGrid","deleteOccupancyOfGridPoint","delete","$f8633d94d0c88c58$var$removePassiveSprite","sprite","$f8633d94d0c88c58$var$removeTileMap","$f8633d94d0c88c58$export$2e2bcd8739ae039","addActor","set","moveTileOccupancyGridPoint","addPassiveSprite","clearAll","actor","getActors","getTileMap","getWorldDims","getDimensions","removeTileMap","resolveCancel","positionsUnused","resolveClick","positions","tile","getTileAtWorldPoint","actionClick","resolveContextMenu","actionContextClick","removeActor","removePassiveSprite","setTileMap","tileMap","update","deltaSeconds","oldGridPoint","visible","canHeroSeeGridPoint","newGridPoint","$335738a0ba898678$export$bec150f75a9b8f11","context","text","font","fillStyle","color","wrapAtX","paragraphs","split","n","$335738a0ba898678$var$wrapParagraph","paragraph","lineHeight","words","maxLineLength","xWrapPosition","lineSpacing","line","testLine","bounds","$335738a0ba898678$export$85b404b88b79e37e","metrics","measureText","fontBoundingBoxAscent","fontBoundingBoxDescent","offsetTop","offsetCentreY","fillText","$f92f169e79f1c193$export$8eb3892b442747bd","spriteBoxes","showFps","$5840285c35321464$var$spriteMaps","$5840285c35321464$var$loadImage","srcUrl","image","Image","src","$5840285c35321464$export$2e2bcd8739ae039","getSpriteBitmap","spriteMapIndex","result","get","loadImage","loadImages","srcUrls","url","all","loadSpriteMap","spriteMapDef","textureUrl","$5840285c35321464$var$buildSpriteMap","texture","map","frames","frame","createImageBitmap","w","h","spriteImage","spriteBitmap","centreX","sourceSize","spriteSourceSize","centreY","$92e1ec0ff12c1fbf$var$currentTimeMs","$92e1ec0ff12c1fbf$export$2e2bcd8739ae039","updateTimeNow","timeNowMs","getFrameCount","framePeriodMs","$af167e06ffca879a$export$cab6ba75b045ad71","WRAP","REVERSE","STOP","$af167e06ffca879a$export$7ed7e8a26b54b288","maxIndex","loopMethod","direction","index","advanceBy","advanceByWrap","advanceByReverse","advanceByStop","overshoot","$7f41e47310ae6543$export$9d5734c725768403","playing","indexer","lastFrameCount","textureIndex","filenamePattern","textureFrame","startIndex","padding","fileName","prefix","padStart","suffix","getCurrentFrame","frameCount","setCurrentIndex","getCurrentIndex","$7f41e47310ae6543$export$7ded0ab8d4b1a54f","animatedImages","currentImage","key","animatedImage","addAnimatedImage","setCurrentKey","hasOwnProperty","$f1adbd10d5a753d6$export$b1e2fc7f480e9342","_context","_boundingBoxCanvas","getBoundingBoxCanvas","render","currentAlpha","rotated","save","translate","rotate","_doRender","restore","strokeStyle","strokeRect","positionUnused","$f1adbd10d5a753d6$export$544ff2c168abc0f9","lastCalculatedText","renderGeometry","calculateRenderGeometry","renderGeom","renderPosition","$f1adbd10d5a753d6$export$bea6a7ef06354cc","halfWidth","halfHeight","fillRect","$f1adbd10d5a753d6$export$184b92f2ec28e2e2","offsetX","offsetY","fillHeight","halfFillHeight","setLevel","proportion","topStroke","topFill","$f1adbd10d5a753d6$export$f1bb2dcf27836475","gaugeRenderers","nGauges","fillStyles","strokeStyles","gaugeWidth","tileSize","gaugePosX","gaugeIndex","renderer","$f1adbd10d5a753d6$export$c1626e6e036a584","animation","imageDefinition","drawImage","$5b82fcc8e5572650$export$3075603db8e6204c","velocity","multiRenderers","modifier","Array","isArray","nextPosition","valueOrZero","nextVelocity","getBoundingBox","boundsCanvas","$f8eb19ad944a8e76$export$f929ba4d0b405b8b","decoratedModifier","resolveFunc","activeSeconds","timeoutSeconds","applyAsTransientToSprite","applyAsContinuousToSprite","nextModifier","doUpdate","spriteUnused","deltaSecondsUnused","$cf74d2982f28ade3$export$709baf898a5dceda","deltaOpacityPerSec","lifetimeSecs","$6b87500f649b76df$var$VariableSpeed","speed","linear","getSpeedBetweenPoints","pointA","pointB","$6b87500f649b76df$export$9600794ac1f85e81","topLeft","bottomRight","$6b87500f649b76df$export$254d9747e34ddc90","prey","maxSeparation","variableSpeed","hunter","preyPos","hunterPos","approachSpeed","angle","cos","sin","getMinMove","maxMovement","targetValue","currentValue","requiredMovement","sign","$6b87500f649b76df$export$c14f425b03c3e261","path","targetPoint","subject","subjectPos","$ae446a5a8f069dac$export$d72d5d6e5d0daa8f","$ae446a5a8f069dac$export$dc0b517182376fca","$d9f2d68cf2746c78$export$b9d1fef74bbc4c0c","sides","$e49c2c8387e6101d$export$2e2bcd8739ae039","TILE_SIZE","$3474d2bbacd35b48$var$PERSISTENT_DATA","cache","localStorage","setItem","JSON","stringify","defaultValue","has","encodedValue","getItem","parse","$de9cad813c8cf1e8$export$3e9165d18613c27e","createTextNode","label","$de9cad813c8cf1e8$export$240946c56899011","bitmapUp","bitmapDown","selected","action","imageNameDown","Error","button","imageNameUp","internalLabel","span","pressed","passive","released","cancelled","showSelectionImage","$de9cad813c8cf1e8$export$92481776a9137611","$de9cad813c8cf1e8$export$82f9c7d14b0424b","TEXT_BUTTON","CHECKBOX","$81dd6b24526c5347$var$createMessageElement","$81dd6b24526c5347$export$2e2bcd8739ae039","showMessage","popup","showOkDialog","okButtonLabel","container","buttonEl","showControlsDialog","actionButtons","okButton","$31cf9b99c7a79e42$export$1426bb19337c692e","enact","reactorUnused","react","enactorUnused","allowEscape","escaperUnused","$31cf9b99c7a79e42$export$56070c78bbcda189","reactor","resolveAttackerDefender","enactor","escaper","displayAttack","attacker","defender","startPoint","pathModifier","undertakeAttack","defenderHP","traits","damage","interaction","$31cf9b99c7a79e42$export$efe6ccfe4b6f8278","alive","$31cf9b99c7a79e42$export$366210f9de782ba6","$0244e696098defc3$export$a82f6454288e7804","onClick","onContextClick","onPointerDown","onPointerUp","setOnClick","handler","setOnContextClick","setOnPointerDown","setOnPointerUp","actionPointerDown","actionPointerUp","$803bed4de7d49df0$export$f73d3eb6fd876d80","maxTilesPerMove","obstacle","isWandering","isPassableByActor","otherActorUnused","canShareLocationWithActor","pointUnused","$1e8586c4726fc461$export$17735bdb93cbf279","OFF","HERO","VELOCITY","$1e8586c4726fc461$export$39ca3bda943df04d","heroTracker","velocityTracker","trackingMethod","proportionSeparated","canvasDims","separation","setVelocity","vX","vY","setTrackingMethod","panBy","method","$54c6f0aaef62f1b7$export$763f95e026c05695","TR","BR","BL","TL","$54c6f0aaef62f1b7$export$5e8c6d32f039cdeb","cameraDolly","trackingButton","trackingButtonImage","gridSize","location","createButtonSet","createCentreButton","createArrowButtons","$3ce6241a7c9b35c7$export$2e2bcd8739ae039","addButton","setTrackingState","on","scrollSpeed","$54c6f0aaef62f1b7$var$SCROLL_TILES_PER_SEC","createMomentaryButton","imageNamePrefix","callbackDown","callbackUp","addMomentaryButton","$3ce6241a7c9b35c7$var$actors","$3ce6241a7c9b35c7$var$visible","$3ce6241a7c9b35c7$var$isHittingActor","actorCanvasPos","boundingBox","canvasBox","$3ce6241a7c9b35c7$var$resolvePointerUp","keyUnused","callbackOn","callbackOff","clear","removeButton","uiPos","resolvePointerCancel","resolvePointerDown","resolvePointerUp","setVisible","visibility","$2b83232840d61fcb$export$57244dfe9a4da758","GRINNING","SANTA","SHAKING","$f579d6f2ff49d46e$exports","URL","$5114bd1ce9a158d7$export$350d529e1ecdc71","DUNGEON_SCRIPT","$cfb969eb0974fd3f$var$AnimationDefns","DEAD","keyName","IDLE","WALK_NORTH","WALK_EAST","WALK_SOUTH","WALK_WEST","$cfb969eb0974fd3f$export$2e2bcd8739ae039","definitions","formFrameNameRoot","imageName","$ea4c834f4d2249c2$var$ActorTraitsRenderer","hp","hpMax","$ea4c834f4d2249c2$var$ActorStateAnimator","compassDir","aliveStatus","setActor","dir","getCurrentDirection","setAnimationForState","$05d58a132d6b5767$export$cf2deb104c051cb7","absAngle","$ea4c834f4d2249c2$var$createAnimatedActor","keyedAnimation","$ea4c834f4d2249c2$var$createStandardKeyFrames","keyedAnimations","anim","imageRenderer","traitsRenderer","getGridSize","$ea4c834f4d2249c2$var$ACTOR_MAP","create","$ea4c834f4d2249c2$var$createAnimatedFighter","$ea4c834f4d2249c2$var$createAnimatedTrader","$27af28d7e434b74b$export$7c548b14ef6e7713","matrix","rowIndex","columnIndex","centre","tl","above","tr","right","br","below","bl","$27af28d7e434b74b$export$f3448602f079b6d0","source","randomIndex","currentIndex","$aa430e5af6097d50$export$1b3c5bcd5a8a9304","WALL","DOOR_IN","DOOR_OUT","GROUND","VOID","$aa430e5af6097d50$var$Clarifiers","TOP_LEFT","TOP_LEFT_INTERNAL","TOP","TOP_RIGHT","TOP_RIGHT_INTERNAL","RIGHT","BOTTOM_RIGHT","BOTTOM_RIGHT_INTERNAL","BOTTOM","BOTTOM_LEFT","BOTTOM_LEFT_INTERNAL","LEFT","TOP_TEE","RIGHT_TEE","BOTTOM_TEE","LEFT_TEE","INTERNAL_CROSS","INTERNAL_VERTICAL","INTERNAL_HORIZONTAL","$aa430e5af6097d50$var$ShadowClarifier","BELOW_WALL","BELOW_END_WALL","$aa430e5af6097d50$export$5bb21ea01a6aaf38","entryPointByDoor","exitPointByDoor","generateTileMapPlan","design","symbolMap","tilePlan","convertToMatrix","clarifyMatrix","createPlan","nColumns","row","repeat","unambiguousMatrix","rowValue","correctedRow","colValue","colIndex","symbol","surrounds","includes","$aa430e5af6097d50$var$isGround","$aa430e5af6097d50$var$isPartOfWall","$aa430e5af6097d50$var$isEntrance","$aa430e5af6097d50$var$isExit","planMatrix","planRow","columnValue","$aa430e5af6097d50$var$getDesignInfo","match","fallbackSymbol","$aa430e5af6097d50$var$getFirstOfCohort","unclarifiedSymbol","prop","clarifier","shadowClarifier","$2d040b97465ee48e$export$3565eb3d00ca5a74","routes","setRouteToCoords","route","coordsToKey","getRouteToCoords","hasRouteToCoords","keyToGridPoint","reference","parseInt","callback","containsGridPoint","getWaypointsAsGridPoints","destination","points","slice","getWaypointsAsWorldPoints","waypoints","gridPointToWorldPoint","$2d040b97465ee48e$export$4c535f8fc4520664","getDumbRouteNextTo","startingGridPoint","targetGridPoint","maxMove","getAdjacentTarget","canGridPointBeOccupiedByActor","rotateGridPointAbout","dX","dY","waypoint","movingX","consecutiveFails","nextPoint","moved","getAllRoutesFrom","findRoutes","movesLeft","routePoints","isTilePassable","existingRoute","canTileBeOccupied","isGridPointPassableByActor","current","deltaX","deltaY","adjX","adjY","originPoint","$2d040b97465ee48e$export$e832cee54e4e1a4d","rayStartPoint","reachedPoints","lastStartPoint","lastBounds","findReachedTiles","getMapGridPointRect","getRayEnds","endPoint","traceRayToEnd","isGridPointInRays","rayEnds","col","steps","compassDirection","$05d58a132d6b5767$export$d9ac11c8e8c20b77","firstPoint","isSeeThrough","markReachedPoint","markReachedIfNotSeeThrough","$b8e5621826152c93$var$setScene","scene","$b8e5621826152c93$var$unloadScene","load","initialise","fullscreenElement","requestFullscreen","navigationUI","reject","exitFullscreen","unload","$b8e5621826152c93$var$getNextScene","$fee0c02ce96028b6$var$ParsedScene","$b8e5621826152c93$export$2e2bcd8739ae039","areThereMoreScenes","setCameraToTrack","panCameraBy","setSceneDefinitions","sceneDefns","switchToFirstScene","switchToNextScene","unloadCurrentScene","$76f86892cf60c694$var$SETTINGS","defValue","controlType","persistent","$ce5abd6ee7a09c2e$var$EventId","MAIN_MENU","CLICKED_FREE_GROUND","CLICKED_ENTRANCE","CLICKED_EXIT","$ce5abd6ee7a09c2e$var$ReplayableActorMover","originalPosition","routeFinder","moveInstantly","actorGridPos","targetGridPos","getRandomGridPosition","orthoSeparation","setActorsPosition","currentGrid","maxDistance","getDimsInTiles","restorePosition","replay","$ce5abd6ee7a09c2e$var$MovementReplayer","movers","addAndMoveActor","replayableMover","mover","$ce5abd6ee7a09c2e$var$State","transitionTo","state","onExit","$ce5abd6ee7a09c2e$var$currentState","onEntry","onEvent","eventIdUnused","$ce5abd6ee7a09c2e$var$AtMainMenu","play","settings","controls","setting","definition","control","$ce5abd6ee7a09c2e$var$AtStart","getWorldPositionOfTileByEntry","$ce5abd6ee7a09c2e$var$HeroTurnIdle","$ce5abd6ee7a09c2e$var$AtGameOver","secs","$ce5abd6ee7a09c2e$var$AtGameCompleted","$ce5abd6ee7a09c2e$var$prepareHeroTurn","eventId","detail","filter","$e5bc60fa707f771a$export$ea490c48f1c71643","COMBAT_TILE","$ce5abd6ee7a09c2e$var$moveHeroToPoint","$ce5abd6ee7a09c2e$var$ComputerTurnIdle","$ce5abd6ee7a09c2e$var$startNextScene","$ce5abd6ee7a09c2e$var$HeroTurnFighting","fight","tryToRun","getParticipants","$ce5abd6ee7a09c2e$var$ComputerTurnFighting","targets","getOccupants","values","opponent","replayer","heroGridPoint","actorGridPoint","participants","setMovementRoutes","setCombatActors","getWaypointsToWorldPoint","currentState","detailUnused","$ce5abd6ee7a09c2e$var$ignoreEvents","$ce5abd6ee7a09c2e$export$2e2bcd8739ae039","EventId","getHeroActor","setHero","triggerEvent","MOVEMENT_TILE","$e5bc60fa707f771a$export$b57fd20cbd2711c3","OBSTACLE","ENTRANCE","EXIT","$e5bc60fa707f771a$export$235cb65c20ad2b7","occupants","worldPoint","role","tileSprite","addOccupant","occupant","deleteOccupant","isOccupied","canBeOccupiedByActor","actorUnused","$e5bc60fa707f771a$export$16ec26812de3ce7a","tiles","tilesX","tilesY","movementRoutes","movementGridPoints","movementTileHighlighter","entrance","exit","entryGridPointByDoor","exitGridPointByDoor","randomGround","heroRayTracer","combatTileGridPoints","combatTileHighlighter","plan","tileRow","tileDefn","filterClick","processTileRole","gp","setRayTracer","visibleGridPoints","getVisibleGridPointRect","highlightTiles","hero","heroTile","heroTileRole","visibleBounds","gridPointTL","gridPointBR","minCol","maxCol","minRow","maxRow","getTileAtGridPoint","gridAlignedWorldPoint","halfGrid","getGridPositionOfEntrance","gridPoints","actors","highlightMovementTiles","highlightCombatTiles","clickHandler","getRandomFreeGroundTile","getSurroundingTiles","tileOccupants","$611de0d332640d82$var$createGroundDefn","$611de0d332640d82$var$createEntranceDefn","$611de0d332640d82$var$createExitDefn","$611de0d332640d82$export$7dccdb77f761a8ef","$3751b2d81c8b6353$export$765fdbac0eda2a0b","globalOpacity","fadeInSecs","fadeOutSecs","fadeOutResolve","heroActor","getOpacity","doLoad","doInitialise","fadeOut","doUnload","$fee0c02ce96028b6$var$GRID_SIZE","$fee0c02ce96028b6$export$2a8e6ebcf5b5c91","intro","enemies","mapDesign","sceneDefn","$fee0c02ce96028b6$var$createHero","clone","$fee0c02ce96028b6$var$createEnemies","enemy","$95c3fa23148200d5$export$74478a765f6f47fa","freeform","initialValues","setFromString","item","setAutoMaxValue","minMaxMatch","actorTraits","$95c3fa23148200d5$export$939a756f171fd090","initialTraits","$ff98e45c12875199$export$46f5471185d8bc9e","maxCols","maxRows","maxRoomCols","maxRoomRows","wallChr","floorChr","entranceChr","exitChr","landChr","dungeon","minCols","minRows","generate","lastLeftLandCols","lastRoomCols","maxLeftLand","leftLandCols","reqdMinRoomWidth","reqdMaxRoomWidth","roomCols","rightLandCols","roomRows","createRoom","removeInternalWalls","locateDoors","getMatrixAsStrings","columns","numberOfRows","internalRow","isVerticalWall","isHorizontalWall","possibleLocations","randomLocations","$a63c524e2668f377$var$SectionId","LEVEL","CAST","MAP","$a63c524e2668f377$var$AbstractSectionParser","lines","lineIndex","startLine","nextSectionId","getSectionIdFromLine","nextLineIndex","parseLine","findFirstSection","trim","lineUnused","toUpperCase","fatalError","ignoreError","$a63c524e2668f377$var$IntroParser","$a63c524e2668f377$var$HeroParser","parseShortFormHero","parseLongFormHero","matchResults","name","traitsDefn","lineIgnored","$a63c524e2668f377$var$CastParser","parseShortFormActor","parseLongFormActor","actorId","number","$a63c524e2668f377$var$MapParser","randomised","randomRegex","test","creator","$a63c524e2668f377$var$getParserForId","sectionId","$f6529945ae220c94$export$90ded0e426ce21","$f6529945ae220c94$export$3853e404217e8f25","$f6529945ae220c94$export$f1ed6970fd95c8d6","$f6529945ae220c94$export$a5ec1de9afad15ae","$f6529945ae220c94$export$d69198a72de4964d","$f6529945ae220c94$var$EventSource","MOUSE","TOUCH","$f6529945ae220c94$var$dispatchEvent","eventName","CustomEvent","dispatchEvent","$f6529945ae220c94$var$getOffsetFromTouch","getBoundingClientRect","touches","pageX","pageY","$f6529945ae220c94$var$processStartAction","eventSource","actionStarted","dragging","lastX","lastY","startX","startY","$f6529945ae220c94$var$processEndAction","$f6529945ae220c94$var$processMoveAction","suppressClickEvent","$e8347232c61bf163$exports","$a3a9222774fc4465$exports","$22a8782d7473db79$var$gameLoop","timeStamp","fps","requestAnimationFrame","$22a8782d7473db79$export$2e2bcd8739ae039","screenOptions","fallbackIndex","centreToBaseLine","getImageData","$22a8782d7473db79$var$setupListeners","dragData","lastTouchStartPoint","buttons","changedTouches","offset","mappedPositions","preventDefault","fetch","catch","reason","script","sectionHunt","parser"],"version":3,"file":"index.91e28fc6.js.map"}