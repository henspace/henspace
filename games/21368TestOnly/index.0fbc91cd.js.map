{"mappings":"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","sources":["node_modules/@parcel/runtime-browser-hmr/lib/runtime-063b36dfd2f4a8f5.js","src/scripts/index.js","src/scripts/utils/game/game.js","src/scripts/utils/game/screen.js","src/scripts/utils/text/fonts.js","node_modules/@parcel/transformer-js/src/esmodule-helpers.js","src/scripts/utils/geometry.js","src/scripts/utils/game/world.js","src/scripts/utils/game/hud.js","src/scripts/utils/sprites/animation.js","src/scripts/utils/sprites/imageManager.js","src/scripts/utils/time/clock.js","src/scripts/utils/arrays/indexer.js","src/scripts/utils/maths.js","src/scripts/utils/game/actors.js","src/scripts/utils/sprites/spriteRenderers.js","src/scripts/utils/text/text.js","src/scripts/utils/debug.js","src/scripts/utils/sprites/sprite.js","src/scripts/utils/ui/interactions.js","src/scripts/utils/text/emojis.js","src/scripts/utils/assetLoaders.js","node_modules/@parcel/runtime-js/lib/runtime-c9f91691264ee03e.js","node_modules/@parcel/runtime-js/lib/helpers/bundle-url.js","src/scripts/scriptReaders/scriptParser.js","src/scripts/scriptReaders/actorMap.js","src/scripts/scriptReaders/sceneDefinitionParser.js","src/assets/images/dungeon.json","node_modules/@parcel/runtime-js/lib/runtime-c291e2266c43f309.js","src/scripts/utils/tileMaps/tilePlan.js","src/scripts/utils/arrays/arrayManip.js","src/scripts/utils/tileMaps/tileMap.js","src/scripts/utils/tileMaps/pathFinder.js","src/scripts/utils/game/turnManager.js","src/scripts/utils/sprites/movers.js","src/scripts/utils/sprites/modifiers.js","src/scripts/utils/dom/ui.js","src/scripts/dnd/fighting.js","src/scripts/utils/effects/transient.js","src/scripts/utils/sprites/faders.js","src/scripts/utils/dice.js","src/scripts/scriptReaders/symbolMapping.js","src/scripts/dnd/traits.js","src/scripts/utils/game/scene.js","src/scripts/utils/game/sceneManager.js","src/scripts/utils/game/camera.js","src/scripts/utils/game/hudNavSet.js","src/scripts/utils/dom/pointerActions.js"],"sourcesContent":["var HMR_HOST = null;var HMR_PORT = null;var HMR_SECURE = false;var HMR_ENV_HASH = \"d6ea1d42532a7575\";module.bundle.HMR_BUNDLE_ID = \"6e8a5cd20fbc91cd\";\"use strict\";\n\n/* global HMR_HOST, HMR_PORT, HMR_ENV_HASH, HMR_SECURE, chrome, browser, __parcel__import__, __parcel__importScripts__, ServiceWorkerGlobalScope */\n/*::\nimport type {\n  HMRAsset,\n  HMRMessage,\n} from '@parcel/reporter-dev-server/src/HMRServer.js';\ninterface ParcelRequire {\n  (string): mixed;\n  cache: {|[string]: ParcelModule|};\n  hotData: {|[string]: mixed|};\n  Module: any;\n  parent: ?ParcelRequire;\n  isParcelRequire: true;\n  modules: {|[string]: [Function, {|[string]: string|}]|};\n  HMR_BUNDLE_ID: string;\n  root: ParcelRequire;\n}\ninterface ParcelModule {\n  hot: {|\n    data: mixed,\n    accept(cb: (Function) => void): void,\n    dispose(cb: (mixed) => void): void,\n    // accept(deps: Array<string> | string, cb: (Function) => void): void,\n    // decline(): void,\n    _acceptCallbacks: Array<(Function) => void>,\n    _disposeCallbacks: Array<(mixed) => void>,\n  |};\n}\ninterface ExtensionContext {\n  runtime: {|\n    reload(): void,\n    getURL(url: string): string;\n    getManifest(): {manifest_version: number, ...};\n  |};\n}\ndeclare var module: {bundle: ParcelRequire, ...};\ndeclare var HMR_HOST: string;\ndeclare var HMR_PORT: string;\ndeclare var HMR_ENV_HASH: string;\ndeclare var HMR_SECURE: boolean;\ndeclare var chrome: ExtensionContext;\ndeclare var browser: ExtensionContext;\ndeclare var __parcel__import__: (string) => Promise<void>;\ndeclare var __parcel__importScripts__: (string) => Promise<void>;\ndeclare var globalThis: typeof self;\ndeclare var ServiceWorkerGlobalScope: Object;\n*/\nvar OVERLAY_ID = '__parcel__error__overlay__';\nvar OldModule = module.bundle.Module;\nfunction Module(moduleName) {\n  OldModule.call(this, moduleName);\n  this.hot = {\n    data: module.bundle.hotData[moduleName],\n    _acceptCallbacks: [],\n    _disposeCallbacks: [],\n    accept: function (fn) {\n      this._acceptCallbacks.push(fn || function () {});\n    },\n    dispose: function (fn) {\n      this._disposeCallbacks.push(fn);\n    }\n  };\n  module.bundle.hotData[moduleName] = undefined;\n}\nmodule.bundle.Module = Module;\nmodule.bundle.hotData = {};\nvar checkedAssets /*: {|[string]: boolean|} */, assetsToDispose /*: Array<[ParcelRequire, string]> */, assetsToAccept /*: Array<[ParcelRequire, string]> */;\n\nfunction getHostname() {\n  return HMR_HOST || (location.protocol.indexOf('http') === 0 ? location.hostname : 'localhost');\n}\nfunction getPort() {\n  return HMR_PORT || location.port;\n}\n\n// eslint-disable-next-line no-redeclare\nvar parent = module.bundle.parent;\nif ((!parent || !parent.isParcelRequire) && typeof WebSocket !== 'undefined') {\n  var hostname = getHostname();\n  var port = getPort();\n  var protocol = HMR_SECURE || location.protocol == 'https:' && !/localhost|127.0.0.1|0.0.0.0/.test(hostname) ? 'wss' : 'ws';\n  var ws;\n  try {\n    ws = new WebSocket(protocol + '://' + hostname + (port ? ':' + port : '') + '/');\n  } catch (err) {\n    if (err.message) {\n      console.error(err.message);\n    }\n    ws = {};\n  }\n\n  // Web extension context\n  var extCtx = typeof browser === 'undefined' ? typeof chrome === 'undefined' ? null : chrome : browser;\n\n  // Safari doesn't support sourceURL in error stacks.\n  // eval may also be disabled via CSP, so do a quick check.\n  var supportsSourceURL = false;\n  try {\n    (0, eval)('throw new Error(\"test\"); //# sourceURL=test.js');\n  } catch (err) {\n    supportsSourceURL = err.stack.includes('test.js');\n  }\n\n  // $FlowFixMe\n  ws.onmessage = async function (event /*: {data: string, ...} */) {\n    checkedAssets = {} /*: {|[string]: boolean|} */;\n    assetsToAccept = [];\n    assetsToDispose = [];\n    var data /*: HMRMessage */ = JSON.parse(event.data);\n    if (data.type === 'update') {\n      // Remove error overlay if there is one\n      if (typeof document !== 'undefined') {\n        removeErrorOverlay();\n      }\n      let assets = data.assets.filter(asset => asset.envHash === HMR_ENV_HASH);\n\n      // Handle HMR Update\n      let handled = assets.every(asset => {\n        return asset.type === 'css' || asset.type === 'js' && hmrAcceptCheck(module.bundle.root, asset.id, asset.depsByBundle);\n      });\n      if (handled) {\n        console.clear();\n\n        // Dispatch custom event so other runtimes (e.g React Refresh) are aware.\n        if (typeof window !== 'undefined' && typeof CustomEvent !== 'undefined') {\n          window.dispatchEvent(new CustomEvent('parcelhmraccept'));\n        }\n        await hmrApplyUpdates(assets);\n\n        // Dispose all old assets.\n        let processedAssets = {} /*: {|[string]: boolean|} */;\n        for (let i = 0; i < assetsToDispose.length; i++) {\n          let id = assetsToDispose[i][1];\n          if (!processedAssets[id]) {\n            hmrDispose(assetsToDispose[i][0], id);\n            processedAssets[id] = true;\n          }\n        }\n\n        // Run accept callbacks. This will also re-execute other disposed assets in topological order.\n        processedAssets = {};\n        for (let i = 0; i < assetsToAccept.length; i++) {\n          let id = assetsToAccept[i][1];\n          if (!processedAssets[id]) {\n            hmrAccept(assetsToAccept[i][0], id);\n            processedAssets[id] = true;\n          }\n        }\n      } else fullReload();\n    }\n    if (data.type === 'error') {\n      // Log parcel errors to console\n      for (let ansiDiagnostic of data.diagnostics.ansi) {\n        let stack = ansiDiagnostic.codeframe ? ansiDiagnostic.codeframe : ansiDiagnostic.stack;\n        console.error('🚨 [parcel]: ' + ansiDiagnostic.message + '\\n' + stack + '\\n\\n' + ansiDiagnostic.hints.join('\\n'));\n      }\n      if (typeof document !== 'undefined') {\n        // Render the fancy html overlay\n        removeErrorOverlay();\n        var overlay = createErrorOverlay(data.diagnostics.html);\n        // $FlowFixMe\n        document.body.appendChild(overlay);\n      }\n    }\n  };\n  ws.onerror = function (e) {\n    if (e.message) {\n      console.error(e.message);\n    }\n  };\n  ws.onclose = function () {\n    console.warn('[parcel] 🚨 Connection to the HMR server was lost');\n  };\n}\nfunction removeErrorOverlay() {\n  var overlay = document.getElementById(OVERLAY_ID);\n  if (overlay) {\n    overlay.remove();\n    console.log('[parcel] ✨ Error resolved');\n  }\n}\nfunction createErrorOverlay(diagnostics) {\n  var overlay = document.createElement('div');\n  overlay.id = OVERLAY_ID;\n  let errorHTML = '<div style=\"background: black; opacity: 0.85; font-size: 16px; color: white; position: fixed; height: 100%; width: 100%; top: 0px; left: 0px; padding: 30px; font-family: Menlo, Consolas, monospace; z-index: 9999;\">';\n  for (let diagnostic of diagnostics) {\n    let stack = diagnostic.frames.length ? diagnostic.frames.reduce((p, frame) => {\n      return `${p}\n<a href=\"/__parcel_launch_editor?file=${encodeURIComponent(frame.location)}\" style=\"text-decoration: underline; color: #888\" onclick=\"fetch(this.href); return false\">${frame.location}</a>\n${frame.code}`;\n    }, '') : diagnostic.stack;\n    errorHTML += `\n      <div>\n        <div style=\"font-size: 18px; font-weight: bold; margin-top: 20px;\">\n          🚨 ${diagnostic.message}\n        </div>\n        <pre>${stack}</pre>\n        <div>\n          ${diagnostic.hints.map(hint => '<div>💡 ' + hint + '</div>').join('')}\n        </div>\n        ${diagnostic.documentation ? `<div>📝 <a style=\"color: violet\" href=\"${diagnostic.documentation}\" target=\"_blank\">Learn more</a></div>` : ''}\n      </div>\n    `;\n  }\n  errorHTML += '</div>';\n  overlay.innerHTML = errorHTML;\n  return overlay;\n}\nfunction fullReload() {\n  if ('reload' in location) {\n    location.reload();\n  } else if (extCtx && extCtx.runtime && extCtx.runtime.reload) {\n    extCtx.runtime.reload();\n  }\n}\nfunction getParents(bundle, id) /*: Array<[ParcelRequire, string]> */{\n  var modules = bundle.modules;\n  if (!modules) {\n    return [];\n  }\n  var parents = [];\n  var k, d, dep;\n  for (k in modules) {\n    for (d in modules[k][1]) {\n      dep = modules[k][1][d];\n      if (dep === id || Array.isArray(dep) && dep[dep.length - 1] === id) {\n        parents.push([bundle, k]);\n      }\n    }\n  }\n  if (bundle.parent) {\n    parents = parents.concat(getParents(bundle.parent, id));\n  }\n  return parents;\n}\nfunction updateLink(link) {\n  var href = link.getAttribute('href');\n  if (!href) {\n    return;\n  }\n  var newLink = link.cloneNode();\n  newLink.onload = function () {\n    if (link.parentNode !== null) {\n      // $FlowFixMe\n      link.parentNode.removeChild(link);\n    }\n  };\n  newLink.setAttribute('href',\n  // $FlowFixMe\n  href.split('?')[0] + '?' + Date.now());\n  // $FlowFixMe\n  link.parentNode.insertBefore(newLink, link.nextSibling);\n}\nvar cssTimeout = null;\nfunction reloadCSS() {\n  if (cssTimeout) {\n    return;\n  }\n  cssTimeout = setTimeout(function () {\n    var links = document.querySelectorAll('link[rel=\"stylesheet\"]');\n    for (var i = 0; i < links.length; i++) {\n      // $FlowFixMe[incompatible-type]\n      var href /*: string */ = links[i].getAttribute('href');\n      var hostname = getHostname();\n      var servedFromHMRServer = hostname === 'localhost' ? new RegExp('^(https?:\\\\/\\\\/(0.0.0.0|127.0.0.1)|localhost):' + getPort()).test(href) : href.indexOf(hostname + ':' + getPort());\n      var absolute = /^https?:\\/\\//i.test(href) && href.indexOf(location.origin) !== 0 && !servedFromHMRServer;\n      if (!absolute) {\n        updateLink(links[i]);\n      }\n    }\n    cssTimeout = null;\n  }, 50);\n}\nfunction hmrDownload(asset) {\n  if (asset.type === 'js') {\n    if (typeof document !== 'undefined') {\n      let script = document.createElement('script');\n      script.src = asset.url + '?t=' + Date.now();\n      if (asset.outputFormat === 'esmodule') {\n        script.type = 'module';\n      }\n      return new Promise((resolve, reject) => {\n        var _document$head;\n        script.onload = () => resolve(script);\n        script.onerror = reject;\n        (_document$head = document.head) === null || _document$head === void 0 || _document$head.appendChild(script);\n      });\n    } else if (typeof importScripts === 'function') {\n      // Worker scripts\n      if (asset.outputFormat === 'esmodule') {\n        return __parcel__import__(asset.url + '?t=' + Date.now());\n      } else {\n        return new Promise((resolve, reject) => {\n          try {\n            __parcel__importScripts__(asset.url + '?t=' + Date.now());\n            resolve();\n          } catch (err) {\n            reject(err);\n          }\n        });\n      }\n    }\n  }\n}\nasync function hmrApplyUpdates(assets) {\n  global.parcelHotUpdate = Object.create(null);\n  let scriptsToRemove;\n  try {\n    // If sourceURL comments aren't supported in eval, we need to load\n    // the update from the dev server over HTTP so that stack traces\n    // are correct in errors/logs. This is much slower than eval, so\n    // we only do it if needed (currently just Safari).\n    // https://bugs.webkit.org/show_bug.cgi?id=137297\n    // This path is also taken if a CSP disallows eval.\n    if (!supportsSourceURL) {\n      let promises = assets.map(asset => {\n        var _hmrDownload;\n        return (_hmrDownload = hmrDownload(asset)) === null || _hmrDownload === void 0 ? void 0 : _hmrDownload.catch(err => {\n          // Web extension fix\n          if (extCtx && extCtx.runtime && extCtx.runtime.getManifest().manifest_version == 3 && typeof ServiceWorkerGlobalScope != 'undefined' && global instanceof ServiceWorkerGlobalScope) {\n            extCtx.runtime.reload();\n            return;\n          }\n          throw err;\n        });\n      });\n      scriptsToRemove = await Promise.all(promises);\n    }\n    assets.forEach(function (asset) {\n      hmrApply(module.bundle.root, asset);\n    });\n  } finally {\n    delete global.parcelHotUpdate;\n    if (scriptsToRemove) {\n      scriptsToRemove.forEach(script => {\n        if (script) {\n          var _document$head2;\n          (_document$head2 = document.head) === null || _document$head2 === void 0 || _document$head2.removeChild(script);\n        }\n      });\n    }\n  }\n}\nfunction hmrApply(bundle /*: ParcelRequire */, asset /*:  HMRAsset */) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n  if (asset.type === 'css') {\n    reloadCSS();\n  } else if (asset.type === 'js') {\n    let deps = asset.depsByBundle[bundle.HMR_BUNDLE_ID];\n    if (deps) {\n      if (modules[asset.id]) {\n        // Remove dependencies that are removed and will become orphaned.\n        // This is necessary so that if the asset is added back again, the cache is gone, and we prevent a full page reload.\n        let oldDeps = modules[asset.id][1];\n        for (let dep in oldDeps) {\n          if (!deps[dep] || deps[dep] !== oldDeps[dep]) {\n            let id = oldDeps[dep];\n            let parents = getParents(module.bundle.root, id);\n            if (parents.length === 1) {\n              hmrDelete(module.bundle.root, id);\n            }\n          }\n        }\n      }\n      if (supportsSourceURL) {\n        // Global eval. We would use `new Function` here but browser\n        // support for source maps is better with eval.\n        (0, eval)(asset.output);\n      }\n\n      // $FlowFixMe\n      let fn = global.parcelHotUpdate[asset.id];\n      modules[asset.id] = [fn, deps];\n    } else if (bundle.parent) {\n      hmrApply(bundle.parent, asset);\n    }\n  }\n}\nfunction hmrDelete(bundle, id) {\n  let modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n  if (modules[id]) {\n    // Collect dependencies that will become orphaned when this module is deleted.\n    let deps = modules[id][1];\n    let orphans = [];\n    for (let dep in deps) {\n      let parents = getParents(module.bundle.root, deps[dep]);\n      if (parents.length === 1) {\n        orphans.push(deps[dep]);\n      }\n    }\n\n    // Delete the module. This must be done before deleting dependencies in case of circular dependencies.\n    delete modules[id];\n    delete bundle.cache[id];\n\n    // Now delete the orphans.\n    orphans.forEach(id => {\n      hmrDelete(module.bundle.root, id);\n    });\n  } else if (bundle.parent) {\n    hmrDelete(bundle.parent, id);\n  }\n}\nfunction hmrAcceptCheck(bundle /*: ParcelRequire */, id /*: string */, depsByBundle /*: ?{ [string]: { [string]: string } }*/) {\n  if (hmrAcceptCheckOne(bundle, id, depsByBundle)) {\n    return true;\n  }\n\n  // Traverse parents breadth first. All possible ancestries must accept the HMR update, or we'll reload.\n  let parents = getParents(module.bundle.root, id);\n  let accepted = false;\n  while (parents.length > 0) {\n    let v = parents.shift();\n    let a = hmrAcceptCheckOne(v[0], v[1], null);\n    if (a) {\n      // If this parent accepts, stop traversing upward, but still consider siblings.\n      accepted = true;\n    } else {\n      // Otherwise, queue the parents in the next level upward.\n      let p = getParents(module.bundle.root, v[1]);\n      if (p.length === 0) {\n        // If there are no parents, then we've reached an entry without accepting. Reload.\n        accepted = false;\n        break;\n      }\n      parents.push(...p);\n    }\n  }\n  return accepted;\n}\nfunction hmrAcceptCheckOne(bundle /*: ParcelRequire */, id /*: string */, depsByBundle /*: ?{ [string]: { [string]: string } }*/) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n  if (depsByBundle && !depsByBundle[bundle.HMR_BUNDLE_ID]) {\n    // If we reached the root bundle without finding where the asset should go,\n    // there's nothing to do. Mark as \"accepted\" so we don't reload the page.\n    if (!bundle.parent) {\n      return true;\n    }\n    return hmrAcceptCheck(bundle.parent, id, depsByBundle);\n  }\n  if (checkedAssets[id]) {\n    return true;\n  }\n  checkedAssets[id] = true;\n  var cached = bundle.cache[id];\n  assetsToDispose.push([bundle, id]);\n  if (!cached || cached.hot && cached.hot._acceptCallbacks.length) {\n    assetsToAccept.push([bundle, id]);\n    return true;\n  }\n}\nfunction hmrDispose(bundle /*: ParcelRequire */, id /*: string */) {\n  var cached = bundle.cache[id];\n  bundle.hotData[id] = {};\n  if (cached && cached.hot) {\n    cached.hot.data = bundle.hotData[id];\n  }\n  if (cached && cached.hot && cached.hot._disposeCallbacks.length) {\n    cached.hot._disposeCallbacks.forEach(function (cb) {\n      cb(bundle.hotData[id]);\n    });\n  }\n  delete bundle.cache[id];\n}\nfunction hmrAccept(bundle /*: ParcelRequire */, id /*: string */) {\n  // Execute the module.\n  bundle(id);\n\n  // Run the accept callbacks in the new version of the module.\n  var cached = bundle.cache[id];\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    cached.hot._acceptCallbacks.forEach(function (cb) {\n      var assetsToAlsoAccept = cb(function () {\n        return getParents(module.bundle.root, id);\n      });\n      if (assetsToAlsoAccept && assetsToAccept.length) {\n        assetsToAlsoAccept.forEach(function (a) {\n          hmrDispose(a[0], a[1]);\n        });\n\n        // $FlowFixMe[method-unbinding]\n        assetsToAccept.push.apply(assetsToAccept, assetsToAlsoAccept);\n      }\n    });\n  }\n}","/**\n * @file Main entry point\n *\n * @module index\n *\n * @license\n * {@link https://opensource.org/license/mit/|MIT}\n *\n * Copyright 2024 Steve Butler\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the “Software”), to deal in\n * the Software without restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n * Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */\nimport GAME from './utils/game/game.js';\n\nwindow.addEventListener('load', () => {\n  const DESIGN_WIDTH = 640;\n  const DESIGN_HEIGHT = 480;\n  GAME.initialise({\n    width: DESIGN_WIDTH,\n    height: DESIGN_HEIGHT,\n    maxScale: 2,\n    minScale: 1,\n    sizingMethod: 'COVER',\n    alpha: false,\n  });\n});\n","/**\n * @file The main game. This is a singleton as there can only be a single game.\n *\n * @module utils/game/game\n *\n * @license\n * {@link https://opensource.org/license/mit/|MIT}\n *\n * Copyright 2024 Steve Butler\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the “Software”), to deal in\n * the Software without restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n * Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */\nimport SCREEN from './screen.js';\nimport WORLD from './world.js';\nimport HUD from './hud.js';\nimport { checkEmojis } from '../text/emojis.js';\nimport GAME_CLOCK from '../time/clock.js';\nimport * as debug from '../debug.js';\nimport * as text from '../text/text.js';\nimport * as assetLoaders from '../assetLoaders.js';\nimport parseScript from '../../scriptReaders/scriptParser.js';\nimport SCENE_MANAGER from '../game/sceneManager.js';\nimport UI from '../dom/ui.js';\nimport { CameraDolly } from './camera.js';\nimport { NavigationButtons, NavigationLocation } from './hudNavSet.js';\nimport * as pointerActions from '../dom/pointerActions.js';\n\n/** @type {DOMHighResTimeStamp} */\nlet lastTimeStamp;\n\n/**\n * @type {import('./scene.js').Scene}\n */\nlet currentScene;\n\n/**\n * @type {boolean}\n */\nlet updateScene = false;\n\n/** @type {import('../sprites/sprite.js').Sprite}  */\nlet cameraDolly;\n\n/** @type {NavigationButtons} */\nlet navigationButtons;\n\n/**\n * Initialise the game engine.\n * @param {Object} screenOptions - @see {@link module:utils/game/screen~setScreen} for\n * details of options.\n */\nasync function initialise(screenOptions) {\n  SCREEN.setOptions(screenOptions);\n  checkEmojis(SCREEN.getContext2D());\n  setupListeners();\n  // Need a menu here but for now, just load the test screen.\n  UI.showOkDialog('Welcome to the Scripted Dungeon', \"Let's start\")\n    .then(() => assetLoaders.loadTextFromUrl(assetLoaders.Urls.DUNGEON_SCRIPT))\n    .then((script) => {\n      SCENE_MANAGER.setSceneDefinitions(parseScript(script));\n      setScene(SCENE_MANAGER.getScene(0));\n    })\n    .catch((error) => alert(error.message));\n}\n\n/**\n * Set up the listeners.\n */\nfunction setupListeners() {\n  const canvas = SCREEN.getCanvas();\n  pointerActions.addPointerListeners(canvas);\n\n  canvas.addEventListener(pointerActions.CUSTOM_CLICK_EVENT_NAME, (event) => {\n    const x = event.detail.x;\n    const y = event.detail.y;\n    const mappedPositions = SCREEN.uiCoordsToMappedPositions(x, y);\n    console.debug(\n      `Canvas click at (${x}, ${y}): canvas (${mappedPositions.canvas.x}, ${mappedPositions.canvas.y}), world (${mappedPositions.world.x}, ${mappedPositions.world.y})`\n    );\n    if (!HUD.resolveClick(mappedPositions)) {\n      WORLD.resolveClick(mappedPositions);\n    }\n  });\n\n  canvas.addEventListener(\n    pointerActions.CUSTOM_POINTER_DOWN_EVENT_NAME,\n    (event) => {\n      const x = event.detail.x;\n      const y = event.detail.y;\n      const mappedPositions = SCREEN.uiCoordsToMappedPositions(x, y);\n      console.debug(\n        `Canvas pointer down at (${x}, ${y}): canvas (${mappedPositions.canvas.x}, ${mappedPositions.canvas.y}), world (${mappedPositions.world.x}, ${mappedPositions.world.y})`\n      );\n      HUD.resolvePointerDown(mappedPositions);\n    }\n  );\n\n  canvas.addEventListener(\n    pointerActions.CUSTOM_POINTER_UP_EVENT_NAME,\n    (event) => {\n      const x = event.detail.x;\n      const y = event.detail.y;\n      const mappedPositions = SCREEN.uiCoordsToMappedPositions(x, y);\n      console.debug(\n        `Canvas pointer up at (${x}, ${y}): canvas (${mappedPositions.canvas.x}, ${mappedPositions.canvas.y}), world (${mappedPositions.world.x}, ${mappedPositions.world.y})`\n      );\n      HUD.resolvePointerUp(mappedPositions);\n    }\n  );\n}\n\n/** Set the current scene, unloading any existing scene\n * @param {import('./scene.js').Scene} scene\n */\nfunction setScene(scene) {\n  updateScene = false;\n  unloadScene(currentScene)\n    .then(() => loadScene(scene))\n    .then(() => start());\n}\n\n/**\n * Load scene\n * @param {import('./scene.js').Scene} scene\n * @returns {Promise} fulfills to null\n */\nfunction loadScene(scene) {\n  currentScene = scene;\n  return scene\n    .load()\n    .then(() => scene.initialise())\n    .then(() => createHud());\n}\n\n/**\n * Unload scene\n * @param {import('./scene.js').Scene} scene\n * @returns {Promise} fulfills to null\n */\nfunction unloadScene(scene) {\n  if (scene) {\n    return scene.unload().then(() => clearHud());\n  } else {\n    return Promise.resolve(null);\n  }\n}\n\nfunction start() {\n  updateScene = true;\n  window.requestAnimationFrame(gameLoop);\n}\n\n/**\n * Create the HUD\n */\nfunction createHud() {\n  if (!navigationButtons) {\n    navigationButtons = new NavigationButtons(\n      cameraDolly,\n      48,\n      NavigationLocation.BR\n    );\n  }\n  HUD.setVisible(true);\n}\n\n/**\n * Clear the HUD.\n */\nfunction clearHud() {\n  HUD.clear();\n  HUD.setVisible(false);\n}\n\n/**\n * Main animation loop.\n * @param {DOMHighResTimeStamp} timeStamp\n */\nfunction gameLoop(timeStamp) {\n  if (!updateScene) {\n    return;\n  }\n  GAME_CLOCK.updateTimeNow(timeStamp);\n  if (lastTimeStamp) {\n    const deltaSeconds = (timeStamp - lastTimeStamp) / 1000;\n    SCREEN.clearCanvas();\n    SCREEN.setOpacity(currentScene.getOpacity());\n    WORLD.update(deltaSeconds);\n    currentScene.update(deltaSeconds);\n    SCREEN.setOpacity(1);\n    HUD.update(deltaSeconds);\n    cameraDolly?.update(deltaSeconds);\n    if (debug.OPTIONS.showFps) {\n      showFps(1 / deltaSeconds);\n    }\n  }\n\n  lastTimeStamp = timeStamp;\n  window.requestAnimationFrame(gameLoop);\n}\n\n/**\n * Show frames per second on screen.\n * @param {number} fps - frames per second\n */\nfunction showFps(fps) {\n  text.writeText(\n    SCREEN.getContext2D(),\n    `FPS: ${Math.round(fps)}`,\n    {\n      x: 0,\n      y: SCREEN.getCanvasDimensions().height,\n    },\n    { color: 'green' }\n  );\n}\n\n/**\n * Set camera dolly\n * @param {import('../sprites/sprite.js').Sprite} sprite\n * @param {number} speed - See {@link module:utils/game/camera.createCameraDolly}\n * @param {number} proportionSeparated - See {@link module:utils/game/camera.createCameraDolly}\n */\nfunction setCameraToTrack(sprite, speed, proportionSeparated) {\n  cameraDolly = new CameraDolly(sprite, speed, proportionSeparated);\n}\n\n/**\n * The game singleton\n */\nconst GAME = {\n  initialise: initialise,\n  setScene: setScene,\n  setCameraToTrack: setCameraToTrack,\n};\n\nexport default GAME;\n","/**\n * @file Utilities for handling the screen size. The screen is implemented as\n * a singleton.\n * The game is configured as a world and a screen. The screen is the area that is\n * rendered with a canvas. The world is the total space in which objects can\n * exist. The world is potentially unbounded.\n *\n * The canvas is set to the same size as the screen and then the canvas is\n * resized to fit the display using CSS.\n *\n * The canvas is centred on the camera, so although the canvas rect and screen\n * rect are the same size, the screen always has its top left at 0, 0 in the world\n * whereas the canvas rect may effectively move around the world.\n *\n * @module utils/screen\n *\n * @license\n * {@link https://opensource.org/license/mit/|MIT}\n *\n * Copyright 2024 Steve Butler\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the “Software”), to deal in\n * the Software without restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n * Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */\n\nimport * as fonts from '../text/fonts.js';\nimport { Position, Rectangle } from '../geometry.js';\n\n/**\n * @typedef {Object} ScreenDetails\n * @property {HTMLCanvasElement} canvas\n * @property {number} width\n * @property {number} height\n * @property {number} x\n * @property {number} y\n */\nlet throttleTimer = null;\n\nlet canvas = null;\nlet canvasRect = null;\nlet canvasHalfWidth = 0;\nlet canvasHalfHeight = 0;\nlet canvasAlpha = true;\nlet visibleCanvasRect = null;\nlet glass = null;\nlet glassClickListener = null;\nlet glassRect = new Rectangle(0, 0, 0, 0);\nlet left = 0;\nlet top = 0;\n//let screenRect;\nlet scale = 1;\nlet maxScale = 1;\nlet minScale = 0.1;\nlet sizingMethod = 'COVER';\nlet cameraPosition = new Position(0, 0, 0);\n\n/**\n * Add event listener to handle resizing of the window.\n */\nwindow.addEventListener('resize', () => {\n  if (throttleTimer !== null) {\n    return; // it will get handled.\n  }\n  throttleTimer = window.setTimeout(() => {\n    throttleTimer = null;\n    sizeScreen();\n    sizeGlass();\n  }, 200);\n});\n\n/**\n * @param {Object} options - config options.\n * @param {number} options.width - the design width for the screen.\n * @param {number} options.height - the design height for the page.\n * @param {number} options.maxScale - maximum scaling allowed\n * @param {string} options.sizingMethod  - 'FIT' or 'COVER'. Defaults to 'FIT'\n * @param {boolean} options.alpha - Should canvas have an alpha channel\n */\nfunction setOptions(options) {\n  if (canvas) {\n    console.error('Multiple calls to setScreen ignored.');\n    return;\n  }\n  fonts.initialise(options.width);\n  canvas = document.createElement('canvas');\n  canvas.setAttribute('width', options.width);\n  canvas.setAttribute('height', options.height);\n  canvas.innerText = 'Loading the app.';\n  canvasRect = new Rectangle(0, 0, options.width, options.height);\n  canvasHalfWidth = options.width / 2;\n  canvasHalfHeight = options.height / 2;\n\n  document.body.appendChild(canvas);\n\n  canvas.style.position = 'absolute';\n\n  maxScale = options.maxScale;\n  minScale = options.minScale;\n  sizingMethod = options.sizingMethod;\n  canvasAlpha = options.alpha;\n  sizeScreen();\n  addGlass();\n  sizeGlass();\n}\n\n/**\n * Create a Dom layer over the canvas\n */\nfunction addGlass() {\n  glass = document.createElement('div');\n  glass.id = 'glass';\n  document.body.appendChild(glass);\n  glass.style.display = 'none';\n  glass.style.position = 'absolute';\n  const content = document.createElement('div');\n  content.id = 'glass-content';\n  glass.appendChild(content);\n}\n\n/**\n * Size the screen\n * @param {number} aspectRatio - aspect ratio (width / height) of the screen\n * @param {number} windowAspectRatio - aspect ratio (width / height) of the screen\n * @param {string} method - FIT or COVER. Defaults to FIT\n */\nfunction shouldFitHeight(aspectRatio, windowAspectRatio, sizingMethod) {\n  if (sizingMethod === 'COVER') {\n    return aspectRatio > windowAspectRatio;\n  } else {\n    return aspectRatio < windowAspectRatio;\n  }\n}\n/**\n * Resize the screen according to the current inner window dimensions.\n */\nfunction sizeScreen() {\n  const windowWidth = window.innerWidth;\n  const windowHeight = window.innerHeight;\n  let aspectRatio = canvasRect.width / canvasRect.height;\n  let displayedHeight = 0;\n  let displayedWidth = 0;\n  const windowAspectRatio = windowWidth / windowHeight;\n  const fitHeight = shouldFitHeight(\n    aspectRatio,\n    windowAspectRatio,\n    sizingMethod\n  );\n  if (fitHeight) {\n    displayedHeight = windowHeight;\n    displayedWidth = displayedHeight * aspectRatio;\n  } else {\n    displayedWidth = windowWidth;\n    displayedHeight = displayedWidth / aspectRatio;\n  }\n\n  scale = displayedWidth / canvasRect.width;\n  if (scale > maxScale) {\n    scale = maxScale;\n    displayedWidth = scale * canvasRect.width;\n    displayedHeight = scale * canvasRect.height;\n  } else if (scale < minScale) {\n    scale = minScale;\n    displayedWidth = scale * canvasRect.width;\n    displayedHeight = scale * canvasRect.height;\n  }\n\n  left = (windowWidth - displayedWidth) / 2;\n  top = (windowHeight - displayedHeight) / 2;\n\n  canvas.style.left = `${left}px`;\n  canvas.style.top = `${top}px`;\n  canvas.style.width = `${displayedWidth}px`;\n  canvas.style.height = `${displayedHeight}px`;\n\n  const visibleCanvasWidth = Math.min(\n    windowWidth / scale,\n    displayedWidth / scale\n  );\n  const visibleCanvasHeight = Math.min(\n    windowHeight / scale,\n    displayedHeight / scale\n  );\n  const visibleCanvasOffsetX = 0.5 * (canvasRect.width - visibleCanvasWidth);\n  const visibleCanvasOffsetY = 0.5 * (canvasRect.height - visibleCanvasHeight);\n  visibleCanvasRect = new Rectangle(\n    visibleCanvasOffsetX,\n    visibleCanvasOffsetY,\n    visibleCanvasWidth,\n    visibleCanvasHeight\n  );\n}\n\n/**\n * Size the glass layer to fit over the screen\n */\nfunction sizeGlass() {\n  const windowWidth = window.innerWidth;\n  const windowHeight = window.innerHeight;\n  const left = Math.max(parseInt(canvas.style.left), 0);\n  const top = Math.max(parseInt(canvas.style.top), 0);\n  const width = Math.min(parseInt(canvas.style.width), windowWidth);\n  const height = Math.min(parseInt(canvas.style.height), windowHeight);\n  glass.style.left = `${left}px`;\n  glass.style.top = `${top}px`;\n  glass.style.width = `${width}px`;\n  glass.style.height = `${height}px`;\n  syncDomFonts();\n  glassRect = new Rectangle(left, top, width, height);\n}\n\n/**\n * Adjust the font sizes to ensure glass in sync with canvas.\n */\nfunction syncDomFonts() {\n  const rootFontSize = fonts.getRootFontSize() * scale;\n  document.documentElement.style.fontSize = `${rootFontSize}px`;\n}\n\n/**\n * @typedef {Object} screenDetails\n * @property {HTMLCanvasElement} canvas\n * @property {number} width - design width\n * @property {number} height - design height\n */\n\n/**\n * Clear the canvas.\n */\nfunction clearCanvas() {\n  getContext2D().clearRect(0, 0, canvasRect.width, canvasRect.height);\n}\n\n/**\n * Get the bounds of the world that are plotted in the canvas.\n * @returns {Rectangle}\n */\nfunction geWorldInCanvasBounds() {\n  return new Rectangle(\n    cameraPosition.x,\n    cameraPosition.y,\n    canvasRect.width,\n    canvasRect.height\n  );\n}\n\n/**\n * Get visible canvas bounds.\n */\nfunction getVisibleCanvasBounds() {\n  let left = (glassRect.x - canvasRect.x) * scale;\n  let top = (glassRect.y - canvasRect.y) * scale;\n  let right = left + glassRect.width * scale;\n  let bottom = top + glassRect.height * scale;\n  // now clip\n  left = Math.max(left, canvasRect.x);\n  top = Math.max(top, canvasRect.y);\n  right = Math.min(right, canvasRect.x + canvasRect.width);\n  bottom = Math.min(bottom, canvasRect.y + canvasRect.height);\n  return new Rectangle(left, top, right - left, bottom - top);\n}\n\n/**\n * Get canvas dimensions.\n * @returns {Dims2D}\n */\nfunction getCanvasDimensions() {\n  return { width: canvasRect.width, height: canvasRect.height };\n}\n\n/**\n * Get the canvas context.\n * @returns {CanvasRenderingContext2D}\n */\nfunction getContext2D() {\n  return canvas.getContext('2d', { alpha: canvasAlpha });\n}\n\n/**\n * Set the content of the glass layer. This clears the glass first.\n * @param {HTMLElement} element\n * @param {function} onClick - callback if glass clicked.\n */\nfunction displayOnGlass(element, onClick) {\n  wipeGlass();\n  const content = document.getElementById('glass-content');\n  content.replaceChildren(element);\n  glass.style.display = 'block';\n  if (onClick) {\n    content.addEventListener('click', onClick);\n    glassClickListener = onClick;\n  }\n}\n\n/**\n * Clear and close the glass layer. The layer is hidden and it's content removed.\n */\nfunction wipeGlass() {\n  const content = document.getElementById('glass-content');\n  content.innerHTML = '';\n  glass.style.display = 'none';\n  if (glassClickListener) {\n    content.removeEventListener('click', glassClickListener);\n  }\n}\n\n/**\n * Pan the camera.\n * @param {number} dx - movement in world units\n * @param {number} dy - movement in world units\n */\nfunction panCamera(dx, dy) {\n  cameraPosition.x += dx;\n  cameraPosition.y += dy;\n}\n\n/**\n * Centre the canvas on a point\n * @param {Point} point\n */\nfunction centreCanvasOn(point) {\n  cameraPosition.x = point.x - canvasHalfWidth;\n  cameraPosition.y = point.y - canvasHalfHeight;\n}\n\n/**\n * Convert a distance from ui units to world units.\n * @param {number} dist\n * @returns {number}\n */\nfunction uiToWorld(dist) {\n  return dist / scale;\n}\n\n/**\n * Convert a distance from world units to ui units.\n * @param {number} dist\n * @returns {number}\n */\nfunction worldToUi(dist) {\n  return dist * scale;\n}\n\n/**\n * @typedef {Object} MappedPositions\n * @property {Position} canvas - position on the canvas\n * @property {Position} world - position in the world\n */\n/**\n * Convert ui Coordinates to world Position\n * @param {number} x  -position in the ui\n * @param {number} y  -position in the ui\n * @returns {MappedPositions} position on the canvas\n */\nfunction uiCoordsToMappedPositions(x, y) {\n  x = uiToWorld(x);\n  y = uiToWorld(y);\n  const canvasPosition = new Position(Math.round(x), Math.round(y));\n  const worldPosition = new Position(\n    Math.round(x + cameraPosition.x),\n    Math.round(y + cameraPosition.y),\n    -cameraPosition.rotation\n  );\n  return { canvas: canvasPosition, world: worldPosition };\n}\n\n/**\n * Convert world Position to canvas Position\n * @param {Position} position  -position in the world\n * @returns {Position} position on the canvas\n */\nfunction worldPositionToCanvas(position) {\n  return new Position(\n    position.x - cameraPosition.x,\n    position.y - cameraPosition.y,\n    position.rotation\n  );\n}\n\n/**\n * Convert canvas Position to world Position\n * @param {Position} position  -position on the canvas\n * @returns {Position} position in the world\n */\nfunction canvasPositionToWorld(position) {\n  return new Position(\n    position.x + cameraPosition.x,\n    position.y + cameraPosition.y,\n    position.rotation\n  );\n}\n\n/**\n * Convert glass position to world position. Negative positions are calculated as\n * offsets from the right and bottom of the glass dimensions. Otherwise they are\n * calculated as offsets from the left and top.\n * @returns {Position}\n */\nfunction glassPositionToWorld(position) {\n  const xOrigin =\n    position.x < 0\n      ? visibleCanvasRect.x + visibleCanvasRect.width\n      : visibleCanvasRect.x;\n  const yOrigin =\n    position.x < 0\n      ? visibleCanvasRect.y + visibleCanvasRect.height\n      : visibleCanvasRect.y;\n\n  let x = xOrigin + position.x;\n  let y = yOrigin + position.y;\n  /*\n  let x = position.x < 0 ? glassRect.width + position.x : position.x;\n  let y = position.y < 0 ? glassRect.height + position.y : position.y;\n  const newPosition = new Position(\n    x / scale + 0.5 * (canvasRect.width - glassRect.width / scale),\n    y / scale + 0.5 * (canvasRect.height - glassRect.height / scale)\n  );\n  */\n  return canvasPositionToWorld(new Position(x, y, position.rotation));\n}\n\n/**\n * Test if rectangle on screen.\n * @param {Rectangle} rect\n * @return {boolean} true if on screen\n */\nfunction isOnScreen(rect) {\n  return rect.overlaps(canvasRect);\n}\n\n/**\n * Test if rectangle is visible on the canvas.\n * @param {Rectangle} rect - this should have been converted to canvas coordinates\n * @return {boolean} true if on screen\n */\nfunction isOnCanvas(rect) {\n  return rect.overlaps(canvasRect);\n}\n\n/**\n * Get the dimensions of the glass rect. This is scaled to fit the canvas and\n * screen, so this rectangle, in canvas dimensions, is always visible.\n * @returns {Rectangle}\n */\nfunction getGlassRect() {\n  return glassRect;\n}\n\n/**\n * Set the global opacity.\n * @param {number} opacity\n */\nfunction setOpacity(opacity) {\n  getContext2D().globalAlpha = opacity;\n}\n/**\n * Screen object\n */\nconst SCREEN = {\n  canvasPositionToWorld: canvasPositionToWorld,\n  centreCanvasOn: centreCanvasOn,\n  clearCanvas: clearCanvas,\n  displayOnGlass: displayOnGlass,\n  getCanvas: () => canvas,\n  getContext2D: getContext2D,\n  getCanvasDimensions: getCanvasDimensions,\n  getGlassRect: getGlassRect,\n  getVisibleCanvasBounds: getVisibleCanvasBounds,\n  geWorldInCanvasBounds: geWorldInCanvasBounds,\n  glassPositionToWorld: glassPositionToWorld,\n  isOnCanvas: isOnCanvas,\n  isOnScreen: isOnScreen,\n  panCamera: panCamera,\n  setOpacity: setOpacity,\n  setOptions: setOptions,\n  wipeGlass: wipeGlass,\n  worldPositionToCanvas: worldPositionToCanvas,\n  worldToUi: worldToUi,\n  uiCoordsToMappedPositions: uiCoordsToMappedPositions,\n  uiToWorld: uiToWorld,\n};\n\nexport default SCREEN;\n","/**\n * @file Font data\n *\n * @module utils/text/fonts\n *\n * @license\n * {@link https://opensource.org/license/mit/|MIT}\n *\n * Copyright 2024 Steve Butler\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the “Software”), to deal in\n * the Software without restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n * Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */\n\nconst baseSize = 15; // minimum pixel size\n\n/*\n * These should be replicated in the CSS.\n */\nconst H1_FONT_SCALE = 2.0;\nconst H2_FONT_SCALE = 1.5;\nconst H3_FONT_SCALE = 1.2;\n\nconst NORMAL_FONT = 'Arial, Helvetica, sans-serif';\nconst HEADING_FONT = \"'Space Grotesk', sans-serif\"; // cspell:disable-line\nconst EMOJI_SPRITE_FONT = \"'Space Grotesk', sans-serif\"; // cspell:disable-line\n\n/**\n * @typedef {Object} TextInfo\n * @property {number} size\n * @property {string} fontName\n */\n/**\n * Named styles.\n * @type {Object.<String, TextInfo>}\n */\nconst textInfo = {\n  normal: { size: 15, fontName: NORMAL_FONT },\n  h1: { size: 30, fontName: HEADING_FONT },\n  h2: { size: 22, fontName: HEADING_FONT },\n  h3: { size: 18, fontName: HEADING_FONT },\n  emojiSprite: { size: 18, fontName: EMOJI_SPRITE_FONT },\n};\n\n/**\n * Sets up font sizes based on the design display width.\n * The actual normal font size is worked out using the CSS formula normally\n * based on the display width.\n * @param {number} designWidth\n */\nexport function initialise(designWidth) {\n  textInfo.normal.size = baseSize + 0.390625 * (designWidth / 100);\n  textInfo.h1.size = textInfo.normal.size * H1_FONT_SCALE;\n  textInfo.h2.size = textInfo.normal.size * H2_FONT_SCALE;\n  textInfo.h3.size = textInfo.normal.size * H3_FONT_SCALE;\n  textInfo.emojiSprite.size = designWidth / 10;\n}\n\n/**\n * Get font CSS for styleName.\n * @param {string} styleName - default, h1, h2, or h3. Defaults to default.\n * @returns {string}\n */\nexport function getCss(styleName) {\n  const info = textInfo[styleName] ?? textInfo['normal'];\n  return `${info.size}px ${info.fontName}`;\n}\n\n/**\n * Get the root font size. This is the size base on the design dimensions and is\n * the size as written to the canvas. It does not allow for any scaling of the\n * canvas by CSS.\n */\nexport function getRootFontSize() {\n  return textInfo.normal.size;\n}\n","exports.interopDefault = function (a) {\n  return a && a.__esModule ? a : {default: a};\n};\n\nexports.defineInteropFlag = function (a) {\n  Object.defineProperty(a, '__esModule', {value: true});\n};\n\nexports.exportAll = function (source, dest) {\n  Object.keys(source).forEach(function (key) {\n    if (\n      key === 'default' ||\n      key === '__esModule' ||\n      Object.prototype.hasOwnProperty.call(dest, key)\n    ) {\n      return;\n    }\n\n    Object.defineProperty(dest, key, {\n      enumerable: true,\n      get: function () {\n        return source[key];\n      },\n    });\n  });\n\n  return dest;\n};\n\nexports.export = function (dest, destName, get) {\n  Object.defineProperty(dest, destName, {\n    enumerable: true,\n    get: get,\n  });\n};\n","/**\n * @file Functions for dealing with geometry\n *\n * @module utils/geometry\n *\n * @license\n * {@link https://opensource.org/license/mit/|MIT}\n *\n * Copyright 2024 Steve Butler\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the “Software”), to deal in\n * the Software without restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n * Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */\n\n/**\n * Simple 2D dimension\n * @typedef {Object} Dims2D\n * @property {number} width\n * @property {number} height\n */\n\n/**\n * Simple encapsulation of a Point\n */\nexport class Point {\n  /** @type {number}*/\n  x;\n  /** @type {number}*/\n  y;\n\n  /**\n   * Create point\n   * @param {number} x\n   * @param {number} y\n   */\n  constructor(x, y) {\n    this.x = x;\n    this.y = y;\n  }\n\n  /**\n   * Create a copy of a point.\n   * @param {Point} point\n   * @returns {Point}\n   */\n  static copy(point) {\n    return new Point(point.x, point.y);\n  }\n\n  /**\n   * Check if points are coincident.\n   * @returns {boolean}\n   */\n  coincident(point) {\n    return this.x === point.x && this.y === point.y;\n  }\n\n  /**\n   * Get angle to target using normal cartesian coordinates; i.e up is +ve y.\n   * @param {Point} targetPos\n   * @returns {number} angle in radians.\n   */\n  getCartesianAngleTo(targetPos) {\n    return Math.atan2(targetPos.y - this.y, targetPos.x - this.x);\n  }\n\n  /**\n   * Get angle to target using normal screen coordinates; i.e down is +ve y.\n   * @param {Point} targetPos\n   * @returns {number} angle in radians.\n   */\n  getScreenAngleTo(targetPos) {\n    return Math.atan2(this.y - targetPos.y, targetPos.x - this.x);\n  }\n\n  /**\n   * String representation which can be used as key in maps.\n   * @returns {string}\n   */\n  toString() {\n    return `(${this.x},${this.y})`;\n  }\n\n  /**\n   * Test if the position is at the same point, rounded to integer as this.\n   * Rotation is ignored.\n   * @param {Position} position\n   * @returns {boolean}\n   */\n  isCoincident(position) {\n    return (\n      Math.round(this.x) === Math.round(position.x) &&\n      Math.round(this.y) === Math.round(position.y)\n    );\n  }\n}\n/**\n * Velocity class\n */\nexport class Velocity {\n  /** x velocity @type {number} */\n  x;\n  /** y velocity @type {number} */\n  y;\n  /** rotational velocity @type {number} */\n  rotation;\n\n  /**\n   *\n   * @param {number} velX\n   * @param {number} velY\n   * @param {number} velRot\n   */\n  constructor(velX, velY, velRot) {\n    this.x = velX;\n    this.y = velY;\n    this.rotation = velRot;\n  }\n\n  /**\n   * Get the angle in radians counterclockwise from x axis. Note that in the\n   * atan2 calculation the y axis is positive upwards but in the game coordinate\n   * system the y axis is positive downwards.\n   * @returns {number}\n   */\n  getDirection() {\n    return Math.atan2(-this.y, this.x);\n  }\n}\n\n/**\n * Simple 2D position. Similar to point but including rotation.\n * @implements {Point}\n */\nexport class Position extends Point {\n  /** type {number} */\n  rotation;\n\n  /**\n   *\n   * @param {number} x\n   * @param {number} y\n   * @param {number} rotation\n   */\n  constructor(x, y, rotation) {\n    super(x, y);\n    this.y = y;\n    this.rotation = rotation;\n  }\n\n  /**\n   * Create a Position from a Point.\n   * @param {Point} point\n   * @returns {Position}\n   */\n  static fromPoint(point) {\n    return new Position(point.x, point.y, 0);\n  }\n\n  /**\n   * Create copy\n   * @param {Position} position\n   */\n  static copy(position) {\n    return new Position(position.x, position.y, position.rotation);\n  }\n\n  /** Get a new position representing this position relative to a new origin.\n   * @param {Position} origin\n   * @returns {Position}\n   */\n  getRelativeTo(origin) {\n    return new Position(\n      this.x - origin.x,\n      this.y - origin.y,\n      this.rotation - origin.rotation\n    );\n  }\n\n  /**\n   * Test that both x and y coordinates are within the length.\n   * @param {Position} targetPos\n   * @param {number} length\n   * @returns {boolean}\n   */\n  withinSquare(targetPos, length) {\n    return (\n      Math.abs(targetPos.x - this.x) < length &&\n      Math.abs(targetPos.y - this.y) < length\n    );\n  }\n}\n\n/**\n * @typedef {Object} RectangleBounds\n * @property {number} x;\n * @property {number} y;\n * @property {number} right;\n * @property {number} bottom;\n * @property {number} width;\n * @property {number} height;\n */\n\n/**\n * Simple rectangle.\n */\nexport class Rectangle {\n  /** @type {number} */\n  x;\n  /** @type {number} */\n  y;\n  /** @type {number} */\n  width;\n  /** @type {number} */\n  height;\n\n  /**\n   *\n   * @param {number} x\n   * @param {number} y\n   * @param {number} width\n   * @param {number} height\n   */\n  constructor(x, y, width, height) {\n    this.x = x;\n    this.y = y;\n    this.width = width;\n    this.height = height;\n  }\n\n  /** Get the bottom right\n   * @returns {Point}\n   */\n  getBottomRight() {\n    return new Point(this.x + this.width, this.y + this.height);\n  }\n\n  /** Get the top left\n   * @returns {Point}\n   */\n  getTopLeft() {\n    return new Point(this.x, this.y);\n  }\n  /**\n   * Test if this overlaps another rectangle\n   * @param {Rectangle} otherRect\n   * @returns {boolean} true if overlapping.\n   */\n  overlaps(otherRect) {\n    const myBR = this.getBottomRight();\n    const otherRectBR = otherRect.getBottomRight();\n    const noOverlap =\n      otherRect.x > myBR.x ||\n      otherRect.y > myBR.y ||\n      otherRectBR.x < this.x ||\n      otherRectBR.y < this.y;\n    return !noOverlap;\n  }\n\n  /**\n   * Test if this rectangle contains a point\n   * @param {Point | Position} point\n   * @returns {boolean} - true if point contained\n   */\n  containsPoint(point) {\n    return (\n      point.x >= this.x &&\n      point.x <= this.x + this.width &&\n      point.y >= this.y &&\n      point.y <= this.y + this.height\n    );\n  }\n  /**\n   * Test if this rectangle contains a coordinate\n   * @param {number} x\n   * @param {number} y\n   * @returns {boolean} - true if point contained\n   */\n  containsCoordinate(x, y) {\n    return (\n      x >= this.x &&\n      x <= this.x + this.width &&\n      y >= this.y &&\n      y <= this.y + this.height\n    );\n  }\n  /**\n   * Test if this rectangle equals another.\n   * @param {Rectangle} otherRect\n   * @returns {boolean}\n   */\n  equals(other) {\n    return (\n      this.x === other.x &&\n      this.y === other.y &&\n      this.width === other.width &&\n      this.height === other.height\n    );\n  }\n}\n\n/** Min point */\nexport const MIN_POINT = new Point(Number.MIN_VALUE, Number.MIN_VALUE);\n/** Max point */\nexport const MAX_POINT = new Point(Number.MAX_VALUE, Number.MAX_VALUE);\n","/**\n * @file World limitations\n *\n * @module utils/game/world\n *\n * @license\n * {@link https://opensource.org/license/mit/|MIT}\n *\n * Copyright 2024 Steve Butler\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the “Software”), to deal in\n * the Software without restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n * Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */\n\nimport SCREEN from './screen.js';\n\n/**\n * @type {TileMap}\n */\nlet worldTileMap;\n\n\n/**\n * @type {Map<string, Sprite>}\n */\nconst actors = new Map();\n\n/**\n * Sprites that do not interact\n * @type {Map<string, Sprite>}\n */\nconst passiveSprites = new Map();\n\n/**\n * Get the world dimensions. The dimensions are based on the worldTileMap size.\n * It defaults to the screen dimensions if no map has been set.\n * @returns {{number, number}} width and height\n */\nfunction getWorldDims() {\n  return worldTileMap\n    ? worldTileMap.getDimensions()\n    : SCREEN.getCanvasDimensions();\n}\n\n/**\n * Add a actor to the world.\n * @param {import('./actors.js').Actor}\n */\nfunction addActor(target) {\n  actors.set(target, target);\n  worldTileMap.moveTileOccupancyGridPoint(\n    target,\n    null,\n    worldTileMap.worldPointToGrid(target.position)\n  );\n}\n\n/**\n * Remove actor from the world.\n * @param {import('./actors.js').Actor}\n */\nfunction removeActor(target) {\n  const gridPoint = worldTileMap.worldPointToGrid(target.position);\n  worldTileMap.deleteOccupancyOfGridPoint(target, gridPoint);\n  actors.delete(target);\n}\n\n/**\n * Add effect sprite\n * @param {Sprite} sprite\n */\nfunction addPassiveSprite(sprite) {\n  passiveSprites.set(sprite, sprite);\n}\n\n/**\n * Add effect sprite\n * @param {Sprite} sprite\n */\nfunction removePassiveSprite(sprite) {\n  console.debug('Remove passive sprite.');\n  passiveSprites.delete(sprite);\n}\n\n/**\n * Set the tile map for the world.\n * @param {TileMap}\n */\nfunction setTileMap(tileMap) {\n  worldTileMap = tileMap;\n}\n\n/**\n * Get the tile map for the world.\n * @returns {TileMap}\n */\nfunction getTileMap() {\n  return worldTileMap;\n}\n\n/**\n * Remove the tile map from the world.\n * @param {TileMap}\n */\nfunction removeTileMap() {\n  worldTileMap = null;\n}\n\n/**\n * Update the world. This calls the update methods of the tile map and all sprites/\n * @param {number} deltaSeconds\n */\nfunction update(deltaSeconds) {\n  worldTileMap?.update(deltaSeconds);\n  actors.forEach((actor) => {\n    const oldGridPoint = worldTileMap.worldPointToGrid(actor.position);\n    actor.visible = worldTileMap.canHeroSeeGridPoint(oldGridPoint);\n    actor.update(deltaSeconds);\n    const newGridPoint = worldTileMap.worldPointToGrid(actor.position);\n    worldTileMap.moveTileOccupancyGridPoint(actor, oldGridPoint, newGridPoint);\n  });\n\n  passiveSprites.forEach((sprite) => sprite.update(deltaSeconds));\n}\n\n/**\n * Resolve a ui click\n * @param {import('./screen.js').MappedPositions} positions - click coordinates in canvas and world coordinates.\n * @returns {boolean} true if resolved.\n */\nfunction resolveClick(positions) {\n  const tile = worldTileMap.getTileAtWorldPoint(positions.world);\n  if (tile) {\n    tile.actionClick(positions.world);\n    return true;\n  }\n  return false;\n}\n\n/**\n * Get the actors\n * @returns {Map<Actor, Actor>}\n */\nfunction getActors() {\n  return actors;\n}\n\n/**\n * World object singleton.\n */\nconst WORLD = {\n  addActor: addActor,\n  addPassiveSprite: addPassiveSprite,\n  getActors: getActors,\n  getTileMap: getTileMap,\n  getWorldDims: getWorldDims,\n  removeTileMap: removeTileMap,\n  resolveClick: resolveClick,\n  removeActor: removeActor,\n  removePassiveSprite: removePassiveSprite,\n  setTileMap: setTileMap,\n  update: update,\n};\n\nexport default WORLD;\n","/**\n * @file Heads-up display. Unlike the world, this never pans and so positions are\n * locked to the canvas coordinates.\n *\n * @module utils/game/hud\n *\n * @license\n * {@link https://opensource.org/license/mit/|MIT}\n *\n * Copyright 2024 Steve Butler\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the “Software”), to deal in\n * the Software without restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n * Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */\n\nimport { AnimatedImage } from '../sprites/animation.js';\nimport { Actor } from './actors.js';\nimport { ImageSpriteCanvasRenderer } from '../sprites/spriteRenderers.js';\nimport SCREEN from './screen.js';\nimport { Sprite } from '../sprites/sprite.js';\nimport { Position } from '../geometry.js';\nimport { LoopMethod } from '../arrays/indexer.js';\nimport { Rectangle } from '../geometry.js';\nimport IMAGE_MANAGER from '../sprites/imageManager.js';\n\n/**\n * @type {Map<string, Sprite>}\n */\nconst actors = new Map();\n\n/** @type {boolean} */\nlet visible = false;\n\n/**\n * Add a button to the hud. If two callbacks are provided, an AnimatedImage\n * is required with two frames.\n * @param {SpriteBitmap | AnimatedImage} image\n * @param {import('../ui/interactions.js').UiClickCallback} callbackOn\n * @param {import('../ui/interactions.js').UiClickCallback} callbackOff\n * @returns {Actor}\n */\nfunction addButton(image, callbackOn, callbackOff) {\n  const actor = new Actor(\n    new Sprite({\n      renderer: new ImageSpriteCanvasRenderer(SCREEN.getContext2D(), image),\n    })\n  );\n\n  actors.set(actor, actor);\n  actor.setOnClick(() => {\n    if (!callbackOff) {\n      callbackOn();\n    } else if (image.getCurrentIndex() === 0) {\n      image.setCurrentIndex(1);\n      callbackOn();\n    } else {\n      image.setCurrentIndex(0);\n      callbackOff();\n    }\n  });\n  return actor;\n}\n\n/**\n * Add a momentary button to the hud. If two callbacks are provided, an AnimatedImage\n * is required with two frames.\n * @param {SpriteBitmap | AnimatedImage} image\n * @param {import('../ui/interactions.js').UiClickCallback} callbackOn\n * @param {import('../ui/interactions.js').UiClickCallback} callbackOff\n * @returns {Actor}\n */\nfunction addMomentaryButton(image, callbackOn, callbackOff) {\n  const actor = new Actor(\n    new Sprite({\n      renderer: new ImageSpriteCanvasRenderer(SCREEN.getContext2D(), image),\n    })\n  );\n\n  actors.set(actor, actor);\n  actor.setOnPointerDown(() => {\n    image.setCurrentIndex(1);\n    callbackOn?.();\n  });\n  actor.setOnPointerUp(() => {\n    image.setCurrentIndex(0);\n    callbackOff?.();\n  });\n  return actor;\n}\n\n/**\n * Remove sprite from the hud.\n * @param {import('../sprites/sprite.js').Sprite}\n */\nfunction removeButton(target) {\n  actors.delete(target);\n}\n\n/**\n * Clear the HUD\n */\nfunction clear() {\n  actors.clear();\n}\n\n/**\n * Update the world. This calls the update methods of the tile map and all sprites/\n * @param {number} deltaSeconds\n */\nfunction update(deltaSeconds) {\n  if (!visible) {\n    return;\n  }\n  actors.forEach((sprite) => {\n    const uiPos = Position.copy(sprite.position);\n    sprite.position = SCREEN.glassPositionToWorld(sprite.position);\n    sprite.update(deltaSeconds);\n    sprite.position = uiPos;\n  });\n}\n\n/**\n * Check if the click is in a actor.\n * @param {import('./screen.js').MappedPositions} positions - canvas and world positions\n * @param {Actor} actor\n */\nfunction isHittingActor(positions, actor) {\n  const actorCanvasPos = SCREEN.glassPositionToWorld(actor.position);\n  let boundingBox = actor.sprite.getBoundingBox();\n  const canvasBox = new Rectangle(\n    actorCanvasPos.x - boundingBox.width / 2,\n    actorCanvasPos.y - boundingBox.height / 2,\n    boundingBox.width,\n    boundingBox.height\n  );\n\n  return canvasBox.containsCoordinate(positions.world.x, positions.world.y);\n}\n\n/**\n * Resolve a ui click\n * @param {import('./screen.js').MappedPositions} positions - click in canvas and world coordinates.\n * @returns {boolean} true if resolved.\n */\nfunction resolveClick(positions) {\n  if (!visible) {\n    return false;\n  }\n  for (const [keyUnused, actor] of actors) {\n    if (isHittingActor(positions, actor)) {\n      actor.actionClick(actor, positions.canvas);\n      return true;\n    }\n  }\n  return false;\n}\n\n/**\n * Resolve a pointer down\n * @param {import('./screen.js').MappedPositions} positions - click in canvas and world coordinates.\n * @returns {boolean} true if resolved.\n */\nfunction resolvePointerDown(positions) {\n  if (!visible) {\n    return false;\n  }\n  if (!visible) {\n    return false;\n  }\n  for (const [keyUnused, actor] of actors) {\n    if (isHittingActor(positions, actor)) {\n      actor.actionPointerDown(actor, positions.canvas);\n      return true;\n    }\n  }\n  return false;\n}\n\n/**\n * Resolve a ui pointer up event\n * @param {import('./screen.js').MappedPositions} positions - click in canvas and world coordinates.\n * @returns {boolean} true if resolved.\n */\nfunction resolvePointerUp(positions) {\n  if (!visible) {\n    return false;\n  }\n  if (!visible) {\n    return false;\n  }\n  for (const [keyUnused, actor] of actors) {\n    if (isHittingActor(positions, actor)) {\n      actor.actionPointerUp(actor, positions.canvas);\n      return true;\n    }\n  }\n  return false;\n}\n\n/**\n * Set the visibility of the HUD.\n * @param {boolean} visibility - true to show.\n */\nfunction setVisible(visibility) {\n  visible = visibility;\n}\n\n\n/**\n * HUD object\n */\nconst HUD = {\n  addButton: addButton,\n  addMomentaryButton: addMomentaryButton,\n  clear: clear,\n  removeButton: removeButton,\n  update: update,\n  resolveClick: resolveClick,\n  resolvePointerDown: resolvePointerDown,\n  resolvePointerUp: resolvePointerUp,\n  setVisible: setVisible,\n};\n\nexport default HUD;\n","/**\n * @file Animation support\n *\n * @module utils/sprites/animation\n *\n * @license\n * {@link https://opensource.org/license/mit/|MIT}\n *\n * Copyright 2024 Steve Butler\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the “Software”), to deal in\n * the Software without restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n * Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */\n\nimport IMAGE_MANAGER from './imageManager.js';\nimport GAME_CLOCK from '../time/clock.js';\nimport { Indexer } from '../arrays/indexer.js';\n\n/**\n * Collection of SpriteBitmap objects\n */\nexport class AnimatedImage {\n  /** @type {boolean} */\n  playing;\n  /** @type {import('./imageManager.js').SpriteBitmap[]} */\n  #frames;\n  /** @type {Indexer} */\n  #indexer;\n  /** @type {number} */\n  #lastFrameCount;\n\n  /** Period in ms for frame animations @type {number}*/\n  #framePeriodMs;\n  /**\n   * Construct animation.\n   * @param {number} textureIndex\n   * @param {Object | string} filenamePattern - if a string is parsed then the image is a single frame.\n   * @param {string} filenamePattern.prefix\n   * @param {number} filenamePattern.startIndex - if undefined, then just a single image is used.\n   * @param {number} filePattern.padding - index is padded with leading zeros to padding length\n   * @param {string} filenamePattern.suffix\n   * @param {Object} options\n   * @param {number} options.framePeriodMs - period in ms for frame animations.\n   * @param {LoopMethod} options.loopMethod - method of looping animation.\n   */\n  constructor(textureIndex, filenamePattern, options) {\n    this.#frames = [];\n    this.#lastFrameCount = 0;\n    this.#framePeriodMs = Math.max(1, options.framePeriodMs);\n    if (typeof filenamePattern === 'string') {\n      this.#frames.push(IMAGE_MANAGER.getFrame(textureIndex, filenamePattern));\n      return;\n    }\n    let index = filenamePattern.startIndex ?? 0;\n    let padding = filenamePattern.padding ?? 0;\n    let textureFrame;\n    do {\n      const fileName = `${filenamePattern.prefix}${index\n        .toString()\n        .padStart(padding, '0')}${filenamePattern.suffix}`;\n      textureFrame = IMAGE_MANAGER.getSpriteBitmap(textureIndex, fileName); // imageManager.getFrame(textureIndex, fileName);\n      if (textureFrame) {\n        this.#frames.push(textureFrame);\n      }\n      index++;\n    } while (textureFrame);\n    this.#indexer = new Indexer(this.#frames.length, options.loopMethod);\n    this.playing = true;\n  }\n\n  /**\n   * Get current frame\n   * @returns {import('./imageManager.js').SpriteBitmap}\n   */\n  getCurrentFrame() {\n    if (this.playing) {\n      const frameCount = GAME_CLOCK.getFrameCount(this.#framePeriodMs);\n      if (frameCount !== this.#lastFrameCount) {\n        this.#indexer.advanceBy(frameCount - this.#lastFrameCount);\n        this.#lastFrameCount = frameCount;\n      }\n    }\n    return this.#frames[this.#indexer.index];\n  }\n\n  /**\n   * Manual movement of frames. Note this automatically switches off playing.\n   * @param {number} index - frame index. This will be clipped to the ends of the\n   * array.\n   */\n\n  setCurrentIndex(index) {\n    this.playing = false;\n    this.#indexer.index = index;\n  }\n\n  /**\n   * Get the current index.\n   * @returns {number}\n   */\n  getCurrentIndex() {\n    return this.#indexer.index;\n  }\n}\n\n/**\n * Create keyed animated images.\n */\nexport class KeyedAnimatedImages {\n  /** @type {Object.<string, AnimatedImage>} */\n  #animatedImages;\n  /** @type {string} */\n  #currentImage;\n\n  /**\n   * Create the keyed animated image\n   * @param {string} key\n   * @param {AnimatedImage} animatedImage\n   */\n  constructor(key, animatedImage) {\n    this.#animatedImages = {};\n    this.#animatedImages[key] = animatedImage;\n    this.#currentImage = animatedImage;\n  }\n\n  /**\n   * Get the current image.\n   */\n  get image() {\n    return this.#currentImage;\n  }\n  /**\n   * Add image to available images.\n   * @param {string} key\n   * @param {AnimatedImage} animatedImage\n   */\n\n  addAnimatedImage(key, animatedImage) {\n    this.#animatedImages[key] = animatedImage;\n  }\n\n  /**\n   * Set the current animation key. Ignored if it does not exist.\n   * @param {string} key\n   */\n  setCurrentImage(key) {\n    //eslint-disable-next-line no-prototype-builtins\n    if (this.#animatedImages.hasOwnProperty(key)) {\n      this.#currentImage = this.#animatedImages[key];\n    } else {\n      console.error(\n        `Attempt to set current key to nonexistent value of ${key}`\n      );\n    }\n  }\n\n  /**\n   * Get current frame\n   * @returns {import('./imageManager.js').SpriteBitmap}\n   */\n  getCurrentFrame() {\n    return this.#currentImage.getCurrentFrame();\n  }\n}\n","/**\n * @file Load and manage images. The image manager is implemented as a singleton.\n *\n * @module utils/sprites/imageManager\n *\n * @license\n * {@link https://opensource.org/license/mit/|MIT}\n *\n * Copyright 2024 Steve Butler\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the “Software”), to deal in\n * the Software without restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n * Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */\n\n/**\n * @typedef {Object} SpriteBitmap\n * @property {Image} image\n * @property {number} width\n * @property {number} height\n * @property {number} centreX\n * @property {number} centreY\n */\n\n/** @type {Array.Map<string, SpriteBitmap>} */\nlet spriteMaps = [];\n\n/**\n * Load an image\n * @param {URL} srcUrl - source URL\n * @returns {Promise} fulfils to @type {Image}.\n */\nfunction loadImage(srcUrl) {\n  return new Promise((resolve) => {\n    const image = new Image();\n    image.addEventListener('load', () => {\n      console.debug('Image loaded.');\n      resolve(image);\n    });\n    image.src = srcUrl;\n  });\n}\n\n/**\n * Load a number of images\n * @param {URL[]} srcUrls - array of source URLs\n * @returns {Promise} fulfils to @type {Image[]}.\n */\nfunction loadImages(srcUrls) {\n  const promises = [];\n  srcUrls.forEach((url) => promises.push(loadImage(url)));\n  return Promise.all(promises);\n}\n\n/**\n * Load sprite map.\n * @param {Object} spriteMapDef Sprite map definition from TexturePacker Array JSON file without multipack\n * @param {URL} textureUrl\n * @returns {Promise} fulfils to array of sprite map keys\n */\nfunction loadSpriteMap(spriteMapDef, textureUrl) {\n  return loadImage(textureUrl).then((image) =>\n    buildSpriteMap(spriteMapDef, image)\n  );\n}\n\n/**\n * Build the sprite map\n * @param {Object} spriteMapDef - map definition from texture mapper. Array JSON no multi pack.\n * @param {Image} texture - images providing texture for sprite map.\n * @returns {Promise} fulfils to array of sprite map keys.\n */\nfunction buildSpriteMap(spriteMapDef, texture) {\n  const promises = [];\n  const map = new Map();\n  spriteMaps.push(map);\n  spriteMapDef.frames.forEach((frame) => {\n    promises.push(\n      createImageBitmap(\n        texture,\n        frame.frame.x,\n        frame.frame.y,\n        frame.frame.w,\n        frame.frame.h\n      ).then((spriteImage) => {\n        const spriteBitmap = {\n          image: spriteImage,\n          width: frame.frame.w,\n          height: frame.frame.h,\n          centreX: frame.sourceSize.w / 2 - frame.spriteSourceSize.x,\n          centreY: frame.sourceSize.h / 2 - frame.spriteSourceSize.y,\n        };\n        map.set(frame.filename, spriteBitmap);\n        return frame.filename;\n      })\n    );\n  });\n\n  return Promise.all(promises);\n}\n\n/**\n * @param {number} spriteMapIndex\n * @param {string} filename\n * @returns {SpriteBitmap} null if filename not found.\n */\nfunction getSpriteBitmap(spriteMapIndex, filename) {\n  const result = spriteMaps[spriteMapIndex].get(filename);\n  if (!result) {\n    console.debug(\n      `Failed to find image ${filename} at index ${spriteMapIndex}`\n    );\n  }\n  return result;\n}\n\n/**\n * Singleton image manager.\n */\nconst IMAGE_MANAGER = {\n  getSpriteBitmap: getSpriteBitmap,\n  loadImage: loadImage,\n  loadImages: loadImages,\n  loadSpriteMap: loadSpriteMap,\n};\n\nexport default IMAGE_MANAGER;\n","/**\n * @file Time utilities. Two clocks exist in the games: real and turn based.\n *\n * @module utils/time/clock\n *\n * @license\n * {@link https://opensource.org/license/mit/|MIT}\n *\n * Copyright 2024 Steve Butler\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the “Software”), to deal in\n * the Software without restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n * Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */\n\n/**\n * @type {DOMHighResTimeStamp}\n */\nlet currentTimeMs = 0;\n\n/**\n * @param {DOMHighResTimeStamp} timeNowMs\n */\nfunction updateTimeNow(timeNowMs) {\n  currentTimeMs = timeNowMs;\n}\n\n/**\n * Get a frame counter.\n * @param {number} framePeriodMs - time between frames\n * @returns {number}\n */\nfunction getFrameCount(framePeriodMs) {\n  return Math.floor(currentTimeMs / framePeriodMs);\n}\n\n/**\n *  Game clock as singleton.\n */\nconst GAME_CLOCK = {\n  updateTimeNow: updateTimeNow,\n  getFrameCount: getFrameCount,\n};\n\nexport default GAME_CLOCK;\n","/**\n * @file Simple indexer for arrays.\n *\n * @module utils/arrays/indexer\n *\n * @license\n * {@link https://opensource.org/license/mit/|MIT}\n *\n * Copyright 2024 Steve Butler\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the “Software”), to deal in\n * the Software without restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n * Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */\n\nimport * as maths from '../maths.js';\n\n/**\n * Looping methods\n * @enum {number}\n */\nexport const LoopMethod = {\n  WRAP: 0,\n  REVERSE: 1,\n  STOP: 2,\n};\n\n/**\n * Class to handle indexing through arrays. This allows an index to be incremented\n * so that it wraps at the end for a circular buffer, reverses for an oscillating\n * index or just stops at the end.\n */\nexport class Indexer {\n  /** @type {number} */\n  #length;\n  /** @type {number} */\n  #maxIndex;\n  /** @type {number} */\n  #loopMethod;\n  /** @type {number} */\n  #direction;\n  /** @type {number} */\n  #index;\n\n  /**\n   * @param {number} length\n   * @param {LoopMethod} loopMethod\n   */\n  constructor(length, loopMethod) {\n    this.#length = length;\n    this.#maxIndex = length - 1;\n    this.#loopMethod = loopMethod;\n    this.#direction = 1;\n    this.#index = 0;\n  }\n\n  /**\n   * Get current index.\n   */\n  get index() {\n    return this.#index;\n  }\n\n  /**\n   * Set current index. This will be clipped to a valid value.\n   */\n  set index(value) {\n    this.#index = maths.clip(value, 0, this.#length - 1);\n  }\n\n  /** Advance to the index.\n   * @param {number} distance - amount to move. This should be positive.\n   * @returns {number} the new index\n   */\n  advanceBy(distance) {\n    if (this.#length < 1) {\n      return this.#index;\n    }\n    switch (this.#loopMethod) {\n      case LoopMethod.WRAP:\n        return this.#advanceByWrap(distance);\n      case LoopMethod.REVERSE:\n        return this.#advanceByReverse(distance);\n      case LoopMethod.NONE:\n      default:\n        return this.#advanceByStop(distance);\n    }\n  }\n\n  /** Advance the index by distance. The direction is maintained by the indexer\n   * itself. Wrap at ends.\n   * @param {number} distance - amount to move. This should be positive.\n   * @returns {number} the new index\n   */\n  #advanceByWrap(distance) {\n    distance = distance % this.#length;\n    this.#index += distance % this.#length;\n    if (this.#index >= this.#length) {\n      this.#index = this.#index - this.#length;\n    }\n    return this.#index;\n  }\n\n  /** Advance the index by distance. The direction is maintained by the indexer\n   * itself. Reverse at ends.\n   * @param {number} distance - amount to move. This should be positive.\n   * @returns {number} the new index\n   */\n  #advanceByReverse(distance) {\n    const nFullTraversals = Math.floor(distance / this.#length);\n    if (nFullTraversals % 2) {\n      this.#direction = -this.#direction; // odd so reversing\n    }\n    distance = distance % this.#length;\n    if (this.#direction > 0) {\n      this.#index += distance;\n      const overshoot = this.#index - this.#maxIndex;\n      if (overshoot > 0) {\n        this.#index = this.#maxIndex - overshoot;\n        this.#direction = -1;\n      }\n    } else if (this.#direction < 0) {\n      this.#index -= distance;\n      if (this.#index < 0) {\n        this.#index = -this.#index;\n        this.#direction = 1;\n      }\n    }\n    return this.#index;\n  }\n\n  /** Advance the index by distance. The direction is maintained by the indexer\n   * itself. Stop at ends.\n   * @param {number} distance - amount to move. This should be positive.\n   * @returns {number} the new index\n   */\n  #advanceByStop(distance) {\n    if (this.#direction > 0) {\n      this.#index = Math.min(this.#maxIndex, this.#index + distance);\n    } else if (this.#direction < 0) {\n      this.#index = Math.max(0, this.#index - distance);\n    }\n    return this.#index;\n  }\n}\n","/**\n * @file Maths utilities\n *\n * @module utils/maths\n *\n * @license\n * {@link https://opensource.org/license/mit/|MIT}\n *\n * Copyright 2024 Steve Butler\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the “Software”), to deal in\n * the Software without restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n * Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */\n\n/**\n * Common angles\n */\nconst Radians = {\n  DEG_22_5: (1 / 8) * Math.PI,\n  DEG_45: (2 / 8) * Math.PI,\n  DEG_67_5: (3 / 8) * Math.PI,\n  DEG_90: (4 / 8) * Math.PI,\n  DEG_112_5: (5 / 8) * Math.PI,\n  DEG_135: (6 / 8) * Math.PI,\n  DEG_157_7: (7 / 8) * Math.PI,\n  DEG_180: Math.PI,\n};\n\n/**\n * Clip a value.\n * @param {number} value\n * @param {number} min\n * @param {number} max\n * @returns {number}\n */\nexport function clip(value, min, max) {\n  if (value < min) {\n    return min;\n  } else if (value > max) {\n    return max;\n  }\n  return value;\n}\n\n/** Enumeration of travel directions\n * @enum {number}\n */\nexport const CompassEightPoint = {\n  N: 0,\n  NE: 1,\n  E: 2,\n  SE: 3,\n  S: 4,\n  SW: 5,\n  W: 6,\n  NW: 7,\n};\n\n/**\n * Convert an angle to an eight point compass direction.\n * Converts the angle to a compass direction.\n * @param {number} angle - -PI/2 to +PI/2. This is the same range as values returned\n * from the standard Math trigometric functions. Note that this expects the\n * angle to be based on cartesian coordinates, +y upwards. For angles calculated\n * using screen coordinates, +y downwards, you should negate the angle before\n * calling.\n * @param {number} angle - -PI/2 to +PI/2\n * @returns {number} compass point. From CompassEightPoint enum.\n */\nexport function angleToEightPointCompass(angle) {\n  const absAngle = Math.abs(angle);\n  if (absAngle <= Radians.DEG_22_5) {\n    return CompassEightPoint.E;\n  }\n  if (absAngle <= Radians.DEG_67_5) {\n    return Math.sign(angle) > 0 ? CompassEightPoint.NE : CompassEightPoint.SE;\n  }\n  if (absAngle <= Radians.DEG_112_5) {\n    return Math.sign(angle) > 0 ? CompassEightPoint.N : CompassEightPoint.S;\n  }\n  if (absAngle <= Radians.DEG_157_7) {\n    return Math.sign(angle) > 0 ? CompassEightPoint.NW : CompassEightPoint.SW;\n  }\n  return CompassEightPoint.W;\n}\n\n/**\n * Get random number between min and max, inclusive\n * @param {number} min - inclusive minimum\n * @param {number} max - exclusive maximum\n * @returns {number}\n */\nexport function getRandomInt(min, max) {\n  const minCeiled = Math.ceil(min);\n  const maxFloored = Math.floor(max);\n  return Math.floor(Math.random() * (maxFloored - minCeiled + 1) + minCeiled);\n}\n/**\n * Get random number between min and max, inclusive\n * @param {number} min - inclusive minimum\n * @param {number} max -inclusive maximum\n * @returns {number}\n */\nexport function getRandomIntInclusive(min, max) {\n  const minCeiled = Math.ceil(min);\n  const maxFloored = Math.floor(max);\n  return Math.floor(Math.random() * (maxFloored - minCeiled + 1) + minCeiled);\n}\n","/**\n * @file Actor classes. Actors encapsulate a Sprite and represent moving objects\n * that can interact with the game.\n *\n * @module utils/game/actors\n *\n * @license\n * {@link https://opensource.org/license/mit/|MIT}\n *\n * Copyright 2024 Steve Butler\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the “Software”), to deal in\n * the Software without restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n * Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */\n\nimport { MultiGaugeTileRenderer } from '../sprites/spriteRenderers.js';\nimport { UiClickHandler } from '../ui/interactions.js';\n\n/**\n * @typedef {Map<string, *>} Traits\n */\n/**\n * Actor class. An actor is a sprite that exists in the world and can interact\n * with other actors.\n */\nexport class Actor extends UiClickHandler {\n  /** @type {number} */\n  maxTilesPerMove;\n  /** @type {import('../sprites/sprite.js').Sprite} */\n  sprite;\n  /** @type {AbstractTraits} */\n  traits;\n\n  /**\n   * Create the actor.\n   * @param {import('../sprites/sprite.js').Sprite} sprite\n   */\n  constructor(sprite) {\n    super();\n    this.sprite = sprite;\n    this.sprite.obstacle = true;\n    this.maxTilesPerMove = 4;\n  }\n\n \n  /** Set the underlying sprite visibility.\n   * @param {boolean}\n   */\n  set visible(value) {\n    this.sprite.visible = value;\n  }\n\n  /** Get the underlying sprite visibility.\n   * @returns {boolean}\n   */\n  get visible() {\n    return this.sprite.visible;\n  }\n  /**\n   * Get obstacle property. This comes from the underlying sprite.\n   * @param {boolean} value\n   */\n  get obstacle() {\n    return this.sprite.obstacle;\n  }\n\n  /**\n   * Set as obstacle. This sets the underlying sprite's property.\n   * @param {boolean} value\n   */\n  set obstacle(value) {\n    this.sprite.obstacle = value;\n  }\n\n  /**\n   * Get the actor's position.\n   * @returns {import('../geometry.js').Position}\n   */\n  get position() {\n    return this.sprite.position;\n  }\n\n  /**\n   * Set the actor's position.\n   * @param {import('../geometry.js').Position} value\n   */\n  set position(value) {\n    this.sprite.position = value;\n  }\n\n  /**\n   * Get the current motion.\n   * @returns {Velocity}\n   */\n\n  get velocity() {\n    return this.sprite.velocity;\n  }\n\n  /**\n   * Set the current Velocity. Invalid values become 0.\n   * @param {Velocity} nextVelocity\n   */\n  set velocity(nextVelocity) {\n    this.sprite.velocity = nextVelocity;\n  }\n\n  /**\n   * Call update on the underlying sprite\n   * @param {number} deltaSeconds\n   */\n  update(deltaSeconds) {\n    this.sprite.update(deltaSeconds);\n  }\n\n  /**\n   * Handle the click but change the point to the sprite's position\n   */\n  actionClick(pointUnused) {\n    super.actionClick(this.sprite.position);\n  }\n  /**\n   * Handle the click but change the point to the sprite's position\n   */\n  actionContextClick(pointUnused) {\n    super.actionContextClick(this.sprite.position);\n  }\n\n  /**\n   * Handle the pointer up event but change the point to the sprite's position\n   */\n  actionPointerUp(pointUnused) {\n    super.actionPointerUp(this.sprite.position);\n  }\n  /**\n   * Handle the pointer down event but change the point to the sprite's position\n   */\n  actionPointerDown(pointUnused) {\n    super.actionPointerDown(this.sprite.position);\n  }\n}\n\nexport class DnDActor extends Actor {\n  /** @type {MultiGaugeTileRenderer} */\n  #healthRenderer;\n  /**\n   * Create the actor.\n   * @param {import('../sprites/sprite.js').Sprite} sprite\n   */\n  constructor(sprite) {\n    super(sprite);\n    this.#healthRenderer = new MultiGaugeTileRenderer(sprite.get);\n  }\n}\n","/**\n * @file Handle sprite rendering on the canvas\n *\n * @module utils/sprites/spriteRenderers\n *\n * @license\n * {@link https://opensource.org/license/mit/|MIT}\n *\n * Copyright 2024 Steve Butler\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the “Software”), to deal in\n * the Software without restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n * Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */\n\nimport * as canvasText from '../text/text.js';\nimport * as fonts from '../text/fonts.js';\nimport * as debug from '../debug.js';\nimport SCREEN from '../game/screen.js';\nimport { MIN_POINT, MAX_POINT, Rectangle } from '../geometry.js';\nimport * as animation from './animation.js'; //eslint-disable-line no-unused-vars\nimport HUD from '../game/hud.js';\nimport { Sprite } from './sprite.js';\n\n/**\n * @typedef {Object} RenderGeometry\n * @property {number} width\n * @property {number} height\n * @property {import('../geometry.js').Point} origin - origin relative to the centre\n */\n\n/**\n * Convert RenderGeometry to Rectangle\n * @param {import('../geometry.js').Position} position\n * @param {RenderGeometry} renderGeom\n * @returns {import('../geometry.js').Rectangle}\n */\nfunction renderGeometryToRect(position, renderGeom) {\n  return new Rectangle(\n    position.x - renderGeom.width / 2,\n    position.y - renderGeom.height / 2,\n    renderGeom.width,\n    renderGeom.height\n  );\n}\n\n/**\n * Base class for all sprite renderers.\n * @abstract\n */\nexport class SpriteCanvasRenderer {\n  /** @type {CanvasRenderingContext2D} */\n  _context;\n\n  /** @type {import('../geometry.js').Rectangle} */\n  _boundingBoxCanvas;\n\n  /**\n   * Construct base renderer\n   * @param {CanvasRenderingContext2D} context\n   */\n  constructor(context) {\n    this._context = context;\n    this._boundingBoxCanvas = new Rectangle(0, 0, 0, 0);\n  }\n\n  /**\n   * Get the context. This is just provided to allow classes other than children\n   * to read the context. _context could be used but that is not the intent.\n   */\n  getContext() {\n    return this._context;\n  }\n\n  /**\n   * Get the axis aligned bounding box\n   * @returns {import('../geometry.js').Rectangle}\n   */\n  getBoundingBoxCanvas() {\n    return this._boundingBoxCanvas;\n  }\n  /**\n   * Render the sprite.\n   * @param {import('../geometry.js').Position} position in the world\n   * @param {number} opacity\n   */\n  render(position, opacity) {\n    position = SCREEN.worldPositionToCanvas(position);\n    if (!this.isOnCanvas(position)) {\n      return;\n    }\n    const currentAlpha = this._context.globalAlpha;\n    this._context.globalAlpha = currentAlpha * opacity;\n    const rotated = position.rotation;\n    if (rotated) {\n      this._context.save();\n      this._context.translate(position.x, position.y);\n      this._context.rotate(-position.rotation);\n      this._context.translate(-position.x, -position.y);\n    }\n    this._doRender(position);\n    if (rotated) {\n      this._context.restore();\n    }\n    if (debug.OPTIONS.spriteBoxes) {\n      this._context.strokeStyle = 'green';\n      this._context.strokeRect(\n        this._boundingBoxCanvas.x,\n        this._boundingBoxCanvas.y,\n        this._boundingBoxCanvas.width,\n        this._boundingBoxCanvas.height\n      );\n    }\n    this._context.globalAlpha = currentAlpha;\n  }\n  /**\n   * Render the sprite\n   * @param {import('../geometry.js').Position} position\n   */\n  _doRender(positionUnused) {\n    console.error('_doRender method should be overridden.');\n  }\n\n  /**\n   * Check if it will be on screen\n   * @param {import('../geometry.js').Position} position\n   * @returns {boolean} true if on screen.\n   */\n  isOnScreen(position) {\n    const rect = new Rectangle(\n      position.x - this._boundingBoxCanvas.width / 2,\n      position.y - this._boundingBoxCanvas.height / 2,\n      this._boundingBoxCanvas.width,\n      this._boundingBoxCanvas.height\n    );\n    return SCREEN.isOnScreen(rect);\n  }\n\n  /**\n   * Check if it will be on screen\n   * @param {import('../geometry.js').Position} position - this should be in canvas coordinates.\n   * @returns {boolean} true if on screen.\n   */\n  isOnCanvas(position) {\n    const rect = new Rectangle(\n      position.x - this._boundingBoxCanvas.width / 2,\n      position.y - this._boundingBoxCanvas.height / 2,\n      this._boundingBoxCanvas.width,\n      this._boundingBoxCanvas.height\n    );\n    return SCREEN.isOnCanvas(rect);\n  }\n}\n\n/**\n * Renderer for TextSprites.\n */\nexport class TextSpriteCanvasRenderer extends SpriteCanvasRenderer {\n  /** Name used to access font styles from the fonts.\n   * @type {string}\n   */\n  #styleName;\n\n  /** @type {string} */\n  #lastCalculatedText;\n  /** @type {RenderGeometry} */\n  #renderGeometry;\n\n  /** @type {string} */\n  text;\n\n  /**\n   * @param {CanvasRenderingContext2D} context\n   * @param {string} text\n   * @param {string} [styleName = 'normal']\n   */\n  constructor(context, text, styleName = 'normal') {\n    super(context);\n    this.text = text;\n    this.#styleName = styleName;\n  }\n\n  /**\n   * Calculate the renderGeometry of the text.\n   * @param {string} text\n   */\n  #calculateRenderGeometry(text) {\n    this._context.font = fonts.getCss(this.#styleName);\n    const metrics = this._context.measureText(text);\n    this.#renderGeometry = {\n      width: metrics.width,\n      height: metrics.fontBoundingBoxAscent + metrics.fontBoundingBoxDescent,\n      origin: {\n        x: -0.5 * metrics.width,\n        y:\n          0.5 *\n          (metrics.fontBoundingBoxAscent - metrics.fontBoundingBoxDescent),\n      },\n    };\n    this.#lastCalculatedText = text;\n  }\n\n  /**\n   * Render the sprite\n   * @param {import('../geometry.js').Position} position - this will have been adjusted to the screen.\n   */\n  _doRender(position) {\n    if (this.text !== this.#lastCalculatedText) {\n      this.#calculateRenderGeometry(this.text);\n    }\n    const renderPosition = {\n      x: position.x + this.#renderGeometry.origin.x,\n      y: position.y + this.#renderGeometry.origin.y,\n      rotation: position.rotation,\n    };\n\n    canvasText.writeText(\n      this._context,\n      this.#lastCalculatedText,\n      renderPosition,\n      { styleName: this.#styleName }\n    );\n\n    this._boundingBoxCanvas = renderGeometryToRect(\n      position,\n      this.#renderGeometry\n    );\n  }\n}\n\n/**\n * Renderer for rectangle sprites\n */\nexport class RectSpriteCanvasRenderer extends SpriteCanvasRenderer {\n  #width;\n  #height;\n  #halfWidth;\n  #halfHeight;\n  #fillStyle;\n  #strokeStyle;\n  /**\n   *\n   * @param {CanvasRenderingContext2D} context\n   * @param {Object} options\n   * @param {number} options.width\n   * @param {number} options.height\n   * @param {string} options.fillStyle\n   * @param {string} options.strokeStyle\n   */\n  constructor(context, options) {\n    super(context);\n    this.#width = options.width ?? 10;\n    this.#height = options.height ?? 10;\n    this.#halfWidth = this.#width / 2;\n    this.#halfHeight = this.#height / 2;\n    this.#fillStyle = options.fillStyle;\n    this.#strokeStyle = options.strokeStyle;\n  }\n\n  /**\n   * Render the sprite.\n   * @param {import('../geometry.js').Position} position - this will have been adjusted to the screen.\n   */\n  _doRender(position) {\n    const x = position.x - this.#halfWidth;\n    const y = position.y - this.#halfHeight;\n    if (this.#fillStyle) {\n      this._context.fillStyle = this.#fillStyle;\n      this._context.fillRect(x, y, this.#width, this.#height);\n    }\n    if (this.#strokeStyle) {\n      this._context.strokeStyle = this.#strokeStyle;\n      this._context.strokeRect(x, y, this.#width, this.#height);\n    }\n\n    this._boundingBoxCanvas = new Rectangle(x, y, this.#width, this.#height);\n  }\n}\n\n/**\n * Renderer for percentage properties.\n */\nexport class GaugeSpriteCanvasRenderer extends SpriteCanvasRenderer {\n  #height;\n  #halfHeight;\n  #width;\n  #halfWidth;\n  #fillStyle;\n  #strokeStyle;\n  #offsetX;\n  #offsetY;\n  #fillHeight;\n  #halfFillHeight;\n\n  /**\n   *\n   * @param {CanvasRenderingContext2D} context\n   * @param {Object} options\n   * @param {number} options.width\n   * @param {number} options.height\n   * @param {string} options.fillStyle\n   * @param {string} options.strokeStyle\n   * @param {number} options.offsetX - sprite is offset from the normal sprite position.\n   * @param {number} options.offsetY - sprite is offset from the normal sprite position.\n   */\n  constructor(context, options) {\n    super(context);\n    this.#height = options.height;\n    this.#halfHeight = this.#height / 2;\n    this.#width = options.width;\n    this.#halfWidth = this.#width / 2;\n    this.#fillStyle = options.fillStyle;\n    this.#strokeStyle = options.strokeStyle;\n    this.#offsetX = options.offsetX ?? 0;\n    this.#offsetY = options.offsetY ?? 0;\n    this.setLevel(0);\n  }\n\n  /** Set the level of the gauge.\n   * @param {number} proportion - 0 to 1\n   */\n  setLevel(proportion) {\n    this.#fillHeight = Math.min(proportion, 1) * this.#height;\n    this.#halfFillHeight = 0.5 * this.#fillHeight;\n  }\n\n  /**\n   * Render the sprite.\n   * @param {import('../geometry.js').Position} position - this will have been adjusted to the screen.\n   */\n  _doRender(position) {\n    const topStroke = position.y - this.#halfHeight + this.#offsetY;\n    const topFill =\n      position.y + this.#halfHeight - this.#fillHeight + this.#offsetY;\n\n    const x = position.x - this.#halfWidth + this.#offsetX;\n    if (this.#fillStyle) {\n      this._context.fillStyle = this.#fillStyle;\n      this._context.fillRect(x, topFill, this.#width, this.#fillHeight);\n    }\n    if (this.#strokeStyle) {\n      this._context.strokeStyle = this.#strokeStyle;\n      this._context.strokeRect(x, topStroke, this.#width, this.#height);\n    }\n\n    this._boundingBoxCanvas = new Rectangle(\n      x,\n      topStroke,\n      this.#width,\n      this.#height\n    );\n  }\n}\n\n/** Special renderer for multiple gauges applied over a square tile */\nexport class MultiGaugeTileRenderer extends SpriteCanvasRenderer {\n  #gaugeRenderers;\n\n  /**\n   * The number of gauges is determined by the maximum length of the fill styles and\n   * stroke styles\n   * @param {CanvasRenderingContext2D} context\n   * @param {Object} options\n   * @param {number} options.tileSize\n   * @param {string[]} options.fillStyles\n   * @param {string[]} options.strokeStyles\n   */\n  constructor(context, options) {\n    super(context);\n    const nGauges = Math.max(\n      options.fillStyles.length ?? 0,\n      options.strokeStyles.length ?? 0\n    );\n    if (nGauges === 0) {\n      console.error('Attempt to create MultiGaugeTileRenderer with no gauges.');\n      return;\n    }\n    this.#gaugeRenderers = [];\n    const gaugeWidth = options.tileSize / nGauges;\n    let gaugePosX = -options.tileSize / 2 + gaugeWidth / 2;\n\n    for (let index = 0; index < nGauges; index++) {\n      this.#gaugeRenderers.push(\n        new GaugeSpriteCanvasRenderer(context, {\n          width: gaugeWidth,\n          height: options.tileSize,\n          fillStyle: options.fillStyles?.[index],\n          strokeStyle: options.strokeStyles?.[index],\n          offsetX: gaugePosX + gaugeWidth * index,\n          offsetY: 0,\n        })\n      );\n    }\n  }\n\n  /**\n   * Set the level of a gauge.\n   * @param {number} gaugeIndex\n   * @param {number} proportion - 0 to 1\n   */\n  setLevel(gaugeIndex, proportion) {\n    this.#gaugeRenderers[gaugeIndex]?.setLevel(proportion);\n  }\n\n  /**\n   * Render the sprite.\n   * @param {import('../geometry.js').Position} position - this will have been adjusted to the screen.\n   */\n  render(position) {\n    this.#gaugeRenderers?.forEach((renderer) => renderer.render(position));\n  }\n}\n\n/**\n * Renderer for Path Sprites.\n */\nexport class PathSpriteCanvasRenderer extends SpriteCanvasRenderer {\n  /** @type {RenderGeometry} */\n  #renderGeometry;\n\n  /** @type {Point[]} */\n  path;\n\n  /**\n   * Create a path renderer.\n   * @param {CanvasRenderingContext2D} context\n   * @param {Point[]} path\n   */\n  constructor(context, path) {\n    super(context);\n    this.path = path;\n  }\n\n  /** Calculate the rendering geometry.\n   * @param {Point[]} path\n   * @param {import('../geometry.js').Position} position\n   */\n  #calculateGeometry(path, positionUnused) {\n    let minPoint = MAX_POINT;\n    let maxPoint = MIN_POINT;\n    path.forEach((point) => {\n      minPoint.x = Math.min(minPoint.x, point.x);\n      minPoint.y = Math.min(minPoint.y, point.y);\n      maxPoint.x = Math.max(maxPoint.x, point.x);\n      maxPoint.y = Math.max(maxPoint.y, point.y);\n    });\n\n    this.#renderGeometry = {\n      width: maxPoint.x - minPoint.x,\n      height: maxPoint.y - minPoint.y,\n      origin: {\n        x: 0.5 * (minPoint.x + maxPoint.x),\n        y: 0.5 * (minPoint.y + maxPoint.y),\n      },\n    };\n  }\n  /**\n   * Render the sprite.\n   * @param {import('../geometry.js').Position} position - this will have been adjusted to the screen.\n   */\n  _doRender(position) {\n    if (this.path.length < 2) {\n      console.error('Path sprite needs at least 2 points.');\n      return;\n    }\n    if (!this.#renderGeometry) {\n      this.#calculateGeometry(this.path, position);\n    }\n\n    this._context.beginPath();\n    this._context.strokeStyle = 'blue';\n    this._context.moveTo(\n      this.path[0].x + position.x,\n      this.path[0].y + position.y\n    );\n    for (let n = 1; n < this.path.length; n++) {\n      this._context.lineTo(\n        this.path[n].x + position.x,\n        this.path[n].y + position.y\n      );\n    }\n    this._context.closePath();\n    this._context.stroke();\n\n    this._boundingBoxCanvas = renderGeometryToRect(\n      position,\n      this.#renderGeometry\n    );\n  }\n}\n\n/**\n * Renderer for Image Sprites.\n */\nexport class ImageSpriteCanvasRenderer extends SpriteCanvasRenderer {\n  /** @type {import('./imageManager.js').SpriteBitmap} */\n  #spriteBitmap;\n  /** @type {animation.KeyedAnimatedImages} */\n  #animation;\n\n  /**\n   * Create an image renderer.\n   * @param {CanvasRenderingContext2D} context\n   * @param {SpriteBitmap | animation.AnimatedImage | animation.KeyAnimatedImages} imageDefinition\n   */\n  constructor(context, imageDefinition) {\n    super(context);\n    if (imageDefinition?.getCurrentFrame) {\n      this.#animation = imageDefinition;\n      this.#spriteBitmap = this.#animation.getCurrentFrame();\n    } else {\n      this.#spriteBitmap = imageDefinition;\n    }\n    if (this.#spriteBitmap) {\n      this._boundingBoxCanvas.width = this.#spriteBitmap?.width ?? 0;\n      this._boundingBoxCanvas.height = this.#spriteBitmap?.height ?? 0;\n    } else {\n      console.error(`No image frame available for sprite.`, imageDefinition);\n    }\n  }\n\n  /**\n   * Render the sprite.\n   * @param {import('../geometry.js').Position} position - this will have been adjusted to the screen.\n   */\n  _doRender(position) {\n    if (!this.#spriteBitmap) {\n      return;\n    }\n    const frame = this.#animation\n      ? this.#animation.getCurrentFrame()\n      : this.#spriteBitmap;\n\n    this._boundingBoxCanvas.x = position.x - this._boundingBoxCanvas.width / 2;\n    this._boundingBoxCanvas.y = position.y - this._boundingBoxCanvas.height / 2;\n\n    this._context.drawImage(\n      frame.image,\n      position.x - frame.centreX,\n      position.y - frame.centreY\n    );\n  }\n}\n","/**\n * @file Canvas functions for handling text.\n *\n * @module utils/text/text\n *\n * @license\n * {@link https://opensource.org/license/mit/|MIT}\n *\n * Copyright 2024 Steve Butler\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the “Software”), to deal in\n * the Software without restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n * Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */\n\nimport * as fonts from './fonts.js';\n\n/**\n * @typedef {Object} TextBounds\n * @property {number} width - width of text\n * @property {number} width - height of text\n * @property {number} offsetTop - offset from text y position to top. This is negative.\n * @property {number} offsetCentreY - offset from text y position to centre. This is negative.\n */\n\n/**\n * Calculate the text bounds. Note that the box surrounds the entire text including\n * descenders.\n * @param {CanvasRenderingContext2D} context\n * @param {string} text\n * @returns {TextBounds}\n */\nexport function getTextBounds(context, text) {\n  const metrics = context.measureText(text);\n  return {\n    width: metrics.width,\n    height: metrics.fontBoundingBoxAscent + metrics.fontBoundingBoxDescent,\n    offsetTop: -metrics.fontBoundingBoxAscent,\n    offsetCentreY:\n      0.5 * (metrics.fontBoundingBoxDescent - metrics.fontBoundingBoxAscent),\n  };\n}\n\n/**\n * Wrap text based on https://codepen.io/nishiohirokazu/pen/jjNyye\n * @param {CanvasRenderingContext2D} context\n * @param {string} paragraph\n * @param {import('../geometry.js').Position} position\n * @param {Object} options\n * @param {number} options.xWrapPosition - position to wrap text.\n * @param {number} [options.lineSpacing = 1] - multiplier for line height. 1 shifts lines by the total font height.\n * @returns {number} the next line y position.\n */\nfunction wrapParagraph(context, paragraph, position, options) {\n  const words = paragraph.split(' ');\n  let x = position.x ?? 0;\n  let y = position.y ?? 0;\n  let maxLineLength = options.xWrapPosition - x;\n  let lineSpacing = options.lineSpacing ?? 1;\n  let line = '';\n  let lineHeight;\n\n  for (let n = 0; n < words.length; n++) {\n    let testLine = line + words[n] + ' ';\n    const bounds = getTextBounds(context);\n    if (!lineHeight) {\n      lineHeight = lineSpacing * bounds.height;\n    }\n    if (bounds.width > maxLineLength && n > 0) {\n      context.fillText(line, x, y);\n      line = words[n] + ' ';\n      y += lineHeight;\n    } else {\n      line = testLine;\n    }\n  }\n  context.fillText(line, x, y);\n  return y + lineHeight;\n}\n/**\n * Write text to the canvas. Text can be wrapped if required.\n * @param {CanvasRenderingContext2D} context\n * @param {*} text\n * @param {import('../geometry.js').Position} position\n * @param {Object} options\n * @param {number} [options.wrapAtX] - if null, undefined or zero, no wrapping occurs.\n * @param {number} [options.lineSpacing = 1] - multiplier for line height. 1 shifts lines by the total font height.\n * @param {string} [options.styleName] - named style. Picks up settings from module:utils/fonts\n * @param {string} [options.color] - color\n */\nexport function writeText(context, text, position, options) {\n  context.font = fonts.getCss(options?.styleName);\n  context.fillStyle = options?.color ?? 'white';\n  if (!options?.wrapAtX) {\n    context.fillText(text, position.x ?? 0, position.y ?? 0);\n  } else {\n    var paragraphs = text.split('\\n');\n    for (let n = 0; n < paragraphs.length; n++) {\n      options.y = wrapParagraph(context, paragraphs[n], position, options);\n    }\n  }\n}\n","/**\n * @file Debug utilities\n *\n * @module utils/debug\n *\n * @license\n * {@link https://opensource.org/license/mit/|MIT}\n *\n * Copyright 2024 Steve Butler\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the “Software”), to deal in\n * the Software without restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n * Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */\nexport const OPTIONS = {\n  /**\n   * Should sprite boxes be drawn.@type {boolean}\n   */\n  spriteBoxes: false,\n  /**\n   * Show framerate\n   */\n  showFps: true,\n};\n","/**\n * @file Basic sprite control\n *\n * @module utils/sprites/sprite\n *\n * @license\n * {@link https://opensource.org/license/mit/|MIT}\n *\n * Copyright 2024 Steve Butler\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the “Software”), to deal in\n * the Software without restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n * Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */\nimport { Position, Rectangle, Velocity } from '../geometry.js';\nimport { SpriteCanvasRenderer } from './spriteRenderers.js'; //eslint-disable-line no-unused-vars\n\n/**\n * @typedef {function} SpriteClickHandler\n * @param {Sprite} target - the sprite that was clicked. This prevents the need\n * to use 'this' which may not be correct in the context.\n * @param {Point} relativePoint - the position in the Sprite relative to its top left corner\n * @param {Object} detail - extended event information.\n */\n\n/**\n * Encapsulated sprite.\n */\nexport class Sprite {\n  /** @type {Position}*/\n  #position = new Position(0, 0, 0);\n  /** @type {Velocity} */\n  #velocity = new Velocity(0, 0, 0);\n  /** @type {SpriteCanvasRenderer[]} */\n  #renderer;\n  /** @type {boolean} */\n  #multiRenderers;\n  /** @type {AbstractModifier} */\n  modifier;\n  /** @type {boolean} */\n  visible;\n  /** @type {number} */\n  opacity;\n\n  /**\n   * @param {Object} options\n   * @param {SpriteCanvasRenderer } options.renderer - the renderer or renderers that render the sprite\n   * rather than the world.\n   */\n  constructor(options) {\n    this.#renderer = options?.renderer;\n    this.#multiRenderers = Array.isArray(this.#renderer);\n    this.visible = true;\n    this.opacity = 1;\n  }\n  /**\n   * Get the current position.\n   * @returns {Position}\n   */\n  get position() {\n    return this.#position;\n  }\n\n  /**\n   * Set the current position. Invalid values become 0.\n   * @param {Position} nextPosition\n   */\n  set position(nextPosition) {\n    this.#position.x = this.valueOrZero(nextPosition.x);\n    this.#position.y = this.valueOrZero(nextPosition.y);\n    this.#position.rotation = this.valueOrZero(nextPosition.rotation);\n  }\n\n  /**\n   * Get the current motion.\n   * @returns {Velocity}\n   */\n\n  get velocity() {\n    return this.#velocity;\n  }\n\n  /**\n   * Set the current Velocity. Invalid values become 0.\n   * @param {Velocity} nextVelocity\n   */\n  set velocity(nextVelocity) {\n    this.#velocity.x = this.valueOrZero(nextVelocity.x);\n    this.#velocity.y = this.valueOrZero(nextVelocity.y);\n    this.#velocity.rotation = this.valueOrZero(nextVelocity.rotation);\n  }\n\n  /**\n   * Returns the value but converts non-numeric values to 0.\n   * @param {number} value\n   * @returns {number}\n   */\n  valueOrZero(value) {\n    return typeof value === 'number' ? value : 0;\n  }\n\n  /**\n   * Update the sprite. Calls the sprite's mover and then renderer.\n   * @param {number} deltaSeconds - elapsed time.\n   */\n  update(deltaSeconds) {\n    if (this.modifier) {\n      this.modifier = this.modifier.update(this, deltaSeconds);\n    }\n    if (this.visible) {\n      this.#render();\n    }\n  }\n  /**\n   * Render the sprite by calling the sprite's renderer\n   */\n  #render() {\n    if (!this.#renderer) {\n      return;\n    }\n    if (!this.#renderer.forEach) {\n      this.#renderer.render(this.#position, this.opacity);\n    } else {\n      this.#renderer.forEach((renderer) =>\n        renderer.render(this.#position, this.opacity)\n      );\n    }\n  }\n\n  /** Get the bounding box for the sprite.\n   * @returns {geometry.Rectangle}\n   */\n  getBoundingBox() {\n    const boundsCanvas = this.#renderer.getBoundingBoxCanvas();\n    return new Rectangle(\n      this.position.x - boundsCanvas.width / 2,\n      this.position.y - boundsCanvas.height / 2,\n      boundsCanvas.width,\n      boundsCanvas.height\n    );\n  }\n}\n","/**\n * @file Interactions with the ui\n *\n * @module utils/ui/interactions\n *\n * @license\n * {@link https://opensource.org/license/mit/|MIT}\n *\n * Copyright 2024 Steve Butler\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the “Software”), to deal in\n * the Software without restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n * Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */\n\n/**\n * @typedef {function} UiClickCallback\n * @param {Object} target - initial object that triggered the handler\n * @param {import('../geometry.js').Point} point - the position that was clicked in world coordinates\n */\n\n/**\n * BAse for all UiClickHandlers\n */\nexport class UiClickHandler {\n  /** @type {UiClickCallback} */\n  #onClick;\n  /** @type {UiClickCallback} */\n  #onContextClick;\n  /** @type {UiClickCallback} */\n  #onPointerDown;\n  /** @type {UiClickCallback} */\n  #onPointerUp;\n\n  /** Set click handler. Note that this does not add a listener for the event.\n   * @param {UiClickCallback} handler\n   */\n  setOnClick(handler) {\n    this.#onClick = handler;\n  }\n\n  /** Set on context Click handler.\n   * @param {UiClickCallback} handler\n   */\n  setOnContextClick(handler) {\n    this.#onContextClick = handler;\n  }\n\n  /** Set pointer down handler. Note that this does not add a listener for the event.\n   * @param {UiClickCallback} handler\n   */\n  setOnPointerDown(handler) {\n    this.#onPointerDown = handler;\n  }\n\n  /** Set pointer up handler. Note that this does not add a listener for the event.\n   * @param {UiClickCallback} handler\n   */\n  setOnPointerUp(handler) {\n    this.#onPointerUp = handler;\n  }\n  /**\n   * Handle click\n   * @param {import('../geometry.js').Point} point\n   */\n  actionClick(point) {\n    this.#onClick?.(this, point);\n  }\n\n  /**\n   * Handle context click\n   * @param {import('../geometry.js').Point} point\n   */\n  actionContextClick(point) {\n    this.#onContextClick?.(this, point);\n  }\n\n  /**\n   * Handle pointer down\n   * @param {import('../geometry.js').Point} point\n   */\n  actionPointerDown(point) {\n    this.#onPointerDown?.(this, point);\n  }\n\n  /**\n   * Handle pointer up\n   * @param {import('../geometry.js').Point} point\n   */\n  actionPointerUp(point) {\n    this.#onPointerUp?.(this, point);\n  }\n}\n","/**\n * @file Support for emojis, especially as sprites.\n *\n * @module utils/text/emojis\n *\n * @license\n * {@link https://opensource.org/license/mit/|MIT}\n *\n * Copyright 2024 Steve Butler\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the “Software”), to deal in\n * the Software without restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n * Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */\n\nexport const Emojis = {\n  GRINNING: '😀',\n  SANTA: '🎅',\n  SHAKING: '\\u{1FAE8}',\n};\n\n/**\n * Check to see if the emojis are supported. Any emoji which fails to render,\n * is replaced by a number in square brackets. Note that the function just checks the centre\n * pixel so it may fail in some situations and think that a valid emoji has not\n * rendered.\n * @param {CanvasRenderingContext2D} context\n */\nexport function checkEmojis(context) {\n  let fallbackIndex = 0;\n  for (const key in Emojis) {\n    const metrics = context.measureText(Emojis[key]);\n    const height =\n      metrics.fontBoundingBoxAscent + metrics.fontBoundingBoxDescent;\n    const centreToBaseLine = 0.5 * height - metrics.fontBoundingBoxDescent;\n    context.fillText(Emojis[key], -0.5 * metrics.width, centreToBaseLine);\n    const alphaAtCentre = context.getImageData(0, 0, 1, 1).data[3];\n    if (alphaAtCentre <= 0) {\n      console.debug(`Emoji ${key} not supported.`);\n      Emojis[key] = `[${fallbackIndex++}]`;\n    }\n    context.clearRect(0, 0, metrics.width, height);\n  }\n}\n","/**\n * @file Load assets. This module is placed in the assets folder to simplify\n * dynamic imports using Parcel's import.meta.url property.\n *\n * @module utils\\assetLoaders.js\n *\n * @license\n * {@link https://opensource.org/license/mit/|MIT}\n *\n * Copyright 2024 Steve Butler (henspace.com).\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the “Software”), to deal in\n * the Software without restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n * Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */\n\n/**\n * @type {Object<string, URL>} Urls for dynamically loading resources\n */\nexport const Urls = {\n  DUNGEON_SCRIPT: new URL(\n    '../../assets/stories/dungeon_script.txt',\n    import.meta.url\n  ),\n};\n\n/**\n * Load text file from URL.\n * @param {URL} url\n * @return {Promise} fulfils to text or null.\n */\nexport function loadTextFromUrl(url) {\n  return fetch(url)\n    .then((response) => response.text())\n    .then((text) => text)\n    .catch((reason) => {\n      console.error(`Error fetching ${url}: ${reason}`);\n      return null;\n    });\n}\n\n/**\n * Load json from URL.\n * @param {URL} url\n * @return {Promise} fulfils to json object or null.\n */\nexport function loadJsonFromUrl(url) {\n  return fetch(url)\n    .then((response) => response.text())\n    .then((text) => text)\n    .catch((reason) => {\n      console.error(`Error fetching ${url}: ${reason}`);\n      return null;\n    });\n}\n","module.exports = require('./helpers/bundle-url').getBundleURL('9up4p') + \"dungeon_script.16cd73c2.txt\" + \"?\" + Date.now();","\"use strict\";\n\nvar bundleURL = {};\nfunction getBundleURLCached(id) {\n  var value = bundleURL[id];\n  if (!value) {\n    value = getBundleURL();\n    bundleURL[id] = value;\n  }\n  return value;\n}\nfunction getBundleURL() {\n  try {\n    throw new Error();\n  } catch (err) {\n    var matches = ('' + err.stack).match(/(https?|file|ftp|(chrome|moz|safari-web)-extension):\\/\\/[^)\\n]+/g);\n    if (matches) {\n      // The first two stack frames will be this function and getBundleURLCached.\n      // Use the 3rd one, which will be a runtime in the original bundle.\n      return getBaseURL(matches[2]);\n    }\n  }\n  return '/';\n}\nfunction getBaseURL(url) {\n  return ('' + url).replace(/^((?:https?|file|ftp|(chrome|moz|safari-web)-extension):\\/\\/.+)\\/[^/]+$/, '$1') + '/';\n}\n\n// TODO: Replace uses with `new URL(url).origin` when ie11 is no longer supported.\nfunction getOrigin(url) {\n  var matches = ('' + url).match(/(https?|file|ftp|(chrome|moz|safari-web)-extension):\\/\\/[^/]+/);\n  if (!matches) {\n    throw new Error('Origin not found');\n  }\n  return matches[0];\n}\nexports.getBundleURL = getBundleURLCached;\nexports.getBaseURL = getBaseURL;\nexports.getOrigin = getOrigin;","/**\n * @file File that actually processes the script.\n * The script parser acts as a state machine as it parses the script.\n * Dungeons work as levels.\n *\n * @module scriptReaders/scriptParser\n *\n * @license\n * {@link https://opensource.org/license/mit/|MIT}\n *\n * Copyright 2024 Steve Butler\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the “Software”), to deal in\n * the Software without restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n * Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */\n\nimport ACTOR_MAP from './actorMap.js';\nimport { SceneDefinition } from './sceneDefinitionParser.js';\nimport { CharacterTraits } from '../dnd/traits.js';\n\n/**\n * @typedef {Object} SectionParsingResult\n * @property {string} nextSectionId\n * @property {number} nextLineIndex\n */\n\n/**\n * Section IDs\n * @enum {string}\n */\nconst SectionId = {\n  LEVEL: 'LEVEL',\n  CAST: 'CAST',\n  MAP: 'MAP',\n};\n\n/** Basic parser for a section of the script. */\nclass AbstractSectionParser {\n  /** @type {SceneDefinition} */\n  sceneDefn;\n  /** Lines of the script. @type {string[]} */\n  lines;\n\n  /** @type {number} lineIndex */\n  lineIndex;\n\n  /**\n   * Construct parser.\n   * @param {number} lines\n   * @param {number} startLine\n   * @param {SceneDefinition} sceneDefn\n   */\n  constructor(lines, startLine, sceneDefn) {\n    this.lines = lines;\n    this.lineIndex = startLine;\n    this.sceneDefn = sceneDefn;\n  }\n  /**\n   * Parse lines.\n   * @returns {SectionParsingResult} next section and line\n   * @throws {Exception} parsing error has occurred.\n   */\n  parse() {\n    while (this.lineIndex < this.lines.length) {\n      const line = this.lines[this.lineIndex];\n      const nextSectionId = AbstractSectionParser.getSectionIdFromLine(line);\n      if (nextSectionId) {\n        return { nextSectionId: nextSectionId, nextLineIndex: this.lineIndex };\n      } else {\n        this.parseLine(line);\n        this.lineIndex++;\n      }\n    }\n    return null;\n  }\n\n  /**\n   * Find the first section in an array of lines.\n   * @param {string[]} lines \n   * @returns {SectionParsingResult} next section and line. Null if not found.\n   \n   */\n  static findFirstSection(lines) {\n    for (let index = 0; index < lines.length; index++) {\n      const id = AbstractSectionParser.getSectionIdFromLine(\n        lines[index].trim()\n      );\n      if (id) {\n        return { nextSectionId: id, nextLineIndex: index };\n      }\n    }\n    return null;\n  }\n\n  /**\n   * Parse.\n   * @param {string} line;\n   */\n  parseLine(lineUnused) {\n    throw 'Method parseLine should be overridden.';\n  }\n\n  /** Check the line to see if it is a section marker.\n   * @returns {string} the section section marker. Null if not a section marker.\n   */\n  static getSectionIdFromLine(line) {\n    const match = line.match(/^\\s*\\[ *([\\w ]+) *\\]/);\n    if (match) {\n      return match[1].toUpperCase();\n    }\n    return null;\n  }\n\n  /**\n   * Handle an error.\n   * @param {string} message\n   * @throws {Error}\n   */\n  fatalError(message) {\n    throw new Error(\n      `Error parsing script on line ${this.lineIndex + 1}: ${message}`\n    );\n  }\n\n  /**\n   * Handle ignorable error.\n   * @param {string} message\n   */\n  ignoreError(message) {\n    console.debug(\n      `Ignoring error parsing script on line ${this.lineIndex}: ${message}`\n    );\n  }\n}\n\n/**\n * Parser for introductions.\n */\nclass IntroParser extends AbstractSectionParser {\n  /**\n   * Construct parser.\n   * @param {number} lines\n   * @param {number} startLine\n   * @param {SceneDefinition} sceneDefn\n   */\n  constructor(lines, startLine, sceneDefn) {\n    super(lines, startLine, sceneDefn);\n    this.sceneDefn.intro = '';\n  }\n  /**\n   * Parse a line.\n   * @override\n   */\n  parseLine(line) {\n    this.sceneDefn.intro += line === '' ? '\\n' : line;\n  }\n}\n\n/**\n * Parser for the cast list.\n */\nclass CastParser extends AbstractSectionParser {\n  /**\n   * Construct parser.\n   * @param {number} lines\n   * @param {number} startLine\n   * @param {SceneDefinition} sceneDefn\n   */\n  constructor(lines, startLine, sceneDefn) {\n    super(lines, startLine, sceneDefn);\n  }\n  /**\n   * Parse a line.\n   * @override\n   */\n  parseLine(line) {\n    const match = line.match(/^\\s*(\\w+?) *x(\\d{1,2}) *([^:]*): *([\\w,:= /]*)/);\n    if (match) {\n      this.#parseShortFormActor(match);\n    } else {\n      this.#parseLongFormActor(line);\n    }\n  }\n\n  /**\n   * Parse a short form single line actor definition.\n   * @param {string[]} matchResults - results from regex match.\n   */\n  #parseShortFormActor(matchResults) {\n    const actorId = matchResults[1].toUpperCase();\n    const number = parseInt(matchResults[2]);\n    const name = matchResults[3];\n    const traitsDefn = matchResults[4];\n    for (let n = 0; n < number; n++) {\n      if (ACTOR_MAP.has(actorId)) {\n        try {\n          const traits = new CharacterTraits().setFromString(traitsDefn);\n          this.sceneDefn.enemies.push({\n            id: actorId,\n            name: name || 'mystery',\n            traits: traits,\n          });\n        } catch (error) {\n          this.fatalError(error.message);\n        }\n      } else {\n        this.fatalError(`Cast member ${actorId} does not exist.`);\n      }\n    }\n  }\n  /**\n   * Parse a line to build a long form, multiline actor\n   * @param {string} line - current line.\n   */\n  #parseLongFormActor(lineIgnored) {\n    this.fatalError('Long form actors not supported.');\n  }\n}\n\n/**\n * Parser for dungeon map.\n */\nclass MapParser extends AbstractSectionParser {\n  /**\n   * Construct parser.\n   * @param {number} lines\n   * @param {number} startLine\n   * @param {SceneDefinition} sceneDefn\n   */\n  constructor(lines, startLine, sceneDefn) {\n    super(lines, startLine, sceneDefn);\n  }\n  /**\n   * Parse a line.\n   * @override\n   */\n  parseLine(line) {\n    if (line !== '') {\n      this.sceneDefn.mapDesign.push(line);\n    }\n  }\n}\n\n/** Lines of the script. @type {string[]} */\nlet lines;\n\n/** Scenes @type {SceneDefinition[]} */\nlet sceneDefinitions;\n\n/**\n * Get a section parser for the section Id.\n * @param {string} sectionId\n * @param {number} lineIndex\n * @param {SceneDefinition} sceneDefn\n * @returns {SectionParser} null if the id is not valid.\n */\nfunction getParserForId(sectionId, lineIndex, sceneDefn) {\n  switch (sectionId) {\n    case SectionId.LEVEL:\n      return new IntroParser(lines, lineIndex + 1, sceneDefn); // skip the actual section ID line.\n    case SectionId.CAST:\n      return new CastParser(lines, lineIndex + 1, sceneDefn); // skip the actual section ID line.\n    case SectionId.MAP:\n      return new MapParser(lines, lineIndex + 1, sceneDefn); // skip the actual section ID line.\n  }\n  return null;\n}\n\n/**\n * Parse the script.\n *  @param {string} script\n * @returns {SceneDefinition[]} array of all the scene definitions.\n * @throws {Exception} thrown on parsing error.\n */\nexport default function parseScript(script) {\n  lines = script.split(/\\r?\\n/);\n  sceneDefinitions = [];\n  let sceneDefn = new SceneDefinition();\n  const sectionHunt = AbstractSectionParser.findFirstSection(lines);\n  if (!sectionHunt) {\n    throw new Error(`Invalid script. No section identifiers found.`);\n  }\n\n  let parser = getParserForId(\n    sectionHunt.nextSectionId,\n    sectionHunt.nextLineIndex,\n    sceneDefn\n  );\n  while (parser) {\n    const result = parser.parse();\n    if (!result?.nextSectionId || result.nextSectionId === SectionId.LEVEL) {\n      sceneDefinitions.push(sceneDefn);\n      sceneDefn = new SceneDefinition();\n    }\n    parser = !result\n      ? null\n      : getParserForId(result.nextSectionId, result.nextLineIndex, sceneDefn);\n  }\n  return sceneDefinitions;\n}\n","/**\n * @file Map of names to actor factories in the dungeon.\n *\n * @module scriptReaders/actorMap\n *\n * @license\n * {@link https://opensource.org/license/mit/|MIT}\n *\n * Copyright 2024 Steve Butler (henspace.com).\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the “Software”), to deal in\n * the Software without restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n * Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */\n\nimport { Sprite } from '../utils/sprites/sprite.js';\nimport { Actor } from '../utils/game/actors.js';\nimport * as spriteRenderers from '../utils/sprites/spriteRenderers.js';\nimport IMAGE_MANAGER from '../utils/sprites/imageManager.js';\nimport * as animation from '../utils/sprites/animation.js';\nimport { LoopMethod } from '../utils/arrays/indexer.js';\nimport { Position } from '../utils/geometry.js';\nimport SCREEN from '../utils/game/screen.js';\nimport WORLD from '../utils/game/world.js';\n\n/**\n * Specialist traits renderer\n */\nclass ActorTraitsRenderer extends spriteRenderers.MultiGaugeTileRenderer {\n  /** @type {Actor} */\n  actor;\n  /**\n   * The number of gauges is determined by the maximum length of the fill styles and\n   * stroke styles\n   * @param {CanvasRenderingContext2D} context\n   * @param {Object} options\n   * @param {number} options.tileSize\n   * @param {string[]} options.fillStyles\n   * @param {string[]} options.strokeStyles\n   */\n  constructor(context, options) {\n    super(context, options);\n  }\n  /**\n   * Render the sprite.\n   * @param {import('../geometry.js').Position} position - this will have been adjusted to the screen.\n   */\n  render(position) {\n    if (this.actor && this.actor.traits) {\n      const hp = this.actor.traits.get('HP');\n      const hpMax = this.actor.traits.get('HP_MAX');\n      this.setLevel(0, hp / hpMax);\n      this.setLevel(1, 1);\n    }\n    super.render(position);\n  }\n}\n/**\n * Create the actor.\n * @param {string} imageName - no extension\n * @returns {Actor}\n */\nfunction createAnimatedActor(imageName) {\n  const imageRenderer = new spriteRenderers.ImageSpriteCanvasRenderer(\n    SCREEN.getContext2D(),\n    new animation.KeyedAnimatedImages(\n      'idle',\n      new animation.AnimatedImage(\n        0,\n        {\n          prefix: imageName,\n          suffix: '.png',\n          startIndex: 1,\n          padding: 3,\n        },\n        {\n          framePeriodMs: 100,\n          loopMethod: LoopMethod.REVERSE,\n        }\n      )\n    )\n  );\n\n  const traitsRenderer = new ActorTraitsRenderer(SCREEN.getContext2D(), {\n    tileSize: WORLD.getTileMap().getGridSize() - 2,\n    fillStyles: ['red', 'blue'],\n    strokeStyles: [],\n  });\n  const actor = new Actor(\n    new Sprite({\n      renderer: [traitsRenderer, imageRenderer],\n    })\n  );\n  traitsRenderer.actor = actor;\n  actor.position = new Position(48, 48, 0);\n  actor.velocity = { x: -500, y: -70, rotation: 0.1 };\n  return actor;\n}\n\n/**\n * @param {string} imageName - without extension\n * @returns {Actor}\n */\nfunction createUnanimatedActor(imageName) {\n  const actor = new Actor(\n    new Sprite({\n      renderer: new spriteRenderers.ImageSpriteCanvasRenderer(\n        SCREEN.getContext2D(),\n        IMAGE_MANAGER.getSpriteBitmap(0, `${imageName}.png`)\n      ),\n    })\n  );\n  return actor;\n}\n\n/**\n * @typedef {Object} ActorMapCreator\n * @property {function():Actor} create\n */\n/**\n * Map of actor creators which are used to create actors based on a key.\n * @type {Map<string, ActorMapCreator>}\n */\n\nconst ACTOR_MAP = new Map([\n  ['HERO', { create: () => createAnimatedActor('hero') }],\n  ['MONSTER', { create: () => createAnimatedActor('orc') }],\n]);\n\nexport default ACTOR_MAP;\n","/**\n * @file Convert a screen definition into a scene.\n *\n * @module scriptReaders/sceneDefinitionParser\n *\n * @license\n * {@link https://opensource.org/license/mit/|MIT}\n *\n * Copyright 2024 Steve Butler (henspace.com).\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the “Software”), to deal in\n * the Software without restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n * Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */\n\nimport IMAGE_MANAGER from '../utils/sprites/imageManager.js';\nimport textureMap from '../../assets/images/dungeon.json';\nimport textureUrl from '../../assets/images/dungeon.png';\n\nimport { generateTileMapPlan } from '../utils/tileMaps/tilePlan.js';\nimport { TileMap } from '../utils/tileMaps/tileMap.js';\nimport TURN_MANAGER from '../utils/game/turnManager.js';\nimport WORLD from '../utils/game/world.js';\nimport GAME from '../utils/game/game.js';\nimport ACTOR_MAP from './actorMap.js';\nimport SCREEN from '../utils/game/screen.js';\nimport { TILE_MAP_KEYS } from './symbolMapping.js';\nimport UI from '../utils/dom/ui.js';\nimport { CharacterTraits } from '../dnd/traits.js';\nimport { AbstractScene } from '../utils/game/scene.js';\nconst GRID_SIZE = 48;\n\n/**\n * @typedef {Object} ActorDefn\n * @property {string} name\n * @property {import('../dnd/traits.js').CharacterTraits} traits\n */\n/**\n * Definition of a scene\n */\nexport class SceneDefinition {\n  /** @type {string} */\n  intro;\n  /** @type {Actors} */\n  enemies;\n  /** @type {string[]} */\n  mapDesign;\n  /**\n   * Construct an empty scene\n   */\n  constructor() {\n    this.enemies = [];\n    this.mapDesign = [];\n  }\n}\n\n/**\n * Create the enemies.\n * @param {SceneDefinition} sceneDefn\n * @returns {Actor[]}\n */\nfunction createEnemies(sceneDefn) {\n  const enemies = [];\n  sceneDefn.enemies.forEach((enemy) => {\n    const actor = ACTOR_MAP.get(enemy.id).create();\n    actor.traits = enemy.traits;\n    enemies.push(actor);\n  });\n  return enemies;\n}\n\n/**\n * Add the load method to the scene object.\n * @param {*} sceneDefn - the definition of the scene.\n * @returns {Promise} fulfils to null;\n */\nfunction createLoadFn(sceneDefnUnused) {\n  return () => {\n    return IMAGE_MANAGER.loadSpriteMap(textureMap, textureUrl);\n  };\n}\n\n/**\n * Add the load method to the scene object.\n * @param {*} sceneDefn - the definition of the scene.\n * @returns {Promise} fulfils to null;\n */\nfunction createInitialiseFn(sceneDefn) {\n  return () => {\n    const tileMap = new TileMap(\n      SCREEN.getContext2D(),\n      generateTileMapPlan(sceneDefn.mapDesign, TILE_MAP_KEYS),\n      GRID_SIZE\n    );\n    WORLD.setTileMap(tileMap);\n    const heroActor = ACTOR_MAP.get('HERO').create();\n    heroActor.traits = new CharacterTraits();\n    createEnemies(sceneDefn).forEach((enemy) => {\n      enemy.position = tileMap.getRandomFreeGroundTile().worldPoint;\n      WORLD.addActor(enemy);\n    });\n\n    GAME.setCameraToTrack(heroActor.sprite, 200, 0);\n\n    WORLD.addActor(heroActor);\n\n    TURN_MANAGER.startWithHero(heroActor);\n\n    UI.showMessage(sceneDefn.intro);\n    return Promise.resolve(null);\n  };\n}\n\n/**\n * Add the load method to the scene object.\n * @param {*} sceneDefn - the definition of the scene.\n */\nfunction createUpdateFn(sceneDefn) {\n  return () => {\n    return;\n  };\n}\n\n/**\n * Add the load method to the scene object.\n * @param {*} sceneDefn - the definition of the scene.\n * @returns {Promise} fulfils to null;\n */\nfunction createUnloadFn(sceneDefn) {\n  return () => {\n    return Promise.resolve(null);\n  };\n}\n\n/**\n * Parse the scene definition to create a Scene\n * @param {SceneDefinition} sceneDefn\n * @returns {Scene}\n */\nexport function parseSceneDefinition(sceneDefn) {\n  const scene = new AbstractScene();\n  scene.doLoad = createLoadFn(sceneDefn);\n  scene.doInitialise = createInitialiseFn(sceneDefn);\n  scene.doUpdate = createUpdateFn(sceneDefn);\n  scene.doUnload = createUnloadFn(sceneDefn);\n  return scene;\n}\n","{\"frames\": [\r\n\r\n{\r\n\t\"filename\": \"blank.png\",\r\n\t\"frame\": {\"x\":1,\"y\":95,\"w\":3,\"h\":3},\r\n\t\"rotated\": false,\r\n\t\"trimmed\": true,\r\n\t\"spriteSourceSize\": {\"x\":0,\"y\":0,\"w\":3,\"h\":3},\r\n\t\"sourceSize\": {\"w\":48,\"h\":48}\r\n},\r\n{\r\n\t\"filename\": \"block.png\",\r\n\t\"frame\": {\"x\":435,\"y\":1,\"w\":48,\"h\":48},\r\n\t\"rotated\": false,\r\n\t\"trimmed\": false,\r\n\t\"spriteSourceSize\": {\"x\":0,\"y\":0,\"w\":48,\"h\":48},\r\n\t\"sourceSize\": {\"w\":48,\"h\":48}\r\n},\r\n{\r\n\t\"filename\": \"blood-splat.png\",\r\n\t\"frame\": {\"x\":1,\"y\":1,\"w\":94,\"h\":92},\r\n\t\"rotated\": false,\r\n\t\"trimmed\": true,\r\n\t\"spriteSourceSize\": {\"x\":1,\"y\":4,\"w\":94,\"h\":92},\r\n\t\"sourceSize\": {\"w\":96,\"h\":96}\r\n},\r\n{\r\n\t\"filename\": \"door-B.png\",\r\n\t\"frame\": {\"x\":435,\"y\":51,\"w\":48,\"h\":48},\r\n\t\"rotated\": false,\r\n\t\"trimmed\": false,\r\n\t\"spriteSourceSize\": {\"x\":0,\"y\":0,\"w\":48,\"h\":48},\r\n\t\"sourceSize\": {\"w\":48,\"h\":48}\r\n},\r\n{\r\n\t\"filename\": \"door-L.png\",\r\n\t\"frame\": {\"x\":1071,\"y\":1,\"w\":33,\"h\":48},\r\n\t\"rotated\": false,\r\n\t\"trimmed\": true,\r\n\t\"spriteSourceSize\": {\"x\":15,\"y\":0,\"w\":33,\"h\":48},\r\n\t\"sourceSize\": {\"w\":48,\"h\":48}\r\n},\r\n{\r\n\t\"filename\": \"door-R.png\",\r\n\t\"frame\": {\"x\":1080,\"y\":51,\"w\":33,\"h\":48},\r\n\t\"rotated\": false,\r\n\t\"trimmed\": true,\r\n\t\"spriteSourceSize\": {\"x\":0,\"y\":0,\"w\":33,\"h\":48},\r\n\t\"sourceSize\": {\"w\":48,\"h\":48}\r\n},\r\n{\r\n\t\"filename\": \"door-T.png\",\r\n\t\"frame\": {\"x\":485,\"y\":1,\"w\":48,\"h\":48},\r\n\t\"rotated\": false,\r\n\t\"trimmed\": false,\r\n\t\"spriteSourceSize\": {\"x\":0,\"y\":0,\"w\":48,\"h\":48},\r\n\t\"sourceSize\": {\"w\":48,\"h\":48}\r\n},\r\n{\r\n\t\"filename\": \"floor-SBE.png\",\r\n\t\"frame\": {\"x\":485,\"y\":51,\"w\":48,\"h\":48},\r\n\t\"rotated\": false,\r\n\t\"trimmed\": false,\r\n\t\"spriteSourceSize\": {\"x\":0,\"y\":0,\"w\":48,\"h\":48},\r\n\t\"sourceSize\": {\"w\":48,\"h\":48}\r\n},\r\n{\r\n\t\"filename\": \"floor-SBW.png\",\r\n\t\"frame\": {\"x\":535,\"y\":1,\"w\":48,\"h\":48},\r\n\t\"rotated\": false,\r\n\t\"trimmed\": false,\r\n\t\"spriteSourceSize\": {\"x\":0,\"y\":0,\"w\":48,\"h\":48},\r\n\t\"sourceSize\": {\"w\":48,\"h\":48}\r\n},\r\n{\r\n\t\"filename\": \"floor.png\",\r\n\t\"frame\": {\"x\":535,\"y\":51,\"w\":48,\"h\":48},\r\n\t\"rotated\": false,\r\n\t\"trimmed\": false,\r\n\t\"spriteSourceSize\": {\"x\":0,\"y\":0,\"w\":48,\"h\":48},\r\n\t\"sourceSize\": {\"w\":48,\"h\":48}\r\n},\r\n{\r\n\t\"filename\": \"floor2-SBE.png\",\r\n\t\"frame\": {\"x\":585,\"y\":1,\"w\":48,\"h\":48},\r\n\t\"rotated\": false,\r\n\t\"trimmed\": false,\r\n\t\"spriteSourceSize\": {\"x\":0,\"y\":0,\"w\":48,\"h\":48},\r\n\t\"sourceSize\": {\"w\":48,\"h\":48}\r\n},\r\n{\r\n\t\"filename\": \"floor2-SBW.png\",\r\n\t\"frame\": {\"x\":585,\"y\":51,\"w\":48,\"h\":48},\r\n\t\"rotated\": false,\r\n\t\"trimmed\": false,\r\n\t\"spriteSourceSize\": {\"x\":0,\"y\":0,\"w\":48,\"h\":48},\r\n\t\"sourceSize\": {\"w\":48,\"h\":48}\r\n},\r\n{\r\n\t\"filename\": \"floor2.png\",\r\n\t\"frame\": {\"x\":635,\"y\":1,\"w\":48,\"h\":48},\r\n\t\"rotated\": false,\r\n\t\"trimmed\": false,\r\n\t\"spriteSourceSize\": {\"x\":0,\"y\":0,\"w\":48,\"h\":48},\r\n\t\"sourceSize\": {\"w\":48,\"h\":48}\r\n},\r\n{\r\n\t\"filename\": \"hero.png\",\r\n\t\"frame\": {\"x\":343,\"y\":1,\"w\":44,\"h\":49},\r\n\t\"rotated\": false,\r\n\t\"trimmed\": true,\r\n\t\"spriteSourceSize\": {\"x\":2,\"y\":0,\"w\":44,\"h\":49},\r\n\t\"sourceSize\": {\"w\":48,\"h\":49}\r\n},\r\n{\r\n\t\"filename\": \"hero001.png\",\r\n\t\"frame\": {\"x\":343,\"y\":1,\"w\":44,\"h\":49},\r\n\t\"rotated\": false,\r\n\t\"trimmed\": true,\r\n\t\"spriteSourceSize\": {\"x\":2,\"y\":0,\"w\":44,\"h\":49},\r\n\t\"sourceSize\": {\"w\":48,\"h\":49}\r\n},\r\n{\r\n\t\"filename\": \"hero002.png\",\r\n\t\"frame\": {\"x\":985,\"y\":51,\"w\":46,\"h\":48},\r\n\t\"rotated\": false,\r\n\t\"trimmed\": true,\r\n\t\"spriteSourceSize\": {\"x\":1,\"y\":1,\"w\":46,\"h\":48},\r\n\t\"sourceSize\": {\"w\":48,\"h\":49}\r\n},\r\n{\r\n\t\"filename\": \"hero003.png\",\r\n\t\"frame\": {\"x\":1033,\"y\":51,\"w\":45,\"h\":48},\r\n\t\"rotated\": false,\r\n\t\"trimmed\": true,\r\n\t\"spriteSourceSize\": {\"x\":0,\"y\":1,\"w\":45,\"h\":48},\r\n\t\"sourceSize\": {\"w\":49,\"h\":49}\r\n},\r\n{\r\n\t\"filename\": \"hero004.png\",\r\n\t\"frame\": {\"x\":389,\"y\":1,\"w\":44,\"h\":49},\r\n\t\"rotated\": false,\r\n\t\"trimmed\": true,\r\n\t\"spriteSourceSize\": {\"x\":0,\"y\":0,\"w\":44,\"h\":49},\r\n\t\"sourceSize\": {\"w\":49,\"h\":49}\r\n},\r\n{\r\n\t\"filename\": \"hud-arrow-down-000.png\",\r\n\t\"frame\": {\"x\":147,\"y\":52,\"w\":46,\"h\":46},\r\n\t\"rotated\": false,\r\n\t\"trimmed\": true,\r\n\t\"spriteSourceSize\": {\"x\":1,\"y\":1,\"w\":46,\"h\":46},\r\n\t\"sourceSize\": {\"w\":48,\"h\":48}\r\n},\r\n{\r\n\t\"filename\": \"hud-arrow-down-001.png\",\r\n\t\"frame\": {\"x\":195,\"y\":52,\"w\":46,\"h\":46},\r\n\t\"rotated\": false,\r\n\t\"trimmed\": true,\r\n\t\"spriteSourceSize\": {\"x\":1,\"y\":1,\"w\":46,\"h\":46},\r\n\t\"sourceSize\": {\"w\":48,\"h\":48}\r\n},\r\n{\r\n\t\"filename\": \"hud-arrow-left-000.png\",\r\n\t\"frame\": {\"x\":243,\"y\":52,\"w\":46,\"h\":46},\r\n\t\"rotated\": false,\r\n\t\"trimmed\": true,\r\n\t\"spriteSourceSize\": {\"x\":1,\"y\":1,\"w\":46,\"h\":46},\r\n\t\"sourceSize\": {\"w\":48,\"h\":48}\r\n},\r\n{\r\n\t\"filename\": \"hud-arrow-left-001.png\",\r\n\t\"frame\": {\"x\":291,\"y\":52,\"w\":46,\"h\":46},\r\n\t\"rotated\": false,\r\n\t\"trimmed\": true,\r\n\t\"spriteSourceSize\": {\"x\":1,\"y\":1,\"w\":46,\"h\":46},\r\n\t\"sourceSize\": {\"w\":48,\"h\":48}\r\n},\r\n{\r\n\t\"filename\": \"hud-arrow-right-000.png\",\r\n\t\"frame\": {\"x\":339,\"y\":52,\"w\":46,\"h\":46},\r\n\t\"rotated\": false,\r\n\t\"trimmed\": true,\r\n\t\"spriteSourceSize\": {\"x\":1,\"y\":1,\"w\":46,\"h\":46},\r\n\t\"sourceSize\": {\"w\":48,\"h\":48}\r\n},\r\n{\r\n\t\"filename\": \"hud-arrow-right-001.png\",\r\n\t\"frame\": {\"x\":387,\"y\":52,\"w\":46,\"h\":46},\r\n\t\"rotated\": false,\r\n\t\"trimmed\": true,\r\n\t\"spriteSourceSize\": {\"x\":1,\"y\":1,\"w\":46,\"h\":46},\r\n\t\"sourceSize\": {\"w\":48,\"h\":48}\r\n},\r\n{\r\n\t\"filename\": \"hud-arrow-up-000.png\",\r\n\t\"frame\": {\"x\":1220,\"y\":51,\"w\":46,\"h\":46},\r\n\t\"rotated\": false,\r\n\t\"trimmed\": true,\r\n\t\"spriteSourceSize\": {\"x\":1,\"y\":1,\"w\":46,\"h\":46},\r\n\t\"sourceSize\": {\"w\":48,\"h\":48}\r\n},\r\n{\r\n\t\"filename\": \"hud-arrow-up-001.png\",\r\n\t\"frame\": {\"x\":1246,\"y\":1,\"w\":46,\"h\":46},\r\n\t\"rotated\": false,\r\n\t\"trimmed\": true,\r\n\t\"spriteSourceSize\": {\"x\":1,\"y\":1,\"w\":46,\"h\":46},\r\n\t\"sourceSize\": {\"w\":48,\"h\":48}\r\n},\r\n{\r\n\t\"filename\": \"hud-auto-centre-000.png\",\r\n\t\"frame\": {\"x\":1268,\"y\":49,\"w\":46,\"h\":46},\r\n\t\"rotated\": false,\r\n\t\"trimmed\": true,\r\n\t\"spriteSourceSize\": {\"x\":1,\"y\":1,\"w\":46,\"h\":46},\r\n\t\"sourceSize\": {\"w\":48,\"h\":48}\r\n},\r\n{\r\n\t\"filename\": \"hud-auto-centre-001.png\",\r\n\t\"frame\": {\"x\":1294,\"y\":1,\"w\":46,\"h\":46},\r\n\t\"rotated\": false,\r\n\t\"trimmed\": true,\r\n\t\"spriteSourceSize\": {\"x\":1,\"y\":1,\"w\":46,\"h\":46},\r\n\t\"sourceSize\": {\"w\":48,\"h\":48}\r\n},\r\n{\r\n\t\"filename\": \"orc.png\",\r\n\t\"frame\": {\"x\":97,\"y\":1,\"w\":48,\"h\":49},\r\n\t\"rotated\": false,\r\n\t\"trimmed\": false,\r\n\t\"spriteSourceSize\": {\"x\":0,\"y\":0,\"w\":48,\"h\":49},\r\n\t\"sourceSize\": {\"w\":48,\"h\":49}\r\n},\r\n{\r\n\t\"filename\": \"orc001.png\",\r\n\t\"frame\": {\"x\":295,\"y\":1,\"w\":46,\"h\":49},\r\n\t\"rotated\": false,\r\n\t\"trimmed\": true,\r\n\t\"spriteSourceSize\": {\"x\":2,\"y\":0,\"w\":46,\"h\":49},\r\n\t\"sourceSize\": {\"w\":48,\"h\":49}\r\n},\r\n{\r\n\t\"filename\": \"orc002.png\",\r\n\t\"frame\": {\"x\":147,\"y\":1,\"w\":48,\"h\":49},\r\n\t\"rotated\": false,\r\n\t\"trimmed\": false,\r\n\t\"spriteSourceSize\": {\"x\":0,\"y\":0,\"w\":48,\"h\":49},\r\n\t\"sourceSize\": {\"w\":48,\"h\":49}\r\n},\r\n{\r\n\t\"filename\": \"orc003.png\",\r\n\t\"frame\": {\"x\":197,\"y\":1,\"w\":47,\"h\":49},\r\n\t\"rotated\": false,\r\n\t\"trimmed\": true,\r\n\t\"spriteSourceSize\": {\"x\":0,\"y\":0,\"w\":47,\"h\":49},\r\n\t\"sourceSize\": {\"w\":48,\"h\":49}\r\n},\r\n{\r\n\t\"filename\": \"orc004.png\",\r\n\t\"frame\": {\"x\":246,\"y\":1,\"w\":47,\"h\":49},\r\n\t\"rotated\": false,\r\n\t\"trimmed\": true,\r\n\t\"spriteSourceSize\": {\"x\":0,\"y\":0,\"w\":47,\"h\":49},\r\n\t\"sourceSize\": {\"w\":48,\"h\":49}\r\n},\r\n{\r\n\t\"filename\": \"RIP.png\",\r\n\t\"frame\": {\"x\":97,\"y\":52,\"w\":48,\"h\":46},\r\n\t\"rotated\": false,\r\n\t\"trimmed\": true,\r\n\t\"spriteSourceSize\": {\"x\":0,\"y\":2,\"w\":48,\"h\":46},\r\n\t\"sourceSize\": {\"w\":48,\"h\":48}\r\n},\r\n{\r\n\t\"filename\": \"wall-B.png\",\r\n\t\"frame\": {\"x\":635,\"y\":51,\"w\":48,\"h\":48},\r\n\t\"rotated\": false,\r\n\t\"trimmed\": false,\r\n\t\"spriteSourceSize\": {\"x\":0,\"y\":0,\"w\":48,\"h\":48},\r\n\t\"sourceSize\": {\"w\":48,\"h\":48}\r\n},\r\n{\r\n\t\"filename\": \"wall-BL.png\",\r\n\t\"frame\": {\"x\":1106,\"y\":1,\"w\":33,\"h\":48},\r\n\t\"rotated\": false,\r\n\t\"trimmed\": true,\r\n\t\"spriteSourceSize\": {\"x\":15,\"y\":0,\"w\":33,\"h\":48},\r\n\t\"sourceSize\": {\"w\":48,\"h\":48}\r\n},\r\n{\r\n\t\"filename\": \"wall-BLI.png\",\r\n\t\"frame\": {\"x\":685,\"y\":1,\"w\":48,\"h\":48},\r\n\t\"rotated\": false,\r\n\t\"trimmed\": false,\r\n\t\"spriteSourceSize\": {\"x\":0,\"y\":0,\"w\":48,\"h\":48},\r\n\t\"sourceSize\": {\"w\":48,\"h\":48}\r\n},\r\n{\r\n\t\"filename\": \"wall-BR.png\",\r\n\t\"frame\": {\"x\":1035,\"y\":1,\"w\":34,\"h\":48},\r\n\t\"rotated\": false,\r\n\t\"trimmed\": true,\r\n\t\"spriteSourceSize\": {\"x\":0,\"y\":0,\"w\":34,\"h\":48},\r\n\t\"sourceSize\": {\"w\":48,\"h\":48}\r\n},\r\n{\r\n\t\"filename\": \"wall-BRI.png\",\r\n\t\"frame\": {\"x\":685,\"y\":51,\"w\":48,\"h\":48},\r\n\t\"rotated\": false,\r\n\t\"trimmed\": false,\r\n\t\"spriteSourceSize\": {\"x\":0,\"y\":0,\"w\":48,\"h\":48},\r\n\t\"sourceSize\": {\"w\":48,\"h\":48}\r\n},\r\n{\r\n\t\"filename\": \"wall-BTEE.png\",\r\n\t\"frame\": {\"x\":735,\"y\":1,\"w\":48,\"h\":48},\r\n\t\"rotated\": false,\r\n\t\"trimmed\": false,\r\n\t\"spriteSourceSize\": {\"x\":0,\"y\":0,\"w\":48,\"h\":48},\r\n\t\"sourceSize\": {\"w\":48,\"h\":48}\r\n},\r\n{\r\n\t\"filename\": \"wall-HI.png\",\r\n\t\"frame\": {\"x\":735,\"y\":51,\"w\":48,\"h\":48},\r\n\t\"rotated\": false,\r\n\t\"trimmed\": false,\r\n\t\"spriteSourceSize\": {\"x\":0,\"y\":0,\"w\":48,\"h\":48},\r\n\t\"sourceSize\": {\"w\":48,\"h\":48}\r\n},\r\n{\r\n\t\"filename\": \"wall-L.png\",\r\n\t\"frame\": {\"x\":1115,\"y\":51,\"w\":33,\"h\":48},\r\n\t\"rotated\": false,\r\n\t\"trimmed\": true,\r\n\t\"spriteSourceSize\": {\"x\":15,\"y\":0,\"w\":33,\"h\":48},\r\n\t\"sourceSize\": {\"w\":48,\"h\":48}\r\n},\r\n{\r\n\t\"filename\": \"wall-LTEE.png\",\r\n\t\"frame\": {\"x\":1141,\"y\":1,\"w\":33,\"h\":48},\r\n\t\"rotated\": false,\r\n\t\"trimmed\": true,\r\n\t\"spriteSourceSize\": {\"x\":15,\"y\":0,\"w\":33,\"h\":48},\r\n\t\"sourceSize\": {\"w\":48,\"h\":48}\r\n},\r\n{\r\n\t\"filename\": \"wall-R.png\",\r\n\t\"frame\": {\"x\":1150,\"y\":51,\"w\":33,\"h\":48},\r\n\t\"rotated\": false,\r\n\t\"trimmed\": true,\r\n\t\"spriteSourceSize\": {\"x\":0,\"y\":0,\"w\":33,\"h\":48},\r\n\t\"sourceSize\": {\"w\":48,\"h\":48}\r\n},\r\n{\r\n\t\"filename\": \"wall-RTEE.png\",\r\n\t\"frame\": {\"x\":1176,\"y\":1,\"w\":33,\"h\":48},\r\n\t\"rotated\": false,\r\n\t\"trimmed\": true,\r\n\t\"spriteSourceSize\": {\"x\":0,\"y\":0,\"w\":33,\"h\":48},\r\n\t\"sourceSize\": {\"w\":48,\"h\":48}\r\n},\r\n{\r\n\t\"filename\": \"wall-T.png\",\r\n\t\"frame\": {\"x\":785,\"y\":1,\"w\":48,\"h\":48},\r\n\t\"rotated\": false,\r\n\t\"trimmed\": false,\r\n\t\"spriteSourceSize\": {\"x\":0,\"y\":0,\"w\":48,\"h\":48},\r\n\t\"sourceSize\": {\"w\":48,\"h\":48}\r\n},\r\n{\r\n\t\"filename\": \"wall-TL.png\",\r\n\t\"frame\": {\"x\":1185,\"y\":51,\"w\":33,\"h\":48},\r\n\t\"rotated\": false,\r\n\t\"trimmed\": true,\r\n\t\"spriteSourceSize\": {\"x\":15,\"y\":0,\"w\":33,\"h\":48},\r\n\t\"sourceSize\": {\"w\":48,\"h\":48}\r\n},\r\n{\r\n\t\"filename\": \"wall-TLI.png\",\r\n\t\"frame\": {\"x\":785,\"y\":51,\"w\":48,\"h\":48},\r\n\t\"rotated\": false,\r\n\t\"trimmed\": false,\r\n\t\"spriteSourceSize\": {\"x\":0,\"y\":0,\"w\":48,\"h\":48},\r\n\t\"sourceSize\": {\"w\":48,\"h\":48}\r\n},\r\n{\r\n\t\"filename\": \"wall-TR.png\",\r\n\t\"frame\": {\"x\":1211,\"y\":1,\"w\":33,\"h\":48},\r\n\t\"rotated\": false,\r\n\t\"trimmed\": true,\r\n\t\"spriteSourceSize\": {\"x\":0,\"y\":0,\"w\":33,\"h\":48},\r\n\t\"sourceSize\": {\"w\":48,\"h\":48}\r\n},\r\n{\r\n\t\"filename\": \"wall-TRI.png\",\r\n\t\"frame\": {\"x\":835,\"y\":1,\"w\":48,\"h\":48},\r\n\t\"rotated\": false,\r\n\t\"trimmed\": false,\r\n\t\"spriteSourceSize\": {\"x\":0,\"y\":0,\"w\":48,\"h\":48},\r\n\t\"sourceSize\": {\"w\":48,\"h\":48}\r\n},\r\n{\r\n\t\"filename\": \"wall-TTEE.png\",\r\n\t\"frame\": {\"x\":835,\"y\":51,\"w\":48,\"h\":48},\r\n\t\"rotated\": false,\r\n\t\"trimmed\": false,\r\n\t\"spriteSourceSize\": {\"x\":0,\"y\":0,\"w\":48,\"h\":48},\r\n\t\"sourceSize\": {\"w\":48,\"h\":48}\r\n},\r\n{\r\n\t\"filename\": \"wall-VI.png\",\r\n\t\"frame\": {\"x\":885,\"y\":1,\"w\":48,\"h\":48},\r\n\t\"rotated\": false,\r\n\t\"trimmed\": false,\r\n\t\"spriteSourceSize\": {\"x\":0,\"y\":0,\"w\":48,\"h\":48},\r\n\t\"sourceSize\": {\"w\":48,\"h\":48}\r\n},\r\n{\r\n\t\"filename\": \"wall-XI.png\",\r\n\t\"frame\": {\"x\":885,\"y\":51,\"w\":48,\"h\":48},\r\n\t\"rotated\": false,\r\n\t\"trimmed\": false,\r\n\t\"spriteSourceSize\": {\"x\":0,\"y\":0,\"w\":48,\"h\":48},\r\n\t\"sourceSize\": {\"w\":48,\"h\":48}\r\n},\r\n{\r\n\t\"filename\": \"wall2-B.png\",\r\n\t\"frame\": {\"x\":935,\"y\":1,\"w\":48,\"h\":48},\r\n\t\"rotated\": false,\r\n\t\"trimmed\": false,\r\n\t\"spriteSourceSize\": {\"x\":0,\"y\":0,\"w\":48,\"h\":48},\r\n\t\"sourceSize\": {\"w\":48,\"h\":48}\r\n},\r\n{\r\n\t\"filename\": \"wall2-HI.png\",\r\n\t\"frame\": {\"x\":935,\"y\":51,\"w\":48,\"h\":48},\r\n\t\"rotated\": false,\r\n\t\"trimmed\": false,\r\n\t\"spriteSourceSize\": {\"x\":0,\"y\":0,\"w\":48,\"h\":48},\r\n\t\"sourceSize\": {\"w\":48,\"h\":48}\r\n},\r\n{\r\n\t\"filename\": \"wall2-T.png\",\r\n\t\"frame\": {\"x\":985,\"y\":1,\"w\":48,\"h\":48},\r\n\t\"rotated\": false,\r\n\t\"trimmed\": false,\r\n\t\"spriteSourceSize\": {\"x\":0,\"y\":0,\"w\":48,\"h\":48},\r\n\t\"sourceSize\": {\"w\":48,\"h\":48}\r\n}],\r\n\"meta\": {\r\n\t\"app\": \"https://www.codeandweb.com/texturepacker\",\r\n\t\"version\": \"1.0\",\r\n\t\"image\": \"dungeon.png\",\r\n\t\"format\": \"RGBA8888\",\r\n\t\"size\": {\"w\":1341,\"h\":100},\r\n\t\"scale\": \"1\",\r\n\t\"smartupdate\": \"$TexturePacker:SmartUpdate:5b9f108ea06ab16fd677f7a7c0110162:1578bcb2c28a1c67406749ce63fc8b19:9c0fba27a8a0c106083a8713f6c67b32$\"\r\n}\r\n}\r\n","module.exports = require('./helpers/bundle-url').getBundleURL('9up4p') + \"dungeon.1980a572.png\" + \"?\" + Date.now();","/**\n * @file Tile map support\n *\n * @module utils/tileMaps/tilePlan\n *\n * @license\n * {@link https://opensource.org/license/mit/|MIT}\n *\n * Copyright 2024 Steve Butler\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the “Software”), to deal in\n * the Software without restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n * Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */\n\nimport { getSurrounds } from '../arrays/arrayManip.js';\n\n/** Symbol used to mark void tiles @type {string} */\nconst VOID_SYMBOL = ' ';\n\n/** Special symbols for constructing the dungeon.\n * The first character in each array is used as the default, so there should be\n * an image for that. Note that the symbols in the arrays must be single characters.\n * @type {Object<string, string[]>}\n */\nconst SpecialSymbols = {\n  WALL: ['#', '*', '|'],\n  DOOR_IN: ['-'],\n  DOOR_OUT: ['='],\n  GROUND: ['.', ':', ',', ';'],\n  VOID: [' '],\n};\n\n/**\n * Clarifiers appended to ambiguous design symbols.\n */\nconst Clarifiers = {\n  TOP_LEFT: '-TL',\n  TOP_LEFT_INTERNAL: '-TLI',\n  TOP: '-T',\n  TOP_RIGHT: '-TR',\n  TOP_RIGHT_INTERNAL: '-TRI',\n  RIGHT: '-R',\n  BOTTOM_RIGHT: '-BR',\n  BOTTOM_RIGHT_INTERNAL: '-BRI',\n  BOTTOM: '-B',\n  BOTTOM_LEFT: '-BL',\n  BOTTOM_LEFT_INTERNAL: '-BLI',\n  LEFT: '-L',\n  TOP_TEE: '-TTEE',\n  RIGHT_TEE: '-RTEE',\n  BOTTOM_TEE: '-BTEE',\n  LEFT_TEE: '-LTEE',\n  INTERNAL_CROSS: '-XI',\n  INTERNAL_VERTICAL: '-VI',\n  INTERNAL_HORIZONTAL: '-HI',\n};\n\n/**\n * Shadow clarifiers. Added to some symbols to mark it as being below a top wall.\n */\nconst ShadowClarifier = {\n  BELOW_WALL: '-SBW',\n  BELOW_END_WALL: '-SBE',\n};\n\n/**\n * Design created by users for a tile map.\n * The design comprises an array of strings. Each string is row in the tile map.\n * A single character is used for each tile. Users can use any character they want\n * except for the {@link SpecialSymbols} characters which have predefined meanings.\n * These predefined symbols can be ambiguous. E.g. the CORNER could be any of four possible\n * corners. These are clarified automatically and have a suffix added to clarify\n * its position.\n *  @typedef {string[]}TileMapDesign\n */\n\n/**\n * Two dimensional array of tile design information. This is different from the\n * design information as the design now exists as a two dimensional array of\n * TileDefinition.\n *\n * @typedef {Array.TileDefinition[]} TilePlan\n */\n\n/**\n * Tile Design Information.\n * @typedef {Object} TileDefinition\n * @property {string} name\n * @property {string} image\n */\n\n/**\n * Map of symbols to names and image names. The name just allows different tile\n * types to use the same image.\n * @typedef {Map<string, TileDesignInfo>} SymbolMap\n */\n\n/**\n * Converts a tile map design into a tile map plan\n * @param {TileMapDesign} design\n * @param {SymbolMap}} symbolMap\n */\nexport function generateTileMapPlan(design, symbolMap) {\n  let matrix = convertToMatrix(design);\n  matrix = clarifyDesign(matrix);\n  return createPlan(matrix, symbolMap);\n}\n\n/**\n * Convert the user's design from array of strings into a 2D array.\n * @returns {Array.string[]}\n */\nfunction convertToMatrix(design) {\n  const matrix = [];\n  let nColumns = 0;\n  design.forEach((row) => {\n    nColumns = Math.max(nColumns, row.length);\n  });\n  design.forEach((row) => {\n    if (row.length < nColumns) {\n      row = row + ' '.repeat(nColumns - length);\n    }\n    matrix.push(row.split(''));\n  });\n  return matrix;\n}\n\n/**\n * Go through the design matrix and convert any ambiguous symbols to more specific\n * ones\n * @param {Array.string[]} matrix\n */\nfunction clarifyDesign(matrix) {\n  const unambiguousMatrix = [];\n  matrix.forEach((rowValue, rowIndex) => {\n    const correctedRow = [];\n    unambiguousMatrix.push(correctedRow);\n    rowValue.forEach((colValue, colIndex) => {\n      const surrounds = getSurrounds(matrix, rowIndex, colIndex);\n      if (isVoid(colValue)) {\n        colValue = VOID_SYMBOL;\n      } else if (isGround(colValue)) {\n        colValue = clarifyGround(colValue, surrounds);\n      } else if (isPartOfWall(colValue)) {\n        colValue = clarifyWallPart(colValue, surrounds);\n      }\n      correctedRow.push(colValue);\n    });\n  });\n  return unambiguousMatrix;\n}\n\n/**\n * Test if symbol is a void.\n * @returns {boolean}\n */\nfunction isVoid(symbol) {\n  return SpecialSymbols.VOID.includes(symbol);\n}\n\n/**\n * Test if symbol is a door.\n * @returns {boolean}\n */\nfunction isDoor(symbol) {\n  return (\n    SpecialSymbols.DOOR_IN.includes(symbol) ||\n    SpecialSymbols.DOOR_OUT.includes(symbol)\n  );\n}\n\n/**\n * Test if symbol is a wall.\n * @returns {boolean}\n */\nfunction isWall(symbol) {\n  return SpecialSymbols.WALL.includes(symbol);\n}\n\n/**\n * Test if symbol is ground.\n * @returns {boolean}\n */\nfunction isGround(symbol) {\n  return SpecialSymbols.GROUND.includes(symbol);\n}\n/**\n * Test if the symbol, unclarified, is part of a wall.\n * @param {string} symbol\n * @returns {boolean}\n */\nfunction isPartOfWall(symbol) {\n  return isWall(symbol) || isDoor(symbol);\n}\n\n/**\n * Clarify the ground.\n * @param {string} value\n * @param {import('../arrays/arrayManip.js').Surrounds} surrounds\n * @return {string}\n */\nfunction clarifyGround(value, surrounds) {\n  if (isPartOfWall(surrounds.above)) {\n    return isPartOfWall(surrounds.tl)\n      ? (value += ShadowClarifier.BELOW_WALL)\n      : (value += ShadowClarifier.BELOW_END_WALL);\n  }\n  return value;\n}\n\n/**\n * Distinguish the type of tile based on its surroundings.\n * This function does not handle corners.\n * @param {string} value\n * @param {import('../arrays/arrayManip.js').Surrounds} surrounds\n * @return {string}\n */\nfunction clarifyWallPart(value, surrounds) {\n  let result = value;\n  // internals centre cross\n  if (\n    isPartOfWall(surrounds.above) &&\n    isPartOfWall(surrounds.right) &&\n    isPartOfWall(surrounds.below) &&\n    isPartOfWall(surrounds.left)\n  ) {\n    result += Clarifiers.INTERNAL_CROSS;\n  } else if (isGround(surrounds.left) && isGround(surrounds.right)) {\n    result += Clarifiers.INTERNAL_VERTICAL;\n  } else if (isGround(surrounds.above) && isGround(surrounds.below)) {\n    result += Clarifiers.INTERNAL_HORIZONTAL;\n  }\n\n  // Tees\n  else if (\n    isPartOfWall(surrounds.left) &&\n    isPartOfWall(surrounds.right) &&\n    isPartOfWall(surrounds.below)\n  ) {\n    result += Clarifiers.TOP_TEE;\n  } else if (\n    isPartOfWall(surrounds.above) &&\n    isPartOfWall(surrounds.below) &&\n    isPartOfWall(surrounds.left)\n  ) {\n    result += Clarifiers.RIGHT_TEE;\n  } else if (\n    isPartOfWall(surrounds.left) &&\n    isPartOfWall(surrounds.right) &&\n    isPartOfWall(surrounds.above)\n  ) {\n    result += Clarifiers.BOTTOM_TEE;\n  } else if (\n    isPartOfWall(surrounds.above) &&\n    isPartOfWall(surrounds.below) &&\n    isPartOfWall(surrounds.right)\n  ) {\n    result += Clarifiers.LEFT_TEE;\n  }\n  // corners\n  else if (isPartOfWall(surrounds.right) && isPartOfWall(surrounds.below)) {\n    result += isGround(surrounds.br)\n      ? Clarifiers.TOP_LEFT\n      : Clarifiers.TOP_LEFT_INTERNAL;\n  } else if (isPartOfWall(surrounds.left) && isPartOfWall(surrounds.below)) {\n    result += isGround(surrounds.bl)\n      ? Clarifiers.TOP_RIGHT\n      : Clarifiers.TOP_RIGHT_INTERNAL;\n  } else if (isPartOfWall(surrounds.left) && isPartOfWall(surrounds.above)) {\n    result += isGround(surrounds.tl)\n      ? Clarifiers.BOTTOM_RIGHT\n      : Clarifiers.BOTTOM_RIGHT_INTERNAL;\n  } else if (isPartOfWall(surrounds.right) && isPartOfWall(surrounds.above)) {\n    result += isGround(surrounds.tr)\n      ? Clarifiers.BOTTOM_LEFT\n      : Clarifiers.BOTTOM_LEFT_INTERNAL;\n  }\n  // straights\n  else if (isPartOfWall(surrounds.above) && isPartOfWall(surrounds.below)) {\n    // vertical\n    result += isGround(surrounds.right) ? Clarifiers.LEFT : Clarifiers.RIGHT;\n  } else if (isPartOfWall(surrounds.right) && isPartOfWall(surrounds.left)) {\n    // horizontal\n    result += isGround(surrounds.below) ? Clarifiers.TOP : Clarifiers.BOTTOM;\n  }\n\n  if (isPartOfWall(surrounds.above)) {\n    return (result += ShadowClarifier.BELOW_WALL);\n  }\n  return result;\n}\n\n/**\n * Convert a clarified design plan matrix into a tile plan.\n * @param {string[][]} matrix\n * @param {Map<string, *>} symbolMap\n * @returns {Array.<Array.<*>>}\n */\nfunction createPlan(matrix, symbolMap) {\n  const planMatrix = [];\n  matrix.forEach((rowValue) => {\n    const planRow = [];\n    planMatrix.push(planRow);\n    rowValue.forEach((columnValue) => {\n      planRow.push(getDesignInfo(columnValue, symbolMap));\n    });\n  });\n  return planMatrix;\n}\n\n/** Get the design info from the symbol map.\n * @param {string} symbol - clarified symbol.\n * @param {Map<string, *>} symbolMap\n * @returns {TileDesignInfo}\n */\nfunction getDesignInfo(symbol, symbolMap) {\n  if (symbol === VOID_SYMBOL) {\n    return null;\n  }\n  const match = symbol.match(/(.)(-[^-]*)?(-[^-]*)?/);\n  let info = symbolMap.get(symbol);\n  if (!info && match[2] && match[3]) {\n    info = symbolMap.get(`${match[1]}${match[2]}`); // no shadow clarifier\n  }\n  if (!info && match[2]) {\n    info = symbolMap.get(match[1]); // no clarifiers at all\n  }\n\n  if (!info) {\n    const fallbackSymbol = getFirstOfCohort(match[1]);\n    if (fallbackSymbol && fallbackSymbol !== match[1]) {\n      return getDesignInfo(\n        formClarifiedSymbol(fallbackSymbol, match[2], match[3]),\n        symbolMap\n      );\n    } else {\n      console.error(`Failed to find symbol for ${symbol}`);\n    }\n  }\n  return info;\n}\n\n/**\n * Searches the SpecialSymbols and finds the first entry in the array that matches\n * the unclarified symbol.\n * @param {string} unclarifiedSymbol\n * @returns {string} null if not found\n */\nfunction getFirstOfCohort(unclarifiedSymbol) {\n  for (const prop in SpecialSymbols) {\n    if (SpecialSymbols[prop].includes(unclarifiedSymbol)) {\n      return SpecialSymbols[prop][0];\n    }\n  }\n  return null;\n}\n\n/**\n * Add clarifiers onto symbol.\n * @param {string} unclarifiedSymbol\n * @param {string} clarifier\n * @param {string} shadowClarifier\n */\nfunction formClarifiedSymbol(unclarifiedSymbol, clarifier, shadowClarifier) {\n  let result = unclarifiedSymbol;\n  if (clarifier) {\n    result += clarifier;\n  }\n  if (shadowClarifier) {\n    result += shadowClarifier;\n  }\n  return result;\n}\n","/**\n * @file Various utilities for handling arrays\n *\n * @module utils/arrays/arrayManip\n *\n * @license\n * {@link https://opensource.org/license/mit/|MIT}\n *\n * Copyright 2024 Steve Butler\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the “Software”), to deal in\n * the Software without restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n * Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */\n\n/**\n * @typedef Surrounds\n * @property {*} tl - value to top left\n * @property {*} above - value above\n * @property {*} tr - value to top right\n * @property {*} right - value to right\n * @property {*} br - value to bottom right\n * @property {*} below - value below\n * @property {*} bl - value to bottom\n * @property {*} left - value to left\n */\n\n/**\n * Get the surround values from a 2D matrix\n * @param {Array.<Array.<*>>} matrix\n * @param {number} rowIndex\n * @param {number} columnIndex\n * @returns {Surrounds}\n */\nexport function getSurrounds(matrix, rowIndex, columnIndex) {\n  return {\n    tl: matrix[rowIndex - 1]?.[columnIndex - 1],\n    above: matrix[rowIndex - 1]?.[columnIndex],\n    tr: matrix[rowIndex - 1]?.[columnIndex + 1],\n    right: matrix[rowIndex]?.[columnIndex + 1],\n    br: matrix[rowIndex + 1]?.[columnIndex + 1],\n    below: matrix[rowIndex + 1]?.[columnIndex],\n    bl: matrix[rowIndex + 1]?.[columnIndex - 1],\n    left: matrix[rowIndex]?.[columnIndex - 1],\n  };\n}\n\n/**\n * Randomise an array.\n * @param {Object[]} source - array to randomise. The original will be modified.\n * @returns {Object[]} The source array which will have been randomised.\n */\nexport function randomise(source) {\n  let currentIndex = source.length;\n  let randomIndex;\n\n  // While there remain elements to shuffle.\n  while (currentIndex > 0) {\n    randomIndex = Math.floor(Math.random() * currentIndex);\n    currentIndex--;\n    // swap\n    [source[currentIndex], source[randomIndex]] = [\n      source[randomIndex],\n      source[currentIndex],\n    ];\n  }\n\n  return source;\n}\n","/**\n * @file Tile map\n *\n * @module utils/tileMaps/tileMap\n *\n * @license\n * {@link https://opensource.org/license/mit/|MIT}\n *\n * Copyright 2024 Steve Butler\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the “Software”), to deal in\n * the Software without restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n * Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */\n\nimport { Sprite } from '../sprites/sprite.js';\nimport IMAGE_MANAGER from '../sprites/imageManager.js';\nimport {\n  ImageSpriteCanvasRenderer,\n  RectSpriteCanvasRenderer,\n} from '../sprites/spriteRenderers.js';\nimport { Point, Position, Rectangle } from '../geometry.js';\nimport { UiClickHandler } from '../ui/interactions.js';\nimport { randomise } from '../arrays/arrayManip.js';\nimport { getSurrounds } from '../arrays/arrayManip.js';\nimport SCREEN from '../game/screen.js';\nimport { RayTracer } from './pathFinder.js';\nimport TURN_MANAGER from '../game/turnManager.js';\n\n/**\n * Detail for click events.\n * @enum {number}\n */\nexport const ClickEventFilter = {\n  MOVEMENT_TILE: 0,\n  COMBAT_TILE: 1,\n};\n\n/**\n * Roles that tiles adopt.\n * @enum {number}\n */\nexport const TileRole = {\n  OBSTACLE: -1,\n  GROUND: 0,\n  ENTRANCE: 1,\n  EXIT: 2,\n  STAIRS_UP: 3,\n  STAIRS_DOWN: 4,\n};\n/**\n * @typedef {Object} TileDefinition\n * @property {TileRole} role\n * @property {import('../sprites/sprite.js').SpriteClickHandler} onClick\n * @property {import('../sprites/sprite.js').SpriteClickHandler} onContextClick\n * @property {string} image - used to create the sprite.\n */\n\n/**\n * Tile class\n */\nexport class Tile extends UiClickHandler {\n  /** @type {Sprite} */\n  sprite;\n  /** @type {boolean} */\n  obstacle;\n  /** @type {Object[]} */\n  #occupants;\n  /** @type {Point} */\n  #gridPoint;\n  /** @type {Point} */\n  #worldPoint;\n  /** @type {TileRole} */\n  #role;\n\n  /** Construct tile\n   * @param {Sprite} tileSprite;\n   * @param {Object} options;\n   * @param {boolean} options.obstacle;\n   * @param {!Point} options.gridPoint;\n   * @param {!Point} options.worldPoint;\n   * @param {TileRole} options.role;\n   */\n  constructor(tileSprite, options) {\n    super();\n    this.sprite = tileSprite;\n    this.#occupants = new Map();\n    this.obstacle = options.obstacle;\n    this.#gridPoint = options.gridPoint;\n    this.#worldPoint = options.worldPoint;\n    this.#role = options.role;\n  }\n\n  /**\n   * Get the role.\n   */\n  get role() {\n    return this.#role;\n  }\n\n  /**\n   * Get the grid point.\n   * @returns {Point}\n   */\n  get gridPoint() {\n    return this.#gridPoint;\n  }\n  /**\n   * Get the world point.\n   * @returns {Point}\n   */\n  get worldPoint() {\n    return this.#worldPoint;\n  }\n\n  /** Add occupant.\n   * @param {Object}\n   */\n  addOccupant(occupant) {\n    this.#occupants.set(occupant, occupant);\n  }\n\n  /** Remove occupant.\n   * @param {Object}\n   */\n  deleteOccupant(occupant) {\n    this.#occupants.delete(occupant);\n  }\n\n  /** get occupants.\n   * @param {Object}\n   */\n  getOccupants() {\n    return this.#occupants;\n  }\n\n  /**\n   * Handle the click but change the point to the sprites' position\n   */\n  actionClick(pointUnused) {\n    super.actionClick(this.sprite.position);\n  }\n  /**\n   * Handle the click but change the point to the sprites' position\n   */\n  actionContextClick(pointUnused) {\n    super.actionClick(this.sprite.position);\n  }\n\n  /**\n   * Test if occupied\n   * @returns {boolean}\n   */\n  isOccupied() {\n    return this.#occupants.size > 0;\n  }\n\n  /**\n   * Test if tile can be passed by the actor\n   * @param {Object} actor\n   * @returns {boolean}\n   */\n  isPassableByActor(actor) {\n    if (this.obstacle) {\n      return false;\n    }\n    for (const occupant of this.#occupants.values()) {\n      if (occupant !== actor && occupant.obstacle) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  /**\n   * Test if tile can be seen through by the actor\n   * @param {Object} actor\n   * @returns {boolean}\n   */\n  isSeeThrough(actorUnused) {\n    if (\n      this.obstacle ||\n      this.#role === TileRole.ENTRANCE ||\n      this.#role === TileRole.EXIT\n    ) {\n      return false;\n    }\n    return true;\n  }\n}\n\n/**\n * Tile map\n */\nexport class TileMap {\n  /** @type {CanvasRenderingContext2D} */\n  #context;\n  /** @type {Tile[]} */\n  #tiles;\n  #tilesX;\n  #tilesY;\n  #gridSize;\n  #width;\n  #height;\n  /** @type {import('./pathFinder.js').Routes} */\n  #movementRoutes;\n  /** @type {Point{}} */\n  #movementGridPoints;\n  /** @type {Sprite} */\n  #movementTileHighlighter;\n  /** @type {Tile} */\n  #entrance;\n  /** @type {Tile} */\n  #exit;\n  /** @type {Tile[]} */\n  #randomGround;\n  /** @type {RayTracer} */\n  #heroRayTracer;\n  /** @type {Tile[]} */\n  #combatTileGridPoints;\n  /** @type {Sprite} */\n  #combatTileHighlighter;\n\n  /**\n   * Create tile map from 2D matrix\n   * @param {CanvasRenderingContext2D} context\n   * @param {Array.<TileDefinition>} plan\n   * @param {number} gridSize - in world coordinates\n   */\n  constructor(context, plan, gridSize) {\n    this.#context = context;\n    this.#movementTileHighlighter = new Sprite({\n      renderer: new RectSpriteCanvasRenderer(context, {\n        width: gridSize,\n        height: gridSize,\n        fillStyle: null,\n        strokeStyle: 'white',\n      }),\n    });\n    this.#combatTileHighlighter = new Sprite({\n      renderer: new RectSpriteCanvasRenderer(context, {\n        width: gridSize,\n        height: gridSize,\n        fillStyle: null,\n        strokeStyle: 'red',\n      }),\n    });\n    this.#gridSize = gridSize;\n    this.#tiles = [];\n    this.#tilesY = plan.length;\n    this.#tilesX = plan[0].length;\n    this.#width = gridSize * this.tilesX;\n    this.#height = gridSize * this.tilesY;\n    this.#randomGround = [];\n    plan.forEach((row, rowIndex) => {\n      const tileRow = [];\n      this.#tiles.push(tileRow);\n      row.forEach((tileDefn, columnIndex) => {\n        if (tileDefn) {\n          const sprite = new Sprite({\n            renderer: new ImageSpriteCanvasRenderer(\n              context,\n              IMAGE_MANAGER.getSpriteBitmap(0, tileDefn.image)\n            ),\n          });\n          const gridPoint = new Point(columnIndex, rowIndex);\n          const worldPoint = this.gridPointToWorldPoint(gridPoint);\n          let tile = new Tile(sprite, {\n            obstacle: tileDefn.role === TileRole.OBSTACLE,\n            gridPoint: gridPoint,\n            worldPoint: worldPoint,\n            role: tileDefn.role,\n          });\n          if (tileDefn.onClick) {\n            tile.setOnClick((target, point) =>\n              this.#filterClick(target, point, tileDefn.onClick)\n            );\n            tile.setOnContextClick(tileDefn.onContextClick);\n          }\n          this.processTileRole(tile);\n          tileRow.push(tile);\n          sprite.position.x = columnIndex * this.#gridSize + this.#gridSize / 2;\n          sprite.position.y = rowIndex * this.#gridSize + this.#gridSize / 2;\n        } else {\n          tileRow.push(null);\n        }\n      });\n    });\n    if (!this.#entrance) {\n      console.error(\n        'No entrance has been set. Setting to the first ground tile'\n      );\n      this.#entrance = this.#randomGround[0];\n    }\n  }\n\n  /**\n   * Process a tile's specific role.\n   * @param {Tile} tile\n   */\n  processTileRole(tile) {\n    switch (tile.role) {\n      case TileRole.ENTRANCE:\n        if (this.#entrance) {\n          const gp = tile.gridPoint;\n          console.error(\n            `Duplicate entrance found at (${gp.x}, ${gp.y}). Ignored.`\n          );\n        } else {\n          this.#entrance = tile;\n        }\n        break;\n      case TileRole.EXIT:\n        if (this.#exit) {\n          const gp = tile.gridPoint;\n          console.error(`Duplicate exit found at (${gp.x}, ${gp.y}). Ignored.`);\n        } else {\n          this.#exit = tile;\n        }\n        break;\n      case TileRole.GROUND:\n        this.#randomGround.push(tile);\n        break;\n    }\n  }\n\n  /**\n   * Update method to render tiles.\n   * @param {number} deltaSeconds - elapsed time.\n   */\n  update(deltaSeconds) {\n    this.#setRayTracer();\n    const visibleGridPoints = this.getVisibleGridPointRect();\n    for (\n      let row = visibleGridPoints.y;\n      row <= visibleGridPoints.y + visibleGridPoints.height;\n      row++\n    ) {\n      for (\n        let col = visibleGridPoints.x;\n        col <= visibleGridPoints.x + visibleGridPoints.width;\n        col++\n      ) {\n        if (this.#heroRayTracer?.isGridPointInRays(new Point(col, row))) {\n          const tile = this.#tiles[row][col];\n          tile?.sprite.update(deltaSeconds);\n        }\n      }\n    }\n    this.#highlightTiles(deltaSeconds);\n  }\n\n  /**\n   * Set up the ray tracer if not already set.\n   */\n  #setRayTracer() {\n    if (!this.#heroRayTracer) {\n      const hero = TURN_MANAGER.getHeroActor();\n      if (hero) {\n        this.#heroRayTracer = new RayTracer(this, hero);\n      }\n    }\n    this.#heroRayTracer.findReachedTiles();\n  }\n\n  /**\n   * Get the visible bounds as a rectangle in gridpoints.\n   * @returns {Rectangle}\n   */\n  getVisibleGridPointRect() {\n    const visibleBounds = SCREEN.geWorldInCanvasBounds();\n    const gridPointTL = this.worldPointToGrid(\n      new Point(visibleBounds.x, visibleBounds.y)\n    );\n    const gridPointBR = this.worldPointToGrid(\n      new Point(\n        visibleBounds.x + visibleBounds.width,\n        visibleBounds.y + visibleBounds.height\n      )\n    );\n    const minCol = Math.max(0, gridPointTL.x);\n    const maxCol = Math.min(this.#tilesX - 1, gridPointBR.x);\n    const minRow = Math.max(0, gridPointTL.y);\n    const maxRow = Math.min(this.#tilesY - 1, gridPointBR.y);\n    return new Rectangle(minCol, minRow, maxCol - minCol, maxRow - minRow);\n  }\n\n  /**\n   * Get the gridsize\n   * @returns {number}\n   */\n  getGridSize() {\n    return this.#gridSize;\n  }\n\n  /** Get world dimensions.\n   * @returns {import('../geometry.js').Dims2D}\n   */\n  getDimensions() {\n    return { width: this.#width, height: this.#height };\n  }\n\n  /**\n   * Get sprite at position.\n   * @param {Point} point - in world coordinates.\n   * @returns {Tile} null if no tile.\n   */\n  getTileAtWorldPoint(point) {\n    const gridPoint = this.worldPointToGrid(point);\n    return this.getTileAtGridPoint(gridPoint);\n  }\n\n  /**\n   * Get sprite at position.\n   * @param {Point} point - in grid coordinates.\n   * @returns {Tile} null if no tile.\n   */\n  getTileAtGridPoint(gridPoint) {\n    if (!gridPoint) {\n      return null;\n    }\n    const row = gridPoint.y;\n    const col = gridPoint.x;\n    if (col >= 0 && row >= 0 && col < this.#tilesX && row < this.#tilesY) {\n      return this.#tiles[row][col];\n    }\n    return null;\n  }\n\n  /**\n   * Convert world coordinate to mad grid reference.\n   * @param {Point} point\n   * @returns {Point}\n   */\n  worldPointToGrid(point) {\n    return new Point(\n      Math.floor(point.x / this.#gridSize),\n      Math.floor(point.y / this.#gridSize)\n    );\n  }\n\n  /**\n   * Get a world point aligned to the centre of a tile\n   * @param {Point} point\n   */\n  gridAlignedWorldPoint(point) {\n    const gridPoint = this.worldPointToGrid(point);\n    return this.gridPointToWorldPoint(gridPoint);\n  }\n\n  /** Convert a point in tile coordinates to world coordinates.\n   * @param {Point}\n   * @returns {Point}\n   */\n  gridPointToWorldPoint(point) {\n    const halfGrid = 0.5 * this.#gridSize;\n    return new Point(\n      point.x * this.#gridSize + halfGrid,\n      point.y * this.#gridSize + halfGrid\n    );\n  }\n\n  /** Get the world position of the entrance. The default is the first tile if there\n   * is no door\n   * @returns {Point}\n   */\n  getWorldPositionOfEntrance() {\n    return this.gridPointToWorldPoint(this.getGridPositionOfEntrance());\n  }\n  /** Get the grid position of the door at index. If there are no doors, then\n   * the entrance is the first ground tile\n   * @returns {Point}\n   */\n  getGridPositionOfEntrance() {\n    return this.#entrance.gridPoint;\n  }\n\n  /**\n   * Set the highlighted routes.\n   * @param {*} routes\n   */\n  setMovementRoutes(routes) {\n    this.#movementRoutes = routes;\n    if (routes) {\n      this.#movementGridPoints = new Map();\n      this.#movementRoutes.forEach((gridPoints) =>\n        gridPoints.forEach((gridPoint) => {\n          this.#movementGridPoints.set(gridPoint, gridPoint);\n        })\n      );\n    } else {\n      this.#movementGridPoints = null;\n    }\n  }\n\n  /**\n   * Set combat tiles\n   * @param {Actor[]} actors - actors where combat can take place.\n   */\n  setCombatActors(actors) {\n    this.#combatTileGridPoints = [];\n    actors?.forEach((actor) => {\n      this.#combatTileGridPoints.push(this.worldPointToGrid(actor.position));\n    });\n  }\n\n  /**\n   * Highlight routes marked by the highlighters. There are three possible highlights:\n   * movement, combat and interaction.\n   * @param {number} deltaSeconds\n   */\n  #highlightTiles(deltaSeconds) {\n    this.#highlightMovementTiles(deltaSeconds);\n    this.#highlightCombatTiles(deltaSeconds);\n  }\n\n  /**\n   * Highlight movement routes.\n   * @param {number} deltaSeconds\n   */\n  #highlightMovementTiles(deltaSeconds) {\n    this.#movementGridPoints?.forEach((gridPoint) => {\n      this.#movementTileHighlighter.position =\n        this.gridPointToWorldPoint(gridPoint);\n      this.#movementTileHighlighter.update(deltaSeconds);\n    });\n  }\n\n  /**\n   * Highlight movement routes.\n   * @param {number} deltaSeconds\n   */\n  #highlightCombatTiles(deltaSeconds) {\n    this.#combatTileGridPoints?.forEach((gp) => {\n      this.#combatTileHighlighter.position = this.gridPointToWorldPoint(gp);\n      this.#combatTileHighlighter.update(deltaSeconds);\n    });\n  }\n\n  /**\n   * Handle a tile click.\n   * To be actioned a tile must be in the highlightedRoutes\n   * @param {Sprite} target - the sprite that was clicked. This prevents the need\n   * to use 'this' which may not be correct in the context.\n   * @param {Point} point - the position in the world that was clicked\n   * @param {import('../sprites/sprite.js').SpriteClickHandler} clickHandler\n   */\n  #filterClick(target, point, clickHandler) {\n    if (this.#movementRoutes?.containsGridPoint(this.worldPointToGrid(point))) {\n      clickHandler(target, point, { filter: ClickEventFilter.MOVEMENT_TILE });\n      return;\n    }\n    const gridPoint = this.worldPointToGrid(point);\n    this.#combatTileGridPoints?.forEach((gp) => {\n      if (gp.isCoincident(gridPoint)) {\n        clickHandler(target, point, {\n          filter: ClickEventFilter.COMBAT_TILE,\n        });\n        return;\n      }\n    });\n    console.debug('Ignore click outside of highlighted area');\n  }\n\n  /**\n   * Get waypoints to reach destination grid point\n   * @param {Point} worldPoint - destination\n   * @returns {Point[]} null if no route currently found.\n   */\n  getWaypointsToWorldPoint(worldPoint) {\n    const destination = this.worldPointToGrid(worldPoint);\n    return this.#movementRoutes?.getWaypointsAsWorldPoints(destination);\n  }\n\n  /**\n   * Get a random unoccupied ground tile.\n   * @returns {Tile} null if no free ground tile.\n   */\n  getRandomFreeGroundTile() {\n    randomise(this.#randomGround);\n    for (const tile of this.#randomGround) {\n      if (!tile.isOccupied()) {\n        return tile;\n      }\n    }\n    return null;\n  }\n\n  /**\n   * Test if point is passable.\n   * @param {Point} gridPoint - row and col coordinates.\n   * @param {import('../game/actors.js').Actor} actor - actor trying to pass\n   * @returns {boolean}\n   */\n  isGridPointPassableByActor(gridPoint, actor) {\n    const tile = this.getTileAtGridPoint(gridPoint);\n    if (!tile) {\n      return false;\n    }\n\n    return tile.isPassableByActor(actor);\n  }\n\n  /**\n   * Is the grid point visible by the hero.\n   * @param {Point} gridPoint\n   * @returns {boolean}\n   */\n  canHeroSeeGridPoint(gridPoint) {\n    return this.#heroRayTracer?.isGridPointInRays(gridPoint) ?? true;\n  }\n\n  /**\n   * Test if point can be seen through.\n   * @param {Point} gridPoint - row and col coordinates.\n   * @param {import('../game/actors.js').Actor} actor - actor trying to see\n   * @returns {boolean}\n   */\n  isSeeThrough(gridPoint, actor) {\n    const tile = this.getTileAtGridPoint(gridPoint);\n    if (!tile) {\n      return true;\n    }\n\n    return tile.isSeeThrough(actor);\n  }\n\n  /**\n   * Get the tiles surrounding a reference.\n   * @param {Point} gridPoint\n   */\n  getSurroundingTiles(gridPoint) {\n    return getSurrounds(this.#tiles, gridPoint.y, gridPoint.x);\n  }\n\n  /**\n   * Removed occupant from the list of occupants\n   * of the tile at the grid point.\n   * @param {Object} occupant\n   * @param {Point} gridPoint\n   */\n  deleteOccupancyOfGridPoint(occupant, gridPoint) {\n    this.getTileAtGridPoint(gridPoint)?.deleteOccupant(occupant);\n  }\n\n  /**\n   * Set the object's tile occupancy. It is removed from the list of occupants\n   * of the tile at the previous point and added to those of the next.\n   * @param {Object} occupant\n   * @param {Point} oldGridPoint\n   * @param {Point} newGridPoint\n   */\n  moveTileOccupancyGridPoint(occupant, oldGridPoint, newGridPoint) {\n    if (newGridPoint !== oldGridPoint) {\n      this.getTileAtGridPoint(oldGridPoint)?.deleteOccupant(occupant);\n      this.getTileAtGridPoint(newGridPoint)?.addOccupant(occupant);\n    }\n  }\n\n  /**\n   * Get all the participants around an actor. Diagonals are not included in\n   * potential participants.\n   * @param {Actor} actor\n   * @returns {Actor[]}\n   */\n  getParticipants(actor) {\n    const participants = [];\n    const surrounds = this.getSurroundingTiles(\n      this.worldPointToGrid(actor.position)\n    );\n    const tiles = [\n      surrounds.above,\n      surrounds.right,\n      surrounds.below,\n      surrounds.left,\n    ];\n    tiles.forEach((tile) => {\n      let tileOccupants = tile?.getOccupants();\n      tileOccupants?.forEach((occupant) => {\n        participants.push(occupant);\n      });\n    });\n    return participants;\n  }\n}\n","/**\n * @file Path finders within a tile map\n *\n * @module utils/tileMaps/pathFinder\n *\n * @license\n * {@link https://opensource.org/license/mit/|MIT}\n *\n * Copyright 2024 Steve Butler\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the “Software”), to deal in\n * the Software without restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n * Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */\n\nimport { Point } from '../geometry.js';\nimport * as maths from '../maths.js';\n\n/**\n * Map of located routes.\n * Note that all points are grid references NOT WORLD POINTS.\n */\nexport class Routes {\n  /** @type {Map<string, Point[]>} */\n  #routes;\n  /** @type {import('./tileMap.js').TileMap} */\n  #tileMap;\n\n  /**\n   * Create routes.\n   * @param {import('./tileMap.js').TileMap} tileMap\n   */\n  constructor(tileMap) {\n    this.#tileMap = tileMap;\n    this.#routes = new Map();\n  }\n\n  /**\n   * Set route to reach coordinates\n   * @param {Point[]} route\n   * @param {*} x\n   * @param {*} y\n   */\n  setRouteToCoords(route, x, y) {\n    this.#routes.set(this.coordsToKey(x, y), route);\n  }\n\n  /**\n   * Get route to reach coordinates\n   * @param {*} x\n   * @param {*} y\n   * @returns {Point[]} route}\n   */\n  getRouteToCoords(x, y) {\n    return this.#routes.get(this.coordsToKey(x, y));\n  }\n\n  /** Test if routes has route to coords.\n   * @param {number} x - grid position\n   * @param {number} y - grid position\n   * @returns {boolean}\n   */\n  hasRouteToCoords(x, y) {\n    return this.#routes.has(this.coordsToKey(x, y));\n  }\n  /**\n   * Create a key for the routes map from a row and column.\n   * @param {number} x\n   * @param {number} y\n   * @returns {string}\n   */\n  coordsToKey(x, y) {\n    return `${x}|${y}`;\n  }\n\n  /**\n   * Convert a map key to a grid reference.\n   * @param {string} key\n   * @returns {Point} Point giving the tile map grid reference.\n   */\n  keyToGridPoint(key) {\n    const reference = key.split('|');\n    return new Point(parseInt(reference[0]), parseInt(reference[1]));\n  }\n\n  /**\n   * Get the entries\n   * @returns {Iterator}\n   */\n  forEach(callback) {\n    this.#routes.forEach((value, key, map) => callback(value, key, map));\n  }\n\n  /**\n   * Check if any routes contains the coordinates\n   * @param {Point} point\n   * @returns {boolean}\n   */\n  containsGridPoint(point) {\n    return this.#routes.has(this.coordsToKey(point.x, point.y));\n  }\n\n  /**\n   * Get wayPoints to get to destination of x, y. The starting point is stripped\n   * off. Points are returned as grid references\n   * @param {Point} destination\n   * @returns {Point[]} array of points to reach grid reference x, y. Null if no route.\n   */\n  getWaypointsAsGridPoints(destination) {\n    const points = this.getRouteToCoords(destination.x, destination.y);\n    if (points.length > 1) {\n      return points.slice(1);\n    } else {\n      return null;\n    }\n  }\n\n  /**\n   * Get wayPoints to get to destination of x, y. The starting point is stripped\n   * off.\n   * @param {Point} destination\n   * @returns {Point[]} array of points to reach grid reference x, y\n   */\n  getWaypointsAsWorldPoints(destination) {\n    const waypoints = this.getWaypointsAsGridPoints(destination);\n    if (waypoints) {\n      return waypoints.map((gridPoint) =>\n        this.#tileMap.gridPointToWorldPoint(gridPoint)\n      );\n    } else {\n      return waypoints;\n    }\n  }\n}\n/**\n * Encapsulation of route finder for finding paths through routes.\n */\nexport class RouteFinder {\n  /** Actor trying to find routes. @type {import('./tileMap.js').Actor} */\n  actor;\n  /** @type {Route[]} */\n  #routes;\n  /** @type {import('./tileMap.js').TileMap} */\n  #tileMap;\n  /** @type {Point} */\n  #startPoint;\n\n  /** Create the route finder.\n   * @param {import('./tileMap.js').TileMap} tileMap\n   * @param {import('./tileMap.js').Actor} actor\n   */\n  constructor(tileMap, actor) {\n    this.#tileMap = tileMap;\n    this.actor = actor;\n  }\n  /**\n   * Find a route to the destination gridPoint. Note that it tries to find a route\n   * adjacent to the target grid point, not actually on the grid point. The resulting\n   * route is dumb, in that it does not try all options to maximise movement.\n   * @param {Point} startingGridPoint - starting point\n   * @param {Point} targetGridPoint - starting point\n   * @param {*} maxMove - maximum number of moves allowed.\n   * @returns {Map<string, Point[]>} null if no path available or necessary.\n   */\n  getDumbRouteNextTo(startingGridPoint, targetGridPoint, maxMove) {\n    let destination = this.#getAdjacentTarget(\n      startingGridPoint,\n      targetGridPoint\n    );\n    if (destination.coincident(startingGridPoint)) {\n      return [];\n    }\n    if (!this.#tileMap.isGridPointPassableByActor(destination, this.actor)) {\n      destination = this.#rotateGridPointAbout(destination, targetGridPoint);\n    }\n    let path = [];\n    let dX = Math.sign(destination.x - startingGridPoint.x);\n    let dY = Math.sign(destination.y - startingGridPoint.y);\n    let waypoint = Point.copy(startingGridPoint);\n    let movingX = Math.random() < 0.5;\n    let consecutiveFails = 0;\n    while (maxMove > 0) {\n      let nextPoint = Point.copy(waypoint);\n      let moved = false;\n      if (movingX && dX !== 0 && waypoint.x != destination.x) {\n        nextPoint.x += dX;\n        moved = true;\n      } else if (!movingX && dY !== 0 && waypoint.y != destination.y) {\n        nextPoint.y += dY;\n        moved = true;\n      }\n      moved =\n        moved &&\n        this.#tileMap.isGridPointPassableByActor(nextPoint, this.actor);\n\n      if (moved) {\n        consecutiveFails = 0;\n        waypoint = nextPoint;\n        maxMove--;\n      } else {\n        if (++consecutiveFails >= 2) {\n          break;\n        }\n        if (!waypoint.coincident(startingGridPoint)) {\n          path.push(this.#tileMap.gridPointToWorldPoint(waypoint));\n        }\n        startingGridPoint = waypoint;\n        movingX = !movingX; //flip axi\n      }\n    }\n    if (!waypoint.coincident(startingGridPoint)) {\n      path.push(this.#tileMap.gridPointToWorldPoint(waypoint));\n    }\n\n    return path;\n  }\n\n  /**\n   * Get all available routes as a Map of paths.\n   * @param {Point} startingGridPoint - starting point\n   * @param {*} maxMove - maximum number of moves allowed.\n   * @returns {Map<string, Point[]>}\n   */\n  getAllRoutesFrom(startingGridPoint, maxMove) {\n    this.#routes = new Routes(this.#tileMap);\n    this.#startPoint = startingGridPoint;\n    this.#findRoutes(startingGridPoint.x, startingGridPoint.y, maxMove, null);\n    return this.#routes;\n  }\n\n  /**\n   * @param {number} x - tile x index of current tile\n   * @param {number} y - tile y index of current tile\n   * @param {number} maxTiles - the maximum number of tiles that can be moved.\n   * @param {Point[]} [routePoints] - array of points that\n   * represent current path taken to get here. If null, this is the start of the\n   * route.\n   */\n  #findRoutes(x, y, movesLeft, routePoints) {\n    if (!routePoints) {\n      /* Initialise route. Don't check if it's clear as it may well be occupied\n       * by the sprite seeking a route.\n       */\n      routePoints = [new Point(x, y)];\n    } else {\n      if (x === this.#startPoint.x && y === this.#startPoint.y) {\n        return;\n      } else if (!this.#isTilePassable(x, y)) {\n        return;\n      }\n      const existingRoute = this.#routes.getRouteToCoords(x, y);\n      if (!existingRoute || routePoints.length < existingRoute.length - 1) {\n        routePoints.push(new Point(x, y)); // we have a route to this point\n        this.#routes.setRouteToCoords(routePoints, x, y);\n        movesLeft--;\n      } else {\n        return;\n      }\n    }\n\n    if (movesLeft > 0) {\n      // try all 4 directions\n      this.#findRoutes(x, y - 1, movesLeft, [...routePoints]); // up\n      this.#findRoutes(x + 1, y, movesLeft, [...routePoints]); // right\n      this.#findRoutes(x, y + 1, movesLeft, [...routePoints]); // down\n      this.#findRoutes(x - 1, y, movesLeft, [...routePoints]); // left\n    }\n  }\n\n  /** Check if tile is passable.\n   * @param {number} x\n   * @param {number} y\n   * @returns {boolean}\n   *\n   */\n  #isTilePassable(x, y) {\n    return this.#tileMap.isGridPointPassableByActor(\n      new Point(x, y),\n      this.actor\n    );\n  }\n\n  #getAdjacentTarget(current, target) {\n    const deltaX = target.x - current.x;\n    const deltaY = target.y - current.y;\n    let adjX = target.x;\n    let adjY = target.y;\n    if (Math.abs(deltaX) > Math.abs(deltaY)) {\n      adjX -= Math.sign(deltaX);\n    } else {\n      adjY -= Math.sign(deltaY);\n    }\n    return new Point(adjX, adjY);\n  }\n\n  /**\n   * Rotate a grid point about a target grid point. This does not rotate to\n   * diagonals.\n   */\n  #rotateGridPointAbout(gridPoint, originPoint) {\n    if (gridPoint.x === originPoint.x && gridPoint.y < originPoint.y) {\n      return new Point(gridPoint.x + 1, gridPoint.y + 1);\n    } else if (gridPoint.x > originPoint.x && gridPoint.y === originPoint.y) {\n      return new Point(gridPoint.x - 1, gridPoint.y + 1);\n    }\n    if (gridPoint.x === originPoint.x && gridPoint.y > originPoint.y) {\n      return new Point(gridPoint.x - 1, gridPoint.y - 1);\n    }\n    if (gridPoint.x < originPoint.x && gridPoint.y === originPoint.y) {\n      return new Point(gridPoint.x + 1, gridPoint.y - 1);\n    }\n    return gridPoint;\n  }\n}\n\n/**\n * Ray tracer from a starting point\n */\nexport class RayTracer {\n  /** Actor tracing rays. @type {import('./tileMap.js').Actor} */\n  #actor;\n  /** Start point of the ray. @type {Point} */\n  #rayStartPoint;\n  /** @type {import('./tileMap.js').TileMap} */\n  #tileMap;\n  /** @type {Map<string, Point} */\n  #reachedPoints;\n  /** @type {Point}   */\n  #lastStartPoint;\n  /** @type {Rectangle} */\n  #bounds;\n  /** @type {Rectangle} */\n  #lastBounds;\n\n  /** Create the ray tracer.\n   * @param {import('./tileMap.js').TileMap} tileMap\n   * @param {import('./tileMap.js').Actor} actor\n   */\n  constructor(tileMap, actor) {\n    this.#tileMap = tileMap;\n    this.#actor = actor;\n  }\n\n  /**\n   * Find all the tiles that are reached from the actor.\n   * @returns {Map<Point>} grid points of reached tiles.\n   */\n  findReachedTiles() {\n    this.#rayStartPoint = this.#tileMap.worldPointToGrid(this.#actor.position);\n    this.#bounds = this.#tileMap.getVisibleGridPointRect();\n    if (\n      this.#lastStartPoint &&\n      this.#lastStartPoint.coincident(this.#rayStartPoint) &&\n      this.#bounds &&\n      this.#bounds.equals(this.#lastBounds)\n    ) {\n      return this.#reachedPoints;\n    }\n\n    this.#reachedPoints = new Map();\n    this.#reachedPoints.set(\n      this.#rayStartPoint.toString(),\n      this.#rayStartPoint\n    );\n    this.#getRayEnds().forEach((endPoint) => {\n      this.#traceRayToEnd(endPoint);\n    });\n    this.#lastStartPoint = this.#rayStartPoint;\n    this.#lastBounds = this.#bounds;\n    return this.#reachedPoints;\n  }\n\n  /**\n   * Test if grid point in rays.\n   * @param {Point} gridPoint\n   * @returns {boolean}\n   */\n  isGridPointInRays(gridPoint) {\n    return this.#reachedPoints\n      ? this.#reachedPoints.has(gridPoint.toString())\n      : false;\n  }\n\n  /**\n   * Get the end point of the rays.\n   * @returns {Point[]} array of the end grid points for each ray.\n   */\n  #getRayEnds() {\n    const rayEnds = [];\n    for (\n      let col = this.#bounds.x;\n      col <= this.#bounds.x + this.#bounds.width;\n      col++\n    ) {\n      rayEnds.push(new Point(col, this.#bounds.y));\n      rayEnds.push(new Point(col, this.#bounds.y + this.#bounds.height));\n    }\n\n    for (\n      let row = this.#bounds.y + 1;\n      row <= this.#bounds.y + this.#bounds.height - 1;\n      row++\n    ) {\n      rayEnds.push(new Point(this.#bounds.x, row));\n      rayEnds.push(new Point(this.#bounds.x + this.#bounds.width, row));\n    }\n    return rayEnds;\n  }\n\n  /**\n   * Trace the ray to its end. Note that calculations are done in cartesian coordinates\n   * and so Y values need to be negated during calculations.\n   * @param {Point} endPoint\n   */\n  #traceRayToEnd(endPoint) {\n    let dx;\n    let dy;\n    let steps;\n    const angle = this.#rayStartPoint.getScreenAngleTo(endPoint);\n    const compassDirection = maths.angleToEightPointCompass(angle);\n    if (\n      Math.abs(endPoint.x - this.#rayStartPoint.x) >=\n      Math.abs(endPoint.y - this.#rayStartPoint.y)\n    ) {\n      dx = Math.sign(endPoint.x - this.#rayStartPoint.x);\n      steps = Math.abs(endPoint.x - this.#rayStartPoint.x);\n      dy = steps < 1 ? 0 : (endPoint.y - this.#rayStartPoint.y) / steps;\n    } else {\n      dy = Math.sign(endPoint.y - this.#rayStartPoint.y);\n      steps = Math.abs(endPoint.y - this.#rayStartPoint.y);\n      dx = steps < 1 ? 0 : (endPoint.x - this.#rayStartPoint.x) / steps;\n    }\n    let x = this.#rayStartPoint.x;\n    let y = this.#rayStartPoint.y;\n\n    let firstPoint = true;\n    while (steps >= 0) {\n      const gridPoint = new Point(Math.round(x), Math.round(y));\n      if (firstPoint || this.#tileMap.isSeeThrough(gridPoint, this.#actor)) {\n        this.#markReachedPoint(gridPoint, compassDirection);\n      } else {\n        break; // ray ends.\n      }\n      firstPoint = false;\n      x += dx;\n      y += dy;\n      steps--;\n    }\n  }\n\n  /**\n   * Mark the point as reached. Note that surrounding obstacle tiles need to be\n   * shown as well otherwise wall will not appear.\n   * @param {Point} point\n   * @param {number} compassDir - eight point compass direction of ray\n   */\n  #markReachedPoint(point, compassDir) {\n    this.#reachedPoints.set(point.toString(), point);\n    switch (compassDir) {\n      case maths.CompassEightPoint.N:\n        this.#markReachedIfNotSeeThrough(new Point(point.x - 1, point.y - 1));\n        this.#markReachedIfNotSeeThrough(new Point(point.x, point.y - 1));\n        this.#markReachedIfNotSeeThrough(new Point(point.x + 1, point.y - 1));\n        break;\n      case maths.CompassEightPoint.NE:\n        this.#markReachedIfNotSeeThrough(new Point(point.x, point.y - 1));\n        this.#markReachedIfNotSeeThrough(new Point(point.x + 1, point.y - 1));\n        this.#markReachedIfNotSeeThrough(new Point(point.x + 1, point.y));\n        break;\n      case maths.CompassEightPoint.E:\n        this.#markReachedIfNotSeeThrough(new Point(point.x + 1, point.y - 1));\n        this.#markReachedIfNotSeeThrough(new Point(point.x + 1, point.y));\n        this.#markReachedIfNotSeeThrough(new Point(point.x + 1, point.y + 1));\n        break;\n      case maths.CompassEightPoint.SE:\n        this.#markReachedIfNotSeeThrough(new Point(point.x + 1, point.y));\n        this.#markReachedIfNotSeeThrough(new Point(point.x + 1, point.y + 1));\n        this.#markReachedIfNotSeeThrough(new Point(point.x, point.y + 1));\n        break;\n      case maths.CompassEightPoint.S:\n        this.#markReachedIfNotSeeThrough(new Point(point.x - 1, point.y + 1));\n        this.#markReachedIfNotSeeThrough(new Point(point.x, point.y + 1));\n        this.#markReachedIfNotSeeThrough(new Point(point.x + 1, point.y + 1));\n        break;\n      case maths.CompassEightPoint.SW:\n        this.#markReachedIfNotSeeThrough(new Point(point.x - 1, point.y));\n        this.#markReachedIfNotSeeThrough(new Point(point.x - 1, point.y + 1));\n        this.#markReachedIfNotSeeThrough(new Point(point.x, point.y + 1));\n        break;\n      case maths.CompassEightPoint.W:\n        this.#markReachedIfNotSeeThrough(new Point(point.x - 1, point.y - 1));\n        this.#markReachedIfNotSeeThrough(new Point(point.x - 1, point.y));\n        this.#markReachedIfNotSeeThrough(new Point(point.x - 1, point.y + 1));\n        break;\n      case maths.CompassEightPoint.NW:\n        this.#markReachedIfNotSeeThrough(new Point(point.x - 1, point.y));\n        this.#markReachedIfNotSeeThrough(new Point(point.x - 1, point.y - 1));\n        this.#markReachedIfNotSeeThrough(new Point(point.x, point.y - 1));\n        break;\n    }\n  }\n  /**\n   * Mark a tile as Reached if not see through\n   * @param {Point} point\n   */\n  #markReachedIfNotSeeThrough(point) {\n    if (!this.#tileMap.isSeeThrough(point)) {\n      this.#reachedPoints.set(point.toString(), point);\n    }\n  }\n}\n","/**\n * @file Manage the game turns. The turnManager is a state machine and implemented\n * as a singleton.\n *\n * @module utils/game/turnManager/turnManager\n *\n * @license\n * {@link https://opensource.org/license/mit/|MIT}\n *\n * Copyright 2024 Steve Butler\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the “Software”), to deal in\n * the Software without restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n * Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */\nimport { RouteFinder } from '../tileMaps/pathFinder.js';\nimport { PathFollower } from '../sprites/movers.js';\nimport { ClickEventFilter } from '../tileMaps/tileMap.js';\n\nimport WORLD from './world.js';\nimport UI from '../dom/ui.js';\nimport * as fighting from '../../dnd/fighting.js';\nimport { rollDice } from '../dice.js';\n\n/**\n * Factor that is multiplied by the maxMovesPerTurn property of an actor to determine\n * if it will bother trying to reach the hero.\n */\nconst TOO_MANY_TURNS_TO_REACH = 2;\n/**\n * Enumeration of supported events\n * @enum {number}\n */\nconst EventId = {\n  CLICKED_FREE_GROUND: 0,\n  CLICKED_ENTRANCE: 1,\n  CLICKED_EXIT: 2,\n};\n\n\n\n/**\n * Basic State class\n */\nclass State {\n  constructor() {}\n\n  /**\n   * Transition to a new state\n   * @returns {Promise} fulfills to null\n   */\n  transitionTo(state) {\n    this._onExit().then(() => {\n      currentState = state;\n      return state._onEntry();\n    });\n  }\n\n  /**\n   * Perform actions on entering the state.\n   * @returns {Promise} fulfills to null\n   */\n  _onEntry() {\n    return Promise.resolve();\n  }\n  /**\n   * Handle event.\n   * @param {number} eventId\n   * @param  {import('../sprites/sprite.js').Sprite} sprite - the sprite initiating the event\n   * @param {Object} detail - object will depend on the eventId\n   * @returns {Promise} fulfills to null\n   */\n  onEvent(eventIdUnused) {\n    return Promise.resolve(null);\n  }\n  /**\n   * Actions when the state exits\n   * @returns {Promise} fulfills to null\n   */\n  _onExit() {\n    return Promise.resolve(null);\n  }\n}\n\n/**\n * At start state\n */\nclass AtStart extends State {\n  _onExit() {\n    heroActor.sprite.position = WORLD.getTileMap().getWorldPositionOfEntrance();\n    return Promise.resolve(null);\n  }\n}\n/**\n * State where the hero is in the map.\n */\nclass HeroInMapIdle extends State {\n  constructor() {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  async _onEntry() {\n    const tileMap = WORLD.getTileMap();\n    const routes = new RouteFinder(tileMap, heroActor).getAllRoutesFrom(\n      tileMap.worldPointToGrid(heroActor.sprite.position),\n      heroActor.maxTilesPerMove\n    );\n    tileMap.setMovementRoutes(routes);\n    tileMap.setCombatActors(tileMap.getParticipants(heroActor));\n    return Promise.resolve(null);\n  }\n  /**\n   * @override\n   * @param {number} eventId\n   * @param  {import('../sprites/sprite.js').Sprite} point - the point initiating the event\n   * @param {Object} detail - object will depend on the eventId\n   */\n  onEvent(eventId, point, detail) {\n    switch (eventId) {\n      case EventId.CLICKED_FREE_GROUND:\n        {\n          console.log(`DETAIL ${detail}`);\n          let promise;\n          if (detail?.filter === ClickEventFilter.COMBAT_TILE) {\n            promise = this.#fight(point);\n          } else {\n            promise = this.#move(point);\n          }\n          promise.then(() => this.transitionTo(new ComputerInMap()));\n        }\n\n        break;\n      case EventId.CLICKED_ENTRANCE:\n        alert('Wow! Leaving so early. That bit of code is not ready yet.');\n        break;\n      case EventId.CLICKED_EXIT:\n        alert('Trying to escape. That bit of code is not ready yet.');\n        break;\n    }\n    return Promise.resolve(null);\n  }\n\n  /**\n   * Move to point\n   * @param {Point} point\n   * @returns {Promise}\n   */\n  #move(point) {\n    const tileMap = WORLD.getTileMap();\n    const waypoints = tileMap.getWaypointsToWorldPoint(point);\n    tileMap.setMovementRoutes(null);\n    tileMap.setCombatActors(null);\n    if (waypoints) {\n      const modifier = new PathFollower(\n        { path: waypoints, speed: 100 },\n        heroActor.sprite.modifier\n      );\n      return modifier.applyAsTransientToSprite(heroActor.sprite);\n    } else {\n      return Promise.resolve();\n    }\n  }\n\n  /**\n   * Fight point\n   * @param {Point} point - position in world.\n   * @returns {Promise}\n   */\n  #fight(point) {\n    /** @type {import('../tileMaps/tileMap.js').TileMap} */\n    const tileMap = WORLD.getTileMap();\n    const tile = tileMap.getTileAtWorldPoint(point);\n    const targets = tile.getOccupants();\n    for (const target of targets.values()) {\n      fighting.resolveAttackerDefender(heroActor, target);\n    }\n    return Promise.resolve();\n  }\n\n}\n\nclass ComputerInMap extends State {\n  constructor() {\n    super();\n  }\n  async _onEntry() {\n    await super._onEntry();\n    const tileMap = WORLD.getTileMap();\n    \n    const routeFinder = new RouteFinder(tileMap);\n    const participants = tileMap.getParticipants(heroActor);\n    for (const actor of WORLD.getActors().values()) {\n      if (actor !== heroActor) {\n        if (participants.includes(actor)) {\n          fighting.resolveAttackerDefender(actor, heroActor);\n        } else {\n          await this.moveActorUsingRouteFinder(actor, tileMap, routeFinder);\n        }\n      }\n    }\n    this.transitionTo(new HeroInMapIdle());\n    return Promise.resolve(null);\n  }\n  /**\n   * Move actor to hero using the route finder\n   * @param {Actor} actor\n   * @param {TileMap} tileMap\n   * @param {RouteFinder} routeFinder\n   */\n  async moveActorUsingRouteFinder(actor, tileMap, routeFinder) {\n    const heroGridPos = tileMap.worldPointToGrid(heroActor.position);\n    const actorGridPos = tileMap.worldPointToGrid(actor.position);\n    const orthoSeparation =\n      Math.abs(heroGridPos.x - actorGridPos.x) +\n      Math.abs(heroGridPos.y - actorGridPos.y);\n    const maxSeparation = actor.maxTilesPerMove * TOO_MANY_TURNS_TO_REACH;\n    if (\n      orthoSeparation <= maxSeparation &&\n      tileMap.canHeroSeeGridPoint(actorGridPos)\n    ) {\n      routeFinder.actor = actor;\n      const waypoints = routeFinder.getDumbRouteNextTo(\n        actorGridPos,\n        heroGridPos,\n        actor.maxTilesPerMove\n      );\n      if (waypoints.length > 0) {\n        const modifier = new PathFollower(\n          { path: waypoints, speed: 200 },\n          actor.sprite.modifier\n        );\n        await modifier.applyAsTransientToSprite(actor.sprite);\n      }\n    }\n  }\n}\n\n\n\n/**\n * Trigger an event. This will then be passed to the current State to handle.\n * @param {number} eventId\n * @param  {import('../sprites/sprite.js').Sprite} sprite - the sprite initiating the event\n * @param {Object} detail - object will depend on the eventId\n */\nfunction triggerEvent(eventId, sprite, detail) {\n  currentState.onEvent(eventId, sprite, detail);\n}\n\n/**\n * Set the current hero sprite.\n * @returns {import('./actors.js').Actor}\n */\nfunction getHeroActor() {\n  return heroActor;\n}\n\n/**\n * Start\n * @param {import('./actors.js').Actor} actor - the hero actor\n */\nfunction startWithHero(actor) {\n  heroActor = actor;\n  currentState.transitionTo(new HeroInMapIdle());\n}\n\n/**\n * @type {import('./actors.js').Actor}\n */\nlet heroActor;\n\n/**\n * @type {State}\n */\nlet currentState = new AtStart();\n\n/**\n * Single instance of the turn manager.\n */\nconst TURN_MANAGER = {\n  EventId: EventId,\n  getHeroActor: getHeroActor,\n  startWithHero: startWithHero,\n  triggerEvent: triggerEvent,\n};\n\nexport default TURN_MANAGER;\n","/**\n * @file Movers for sprites\n *\n * @module utils/sprites/movers\n *\n * @license\n * {@link https://opensource.org/license/mit/|MIT}\n *\n * Copyright 2024 Steve Butler\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the “Software”), to deal in\n * the Software without restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n * Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */\n\nimport { AbstractModifier } from './modifiers.js';\n\n/**\n * Simple unbounded velocity mover\n */\nexport class VelocityMover extends AbstractModifier {\n  /** @type {import('../geometry.js').Point} */\n  #topLeft;\n  /** @type {import('../geometry.js').Point} */\n  #bottomRight;\n\n  /**\n   * @param {AbstractModifier} decoratedModifier\n   */\n  constructor(decoratedModifier) {\n    super(decoratedModifier);\n  }\n\n  /**\n   * Move sprite using its velocity\n   * @param {import('./sprite.js').Sprite} sprite\n   * @param {number} deltaSeconds - elapsed time\n   * @returns {AbstractModifier}\n   */\n  doUpdate(sprite, deltaSeconds) {\n    const position = sprite.position;\n    const velocity = sprite.velocity;\n\n    position.x += velocity.x * deltaSeconds;\n    position.y += velocity.y * deltaSeconds;\n\n    sprite.position = position;\n    sprite.velocity = velocity;\n    return this;\n  }\n}\n\n/**\n * Velocity aligner\n */\nexport class VelocityAligner extends AbstractModifier {\n  /** @type {number} */\n  #baseDirection;\n\n  /**\n   * Construct aligner. Rotations are worked out counter clockwise from the positive\n   * x axis direction. However, sprites are normally drawn vertically as you look at them;\n   * i.e they are pointing downwards or at -90 degrees from the horizontal axis. You can\n   * set this using the baseDirection parameter.\n   * @param {number} baseDirection - default alignment.\n   * @param {AbstractModifier} decoratedModifier\n   */\n  constructor(baseDirection = -Math.PI / 2, decoratedModifier) {\n    super(decoratedModifier);\n    this.#baseDirection = baseDirection;\n  }\n\n  /**\n   * Create a VelocityAligner. This is a convenience factory method that automatically\n   * sets the base direction to -90 degrees which is how sprites are normally drawn; i.e. upright\n   * instead of horizontally.\n   * @param {AbstractModifier} decoratedModifier\n   * @returns {VelocityAligner}\n   */\n  static createUprightAligner(decoratedModifier) {\n    return new VelocityAligner(-Math.PI / 2, decoratedModifier);\n  }\n\n  /**\n   * Align sprite using its velocity.\n   * @param {import('./sprite.js').Sprite} sprite\n   * @param {number} deltaSeconds - elapsed time\n   * @returns {AbstractModifier}\n   */\n  doUpdate(sprite, deltaSecondsIgnored) {\n    sprite.position.rotation =\n      sprite.velocity.getDirection() - this.#baseDirection;\n    return this;\n  }\n}\n/**\n * Bouncer mover\n */\nexport class Bouncer extends AbstractModifier {\n  /** @type {import('../geometry.js').Point} */\n  #topLeft;\n  /** @type {import('../geometry.js').Point} */\n  #bottomRight;\n\n  /**\n   * @param {import('../geometry.js').Rectangle} bounds\n   * @param {AbstractModifier} decoratedModifier\n   */\n  constructor(bounds, decoratedModifier) {\n    super(decoratedModifier);\n    this.#topLeft = bounds.getTopLeft();\n    this.#bottomRight = bounds.getBottomRight();\n  }\n\n  /**\n   * Move sprite using its velocity and bouncing on screen.\n   * @param {import('./sprite.js').Sprite} sprite\n   * @param {number} deltaSeconds - elapsed time\n   * @returns {AbstractModifier}\n   */\n  doUpdate(sprite, deltaSeconds) {\n    const position = sprite.position;\n    const velocity = sprite.velocity;\n\n    position.x += velocity.x * deltaSeconds;\n    position.y += velocity.y * deltaSeconds;\n    position.rotation += velocity.rotation * deltaSeconds;\n    if (position.x < this.#topLeft.x || position.x > this.#bottomRight.x) {\n      velocity.x *= -1;\n    }\n    if (position.y < this.#topLeft.y || position.y > this.#bottomRight.y) {\n      velocity.y *= -1;\n    }\n\n    sprite.position = position;\n    sprite.velocity = velocity;\n    return this;\n  }\n}\n\n/**\n * Tracker mover.\n */\nexport class Tracker extends AbstractModifier {\n  /** @type {import('./sprite.js').Sprite} */\n  #prey;\n  /** @type {number} */\n  #maxSeparation;\n  /** @type {number} */\n  #speed;\n\n  /**\n   *\n   * @param {Object} options\n   * @param {import('./sprite.js').Sprite} options.prey\n   * @param {number} options.maxSeparation - allowable distance between hunter and prey\n   * @param {number} options.speed - pixels / second\n   * @param {AbstractModifier} decoratedModifier\n   */\n  constructor(options, decoratedModifier) {\n    super(decoratedModifier);\n    this.#prey = options.prey;\n    this.#maxSeparation = options.maxSeparation;\n    this.#speed = options.speed;\n  }\n\n  /**\n   * Update the sprite to track the hunter.\n   * @param {import('./sprite.js').Sprite} hunter\n   * @param {*} deltaSeconds\n   * @returns {AbstractModifier}\n   */\n  doUpdate(hunter, deltaSeconds) {\n    const preyPos = this.#prey.position;\n    const hunterPos = hunter.position;\n    if (!hunterPos.withinSquare(preyPos, this.#maxSeparation)) {\n      const angle = hunterPos.getCartesianAngleTo(preyPos);\n      hunter.velocity.x = this.#speed * Math.cos(angle);\n      hunter.velocity.y = this.#speed * Math.sin(angle);\n      const dx = hunter.velocity.x * deltaSeconds;\n      const dy = hunter.velocity.y * deltaSeconds;\n      hunter.position.x += this.getMinMove(dx, preyPos.x, hunterPos.x);\n      hunter.position.y += this.getMinMove(dy, preyPos.y, hunterPos.y);\n    }\n    return this;\n  }\n\n  /**\n   * Get the minimum movement to go from targetValue to currentValue.\n   * @param {number} maxMovement - maximum movement. NB. In this context, max ignores sign.\n   * @param {number} targetValue\n   * @param {number} currentValue\n   */\n  getMinMove(maxMovement, targetValue, currentValue) {\n    const requiredMovement = targetValue - currentValue;\n    if (Math.sign(maxMovement) < 0) {\n      return Math.max(maxMovement, requiredMovement);\n    } else {\n      return Math.min(maxMovement, requiredMovement);\n    }\n  }\n}\n\n/**\n * PathFollower. Provides a one-off movement.\n * Once it hits its target, it removes itself from the chain.\n */\nexport class PathFollower extends AbstractModifier {\n  /** @type {Point[]} */\n  #path;\n  /** @type {number} */\n  #index;\n  /** @type {import('../geometry.js').Point} */\n  #targetPoint;\n  /** @type {number} */\n  #speed;\n\n  /**\n   *\n   * @param {Object} options\n   * @param {Point[]} options.path\n   * @param {number} options.speed - pixels / second\n   * @param {AbstractModifier} decoratedModifier\n   */\n  constructor(options, decoratedModifier) {\n    super(decoratedModifier);\n    this.#path = options.path;\n    this.#index = 0;\n    this.#targetPoint = options.path[0];\n    this.#speed = options.speed;\n  }\n\n  /**\n   * Update the sprite to track the hunter.\n   * @param {import('./sprite.js').Sprite} subject\n   * @param {*} deltaSeconds\n   * @returns {AbstractModifier}\n   */\n  doUpdate(subject, deltaSeconds) {\n    const subjectPos = subject.position;\n\n    const angle = subjectPos.getCartesianAngleTo(this.#targetPoint);\n    subject.velocity.x = this.#speed * Math.cos(angle);\n    subject.velocity.y = this.#speed * Math.sin(angle);\n    const dx = subject.velocity.x * deltaSeconds;\n    const dy = subject.velocity.y * deltaSeconds;\n    subjectPos.x += this.getMinMove(dx, this.#targetPoint.x, subjectPos.x);\n    subjectPos.y += this.getMinMove(dy, this.#targetPoint.y, subjectPos.y);\n    if (subjectPos.isCoincident(this.#targetPoint)) {\n      if (++this.#index >= this.#path.length) {\n        return this.decoratedModifier; // Remove itself from chain\n      } else {\n        this.#targetPoint = this.#path[this.#index];\n      }\n    }\n    return this;\n  }\n\n  /**\n   * Get the minimum movement to go from targetValue to currentValue.\n   * @param {number} maxMovement - maximum movement. NB. In this context, max ignores sign.\n   * @param {number} targetValue\n   * @param {number} currentValue\n   */\n  getMinMove(maxMovement, targetValue, currentValue) {\n    const requiredMovement = targetValue - currentValue;\n    if (Math.sign(maxMovement) < 0) {\n      return Math.max(maxMovement, requiredMovement);\n    } else {\n      return Math.min(maxMovement, requiredMovement);\n    }\n  }\n}\n","/**\n * @file Modifiers for updates\n *\n * @module utils\\sprites\\modifiers\n *\n * @license\n * {@link https://opensource.org/license/mit/|MIT}\n *\n * Copyright 2024 Steve Butler\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the “Software”), to deal in\n * the Software without restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n * Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */\n\n/** Default timeout for transient modifiers. @type {number} */\nconst DEFAULT_TIMEOUT_SECS = 10;\n\n/**\n * Base for all modifiers\n */\nexport class AbstractModifier {\n  /** @type {AbstractModifier} */\n  decoratedModifier;\n  /** The resolve function for transient modifiers @type {function(*)} */\n  #resolveFunc;\n  /** Total active time in seconds */\n  #activeSeconds;\n  /** Timeout duration */\n  #timeoutSeconds;\n\n  /**\n   *\n   * @param {AbstractModifier} [decoratedModifier]\n   */\n  constructor(decoratedModifier) {\n    this.#activeSeconds = 0;\n    this.#timeoutSeconds = 0;\n    this.decoratedModifier = decoratedModifier;\n  }\n\n  /**\n   * Apply the modifier as transient to a sprite.\n   * @param {AbstractModifier} modifier\n   * @param {Sprite} sprite\n   * @param {number} [timeoutSeconds =\n   * @returns {Promise} fulfils to null on completion;\n   */\n  applyAsTransientToSprite(sprite, timeoutSeconds = DEFAULT_TIMEOUT_SECS) {\n    this.#timeoutSeconds = timeoutSeconds;\n    return new Promise((resolve) => {\n      this.#resolveFunc = resolve;\n      sprite.modifier = this;\n    });\n  }\n\n  /**\n   * Apply the modifier as continuous to a sprite.\n   * @param {Sprite} sprite\n   */\n  applyAsContinuousToSprite(sprite) {\n    sprite.modifier = this;\n  }\n\n  /** Do the update modification. If a decoratedModifier has been set, this is then\n   * called. If after calling update, the modifier is removed, it is removed from\n   * the owning decoratedModifier. Its children are retained.\n   * @param {Sprite} sprite\n   * @param {number} deltaSeconds - elapsed time since last update.\n   * @returns {AbstractModifier} - the modifier required for the next update. This\n   * normally returns itself. If null is return, this indicates that the modifier\n   * has completed its action and can be removed from the chain of decorated\n   * modifiers. This method handles removal of its own decoratedModifier, but removal\n   * of the root, if appropriate, is the responsibility of the Sprite.\n   */\n  update(sprite, deltaSeconds) {\n    if (this.#resolveFunc) {\n      this.#activeSeconds += deltaSeconds;\n    }\n    if (this.decoratedModifier) {\n      this.decoratedModifier = this.decoratedModifier?.update(\n        sprite,\n        deltaSeconds\n      );\n    }\n\n    const nextModifier = this.doUpdate(sprite, deltaSeconds);\n    if (!nextModifier || this.#activeSeconds > this.#timeoutSeconds) {\n      this.#resolveFunc?.(null);\n      return null;\n    }\n    return nextModifier;\n  }\n\n  /** Do the update modification for this modifier.\n   * @param {Sprite} sprite\n   * @param {number} deltaSeconds - elapsed time since last update.\n   * @returns {AbstractModifier} - the modifier for the next update.\n   */\n  doUpdate(spriteUnused, deltaSecondsUnused) {\n    console.error('doUpdate should be overridden.');\n    return this;\n  }\n}\n","/**\n * @file Dialogs for use in the game\n *\n * @module utils/dom/ui\n *\n * @license\n * {@link https://opensource.org/license/mit/|MIT}\n *\n * Copyright 2024 Steve Butler (henspace.com).\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the “Software”), to deal in\n * the Software without restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n * Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */\n\nimport SCREEN from '../game/screen.js';\n\n/**\n * Dialog response codes.\n */\nexport const DialogResponse = {\n  OK: 0,\n  CANCEL: 1,\n  YES: 2,\n  NO: 3,\n};\n\n/**\n * Get a message element. This returns a div which contains the message text.\n * @param {string} message\n */\nfunction createMessageElement(message) {\n  const element = document.createElement('div');\n  element.innerText = message;\n  element.classList.add(['scrollable']);\n  return element;\n}\n\n/** Create a message that is removed on any click.\n * @param {string} message\n * @returns {Promise} fulfils to null\n */\nfunction showMessage(message) {\n  return new Promise((resolve) => {\n    const container = createMessageElement(message);\n    SCREEN.displayOnGlass(container, () => {\n      SCREEN.wipeGlass();\n      resolve(null);\n    });\n  });\n}\n\n/** Create an okDialog.\n * @param {string} message\n * @param {string} [okButtonLabel = 'OK']\n * @returns {Promise} fulfils to DialogResponse.OK\n */\nfunction showOkDialog(message, okButtonLabel = 'OK') {\n  return new Promise((resolve) => {\n    const container = document.createElement('div');\n    container.appendChild(createMessageElement(message));\n    SCREEN.displayOnGlass(createMessageElement(message));\n    const buttonEl = document.createElement('button');\n    buttonEl.appendChild(document.createTextNode(okButtonLabel));\n    buttonEl.onclick = () => {\n      SCREEN.wipeGlass();\n      resolve(DialogResponse.OK);\n    };\n    container.appendChild(buttonEl);\n    SCREEN.displayOnGlass(container);\n  });\n}\n\n/**\n * The UI singleton.\n */\nconst UI = {\n  showMessage: showMessage,\n  showOkDialog: showOkDialog,\n};\n\nexport default UI;\n","/**\n * @file Handle fights\n *\n * @module dnd/fight\n *\n * @license\n * {@link https://opensource.org/license/mit/|MIT}\n *\n * Copyright 2024 Steve Butler (henspace.com).\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the “Software”), to deal in\n * the Software without restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n * Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */\nimport WORLD from '../utils/game/world.js';\nimport { addFadingImage, addFadingText } from '../utils/effects/transient.js';\nimport { Velocity } from '../utils/geometry.js';\nimport IMAGE_MANAGER from '../utils/sprites/imageManager.js';\nimport { rollDice } from '../utils/dice.js';\n/**\n * Resolve a fight.\n * @param {Actor} attacker\n * @param {Actor} defender\n */\nexport function resolveAttackerDefender(attacker, defender) {\n  if (rollDice(20) < 10) {\n    addFadingText('Missed', {\n      lifetimeSecs: 2,\n      position: defender.position,\n      velocity: new Velocity(0, -100, 0),\n    });\n    return;\n  } else {\n    addFadingImage(IMAGE_MANAGER.getSpriteBitmap(0, 'blood-splat.png'), {\n      lifetimeSecs: 1,\n      position: defender.position,\n      velocity: new Velocity(0, 0, 0)\n    })\n  }\n  let defenderHP = defender.traits.get('HP');\n  defenderHP = defenderHP > 1 ? defenderHP - 1 : 0;\n  if (defenderHP === 0) {\n    WORLD.removeActor(defender);\n    addFadingImage(IMAGE_MANAGER.getSpriteBitmap(0, 'RIP.png'), {\n      lifetimeSecs: 2,\n      position: defender.position,\n      velocity: new Velocity(0, 0, 0),\n    });\n  }\n  defender.traits.set('HP', defenderHP);\n}\n","/**\n * @file Create transient effects.\n *\n * @module utils/effects/transient\n *\n * @license\n * {@link https://opensource.org/license/mit/|MIT}\n *\n * Copyright 2024 Steve Butler (henspace.com).\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the “Software”), to deal in\n * the Software without restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n * Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */\n\nimport { Sprite } from '../sprites/sprite.js';\nimport {\n  ImageSpriteCanvasRenderer,\n  SpriteCanvasRenderer,\n  TextSpriteCanvasRenderer,\n} from '../sprites/spriteRenderers.js';\nimport SCREEN from '../game/screen.js';\nimport { TimeFader } from '../sprites/faders.js';\nimport WORLD from '../game/world.js';\nimport { VelocityMover } from '../sprites/movers.js';\n\n/**\n * Create a transient sprite\n * @param {SpriteCanvasRenderer} renderer\n * @param {Object} options\n * @param {Point} position\n * @param {Velocity} velocity\n * @param {number} lifetimeSecs\n */\nexport function createFadingSprite(renderer, options) {\n  const sprite = new Sprite({\n    renderer: renderer,\n  });\n  sprite.position = options.position;\n  sprite.velocity = options.velocity;\n  WORLD.addPassiveSprite(sprite);\n  new TimeFader(options.lifetimeSecs, new VelocityMover())\n    .applyAsTransientToSprite(sprite, 20)\n    .then(() => WORLD.removePassiveSprite(sprite));\n}\n\n/**\n * Create a transient image\n * @param {import('../sprites/imageManager.js').SpriteBitmap} imageName\n * @param {Object} options\n * @param {Point} position\n * @param {Velocity} velocity\n * @param {number} lifetimeSecs\n */\nexport function addFadingImage(image, options) {\n  createFadingSprite(\n    new ImageSpriteCanvasRenderer(SCREEN.getContext2D(), image),\n    options\n  );\n}\n\n/**\n * Create transient text\n * @param {string} text\n * @param {Object} options\n * @param {Point} position\n * @param {Velocity} velocity\n * @param {number} lifetimeSecs\n */\nexport function addFadingText(text, options) {\n  createFadingSprite(\n    new TextSpriteCanvasRenderer(SCREEN.getContext2D(), text),\n    options\n  );\n}\n","/**\n * @file Faders which adjust opacity\n *\n * @module utils/sprites/faders\n *\n * @license\n * {@link https://opensource.org/license/mit/|MIT}\n *\n * Copyright 2024 Steve Butler (henspace.com).\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the “Software”), to deal in\n * the Software without restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n * Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */\n\nimport { AbstractModifier } from './modifiers.js';\n\n/**\n * Sprite fader\n */\nexport class TimeFader extends AbstractModifier {\n  #deltaOpacityPerSec;\n\n  /**\n   * Construct aligner. Rotations are worked out counter clockwise from the positive\n   * x axis direction. However, sprites are normally drawn vertically as you look at them;\n   * i.e they are pointing downwards or at -90 degrees from the horizontal axis. You can\n   * set this using the baseDirection parameter.\n   * @param {number} lifetimeSecs - default alignment.\n   * @param {AbstractModifier} decoratedModifier\n   */\n  constructor(lifetimeSecs, decoratedModifier) {\n    super(decoratedModifier);\n    this.#deltaOpacityPerSec = 1 / Math.max(lifetimeSecs, 0.5);\n  }\n\n  /**\n   * Adjust sprite opacity depending on time. When the time is complete, this\n   * modify returns null to indicate completion.\n   * @param {import('./sprite.js').Sprite} sprite\n   * @param {number} deltaSeconds - elapsed time\n   * @returns {AbstractModifier}\n   */\n  doUpdate(sprite, deltaSeconds) {\n    sprite.opacity = Math.max(\n      0,\n      sprite.opacity - deltaSeconds * this.#deltaOpacityPerSec\n    );\n    return sprite.opacity > 0 ? this : null;\n  }\n}\n","/**\n * @file Simulation of dice\n *\n * @module utils/dice\n *\n * @license\n * {@link https://opensource.org/license/mit/|MIT}\n *\n * Copyright 2024 Steve Butler (henspace.com).\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the “Software”), to deal in\n * the Software without restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n * Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */\n\nimport * as maths from './maths.js';\n\n/**\n * Roll a dice\n * @param {number} [sides = 6] - number of sides on the dice\n * @returns {number}\n */\nexport function rollDice(sides = 6) {\n  return maths.getRandomIntInclusive(1, sides);\n}\n","/**\n * @file Conversion of map plan keys to images and tile definitions.\n *\n * @module scriptReaders/symbolMapping\n *\n * @license\n * {@link https://opensource.org/license/mit/|MIT}\n *\n * Copyright 2024 Steve Butler (henspace.com).\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the “Software”), to deal in\n * the Software without restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n * Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */\nimport { TileRole } from '../utils/tileMaps/tileMap.js';\nimport TURN_MANAGER from '../utils/game/turnManager.js';\n\n/**\n * @typedef {import('./tileMap.js').TileDefinition} TileDefinition\n */\n\n/**\n * @param {string} imageName\n * @returns {TileDefinition}\n */\nfunction createGroundDefn(imageName) {\n  return {\n    role: TileRole.GROUND,\n    onClick: (target, point, detail) =>\n      TURN_MANAGER.triggerEvent(\n        TURN_MANAGER.EventId.CLICKED_FREE_GROUND,\n        point,\n        detail\n      ),\n    image: imageName,\n  };\n}\n\n/**\n * @param {string} imageName\n * @returns {TileDefinition}\n */\nfunction createEntranceDefn(imageName) {\n  return {\n    role: TileRole.ENTRANCE,\n    onClick: (target, point, detail) =>\n      TURN_MANAGER.triggerEvent(\n        TURN_MANAGER.EventId.CLICKED_ENTRANCE,\n        point,\n        detail\n      ),\n    image: imageName,\n  };\n}\n\n/**\n * @param {string} imageName\n * @returns {TileDefinition}\n */\nfunction createExitDefn(imageName) {\n  return {\n    role: TileRole.EXIT,\n    onClick: (target, point, detail) =>\n      TURN_MANAGER.triggerEvent(\n        TURN_MANAGER.EventId.CLICKED_EXIT,\n        point,\n        detail\n      ),\n    image: imageName,\n  };\n}\n\nexport const TILE_MAP_KEYS = new Map([\n  ['x', { role: TileRole.OBSTACLE, image: 'block.png' }],\n  // wall parts\n  ['#-TL', { role: TileRole.OBSTACLE, image: 'wall-TL.png' }],\n  ['#-TLI', { role: TileRole.OBSTACLE, image: 'wall-TLI.png' }],\n  ['#-T', { role: TileRole.OBSTACLE, image: 'wall-T.png' }],\n  ['#-TR', { role: TileRole.OBSTACLE, image: 'wall-TR.png' }],\n  ['#-TRI', { role: TileRole.OBSTACLE, image: 'wall-TRI.png' }],\n  ['#-R', { role: TileRole.OBSTACLE, image: 'wall-R.png' }],\n  ['#-BR', { role: TileRole.OBSTACLE, image: 'wall-BR.png' }],\n  ['#-BRI', { role: TileRole.OBSTACLE, image: 'wall-BRI.png' }],\n  ['#-B', { role: TileRole.OBSTACLE, image: 'wall-B.png' }],\n  ['#-BL', { role: TileRole.OBSTACLE, image: 'wall-BL.png' }],\n  ['#-BLI', { role: TileRole.OBSTACLE, image: 'wall-BLI.png' }],\n  ['#-L', { role: TileRole.OBSTACLE, image: 'wall-L.png' }],\n  ['#-XI', { role: TileRole.OBSTACLE, image: 'wall-XI.png' }],\n  ['#-VI', { role: TileRole.OBSTACLE, image: 'wall-VI.png' }],\n  ['#-HI', { role: TileRole.OBSTACLE, image: 'wall-HI.png' }],\n  ['#-TTEE', { role: TileRole.OBSTACLE, image: 'wall-TTEE.png' }],\n  ['#-RTEE', { role: TileRole.OBSTACLE, image: 'wall-RTEE.png' }],\n  ['#-BTEE', { role: TileRole.OBSTACLE, image: 'wall-BTEE.png' }],\n  ['#-LTEE', { role: TileRole.OBSTACLE, image: 'wall-LTEE.png' }],\n  ['#', { role: TileRole.OBSTACLE, image: 'block.png' }],\n  // doors\n  ['=-T', createExitDefn('door-T.png')],\n  ['=-R', createExitDefn('door-R.png')],\n  ['=-B', createExitDefn('door-B.png')],\n  ['=-L', createExitDefn('door-L')],\n  ['--T', createEntranceDefn('door-T.png')],\n  ['--R', createEntranceDefn('door-R.png')],\n  ['--B', createEntranceDefn('door-B.png')],\n  ['--L', createEntranceDefn('door-L.png')],\n  ['=', { role: TileRole.OBSTACLE, image: 'block.png' }],\n  ['-', { role: TileRole.OBSTACLE, image: 'block.png' }],\n  // ground\n  ['.', createGroundDefn('floor.png')],\n  ['.-SBW', createGroundDefn('floor-SBW.png')],\n  ['.-SBE', createGroundDefn('floor-SBE.png')],\n\n  [',-SBE', createGroundDefn('floor2-SBE.png')],\n  [',-SBW', createGroundDefn('floor2-SBW.png')],\n  [',', createGroundDefn('floor2.png')],\n]);\n","/**\n * @file Dungeon and dragons properties\n *\n * @module dnd/traits\n *\n * @license\n * {@link https://opensource.org/license/mit/|MIT}\n *\n * Copyright 2024 Steve Butler (henspace.com).\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the “Software”), to deal in\n * the Software without restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n * Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */\n\n/**\n * Abstract traits. This is basically a Map but with the key difference that\n * only keys set during the configuration are allowed. If no keys are provided,\n * the traits are regarded as freeform and any keys are allowed.\n */\nexport class AbstractTraits {\n  /** Characteristics @type {Map<string, *>} */\n  #traits;\n  /** @type {boolean} */\n  #freeform;\n\n  /**\n   * Initialise the traits.\n   * @param {Map<string, *>} initialValues\n   */\n  constructor(initialValues) {\n    if (initialValues) {\n      this.#traits = initialValues;\n      this.#freeform = false;\n    } else {\n      this.#traits = new Map();\n      this.#freeform = true;\n    }\n  }\n\n  /**\n   * @param {string} key\n   * @param {*} value\n   * @throws {Error} thrown if key invalid.\n   */\n  set(key, value) {\n    if (this.#freeform || this.#traits.has(key)) {\n      this.#traits.set(key, value);\n    } else {\n      throw new Error(`Attempt to set invalid key '${key}'`);\n    }\n  }\n\n  /**\n   * Get the trait value.\n   * @param {string} key\n   * @returns {*}\n   */\n  get(key) {\n    return this.#traits.get(key);\n  }\n\n  /**\n   * Populate the traits from a string definition. The definition comprises a\n   * comma separated list of characteristics with each characteristic comprising\n   * a keyword followed by a space or equals sign and then its value.\n   * @param {string} definition\n   * @returns {AbstractTraits} returns this to allow chaining.\n   * @throws {Error} if definition invalid.\n   */\n  setFromString(definition) {\n    definition.split(',').forEach((item) => {\n      const match = item.match(/^\\s*(\\w+)\\s*[=: ]\\s*(.+?)\\s*$/);\n      if (match) {\n        this.#setAutoMaxValue(match[1], match[2]);\n      } else {\n        throw new Error(`Invalid property definition'${item}'`);\n      }\n    });\n    return this;\n  }\n\n  /**\n   * Set the trait for key to value. If value is a fraction, then the value for\n   * the key is set to the numerator and a new key key_MAX is created, set to the\n   * denominator.\n   * @param {string} key\n   * @param {string} value\n   */\n  #setAutoMaxValue(key, value) {\n    const minMaxMatch = value.match(/(\\d+) *[/] *(\\d+) */);\n    if (minMaxMatch) {\n      this.#traits.set(key, minMaxMatch[1]);\n      this.#traits.set(`${key}_MAX`, minMaxMatch[2]);\n    } else {\n      this.#traits.set(key, value);\n    }\n  }\n}\n\n/**\n * DnD character traits\n */\nexport class CharacterTraits extends AbstractTraits {\n  constructor() {\n    super(\n      new Map([\n        ['NAME', 'mystery'],\n        ['HP', 10],\n        ['HP_MAX', 10],\n        ['STR', 10],\n        ['STR_MAX', 10],\n      ])\n    );\n  }\n}\n","/**\n * @file Encapsulation of a Scene. A scene equates normally to a level in a\n * dungeon.\n *\n * @module utils/game/scene\n *\n * @license\n * {@link https://opensource.org/license/mit/|MIT}\n *\n * Copyright 2024 Steve Butler\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the “Software”), to deal in\n * the Software without restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n * Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */\n\nimport * as maths from '../maths.js';\n\nexport class AbstractScene {\n  /** @type {number} */\n  #globalOpacity;\n  /** @type {number} */\n  #deltaOpacityPerSec;\n\n  /** @type {number} */\n  #fadeInSecs;\n  /** @type {number} */\n  #fadeOutSecs;\n\n  /**\n   * Create the scene.\n   * @param {number} [fadeInSecs = 2]\n   * @param {number} [fadeOutSecs = 2]\n   */\n  constructor(fadeInSecs = 2, fadeOutSecs = 2) {\n    if (fadeInSecs > 0) {\n      this.#globalOpacity = 0;\n      this.#deltaOpacityPerSec = 1 / fadeInSecs;\n    } else {\n      this.#deltaOpacityPerSec = 1;\n    }\n    this.#fadeInSecs = fadeInSecs;\n    this.#fadeOutSecs = fadeOutSecs;\n  }\n\n  /**\n   * Get the global opacity.\n   * @returns {number}\n   */\n  getOpacity() {\n    return this.#globalOpacity;\n  }\n  /**\n   * Called at start. Game waits for preload before calling initialise.\n   * @function Scene#load\n   * @returns {Promise} fulfills to null\n   */\n  load() {\n    return this.doLoad();\n  }\n\n  /**\n   * Called after load. Game waits for initialise before starting the loop.\n   * @function Scene#initialise\n   * @returns {Promise} fulfills to null\n   */\n  initialise() {\n    return this.doInitialise();\n  }\n\n  /**\n   * Called in animation phase\n   * @function Scene#update\n   * @param {number} deltaSeconds\n   */\n  update(deltaSeconds) {\n    this.doUpdate(deltaSeconds);\n    if (this.#deltaOpacityPerSec !== 0) {\n      this.#globalOpacity = maths.clip(\n        this.#globalOpacity + deltaSeconds * this.#deltaOpacityPerSec,\n        0,\n        1\n      );\n    }\n  }\n\n  /**\n   * Called when scene swapped out\n   * @function Scene#unload\n   * @returns {Promise} fulfills to null\n   */\n  unload() {\n    return this.doUnload();\n  }\n\n  /**\n   * Called at start. Game waits for preload before calling initialise.\n   * This should be overridden.\n   * @returns {Promise} fulfills to null\n   */\n  doLoad() {\n    return Promise.resolve();\n  }\n\n  /**\n   * Called after load. Game waits for initialise before starting the loop.\n   * This should be overridden\n   * @returns {Promise} fulfills to null\n   */\n  doInitialise() {\n    return Promise.resolve();\n  }\n\n  /**\n   * Called in animation phase\n   * This should be overridden\n   * @param {number} deltaSeconds\n   */\n  doUpdate(deltaSecondsUnused) {\n    return Promise.resolve();\n  }\n\n  /**\n   * Called when scene swapped out\n   * This should be overridden\n   * @returns {Promise} fulfills to null\n   */\n  doUnload() {\n    return Promise.resolve();\n  }\n}\n","/**\n * @file Scene manager\n *\n * @module utils/game/sceneManager\n *\n * @license\n * {@link https://opensource.org/license/mit/|MIT}\n *\n * Copyright 2024 Steve Butler (henspace.com).\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the “Software”), to deal in\n * the Software without restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n * Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */\n\nimport { parseSceneDefinition } from '../../scriptReaders/sceneDefinitionParser.js';\n\nlet sceneDefinitions;\n/**\n * Configure the scenes from the script.\n * @param {import('../../scriptReaders/index.js').SceneDefinition} sceneDefns\n */\nfunction setSceneDefinitions(sceneDefns) {\n  sceneDefinitions = sceneDefns;\n}\n\n/**\n *\n * @param {number} index\n * @returns {import('./scene.js').Scene} scene constructed from requested scene definition.\n */\nfunction getScene(index) {\n  return parseSceneDefinition(sceneDefinitions[index]);\n}\n\n/**\n * SCENE_MANAGER Singleton.\n */\nconst SCENE_MANAGER = {\n  setSceneDefinitions: setSceneDefinitions,\n  getScene: getScene,\n};\n\nexport default SCENE_MANAGER;\n","/**\n * @file Camera dolly class. This provides a mechanism to allow the canvas to\n * track a specified Sprite.\n *\n * @module utils/game/camera\n *\n * @license\n * {@link https://opensource.org/license/mit/|MIT}\n *\n * Copyright 2024 Steve Butler\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the “Software”), to deal in\n * the Software without restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n * Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */\n\nimport SCREEN from './screen.js';\nimport { Sprite } from '../sprites/sprite.js';\nimport { Tracker, VelocityMover } from '../sprites/movers.js';\nimport { AbstractModifier } from '../sprites/modifiers.js';\n\n/**\n * Set the methods of tracking\n * @enum {number}\n */\nexport const CameraTracking = {\n  OFF: 0,\n  HERO: 1,\n  VELOCITY: 2,\n};\n\n/**\n * Camera dolly class\n */\nexport class CameraDolly {\n  /** @type {import('../sprites/sprite.js').Sprite} */\n  #sprite;\n  /** @type {AbstractModifier} */\n  #heroTracker;\n  /** @type {AbstractModifier} */\n  #velocityTracker;\n  /** @type {number} */\n  #trackingMethod;\n\n  /**\n   * Create a camera dolly. This is a sprite that is designed to track a target.\n   * @param {Sprite} target\n   * @param {number} speed\n   * @param {number} proportionSeparated - max space between camera and target as proportion of minimum screen dimension.\n   */\n  constructor(target, speed, proportionSeparated = 0) {\n    const canvasDims = SCREEN.getCanvasDimensions();\n    const separation =\n      proportionSeparated * Math.min(canvasDims.width, canvasDims.height);\n    this.#sprite = new Sprite();\n\n    this.#heroTracker = new Tracker({\n      prey: target,\n      speed: speed,\n      maxSeparation: separation,\n    });\n\n    this.#velocityTracker = new VelocityMover();\n    this.#heroTracker.applyAsContinuousToSprite(this.#sprite);\n  }\n\n  /**\n   * Update the camera position.\n   * @param {number} deltaSeconds - elapsed time since last update.\n   */\n  update(deltaSeconds) {\n    if (this.#trackingMethod !== CameraTracking.OFF) {\n      this.#sprite.update(deltaSeconds);\n      SCREEN.centreCanvasOn(this.#sprite.position);\n    }\n  }\n  /**\n   * Set the velocity to dX, dY. This will automatically set tracking to velocity.\n   * @param {number} dX\n   * @param {number} dY\n   */\n  setVelocity(vX, vY) {\n    this.setTrackingMethod(CameraTracking.VELOCITY);\n    this.#sprite.velocity.x = vX;\n    this.#sprite.velocity.y = vY;\n  }\n\n  /**\n   * Set the trackingMethod\n   * @param {number} method - CameraTracking enum\n   */\n  setTrackingMethod(method) {\n    if (method === this.#trackingMethod) {\n      return;\n    }\n    this.#trackingMethod = method;\n    switch (method) {\n      case CameraTracking.HERO:\n        this.#heroTracker.applyAsContinuousToSprite(this.#sprite);\n        break;\n      case CameraTracking.VELOCITY:\n        this.#velocityTracker.applyAsContinuousToSprite(this.#sprite);\n        break;\n      case CameraTracking.OFF:\n        console.debug(`Camera tracking off.`);\n        break;\n      default:\n        console.error(\n          `Attempt to set invalid tracking method of ${method} ignored.`\n        );\n    }\n  }\n}\n","/**\n * @file Navigation button set for the HUD\n *\n * @module utils/game/hudNavSet\n *\n * @license\n * {@link https://opensource.org/license/mit/|MIT}\n *\n * Copyright 2024 Steve Butler (henspace.com).\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the “Software”), to deal in\n * the Software without restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n * Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */\n\nimport HUD from './hud.js';\nimport { AnimatedImage } from '../sprites/animation.js';\nimport { LoopMethod } from '../arrays/indexer.js';\nimport { CameraTracking } from './camera.js';\n\n/**\n * @type {number}\n */\nconst SCROLL_TILES_PER_SEC = 3;\n\n/**\n * Location of the navigation buttons\n * @enum {number}\n */\nexport const NavigationLocation = {\n  TR: 0,\n  BR: 1,\n  BL: 2,\n  TL: 3,\n};\n\n/** Encapsulation of navigation buttons. */\nexport class NavigationButtons {\n  /** @type {CameraDolly} */\n  #cameraDolly;\n\n  /** @type {Actor} */\n  #trackingButton;\n\n  /** @type {import('../sprites/imageManager.js').SpriteBitmap} */\n  #trackingButtonImage;\n\n  /**\n   *\n   * @param {CameraDolly} cameraDolly\n   * @param {number} gridSize\n   * @param {NavigationLocation} location\n   */\n  constructor(cameraDolly, gridSize, location) {\n    this.#cameraDolly = cameraDolly;\n    this.#createButtonSet(gridSize, location);\n  }\n\n  /**\n   * Create the buttons.\n   * @param {number} gridSize\n   * @param {NavigationLocation} location\n   */\n  #createButtonSet(gridSize, location) {\n    let centreX;\n    let centreY;\n    switch (location) {\n      case NavigationLocation.TL:\n        centreX = 2 * gridSize;\n        centreY = 2 * gridSize;\n        break;\n      case NavigationLocation.TR:\n        centreX = -2 * gridSize;\n        centreY = 2 * gridSize;\n        break;\n      case NavigationLocation.BR:\n        centreX = -2 * gridSize;\n        centreY = -2 * gridSize;\n        break;\n      case NavigationLocation.BL:\n        centreX = 2 * gridSize;\n        centreY = -2 * gridSize;\n        break;\n    }\n    this.#createCentreButton(centreX, centreY);\n    this.#createArrowButtons(centreX, centreY, gridSize);\n  }\n\n  /** Create the centre button.\n   * @param {number} centreX\n   * @param {number} centreY\n   */\n  #createCentreButton(centreX, centreY) {\n    this.#trackingButtonImage = new AnimatedImage(\n      0,\n      {\n        prefix: 'hud-auto-centre-',\n        startIndex: 0,\n        padding: 3,\n        suffix: '.png',\n      },\n      { framePeriodMs: 1, loopMethod: LoopMethod.STOP }\n    );\n    this.#trackingButton = HUD.addButton(\n      this.#trackingButtonImage,\n      () => {\n        this.#setTrackingState(true);\n      },\n      () => {\n        this.#setTrackingState(false);\n      }\n    );\n    this.#trackingButton.position.x = centreX;\n    this.#trackingButton.position.y = centreY;\n    this.#trackingButton.actionClick(null); // defaulting to selected.\n  }\n\n  /**\n   * Set the tracking state.\n   * @param {boolean} on\n   */\n  #setTrackingState(on) {\n    if (on) {\n      this.#trackingButtonImage.setCurrentIndex(1);\n      this.#cameraDolly.setTrackingMethod(CameraTracking.HERO);\n    } else {\n      this.#trackingButtonImage.setCurrentIndex(0);\n      this.#cameraDolly.setTrackingMethod(CameraTracking.OFF);\n    }\n  }\n\n  /**\n   * Create the arrow buttons\n   * @param {number} centreX\n   * @param {number} centreY\n   * @param {number} gridSize\n   */\n  #createArrowButtons(centreX, centreY, gridSize) {\n    const scrollSpeed = SCROLL_TILES_PER_SEC * gridSize;\n    this.#createMomentaryButton(\n      'hud-arrow-up-',\n      centreX,\n      centreY - gridSize,\n      () => {\n        this.#setTrackingState(false);\n        this.#cameraDolly.setVelocity(0, -scrollSpeed);\n      },\n      () => this.#cameraDolly.setTrackingMethod(CameraTracking.OFF)\n    );\n\n    this.#createMomentaryButton(\n      'hud-arrow-right-',\n      centreX + gridSize,\n      centreY,\n      () => {\n        this.#setTrackingState(false);\n        this.#cameraDolly.setVelocity(scrollSpeed, 0);\n      },\n      () => this.#cameraDolly.setTrackingMethod(CameraTracking.OFF)\n    );\n\n    this.#createMomentaryButton(\n      'hud-arrow-down-',\n      centreX,\n      centreY + gridSize,\n      () => {\n        this.#setTrackingState(false);\n        this.#cameraDolly.setVelocity(0, scrollSpeed);\n      },\n      () => this.#cameraDolly.setTrackingMethod(CameraTracking.OFF)\n    );\n\n    this.#createMomentaryButton(\n      'hud-arrow-left-',\n      centreX - gridSize,\n      centreY,\n      () => {\n        this.#setTrackingState(false);\n        this.#cameraDolly.setVelocity(-scrollSpeed, 0);\n      },\n      () => this.#cameraDolly.setTrackingMethod(CameraTracking.OFF)\n    );\n  }\n\n  /**\n   * Create a momentary button.\n   * @param {string} imageNamePrefix - images are assumed to be imageNamePrefixNNN.png\n   * @param {number} x - x position\n   * @param {number} y - y position\n   * @param {function} callbackDown\n   * @param {function} callbackUp\n   */\n  #createMomentaryButton(imageNamePrefix, x, y, callbackDown, callbackUp) {\n    const animatedImage = new AnimatedImage(\n      0,\n      {\n        prefix: imageNamePrefix,\n        startIndex: 0,\n        padding: 3,\n        suffix: '.png',\n      },\n      { framePeriodMs: 1, loopMethod: LoopMethod.STOP }\n    );\n    let button = HUD.addMomentaryButton(\n      animatedImage,\n      callbackDown,\n      callbackUp\n    );\n    button.position.x = x;\n    button.position.y = y;\n    animatedImage.setCurrentIndex(0);\n  }\n}\n","/**\n * @file Functions to allow touch and mouse handling.\n *\n * @module utils/dom/pointerActions\n *\n * @license\n * {@link https://opensource.org/license/mit/|MIT}\n *\n * Copyright 2024 Steve Butler\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the “Software”), to deal in\n * the Software without restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n * Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */\n\n/**\n * Custom event names\n */\nexport const CUSTOM_POINTER_DOWN_EVENT_NAME = 'custom-pointer-down-event';\nexport const CUSTOM_POINTER_UP_EVENT_NAME = 'custom-pointer-up-event';\nexport const CUSTOM_CLICK_EVENT_NAME = 'custom-click-event';\n\n/**\n * @typedef {Object} CustomEventDetail\n * @property {number} x\n * @property {number} y\n * @property {number} dx\n * @property {number} dy\n */\n\n/**\n * Dispatch an event. Detail is dispatched in the event detail.\n * @param {Element} element\n * @param {string} eventName\n * @param {Object} detail\n */\nfunction dispatchEvent(element, eventName, detail) {\n  const event = new CustomEvent(eventName, {\n    detail: detail,\n  });\n  element.dispatchEvent(event);\n}\n\n/**\n * Gets offsetX and offsetY equivalent to a MouseEvent\n * @param {TouchEvent} event\n * @returns {Object}\n */\nfunction getOffsetFromTouch(event) {\n  const rect = event.target.getBoundingClientRect();\n  return {\n    x: event.touches[0].pageX - rect.left,\n    y: event.touches[0].pageY - rect.top,\n  };\n}\n\n/**\n * Add custom listeners which allows an object to listen to touch and mouse events\n * in a consistent manner.\n * the element or clicks. Custom events are sent to differentiate.\n * @param {*} element\n */\nexport function addPointerListeners(element) {\n  element.addEventListener(\n    'mousedown',\n    (event) =>\n      dispatchEvent(element, CUSTOM_POINTER_DOWN_EVENT_NAME, {\n        x: event.offsetX,\n        y: event.offsetY,\n      }),\n    { passive: true }\n  );\n\n  element.addEventListener(\n    'mouseup',\n    (event) =>\n      dispatchEvent(element, CUSTOM_POINTER_UP_EVENT_NAME, {\n        x: event.offsetX,\n        y: event.offsetY,\n      }),\n    { passive: true }\n  );\n  element.addEventListener(\n    'touchstart',\n    (event) => {\n      if (event.changedTouches.length === 1) {\n        const offset = getOffsetFromTouch(event);\n        dispatchEvent(element, CUSTOM_POINTER_DOWN_EVENT_NAME, {\n          x: offset.x,\n          y: offset.y,\n        });\n      }\n    },\n    { passive: true }\n  );\n  element.addEventListener(\n    'touchend',\n    (event) => {\n      if (event.changedTouches.length === 1) {\n        dispatchEvent(element, CUSTOM_POINTER_UP_EVENT_NAME, null);\n      }\n    },\n    { passive: true }\n  );\n  element.addEventListener('click', (event) => {\n    dispatchEvent(element, CUSTOM_CLICK_EVENT_NAME, {\n      x: event.offsetX,\n      y: event.offsetY,\n    });\n  });\n}\n"],"names":[],"version":3,"file":"index.0fbc91cd.js.map","sourceRoot":"/__parcel_source_root/"}