{"mappings":"ISoCI,EoBHA,EJEA,EAEA,EwBu2BA,ENx1BA,EDqBA,EAGA,EAEA,EAEA,EiD1CA,EvFsBA,CFCC,CAAA,OAAO,SAAS,CAAC,UAAU,EAC9B,CAAA,OAAO,SAAS,CAAC,UAAU,CAAG,SAC5B,CAAO,CACP,CAAW,EAEX,IAAI,CAAA,aAAmB,MAAA,EAQrB,OAAO,IAAI,CAAC,OAAO,CAAC,AAAI,OAAO,EAAS,KAAM,GAP9C,GAAI,AAA6B,EAA7B,EAAQ,KAAK,CAAC,OAAO,CAAC,KACxB,MAAM,AAAI,UACR,wEAGJ,OAAO,IAAI,CAAC,OAAO,CAAC,EAAS,EAIjC,CAAA,EAsCG,OAAO,SAAS,CAAC,YAAY,EAChC,CAAA,OAAO,SAAS,CAAC,YAAY,CAAG,WAE9B,GAAI,CADQ,IAAI,CAEd,OAFU,IAAI,CAIhB,IAAI,EAAS,GACb,IAAK,IAAM,KALC,IAAI,CAKO,CACrB,IAAM,EAAY,EAAI,WAAW,CAAC,EAC9B,CAAmB,GA3CP,OAAU,AA2CH,GA3CgB,OAIpC,AAuCsD,GAvCzC,OAAU,AAuC+B,GAvClB,MAwCrC,GArCoB,IAuCpB,GAAU,CAEd,CACA,OAAO,CACT,CAAA,ECpGF,IAAI,EAAW,EAAE,CAGjB,OAAO,gBAAgB,CAAC,QAAS,AAAC,IAChC,MACE,CAAC,OAAO,EAAE,EAAM,QAAQ,CAAC,OAAO,EAAE,EAAM,MAAM,CAAC;AAAE,EAAE,EAAM,OAAO,CAAC;;AAAW,EAAE,EAAM,KAAK,CAAC,KAAK,CAAC,CAAC,CAErG,GA8DA,I,EAAA,EARY,CACV,IAjDF,SAAoB,GAAG,CAAI,EACzB,QAAQ,GAAG,IAAI,EACjB,EAgDE,KA1CF,SAAiB,GAAG,CAAI,EACtB,QAAQ,KAAK,IAAI,EACnB,EAyCE,MAnCF,SAAkB,GAAG,CAAI,EACvB,QAAQ,KAAK,IAAI,EACnB,EAkCE,MA5BF,SAAkB,GAAG,CAAI,EACvB,QAAQ,KAAK,IAAI,GACjB,EAAW,EAAS,MAAM,CAAC,EAC7B,EA0BE,MApBF,SAAkB,CAAK,MAEjB,EADJ,QAAQ,KAAK,CAAC,GAGZ,EADE,EAAM,OAAO,CACL,CAAC,EAAE,EAAM,OAAO,CAAC;;AAAU,EAAE,EAAM,KAAK,CAAC,CAAC,CAE1C,EAEZ,MAAM,CAAC,aAAa,EAAE,EAAQ;;AAAoB,EAAE,EAAS,IAAI,CAAC,MAAM,CAAC,EACzE,EAAS,IAAI,CAAC,EAChB,CAWA,EGzDA,MAAM,EAAe,4BAYf,EAAW,CACf,OAAQ,CAAE,KAAM,GAAI,SAdF,2BAcwB,EAC1C,GAAI,CAAE,KAAM,GAAI,SAAU,CAAa,EACvC,GAAI,CAAE,KAAM,GAAI,SAAU,CAAa,EACvC,GAAI,CAAE,KAAM,GAAI,SAAU,CAAa,EACvC,YAAa,CAAE,KAAM,GAAI,SAhBD,2BAgB6B,CACvD,EAqBO,SAAS,EAAO,CAAS,EAC9B,IAAM,EAAO,CAAQ,CAAC,EAAU,EAAI,EAAS,MAAS,CACtD,MAAO,CAAC,EAAE,EAAK,IAAI,CAAC,GAAG,EAAE,EAAK,QAAQ,CAAC,CAAC,AAC1C,CEjDA,MAAM,EAAU,CACd,SAAU,EAAK,EAAK,KAAK,EAAE,CAC3B,OAAQ,EAAK,EAAK,KAAK,EAAE,CACzB,SAAU,EAAK,EAAK,KAAK,EAAE,CAE3B,UAAW,EAAK,EAAK,KAAK,EAAE,CAC5B,QAAS,EAAK,EAAK,KAAK,EAAE,CAC1B,UAAW,EAAK,EAAK,KAAK,EAAE,AAE9B,EASO,SAAS,EAAK,CAAK,CAAE,CAAG,CAAE,CAAG,SAClC,AAAI,EAAQ,EACH,EACE,EAAQ,EACV,EAEF,CACT,CAKO,MAAM,EAAoB,CAC/B,KAAM,GACN,EAAG,EACH,GAAI,EACJ,EAAG,EACH,GAAI,EACJ,EAAG,EACH,GAAI,EACJ,EAAG,EACH,GAAI,CACN,EAyDO,SAAS,EAAa,CAAG,CAAE,CAAG,EACnC,IAAM,EAAY,KAAK,IAAI,CAAC,GAE5B,OAAO,KAAK,KAAK,CAAC,KAAK,MAAM,GAAM,CAAA,AADhB,KAAK,KAAK,CAAC,GACkB,CAAA,EAAa,EAC/D,CAOO,SAAS,EAAgB,CAAK,EACnC,IAAM,EAAQ,EAAa,EAAG,EAAM,MAAM,EAC1C,OAAO,CAAK,CAAC,EAAM,AACrB,CAQO,SAAS,EAAsB,CAAG,CAAE,CAAG,EAC5C,IAAM,EAAY,KAAK,IAAI,CAAC,GAE5B,OAAO,KAAK,KAAK,CAAC,KAAK,MAAM,GAAM,CAAA,AADhB,KAAK,KAAK,CAAC,GACkB,EAAY,CAAA,EAAK,EACnE,CA8BO,SAAS,EAAa,CAAK,CAAE,EAAW,CAAC,CAAE,CAAK,EACrD,IAAM,EAAS,SAAS,EAAO,GAC/B,OAAO,OAAO,KAAK,CAAC,GAAU,EAAW,CAC3C,CAQO,SAAS,EAAe,CAAK,CAAE,EAAW,CAAC,EAChD,IAAM,EAAS,WAAW,GAC1B,OAAO,OAAO,KAAK,CAAC,GAAU,EAAW,CAC3C,CD9JO,MAAM,EAEX,CAAE,AAEF,CAAA,CAAE,AAOF,aAAY,CAAC,CAAE,CAAC,CAAE,CAChB,IAAI,CAAC,CAAC,CAAG,EACT,IAAI,CAAC,CAAC,CAAG,CACX,CAOA,OAAO,KAAK,CAAK,CAAE,CACjB,OAAO,IAAI,EAAM,EAAM,CAAC,CAAE,EAAM,CAAC,CACnC,CAMA,WAAW,CAAK,CAAE,CAChB,OAAO,IAAI,CAAC,CAAC,GAAK,EAAM,CAAC,EAAI,IAAI,CAAC,CAAC,GAAK,EAAM,CAAC,AACjD,CAOA,oBAAoB,CAAS,CAAE,CAC7B,OAAO,KAAK,KAAK,CAAC,EAAU,CAAC,CAAG,IAAI,CAAC,CAAC,CAAE,EAAU,CAAC,CAAG,IAAI,CAAC,CAAC,CAC9D,CAOA,iBAAiB,CAAS,CAAE,CAC1B,OAAO,KAAK,KAAK,CAAC,IAAI,CAAC,CAAC,CAAG,EAAU,CAAC,CAAE,EAAU,CAAC,CAAG,IAAI,CAAC,CAAC,CAC9D,CAMA,UAAW,CACT,MAAO,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,AAChC,CAQA,aAAa,CAAQ,CAAE,CACrB,OACE,KAAK,KAAK,CAAC,IAAI,CAAC,CAAC,IAAM,KAAK,KAAK,CAAC,EAAS,CAAC,GAC5C,KAAK,KAAK,CAAC,IAAI,CAAC,CAAC,IAAM,KAAK,KAAK,CAAC,EAAS,CAAC,CAEhD,CAQA,aAAa,CAAK,CAAE,CAAQ,CAAE,CAG5B,OAAO,KAAK,GAAG,CAFJ,IAAI,CAAC,CAAC,CAAG,EAAM,CAAC,CAEP,GAAK,KAAK,GAAG,CADtB,IAAI,CAAC,CAAC,CAAG,EAAM,CAAC,CACW,IAAM,KAAK,GAAG,CAAC,EAAU,EACjE,CAQA,mBAAmB,CAAK,CAAE,CACxB,OAAO,KAAK,GAAG,CAAC,IAAI,CAAC,CAAC,CAAG,EAAM,CAAC,EAAI,KAAK,GAAG,CAAC,IAAI,CAAC,CAAC,CAAG,EAAM,CAAC,CAC/D,CACF,CAIO,MAAM,EAEX,CAAE,AAEF,CAAA,CAAE,AAEF,CAAA,QAAS,AAQT,aAAY,CAAI,CAAE,CAAI,CAAE,CAAM,CAAE,CAC9B,IAAI,CAAC,CAAC,CAAG,EACT,IAAI,CAAC,CAAC,CAAG,EACT,IAAI,CAAC,QAAQ,CAAG,CAClB,CAOA,uBAAwB,CACtB,OAAO,KAAK,KAAK,CAAC,IAAI,CAAC,CAAC,CAAE,IAAI,CAAC,CAAC,CAClC,CAMA,oBAAqB,CACnB,OAAO,KAAK,KAAK,CAAC,CAAC,IAAI,CAAC,CAAC,CAAE,IAAI,CAAC,CAAC,CACnC,CAOA,OAAO,CAAS,CAAE,CAChB,OCNK,KAAK,GAAG,CDOO,IAAI,CAAC,CAAC,EAAE,GCPvB,KAAK,GAAG,CDQO,IAAI,CAAC,CAAC,EAAE,CAE9B,CACF,CAKO,MAAM,EAEX,CAAE,AAEF,CAAA,CAAE,AAEF,CAAA,QAAS,AAQT,aAAY,CAAI,CAAE,CAAI,CAAE,CAAM,CAAE,CAC9B,IAAI,CAAC,CAAC,CAAG,EACT,IAAI,CAAC,CAAC,CAAG,EACT,IAAI,CAAC,QAAQ,CAAG,CAClB,CACF,CAMO,MAAM,UAAiB,EAE5B,QAAS,AAQT,aAAY,CAAC,CAAE,CAAC,CAAE,CAAQ,CAAE,CAC1B,KAAK,CAAC,EAAG,GACT,IAAI,CAAC,CAAC,CAAG,EACT,IAAI,CAAC,QAAQ,CAAG,CAClB,CAOA,OAAO,UAAU,CAAK,CAAE,CACtB,OAAO,IAAI,EAAS,EAAM,CAAC,CAAE,EAAM,CAAC,CAAE,EACxC,CAMA,OAAO,KAAK,CAAQ,CAAE,CACpB,OAAO,IAAI,EAAS,EAAS,CAAC,CAAE,EAAS,CAAC,CAAE,EAAS,QAAQ,CAC/D,CAMA,cAAc,CAAM,CAAE,CACpB,OAAO,IAAI,EACT,IAAI,CAAC,CAAC,CAAG,EAAO,CAAC,CACjB,IAAI,CAAC,CAAC,CAAG,EAAO,CAAC,CACjB,IAAI,CAAC,QAAQ,CAAG,EAAO,QAAQ,CAEnC,CAQA,aAAa,CAAS,CAAE,CAAM,CAAE,CAC9B,OACE,KAAK,GAAG,CAAC,EAAU,CAAC,CAAG,IAAI,CAAC,CAAC,EAAI,GACjC,KAAK,GAAG,CAAC,EAAU,CAAC,CAAG,IAAI,CAAC,CAAC,EAAI,CAErC,CACF,CAeO,MAAM,EAEX,CAAE,AAEF,CAAA,CAAE,AAEF,CAAA,KAAM,AAEN,CAAA,MAAO,AASP,aAAY,CAAC,CAAE,CAAC,CAAE,CAAK,CAAE,CAAM,CAAE,CAC/B,IAAI,CAAC,CAAC,CAAG,EACT,IAAI,CAAC,CAAC,CAAG,EACT,IAAI,CAAC,KAAK,CAAG,EACb,IAAI,CAAC,MAAM,CAAG,CAChB,CAKA,gBAAiB,CACf,OAAO,IAAI,EAAM,IAAI,CAAC,CAAC,CAAG,IAAI,CAAC,KAAK,CAAE,IAAI,CAAC,CAAC,CAAG,IAAI,CAAC,MAAM,CAC5D,CAKA,YAAa,CACX,OAAO,IAAI,EAAM,IAAI,CAAC,CAAC,CAAE,IAAI,CAAC,CAAC,CACjC,CAMA,SAAS,CAAS,CAAE,CAClB,IAAM,EAAO,IAAI,CAAC,cAAc,GAC1B,EAAc,EAAU,cAAc,GAM5C,MAAO,CAJL,CAAA,EAAU,CAAC,CAAG,EAAK,CAAC,EACpB,EAAU,CAAC,CAAG,EAAK,CAAC,EACpB,EAAY,CAAC,CAAG,IAAI,CAAC,CAAC,EACtB,EAAY,CAAC,CAAG,IAAI,CAAC,CAAC,AAAD,CAEzB,CAOA,cAAc,CAAK,CAAE,CACnB,OACE,EAAM,CAAC,EAAI,IAAI,CAAC,CAAC,EACjB,EAAM,CAAC,EAAI,IAAI,CAAC,CAAC,CAAG,IAAI,CAAC,KAAK,EAC9B,EAAM,CAAC,EAAI,IAAI,CAAC,CAAC,EACjB,EAAM,CAAC,EAAI,IAAI,CAAC,CAAC,CAAG,IAAI,CAAC,MAAM,AAEnC,CAOA,mBAAmB,CAAC,CAAE,CAAC,CAAE,CACvB,OACE,GAAK,IAAI,CAAC,CAAC,EACX,GAAK,IAAI,CAAC,CAAC,CAAG,IAAI,CAAC,KAAK,EACxB,GAAK,IAAI,CAAC,CAAC,EACX,GAAK,IAAI,CAAC,CAAC,CAAG,IAAI,CAAC,MAAM,AAE7B,CAMA,OAAO,CAAK,CAAE,CACZ,OACE,IAAI,CAAC,CAAC,GAAK,EAAM,CAAC,EAClB,IAAI,CAAC,CAAC,GAAK,EAAM,CAAC,EAClB,IAAI,CAAC,KAAK,GAAK,EAAM,KAAK,EAC1B,IAAI,CAAC,MAAM,GAAK,EAAM,MAAM,AAEhC,CACF,CAGyB,IAAI,EAAM,OAAO,SAAS,CAAE,OAAO,SAAS,EAE5C,IAAI,EAAM,OAAO,SAAS,CAAE,OAAO,SAAS,EF9UrE,IAAI,EAAgB,KAEhB,EAAS,KACT,EAAa,KACb,EAAkB,EAClB,EAAmB,EACnB,EAAc,CAAA,EACd,EAAoB,KACpB,EAAc,KAEd,EAAO,EACP,EAAM,EAEN,EAAQ,EACR,EAAW,EACX,EAAW,GACX,EAAe,QACf,EAAiB,IAAI,EAAS,EAAG,EAAG,GAwExC,SAAS,QAsCH,EACA,EACA,EACA,EAxCJ,IAAM,EArDC,CAAE,MAAO,OAAO,UAAU,CAAE,OAAQ,OAAO,WAAW,AAAC,EAsD1D,EAAc,EAAW,KAAK,CAAG,EAAW,MAAM,CAClD,EAAkB,EAClB,EAAiB,EACf,EAAoB,EAAK,KAAK,CAAG,EAAK,MAAM,CAdlD,CAAA,AAAI,AAAiB,UAkBnB,EAjBO,AAeP,EACA,EAdO,AAaP,EACA,CAdA,EAmBA,EAAiB,AADjB,CAAA,EAAkB,EAAK,MAAM,AAAN,EACY,EAGnC,EAAkB,AADlB,CAAA,EAAiB,EAAK,KAAK,AAAL,EACa,EAIjC,AADJ,CAAA,EAAQ,EAAiB,EAAW,KAAK,AAAL,EACxB,GAEV,EAAiB,AADjB,CAAA,EAAQ,CAAR,EACyB,EAAW,KAAK,CACzC,EAAkB,EAAQ,EAAW,MAAM,EAClC,EAAQ,IAEjB,EAAiB,AADjB,CAAA,EAAQ,CAAR,EACyB,EAAW,KAAK,CACzC,EAAkB,EAAQ,EAAW,MAAM,EAG7C,EAAQ,AAAA,CAAA,EAAK,KAAK,CAAG,CAAA,EAAkB,EACvC,EAAO,AAAA,CAAA,EAAK,MAAM,CAAG,CAAA,EAAmB,EAExC,EAAO,KAAK,CAAC,IAAI,CAAG,CAAC,EAAE,EAAK,EAAE,CAAC,CAC/B,EAAO,KAAK,CAAC,GAAG,CAAG,CAAC,EAAE,EAAI,EAAE,CAAC,CAC7B,EAAO,KAAK,CAAC,KAAK,CAAG,CAAC,EAAE,EAAe,EAAE,CAAC,CAC1C,EAAO,KAAK,CAAC,MAAM,CAAG,CAAC,EAAE,EAAgB,EAAE,CAAC,CAMxC,EAAO,GACT,EAAuB,CAAC,EAAO,EAC/B,EAAqB,EAAK,KAAK,CAAG,IAElC,EAAuB,EACvB,EAAqB,EAAW,KAAK,EAEnC,EAAM,GACR,EAAuB,CAAC,EAAM,EAC9B,EAAsB,EAAK,MAAM,CAAG,IAEpC,EAAuB,EACvB,EAAsB,EAAW,MAAM,EAGzC,EAAoB,IAAI,EACtB,EACA,EACA,EACA,GAEF,AAAA,EAAI,KAAK,CAAC,CAAC,OAAO,EAAE,EAAM,CAAC,EAC3B,AAAA,EAAI,KAAK,CAAC,CAAC,eAAe,EAAE,EAAK,KAAK,CAAC,UAAU,EAAE,EAAK,MAAM,CAAC,CAAC,EAChE,AAAA,EAAI,KAAK,CACP,CAAC,eAAe,EAAE,EAAK,OAAO,EAAE,EAAI,SAAS,EAAE,EAAe,UAAU,EAAE,EAAgB,CAAC,EAE7F,AAAA,EAAI,KAAK,CACP,CAAC,sBAAsB,EAAE,EAAqB,OAAO,EAAE,EAAqB,SAAS,EAAE,EAAmB,UAAU,EAAE,EAAoB,CAAC,CAE/I,CAKA,SAAS,IACP,IAAM,EAAe,ACjId,EAAS,MAAM,CAAC,IAAI,CDiIoB,CAC/C,CAAA,SAAS,eAAe,CAAC,KAAK,CAAC,QAAQ,CAAG,CAAC,EAAE,EAAa,EAAE,CAAC,AAC/D,CAKA,SAAS,IACP,IACA,GACF,CAwCA,SAAS,IACP,OAAO,EAAO,UAAU,CAAC,KAAM,CAAE,MAAO,CAAY,EACtD,CA0EA,SAAS,EAAU,CAAK,EAKtB,OAJA,EAAM,KAAK,CAAC,OAAO,CAAG,EACtB,OAAO,UAAU,CAAC,KAChB,EAAM,MAAM,EACd,EAAG,KACI,QAAQ,OAAO,EACxB,CAgFA,SAAS,EAAsB,CAAQ,EACrC,OAAO,IAAI,EACT,EAAS,CAAC,CAAG,EAAe,CAAC,CAC7B,EAAS,CAAC,CAAG,EAAe,CAAC,CAC7B,EAAS,QAAQ,CAErB,CA1WA,OAAO,gBAAgB,CAAC,SAAU,KACV,OAAlB,GAGJ,CAAA,EAAgB,OAAO,UAAU,CAAC,KAChC,IACA,EAAgB,IAClB,EAAG,IAAH,CACF,GAsbA,IAAA,EAxBe,CACb,sBAAuB,EACvB,eApIF,SAAwB,CAAK,EAC3B,EAAe,CAAC,CAAG,EAAM,CAAC,CAAG,EAC7B,EAAe,CAAC,CAAG,EAAM,CAAC,CAAG,CAC/B,EAkIE,YApQF,WACE,IAAe,SAAS,CAAC,EAAG,EAAG,EAAW,KAAK,CAAE,EAAW,MAAM,CACpE,EAmQE,eApNF,SAAwB,CAAO,CAAE,CAAO,MAClC,EAyCA,CAxCA,CAAA,EAAQ,OAAO,GACjB,EAAQ,SAAS,sBAAsB,CAAC,QAAQ,CAAC,EAAE,CACnD,GAAO,mBAEJ,IACH,EAAQ,SAAS,aAAa,CAAC,OAC/B,SAAS,IAAI,CAAC,WAAW,CAAC,GAC1B,EAAM,SAAS,CAAG,SAEpB,IAAM,EAAe,SAAS,aAAa,CAAC,OAC5C,EAAM,WAAW,CAAC,GAClB,EAAa,SAAS,CAAG,gBACzB,EAAa,WAAW,CAAC,GACrB,EAAQ,SAAS,EACnB,EAAM,SAAS,CAAC,GAAG,CAAC,EAAQ,SAAS,EAEvC,EAAM,KAAK,CAAC,OAAO,CAAG,QACtB,EAAM,KAAK,CAAC,OAAO,CAAG,EAGtB,IAAM,EAAgB,EAAa,qBAAqB,GAAG,MAAM,AAC7D,CAAA,EAAa,YAAY,CAAG,GAC9B,EAAa,SAAS,CAAC,GAAG,CAAC,YAE7B,IAAM,EAAW,EAAE,CACnB,GAAI,EAAQ,OAAO,EAAI,EAAQ,OAAO,CAAC,MAAM,CAAG,EAC9C,EAAQ,OAAO,CAAC,OAAO,CAAC,AAAC,IACvB,IAAM,EAAU,IAAI,QAAQ,AAAC,IAC3B,EAAO,OAAO,CAAC,gBAAgB,CAAC,QAAS,UACvC,EAAQ,EAAO,MAAM,CACvB,EACF,GACA,EAAS,IAAI,CAAC,EAChB,OACK,CACL,IAAM,EAAU,IAAI,QAAQ,AAAC,GAC3B,EAAa,gBAAgB,CAAC,QAAS,IAAM,MAE/C,EAAS,IAAI,CAAC,EAChB,CAEA,OAAO,QAAQ,IAAI,CAAC,GACjB,IAAI,CAAC,AAAC,IACL,EAAkB,EACX,EAAU,KAElB,IAAI,CAAC,IAAM,EAChB,EAoKE,UAAW,IAAM,EACjB,aAAc,EACd,oBAnPF,WACE,MAAO,CAAE,MAAO,EAAW,KAAK,CAAE,OAAQ,EAAW,MAAM,AAAC,CAC9D,EAkPE,uBAjQF,WACE,OAAO,IAAI,EACT,EAAe,CAAC,CAChB,EAAe,CAAC,CAChB,EAAW,KAAK,CAChB,EAAW,MAAM,CAErB,EA2PE,qBAvBF,WACE,OAAO,CACT,EAsBE,qBA9DF,SAA8B,CAAQ,EACpC,IAAM,EACJ,EAAS,CAAC,CAAG,EACT,EAAkB,CAAC,CAAG,EAAkB,KAAK,CAC7C,EAAkB,CAAC,CACnB,EACJ,EAAS,CAAC,CAAG,EACT,EAAkB,CAAC,CAAG,EAAkB,MAAM,CAC9C,EAAkB,CAAC,CAKzB,OAAO,EAAsB,IAAI,EAHzB,EAAU,EAAS,CAAC,CACpB,EAAU,EAAS,CAAC,CAEoB,EAAS,QAAQ,EACnE,EAiDE,WAjCF,SAAoB,CAAI,EACtB,OAAO,EAAK,QAAQ,CAAC,EACvB,EAgCE,WA3CF,SAAoB,CAAI,EACtB,OAAO,EAAK,QAAQ,CAAC,EACvB,EA0CE,UAxJF,SAAmB,CAAE,CAAE,CAAE,EACvB,EAAe,CAAC,EAAI,EACpB,EAAe,CAAC,EAAI,CACtB,EAsJE,OAAQ,EACR,WArBF,SAAoB,CAAO,EACzB,IAAe,WAAW,CAAG,CAC/B,EAoBE,WA7ZF,SAAoB,CAAO,MClCA,EDmCzB,GAAI,EAAQ,CACV,AAAA,EAAI,KAAK,CAAC,wCACV,MACF,CACA,EAAc,SAAS,cAAc,CAAC,gBCvCb,EDwCR,EAAQ,KAAK,CCvC9B,EAAS,MAAM,CAAC,IAAI,CAAG,AArCR,GAqCmB,AAAY,EAAc,IAA1B,QAClC,EAAS,EAAE,CAAC,IAAI,CAAG,AAjCC,EAiCD,EAAS,MAAM,CAAC,IAAI,CACvC,EAAS,EAAE,CAAC,IAAI,CAAG,AAjCC,IAiCD,EAAS,MAAM,CAAC,IAAI,CACvC,EAAS,EAAE,CAAC,IAAI,CAAG,AAjCC,IAiCD,EAAS,MAAM,CAAC,IAAI,CACvC,EAAS,WAAW,CAAC,IAAI,CAAG,EAAc,GDqC1C,AADA,CAAA,EAAS,SAAS,aAAa,CAAC,SAAhC,EACO,EAAE,CAAG,cACZ,EAAO,YAAY,CAAC,QAAS,EAAQ,KAAK,EAC1C,EAAO,YAAY,CAAC,SAAU,EAAQ,MAAM,EAC5C,EAAO,SAAS,CAAG,mBACnB,EAAa,IAAI,EAAU,EAAG,EAAG,EAAQ,KAAK,CAAE,EAAQ,MAAM,EAC9D,EAAkB,EAAQ,KAAK,CAAG,EAClC,EAAmB,EAAQ,MAAM,CAAG,EAEpC,EAAY,WAAW,CAAC,GAExB,EAAW,EAAQ,QAAQ,CAC3B,EAAW,EAAQ,QAAQ,CAC3B,EAAe,EAAQ,YAAY,CACnC,EAAc,EAAQ,KAAK,CAC3B,IACA,GACF,EAsYE,UAAW,EACX,sBAjGF,SAA+B,CAAQ,EACrC,OAAO,IAAI,EACT,EAAS,CAAC,CAAG,EAAe,CAAC,CAC7B,EAAS,CAAC,CAAG,EAAe,CAAC,CAC7B,EAAS,QAAQ,CAErB,EA4FE,UAlIF,SAAmB,CAAI,EACrB,OAAO,EAAO,CAChB,EAiIE,0BApHF,SAAmC,CAAC,CAAE,CAAC,EASrC,MAAO,CAAE,OANc,IAAI,EAAS,KAAK,KAAK,CAF9C,GAxBc,GA0BqC,KAAK,KAAK,CAD7D,GAzBc,IAgCmB,MALX,IAAI,EACxB,KAAK,KAAK,CAAC,EAAI,EAAe,CAAC,EAC/B,KAAK,KAAK,CAAC,EAAI,EAAe,CAAC,EAC/B,CAAC,EAAe,QAAQ,CAE4B,CACxD,EA2GE,UA7IF,SAAmB,CAAI,EACrB,OAAO,EAAO,CAChB,CA4IA,EI9dA,MAAM,EAAS,IAAI,IAKb,GAAY,IAAI,IAMhB,GAAiB,IAAI,IAMrB,GAAgB,IAAI,IAkC1B,SAAS,GAAY,CAAM,EACzB,IAAM,EAAY,EAAa,gBAAgB,CAAC,EAAO,QAAQ,EAC/D,EAAa,0BAA0B,CAAC,EAAQ,GAC5C,EAAO,SAAS,GAClB,GAAc,MAAM,CAAC,GAErB,EAAO,MAAM,CAAC,EAElB,CAkBA,SAAS,GAAe,CAAM,EAC5B,IAAM,EAAY,EAAa,gBAAgB,CAAC,EAAO,QAAQ,EAC/D,EAAa,0BAA0B,CAAC,EAAQ,GAChD,GAAU,MAAM,CAAC,EACnB,CAcA,SAAS,GAAoB,CAAM,EACjC,GAAe,MAAM,CAAC,EACxB,CAsBA,SAAS,KACP,EAAe,IACjB,CAqIA,IAAA,GArBc,CACZ,SAxMF,SAAkB,CAAM,EAClB,EAAO,SAAS,GAClB,GAAc,GAAG,CAAC,EAAQ,GAE1B,EAAO,GAAG,CAAC,EAAQ,GAErB,EAAa,0BAA0B,CACrC,EACA,KACA,EAAa,gBAAgB,CAAC,EAAO,QAAQ,EAEjD,EA8LE,YA1KF,SAAqB,CAAM,EACzB,GAAU,GAAG,CAAC,EAAQ,GACtB,EAAa,0BAA0B,CACrC,EACA,KACA,EAAa,gBAAgB,CAAC,EAAO,QAAQ,EAEjD,EAoKE,iBArJF,SAA0B,CAAM,EAC9B,GAAe,GAAG,CAAC,EAAQ,EAC7B,EAoJE,SA/GF,WACE,GAAc,OAAO,CAAC,AAAC,GAAU,GAAY,IAC7C,EAAO,OAAO,CAAC,AAAC,GAAU,GAAY,IACtC,GAAU,OAAO,CAAC,AAAC,GAAU,GAAe,IAC5C,GAAe,OAAO,CAAC,AAAC,GAAW,GAAoB,IACvD,IACF,EA0GE,UA5BF,WACE,OAAO,CACT,EA2BE,iBArBF,WACE,OAAO,EACT,EAoBE,aAdF,WACE,OAAO,CACT,EAaE,WAlIF,WACE,OAAO,CACT,EAiIE,aA1NF,WACE,OAAO,EACH,EAAa,aAAa,GAC1B,AAAA,EAAO,mBAAmB,EAChC,EAuNE,cAAe,GACf,cA1CF,SAAuB,CAAe,EACpC,MAAO,CAAA,CACT,EAyCE,aAvEF,SAAsB,CAAS,EAC7B,IAAM,EAAO,GAAc,oBAAoB,EAAU,KAAK,QAC9D,EAAI,IACF,EAAK,WAAW,CAAC,EAAU,KAAK,EACzB,CAAA,EAGX,EAiEE,mBA1DF,SAA4B,CAAS,EACnC,IAAM,EAAO,EAAa,mBAAmB,CAAC,EAAU,KAAK,QAC7D,EAAI,IACF,EAAK,kBAAkB,CAAC,EAAU,KAAK,EAChC,CAAA,EAGX,EAoDE,YAAa,GACb,eAAgB,GAChB,oBAAqB,GACrB,WAnJF,SAAoB,CAAO,EACzB,EAAe,CACjB,EAkJE,OAjHF,SAAgB,CAAY,EAC1B,GAAc,OAAO,GACrB,GAAc,OAAO,CAAC,AAAC,IACrB,IAAM,EAAe,EAAa,gBAAgB,CAAC,EAAM,QAAQ,CACjE,CAAA,EAAM,OAAO,CAAG,EAAa,mBAAmB,CAAC,GACjD,EAAM,MAAM,CAAC,GACb,IAAM,EAAe,EAAa,gBAAgB,CAAC,EAAM,QAAQ,EACjE,EAAa,0BAA0B,CAAC,EAAO,EAAc,EAC/D,GACA,GAAU,OAAO,CAAC,AAAC,IACjB,IAAM,EAAe,EAAa,gBAAgB,CAAC,EAAS,QAAQ,CACpE,CAAA,EAAS,OAAO,CAAG,EAAa,mBAAmB,CAAC,GACpD,EAAS,MAAM,CAAC,GAChB,IAAM,EAAe,EAAa,gBAAgB,CAAC,EAAS,QAAQ,EACpE,EAAa,0BAA0B,CACrC,EACA,EACA,EAEJ,GACA,EAAO,OAAO,CAAC,AAAC,IACd,IAAM,EAAe,EAAa,gBAAgB,CAAC,EAAM,QAAQ,CACjE,CAAA,EAAM,OAAO,CAAG,EAAa,mBAAmB,CAAC,GACjD,EAAM,MAAM,CAAC,GACb,IAAM,EAAe,EAAa,gBAAgB,CAAC,EAAM,QAAQ,EACjE,EAAa,0BAA0B,CAAC,EAAO,EAAc,EAC/D,GAEA,GAAe,OAAO,CAAC,AAAC,GAAW,EAAO,MAAM,CAAC,GACnD,CAqFA,EO5LO,SAAS,GAAU,CAAO,CAAE,CAAI,CAAE,CAAQ,CAAE,CAAO,EAGxD,GAFA,EAAQ,IAAI,CAAG,EAAa,GAAS,WACrC,EAAQ,SAAS,CAAG,GAAS,OAAS,QACjC,GAAS,QAEP,CACL,IAAI,EAAa,EAAK,KAAK,CAAC,MAC5B,IAAK,IAAI,EAAI,EAAG,EAAI,EAAW,MAAM,CAAE,IACrC,EAAQ,CAAC,CAAG,AA7ClB,SAAuB,CAAO,CAAE,CAAS,CAAE,CAAQ,CAAE,CAAO,MAOtD,EANJ,IAAM,EAAQ,EAAU,KAAK,CAAC,KAC1B,EAAI,EAAS,CAAC,EAAI,EAClB,EAAI,EAAS,CAAC,EAAI,EAClB,EAAgB,EAAQ,aAAa,CAAG,EACxC,EAAc,EAAQ,WAAW,EAAI,EACrC,EAAO,GAGX,IAAK,IAAI,EAAI,EAAG,EAAI,EAAM,MAAM,CAAE,IAAK,CACrC,IAAI,EAAW,EAAO,CAAK,CAAC,EAAE,CAAG,IAC3B,EAAS,AAhCZ,SAAuB,CAAO,CAAE,CAAI,EACzC,IAAM,EAAU,EAAQ,WAAW,CADE,KAAA,GAErC,MAAO,CACL,MAAO,EAAQ,KAAK,CACpB,OAAQ,EAAQ,qBAAqB,CAAG,EAAQ,sBAAsB,CACtE,UAAW,CAAC,EAAQ,qBAAqB,CACzC,cACE,GAAO,CAAA,EAAQ,sBAAsB,CAAG,EAAQ,qBAAqB,AAArB,CACpD,CACF,EAuBiC,GACxB,GACH,CAAA,EAAa,EAAc,EAAO,MAAM,AAAN,EAEhC,EAAO,KAAK,CAAG,GAAiB,EAAI,GACtC,EAAQ,QAAQ,CAAC,EAAM,EAAG,GAC1B,EAAO,CAAK,CAAC,EAAE,CAAG,IAClB,GAAK,GAEL,EAAO,CAEX,CAEA,OADA,EAAQ,QAAQ,CAAC,EAAM,EAAG,GACnB,EAAI,CACb,EAoBgC,EAAS,CAAU,CAAC,EAAE,CAAE,EAAU,EAEhE,MANE,EAAQ,QAAQ,CAAC,EAAM,EAAS,CAAC,EAAI,EAAG,EAAS,CAAC,EAAI,EAO1D,CCvFO,MAAM,GAAU,CAIrB,YAAa,CAAA,EAIb,QAAS,CAAA,CACX,EEKA,IAAI,GAAY,IAAI,IAOpB,SAAS,GAAU,CAAM,EACvB,OAAO,IAAI,QAAQ,AAAC,IAClB,IAAM,EAAQ,IAAI,MAClB,EAAM,gBAAgB,CAAC,OAAQ,KAC7B,AAAA,EAAI,KAAK,CAAC,CAAC,MAAM,EAAE,EAAO,QAAQ,CAAC,EACnC,EAAQ,EACV,GACA,EAAM,GAAG,CAAG,CACd,EACF,CAmGA,IAAA,GARsB,CACpB,gBA1BF,SAAyB,CAAQ,CAAE,CAAO,EACxC,IAAI,EAAS,GAAU,GAAG,CAAC,GAU3B,OATK,GAAW,GAAS,OACvB,AAAA,EAAI,KAAK,CAAC,CAAC,qBAAqB,EAAE,EAAS,CAAC,CAAC,GAE3C,CAAA,CAAC,GAAU,GAAS,QAAA,GACtB,CAAA,EAAS,GAAU,GAAG,CAAC,EAAQ,QAAQ,CAAA,GAErC,AAAA,EAAI,KAAK,CAAC,CAAC,8BAA8B,EAAE,EAAQ,QAAQ,CAAC,CAAC,CAAC,EAG3D,CACT,EAeE,mBATF,WACE,OAAO,GAAU,GAAG,CAAC,gBACvB,EAQE,UAAW,GACX,WAxFF,SAAoB,CAAO,EACzB,IAAM,EAAW,EAAE,CAEnB,OADA,EAAQ,OAAO,CAAC,AAAC,GAAQ,EAAS,IAAI,CAAC,GAAU,KAC1C,QAAQ,GAAG,CAAC,EACrB,EAqFE,cA7EF,SAAuB,CAAY,CAAE,CAAU,EAC7C,OAAO,GAAU,GAAY,IAAI,CAAC,AAAC,GACjC,AAUJ,CAAA,SAAwB,CAAY,CAAE,CAAO,EAC3C,IAAM,EAAW,EAAE,CAwBnB,OAvBA,EAAa,MAAM,CAAC,OAAO,CAAC,AAAC,IAC3B,EAAS,IAAI,CACX,kBACE,EACA,EAAM,KAAK,CAAC,CAAC,CACb,EAAM,KAAK,CAAC,CAAC,CACb,EAAM,KAAK,CAAC,CAAC,CACb,EAAM,KAAK,CAAC,CAAC,EACb,IAAI,CAAC,AAAC,IACN,IAAM,EAAe,CACnB,SAAU,EAAM,QAAQ,CACxB,MAAO,EACP,MAAO,EAAM,KAAK,CAAC,CAAC,CACpB,OAAQ,EAAM,KAAK,CAAC,CAAC,CACrB,QAAS,EAAM,UAAU,CAAC,CAAC,CAAG,EAAI,EAAM,gBAAgB,CAAC,CAAC,CAC1D,QAAS,EAAM,UAAU,CAAC,CAAC,CAAG,EAAI,EAAM,gBAAgB,CAAC,CAAC,AAC5D,EAEA,OADA,GAAU,GAAG,CAAC,EAAM,QAAQ,CAAE,GACvB,EAAM,QAAQ,AACvB,GAEJ,GAEO,QAAQ,GAAG,CAAC,EACrB,CAAA,EApCmB,EAAc,GAEjC,CA0EA,EC3HA,IAAI,GAAgB,EA2BpB,IAAA,GALmB,CACjB,cAlBF,SAAuB,CAAS,EAC9B,GAAgB,CAClB,EAiBE,cATF,SAAuB,CAAa,CAAE,EAAe,CAAC,EACpD,OAAO,KAAK,KAAK,CAAE,AAAA,CAAA,GAAgB,CAAA,EAAgB,EACrD,CAQA,ECtBO,MAAM,GAAa,CACxB,KAAM,EACN,QAAS,EACT,KAAM,CACR,CAOO,OAAM,GAEX,CAAC,CAAM,AAAC,AAER,EAAC,CAAQ,AAAC,AAEV,EAAC,CAAU,AAAC,AAEZ,EAAC,CAAS,AAAC,AAEX,EAAC,CAAK,AAAC,AAMP,aAAY,CAAM,CAAE,CAAU,CAAE,CAC9B,IAAI,CAAC,CAAC,CAAM,CAAG,EACf,IAAI,CAAC,CAAC,CAAQ,CAAG,EAAS,EAC1B,IAAI,CAAC,CAAC,CAAU,CAAG,EACnB,IAAI,CAAC,CAAC,CAAS,CAAG,EAClB,IAAI,CAAC,CAAC,CAAK,CAAG,CAChB,CAKA,IAAI,OAAQ,CACV,OAAO,IAAI,CAAC,CAAC,CAAK,AACpB,CAKA,IAAI,MAAM,CAAK,CAAE,CACf,IAAI,CAAC,CAAC,CAAK,CAAG,EAAW,EAAO,EAAG,IAAI,CAAC,CAAC,CAAM,CAAG,EACpD,CAMA,UAAU,CAAQ,CAAE,CAClB,GAAI,IAAI,CAAC,CAAC,CAAM,CAAG,EACjB,OAAO,IAAI,CAAC,CAAC,CAAK,CAEpB,OAAQ,IAAI,CAAC,CAAC,CAAU,EACtB,KAAK,GAAW,IAAI,CAClB,OAAO,IAAI,CAAC,CAAC,CAAa,CAAC,EAC7B,MAAK,GAAW,OAAO,CACrB,OAAO,IAAI,CAAC,CAAC,CAAgB,CAAC,EAChC,MAAK,GAAW,IAAI,CACpB,QACE,OAAO,IAAI,CAAC,CAAC,CAAa,CAAC,EAC/B,CACF,CAOA,CAAC,CAAa,CAAC,CAAQ,EAMrB,OALA,GAAsB,IAAI,CAAC,CAAC,CAAM,CAClC,IAAI,CAAC,CAAC,CAAK,EAAI,EAAW,IAAI,CAAC,CAAC,CAAM,CAClC,IAAI,CAAC,CAAC,CAAK,EAAI,IAAI,CAAC,CAAC,CAAM,EAC7B,CAAA,IAAI,CAAC,CAAC,CAAK,CAAG,IAAI,CAAC,CAAC,CAAK,CAAG,IAAI,CAAC,CAAC,CAAM,AAAN,EAE7B,IAAI,CAAC,CAAC,CAAK,AACpB,CAOA,CAAC,CAAgB,CAAC,CAAQ,EAMxB,GALwB,KAAK,KAAK,CAAC,EAAW,IAAI,CAAC,CAAC,CAAM,EACpC,GACpB,CAAA,IAAI,CAAC,CAAC,CAAS,CAAG,CAAC,IAAI,CAAC,CAAC,CAAS,AAAT,EAE3B,GAAsB,IAAI,CAAC,CAAC,CAAM,CAC9B,IAAI,CAAC,CAAC,CAAS,CAAG,EAAG,CACvB,IAAI,CAAC,CAAC,CAAK,EAAI,EACf,IAAM,EAAY,IAAI,CAAC,CAAC,CAAK,CAAG,IAAI,CAAC,CAAC,CAAQ,CAC1C,EAAY,IACd,IAAI,CAAC,CAAC,CAAK,CAAG,IAAI,CAAC,CAAC,CAAQ,CAAG,EAC/B,IAAI,CAAC,CAAC,CAAS,CAAG,GAEtB,MAAW,IAAI,CAAC,CAAC,CAAS,CAAG,IAC3B,IAAI,CAAC,CAAC,CAAK,EAAI,EACX,IAAI,CAAC,CAAC,CAAK,CAAG,IAChB,IAAI,CAAC,CAAC,CAAK,CAAG,CAAC,IAAI,CAAC,CAAC,CAAK,CAC1B,IAAI,CAAC,CAAC,CAAS,CAAG,IAGtB,OAAO,IAAI,CAAC,CAAC,CAAK,AACpB,CAOA,CAAC,CAAa,CAAC,CAAQ,EAMrB,OALI,IAAI,CAAC,CAAC,CAAS,CAAG,EACpB,IAAI,CAAC,CAAC,CAAK,CAAG,KAAK,GAAG,CAAC,IAAI,CAAC,CAAC,CAAQ,CAAE,IAAI,CAAC,CAAC,CAAK,CAAG,GAC5C,IAAI,CAAC,CAAC,CAAS,CAAG,GAC3B,CAAA,IAAI,CAAC,CAAC,CAAK,CAAG,KAAK,GAAG,CAAC,EAAG,IAAI,CAAC,CAAC,CAAK,CAAG,EADnC,EAGA,IAAI,CAAC,CAAC,CAAK,AACpB,CACF,CHxHO,MAAM,GAEX,OAAQ,AAER,EAAC,CAAM,AAAC,AAER,EAAC,CAAO,AAAC,AAET,EAAC,CAAc,AAAC,AAEhB,EAAC,CAAU,AAAC,AAGZ,EAAC,CAAa,AAAC,AAYf,aAAY,CAAe,CAAE,CAAO,CAAE,KAahC,EATJ,GAHA,IAAI,CAAC,CAAC,CAAM,CAAG,EAAE,CACjB,IAAI,CAAC,CAAC,CAAc,CAAG,EACvB,IAAI,CAAC,CAAC,CAAU,CAAG,EAAmB,EAAG,KACrC,AAA2B,UAA3B,OAAO,EAA8B,CACvC,IAAI,CAAC,CAAC,CAAM,CAAC,IAAI,CAAC,AAAA,GAAc,eAAe,CAAC,IAChD,MACF,CAEA,IAAI,CAAC,CAAC,CAAa,CAAG,KAAK,GAAG,CAAC,EAAG,EAAQ,aAAa,EAEvD,IAAI,EAAQ,EAAgB,UAAU,EAAI,EACtC,EAAU,EAAgB,OAAO,EAAI,EAErC,EAAa,CAAA,EACjB,EAAG,CACD,IAAM,EAAW,CAAC,EAAE,EAAgB,MAAM,CAAC,EAAE,EAC1C,QAAQ,GACR,QAAQ,CAAC,EAAS,KAAK,EAAE,EAAgB,MAAM,CAAC,CAAC,CAChD,GACF,EAAe,AAAA,GAAc,eAAe,CAAC,GAC7C,EAAa,CAAA,GAEb,EAAe,AAAA,GAAc,eAAe,CAAC,EAAU,CAAE,MAAO,CAAA,CAAK,GAGnE,GACF,IAAI,CAAC,CAAC,CAAM,CAAC,IAAI,CAAC,GAEpB,GACF,OAAS,EAAc,AACvB,IAAI,CAAC,CAAC,CAAO,CAAG,IAAI,GAAQ,IAAI,CAAC,CAAC,CAAM,CAAC,MAAM,CAAE,EAAQ,UAAU,EACnE,IAAI,CAAC,OAAO,CAAG,CAAA,CACjB,CAMA,iBAAkB,CAChB,IAAI,CAAA,IAAI,CAAC,CAAC,CAAM,CAAC,MAAM,CAAG,CAAA,EAaxB,OAAO,IAAI,CAAC,CAAC,CAAM,CAAC,EAAE,CAZtB,GAAI,IAAI,CAAC,OAAO,CAAE,CAChB,IAAM,EAAa,AAAA,GAAW,aAAa,CACzC,IAAI,CAAC,CAAC,CAAa,CACnB,IAAI,CAAC,CAAC,CAAU,EAEd,IAAe,IAAI,CAAC,CAAC,CAAc,GACrC,IAAI,CAAC,CAAC,CAAO,CAAC,SAAS,CAAC,EAAa,IAAI,CAAC,CAAC,CAAc,EACzD,IAAI,CAAC,CAAC,CAAc,CAAG,EAE3B,CACA,OAAO,IAAI,CAAC,CAAC,CAAM,CAAC,IAAI,CAAC,CAAC,CAAO,CAAC,KAAK,CAAC,AAI5C,CAQA,gBAAgB,CAAK,CAAE,CACjB,IAAI,CAAC,CAAC,CAAM,CAAC,MAAM,CAAG,IACxB,IAAI,CAAC,OAAO,CAAG,CAAA,EACf,IAAI,CAAC,CAAC,CAAO,CAAC,KAAK,CAAG,EAE1B,CAMA,iBAAkB,QAChB,AAAI,IAAI,CAAC,CAAC,CAAM,CAAC,MAAM,CAAG,EACjB,IAAI,CAAC,CAAC,CAAO,CAAC,KAAK,CAEnB,CAEX,CACF,CAKO,MAAM,GAEX,CAAC,CAAc,AAAC,AAEhB,EAAC,CAAY,AAAC,AAOd,aAAY,CAAG,CAAE,CAAa,CAAE,CAC9B,IAAI,CAAC,CAAC,CAAc,CAAG,CAAC,EACxB,IAAI,CAAC,CAAC,CAAc,CAAC,EAAI,CAAG,EAC5B,IAAI,CAAC,CAAC,CAAY,CAAG,CACvB,CAKA,IAAI,OAAQ,CACV,OAAO,IAAI,CAAC,CAAC,CAAY,AAC3B,CAOA,iBAAiB,CAAG,CAAE,CAAa,CAAE,CACnC,IAAI,CAAC,CAAC,CAAc,CAAC,EAAI,CAAG,CAC9B,CAMA,cAAc,CAAG,CAAE,CAEb,IAAI,CAAC,CAAC,CAAc,CAAC,cAAc,CAAC,GACtC,IAAI,CAAC,CAAC,CAAY,CAAG,IAAI,CAAC,CAAC,CAAc,CAAC,EAAI,CAE9C,AAAA,EAAI,KAAK,CAAC,CAAC,mDAAmD,EAAE,EAAI,CAAC,CAEzE,CAMA,iBAAkB,CAChB,OAAO,IAAI,CAAC,CAAC,CAAY,CAAC,eAAe,EAC3C,CACF,CH5IO,MAAM,GAEX,QAAS,AAGT,CAAA,kBAAmB,AAMnB,aAAY,CAAO,CAAE,CACnB,IAAI,CAAC,QAAQ,CAAG,EAChB,IAAI,CAAC,kBAAkB,CAAG,IAAI,EAAU,EAAG,EAAG,EAAG,EACnD,CAOA,kBAAmB,CACjB,OAAO,IACT,CAMA,YAAa,CACX,OAAO,IAAI,CAAC,QAAQ,AACtB,CAMA,sBAAuB,CACrB,OAAO,IAAI,CAAC,kBAAkB,AAChC,CAMA,OAAO,CAAQ,CAAE,CAAO,CAAE,CAExB,GADA,EAAW,AAAA,EAAO,qBAAqB,CAAC,GACpC,CAAC,IAAI,CAAC,UAAU,CAAC,GACnB,OAEF,IAAM,EAAe,IAAI,CAAC,QAAQ,CAAC,WAAW,AAC9C,CAAA,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAG,EAAe,EAC3C,IAAM,EAAU,EAAS,QAAQ,CAC7B,IACF,IAAI,CAAC,QAAQ,CAAC,IAAI,GAClB,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,EAAS,CAAC,CAAE,EAAS,CAAC,EAC9C,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,EAAS,QAAQ,EACvC,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC,EAAS,CAAC,CAAE,CAAC,EAAS,CAAC,GAElD,IAAI,CAAC,SAAS,CAAC,GACX,GACF,IAAI,CAAC,QAAQ,CAAC,OAAO,GAEnB,GAAc,WAAW,GAC3B,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAG,QAC5B,IAAI,CAAC,QAAQ,CAAC,UAAU,CACtB,IAAI,CAAC,kBAAkB,CAAC,CAAC,CACzB,IAAI,CAAC,kBAAkB,CAAC,CAAC,CACzB,IAAI,CAAC,kBAAkB,CAAC,KAAK,CAC7B,IAAI,CAAC,kBAAkB,CAAC,MAAM,GAGlC,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAG,CAC9B,CAKA,UAAU,CAAc,CAAE,CACxB,AAAA,EAAI,KAAK,CAAC,yCACZ,CAOA,WAAW,CAAQ,CAAE,CACnB,IAAM,EAAO,IAAI,EACf,EAAS,CAAC,CAAG,IAAI,CAAC,kBAAkB,CAAC,KAAK,CAAG,EAC7C,EAAS,CAAC,CAAG,IAAI,CAAC,kBAAkB,CAAC,MAAM,CAAG,EAC9C,IAAI,CAAC,kBAAkB,CAAC,KAAK,CAC7B,IAAI,CAAC,kBAAkB,CAAC,MAAM,EAEhC,OAAO,AAAA,EAAO,UAAU,CAAC,EAC3B,CAOA,WAAW,CAAQ,CAAE,CACnB,IAAM,EAAO,IAAI,EACf,EAAS,CAAC,CAAG,IAAI,CAAC,kBAAkB,CAAC,KAAK,CAAG,EAC7C,EAAS,CAAC,CAAG,IAAI,CAAC,kBAAkB,CAAC,MAAM,CAAG,EAC9C,IAAI,CAAC,kBAAkB,CAAC,KAAK,CAC7B,IAAI,CAAC,kBAAkB,CAAC,MAAM,EAEhC,OAAO,AAAA,EAAO,UAAU,CAAC,EAC3B,CACF,CAKO,MAAM,WAAiC,GAI5C,CAAC,CAAS,AAAC,AAGX,EAAC,CAAkB,AAAC,AAEpB,EAAC,CAAc,AAAC,AAGhB,CAAA,IAAK,AAEL,CAAA,KAAM,AASN,aACE,CAAO,CACP,CAAI,CACJ,EAAU,CAAE,UAAW,SAAU,MAAO,OAAQ,CAAC,CACjD,CACA,KAAK,CAAC,GACN,IAAI,CAAC,IAAI,CAAG,EACZ,IAAI,CAAC,KAAK,CAAG,EAAQ,KAAK,CAC1B,IAAI,CAAC,CAAC,CAAS,CAAG,EAAQ,SAAS,AACrC,CAMA,CAAC,CAAuB,CAAC,CAAI,EAC3B,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAG,EAAa,IAAI,CAAC,CAAC,CAAS,EACjD,IAAM,EAAU,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,EAC1C,CAAA,IAAI,CAAC,CAAC,CAAc,CAAG,CACrB,MAAO,EAAQ,KAAK,CACpB,OAAQ,EAAQ,qBAAqB,CAAG,EAAQ,sBAAsB,CACtE,OAAQ,CACN,EAAG,IAAO,EAAQ,KAAK,CACvB,EACE,GACC,CAAA,EAAQ,qBAAqB,CAAG,EAAQ,sBAAsB,AAAtB,CAC7C,CACF,EACA,IAAI,CAAC,CAAC,CAAkB,CAAG,CAC7B,CAMA,UAAU,CAAQ,CAAE,KA3LkB,CA4LhC,CAAA,IAAI,CAAC,IAAI,GAAK,IAAI,CAAC,CAAC,CAAkB,EACxC,IAAI,CAAC,CAAC,CAAuB,CAAC,IAAI,CAAC,IAAI,EAEzC,IAAM,EAAiB,CACrB,EAAG,EAAS,CAAC,CAAG,IAAI,CAAC,CAAC,CAAc,CAAC,MAAM,CAAC,CAAC,CAC7C,EAAG,EAAS,CAAC,CAAG,IAAI,CAAC,CAAC,CAAc,CAAC,MAAM,CAAC,CAAC,CAC7C,SAAU,EAAS,QAAQ,AAC7B,EAEA,GACE,IAAI,CAAC,QAAQ,CACb,IAAI,CAAC,CAAC,CAAkB,CACxB,EACA,CAAE,MAAO,IAAI,CAAC,KAAK,CAAE,UAAW,IAAI,CAAC,CAAC,CAAS,AAAC,GAGlD,IAAI,CAAC,kBAAkB,EA5Ma,EA8MlC,IAAI,CAAC,CAAC,CAAc,CA7MjB,IAAI,EACT,AA2ME,EA3MO,CAAC,CAAG,EAAW,KAAK,CAAG,EAChC,AA0ME,EA1MO,CAAC,CAAG,EAAW,MAAM,CAAG,EACjC,EAAW,KAAK,CAChB,EAAW,MAAM,EA2MnB,CACF,CAKO,MAAM,WAAiC,GAC5C,CAAC,CAAK,AAAC,AACP,EAAC,CAAM,AAAC,AACR,EAAC,CAAS,AAAC,AACX,EAAC,CAAU,AAAC,AACZ,EAAC,CAAS,AAAC,AACX,EAAC,CAAW,AAAC,AACb,EAAC,CAAS,AAAC,AAUX,aAAY,CAAO,CAAE,CAAO,CAAE,CAC5B,KAAK,CAAC,GACN,IAAI,CAAC,CAAC,CAAK,CAAG,EAAQ,KAAK,EAAI,GAC/B,IAAI,CAAC,CAAC,CAAM,CAAG,EAAQ,MAAM,EAAI,GACjC,IAAI,CAAC,CAAC,CAAS,CAAG,IAAI,CAAC,CAAC,CAAK,CAAG,EAChC,IAAI,CAAC,CAAC,CAAU,CAAG,IAAI,CAAC,CAAC,CAAM,CAAG,EAClC,IAAI,CAAC,CAAC,CAAS,CAAG,EAAQ,SAAS,CACnC,IAAI,CAAC,CAAC,CAAW,CAAG,EAAQ,WAAW,CACvC,IAAI,CAAC,CAAC,CAAS,CAAG,EAAQ,SAAS,EAAI,CACzC,CAMA,UAAU,CAAQ,CAAE,CAClB,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAG,IAAI,CAAC,CAAC,CAAS,CACzC,IAAM,EAAI,EAAS,CAAC,CAAG,IAAI,CAAC,CAAC,CAAS,CAChC,EAAI,EAAS,CAAC,CAAG,IAAI,CAAC,CAAC,CAAU,AACnC,CAAA,IAAI,CAAC,CAAC,CAAS,GACjB,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAG,IAAI,CAAC,CAAC,CAAS,CACzC,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,EAAG,EAAG,IAAI,CAAC,CAAC,CAAK,CAAE,IAAI,CAAC,CAAC,CAAM,GAEpD,IAAI,CAAC,CAAC,CAAW,GACnB,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAG,IAAI,CAAC,CAAC,CAAW,CAC7C,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAC,EAAG,EAAG,IAAI,CAAC,CAAC,CAAK,CAAE,IAAI,CAAC,CAAC,CAAM,GAG1D,IAAI,CAAC,kBAAkB,CAAG,IAAI,EAAU,EAAG,EAAG,IAAI,CAAC,CAAC,CAAK,CAAE,IAAI,CAAC,CAAC,CAAM,CACzE,CACF,CAKO,MAAM,WAAkC,GAC7C,CAAC,CAAM,AAAC,AACR,EAAC,CAAU,AAAC,AACZ,EAAC,CAAK,AAAC,AACP,EAAC,CAAS,AAAC,AACX,EAAC,CAAS,AAAC,AACX,EAAC,CAAW,AAAC,AACb,EAAC,CAAO,AAAC,AACT,EAAC,CAAO,AAAC,AACT,EAAC,CAAU,AAAC,AACZ,EAAC,CAAc,AAAC,AAahB,aAAY,CAAO,CAAE,CAAO,CAAE,CAC5B,KAAK,CAAC,GACN,IAAI,CAAC,CAAC,CAAM,CAAG,EAAQ,MAAM,CAC7B,IAAI,CAAC,CAAC,CAAU,CAAG,IAAI,CAAC,CAAC,CAAM,CAAG,EAClC,IAAI,CAAC,CAAC,CAAK,CAAG,EAAQ,KAAK,CAC3B,IAAI,CAAC,CAAC,CAAS,CAAG,IAAI,CAAC,CAAC,CAAK,CAAG,EAChC,IAAI,CAAC,CAAC,CAAS,CAAG,EAAQ,SAAS,CACnC,IAAI,CAAC,CAAC,CAAW,CAAG,EAAQ,WAAW,CACvC,IAAI,CAAC,CAAC,CAAO,CAAG,EAAQ,OAAO,EAAI,EACnC,IAAI,CAAC,CAAC,CAAO,CAAG,EAAQ,OAAO,EAAI,EACnC,IAAI,CAAC,QAAQ,CAAC,EAChB,CAKA,SAAS,CAAU,CAAE,CACnB,IAAI,CAAC,CAAC,CAAU,CAAG,KAAK,GAAG,CAAC,EAAY,GAAK,IAAI,CAAC,CAAC,CAAM,CACzD,IAAI,CAAC,CAAC,CAAc,CAAG,GAAM,IAAI,CAAC,CAAC,CAAU,AAC/C,CAMA,UAAU,CAAQ,CAAE,CAClB,IAAM,EAAY,EAAS,CAAC,CAAG,IAAI,CAAC,CAAC,CAAU,CAAG,IAAI,CAAC,CAAC,CAAO,CACzD,EACJ,EAAS,CAAC,CAAG,IAAI,CAAC,CAAC,CAAU,CAAG,IAAI,CAAC,CAAC,CAAU,CAAG,IAAI,CAAC,CAAC,CAAO,CAE5D,EAAI,EAAS,CAAC,CAAG,IAAI,CAAC,CAAC,CAAS,CAAG,IAAI,CAAC,CAAC,CAAO,AAClD,CAAA,IAAI,CAAC,CAAC,CAAS,GACjB,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAG,IAAI,CAAC,CAAC,CAAS,CACzC,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,EAAG,EAAS,IAAI,CAAC,CAAC,CAAK,CAAE,IAAI,CAAC,CAAC,CAAU,GAE9D,IAAI,CAAC,CAAC,CAAW,GACnB,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAG,IAAI,CAAC,CAAC,CAAW,CAC7C,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAC,EAAG,EAAW,IAAI,CAAC,CAAC,CAAK,CAAE,IAAI,CAAC,CAAC,CAAM,GAGlE,IAAI,CAAC,kBAAkB,CAAG,IAAI,EAC5B,EACA,EACA,IAAI,CAAC,CAAC,CAAK,CACX,IAAI,CAAC,CAAC,CAAM,CAEhB,CACF,CAGO,MAAM,WAA+B,GAC1C,CAAC,CAAc,AAAC,AAWhB,aAAY,CAAO,CAAE,CAAO,CAAE,CAC5B,KAAK,CAAC,GACN,IAAM,EAAU,KAAK,GAAG,CACtB,EAAQ,UAAU,CAAC,MAAM,EAAI,EAC7B,EAAQ,YAAY,CAAC,MAAM,EAAI,GAEjC,GAAI,AAAY,IAAZ,EAAe,CACjB,AAAA,EAAI,KAAK,CAAC,4DACV,MACF,CACA,IAAI,CAAC,CAAC,CAAc,CAAG,EAAE,CACzB,IAAM,EAAa,EAAQ,QAAQ,CAAG,EAClC,EAAY,CAAC,EAAQ,QAAQ,CAAG,EAAI,EAAa,EAErD,IAAK,IAAI,EAAQ,EAAG,EAAQ,EAAS,IACnC,IAAI,CAAC,CAAC,CAAc,CAAC,IAAI,CACvB,IAAI,GAA0B,EAAS,CACrC,MAAO,EACP,OAAQ,EAAQ,QAAQ,CACxB,UAAW,EAAQ,UAAU,EAAE,CAAC,EAAM,CACtC,YAAa,EAAQ,YAAY,EAAE,CAAC,EAAM,CAC1C,QAAS,EAAY,EAAa,EAClC,QAAS,CACX,GAGN,CAOA,SAAS,CAAU,CAAE,CAAU,CAAE,CAC/B,IAAI,CAAC,CAAC,CAAc,CAAC,EAAW,EAAE,SAAS,EAC7C,CAMA,OAAO,CAAQ,CAAE,CACf,IAAI,CAAC,CAAC,CAAc,EAAE,QAAQ,AAAC,GAAa,EAAS,MAAM,CAAC,GAC9D,CACF,CAmFO,MAAM,WAAkC,GAE7C,CAAC,CAAY,AAAC,AAEd,EAAC,CAAS,AAAC,AAOX,aAAY,CAAO,CAAE,CAAe,CAAE,CACpC,KAAK,CAAC,GACF,GAAiB,iBACnB,IAAI,CAAC,CAAC,CAAS,CAAG,EAClB,IAAI,CAAC,CAAC,CAAY,CAAG,IAAI,CAAC,CAAC,CAAS,CAAC,eAAe,IAEpD,IAAI,CAAC,CAAC,CAAY,CAAG,EAEnB,IAAI,CAAC,CAAC,CAAY,EACpB,IAAI,CAAC,kBAAkB,CAAC,KAAK,CAAG,IAAI,CAAC,CAAC,CAAY,EAAE,OAAS,EAC7D,IAAI,CAAC,kBAAkB,CAAC,MAAM,CAAG,IAAI,CAAC,CAAC,CAAY,EAAE,QAAU,GAE/D,AAAA,EAAI,KAAK,CAAC,uCAAwC,EAEtD,CAKA,kBAAmB,CACjB,OAAO,IAAI,CAAC,CAAC,CAAY,CAAC,QAAQ,AACpC,CAMA,UAAU,CAAQ,CAAE,CAClB,GAAI,CAAC,IAAI,CAAC,CAAC,CAAY,CACrB,OAEF,IAAM,EAAQ,IAAI,CAAC,CAAC,CAAS,CACzB,IAAI,CAAC,CAAC,CAAS,CAAC,eAAe,GAC/B,IAAI,CAAC,CAAC,CAAY,AAEtB,CAAA,IAAI,CAAC,kBAAkB,CAAC,CAAC,CAAG,EAAS,CAAC,CAAG,IAAI,CAAC,kBAAkB,CAAC,KAAK,CAAG,EACzE,IAAI,CAAC,kBAAkB,CAAC,CAAC,CAAG,EAAS,CAAC,CAAG,IAAI,CAAC,kBAAkB,CAAC,MAAM,CAAG,EAE1E,IAAI,CAAC,QAAQ,CAAC,SAAS,CACrB,EAAM,KAAK,CACX,EAAS,CAAC,CAAG,EAAM,OAAO,CAC1B,EAAS,CAAC,CAAG,EAAM,OAAO,CAE9B,CACF,CD5hBO,MAAM,GAEX,CAAC,CAAQ,CAAG,IAAI,EAAS,EAAG,EAAG,EAAG,AAElC,EAAC,CAAQ,CAAG,IAAI,EAAS,EAAG,EAAG,EAAG,AAElC,EAAC,CAAY,CAAG,IAAI,EAAa,EAAG,EAAG,EAAG,AAE1C,EAAC,CAAQ,AAAC,AAEV,CAAA,QAAS,AAET,CAAA,OAAQ,AAER,CAAA,OAAQ,AAOR,aAAY,CAAO,CAAE,CACnB,IAAI,CAAC,CAAC,CAAQ,CAAG,GAAS,SAC1B,IAAI,CAAC,OAAO,CAAG,CAAA,EACf,IAAI,CAAC,OAAO,CAAG,CACjB,CAKA,IAAI,UAAW,CACb,OAAO,IAAI,CAAC,CAAC,CAAQ,AACvB,CAMA,IAAI,SAAS,CAAY,CAAE,CACzB,IAAI,CAAC,CAAC,CAAQ,CAAC,CAAC,CAAG,IAAI,CAAC,WAAW,CAAC,EAAa,CAAC,EAClD,IAAI,CAAC,CAAC,CAAQ,CAAC,CAAC,CAAG,IAAI,CAAC,WAAW,CAAC,EAAa,CAAC,EAClD,IAAI,CAAC,CAAC,CAAQ,CAAC,QAAQ,CAAG,IAAI,CAAC,WAAW,CAAC,EAAa,QAAQ,CAClE,CAOA,IAAI,UAAW,CACb,OAAO,IAAI,CAAC,CAAC,CAAQ,AACvB,CAOA,IAAI,cAAe,CACjB,OAAO,IAAI,CAAC,CAAC,CAAY,AAC3B,CAOA,IAAI,aAAa,CAAY,CAAE,CAC7B,IAAI,CAAC,CAAC,CAAY,CAAG,CACvB,CAMA,IAAI,SAAS,CAAY,CAAE,CACzB,IAAI,CAAC,CAAC,CAAQ,CAAC,CAAC,CAAG,IAAI,CAAC,WAAW,CAAC,EAAa,CAAC,EAClD,IAAI,CAAC,CAAC,CAAQ,CAAC,CAAC,CAAG,IAAI,CAAC,WAAW,CAAC,EAAa,CAAC,EAClD,IAAI,CAAC,CAAC,CAAQ,CAAC,QAAQ,CAAG,IAAI,CAAC,WAAW,CAAC,EAAa,QAAQ,CAClE,CAOA,YAAY,CAAK,CAAE,CACjB,MAAO,AAAiB,UAAjB,OAAO,EAAqB,EAAQ,CAC7C,CAMA,OAAO,CAAY,CAAE,CACf,IAAI,CAAC,QAAQ,EACf,CAAA,IAAI,CAAC,QAAQ,CAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAE,EAD7C,EAGI,IAAI,CAAC,OAAO,EACd,IAAI,CAAC,CAAC,CAAM,EAEhB,CAIA,CAAC,CAAM,GACA,IAAI,CAAC,CAAC,CAAQ,GAGd,IAAI,CAAC,CAAC,CAAQ,CAAC,OAAO,CAGzB,IAAI,CAAC,CAAC,CAAQ,CAAC,OAAO,CAAC,AAAC,GACtB,EAAS,MAAM,CAAC,IAAI,CAAC,CAAC,CAAQ,CAAE,IAAI,CAAC,OAAO,GAH9C,IAAI,CAAC,CAAC,CAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAQ,CAAE,IAAI,CAAC,OAAO,EAMtD,CAKA,gBAAiB,CACf,IAAM,EAAe,IAAI,CAAC,CAAC,CAAQ,CAAC,oBAAoB,GACxD,OAAO,IAAI,EACT,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAG,EAAa,KAAK,CAAG,EACvC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAG,EAAa,MAAM,CAAG,EACxC,EAAa,KAAK,CAClB,EAAa,MAAM,CAEvB,CAOA,kBAAmB,CACjB,GAAI,CAAC,IAAI,CAAC,CAAC,CAAQ,CAAC,OAAO,CACzB,OAAO,IAAI,CAAC,CAAC,CAAQ,CAAC,gBAAgB,GAEtC,IAAK,IAAM,KAAY,IAAI,CAAC,CAAC,CAAQ,CAAE,CACrC,IAAM,EAAS,EAAS,gBAAgB,GACxC,GAAI,EACF,OAAO,CAEX,CAEF,OAAO,IACT,CACF,CS1JO,MAAM,GAEX,iBAAkB,AAElB,EAAC,CAAW,AAAC,AAEb,EAAC,CAAa,AAAC,AAEf,EAAC,CAAc,AAAC,AAMhB,aAAY,CAAiB,CAAE,CAC7B,IAAI,CAAC,CAAC,CAAa,CAAG,EACtB,IAAI,CAAC,CAAC,CAAc,CAAG,EACvB,IAAI,CAAC,iBAAiB,CAAG,CAC3B,CASA,yBAAyB,CAAM,CAAE,EAhCN,EAgC2C,CAAE,CAEtE,OADA,IAAI,CAAC,CAAC,CAAc,CAAG,EAChB,IAAI,QAAQ,AAAC,IAClB,IAAI,CAAC,CAAC,CAAW,CAAG,EACpB,EAAO,QAAQ,CAAG,IAAI,AACxB,EACF,CAMA,0BAA0B,CAAM,CAAE,CAChC,EAAO,QAAQ,CAAG,IAAI,AACxB,CAaA,OAAO,CAAM,CAAE,CAAY,CAAE,CACvB,IAAI,CAAC,CAAC,CAAW,EACnB,CAAA,IAAI,CAAC,CAAC,CAAa,EAAI,CADzB,EAGI,IAAI,CAAC,iBAAiB,EACxB,CAAA,IAAI,CAAC,iBAAiB,CAAG,IAAI,CAAC,iBAAiB,EAAE,OAC/C,EACA,EAHJ,EAOA,IAAM,EAAe,IAAI,CAAC,QAAQ,CAAC,EAAQ,SAC3C,AAAI,CAAC,GAAgB,IAAI,CAAC,CAAC,CAAa,CAAG,IAAI,CAAC,CAAC,CAAc,EAC7D,IAAI,CAAC,CAAC,CAAW,GAAG,MACb,MAEF,CACT,CAOA,SAAS,CAAY,CAAE,CAAkB,CAAE,CAEzC,OADA,AAAA,EAAI,KAAK,CAAC,kCACH,IAAI,AACb,CACF,CDrFO,MAAM,WAAkB,GAE7B,CAAC,CAAkB,AAAC,AAEpB,EAAC,CAAS,AAAC,AAEX,EAAC,CAAW,AAAC,AAQb,aAAY,CAAS,CAAE,CAAY,CAAE,CAAiB,CAAE,CACtD,KAAK,CAAC,GACN,IAAI,CAAC,CAAC,CAAS,CAAG,EAClB,IAAI,CAAC,CAAC,CAAkB,CAAG,EAAI,KAAK,GAAG,CAAC,EAAe,EAAW,IAClE,IAAI,CAAC,CAAC,CAAW,CAAG,CACtB,CASA,SAAS,CAAM,CAAE,CAAY,CAAE,CAU7B,OATA,IAAI,CAAC,CAAC,CAAW,EAAI,EACjB,IAAI,CAAC,CAAC,CAAW,CAAG,IAAI,CAAC,CAAC,CAAS,CACrC,EAAO,OAAO,CAAG,KAAK,GAAG,CACvB,EACA,EAAK,AAAA,CAAA,IAAI,CAAC,CAAC,CAAW,CAAG,IAAI,CAAC,CAAC,CAAQ,AAAR,EAAa,IAAI,CAAC,CAAC,CAAkB,EAGtE,EAAO,OAAO,CAAG,EAEZ,EAAO,OAAO,CAAG,EAAI,IAAI,CAAG,IACrC,CACF,CE3CA,MAAM,GAEJ,CAAC,CAAK,AAAC,AAEP,EAAC,CAAM,AAAC,AAOR,aAAY,CAAK,CAAE,CAAM,CAAE,CACzB,IAAI,CAAC,CAAC,CAAK,CAAG,EACd,IAAI,CAAC,CAAC,CAAM,CAAG,CACjB,CAQA,sBAAsB,CAAM,CAAE,CAAM,CAAE,QACpC,AAAI,IAAI,CAAC,CAAC,CAAM,CACP,IAAI,CAAC,CAAC,CAAK,CAIX,AAAC,CAAA,EAAI,GADV,CAAA,KAAK,GAAG,CAAC,EAAO,CAAC,CAAG,EAAO,CAAC,EAAI,KAAK,GAAG,CAAC,EAAO,CAAC,CAAG,EAAO,CAAC,CAAA,CAC5C,EAAc,IAAI,CAAC,CAAC,CAAK,AAE/C,CACF,CAIO,MAAM,WAAsB,GAEjC,CAAC,CAAO,AAAC,AAET,EAAC,CAAW,AAAC,AAKb,aAAY,CAAiB,CAAE,CAC7B,KAAK,CAAC,EACR,CAQA,SAAS,CAAM,CAAE,CAAY,CAAE,CAO7B,OANA,EAAO,QAAQ,CAAC,CAAC,EAAI,EAAO,QAAQ,CAAC,CAAC,CAAG,EACzC,EAAO,QAAQ,CAAC,CAAC,EAAI,EAAO,QAAQ,CAAC,CAAC,CAAG,EACrC,EAAO,YAAY,GACrB,EAAO,QAAQ,CAAC,CAAC,EAAI,EAAO,YAAY,CAAC,CAAC,CAAG,EAC7C,EAAO,QAAQ,CAAC,CAAC,EAAI,EAAO,YAAY,CAAC,CAAC,CAAG,GAExC,IAAI,AACb,CACF,CA6FO,MAAM,WAAgB,GAE3B,CAAC,CAAI,AAAC,AAEN,EAAC,CAAa,AAAC,AAEf,EAAC,CAAa,AAAC,AAWf,aAAY,CAAO,CAAE,CAAiB,CAAE,CACtC,KAAK,CAAC,GACN,IAAI,CAAC,CAAC,CAAI,CAAG,EAAQ,IAAI,CACzB,IAAI,CAAC,CAAC,CAAa,CAAG,EAAQ,aAAa,CAC3C,IAAI,CAAC,CAAC,CAAa,CAAG,IAAI,GAAc,EAAQ,KAAK,CAAE,EAAQ,MAAM,CACvE,CAQA,SAAS,CAAM,CAAE,CAAY,CAAE,CAC7B,IAAM,EAAU,IAAI,CAAC,CAAC,CAAI,CAAC,QAAQ,CAC7B,EAAY,EAAO,QAAQ,CAC3B,EAAgB,IAAI,CAAC,CAAC,CAAa,CAAC,qBAAqB,CAC7D,EACA,GAGF,GAAI,CAAC,EAAU,YAAY,CAAC,EAAS,IAAI,CAAC,CAAC,CAAa,EAAG,CACzD,IAAM,EAAQ,EAAU,mBAAmB,CAAC,EAC5C,CAAA,EAAO,QAAQ,CAAC,CAAC,CAAG,EAAgB,KAAK,GAAG,CAAC,GAC7C,EAAO,QAAQ,CAAC,CAAC,CAAG,EAAgB,KAAK,GAAG,CAAC,GAC7C,IAAM,EAAK,EAAO,QAAQ,CAAC,CAAC,CAAG,EACzB,EAAK,EAAO,QAAQ,CAAC,CAAC,CAAG,CAC/B,CAAA,EAAO,QAAQ,CAAC,CAAC,EAAI,IAAI,CAAC,UAAU,CAAC,EAAI,EAAQ,CAAC,CAAE,EAAU,CAAC,EAC/D,EAAO,QAAQ,CAAC,CAAC,EAAI,IAAI,CAAC,UAAU,CAAC,EAAI,EAAQ,CAAC,CAAE,EAAU,CAAC,CACjE,CACA,OAAO,IAAI,AACb,CAQA,WAAW,CAAW,CAAE,CAAW,CAAE,CAAY,CAAE,CACjD,IAAM,EAAmB,EAAc,SACvC,AAAI,AAAyB,EAAzB,KAAK,IAAI,CAAC,GACL,KAAK,GAAG,CAAC,EAAa,GAEtB,KAAK,GAAG,CAAC,EAAa,EAEjC,CACF,CAMO,MAAM,WAAqB,GAEhC,CAAC,CAAI,AAAC,AAEN,EAAC,CAAK,AAAC,AAEP,EAAC,CAAW,AAAC,AAEb,EAAC,CAAa,AAAC,AASf,aAAY,CAAO,CAAE,CAAiB,CAAE,CACtC,KAAK,CAAC,GACN,IAAI,CAAC,CAAC,CAAI,CAAG,EAAQ,IAAI,CACzB,IAAI,CAAC,CAAC,CAAK,CAAG,EACd,IAAI,CAAC,CAAC,CAAW,CAAG,EAAQ,IAAI,CAAC,EAAE,CACnC,IAAI,CAAC,CAAC,CAAa,CAAG,IAAI,GAAc,EAAQ,KAAK,CAAE,EAAQ,MAAM,CACvE,CAQA,SAAS,CAAO,CAAE,CAAY,CAAE,CAC9B,IAAM,EAAa,EAAQ,QAAQ,CAC7B,EAAgB,IAAI,CAAC,CAAC,CAAa,CAAC,qBAAqB,CAC7D,IAAI,CAAC,CAAC,CAAW,CACjB,GAEI,EAAQ,EAAW,mBAAmB,CAAC,IAAI,CAAC,CAAC,CAAW,CAC9D,CAAA,EAAQ,QAAQ,CAAC,CAAC,CAAG,EAAgB,KAAK,GAAG,CAAC,GAC9C,EAAQ,QAAQ,CAAC,CAAC,CAAG,EAAgB,KAAK,GAAG,CAAC,GAC9C,IAAM,EAAK,EAAQ,QAAQ,CAAC,CAAC,CAAG,EAC1B,EAAK,EAAQ,QAAQ,CAAC,CAAC,CAAG,EAGhC,GAFA,EAAW,CAAC,EAAI,IAAI,CAAC,UAAU,CAAC,EAAI,IAAI,CAAC,CAAC,CAAW,CAAC,CAAC,CAAE,EAAW,CAAC,EACrE,EAAW,CAAC,EAAI,IAAI,CAAC,UAAU,CAAC,EAAI,IAAI,CAAC,CAAC,CAAW,CAAC,CAAC,CAAE,EAAW,CAAC,EACjE,EAAW,YAAY,CAAC,IAAI,CAAC,CAAC,CAAW,EAA7C,CACE,GAAI,EAAE,IAAI,CAAC,CAAC,CAAK,EAAI,IAAI,CAAC,CAAC,CAAI,CAAC,MAAM,CAGpC,OAFA,EAAQ,QAAQ,CAAC,CAAC,CAAG,EACrB,EAAQ,QAAQ,CAAC,CAAC,CAAG,EACd,IAAI,CAAC,iBAAiB,AAE7B,CAAA,IAAI,CAAC,CAAC,CAAW,CAAG,IAAI,CAAC,CAAC,CAAI,CAAC,IAAI,CAAC,CAAC,CAAK,CAAC,A,CAG/C,OAAO,IAAI,AACb,CAQA,WAAW,CAAW,CAAE,CAAW,CAAE,CAAY,CAAE,CACjD,IAAM,EAAmB,EAAc,SACvC,AAAI,AAAyB,EAAzB,KAAK,IAAI,CAAC,GACL,KAAK,GAAG,CAAC,EAAa,GAEtB,KAAK,GAAG,CAAC,EAAa,EAEjC,CACF,CASO,SAAS,GAAoB,CAAK,CAAE,CAAQ,EAQjD,OAAO,AAPc,IAAI,GACvB,CACE,KAAM,CAAC,EAAS,CAChB,MAAO,GACT,EACA,EAAM,MAAM,CAAC,QAAQ,EAEH,wBAAwB,CAAC,EAAM,MAAM,CAC3D,CXtSA,SAAS,GAAmB,CAAQ,CAAE,CAAO,EAC3C,IAAM,EAAS,IAAI,GAAO,CACxB,SAAU,CACZ,EACA,CAAA,EAAO,QAAQ,CAAG,EAAQ,QAAQ,CAClC,EAAO,QAAQ,CAAG,EAAQ,QAAQ,EAAI,IAAI,EAAS,EAAG,EAAG,GACzD,EAAO,YAAY,CAAG,EAAQ,YAAY,EAAI,IAAI,EAAa,EAAG,EAAG,GACrE,AAAA,GAAM,gBAAgB,CAAC,GACvB,IAAI,GAAU,EAAQ,SAAS,CAAE,EAAQ,YAAY,CAAE,IAAI,IACxD,wBAAwB,CAAC,EAAQ,IACjC,IAAI,CAAC,IAAM,AAAA,GAAM,mBAAmB,CAAC,GAC1C,CAYO,SAAS,GAAe,CAAK,CAAE,CAAO,EAC3C,GACE,IAAI,GAA0B,AAAA,EAAO,YAAY,GAAI,GACrD,EAEJ,CAwCO,SAAS,GAAc,CAAI,CAAE,CAAO,EACzC,GACE,IAAI,GAAyB,AAAA,EAAO,YAAY,GAAI,EAAM,CACxD,MAAO,EAAQ,KAAK,AACtB,GACA,EAEJ,Cc7FA,IAAA,GAJsB,CACpB,UAAW,EACb,ECmDA,MAAM,GAAkB,IAnDxB,MAKE,CAAC,CAAK,AAAC,AAKP,cAAc,CACZ,IAAI,CAAC,CAAC,CAAK,CAAG,IAAI,GACpB,CAMA,IAAI,CAAG,CAAE,CAAK,CAAE,CACd,IAAI,CAAC,CAAC,CAAK,CAAC,GAAG,CAAC,EAAK,GACrB,GAAI,CACF,aAAa,OAAO,CAAC,EAAK,KAAK,SAAS,CAAC,GAC3C,CAAE,MAAO,EAAO,CACd,AAAA,EAAI,KAAK,CAAC,CAAC,qBAAqB,EAAE,EAAM,OAAO,CAAC,CAAC,CACnD,CACF,CAQA,IAAI,CAAG,CAAE,CAAY,CAAE,CACrB,GAAI,IAAI,CAAC,CAAC,CAAK,CAAC,GAAG,CAAC,GAClB,OAAO,IAAI,CAAC,CAAC,CAAK,CAAC,GAAG,CAAC,GAEzB,IAAI,EAAQ,EACZ,GAAI,CACF,IAAM,EAAe,aAAa,OAAO,CAAC,EACrB,QAAjB,GACF,CAAA,EAAQ,KAAK,KAAK,CAAC,EADrB,CAGF,CAAE,MAAO,EAAO,CACd,AAAA,EAAI,KAAK,CAAC,CAAC,uCAAuC,EAAE,EAAM,OAAO,CAAC,CAAC,CACrE,CAEA,OADA,IAAI,CAAC,CAAC,CAAK,CAAC,GAAG,CAAC,EAAK,GACd,CACT,CACF,CF5CA,OAAM,GAIJ,CAAC,EAAE,AAAC,AAIJ,CAAA,QAAS,AAGT,EAAC,EAAK,AAAC,AAGP,EAAC,EAAU,AAAC,AAGZ,CAAA,MAAO,AAUP,aAAY,CAAO,CAAE,CACnB,GAAI,EAAQ,MAAM,EAAI,EAAQ,MAAM,CAClC,MAAM,AAAI,MACR,mHAGJ,GAAI,EAAQ,UAAU,EAAI,CAAC,EAAQ,EAAE,CACnC,MAAM,AAAI,MACR,0DAGJ,CAAA,IAAI,CAAC,CAAC,EAAE,CAAG,EAAQ,EAAE,CACrB,IAAI,CAAC,CAAC,EAAU,CAAG,EAAQ,UAAU,CACjC,EAAQ,UAAU,CACpB,IAAI,CAAC,CAAC,EAAK,CAAG,AEOL,GFPqB,GAAG,CAAC,IAAI,CAAC,CAAC,EAAE,CAAE,EAAQ,QAAQ,EAE5D,IAAI,CAAC,CAAC,EAAK,CAAG,EAAQ,QAAQ,CAEhC,IAAI,CAAC,MAAM,CAAG,EAAQ,MAAM,CAC5B,IAAI,CAAC,SAAS,CAAG,CACnB,CAMA,IAAI,SAAU,CACZ,OAAO,IAAI,CAAC,QAAQ,AACtB,CAMA,IAAI,OAAQ,CACV,OAAO,IAAI,CAAC,CAAC,EAAK,AACpB,CAMA,IAAI,MAAM,CAAK,CAAE,CACX,IAAU,IAAI,CAAC,CAAC,EAAK,GAGrB,IAAI,CAAC,CAAC,EAAU,EAClB,AE1BS,GF0BO,GAAG,CAAC,IAAI,CAAC,CAAC,EAAE,CAAE,GAEhC,IAAI,CAAC,CAAC,EAAK,CAAG,EAChB,CACF,CAKO,MAAM,WAA0B,GAMrC,YAAY,CAAO,CAAE,CACnB,KAAK,CAAC,GACN,IAAI,CAAC,QAAQ,CAAG,IAAI,CAAC,YAAY,CAAC,GAC9B,EAAQ,MAAM,EAChB,IAAI,CAAC,QAAQ,CAAC,gBAAgB,CAAC,QAAS,IAAM,EAAQ,MAAM,GAEhE,CAMA,aAAa,CAAO,CAAE,CACpB,IAAM,EAAU,SAAS,aAAa,CAAC,UAGvC,OAFA,EAAQ,WAAW,CAAC,SAAS,cAAc,CAAC,EAAQ,KAAK,GACzD,EAAQ,SAAS,CAAG,cACb,CACT,CACF,CAKO,MAAM,WAA4B,GAQvC,YAAY,CAAO,CAAE,CACnB,KAAK,CAAC,GACN,IAAI,CAAC,QAAQ,CAAG,IAAI,CAAC,YAAY,CAAC,GAC9B,EAAQ,MAAM,EAChB,IAAI,CAAC,QAAQ,CAAC,gBAAgB,CAAC,QAAS,IAAM,EAAQ,MAAM,GAEhE,CAMA,aAAa,CAAO,CAAE,CACpB,IAAM,EAAU,SAAS,aAAa,CAAC,UASvC,OARI,EAAQ,SAAS,EACnB,EAAQ,WAAW,CAAC,SAAS,cAAc,CAAC,EAAQ,SAAS,GAE/D,EAAQ,WAAW,CAAC,GAAoB,EAAQ,SAAS,CAAE,gBACvD,EAAQ,UAAU,EACpB,EAAQ,WAAW,CAAC,SAAS,cAAc,CAAC,EAAQ,UAAU,GAEhE,EAAQ,SAAS,CAAG,cACb,CACT,CACF,CASO,SAAS,GAAoB,CAAS,CAAE,CAAS,EACtD,IAAM,EAAc,AAAA,GAAc,eAAe,CAC/C,GAAa,gBACb,CAAE,SAAU,eAAgB,GAExB,EAAS,SAAS,aAAa,CAAC,UACtC,EAAO,YAAY,CAAC,QAAS,AAAA,GAAc,SAAS,EACpD,EAAO,YAAY,CAAC,SAAU,AAAA,GAAc,SAAS,EACrD,IAAM,EAAU,EAAO,UAAU,CAAC,MAQlC,OAPA,EAAQ,SAAS,CAAC,EAAG,EAAG,AAAA,GAAc,SAAS,CAAE,AAAA,GAAc,SAAS,EACxE,EAAQ,SAAS,CACf,EAAY,KAAK,CACjB,GAAO,CAAA,AAAA,GAAc,SAAS,CAAG,EAAY,KAAI,AAAJ,EAC7C,GAAO,CAAA,AAAA,GAAc,SAAS,CAAG,EAAY,MAAK,AAAL,GAE/C,EAAO,SAAS,CAAG,EACZ,CACT,CAKA,MAAM,WAAwB,GAE5B,CAAC,EAAQ,AAAC,AAOV,aAAY,CAAO,CAAE,CACnB,KAAK,CAAC,GACN,IAAI,CAAC,QAAQ,CAAG,IAAI,CAAC,YAAY,CAAC,EAAQ,KAAK,EAC/C,IAAI,CAAC,CAAC,EAAQ,CAAC,OAAO,CAAG,IAAI,CAAC,KAAK,CACnC,IAAI,CAAC,QAAQ,CAAC,gBAAgB,CAAC,SAAU,AAAC,IACxC,IAAI,CAAC,KAAK,CAAG,IAAI,CAAC,CAAC,EAAQ,CAAC,OAAO,CAC/B,EAAQ,QAAQ,EAClB,EAAQ,QAAQ,CAAC,IAAI,CAAC,KAAK,CAE/B,EACF,CAOA,aAAa,CAAK,CAAE,CAClB,IAAM,EAAoB,SAAS,aAAa,CAAC,OACjD,CAAA,EAAkB,SAAS,CAAG,kBAC9B,IAAI,CAAC,CAAC,EAAQ,CAAG,SAAS,aAAa,CAAC,SACxC,IAAI,CAAC,CAAC,EAAQ,CAAC,YAAY,CAAC,OAAQ,YACpC,EAAkB,WAAW,CAAC,IAAI,CAAC,CAAC,EAAQ,EAC5C,EAAkB,WAAW,CAC3B,GAAoB,oBAAqB,cAE3C,EAAkB,WAAW,CAC3B,GAAoB,oBAAqB,YAE3C,IAAM,EAAU,SAAS,aAAa,CAAC,SAGvC,OAFA,EAAQ,WAAW,CAAC,SAAS,cAAc,CAAC,IAC5C,EAAQ,WAAW,CAAC,GACb,CACT,CACF,CAKO,MAAM,WAAqB,GAEhC,CAAC,EAAU,AAAC,AAOZ,aAAY,CAAO,CAAE,CACnB,KAAK,CAAC,GACN,IAAI,CAAC,QAAQ,CAAG,IAAI,CAAC,YAAY,CAAC,EAAQ,KAAK,EAC/C,IAAI,CAAC,CAAC,EAAU,CAAC,KAAK,CAAG,IAAI,CAAC,KAAK,CACnC,IAAI,CAAC,QAAQ,CAAC,gBAAgB,CAAC,SAAU,AAAC,IACxC,IAAI,CAAC,KAAK,CAAG,IAAI,CAAC,CAAC,EAAU,CAAC,KAAK,CAC/B,EAAQ,QAAQ,EAClB,EAAQ,QAAQ,CAAC,IAAI,CAAC,KAAK,CAE/B,EACF,CAOA,aAAa,CAAK,CAAE,CAClB,IAAM,EAAiB,SAAS,aAAa,CAAC,OAC9C,CAAA,EAAe,SAAS,CAAG,eAC3B,IAAI,CAAC,CAAC,EAAU,CAAG,SAAS,aAAa,CAAC,SAC1C,IAAI,CAAC,CAAC,EAAU,CAAC,YAAY,CAAC,OAAQ,SACtC,EAAe,WAAW,CAAC,IAAI,CAAC,CAAC,EAAU,EAC3C,IAAM,EAAU,SAAS,aAAa,CAAC,SAGvC,OAFA,EAAQ,WAAW,CAAC,SAAS,cAAc,CAAC,IAC5C,EAAQ,WAAW,CAAC,GACb,CACT,CACF,CAKO,MAAM,GAAc,CACzB,YAAa,cACb,SAAU,WACV,MAAO,OACT,EAgDO,SAAS,GAAc,CAAO,CAAE,EAAU,CAAC,CAAC,EACjD,IAAM,EAAU,SAAS,aAAa,CAAC,GAYvC,OAXI,EAAQ,SAAS,EACnB,CAAA,EAAQ,SAAS,CAAG,EAAQ,SAAS,AAAT,EAE1B,EAAQ,IAAI,CACd,EAAQ,SAAS,CAAG,EAAQ,IAAI,CACvB,EAAQ,IAAI,EACrB,CAAA,EAAQ,SAAS,CAAG,EAAQ,IAAI,AAAJ,EAE1B,EAAQ,KAAK,EACf,EAAQ,WAAW,CAAC,EAAQ,KAAK,EAE5B,CACT,CG/TA,SAAS,GAAQ,CAAG,EAClB,IAAM,EAAQ,EAAS,GAAG,CAAC,UAC3B,AAAI,MAAA,EACK,EAEL,MAAM,OAAO,CAAC,GACT,CAAK,CAAC,EAAmB,EAAG,EAAM,MAAM,EAAE,CAE5C,CACT,CAaO,SAAS,GAAK,CAAI,CAAE,GAAG,CAAM,EAClC,IACI,EADA,EAAS,GAEb,IAAK,IAAM,KAAO,EAAM,CACtB,IAAM,EAAU,EAAI,IAAI,GACxB,GAAI,AAAY,KAAZ,EAAgB,CAClB,EAAM,EACN,KACF,CACF,QACA,AAAK,GAIL,EAAS,GAAQ,GACjB,EAAO,OAAO,CAAC,CAAC,EAAO,KACrB,IAAM,EAAc,CAAC,GAAG,EAAE,EAAM,CAAC,CAAC,CAClC,EAAS,EAAO,OAAO,CAAC,EAAa,EACvC,GACO,GARE,EAAS,EAAO,IAAI,CAAC,KAAO,EASvC,CAIO,MAAM,GAAW,CACtB,OAzDF,SAAgB,CAAU,EACxB,EAAW,CACb,EAwDE,QAAS,EACX,EJxDa,GAAiB,CAC5B,GAAI,EACJ,OAAQ,CAGV,EA8CA,SAAS,GAAe,CAAO,CAAE,CAAO,EACtC,OAAO,AAAA,EAAO,cAAc,CAAC,EAAS,GAAS,IAAI,CAAC,AAAC,IAhCjD,GACF,IAiCO,GAEX,CAKA,SAAS,GAAqB,CAAO,EACnC,IAAM,EAAU,GAAyB,MAAO,CAC9C,UAAW,uBACb,GAGA,OAFA,EAAQ,SAAS,CAAG,EACpB,EAAQ,SAAS,CAAC,GAAG,CAAC,CAAC,aAAa,EAC7B,CACT,CA6HA,SAAS,GAAmB,CAAW,CAAE,EAAU,CAAC,CAAC,EAtL/C,GACF,IAuLF,IAAM,EAAY,SAAS,aAAa,CAAC,OACnC,EAAkB,GAAyB,MAAO,CACtD,UAAW,uBACb,GACA,EAAU,WAAW,CAAC,GAClB,EAAQ,KAAK,EACf,EAAgB,WAAW,CACzB,GAAyB,IAAK,CAC5B,UAAW,eACX,KAAM,EAAQ,KAAK,AACrB,IAGA,EAAQ,QAAQ,EAClB,EAAgB,WAAW,CACzB,GAAyB,IAAK,CAAE,KAAM,EAAQ,QAAQ,AAAC,IAGvD,aAAuB,QACzB,EAAgB,WAAW,CAAC,GAE5B,EAAgB,WAAW,CAAC,GAAqB,IAEnD,IAAM,EAAgB,GAAyB,MAAO,CACpD,UAAW,EAAQ,GAAG,CAAG,qBAAuB,oBAClD,GACA,EAAU,WAAW,CAAC,GACtB,IAAM,EAAU,EAAE,CAYlB,GAXA,GAAS,eAAe,QAAQ,AAAC,IAC1B,EAAO,OAAO,CAAC,aAAa,EAC/B,EAAc,WAAW,CAAC,EAAO,OAAO,EAEpB,OAAlB,EAAO,MAAM,EAAa,AAAkB,KAAA,IAAlB,EAAO,MAAM,EACzC,EAAQ,IAAI,CAAC,CACX,QAAS,EAAO,OAAO,CACvB,OAAQ,EAAO,MAAM,AACvB,EAEJ,GACI,AAAmB,IAAnB,EAAQ,MAAM,CAAQ,CACxB,IAAM,EAAW,IAAI,GAA6B,CAChD,GAAI,GAAe,EAAE,CACrB,MAAO,EAAQ,aAAa,EAAI,AAAA,EAAI,CAAC,SAAS,CAAC,AACjD,GACA,EAAc,WAAW,CAAC,EAAS,OAAO,EAC1C,EAAQ,IAAI,CAAC,EACf,CACA,OAAO,GAAe,EAAW,CAC/B,QAAS,EACT,UAAW,GAAS,SACtB,EACF,CAeA,IAAA,GAVW,CACT,qBA/NF,SAA8B,CAAE,EAC9B,EAAoB,CACtB,EA8NE,sBAxNF,SAA+B,CAAE,EAC/B,EAAqB,CACvB,EAuNE,iBAzIF,SAA0B,CAAK,CAAE,CAAO,CAAE,CAAO,EAC/C,IAAM,EAAY,SAAS,aAAa,CAAC,OACrC,GACF,EAAU,WAAW,CACnB,GAAyB,IAAK,CAAE,UAAW,eAAgB,KAAM,CAAM,IAG3E,EAAU,WAAW,CAAC,GAAyB,IAAK,CAAE,KAAM,CAAQ,IACpE,IAAM,EAAgB,EAAE,CAQxB,OAPA,GAAS,QAAQ,CAAC,EAAQ,KACxB,IAAM,EAAS,IAAI,GAA6B,CAC9C,MAAO,EACP,OAAQ,CACV,GACA,EAAc,IAAI,CAAC,EACrB,GACO,GAAmB,EAAS,CACjC,SAAU,EACV,cAAe,EACf,IAAK,CAAA,CACP,EACF,EAqHE,YArLF,SAAqB,CAAO,EAC1B,IAAM,EAAQ,SAAS,aAAa,CAAC,OACrC,EAAM,WAAW,CAAC,SAAS,cAAc,CAAC,IAC1C,EAAM,SAAS,CAAG,QAClB,EAAM,KAAK,CAAC,OAAO,CAAG,EACtB,SAAS,IAAI,CAAC,WAAW,CAAC,GAC1B,EAAM,gBAAgB,CAAC,QAAS,IAAM,EAAM,MAAM,GACpD,EA+KE,aAtKF,SAAsB,CAAO,CAAE,CAAO,EA/EhC,GACF,IAgFF,IAAM,EAAY,SAAS,aAAa,CAAC,OACzC,EAAU,WAAW,CAAC,GAAqB,IAC3C,IAAM,EAAW,SAAS,aAAa,CAAC,UAKxC,OAJA,EAAS,WAAW,CAClB,SAAS,cAAc,CAAC,GAAS,eAAiB,AAAA,EAAI,CAAC,SAAS,CAAC,GAEnE,EAAU,WAAW,CAAC,GACf,GAAe,EAAW,CAC/B,UAAW,GAAS,UACpB,QAAS,CACP,CACE,QAAS,EACT,OAAQ,GAAe,EAAE,AAC3B,EACD,AACH,EACF,EAqJE,oBA9GF,SACE,CAAK,CACL,CAAO,CACP,EAAgB,AAAA,EAAI,CAAC,SAAS,CAAC,CAC/B,CAAS,EA5IL,GACF,IA8IF,IAAM,EAAY,SAAS,aAAa,CAAC,OACnC,EAAkB,GAAyB,MAAO,CACtD,UAAW,uBACb,GACA,EAAU,WAAW,CAAC,GAClB,GACF,EAAgB,WAAW,CACzB,GAAyB,IAAK,CAAE,UAAW,eAAgB,KAAM,CAAM,IAG3E,EAAgB,WAAW,CAAC,GAC5B,IAAM,EAAW,SAAS,aAAa,CAAC,UAIxC,OAHA,EAAS,WAAW,CAAC,SAAS,cAAc,CAAC,IAC7C,EAAU,WAAW,CAAC,GAEf,GAAe,EAAW,CAC/B,QAAS,CACP,CACE,QAAS,EACT,OAAQ,GAAe,EAAE,AAC3B,EACD,CACD,UAAW,CACb,EACF,EAgFE,mBAAoB,EACtB,EKpKA,MAAM,GAAgB,IAxGtB,MAEE,CAAC,EAAO,AAAC,AAET,EAAC,EAAK,AAAC,AAEP,EAAC,EAAW,AAAC,AAEb,EAAC,EAAa,AAAC,AAKf,cAAc,CACZ,IAAI,CAAC,CAAC,EAAW,CAAG,GACpB,IAAI,CAAC,CAAC,EAAa,CAAG,GACtB,IAAI,CAAC,CAAC,EAAO,CAAG,IAAI,GACtB,CAMA,iBAAiB,CAAI,CAAE,CACrB,GAAI,IAAI,CAAC,CAAC,EAAK,CACb,MAAM,AAAI,MAAM,4CAElB,CAAA,IAAI,CAAC,CAAC,EAAK,CAAG,IAAI,CAAC,CAAC,EAAoB,CAAC,GACrC,IAAI,CAAC,CAAC,EAAK,EACb,IAAI,CAAC,CAAC,EAAK,CAAC,gBAAgB,CAAC,UAAW,AAAC,IACvC,IAAI,CAAC,CAAC,EAAK,CAAC,MAAM,CAAG,IAAI,CAAC,CAAC,EAAW,CACtC,IAAI,CAAC,CAAC,EAAK,CAAC,IAAI,CAAG,CAAA,EACnB,IAAI,CAAC,CAAC,EAAK,CAAC,IAAI,GAChB,OAAO,gBAAgB,CAAC,OAAQ,KAC9B,IAAI,CAAC,CAAC,EAAK,CAAC,KAAK,EACnB,GACA,OAAO,gBAAgB,CAAC,QAAS,KAC/B,IAAI,CAAC,CAAC,EAAK,CAAC,IAAI,EAClB,EACF,EAEJ,CAMA,YAAY,CAAU,CAAE,CACtB,IAAM,EAAW,EAAE,CAanB,OAZA,EAAW,OAAO,CAAC,CAAC,EAAM,KACxB,IAAM,EAAU,IAAI,QAAQ,AAAC,IAC3B,IAAM,EAAQ,IAAI,CAAC,CAAC,EAAoB,CAAC,GACrC,GACF,EAAM,gBAAgB,CAAC,UAAW,AAAC,IACjC,IAAI,CAAC,CAAC,EAAO,CAAC,GAAG,CAAC,EAAK,GACvB,GACF,EAEJ,GACA,EAAS,IAAI,CAAC,EAChB,GACO,QAAQ,GAAG,CAAC,EACrB,CAOA,CAAC,EAAoB,CAAC,CAAG,EACvB,OAAO,EAAM,IAAI,MAAM,GAAO,IAChC,CAKA,WAAW,CAAG,CAAE,CACd,IAAM,EAAS,IAAI,CAAC,CAAC,EAAO,CAAC,GAAG,CAAC,GAC7B,IACF,EAAO,MAAM,CAAG,IAAI,CAAC,CAAC,EAAa,CACnC,EAAO,IAAI,GAEf,CAMA,sBAAsB,CAAO,CAAE,CAC7B,IAAI,CAAC,CAAC,EAAW,CAAG,EAAU,IAC1B,IAAI,CAAC,CAAC,EAAK,EACb,CAAA,IAAI,CAAC,CAAC,EAAK,CAAC,MAAM,CAAG,IAAI,CAAC,CAAC,EAAW,AAAX,CAE/B,CAMA,wBAAwB,CAAO,CAAE,CAC/B,IAAI,CAAC,CAAC,EAAa,CAAG,EAAU,GAClC,CACF,EG1GM,GAAa,qCAEb,GAAwB,IAAI,IAAI,CACpC,CAAC,KAAM,GAAG,CACV,CAAC,KAAM,EAAE,CACT,CAAC,KAAM,GAAI,CACX,CAAC,KAAM,IAAK,CACb,EAeM,SAAS,GAAe,CAAQ,EACrC,IAAI,EAAY,EACZ,EAAU,EACR,EAAQ,EAAS,KAAK,CAAC,IAC7B,GAAI,CAAC,EAEH,OADA,AAAA,EAAI,KAAK,CAAC,CAAC,mBAAmB,EAAE,EAAS,qBAAqB,CAAC,EACxD,CAAE,UAAW,EAAG,QAAS,EAAG,KAAM,IAAK,CACzC,EACL,EAAY,CAAK,CAAC,EAAE,CACpB,IAAM,EAAe,GAAsB,GAAG,CAAC,CAAK,CAAC,EAAE,GAAK,EAC5D,EAAU,WAAW,CAAK,CAAC,EAAE,EAAI,CACnC,CACA,MAAO,CAAE,UAAW,EAAW,QAAS,EAAS,KAAM,CAAK,CAAC,EAAE,AAAC,CAClE,CE/BA,MAAM,GAAkB,iCAMjB,SAAS,GAAS,EAAQ,CAAC,EAChC,OAAO,EAA4B,EAAG,EACxC,CAMO,SAAS,GAAY,CAAG,EAC7B,OAAO,GAAgB,IAAI,CAAC,EAC9B,CAQO,SAAS,GAAc,CAAI,EAChC,GAAI,CAAC,EACH,OAAO,EAET,GAAI,OAAO,SAAS,CAAC,GACnB,OAAO,GAAS,GAElB,IAAM,EAAU,GAAe,GAC/B,GAAI,CAAC,EAIH,OAHA,AAAA,EAAI,KAAK,CACP,CAAC,OAAO,EAAE,EAAK,kDAAkD,CAAC,EAE7D,EAET,IAAI,EAAS,EACb,IAAK,IAAI,EAAO,EAAG,EAAO,EAAQ,GAAG,CAAE,IACrC,GAAU,GAAS,SAAS,EAAQ,KAAK,GAAK,EAAQ,MAAM,CAE9D,OAAO,CACT,CASO,SAAS,GAAQ,CAAI,EAC1B,IAAM,EAAU,GAAe,UAC/B,AAAK,EAGE,EAAQ,GAAG,CAAI,CAAA,EAAQ,KAAK,CAAG,EAAQ,MAAK,AAAL,EAFrC,CAGX,CAuCO,SAAS,GAAe,CAAI,EACjC,IAAM,EAAQ,EAAK,KAAK,CAAC,WACzB,AAAK,EAQE,CACL,IALU,SAAS,CAAK,CAAC,EAAE,EAM3B,MALY,SAAS,CAAK,CAAC,EAAE,EAM7B,OALa,CAAK,CAAC,EAAE,CAAG,SAAS,CAAK,CAAC,EAAE,EAAI,CAM/C,GAXE,AAAA,EAAI,KAAK,CAAC,CAAC,qBAAqB,EAAE,EAAK,CAAC,EACjC,KAWX,CAOO,SAAS,GAAuB,CAAO,SAC5C,AAAI,EAAQ,MAAM,CACT,CAAC,EAAE,EAAQ,GAAG,CAAC,CAAC,EAAE,EAAQ,KAAK,CAAC,CAAC,EAAE,EAAQ,MAAM,CAAC,CAAC,CAEnD,CAAC,EAAE,EAAQ,GAAG,CAAC,CAAC,EAAE,EAAQ,KAAK,CAAC,CAAC,AAE5C,CChIA,MAAM,GAAqB,CACzB,GAAI,IAAK,IAAK,IAAK,KAAM,KAAM,KAAM,KAAM,KAAM,IAAM,KAAM,KAAM,KACnE,IAAO,MAAO,KAAO,KAAO,KAAO,IAAO,KAAO,KAAO,KAAO,KAAO,IACtE,KAAO,KAAO,IAAO,MAAQ,KAAQ,MAAQ,MAC9C,CAGK,GAAoB,CACxB,CAAE,IAAK,EAAG,UAAW,CAAE,EACvB,CAAE,IAAK,IAAK,UAAW,CAAE,EACzB,CAAE,IAAK,IAAK,UAAW,CAAE,EACzB,CAAE,IAAK,KAAM,UAAW,CAAE,EAE1B,CAAE,IAAK,KAAM,UAAW,CAAE,EAC1B,CAAE,IAAK,KAAO,UAAW,CAAE,EAC3B,CAAE,IAAK,KAAO,UAAW,CAAE,EAC3B,CAAE,IAAK,KAAO,UAAW,CAAE,EAE3B,CAAE,IAAK,KAAO,UAAW,CAAE,EAC3B,CAAE,IAAK,KAAO,UAAW,CAAE,EAC3B,CAAE,IAAK,KAAO,UAAW,CAAE,EAC3B,CAAE,IAAK,IAAQ,UAAW,CAAE,EAE5B,CAAE,IAAK,KAAQ,UAAW,CAAE,EAC5B,CAAE,IAAK,KAAQ,UAAW,CAAE,EAC5B,CAAE,IAAK,MAAQ,UAAW,CAAE,EAC5B,CAAE,IAAK,MAAQ,UAAW,CAAE,EAE5B,CAAE,IAAK,MAAQ,UAAW,CAAE,EAC5B,CAAE,IAAK,MAAQ,UAAW,CAAE,EAC5B,CAAE,IAAK,MAAQ,UAAW,CAAE,EAC5B,CAAE,IAAK,MAAQ,UAAW,CAAE,EAC7B,CCZM,SAAS,GAAa,CAAM,CAAE,CAAQ,CAAE,CAAW,EACxD,MAAO,CACL,OAAQ,CAAM,CAAC,EAAS,EAAE,CAAC,EAAY,CACvC,GAAI,CAAM,CAAC,EAAW,EAAE,EAAE,CAAC,EAAc,EAAE,CAC3C,MAAO,CAAM,CAAC,EAAW,EAAE,EAAE,CAAC,EAAY,CAC1C,GAAI,CAAM,CAAC,EAAW,EAAE,EAAE,CAAC,EAAc,EAAE,CAC3C,MAAO,CAAM,CAAC,EAAS,EAAE,CAAC,EAAc,EAAE,CAC1C,GAAI,CAAM,CAAC,EAAW,EAAE,EAAE,CAAC,EAAc,EAAE,CAC3C,MAAO,CAAM,CAAC,EAAW,EAAE,EAAE,CAAC,EAAY,CAC1C,GAAI,CAAM,CAAC,EAAW,EAAE,EAAE,CAAC,EAAc,EAAE,CAC3C,KAAM,CAAM,CAAC,EAAS,EAAE,CAAC,EAAc,EAAE,AAC3C,CACF,CAoEO,SAAS,GAAU,CAAM,EAC9B,IACI,EADA,EAAe,EAAO,MAAM,CAIhC,KAAO,EAAe,GACpB,EAAc,KAAK,KAAK,CAAC,KAAK,MAAM,GAAK,GACzC,IAEA,CAAC,CAAM,CAAC,EAAa,CAAE,CAAM,CAAC,EAAY,CAAC,CAAG,CAC5C,CAAM,CAAC,EAAY,CACnB,CAAM,CAAC,EAAa,CACrB,CAGH,OAAO,CACT,CH3GA,MAAM,GAAe,CAAC,MAAO,MAAO,MAAO,MAAO,MAAO,MAAM,CAQxD,SAAS,GAAyB,CAAK,EAC5C,OAAO,KAAK,KAAK,CAAE,AAAA,CAAA,EAAQ,EAAA,EAAM,EACnC,CAmBO,MAAM,GAEX,UAAW,AAEX,CAAA,gBAAiB,AAEjB,CAAA,eAAgB,AAEhB,CAAA,iBAAkB,AAElB,CAAA,cAAe,AAEf,CAAA,OAAQ,AAYR,aAAY,CAAO,CAAE,CACnB,IAAI,CAAC,UAAU,CAAG,EAAQ,UAAU,EAAI,MACxC,IAAM,EAAU,EAAQ,UAAU,EAAI,EAClC,AAAY,CAAA,YAAZ,GACF,IAAI,CAAC,OAAO,CAAG,CAAA,EACf,IAAI,CAAC,iBAAiB,CAAG,CAAA,GAChB,EAAQ,QAAQ,CAAC,WAAa,EAAQ,QAAQ,CAAC,SACxD,IAAI,CAAC,iBAAiB,CAAG,CAAA,EAEzB,IAAI,CAAC,iBAAiB,CAAG,CAAA,EAE3B,IAAI,CAAC,gBAAgB,CAAG,GAAS,kBAAoB,EACrD,IAAI,CAAC,eAAe,CAAG,GAAS,iBAAmB,EACnD,IAAI,CAAC,cAAc,CAAG,EAAQ,YAAY,AAC5C,CAMA,CAAC,EAAgB,GACf,OAAO,EAAI,IAAI,CAAC,eAAe,AACjC,CAMA,cAAe,QACb,AAAI,IAAI,CAAC,OAAO,CACP,IAAI,CAAC,CAAC,EAAgB,GAEtB,GAAa,IAAI,CAAC,UAAU,EAAI,IAAI,CAAC,gBAAgB,AAEhE,CAMA,eAAgB,CACd,OAAO,GAAc,IAAM,IAAI,CAAC,eAAe,CAAG,IAAI,CAAC,gBAAgB,AACzE,CAKA,eAAgB,KAIV,SAHJ,AAAI,IAAI,CAAC,OAAO,CACP,IAAI,CAAC,CAAC,EAAgB,IAI7B,EADE,IAAI,CAAC,cAAc,EAAI,IAAI,CAAC,eAAe,CAAG,EACrC,EAEA,IAAI,CAAC,eAAe,CAE1B,GAAmB,IAAI,CAAC,UAAU,EAAI,EAC/C,CAMA,OAAQ,CACN,IAAM,EAAe,IAAI,GAAa,CAAC,GAOvC,OANA,EAAa,eAAe,CAAG,IAAI,CAAC,eAAe,CACnD,EAAa,UAAU,CAAG,IAAI,CAAC,UAAU,CACzC,EAAa,cAAc,CAAG,IAAI,CAAC,cAAc,CACjD,EAAa,gBAAgB,CAAG,IAAI,CAAC,gBAAgB,CACrD,EAAa,iBAAiB,CAAG,IAAI,CAAC,iBAAiB,CACvD,EAAa,OAAO,CAAG,IAAI,CAAC,OAAO,CAC5B,CACT,CACF,CAKO,MAAM,GAEX,OAAQ,AAMR,aAAY,CAAa,CAAE,CACrB,AAAyB,UAAzB,OAAO,GACT,IAAI,CAAC,OAAO,CAAG,IAAI,IACnB,IAAI,CAAC,CAAC,EAAa,CAAC,IAEpB,IAAI,CAAC,OAAO,CAAG,IAAI,IAAI,EAE3B,CAWA,CAAC,EAAa,CAAC,CAAU,EAcvB,OAbA,EAAW,KAAK,CAAC,KAAK,OAAO,CAAC,AAAC,IAC7B,IAAM,EAAQ,EAAK,KAAK,CAAC,iCACzB,GAAI,CAAC,EACH,OAEF,GAAM,CAAC,EAAK,EAAM,CAAG,IAAI,CAAC,CAAC,EAAU,CAAC,CAAK,CAAC,EAAE,CAAE,CAAK,CAAC,EAAE,EACxD,GAAI,EACF,IAAI,CAAC,CAAC,EAAkB,CAAC,EAAK,EAAM,IAAI,SAExC,MAAM,AAAI,MAAM,CAAC,4BAA4B,EAAE,EAAK,CAAC,CAAC,CAE1D,GACA,IAAI,CAAC,YAAY,CAAG,IAAI,CAAC,MAAM,CAAC,KAAM,GAC/B,IAAI,AACb,CAOA,IAAI,CAAG,CAAE,CAAK,CAAE,CACd,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,EAAK,GACtB,IAAI,CAAC,qBAAqB,CAAC,EAC7B,CASA,IAAI,CAAG,CAAE,CAAQ,CAAE,CACjB,OAAO,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,IAAQ,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,IAAM,IAAQ,CACjE,CAOA,sBAAsB,CAAgB,CAAE,CAAC,CASzC,OAAO,CAAG,CAAE,CAAQ,CAAE,CAEpB,OAAO,EADQ,IAAI,CAAC,GAAG,CAAC,EAAK,GACK,EACpC,CAQA,sBAAsB,CAAG,CAAE,CAAQ,CAAE,CACnC,IAAM,EAAc,IAAI,CAAC,MAAM,CAAC,UAChC,AAAI,MAAA,EACK,EAEF,KAAK,KAAK,CAAC,EAhOA,IAiOpB,CASA,SAAS,CAAG,CAAE,CAAQ,CAAE,CAEtB,OAAO,EADQ,IAAI,CAAC,GAAG,CAAC,EAAK,GACO,EACtC,CAQA,cAAc,CAAG,CAAE,CAAQ,CAAE,CAC3B,IAAM,EAAQ,IAAI,CAAC,MAAM,CAAC,UAC1B,AAAI,MAAA,EACK,EAEF,GAAyB,EAClC,CASA,CAAC,EAAU,CAAC,CAAG,CAAE,CAAK,EAKpB,MAHY,SADZ,CAAA,EAAM,EAAI,WAAW,EAArB,GAEE,CAAA,EAAQ,EAAM,WAAW,EAD3B,EAGO,CAAC,EAAK,EAAM,AACrB,CAaA,CAAC,EAAkB,CAAC,CAAG,CAAE,CAAK,EAC5B,OAAQ,GACN,IAAK,OACH,OAAO,IAAI,CAAC,CAAC,EAA0B,CAAC,EAAK,EAC/C,KAAK,QACH,OAAO,IAAI,CAAC,CAAC,EAAsB,CAAC,EAAK,EAC3C,KAAK,MACH,OAAO,IAAI,CAAC,CAAC,EAA2B,CAAC,EAAK,EAChD,KAAK,WACH,OAAO,IAAI,CAAC,CAAC,EAAsB,CAAC,EAAK,EAC3C,SACE,OAAO,IAAI,CAAC,CAAC,EAAyB,CAAC,EAAK,EAChD,CACF,CAaA,CAAC,EAAsB,CAAC,CAAG,CAAE,CAAK,EAChC,IAAM,EAAQ,EAAM,KAAK,CAAC,uBAC1B,GAAK,EAGE,KAED,EADJ,IAAM,EAAW,CAAK,CAAC,EAAE,CAAC,IAAI,GAG5B,EADE,GAAiB,GACP,GAAmB,GAEnB,EAAmB,CAAK,CAAC,EAAE,CAAE,GAE3C,EAAQ,CAAC,EAAE,EAAU,CAAC,EAAE,CAAK,CAAC,EAAE,CAAC,CAAC,AACpC,MAXE,AAAA,EAAI,KAAK,CAAC,CAAC,+BAA+B,EAAE,EAAM,CAAC,EACnD,EAAQ,OAWV,IAAI,CAAC,GAAG,CAAC,EAAK,EAChB,CAOA,CAAC,EAAsB,CAAC,CAAG,CAAE,CAAK,EAC3B,GAAiB,KACpB,AAAA,EAAI,KAAK,CACP,CAAC,oBAAoB,EAAE,EAAM,KAAK,EAAE,EAAI,2BAA2B,CAAC,EAEtE,EAAQ,OAEV,IAAI,CAAC,GAAG,CAAC,EAAK,EAChB,CAQA,CAAC,EAA2B,CAAC,CAAG,CAAE,CAAK,EACjC,CAAC,GAAiB,IAAU,MAAM,SAAS,MAC7C,AAAA,EAAI,KAAK,CACP,CAAC,oBAAoB,EAAE,EAAM,KAAK,EAAE,EAAI,sCAAsC,CAAC,EAEjF,EAAQ,KAEV,IAAI,CAAC,GAAG,CAAC,EAAK,EAChB,CAQA,CAAC,EAAyB,CAAC,CAAG,CAAE,CAAK,EAC/B,GAAiB,IAAU,AAAQ,QAAR,GAC7B,CAAA,EAAQ,GAAmB,EAAA,EAE7B,IAAI,CAAC,GAAG,CAAC,EAAK,EAChB,CAQA,CAAC,EAA0B,CAAC,CAAG,CAAE,CAAK,EACpC,IAAM,EAAQ,EAAM,KAAK,CAAC,WACpB,EAAgB,EAAE,CACxB,EAAM,OAAO,CAAC,AAAC,GAAS,EAAc,IAAI,CAAC,EAAK,WAAW,KAC3D,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,OAAQ,EAC3B,CAMA,OAAQ,CACN,OAAO,IAAI,GAAO,IAAI,CAAC,OAAO,CAChC,CAKA,cAAe,CACb,OAAO,IAAI,IAAI,IAAI,IAAI,CAAC,OAAO,CAAC,OAAO,GAAG,CAC5C,CAMA,oBAAqB,CACnB,OAAO,IAAI,IAAI,IAAI,IAAI,CAAC,OAAO,CAAC,OAAO,GAAG,CAAC,IAAI,GACjD,CAKA,gBAAiB,CACf,IAAI,EAAS,GAOb,OANA,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,EAAO,KACZ,KAAX,GACF,CAAA,GAAU,GADZ,EAGA,GAAU,CAAC,EAAE,EAAI,CAAC,EAAE,EAAM,CAAC,AAC7B,GACO,CACT,CACF,CAKO,MAAM,WAAoB,GAK/B,YAAY,CAAa,CAAE,CACzB,KAAK,CAAC,GAAiB,IAAI,IAC7B,CAOA,wBAAwB,CAAK,CAAE,CAC7B,IAAI,EAAa,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,OAC9B,EAAe,AChXhB,SAAyB,CAAI,CAAE,CAAK,EACzC,IAAM,EAAU,GAAe,UAC/B,AAAK,GAGL,EAAQ,GAAG,CAAG,KAAK,GAAG,CAAC,EAAQ,GAAG,CAAG,EAAO,GACrC,GAAuB,IAHrB,CAIX,ED0WM,EACA,EAAM,MAAM,CAAC,iBAAiB,GAAK,GAKrC,OAHA,AAAA,EAAI,IAAI,CACN,CAAC,+BAA+B,EAAE,EAAW,WAAW,EAAE,EAAa,WAAW,CAAC,EAE9E,CACT,CACF,CAKO,MAAM,WAAwB,GAGnC,YAAa,AAEb,CAAA,iBAAkB,AAElB,CAAA,MAAO,AAGP,CAAA,QAAS,AAGT,CAAA,gBAAiB,AAGjB,CAAA,eAAgB,AAMhB,aAAY,CAAa,CAAE,CACzB,KAAK,CAAC,GAAiB,IAAI,IAAI,CAAC,CAAC,OAAQ,UAAU,CAAC,GACpD,IAAI,CAAC,iBAAiB,CAAG,EACzB,IAAI,CAAC,CAAC,EAAuB,CAAC,IAC9B,IAAI,CAAC,CAAC,EAAmB,GACzB,IAAI,CAAC,qBAAqB,EAC5B,CAMA,OAAQ,CACN,IAAM,EAAc,KAAK,CAAC,QAO1B,OANA,EAAY,YAAY,CAAG,IAAI,CAAC,YAAY,CAC5C,EAAY,iBAAiB,CAAG,IAAI,CAAC,iBAAiB,CACtD,EAAY,MAAM,CAAG,IAAI,CAAC,MAAM,CAChC,EAAY,QAAQ,CAAG,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,AAAC,GAAW,EAAO,KAAK,IACjE,EAAY,gBAAgB,CAAG,IAAI,CAAC,gBAAgB,CACpD,EAAY,eAAe,CAAG,IAAI,CAAC,eAAe,CAC3C,CACT,CAMA,CAAC,EAAuB,CAAC,CAAI,EAC3B,IAAM,EAAS,GAAqB,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,EAAE,EACvD,EAAa,EACjB,EAAK,OAAO,CAAC,AAAC,IACZ,GAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAM,CAClB,IAAM,EAAQ,CAAM,CAAC,IAAa,EAAI,EACtC,IAAI,CAAC,GAAG,CAAC,EAAK,EAChB,CACF,EACF,CAMA,CAAC,EAAmB,GAClB,IAAM,EAAe,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,MAChC,EAAkB,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,UACzC,GAAI,GAAgB,EAClB,OAEF,IAAM,EAAU,IAAI,CAAC,GAAG,CAAC,YACzB,GAAI,EAAS,CAEX,IAAM,EAAS,GADH,IAAI,CAAC,MAAM,CAAC,MAAO,IAE1B,GACH,IAAI,CAAC,GAAG,CAAC,SAAU,GAAa,GAAW,GAExC,GACH,IAAI,CAAC,GAAG,CAAC,KAAM,GAAa,GAAW,EAE3C,MAAW,GACT,IAAI,CAAC,GAAG,CAAC,SAAU,IAAI,CAAC,GAAG,CAAC,MAEhC,CAMA,gBAAiB,CACf,OAAO,IAAI,CAAC,YAAY,AAC1B,CAMA,mBAAoB,CAClB,OAAO,IAAI,CAAC,MAAM,AACpB,CAMA,+BAA+B,CAAQ,CAAE,CACvC,IAAM,EAAc,EAAS,MAAM,CAAC,GAAG,CAAC,uBACxC,AAAK,EAKE,GAAyB,AADhB,IAAI,CAAC,MAAM,CAAC,IACe,IAJzC,AAAA,EAAI,KAAK,CAAC,CAAC,UAAU,EAAE,EAAS,EAAE,CAAC,yBAAyB,CAAC,EACtD,EAIX,CAOA,eAAe,CAAQ,CAAE,CACvB,OAAO,IAAI,CAAC,YAAY,CAAC,GAAY,IAAI,CAAC,iBAAiB,CAAG,CAChE,CAMA,YAAa,CACX,OAAO,IAAI,CAAC,QAAQ,AACtB,CAMA,iBAAiB,CAAS,CAAE,CAC1B,IAAI,CAAC,gBAAgB,CAAG,EAAU,MAAM,CACtC,AAAC,GAAa,EAAS,YAAY,GAAK,AAAA,GAAa,MAAM,EAE7D,IAAI,CAAC,eAAe,CAAG,EAAU,MAAM,CACrC,AAAC,GAAa,EAAS,YAAY,GAAK,AAAA,GAAa,MAAM,EAE7D,IAAI,CAAC,qBAAqB,EAC5B,CAOA,sBAAsB,CAAU,CAAE,CAC5B,CAAA,CAAC,GAAc,GAAa,QAAQ,CAAC,EAAA,IACvC,IAAI,CAAC,4BAA4B,GACjC,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,gBAAgB,EAC1C,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,eAAe,EAE5C,CAKA,eAAe,CAAM,CAAE,CACrB,IAAI,EAAc,IAAI,CAAC,MAAM,CAAC,KAAM,GACpC,GAAI,CAAC,GAAU,AAAkB,IAAlB,EAAO,MAAM,CAAQ,CAClC,IAAI,CAAC,YAAY,CAAG,EACpB,MACF,CACA,IAAI,EAAY,IAAI,CAAC,MAAM,CAAC,MAAO,GAC/B,EAAwB,EACxB,EAAoB,EACxB,IAAK,IAAM,KAAQ,EACjB,OAAQ,EAAK,YAAY,EACvB,KAAK,AAAA,GAAa,MAAM,CACtB,CACE,IAAM,EAAU,EAAK,MAAM,CAAC,GAAG,CAAC,KAAM,GAChC,EAAU,AAxmB5B,SAA6B,CAAI,CAAE,CAAS,EAC1C,IAAM,EAAW,GAAyB,GACpC,EAAa,EAAK,MAAM,CAAC,GAAG,CAAC,OAAQ,IAAI,WAAW,GACpD,EAAc,EAAK,MAAM,CAAC,MAAM,CAAC,KAAM,UAC7C,AAAI,EAAW,QAAQ,CAAC,SACf,EACE,EAAW,QAAQ,CAAC,UACtB,EAAc,KAAK,GAAG,CAAC,EAAG,GAE1B,EAAc,CAEzB,EA6lBgD,EAAM,GACtC,EAAQ,UAAU,CAAC,KACrB,GAAyB,EAChB,EAAU,GACnB,CAAA,EAAc,CADT,CAGT,CACA,KACF,MAAK,AAAA,GAAa,MAAM,CAEtB,EAAoB,KAAK,GAAG,CAC1B,EACA,EAAK,MAAM,CAAC,MAAM,CAAC,KAAM,GAG/B,CAEF,IAAI,CAAC,YAAY,CAAG,EAAc,EAAwB,CAC5D,CAQA,gBAAgB,EAAU,EAAE,CAAE,KAUxB,EACA,EACA,EACA,EAmBA,CA/BJ,CAAA,IAAI,CAAC,QAAQ,CAAG,EAAE,CAElB,IAAM,EAAW,IAAI,CAAC,MAAM,CAAC,MAAO,GAC9B,EAAkB,GAAyB,EAC7C,CAAA,EAAQ,MAAM,CAAG,GACnB,AAAA,EAAI,KAAK,CACP,CAAC,4DAA4D,EAAE,EAAQ,MAAM,CAAC,CAAC,EAO/E,AAAmB,IAAnB,EAAQ,MAAM,EAChB,EAAa,GACb,EAAa,UACb,EAAa,CAAA,IAEb,EAAa,CAAO,CAAC,EAAE,CAAC,MAAM,CAAC,GAAG,CAAC,MAAO,QAAU,MACpD,EAAa,CAAO,CAAC,EAAE,CAAC,MAAM,CAAC,GAAG,CAAC,SAAW,GAC9C,EAAa,IAAI,CAAC,YAAY,CAAC,CAAO,CAAC,EAAE,GAG3C,EAAc,IAAI,GAAa,CAC7B,WAAY,EACZ,WAAY,EACZ,iBAAkB,EAAa,IAAI,CAAC,iBAAiB,CAAG,EACxD,gBAAiB,EACjB,aAAc,CAAA,CAChB,GAGI,EAAQ,MAAM,CAAG,GACnB,CAAA,EAAe,IAAI,GAAa,CAC9B,WAAY,CAAO,CAAC,EAAE,CAAC,MAAM,CAAC,GAAG,CAAC,MAAO,QAAU,MACnD,WAAY,CAAO,CAAC,EAAE,CAAC,MAAM,CAAC,GAAG,CAAC,SAAW,GAC7C,iBAAkB,IAAI,CAAC,YAAY,CAAC,CAAO,CAAC,EAAE,EAC1C,IAAI,CAAC,iBAAiB,CACtB,EACJ,gBAAiB,EACjB,aAAc,CAAA,CAChB,EAAA,EAEE,GAAc,mBAAqB,EAAY,iBAAiB,EAClE,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,GACnB,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAEnB,GACA,EAAa,YAAY,GAAK,EAAY,YAAY,IAEtD,EAAa,cAAc,CAAG,CAAA,EAC9B,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAEnB,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,EAEvB,CAKA,8BAA+B,CAC7B,IAAM,EAAS,AEzpBZ,SAAqC,CAAG,EAC7C,IAAM,EAAW,EAAmB,EAAK,GACrC,EAAQ,EACR,EAAQ,EACZ,GAEE,GAAI,GAAY,AADH,EAAiB,CAAC,IAAQ,CAClB,GAAG,CACtB,EAAQ,OAER,YAEK,EAAQ,GAAkB,MAAM,CAAE,AAE3C,MAAO,CAAE,MAAO,EAAO,UAAW,EAAiB,CAAC,EAAQ,EAAE,CAAC,SAAS,AAAC,CAC3E,EF2oBsD,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,OACnE,CAAA,IAAI,CAAC,MAAM,CAAG,EAAO,KAAK,CAC1B,IAAI,CAAC,iBAAiB,CAAG,EAAO,SAAS,AAC3C,CAYA,uBAAuB,CAAQ,CAAE,KE7rB7B,EF+rBF,IAAM,EE7rBR,AAAI,CAFA,EAAU,EF8rBY,EAAS,MAAM,CAAC,GAAG,CAAC,QE5rBhC,KACL,GACE,EAAU,KACZ,GACE,EAAU,KACZ,GACE,EAAU,KACZ,KAGT,EAAU,KAAK,GAAG,CAAC,GAAmB,MAAM,CAAG,EAAG,SAAS,IACpD,EAAkB,CAAC,EAAQ,EFmrB1B,EAAa,IAAI,CAAC,MAAM,CAAC,MAAO,GAChC,EAAS,EAAa,EAC5B,AAAA,EAAI,IAAI,CAAC,CAAC,0BAA0B,EAAE,EAAW,IAAI,EAAE,EAAO,CAAC,CAAC,EAChE,IAAI,CAAC,GAAG,CAAC,MAAO,GAChB,IAAM,EAAe,IAAI,CAAC,MAAM,CAGhC,OAFA,IAAI,CAAC,4BAA4B,GAE1B,CACL,IAAK,CAAE,IAAK,EAAY,IAAK,CAAO,EACpC,MAAO,CAAE,IAAK,EAAc,IAHb,IAAI,CAAC,MAAM,AAGgB,CAC5C,CACF,CAUA,aAAa,CAAQ,CAAE,CACrB,IAAM,EAAgB,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,QACjC,EAAkB,EAAS,MAAM,CAAC,GAAG,CAAC,QAC5C,GAAI,CAAC,GAAiB,CAAC,EACrB,MAAO,CAAA,EAET,IAAK,IAAM,KAAQ,EAAe,CAChC,IAAM,EAAQ,EAAK,KAAK,CAAC,KACrB,EAAmB,CAAA,EACvB,IAAK,IAAM,KAAQ,EACjB,GAAI,CAAC,EAAgB,QAAQ,CAAC,GAAO,CACnC,EAAmB,CAAA,EACnB,KACF,CAEF,GAAI,EACF,MAAO,CAAA,CAEX,CACA,MAAO,CAAA,CACT,CACF,CI5vBO,SAAS,GAAc,CAAY,CAAE,CAAY,MAElD,EACA,EAFJ,IAAM,EAAsB,GAAgB,EAAa,YAAY,AAGjE,CAAA,EAAa,IAAI,GAAK,AAAA,GAAa,KAAK,EAC1C,EAAS,IAAI,GAAY,GACzB,EAAY,SACH,EAAa,IAAI,GAAK,AAAA,GAAa,OAAO,EACnD,EAAS,IAAI,GAAY,GACzB,EAAY,YAEZ,EAAS,IAAI,GAAO,GACpB,EAAY,EAAa,SAAS,EAGpC,EAAO,GAAG,CAAC,OAAQ,EAAa,IAAI,EACpC,IAAM,EAAW,AA7BnB,SAAwB,CAAY,CAAE,CAAS,CAAE,CAAM,EACrD,IAAM,EAAW,IAAI,GAAS,EAAc,GAAI,CAAC,EAAE,EAAU,IAAI,CAAC,EAElE,OADA,EAAS,MAAM,CAAG,EACX,CACT,EAyBkC,EAAc,EAAW,GAOzD,OANA,EAAS,WAAW,CAAG,EAAa,WAAW,CAC3C,EAAS,OAAO,GAClB,EAAS,WAAW,CAAG,IAAI,GAAU,GAC5B,EAAS,YAAY,IAC9B,CAAA,EAAS,WAAW,CAAG,IAAI,GAAY,EADlC,EAGA,CACT,CEvCO,SAAS,GAAiB,EAAS,GAAG,EAC3C,GAAI,EAAO,GAAG,CAAG,EACf,OAAO,EAET,IAAM,EAAO,EAAO,OAAO,CAAC,KAAM,KAC5B,EAAkB,EAAK,MAAM,CAAC,GAAG,WAAW,GAAK,EAAK,SAAS,CAAC,GACtE,OAAO,AAAA,GAAS,OAAO,CAAC,EAC1B,CAQO,SAAS,GAAwB,CAAE,EACxC,IAAM,EAAa,CAAC,YAAY,EAAE,EAAG,WAAW,GAAG,CAAC,CAC9C,EAAS,AAAA,GAAS,OAAO,CAAC,UAChC,AAAI,IAAe,GACjB,AAAA,EAAI,KAAK,CAAC,CAAC,uBAAuB,EAAE,EAAW,CAAC,CAAC,EAC1C,IAEF,CACT,CCvBO,SAAS,GAAgB,CAAG,EACjC,OAAO,MAAM,GACV,IAAI,CAAC,AAAC,GAAa,EAAS,IAAI,IAChC,IAAI,CAAC,AAAC,GAAS,GACf,KAAK,CAAC,AAAC,IACN,AAAA,EAAI,KAAK,CAAC,CAAC,eAAe,EAAE,EAAI,EAAE,EAAE,EAAO,CAAC,EACrC,MAEb,CFAA,MAAM,GAAgB,CACpB,OAAQ,SACR,SAAU,WACV,KAAM,OACN,UAAW,WACb,CAgBA,OAAM,GAEJ,OAAO,cACL,iBACuE,AAEzE,QAAO,gBACL,iBACuE,AAEzE,QAAO,YACL,gBACuE,AAEzE,QAAO,iBAAmB,CAAE,AAE5B,CAAA,MAAO,AAEP,CAAA,QAAS,AAET,CAAA,IAAK,AAEL,CAAA,QAAS,AAKT,cAAc,CACZ,IAAI,CAAC,MAAM,CAAG,EAAE,CAChB,IAAI,CAAC,QAAQ,CAAG,EAAE,CAClB,IAAI,CAAC,IAAI,CAAG,EAAE,CACd,IAAI,CAAC,QAAQ,CAAG,EAAE,AACpB,CAMA,aAAa,CAAO,CAAE,CACpB,IAAI,CAAC,MAAM,CAAC,IAAI,IAAI,EAAQ,MAAM,EAClC,IAAI,CAAC,QAAQ,CAAC,IAAI,IAAI,EAAQ,QAAQ,EACtC,IAAI,CAAC,IAAI,CAAC,IAAI,IAAI,EAAQ,IAAI,EAC9B,IAAI,CAAC,QAAQ,CAAC,IAAI,IAAI,EAAQ,QAAQ,CACxC,CAOA,KAAK,CAAQ,CAAE,CACb,IAAI,EAAS,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,UAC9B,AAAI,GAGJ,CAAA,EAAS,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,EAA5B,GAIA,CAAA,EAAS,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,EAAxB,EANS,EAUF,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,EAC5B,CAMA,OAAO,CAAQ,CAAE,CACf,IAAM,EAAU,IAAI,GASpB,OARA,EAAQ,MAAM,CAAG,EAAW,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,GAAY,IAAI,IAAI,CAAC,MAAM,CAAC,CAC3E,EAAQ,QAAQ,CAAG,EACf,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,GACrB,IAAI,IAAI,CAAC,QAAQ,CAAC,CACtB,EAAQ,IAAI,CAAG,EAAW,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,GAAY,IAAI,IAAI,CAAC,IAAI,CAAC,CACrE,EAAQ,QAAQ,CAAG,EACf,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,GACrB,IAAI,IAAI,CAAC,QAAQ,CAAC,CACf,CACT,CAMA,gBAAiB,CACf,IAAM,EAAS,KAAK,MAAM,UAC1B,AAAI,EAAS,GAAQ,aAAa,CACzB,IAAI,CAAC,oBAAoB,GACvB,EAAS,GAAQ,eAAe,CAClC,IAAI,CAAC,sBAAsB,GACzB,EAAS,GAAQ,WAAW,CAC9B,IAAI,CAAC,kBAAkB,GAEvB,IAAI,CAAC,sBAAsB,EAEtC,CAMA,sBAAuB,CACrB,OAAO,EAAsB,IAAI,CAAC,MAAM,CAC1C,CAMA,wBAAyB,QACvB,AAAI,AAAyB,IAAzB,IAAI,CAAC,QAAQ,CAAC,MAAM,CACf,IAAI,CAAC,oBAAoB,GAEzB,EAAsB,IAAI,CAAC,QAAQ,CAE9C,CAOA,oBAAqB,QACnB,AAAI,AAAqB,IAArB,IAAI,CAAC,IAAI,CAAC,MAAM,CACX,IAAI,CAAC,sBAAsB,GAE3B,EAAsB,IAAI,CAAC,IAAI,CAE1C,CAMA,wBAAyB,QACvB,AAAI,AAAyB,IAAzB,IAAI,CAAC,QAAQ,CAAC,MAAM,CACf,IAAI,CAAC,kBAAkB,GAEvB,EAAsB,IAAI,CAAC,QAAQ,CAE9C,CACF,CA8GO,SAAS,GAAiB,CAAI,CAAE,CAAU,MAsC7B,EArClB,IAAM,EAAQ,EAAK,KAAK,CACtB,iFAEF,GAAI,CAAC,EAEH,OADA,AAAA,EAAI,KAAK,CAAC,CAAC,sBAAsB,EAAE,EAAK,CAAC,EAClC,KAET,IAAM,EAAQ,CAAC,CACf,CAAA,EAAM,QAAQ,CAAG,SAAS,CAAK,CAAC,EAAE,EAClC,EAAM,MAAM,CAAG,CAAK,CAAC,EAAE,CAAC,WAAW,GACnC,EAAM,MAAM,CAAG,CAAK,CAAC,EAAE,CACvB,EAAM,IAAI,CAAG,GAAgB,WAAW,CAAC,EAAY,EAAM,MAAM,EACjE,EAAM,EAAE,CAAG,CAAK,CAAC,EAAE,CACnB,IAAM,EAAe,AC3QhB,SAA2B,EAAK,GAAG,EACxC,IAAM,EAAQ,EAAG,KAAK,CAAC,YACvB,AAAI,EAAG,GAAG,CAAG,EACJ,EAEF,CACL,KAAM,GAAiB,CAAK,CAAC,EAAE,EAC/B,UAAW,CAAK,CAAC,EAAE,CAAC,WAAW,GAC/B,YAAa,GAAwB,CAAK,CAAC,EAAE,CAC/C,CACF,EDiQsD,EAAM,EAAE,EAO5D,OANA,EAAM,IAAI,CAAG,EAAa,IAAI,CAC9B,EAAM,SAAS,CAAG,EAAa,SAAS,CACxC,EAAM,WAAW,CAAG,EAAa,WAAW,CAC5C,EAAM,YAAY,CAqBX,CADW,EApBc,CAAK,CAAC,EAAE,EAqB1B,EAAK,IAAI,GAAG,KAAK,CAAC,WAAa,EApB7C,EAAM,YAAY,CAAG,CAAK,CAAC,EAAE,CAC7B,EAAM,eAAe,CAAG,AAQ1B,SAAwB,CAAM,EAC5B,IAAM,EAAQ,GAAQ,MAAM,sBAC5B,OAAO,EAAQ,EAAqB,CAAK,CAAC,EAAE,CAAE,GAAK,CACrD,EAXyC,EAAM,YAAY,EAClD,CACT,CA0EO,MAAM,GAAkB,IA5M/B,MAEE,CAAC,EAAQ,AAAC,AAEV,cAAc,CACZ,IAAI,CAAC,CAAC,EAAQ,CAAG,IAAI,GACvB,CAOA,WAAW,CAAG,CAAE,CAAO,CAAE,CACvB,IAAI,CAAC,CAAC,EAAQ,CAAC,GAAG,CAAC,EAAK,EAC1B,CAOA,WAAW,CAAG,CAAE,CACd,IAAM,EAAS,IAAI,CAAC,CAAC,EAAQ,CAAC,GAAG,CAAC,GAIlC,OAHK,GACH,AAAA,CAAG,CAAC,oCAAoC,EAAE,EAAI,CAAC,CAE1C,CACT,CAOA,eAAe,CAAS,CAAE,CAAQ,CAAE,KAC9B,EAEF,EADE,MAAM,OAAO,CAAC,GACV,EAAsB,GAEtB,EAER,IAAI,EAAU,IAAI,CAAC,UAAU,CAAC,GAAK,MAAM,CAAC,GAC1C,GAAI,EACF,OAAO,EAAQ,cAAc,GAE/B,AAAA,EAAI,KAAK,CAAC,CAAC,gCAAgC,EAAE,EAAI,CAAC,CAEpD,CAOA,SAAS,CAAE,CAAE,CAAI,CAAE,CAIjB,IAAK,IAAM,KAHN,GACH,CAAA,EAAO,IAAI,CAAC,CAAC,EAAQ,CAAC,IAAI,EAD5B,EAGkB,GAAM,CACtB,IAAM,EAAS,IAAI,CAAC,CAAC,EAAQ,CAAC,GAAG,CAAC,IAAM,KAAK,AAAC,GAAU,EAAM,EAAE,GAAK,GACrE,GAAI,EACF,OAAO,CAEX,CACA,AAAA,EAAI,KAAK,CAAC,CAAC,kCAAkC,EAAE,EAAG,KAAK,EAAE,EAAK,IAAI,CAAC,MAAM,CAAC,CAE5E,CAQA,iBAAiB,CAAW,CAAE,CAAQ,CAAE,CACtC,IAAM,EAAgB,IAAI,GAK1B,OAJA,EAAY,OAAO,CAAC,AAAC,IACnB,IAAM,EAAU,IAAI,CAAC,UAAU,CAAC,GAAK,MAAM,CAAC,GAC5C,EAAc,YAAY,CAAC,EAC7B,GACO,CACT,CAQA,YAAY,CAAG,CAAE,CAAI,CAAE,CACrB,OAAQ,GACN,IAAK,SACL,IAAK,UACL,IAAK,UACH,OAAO,AAAA,GAAe,EACxB,SACE,OAAO,AAAA,GAAkB,EAC7B,CACF,CACF,EPtQa,GAAY,CACvB,KAAM,CAAE,GAAI,OAAQ,MAAO,EAAG,MAAO,CAAA,EAAO,aAAc,CAAA,CAAM,EAChE,KAAM,CAAE,GAAI,OAAQ,MAAO,EAAG,MAAO,CAAA,EAAO,aAAc,CAAA,CAAM,EAChE,MAAO,CAAE,GAAI,QAAS,MAAO,EAAG,MAAO,CAAA,EAAO,aAAc,CAAA,CAAM,EAClE,KAAM,CAAE,GAAI,OAAQ,MAAO,EAAG,MAAO,CAAA,EAAO,aAAc,CAAA,CAAM,EAChE,SAAU,CAAE,GAAI,WAAY,MAAO,EAAG,MAAO,CAAA,EAAO,aAAc,CAAA,CAAK,EACvE,MAAO,CAAE,GAAI,QAAS,MAAO,EAAG,MAAO,CAAA,EAAO,aAAc,CAAA,CAAK,EACjE,SAAU,CAAE,GAAI,WAAY,MAAO,IAAK,MAAO,CAAA,EAAO,aAAc,CAAA,CAAK,EACzE,OAAQ,CACN,GAAI,SACJ,MAAO,EACP,MAAO,CAAA,EACP,aAAc,CAAA,CAChB,EACA,gBAAiB,CACf,GAAI,kBACJ,MAAO,EACP,MAAO,CAAA,EACP,aAAc,CAAA,CAChB,EACA,MAAO,CACL,GAAI,QACJ,MAAO,OAAO,gBAAgB,CAC9B,MAAO,CAAA,EACP,aAAc,CAAA,CAChB,CACF,EAWa,GAAe,CAC1B,OAAQ,CACN,aAAc,EACd,UAAW,CAAE,MAAO,GAAU,KAAK,CAAE,MAAO,GAAU,IAAI,AAAC,CAC7D,EACA,WAAY,CACV,aAAc,EACd,UAAW,CAAE,MAAO,GAAU,QAAQ,AAAC,CACzC,EACA,QAAS,CACP,aAAc,EACd,UAAW,CAAE,MAAO,KAAM,MAAO,GAAU,QAAQ,AAAC,CACtD,EACA,MAAO,CACL,aAAc,EACd,UAAW,CAAE,MAAO,GAAU,MAAM,CAAE,MAAO,GAAU,eAAe,AAAC,CACzE,EACA,OAAQ,CACN,aAAc,EACd,UAAW,CAAE,MAAO,GAAU,QAAQ,CAAE,MAAO,GAAU,KAAK,AAAC,CACjE,EACA,OAAQ,CACN,aAAc,EACd,UAAW,CAAE,MAAO,GAAU,QAAQ,CAAE,MAAO,GAAU,KAAK,AAAC,CACjE,EACA,kBAAmB,CACjB,aAAc,EACd,UAAW,CAAE,MAAO,GAAU,QAAQ,CAAE,MAAO,GAAU,KAAK,AAAC,CACjE,EACA,UAAW,CACT,aAAc,EACd,UAAW,CAAE,MAAO,GAAU,QAAQ,CAAE,MAAO,GAAU,IAAI,AAAC,CAChE,EACA,MAAO,CAAE,aAAc,EAAG,UAAW,CAAE,MAAO,GAAU,KAAK,AAAC,CAAE,CAClE,EAQO,SAAS,GAAkB,CAAG,EACnC,IAAM,EAAO,EAAY,CAAC,EAAI,CAI9B,aAHI,GACF,AAAA,EAAI,KAAK,CAAC,CAAC,4BAA4B,EAAE,EAAI,CAAC,EAEzC,CACT,CAoCA,MAAM,GAEJ,CAAC,EAAO,AAAC,AAET,EAAC,EAAS,AAAC,AAEX,EAAC,EAAS,AAAC,AAEX,EAAC,EAAY,AAAC,AAEd,EAAC,EAAS,AAAC,AAOX,aAAY,CAAO,CAAE,CAAY,CAAE,CAAS,CAAE,CAC5C,IAAI,CAAC,CAAC,EAAO,CAAG,EAChB,IAAI,CAAC,CAAC,EAAS,CAAG,EAClB,IAAI,CAAC,CAAC,EAAS,CAAG,IAAI,IACtB,IAAI,CAAC,CAAC,EAAY,CAAG,EACrB,IAAI,CAAC,CAAC,EAAS,CAAG,CACpB,CAMA,IAAI,aAAc,CAChB,OAAO,IAAI,CAAC,CAAC,EAAS,CAAC,EAAE,AAC3B,CAKA,IAAI,WAAY,CACd,OAAO,IAAI,CAAC,CAAC,EAAS,AACxB,CAKA,IAAI,WAAY,CACd,OAAO,IAAI,CAAC,CAAC,EAAO,CAAG,IAAI,CAAC,CAAC,EAAS,AACxC,CAMA,IAAI,UAAW,CACb,OAAO,IAAI,CAAC,CAAC,EAAO,AACtB,CAMA,SAAU,CACR,OAAO,AAAoB,IAApB,IAAI,CAAC,CAAC,EAAS,AACxB,CAOA,iBAAiB,CAAQ,CAAE,CACzB,OAAO,IAAI,CAAC,CAAC,EAAY,CAAG,EAAI,EAAS,YAAY,AACvD,CAOA,IAAI,CAAQ,CAAE,CACZ,OAAO,IAAI,CAAC,CAAC,EAAS,CAAC,GAAG,CAAC,EAC7B,CAOA,IAAI,CAAQ,CAAE,CACZ,IAAM,EAAQ,IAAI,CAAC,CAAC,EAAO,CAAG,IAAI,CAAC,CAAC,EAAS,CACvC,EAAgB,IAAI,CAAC,gBAAgB,CAAC,UAC5C,AAAI,GAAS,IACX,IAAI,CAAC,CAAC,EAAS,CAAC,GAAG,CAAC,EAAU,GAC9B,IAAI,CAAC,CAAC,EAAS,EAAI,EACZ,CAAA,EAGX,CAMA,KAAK,CAAQ,CAAE,CACb,IAAM,EAAiB,IAAI,CAAC,CAAC,EAAS,CAAC,GAAG,CAAC,GACrC,EAAgB,IAAI,CAAC,gBAAgB,CAAC,GAK5C,OAJI,IACF,IAAI,CAAC,CAAC,EAAS,EAAI,EACnB,IAAI,CAAC,CAAC,EAAS,CAAC,MAAM,CAAC,IAElB,CACT,CAMA,WAAY,CACV,GAAI,IAAI,CAAC,OAAO,GACd,OAAO,KAET,IAAM,EAAgB,IAAI,CAAC,CAAC,EAAS,CAAC,MAAM,GAAG,IAAI,GAAG,KAAK,CAC3D,OAAO,IAAI,CAAC,IAAI,CAAC,EACnB,CAMA,QAAS,CACP,OAAO,IAAI,CAAC,CAAC,EAAS,CAAC,MAAM,EAC/B,CAOA,OAAO,CAAQ,CAAE,CACf,IAAM,EAAgB,IAAI,CAAC,gBAAgB,CAAC,GAC5C,OAAO,IAAI,CAAC,CAAC,EAAO,CAAG,IAAI,CAAC,CAAC,EAAS,EAAI,CAC5C,CACF,CAQA,MAAM,GAEJ,CAAC,EAAQ,AAAC,AAEV,EAAC,EAAiB,AAAC,AAKnB,cAAc,CACZ,IAAI,CAAC,CAAC,EAAiB,CAAG,CAAA,CAC5B,CAMA,IAAI,WAAY,CACd,OAAO,GAAU,KAAK,AACxB,CAMA,IAAI,aAAc,CAChB,OAAO,GAAU,KAAK,CAAC,EAAE,AAC3B,CAMA,SAAU,CACR,MAAO,CAAC,IAAI,CAAC,CAAC,EAAQ,EAAI,AAA4B,IAA5B,IAAI,CAAC,CAAC,EAAQ,CAAC,QAAQ,AACnD,CAQA,IAAI,CAAc,CAAE,CAClB,OAAO,IAAI,CAAC,CAAC,EAAQ,CAAC,QAAQ,CAAG,CACnC,CAKA,IAAI,CAAQ,CAAE,CACZ,IAAM,EAAc,EAAS,WAAW,CACxC,GAAI,CAAC,IAAI,CAAC,CAAC,EAAQ,CAEjB,OADA,IAAI,CAAC,CAAC,EAAQ,CAAG,EAAS,KAAK,GACxB,CAAA,EAET,IAAM,EAAqB,IAAI,CAAC,CAAC,EAAQ,CAAC,WAAW,CASrD,OARK,IAAI,CAAC,CAAC,EAAiB,GAC1B,IAAI,CAAC,CAAC,EAAQ,CAAG,GAAW,sBAAsB,CAChD,EAAmB,OAAO,EAE5B,IAAI,CAAC,CAAC,EAAiB,CAAG,CAAA,GAG5B,IAAI,CAAC,CAAC,EAAQ,CAAC,QAAQ,CAAG,EAAmB,OAAO,CAAG,EAAY,OAAO,CACnE,CAAA,CACT,CAQA,KAAK,CAAQ,CAAE,CACb,IAAM,EAAQ,KAAK,GAAG,CAAC,IAAI,CAAC,CAAC,EAAQ,CAAC,QAAQ,CAAE,EAAS,QAAQ,EAGjE,OAFA,IAAI,CAAC,CAAC,EAAQ,CAAC,QAAQ,CAAG,IAAI,CAAC,CAAC,EAAQ,CAAC,QAAQ,CAAG,EACpD,EAAS,QAAQ,CAAG,EACb,CACT,CAOA,OAAO,CAAc,CAAE,CACrB,MAAO,CAAA,CACT,CAMA,QAAS,QACP,AAAI,AAAC,IAAI,CAAC,CAAC,EAAQ,EAAI,AAA4B,IAA5B,IAAI,CAAC,CAAC,EAAQ,CAAC,QAAQ,CAGrC,CAAC,IAAI,CAAC,CAAC,EAAQ,CAAC,KAAK,GAAG,CAAC,MAAM,GAF/B,EAAE,CAAC,MAAM,EAIpB,CAOA,OAAO,uBAAuB,CAAE,CAAE,CAIhC,IAAM,EAAW,AAAA,GAHI,AAAA,GACnB,CAAC,kCAAkC,EAAE,EAAG,EAAE,CAAC,GAI7C,OADA,EAAS,QAAQ,CAAG,EACb,CACT,CACF,CAMO,MAAM,GAEX,EAAG,AAEH,CAAA,aAAc,AAEd,CAAA,WAAY,AAEZ,CAAA,YAAa,AAEb,CAAA,MAAO,AAEP,CAAA,WAAY,AAEZ,CAAA,YAAa,AAQb,aAAY,CAAY,CAAE,CAAW,CAAE,CAAa,CAAE,CACpD,IAAI,CAAC,EAAE,CAAG,EAAa,EAAE,CACzB,IAAI,CAAC,WAAW,CAAG,EACnB,IAAI,CAAC,aAAa,CAAG,EACrB,IAAI,CAAC,YAAY,CAAG,EAAa,IAAI,CACrC,IAAI,CAAC,YAAY,CAAG,CACtB,CAKA,IAAI,aAAc,CAEhB,OAAO,GADU,IAAI,CAAC,MAAM,EAAE,IAAI,SAEpC,CAKA,IAAI,UAAW,CAEb,OC7ZK,GD4ZY,IAAI,CAAC,MAAM,EAAE,IAAI,UC5ZJ,OAAO,AD8ZvC,CAMA,IAAI,mBAAoB,QACtB,AAAI,IAAI,CAAC,YAAY,GAAK,GAAa,KAAK,CACnC,IAAI,CAAC,QAAQ,CAEb,KAAK,KAAK,CAAC,GAAK,IAAI,CAAC,QAAQ,EAAI,GAE5C,CAMA,IAAI,SAAS,CAAE,CAAE,CACf,GAAI,CAAC,IAAI,CAAC,MAAM,CACd,MAAM,AAAI,MAAM,8CAElB,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,QC3ZX,CAAC,EAAE,AD2ZyC,EC3ZtC,OAAO,CAAC,GAAG,GAAG,CAAC,CD4Z5B,CAKA,IAAI,cAAe,CACjB,OAAO,IAAI,CAAC,YAAY,CAAC,YAAY,AACvC,CAMA,IAAI,gBAAiB,CACnB,OAAO,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,KAAK,AAC1C,CAMA,IAAI,gBAAiB,CACnB,OAAO,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,KAAK,AAC1C,CAKA,IAAI,cAAe,CACjB,OAAO,IAAI,CAAC,cAAc,GAAK,GAAU,KAAK,AAChD,CAKA,qBAAsB,CACpB,OACE,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,KAAK,EAAI,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,KAAK,AAE1E,CAMA,eAAgB,CACd,IAAM,EAAa,EAAE,CAOrB,OANI,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,KAAK,EACnC,EAAW,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,KAAK,EAE/C,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,KAAK,EACnC,EAAW,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,KAAK,EAE5C,CACT,CAKA,OAAQ,CACN,IAAM,EAAQ,IAAI,GAChB,IAAI,CAAC,YAAY,CACjB,IAAI,CAAC,WAAW,CAChB,IAAI,CAAC,aAAa,EAIpB,OAFA,EAAM,MAAM,CAAG,IAAI,CAAC,MAAM,CAAC,KAAK,GAChC,EAAM,KAAK,CAAG,IAAI,CAAC,KAAK,CACjB,CACT,CAMA,SAAU,CACR,OACE,IAAI,CAAC,YAAY,GAAK,GAAa,KAAK,EACxC,IAAI,CAAC,YAAY,GAAK,GAAa,OAAO,AAE9C,CAMA,UAAW,CACT,MAAO,CAAC,CAAC,IAAI,CAAC,WAAW,EAAE,UAC7B,CAKA,cAAe,CACb,OAAO,IAAI,CAAC,YAAY,GAAK,GAAa,UAAU,AACtD,CACF,CAKO,MAAM,GAEX,CAAC,EAAM,AAAC,AAGR,EAAC,EAAQ,AAAC,AAGV,EAAC,EAAQ,AAAC,AAOV,aAAY,CAAQ,CAAE,CAAQ,CAAE,CAG9B,IAAK,IAAM,KAFX,IAAI,CAAC,CAAC,EAAM,CAAG,IAAI,IACnB,IAAI,CAAC,CAAC,EAAQ,CAAG,EACW,GAAW,CACrC,IAAM,EAAY,EAAS,CAAC,EAAc,CAC1C,IAAI,CAAC,CAAC,EAAQ,CAAC,EACjB,CACA,IAAI,CAAC,CAAC,EAAQ,CAAG,CACnB,CAKA,IAAI,UAAW,CACb,OAAO,IAAI,CAAC,CAAC,EAAQ,AACvB,CAKA,CAAC,EAAY,GACP,IAAI,CAAC,CAAC,EAAQ,EAChB,IAAI,CAAC,CAAC,EAAQ,EAElB,CAKA,CAAC,EAAQ,CAAC,CAAS,EACjB,GAAI,EAAU,KAAK,CACjB,OAAO,IAAI,CAAC,CAAC,EAAM,CAAC,GAAG,CACrB,EACA,IAAI,GAAW,EAAU,KAAK,CAAE,EAAU,YAAY,GAG1D,IAAI,EAAa,CAAA,CACb,CAAA,IAAI,CAAC,CAAC,EAAQ,EAAI,IAAc,GAAU,QAAQ,CACpD,EAAa,CAAA,EACH,IAAI,CAAC,CAAC,EAAQ,EAAI,IAAc,GAAU,KAAK,EACzD,CAAA,EAAa,CAAA,CADR,EAGH,GACF,IAAI,CAAC,CAAC,EAAM,CAAC,GAAG,CACd,EACA,IAAI,GAAc,EAAU,KAAK,CAAE,EAAU,YAAY,CAAE,GAGjE,CAOA,SAAS,CAAS,CAAE,CAIlB,OAHI,IAAI,CAAC,CAAC,EAAQ,EAAI,IAAc,GAAU,QAAQ,EACpD,CAAA,EAAY,GAAU,KAAK,AAAL,EAEjB,IAAI,CAAC,CAAC,EAAM,CAAC,GAAG,CAAC,EAC1B,CAOA,iBAAiB,CAAW,CAAE,CAC5B,IAAK,IAAM,KAAS,IAAI,CAAC,CAAC,EAAM,CAAC,MAAM,GACrC,GAAI,EAAM,WAAW,GAAK,EACxB,OAAO,EAGX,OAAO,IACT,CASA,kBAAkB,CAAQ,CAAE,CAC1B,IAAI,EAAY,EAAS,cAAc,CAClC,IAAI,CAAC,CAAC,EAAM,CAAC,GAAG,CAAC,IACpB,CAAA,EAAY,EAAS,cAAc,AAAd,EAEvB,IAAM,EAAQ,IAAI,CAAC,QAAQ,CAAC,UAC5B,AAAI,GAAO,OAAO,GACT,EAEF,IACT,CAMA,YAAY,CAAQ,CAAE,CACpB,IAAM,EAAQ,IAAI,CAAC,QAAQ,CAAC,EAAS,mBAAmB,IAClD,EAAS,GAAO,IAAI,GAE1B,OADA,IAAI,CAAC,CAAC,EAAY,GACX,CACT,CAYA,wBAAyB,CACvB,IAAK,IAAM,KAAS,IAAI,CAAC,CAAC,EAAM,CAAC,MAAM,GAAI,CACzC,IAAM,EAAY,EAAM,MAAM,GACxB,EAAQ,EAAU,IAAI,IAAI,MAChC,GAAI,EACF,MAAO,CAAE,MAAO,EAAO,SAAU,CAAM,CAE3C,CACA,OAAO,IACT,CAOA,sBAAsB,CAAQ,CAAE,CAE9B,IAAK,IAAM,KADY,IAAI,CAAC,oBAAoB,GAE9C,GAAI,EAAQ,QAAQ,CAAC,EAAE,GAAK,EAAS,EAAE,CACrC,MAAO,CAAA,EAGX,MAAO,CAAA,CACT,CAMA,yBAA0B,CACxB,IAAM,EAAS,EAAE,CASjB,IAAK,IAAM,IARI,CACb,IAAI,CAAC,CAAC,EAAM,CAAC,GAAG,CAAC,GAAU,IAAI,EAC/B,IAAI,CAAC,CAAC,EAAM,CAAC,GAAG,CAAC,GAAU,IAAI,EAC/B,IAAI,CAAC,CAAC,EAAM,CAAC,GAAG,CAAC,GAAU,KAAK,EAChC,IAAI,CAAC,CAAC,EAAM,CAAC,GAAG,CAAC,GAAU,IAAI,EAC/B,IAAI,CAAC,CAAC,EAAM,CAAC,GAAG,CAAC,GAAU,QAAQ,EACnC,IAAI,CAAC,CAAC,EAAM,CAAC,GAAG,CAAC,GAAU,eAAe,EAC3C,CAEC,EAAM,MAAM,GAAG,OAAO,CAAC,AAAC,GAAS,EAAO,IAAI,CAAC,IAE/C,OAAO,CACT,CAKA,sBAAuB,CACrB,IAAM,EAAiB,EAAE,CAMzB,OALA,IAAI,CAAC,CAAC,EAAM,CAAC,MAAM,GAAG,OAAO,CAAC,AAAC,IAC7B,EAAM,MAAM,GAAG,OAAO,CAAC,AAAC,IACtB,EAAe,IAAI,CAAC,CAAE,MAAO,EAAO,SAAU,CAAS,EACzD,EACF,GACO,CACT,CAMA,eAAgB,CACd,IAAM,EAAU,IAAI,CAAC,QAAQ,CAAC,GAAU,KAAK,EAAE,MAAM,GAC/C,EAAW,EAAQ,IAAI,IAAI,MACjC,OAAO,EAAW,EAAS,QAAQ,CAAG,CACxC,CAKA,WAAW,CAAE,CAAE,CACb,IAAM,EAAW,GAAW,sBAAsB,CAAC,GACnD,IAAI,CAAC,CAAC,EAAM,CAAC,GAAG,CAAC,GAAU,KAAK,EAAE,GAAG,CAAC,GACtC,IAAI,CAAC,CAAC,EAAY,EACpB,CAOA,cAAc,CAAE,CAAE,CAChB,IAAM,EAAW,GAAW,sBAAsB,CAAC,GAC7C,EAAQ,IAAI,CAAC,CAAC,EAAM,CAAC,GAAG,CAAC,GAAU,KAAK,EAAE,IAAI,CAAC,GAErD,OADA,IAAI,CAAC,CAAC,EAAY,GACX,EAAM,QAAQ,AACvB,CAQA,iBAAiB,CAAS,CAAE,CAC1B,IAAM,EAAQ,IAAI,CAAC,QAAQ,CAAC,GAC5B,MAAO,CAAC,GAAS,EAAM,OAAO,GAAK,KAAO,EAAM,MAAM,EACxD,CAOA,QAAQ,CAAQ,CAAE,OAChB,EAAI,IAAI,CAAC,cAAc,CAAC,EAAU,CAAA,IAGzB,IAAI,CAAC,eAAe,CAAC,EAEhC,CAOA,gBAAgB,CAAQ,CAAE,CAAK,CAAE,CAC/B,IAAM,EAAa,IAAI,CAAC,QAAQ,CAAC,EAAS,cAAc,SACxD,AAAK,EAMA,EAAW,IAAI,CAAC,IAMrB,IAAI,CAAC,CAAC,EAAY,GACX,CAAA,IANA,GACH,AAAA,EAAI,KAAK,CAAC,iDAEL,CAAA,IATF,GACH,AAAA,EAAI,KAAK,CAAC,0DAEL,CAAA,EAUX,CAOA,eAAe,CAAQ,CAAE,CAAK,CAAE,CAC9B,IAAM,EAAa,IAAI,CAAC,QAAQ,CAAC,EAAS,cAAc,SACxD,AAAK,EAMA,EAAW,IAAI,CAAC,IAMrB,IAAI,CAAC,CAAC,EAAY,GACX,CAAA,IANA,GACH,AAAA,EAAI,KAAK,CAAC,iDAEL,CAAA,IATF,GACH,AAAA,EAAI,KAAK,CAAC,yDAEL,CAAA,EAUX,CAYA,MAAM,CAAQ,CAAE,EAAU,CAAC,CAAC,CAAE,CAC5B,IAAM,EAAa,IAAI,CAAC,QAAQ,CAAC,EAAS,cAAc,EAClD,EAAa,IAAI,CAAC,QAAQ,CAAC,EAAS,cAAc,EACxD,GAAI,CAAC,GAAc,CAAC,EAAQ,MAAM,CAIhC,OAHA,AAAA,EAAI,KAAK,CACP,uEAEK,CAAA,EAET,GAAI,CAAC,EAEH,OADA,AAAA,EAAI,KAAK,CAAC,wDACH,CAAA,EAET,IAAM,EAAgB,EAAS,YAAY,CAC3C,GAAI,EAAgB,EAAW,QAAQ,CAErC,OADA,AAAA,EAAI,KAAK,CAAC,0CACH,CAAA,EAIT,GAAI,CADkB,GAAY,KAAK,IACjB,CAAC,EAAQ,MAAM,CAEnC,OADA,AAAA,EAAI,KAAK,CAAC,yCACH,CAAA,EAGT,KAAO,EAAW,SAAS,CAAG,GAAe,CAC3C,IAAM,EAAY,EAAW,SAAS,GACtC,GAAY,IAAI,EAClB,CAEA,IAAM,EAAS,EAAW,GAAG,CAAC,GAE9B,OADA,IAAI,CAAC,CAAC,EAAY,GACX,CACT,CAYA,MAAM,CAAQ,CAAE,EAAU,CAAC,CAAC,CAAE,CAC5B,IAAM,EAAa,IAAI,CAAC,QAAQ,CAAC,EAAS,cAAc,EAClD,EAAa,IAAI,CAAC,QAAQ,CAAC,EAAS,cAAc,EACxD,GAAI,CAAC,EAIH,OAHA,AAAA,EAAI,IAAI,CACN,6EAEK,CAAA,EAET,GAAI,CAAC,GAAc,CAAC,EAAQ,MAAM,CAIhC,OAHA,AAAA,EAAI,KAAK,CACP,+FAEK,CAAA,EAGT,GAAI,AADkB,EAAS,YAAY,CACvB,EAAW,SAAS,CAEtC,OADA,AAAA,EAAI,KAAK,CAAC,0CACH,CAAA,EAGT,GAAI,CADkB,GAAY,KAAK,IACjB,CAAC,EAAQ,MAAM,CAEnC,OADA,AAAA,EAAI,KAAK,CAAC,0DACH,CAAA,EAET,IAAM,EAAS,EAAW,GAAG,CAAC,GAE9B,OADA,IAAI,CAAC,CAAC,EAAY,GACX,CACT,CACF,CY76BO,MAAM,GAAiB,CAC5B,KAAM,CAAC,IAAK,IAAK,IAAI,CACrB,QAAS,CAAC,IAAI,CACd,SAAU,CAAC,IAAI,CACf,OAAQ,CAAC,IAAK,IAAK,IAAK,IAAI,CAC5B,KAAM,CAAC,IAAI,AACb,EAKM,GAAa,CACjB,SAAU,MACV,kBAAmB,OACnB,IAAK,KACL,UAAW,MACX,mBAAoB,OACpB,MAAO,KACP,aAAc,MACd,sBAAuB,OACvB,OAAQ,KACR,YAAa,MACb,qBAAsB,OACtB,KAAM,KACN,QAAS,QACT,UAAW,QACX,WAAY,QACZ,SAAU,QACV,eAAgB,MAChB,kBAAmB,MACnB,oBAAqB,KACvB,EAKM,GAAkB,CACtB,WAAY,OACZ,eAAgB,MAClB,CAqCO,OAAM,GAEX,MAAO,AAEP,CAAA,gBAAiB,AAEjB,CAAA,eAAgB,AAEhB,cAAc,CACZ,IAAI,CAAC,gBAAgB,CAAG,IAAI,EAAM,EAAG,GACrC,IAAI,CAAC,eAAe,CAAG,IAAI,EAAM,EAAG,EACtC,CAQA,OAAO,oBAAoB,CAAM,CAAE,CAAS,CAAE,CAC5C,IAAM,EAAW,IAAI,GACjB,EAAS,EAAS,eAAe,CAAC,GAGtC,OAFA,EAAS,EAAS,aAAa,CAAC,GAChC,EAAS,UAAU,CAAC,EAAQ,GACrB,CACT,CAKA,gBAAgB,CAAM,CAAE,CACtB,IAAM,EAAS,EAAE,CACb,EAAW,EAUf,OATA,EAAO,OAAO,CAAC,AAAC,IACd,EAAW,KAAK,GAAG,CAAC,EAAU,EAAI,MAAM,CAC1C,GACA,EAAO,OAAO,CAAC,AAAC,IACV,EAAI,MAAM,CAAG,GACf,CAAA,GAAY,IAAI,MAAM,CAAC,EAAW,OADpC,EAGA,EAAO,IAAI,CAAC,EAAI,KAAK,CAAC,IACxB,GACO,CACT,CAOA,cAAc,CAAM,CAAE,CACpB,IAAM,EAAoB,EAAE,CAqB5B,OApBA,EAAO,OAAO,CAAC,CAAC,EAAU,KACxB,IAAM,EAAe,EAAE,CACvB,EAAkB,IAAI,CAAC,GACvB,EAAS,OAAO,CAAC,CAAC,EAAU,SA0ClB,EA0DO,EAoBF,EAiCI,MACnB,EAzJE,IAAM,EAAY,AAAA,GAAa,EAAQ,EAAU,IAyCzC,EAxCG,EAyCV,GAAe,IAAI,CAAC,QAAQ,CAAC,IAxC5B,EA7IU,IA8ID,GAAS,IAgGL,EA/FY,EAgG7B,GAAa,AAhG0B,EAgGhB,KAAK,IAC1B,GAAa,AAjGwB,EAiGd,EAAE,EAC3B,GAAS,GAAgB,UAAU,CAEnC,GAAS,GAAgB,cAAc,EAexB,EAnHX,EAuGD,EAcL,GAAW,AApHqB,EAoHX,IAAI,GACzB,GAAW,AArHqB,EAqHX,KAAK,GAC1B,GAAW,AAtHqB,EAsHX,KAAK,GAC1B,GAAW,AAvHqB,EAuHX,KAAK,GAtHlB,IAAI,CAAC,gBAAgB,CAAG,IAAI,EAAM,EAAU,GAqIpD,CAAA,GAAO,AApI+B,EAoIrB,KAAK,GACtB,GAAO,AArI+B,EAqIrB,KAAK,GACtB,GAAO,AAtI+B,EAsIrB,IAAI,GACrB,GAAO,AAvI+B,EAuIrB,KAAK,CAAA,GAtId,CAAA,IAAI,CAAC,eAAe,CAAG,IAAI,EAAM,EAAU,EADtC,EAGE,GAAa,KA+I1B,EADmB,EA7IY,EAiJjC,GAAa,AAjJ8B,EAiJpB,KAAK,GAC5B,GAAa,AAlJ8B,EAkJpB,KAAK,GAC5B,GAAa,AAnJ8B,EAmJpB,KAAK,GAC5B,GAAa,AApJ8B,EAoJpB,IAAI,EAE3B,GAAU,GAAW,cAAc,CAC1B,GAAS,AAvJyB,EAuJf,IAAI,GAAK,GAAS,AAvJH,EAuJa,KAAK,EAC7D,GAAU,GAAW,iBAAiB,CAC7B,GAAS,AAzJyB,EAyJf,KAAK,GAAK,GAAS,AAzJJ,EAyJc,KAAK,EAC9D,GAAU,GAAW,mBAAmB,CAKxC,GAAa,AA/J8B,EA+JpB,IAAI,GAC3B,GAAa,AAhK8B,EAgKpB,KAAK,GAC5B,GAAa,AAjK8B,EAiKpB,KAAK,EAE5B,GAAU,GAAW,OAAO,CAE5B,GAAa,AArK8B,EAqKpB,KAAK,GAC5B,GAAa,AAtK8B,EAsKpB,KAAK,GAC5B,GAAa,AAvK8B,EAuKpB,IAAI,EAE3B,GAAU,GAAW,SAAS,CAE9B,GAAa,AA3K8B,EA2KpB,IAAI,GAC3B,GAAa,AA5K8B,EA4KpB,KAAK,GAC5B,GAAa,AA7K8B,EA6KpB,KAAK,EAE5B,GAAU,GAAW,UAAU,CAE/B,GAAa,AAjL8B,EAiLpB,KAAK,GAC5B,GAAa,AAlL8B,EAkLpB,KAAK,GAC5B,GAAa,AAnL8B,EAmLpB,KAAK,EAE5B,GAAU,GAAW,QAAQ,CAGtB,GAAa,AAxLuB,EAwLb,KAAK,GAAK,GAAa,AAxLV,EAwLoB,KAAK,EACpE,GAAU,GAAS,AAzLwB,EAyLd,EAAE,EAC3B,GAAW,QAAQ,CACnB,GAAW,iBAAiB,CACvB,GAAa,AA5LqB,EA4LX,IAAI,GAAK,GAAa,AA5LX,EA4LqB,KAAK,EACrE,GAAU,GAAS,AA7LwB,EA6Ld,EAAE,EAC3B,GAAW,SAAS,CACpB,GAAW,kBAAkB,CACxB,GAAa,AAhMqB,EAgMX,IAAI,GAAK,GAAa,AAhMX,EAgMqB,KAAK,EACrE,GAAU,GAAS,AAjMwB,EAiMd,EAAE,EAC3B,GAAW,YAAY,CACvB,GAAW,qBAAqB,CAC3B,GAAa,AApMqB,EAoMX,KAAK,GAAK,GAAa,AApMZ,EAoMsB,KAAK,EACtE,GAAU,GAAS,AArMwB,EAqMd,EAAE,EAC3B,GAAW,WAAW,CACtB,GAAW,oBAAoB,CAG5B,GAAa,AA1MuB,EA0Mb,KAAK,GAAK,GAAa,AA1MV,EA0MoB,KAAK,EAEpE,GAAU,GAAS,AA5MwB,EA4Md,KAAK,EAAI,GAAW,IAAI,CAAG,GAAW,KAAK,CAC/D,GAAa,AA7MqB,EA6MX,KAAK,GAAK,GAAa,AA7MZ,EA6MsB,IAAI,GAErE,CAAA,GAAU,GAAS,AA/MwB,EA+Md,KAAK,EAAI,GAAW,GAAG,CAAG,GAAW,MAAM,AAAN,EA/M5D,EAkNR,AAAI,GAAa,AAlN4B,EAkNlB,KAAK,EACtB,EAAU,GAAgB,UAAU,CAEvC,GAnND,EAAa,IAAI,CAAC,EACpB,EACF,GACO,CACT,CAOA,WAAW,CAAM,CAAE,CAAS,CAAE,CAC5B,IAAM,EAAa,EAAE,CACrB,EAAO,OAAO,CAAC,AAAC,IACd,IAAM,EAAU,EAAE,CAClB,EAAW,IAAI,CAAC,GAChB,EAAS,OAAO,CAAC,AAAC,IAChB,EAAQ,IAAI,CAAC,AA4MrB,SAAS,EAAc,CAAM,CAAE,CAAS,EACtC,GAAI,AAtXc,MAsXd,EACF,OAAO,KAET,IAAM,EAAQ,EAAO,KAAK,CAAC,yBACvB,EAAO,EAAU,GAAG,CAAC,GAQzB,GAPI,CAAC,GAAQ,CAAK,CAAC,EAAE,EAAI,CAAK,CAAC,EAAE,EAC/B,CAAA,EAAO,EAAU,GAAG,CAAC,CAAC,EAAE,CAAK,CAAC,EAAE,CAAC,EAAE,CAAK,CAAC,EAAE,CAAC,CAAC,CAAA,EAE3C,CAAC,GAAQ,CAAK,CAAC,EAAE,EACnB,CAAA,EAAO,EAAU,GAAG,CAAC,CAAK,CAAC,EAAE,CAAA,EAG3B,CAAC,EAAM,CACT,IAAM,EAAiB,AAmB3B,SAA0B,CAAiB,EACzC,IAAK,IAAM,KAAQ,GACjB,GAAI,EAAc,CAAC,EAAK,CAAC,QAAQ,CAAC,GAChC,OAAO,EAAc,CAAC,EAAK,CAAC,EAAE,CAGlC,OAAO,IACT,EA1B4C,CAAK,CAAC,EAAE,EAChD,GAAI,GAAkB,IAAmB,CAAK,CAAC,EAAE,CAC/C,KAgC0C,EAAW,MACrD,EAjCA,OAAO,GAgCmC,EA/BJ,CAAK,CAAC,EAAE,CA+BO,EA/BL,CAAK,CAAC,EAAE,CAgCxD,EAhCsB,EAiCtB,GACF,CAAA,GAAU,CADZ,EAGI,GACF,CAAA,GAAU,CADZ,EAGO,GAtCD,EAHJ,CAME,AAAA,EAAI,KAAK,CAAC,CAAC,0BAA0B,EAAE,EAAO,CAAC,CAEnD,CACA,OAAO,CACT,EArOmC,EAAa,GAC1C,EACF,GACA,IAAI,CAAC,MAAM,CAAG,CAChB,CACF,CAcA,SAAS,GAAW,CAAM,EACxB,OAAO,GAAe,OAAO,CAAC,QAAQ,CAAC,EACzC,CAMA,SAAS,GAAO,CAAM,EACpB,OAAO,GAAe,QAAQ,CAAC,QAAQ,CAAC,EAC1C,CAsBA,SAAS,GAAS,CAAM,EACtB,OAAO,GAAe,MAAM,CAAC,QAAQ,CAAC,EACxC,CAMA,SAAS,GAAa,CAAM,MAxBZ,EAyBd,OAhBO,GAAe,IAAI,CAAC,QAAQ,CAgBrB,IAxBP,GADO,EAyBkB,IAxBH,GAAO,EAyBtC,CEjOO,MAAM,GAEX,CAAC,EAAO,AAAC,AAET,EAAC,EAAc,AAAC,AAEhB,EAAC,EAAa,AAAC,AAEf,EAAC,EAAW,AAAC,AAKb,CAAA,WAAW,CAAO,CAAE,CAClB,IAAI,CAAC,CAAC,EAAO,CAAG,CAClB,CAKA,kBAAkB,CAAO,CAAE,CACzB,IAAI,CAAC,CAAC,EAAc,CAAG,CACzB,CAKA,iBAAiB,CAAO,CAAE,CACxB,IAAI,CAAC,CAAC,EAAa,CAAG,CACxB,CAKA,eAAe,CAAO,CAAE,CACtB,IAAI,CAAC,CAAC,EAAW,CAAG,CACtB,CAKA,YAAY,CAAK,CAAE,CACjB,IAAI,CAAC,CAAC,EAAO,GAAG,IAAI,CAAE,EACxB,CAMA,mBAAmB,CAAK,CAAE,CACxB,IAAI,CAAC,CAAC,EAAc,GAAG,IAAI,CAAE,EAC/B,CAMA,kBAAkB,CAAK,CAAE,CACvB,IAAI,CAAC,CAAC,EAAa,GAAG,IAAI,CAAE,EAC9B,CAMA,gBAAgB,CAAK,CAAE,CACrB,IAAI,CAAC,CAAC,EAAW,GAAG,IAAI,CAAE,EAC5B,CACF,CCtEO,MAAM,GAEX,CAAC,EAAM,AAAC,AAER,EAAC,EAAO,AAAC,AAMT,aAAY,CAAO,CAAE,CACnB,IAAI,CAAC,CAAC,EAAO,CAAG,EAChB,IAAI,CAAC,CAAC,EAAM,CAAG,IAAI,GACrB,CAQA,iBAAiB,CAAK,CAAE,CAAC,CAAE,CAAC,CAAE,CAC5B,IAAI,CAAC,CAAC,EAAM,CAAC,GAAG,CAAC,IAAI,CAAC,WAAW,CAAC,EAAG,GAAI,EAC3C,CAQA,iBAAiB,CAAC,CAAE,CAAC,CAAE,CACrB,OAAO,IAAI,CAAC,CAAC,EAAM,CAAC,GAAG,CAAC,IAAI,CAAC,WAAW,CAAC,EAAG,GAC9C,CAOA,iBAAiB,CAAC,CAAE,CAAC,CAAE,CACrB,OAAO,IAAI,CAAC,CAAC,EAAM,CAAC,GAAG,CAAC,IAAI,CAAC,WAAW,CAAC,EAAG,GAC9C,CAOA,YAAY,CAAC,CAAE,CAAC,CAAE,CAChB,MAAO,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,AACpB,CAOA,eAAe,CAAG,CAAE,CAClB,IAAM,EAAY,EAAI,KAAK,CAAC,KAC5B,OAAO,IAAI,EAAM,SAAS,CAAS,CAAC,EAAE,EAAG,SAAS,CAAS,CAAC,EAAE,EAChE,CAMA,QAAQ,CAAQ,CAAE,CAChB,IAAI,CAAC,CAAC,EAAM,CAAC,OAAO,CAAC,CAAC,EAAO,EAAK,IAAQ,EAAS,EAAO,EAAK,GACjE,CAOA,kBAAkB,CAAK,CAAE,CACvB,OAAO,IAAI,CAAC,CAAC,EAAM,CAAC,GAAG,CAAC,IAAI,CAAC,WAAW,CAAC,EAAM,CAAC,CAAE,EAAM,CAAC,EAC3D,CAQA,yBAAyB,CAAW,CAAE,CACpC,IAAM,EAAS,IAAI,CAAC,gBAAgB,CAAC,EAAY,CAAC,CAAE,EAAY,CAAC,SACjE,AAAI,GAAU,EAAO,MAAM,CAAG,EACrB,EAAO,KAAK,CAAC,GAEb,IAEX,CAQA,0BAA0B,CAAW,CAAE,CACrC,IAAM,EAAY,IAAI,CAAC,wBAAwB,CAAC,UAChD,AAAI,EACK,EAAU,GAAG,CAAC,AAAC,GACpB,IAAI,CAAC,CAAC,EAAO,CAAC,qBAAqB,CAAC,IAG/B,CAEX,CACF,CAIO,MAAM,GAEX,KAAM,AAEN,EAAC,EAAM,AAAC,AAER,EAAC,EAAO,AAAC,AAET,EAAC,EAAU,AAAC,AAMZ,aAAY,CAAO,CAAE,CAAK,CAAE,CAC1B,IAAI,CAAC,CAAC,EAAO,CAAG,EAChB,IAAI,CAAC,KAAK,CAAG,CACf,CAUA,mBAAmB,CAAiB,CAAE,CAAe,CAAE,CAAO,CAAE,CAC9D,IAAI,EAAc,IAAI,CAAC,CAAC,EAAiB,CACvC,EACA,GAEF,GAAI,EAAY,UAAU,CAAC,GACzB,MAAO,EAAE,CAEN,IAAI,CAAC,CAAC,EAAO,CAAC,6BAA6B,CAAC,EAAa,IAAI,CAAC,KAAK,GACtE,CAAA,EAAc,IAAI,CAAC,CAAC,EAAoB,CAAC,EAAa,EADxD,EAGA,IAAI,EAAO,EAAE,CACT,EAAK,KAAK,IAAI,CAAC,EAAY,CAAC,CAAG,EAAkB,CAAC,EAClD,EAAK,KAAK,IAAI,CAAC,EAAY,CAAC,CAAG,EAAkB,CAAC,EAClD,EAAW,AAAA,EAAM,IAAI,CAAC,GACtB,EAAU,AAAgB,GAAhB,KAAK,MAAM,GACrB,EAAmB,EACvB,KAAO,EAAU,GAAG,CAClB,IAAI,EAAY,AAAA,EAAM,IAAI,CAAC,GACvB,EAAQ,CAAA,EAYZ,GAXI,GAAW,AAAO,IAAP,GAAY,EAAS,CAAC,EAAI,EAAY,CAAC,EACpD,EAAU,CAAC,EAAI,EACf,EAAQ,CAAA,GACE,GAAW,AAAO,IAAP,GAAY,EAAS,CAAC,EAAI,EAAY,CAAC,GAC5D,EAAU,CAAC,EAAI,EACf,EAAQ,CAAA,GAEV,EACE,GACA,IAAI,CAAC,CAAC,EAAO,CAAC,6BAA6B,CAAC,EAAW,IAAI,CAAC,KAAK,EAGjE,EAAmB,EACnB,EAAW,EACX,QACK,CACL,GAAI,EAAE,GAAoB,EACxB,MAEG,EAAS,UAAU,CAAC,IACvB,EAAK,IAAI,CAAC,IAAI,CAAC,CAAC,EAAO,CAAC,qBAAqB,CAAC,IAEhD,EAAoB,EACpB,EAAU,CAAC,CACb,CACF,CAKA,OAJK,EAAS,UAAU,CAAC,IACvB,EAAK,IAAI,CAAC,IAAI,CAAC,CAAC,EAAO,CAAC,qBAAqB,CAAC,IAGzC,CACT,CAQA,iBAAiB,CAAiB,CAAE,CAAO,CAAE,CAI3C,OAHA,IAAI,CAAC,CAAC,EAAM,CAAG,IAAI,GAAO,IAAI,CAAC,CAAC,EAAO,EACvC,IAAI,CAAC,CAAC,EAAU,CAAG,EACnB,IAAI,CAAC,CAAC,EAAU,CAAC,EAAkB,CAAC,CAAE,EAAkB,CAAC,CAAE,EAAS,MAC7D,IAAI,CAAC,CAAC,EAAM,AACrB,CAUA,CAAC,EAAU,CAAC,CAAC,CAAE,CAAC,CAAE,CAAS,CAAE,CAAW,EACtC,GAAK,EAKE,CACL,GAAI,IAAM,IAAI,CAAC,CAAC,EAAU,CAAC,CAAC,EAAI,IAAM,IAAI,CAAC,CAAC,EAAU,CAAC,CAAC,EAE7C,CAAC,IAAI,CAAC,CAAC,EAAc,CAAC,EAAG,GADlC,OAIF,IAAM,EAAgB,IAAI,CAAC,CAAC,EAAM,CAAC,gBAAgB,CAAC,EAAG,GACvD,GAAI,AAAC,IAAiB,CAAA,EAAY,MAAM,CAAG,EAAc,MAAM,CAAG,CAAA,EAQhE,OAPA,EAAY,IAAI,CAAC,IAAI,EAAM,EAAG,IAC1B,IAAI,CAAC,CAAC,EAAiB,CAAC,EAAG,IAE7B,IAAI,CAAC,CAAC,EAAM,CAAC,gBAAgB,CAAC,EAAa,EAAG,GAEhD,GAIJ,MAlBE,EAAc,CAAC,IAAI,EAAM,EAAG,GAAG,CAoB7B,EAAY,IAEd,IAAI,CAAC,CAAC,EAAU,CAAC,EAAG,EAAI,EAAG,EAAW,IAAI,EAAY,EACtD,IAAI,CAAC,CAAC,EAAU,CAAC,EAAI,EAAG,EAAG,EAAW,IAAI,EAAY,EACtD,IAAI,CAAC,CAAC,EAAU,CAAC,EAAG,EAAI,EAAG,EAAW,IAAI,EAAY,EACtD,IAAI,CAAC,CAAC,EAAU,CAAC,EAAI,EAAG,EAAG,EAAW,IAAI,EAAY,EAE1D,CAQA,CAAC,EAAc,CAAC,CAAC,CAAE,CAAC,EAClB,OAAO,IAAI,CAAC,CAAC,EAAO,CAAC,0BAA0B,CAC7C,IAAI,EAAM,EAAG,GACb,IAAI,CAAC,KAAK,CAEd,CAQA,CAAC,EAAiB,CAAC,CAAC,CAAE,CAAC,EACrB,OAAO,IAAI,CAAC,CAAC,EAAO,CAAC,6BAA6B,CAChD,IAAI,EAAM,EAAG,GACb,IAAI,CAAC,KAAK,CAEd,CAEA,CAAC,EAAiB,CAAC,CAAO,CAAE,CAAM,EAChC,IAAM,EAAS,EAAO,CAAC,CAAG,EAAQ,CAAC,CAC7B,EAAS,EAAO,CAAC,CAAG,EAAQ,CAAC,CAC/B,EAAO,EAAO,CAAC,CACf,EAAO,EAAO,CAAC,CAMnB,OALI,KAAK,GAAG,CAAC,GAAU,KAAK,GAAG,CAAC,GAC9B,GAAQ,KAAK,IAAI,CAAC,GAElB,GAAQ,KAAK,IAAI,CAAC,GAEb,IAAI,EAAM,EAAM,EACzB,CAMA,CAAC,EAAoB,CAAC,CAAS,CAAE,CAAW,SAC1C,AAAI,EAAU,CAAC,GAAK,EAAY,CAAC,EAAI,EAAU,CAAC,CAAG,EAAY,CAAC,CACvD,IAAI,EAAM,EAAU,CAAC,CAAG,EAAG,EAAU,CAAC,CAAG,GACvC,EAAU,CAAC,CAAG,EAAY,CAAC,EAAI,EAAU,CAAC,GAAK,EAAY,CAAC,CAC9D,IAAI,EAAM,EAAU,CAAC,CAAG,EAAG,EAAU,CAAC,CAAG,GAE9C,EAAU,CAAC,GAAK,EAAY,CAAC,EAAI,EAAU,CAAC,CAAG,EAAY,CAAC,CACvD,IAAI,EAAM,EAAU,CAAC,CAAG,EAAG,EAAU,CAAC,CAAG,GAE9C,EAAU,CAAC,CAAG,EAAY,CAAC,EAAI,EAAU,CAAC,GAAK,EAAY,CAAC,CACvD,IAAI,EAAM,EAAU,CAAC,CAAG,EAAG,EAAU,CAAC,CAAG,GAE3C,CACT,CACF,CAKO,MAAM,GAEX,CAAC,EAAK,AAAC,AAEP,EAAC,EAAa,AAAC,AAEf,EAAC,EAAO,AAAC,AAET,EAAC,EAAa,AAAC,AAEf,EAAC,EAAc,AAAC,AAEhB,EAAC,EAAM,AAAC,AAER,EAAC,EAAU,AAAC,AAMZ,aAAY,CAAO,CAAE,CAAK,CAAE,CAC1B,IAAI,CAAC,CAAC,EAAO,CAAG,EAChB,IAAI,CAAC,CAAC,EAAK,CAAG,CAChB,CAMA,kBAAmB,QACjB,IAAI,CAAC,CAAC,EAAa,CAAG,IAAI,CAAC,CAAC,EAAO,CAAC,gBAAgB,CAAC,IAAI,CAAC,CAAC,EAAK,CAAC,QAAQ,EAEzE,IAAI,CAAC,CAAC,EAAM,CAAG,IAAI,CAAC,CAAC,EAAO,CAAC,mBAAmB,GAE9C,IAAI,CAAC,CAAC,EAAc,EACpB,IAAI,CAAC,CAAC,EAAc,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,EAAa,GACnD,IAAI,CAAC,CAAC,EAAM,EACZ,IAAI,CAAC,CAAC,EAAM,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,EAAU,IAKtC,IAAI,CAAC,CAAC,EAAa,CAAG,IAAI,IAC1B,IAAI,CAAC,CAAC,EAAa,CAAC,GAAG,CACrB,IAAI,CAAC,CAAC,EAAa,CAAC,QAAQ,GAC5B,IAAI,CAAC,CAAC,EAAa,EAErB,IAAI,CAAC,CAAC,EAAU,GAAG,OAAO,CAAC,AAAC,IAC1B,IAAI,CAAC,CAAC,EAAa,CAAC,EACtB,GACA,IAAI,CAAC,CAAC,EAAc,CAAG,IAAI,CAAC,CAAC,EAAa,CAC1C,IAAI,CAAC,CAAC,EAAU,CAAG,IAAI,CAAC,CAAC,EAAM,EAZtB,IAAI,CAAC,CAAC,EAAa,AAc9B,CAOA,kBAAkB,CAAS,CAAE,CAC3B,MAAO,EAAA,IAAI,CAAC,CAAC,EAAa,EACtB,IAAI,CAAC,CAAC,EAAa,CAAC,GAAG,CAAC,EAAU,QAAQ,GAEhD,CAMA,CAAC,EAAU,GACT,IAAM,EAAU,EAAE,CAClB,IACE,IAAI,EAAM,IAAI,CAAC,CAAC,EAAM,CAAC,CAAC,CACxB,GAAO,IAAI,CAAC,CAAC,EAAM,CAAC,CAAC,CAAG,IAAI,CAAC,CAAC,EAAM,CAAC,KAAK,CAC1C,IAEA,EAAQ,IAAI,CAAC,IAAI,EAAM,EAAK,IAAI,CAAC,CAAC,EAAM,CAAC,CAAC,GAC1C,EAAQ,IAAI,CAAC,IAAI,EAAM,EAAK,IAAI,CAAC,CAAC,EAAM,CAAC,CAAC,CAAG,IAAI,CAAC,CAAC,EAAM,CAAC,MAAM,GAGlE,IACE,IAAI,EAAM,IAAI,CAAC,CAAC,EAAM,CAAC,CAAC,CAAG,EAC3B,GAAO,IAAI,CAAC,CAAC,EAAM,CAAC,CAAC,CAAG,IAAI,CAAC,CAAC,EAAM,CAAC,MAAM,CAAG,EAC9C,IAEA,EAAQ,IAAI,CAAC,IAAI,EAAM,IAAI,CAAC,CAAC,EAAM,CAAC,CAAC,CAAE,IACvC,EAAQ,IAAI,CAAC,IAAI,EAAM,IAAI,CAAC,CAAC,EAAM,CAAC,CAAC,CAAG,IAAI,CAAC,CAAC,EAAM,CAAC,KAAK,CAAE,IAE9D,OAAO,CACT,CAOA,CAAC,EAAa,CAAC,CAAQ,MACjB,EACA,EACA,EAEJ,IAAM,EAAmB,AvCxVtB,SAAkC,CAAK,EAC5C,IAAM,EAAW,KAAK,GAAG,CAAC,UAC1B,AAAI,GAAY,EAAQ,QAAQ,CACvB,EAAkB,CAAC,CAExB,GAAY,EAAQ,QAAQ,CACvB,KAAK,IAAI,CAAC,GAAS,EAAI,EAAkB,EAAE,CAAG,EAAkB,EAAE,CAEvE,GAAY,EAAQ,SAAS,CACxB,KAAK,IAAI,CAAC,GAAS,EAAI,EAAkB,CAAC,CAAG,EAAkB,CAAC,CAErE,GAAY,EAAQ,SAAS,CACxB,KAAK,IAAI,CAAC,GAAS,EAAI,EAAkB,EAAE,CAAG,EAAkB,EAAE,CAEpE,EAAkB,CAAC,AAC5B,EuCwUkB,IAAI,CAAC,CAAC,EAAa,CAAC,gBAAgB,CAAC,GAGjD,CAAA,KAAK,GAAG,CAAC,EAAS,CAAC,CAAG,IAAI,CAAC,CAAC,EAAa,CAAC,CAAC,GAC3C,KAAK,GAAG,CAAC,EAAS,CAAC,CAAG,IAAI,CAAC,CAAC,EAAa,CAAC,CAAC,GAE3C,EAAK,KAAK,IAAI,CAAC,EAAS,CAAC,CAAG,IAAI,CAAC,CAAC,EAAa,CAAC,CAAC,EAEjD,EAAK,AADL,CAAA,EAAQ,KAAK,GAAG,CAAC,EAAS,CAAC,CAAG,IAAI,CAAC,CAAC,EAAa,CAAC,CAAC,CAAA,EACtC,EAAI,EAAI,AAAC,CAAA,EAAS,CAAC,CAAG,IAAI,CAAC,CAAC,EAAa,CAAC,CAAA,AAAA,EAAK,IAE5D,EAAK,KAAK,IAAI,CAAC,EAAS,CAAC,CAAG,IAAI,CAAC,CAAC,EAAa,CAAC,CAAC,EAEjD,EAAK,AADL,CAAA,EAAQ,KAAK,GAAG,CAAC,EAAS,CAAC,CAAG,IAAI,CAAC,CAAC,EAAa,CAAC,CAAC,CAAA,EACtC,EAAI,EAAI,AAAC,CAAA,EAAS,CAAC,CAAG,IAAI,CAAC,CAAC,EAAa,CAAC,CAAA,AAAA,EAAK,GAE9D,IAAI,EAAI,IAAI,CAAC,CAAC,EAAa,CAAC,CAAC,CACzB,EAAI,IAAI,CAAC,CAAC,EAAa,CAAC,CAAC,CAEzB,EAAa,CAAA,EACjB,KAAO,GAAS,GAAG,CACjB,IAAM,EAAY,IAAI,EAAM,KAAK,KAAK,CAAC,GAAI,KAAK,KAAK,CAAC,IACtD,GAAI,GAAc,IAAI,CAAC,CAAC,EAAO,CAAC,YAAY,CAAC,EAAW,IAAI,CAAC,CAAC,EAAK,EACjE,IAAI,CAAC,CAAC,EAAgB,CAAC,EAAW,QAElC,MAEF,EAAa,CAAA,EACb,GAAK,EACL,GAAK,EACL,GACF,CACF,CAQA,CAAC,EAAgB,CAAC,CAAK,CAAE,CAAU,EAEjC,OADA,IAAI,CAAC,CAAC,EAAa,CAAC,GAAG,CAAC,EAAM,QAAQ,GAAI,GAClC,GACN,KAAK,EAAwB,CAAC,CAC5B,IAAI,CAAC,CAAC,EAA0B,CAAC,IAAI,EAAM,EAAM,CAAC,CAAG,EAAG,EAAM,CAAC,CAAG,IAClE,IAAI,CAAC,CAAC,EAA0B,CAAC,IAAI,EAAM,EAAM,CAAC,CAAE,EAAM,CAAC,CAAG,IAC9D,IAAI,CAAC,CAAC,EAA0B,CAAC,IAAI,EAAM,EAAM,CAAC,CAAG,EAAG,EAAM,CAAC,CAAG,IAClE,KACF,MAAK,EAAwB,EAAE,CAC7B,IAAI,CAAC,CAAC,EAA0B,CAAC,IAAI,EAAM,EAAM,CAAC,CAAE,EAAM,CAAC,CAAG,IAC9D,IAAI,CAAC,CAAC,EAA0B,CAAC,IAAI,EAAM,EAAM,CAAC,CAAG,EAAG,EAAM,CAAC,CAAG,IAClE,IAAI,CAAC,CAAC,EAA0B,CAAC,IAAI,EAAM,EAAM,CAAC,CAAG,EAAG,EAAM,CAAC,GAC/D,KACF,MAAK,EAAwB,CAAC,CAC5B,IAAI,CAAC,CAAC,EAA0B,CAAC,IAAI,EAAM,EAAM,CAAC,CAAG,EAAG,EAAM,CAAC,CAAG,IAClE,IAAI,CAAC,CAAC,EAA0B,CAAC,IAAI,EAAM,EAAM,CAAC,CAAG,EAAG,EAAM,CAAC,GAC/D,IAAI,CAAC,CAAC,EAA0B,CAAC,IAAI,EAAM,EAAM,CAAC,CAAG,EAAG,EAAM,CAAC,CAAG,IAClE,KACF,MAAK,EAAwB,EAAE,CAC7B,IAAI,CAAC,CAAC,EAA0B,CAAC,IAAI,EAAM,EAAM,CAAC,CAAG,EAAG,EAAM,CAAC,GAC/D,IAAI,CAAC,CAAC,EAA0B,CAAC,IAAI,EAAM,EAAM,CAAC,CAAG,EAAG,EAAM,CAAC,CAAG,IAClE,IAAI,CAAC,CAAC,EAA0B,CAAC,IAAI,EAAM,EAAM,CAAC,CAAE,EAAM,CAAC,CAAG,IAC9D,KACF,MAAK,EAAwB,CAAC,CAC5B,IAAI,CAAC,CAAC,EAA0B,CAAC,IAAI,EAAM,EAAM,CAAC,CAAG,EAAG,EAAM,CAAC,CAAG,IAClE,IAAI,CAAC,CAAC,EAA0B,CAAC,IAAI,EAAM,EAAM,CAAC,CAAE,EAAM,CAAC,CAAG,IAC9D,IAAI,CAAC,CAAC,EAA0B,CAAC,IAAI,EAAM,EAAM,CAAC,CAAG,EAAG,EAAM,CAAC,CAAG,IAClE,KACF,MAAK,EAAwB,EAAE,CAC7B,IAAI,CAAC,CAAC,EAA0B,CAAC,IAAI,EAAM,EAAM,CAAC,CAAG,EAAG,EAAM,CAAC,GAC/D,IAAI,CAAC,CAAC,EAA0B,CAAC,IAAI,EAAM,EAAM,CAAC,CAAG,EAAG,EAAM,CAAC,CAAG,IAClE,IAAI,CAAC,CAAC,EAA0B,CAAC,IAAI,EAAM,EAAM,CAAC,CAAE,EAAM,CAAC,CAAG,IAC9D,KACF,MAAK,EAAwB,CAAC,CAC5B,IAAI,CAAC,CAAC,EAA0B,CAAC,IAAI,EAAM,EAAM,CAAC,CAAG,EAAG,EAAM,CAAC,CAAG,IAClE,IAAI,CAAC,CAAC,EAA0B,CAAC,IAAI,EAAM,EAAM,CAAC,CAAG,EAAG,EAAM,CAAC,GAC/D,IAAI,CAAC,CAAC,EAA0B,CAAC,IAAI,EAAM,EAAM,CAAC,CAAG,EAAG,EAAM,CAAC,CAAG,IAClE,KACF,MAAK,EAAwB,EAAE,CAC7B,IAAI,CAAC,CAAC,EAA0B,CAAC,IAAI,EAAM,EAAM,CAAC,CAAG,EAAG,EAAM,CAAC,GAC/D,IAAI,CAAC,CAAC,EAA0B,CAAC,IAAI,EAAM,EAAM,CAAC,CAAG,EAAG,EAAM,CAAC,CAAG,IAClE,IAAI,CAAC,CAAC,EAA0B,CAAC,IAAI,EAAM,EAAM,CAAC,CAAE,EAAM,CAAC,CAAG,GAElE,CACF,CAKA,CAAC,EAA0B,CAAC,CAAK,EAC1B,IAAI,CAAC,CAAC,EAAO,CAAC,YAAY,CAAC,IAC9B,IAAI,CAAC,CAAC,EAAa,CAAC,GAAG,CAAC,EAAM,QAAQ,GAAI,EAE9C,CACF,CC5fO,MAAM,GAAU,CACrB,oBAAqB,uBAErB,SAAU,wBACV,uBAAwB,QACxB,wBAAyB,QACzB,wBAAyB,cACzB,0BAA2B,QAG3B,oBAAqB,2BACrB,sBAAuB,OACzB,EHEa,GAAmB,CAC9B,cAAe,EACf,cAAe,EACf,cAAe,EAEf,sBAAuB,CACzB,EAMa,GAAW,CACtB,SAAU,GACV,OAAQ,EACR,SAAU,EACV,KAAM,CAGR,CAYO,OAAM,WAAa,GAExB,MAAO,AAEP,CAAA,QAAS,AAET,EAAC,EAAS,AAAC,AAEX,EAAC,EAAS,AAAC,AAEX,EAAC,EAAU,AAAC,AAEZ,EAAC,EAAI,AAAC,AAUN,aAAY,CAAU,CAAE,CAAO,CAAE,CAC/B,KAAK,GACL,IAAI,CAAC,MAAM,CAAG,EACd,IAAI,CAAC,CAAC,EAAS,CAAG,IAAI,IACtB,IAAI,CAAC,QAAQ,CAAG,EAAQ,QAAQ,CAChC,IAAI,CAAC,CAAC,EAAS,CAAG,EAAQ,SAAS,CACnC,IAAI,CAAC,CAAC,EAAU,CAAG,EAAQ,UAAU,CACrC,IAAI,CAAC,CAAC,EAAI,CAAG,EAAQ,IAAI,AAC3B,CAKA,IAAI,MAAO,CACT,OAAO,IAAI,CAAC,CAAC,EAAI,AACnB,CAMA,IAAI,WAAY,CACd,OAAO,IAAI,CAAC,CAAC,EAAS,AACxB,CAKA,IAAI,YAAa,CACf,OAAO,IAAI,CAAC,CAAC,EAAU,AACzB,CAKA,YAAY,CAAQ,CAAE,CACpB,IAAI,CAAC,CAAC,EAAS,CAAC,GAAG,CAAC,EAAU,EAChC,CAKA,eAAe,CAAQ,CAAE,CACvB,IAAI,CAAC,CAAC,EAAS,CAAC,MAAM,CAAC,EACzB,CAKA,cAAe,CACb,OAAO,IAAI,CAAC,CAAC,EAAS,AACxB,CAKA,YAAY,CAAW,CAAE,CACvB,KAAK,CAAC,YAAY,IAAI,CAAC,MAAM,CAAC,QAAQ,CACxC,CAIA,mBAAmB,CAAW,CAAE,CAC9B,KAAK,CAAC,YAAY,IAAI,CAAC,MAAM,CAAC,QAAQ,CACxC,CAMA,YAAa,CACX,OAAO,IAAI,CAAC,CAAC,EAAS,CAAC,IAAI,CAAG,CAChC,CAOA,kBAAkB,CAAK,CAAE,CACvB,GAAI,IAAI,CAAC,CAAC,EAAI,GAAK,GAAS,QAAQ,EAAI,IAAI,CAAC,CAAC,EAAI,GAAK,GAAS,IAAI,EAGhE,IAAI,CAAC,QAAQ,CAFf,MAAO,CAAA,EAKT,IAAK,IAAM,KAAY,IAAI,CAAC,CAAC,EAAS,CAAC,MAAM,GAC3C,GAAI,IAAa,GAAS,CAAC,EAAS,iBAAiB,CAAC,GACpD,MAAO,CAAA,EAGX,MAAO,CAAA,CACT,CAOA,qBAAqB,CAAK,CAAE,CAC1B,GACG,CAAA,IAAI,CAAC,CAAC,EAAI,GAAK,GAAS,QAAQ,EAAI,IAAI,CAAC,CAAC,EAAI,GAAK,GAAS,IAAG,AAAH,GAC7D,CAAC,EAAM,MAAM,IAIX,IAAI,CAAC,QAAQ,CAFf,MAAO,CAAA,EAKT,IAAK,IAAM,KAAY,IAAI,CAAC,CAAC,EAAS,CAAC,MAAM,GAC3C,GAAI,IAAa,GAAS,CAAC,EAAS,yBAAyB,CAAC,GAC5D,MAAO,CAAA,EAGX,MAAO,CAAA,CACT,CAOA,aAAa,CAAW,CAAE,OAEtB,CAAA,IAAI,CAAC,QAAQ,EACb,IAAI,CAAC,CAAC,EAAI,GAAK,GAAS,QAAQ,EAChC,IAAI,CAAC,CAAC,EAAI,GAAK,GAAS,IAAI,AAKhC,CACF,CAKO,MAAM,GAEX,CAAC,EAAO,AAAC,AAET,EAAC,EAAK,AAAC,AACP,EAAC,EAAM,AAAC,AACR,EAAC,EAAM,AAAC,AACR,EAAC,EAAQ,AAAC,AACV,EAAC,CAAK,AAAC,AACP,EAAC,CAAM,AAAC,AAER,EAAC,EAAc,AAAC,AAEhB,EAAC,EAAkB,AAAC,AAEpB,EAAC,EAAuB,AAAC,AAEzB,EAAC,EAA4B,AAAC,AAE9B,EAAC,EAA2B,AAAC,AAE7B,EAAC,EAAY,AAAC,AAEd,EAAC,EAAQ,AAAC,AAEV,EAAC,EAAoB,AAAC,AAEtB,EAAC,EAAmB,AAAC,AAErB,EAAC,EAAY,AAAC,AAEd,EAAC,EAAa,AAAC,AAEf,EAAC,EAAsB,AAAC,AAExB,EAAC,EAAuB,AAAC,AAEzB,EAAC,EAAS,AAAC,AAQX,aAAY,CAAO,CAAE,CAAI,CAAE,CAAQ,CAAE,CAAS,CAAE,CAC9C,IAAI,CAAC,CAAC,EAAS,CAAG,EAClB,IAAM,EAAS,EAAK,MAAM,AAC1B,CAAA,IAAI,CAAC,CAAC,EAAoB,CAAG,EAAK,gBAAgB,CAClD,IAAI,CAAC,CAAC,EAAmB,CAAG,EAAK,eAAe,CAChD,IAAI,CAAC,CAAC,EAAO,CAAG,EAChB,IAAI,CAAC,CAAC,EAAuB,CAAG,IAAI,GAAO,CACzC,SAAU,IAAI,GAAyB,EAAS,CAC9C,MAAO,EACP,OAAQ,EACR,UAAW,AAAA,GAAQ,mBAAmB,CACtC,YAAa,AAAA,GAAQ,qBAAqB,AAC5C,EACF,GACA,IAAI,CAAC,CAAC,EAA4B,CAAG,IAAI,GAAO,CAC9C,SAAU,IAAI,GAAyB,EAAS,CAC9C,MAAO,EACP,OAAQ,EACR,UAAW,AAAA,GAAQ,mBAAmB,CACtC,YAAa,OACf,EACF,GACA,IAAI,CAAC,CAAC,EAAuB,CAAG,IAAI,GAAO,CACzC,SAAU,IAAI,GAAyB,EAAS,CAC9C,MAAO,EACP,OAAQ,EACR,UAAW,AAAA,GAAQ,uBAAuB,CAC1C,YAAa,AAAA,GAAQ,yBAAyB,AAChD,EACF,GACA,IAAI,CAAC,CAAC,EAAQ,CAAG,EACjB,IAAI,CAAC,CAAC,EAAK,CAAG,EAAE,CAChB,IAAI,CAAC,CAAC,EAAM,CAAG,EAAO,MAAM,CAC5B,IAAI,CAAC,CAAC,EAAM,CAAG,CAAM,CAAC,EAAE,CAAC,MAAM,CAC/B,IAAI,CAAC,CAAC,CAAK,CAAG,EAAW,IAAI,CAAC,MAAM,CACpC,IAAI,CAAC,CAAC,CAAM,CAAG,EAAW,IAAI,CAAC,MAAM,CACrC,IAAI,CAAC,CAAC,EAAY,CAAG,EAAE,CACvB,EAAO,OAAO,CAAC,CAAC,EAAK,KACnB,IAAM,EAAU,EAAE,CAClB,IAAI,CAAC,CAAC,EAAK,CAAC,IAAI,CAAC,GACjB,EAAI,OAAO,CAAC,CAAC,EAAU,KACrB,GAAI,EAAU,CACZ,IAAM,EAAS,IAAI,GAAO,CACxB,SAAU,IAAI,GACZ,EACA,AAAA,GAAc,eAAe,CAAC,EAAS,KAAK,EAEhD,GACM,EAAY,IAAI,EAAM,EAAa,GACnC,EAAa,IAAI,CAAC,qBAAqB,CAAC,GAC1C,EAAO,IAAI,GAAK,EAAQ,CAC1B,SAAU,EAAS,IAAI,GAAK,GAAS,QAAQ,CAC7C,UAAW,EACX,WAAY,EACZ,KAAM,EAAS,IAAI,AACrB,EACI,CAAA,EAAS,OAAO,EAClB,EAAK,UAAU,CAAC,CAAC,EAAQ,IACvB,IAAI,CAAC,CAAC,EAAW,CAAC,EAAQ,EAAO,EAAS,OAAO,GAGrD,IAAI,CAAC,eAAe,CAAC,GACrB,EAAQ,IAAI,CAAC,GACb,EAAO,QAAQ,CAAC,CAAC,CAAG,EAAc,IAAI,CAAC,CAAC,EAAQ,CAAG,IAAI,CAAC,CAAC,EAAQ,CAAG,EACpE,EAAO,QAAQ,CAAC,CAAC,CAAG,EAAW,IAAI,CAAC,CAAC,EAAQ,CAAG,IAAI,CAAC,CAAC,EAAQ,CAAG,CACnE,MACE,EAAQ,IAAI,CAAC,KAEjB,EACF,GACK,IAAI,CAAC,CAAC,EAAY,GACrB,AAAA,EAAI,KAAK,CAAC,8DACV,IAAI,CAAC,CAAC,EAAY,CAAG,IAAI,CAAC,CAAC,EAAY,CAAC,EAAE,CAE9C,CAMA,gBAAiB,CACf,MAAO,CAAE,MAAO,IAAI,CAAC,CAAC,EAAM,CAAE,OAAQ,IAAI,CAAC,CAAC,EAAM,AAAC,CACrD,CAKA,gBAAgB,CAAI,CAAE,CACpB,OAAQ,EAAK,IAAI,EACf,KAAK,GAAS,QAAQ,CACpB,GAAI,IAAI,CAAC,CAAC,EAAY,CAAE,CACtB,IAAM,EAAK,EAAK,SAAS,CACzB,AAAA,EAAI,KAAK,CAAC,CAAC,6BAA6B,EAAE,EAAG,CAAC,CAAC,EAAE,EAAE,EAAG,CAAC,CAAC,WAAW,CAAC,CACtE,MACE,IAAI,CAAC,CAAC,EAAY,CAAG,EAEvB,KACF,MAAK,GAAS,IAAI,CAChB,GAAI,IAAI,CAAC,CAAC,EAAQ,CAAE,CAClB,IAAM,EAAK,EAAK,SAAS,CACzB,AAAA,EAAI,KAAK,CAAC,CAAC,yBAAyB,EAAE,EAAG,CAAC,CAAC,EAAE,EAAE,EAAG,CAAC,CAAC,WAAW,CAAC,CAClE,MACE,IAAI,CAAC,CAAC,EAAQ,CAAG,EAEnB,KACF,MAAK,GAAS,MAAM,CACb,EAAK,SAAS,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,EAAoB,GACvD,IAAI,CAAC,CAAC,EAAY,CAAC,IAAI,CAAC,EAG9B,CACF,CAMA,OAAO,CAAY,CAAE,CACnB,IAAI,CAAC,CAAC,EAAY,GAClB,IAAM,EAAoB,IAAI,CAAC,uBAAuB,GACtD,IACE,IAAI,EAAM,EAAkB,CAAC,CAC7B,GAAO,EAAkB,CAAC,CAAG,EAAkB,MAAM,CACrD,IAEA,IACE,IAAI,EAAM,EAAkB,CAAC,CAC7B,GAAO,EAAkB,CAAC,CAAG,EAAkB,KAAK,CACpD,IAEA,GAAI,IAAI,CAAC,CAAC,EAAa,EAAE,kBAAkB,IAAI,EAAM,EAAK,IAAO,CAC/D,IAAM,EAAO,IAAI,CAAC,CAAC,EAAK,CAAC,EAAI,CAAC,EAAI,CAClC,GAAM,OAAO,OAAO,EACtB,CAGJ,IAAI,CAAC,CAAC,EAAc,CAAC,EACvB,CAKA,CAAC,EAAY,GACX,GAAI,IAAI,CAAC,CAAC,EAAS,CAAE,CACd,IAAI,CAAC,CAAC,EAAa,EACtB,CAAA,IAAI,CAAC,CAAC,EAAa,CAAG,IAAI,GAAU,IAAI,CAAE,IAAI,CAAC,CAAC,EAAS,CAAA,EAE3D,IAAM,EAAW,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,CAAC,EAAS,CAAC,QAAQ,EAClE,GAAI,EAAU,CACZ,IAAM,EAAe,EAAS,IAAI,CAEhC,GAAgB,GAAS,QAAQ,EACjC,GAAgB,GAAS,IAAI,EAE7B,IAAI,CAAC,CAAC,EAAa,CAAC,gBAAgB,EAExC,CACF,CACF,CAMA,qBAAsB,CACpB,OAAO,IAAI,EAAU,EAAG,EAAG,IAAI,CAAC,CAAC,EAAM,CAAE,IAAI,CAAC,CAAC,EAAM,CACvD,CAMA,yBAA0B,CACxB,IAAM,EAAgB,AAAA,EAAO,sBAAsB,GAC7C,EAAc,IAAI,CAAC,gBAAgB,CACvC,IAAI,EAAM,EAAc,CAAC,CAAE,EAAc,CAAC,GAEtC,EAAc,IAAI,CAAC,gBAAgB,CACvC,IAAI,EACF,EAAc,CAAC,CAAG,EAAc,KAAK,CACrC,EAAc,CAAC,CAAG,EAAc,MAAM,GAGpC,EAAS,KAAK,GAAG,CAAC,EAAG,EAAY,CAAC,EAClC,EAAS,KAAK,GAAG,CAAC,IAAI,CAAC,CAAC,EAAM,CAAG,EAAG,EAAY,CAAC,EACjD,EAAS,KAAK,GAAG,CAAC,EAAG,EAAY,CAAC,EAExC,OAAO,IAAI,EAAU,EAAQ,EAAQ,EAAS,EAAQ,AADvC,KAAK,GAAG,CAAC,IAAI,CAAC,CAAC,EAAM,CAAG,EAAG,EAAY,CAAC,EACQ,EACjE,CAMA,aAAc,CACZ,OAAO,IAAI,CAAC,CAAC,EAAQ,AACvB,CAKA,eAAgB,CACd,MAAO,CAAE,MAAO,IAAI,CAAC,CAAC,CAAK,CAAE,OAAQ,IAAI,CAAC,CAAC,CAAM,AAAC,CACpD,CAOA,oBAAoB,CAAK,CAAE,CACzB,IAAM,EAAY,IAAI,CAAC,gBAAgB,CAAC,GACxC,OAAO,IAAI,CAAC,kBAAkB,CAAC,EACjC,CAOA,mBAAmB,CAAS,CAAE,CAC5B,GAAI,CAAC,EACH,OAAO,KAET,IAAM,EAAM,EAAU,CAAC,CACjB,EAAM,EAAU,CAAC,QACvB,AAAI,GAAO,GAAK,GAAO,GAAK,EAAM,IAAI,CAAC,CAAC,EAAM,EAAI,EAAM,IAAI,CAAC,CAAC,EAAM,CAC3D,IAAI,CAAC,CAAC,EAAK,CAAC,EAAI,CAAC,EAAI,CAEvB,IACT,CAOA,iBAAiB,CAAK,CAAE,CACtB,OAAO,IAAI,EACT,KAAK,KAAK,CAAC,EAAM,CAAC,CAAG,IAAI,CAAC,CAAC,EAAQ,EACnC,KAAK,KAAK,CAAC,EAAM,CAAC,CAAG,IAAI,CAAC,CAAC,EAAQ,EAEvC,CAMA,sBAAsB,CAAK,CAAE,CAC3B,IAAM,EAAY,IAAI,CAAC,gBAAgB,CAAC,GACxC,OAAO,IAAI,CAAC,qBAAqB,CAAC,EACpC,CAMA,sBAAsB,CAAK,CAAE,CAC3B,IAAM,EAAW,GAAM,IAAI,CAAC,CAAC,EAAQ,CACrC,OAAO,IAAI,EACT,EAAM,CAAC,CAAG,IAAI,CAAC,CAAC,EAAQ,CAAG,EAC3B,EAAM,CAAC,CAAG,IAAI,CAAC,CAAC,EAAQ,CAAG,EAE/B,CAMA,+BAAgC,CAC9B,OAAO,IAAI,CAAC,qBAAqB,CAAC,IAAI,CAAC,CAAC,EAAoB,CAC9D,CAKA,2BAA4B,CAC1B,OAAO,IAAI,CAAC,CAAC,EAAY,CAAC,SAAS,AACrC,CAMA,kBAAkB,CAAM,CAAE,CACxB,IAAI,CAAC,CAAC,EAAc,CAAG,EACnB,GACF,IAAI,CAAC,CAAC,EAAkB,CAAG,IAAI,IAC/B,IAAI,CAAC,CAAC,EAAc,CAAC,OAAO,CAAC,AAAC,GAC5B,EAAW,OAAO,CAAC,AAAC,IAClB,IAAI,CAAC,CAAC,EAAkB,CAAC,GAAG,CAAC,EAAW,EAC1C,KAGF,IAAI,CAAC,CAAC,EAAkB,CAAG,IAE/B,CAMA,kBAAkB,CAAM,CAAE,CACxB,IAAI,CAAC,CAAC,EAAsB,CAAG,EAAE,CACjC,GAAQ,QAAQ,AAAC,IACX,EAAM,WAAW,CAAC,QAAQ,IAC5B,IAAI,CAAC,CAAC,EAAsB,CAAC,IAAI,CAC/B,IAAI,CAAC,gBAAgB,CAAC,EAAM,QAAQ,EAG1C,EACF,CAKA,mBAAmB,CAAY,CAAE,CAC/B,IAAI,CAAC,CAAC,EAA2B,CAAG,EAAE,CACtC,IAAM,EAAY,IAAI,CAAC,mBAAmB,CACxC,IAAI,CAAC,gBAAgB,CAAC,IAExB,CAAC,EAAU,KAAK,CAAE,EAAU,KAAK,CAAE,EAAU,KAAK,CAAE,EAAU,IAAI,CAAC,CAAC,OAAO,CACzE,AAAC,IACK,EAAK,SAAS,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,EAAQ,CAAC,SAAS,EACpD,IAAI,CAAC,CAAC,EAA2B,CAAC,IAAI,CAAC,EAAK,SAAS,EAC5C,EAAK,SAAS,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,EAAY,CAAC,SAAS,GAC/D,IAAI,CAAC,CAAC,EAA2B,CAAC,IAAI,CAAC,EAAK,SAAS,CAEzD,EAEJ,CAOA,CAAC,EAAc,CAAC,CAAY,EAC1B,IAAI,CAAC,CAAC,EAAsB,CAAC,GAC7B,IAAI,CAAC,CAAC,EAAsB,CAAC,GAC7B,IAAI,CAAC,CAAC,EAA2B,CAAC,EACpC,CAMA,CAAC,EAAsB,CAAC,CAAY,EAClC,IAAI,CAAC,CAAC,EAAkB,EAAE,QAAQ,AAAC,IACjC,IAAI,CAAC,CAAC,EAAuB,CAAC,QAAQ,CACpC,IAAI,CAAC,qBAAqB,CAAC,GAC7B,IAAI,CAAC,CAAC,EAAuB,CAAC,MAAM,CAAC,EACvC,EACF,CAMA,CAAC,EAAsB,CAAC,CAAY,EAClC,IAAI,CAAC,CAAC,EAAsB,EAAE,QAAQ,AAAC,IACrC,IAAI,CAAC,CAAC,EAAuB,CAAC,QAAQ,CAAG,IAAI,CAAC,qBAAqB,CAAC,GACpE,IAAI,CAAC,CAAC,EAAuB,CAAC,MAAM,CAAC,EACvC,EACF,CAMA,CAAC,EAA2B,CAAC,CAAY,EACvC,IAAI,CAAC,CAAC,EAA2B,EAAE,QAAQ,AAAC,IAC1C,IAAI,CAAC,CAAC,EAA4B,CAAC,QAAQ,CACzC,IAAI,CAAC,qBAAqB,CAAC,GAC7B,IAAI,CAAC,CAAC,EAA4B,CAAC,MAAM,CAAC,EAC5C,EACF,CAUA,CAAC,EAAW,CAAC,CAAM,CAAE,CAAK,CAAE,CAAY,MAElC,EADJ,IAAM,EAAY,IAAI,CAAC,gBAAgB,CAAC,GAElC,EAAY,EAAO,YAAY,EACjC,CAAA,EAAU,IAAI,CAAG,GACnB,CAAA,EAAW,EAAU,MAAM,GAAG,IAAI,GAAG,KAAK,AAAL,EAGvC,IAAM,EAAW,IAAI,CAAC,CAAC,EAAc,EAAE,kBAAkB,GACrD,EAAc,CAAA,EAClB,GAAI,IAAI,CAAC,CAAC,EAAsB,CAC9B,CAAA,IAAK,IAAM,KAAS,IAAI,CAAC,CAAC,EAAsB,CAC9C,GAAI,EAAM,YAAY,CAAC,GAAY,CACjC,EAAc,CAAA,EACd,KACF,CAAA,CAGJ,IAAM,EAAa,CAAC,GAAU,OAAS,GAAU,SACjD,GAAI,GAAa,GAAgB,EAAY,CAC3C,EAAa,EAAQ,EAAO,CAC1B,OAAQ,GAAiB,qBAAqB,CAC9C,SAAU,CACZ,GACA,MACF,CAAO,GAAI,EAAU,CACnB,EAAa,EAAQ,EAAO,CAC1B,OAAQ,GAAiB,aAAa,CACtC,SAAU,CACZ,GACA,MACF,CAAO,GAAI,EAAa,CACtB,EAAa,EAAQ,EAAO,CAC1B,OAAQ,GAAiB,aAAa,CACtC,SAAU,CACZ,GACA,MACF,CAEA,GAAI,IAAI,CAAC,CAAC,EAA2B,CACnC,CAAA,IAAK,IAAM,KAAM,IAAI,CAAC,CAAC,EAA2B,CAChD,GAAI,EAAG,YAAY,CAAC,GAAY,CAC9B,EAAa,EAAQ,EAAO,CAC1B,OAAQ,GAAiB,aAAa,AACxC,GACA,MACF,CAAA,CAIJ,IAAM,EAAgB,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,CAAC,EAAS,CAAC,QAAQ,EACpE,GAAI,EAAU,UAAU,CAAC,GAAgB,CACvC,EAAa,EAAQ,EAAO,CAC1B,SAAU,IAAI,CAAC,CAAC,EAAS,CACzB,OAAQ,GAAiB,aAAa,AACxC,GACA,MACF,CAEI,GACF,EAAa,EAAQ,EAAO,CAC1B,SAAU,EACV,OAAQ,GAAiB,aAAa,AACxC,GAEF,AAAA,EAAI,KAAK,CAAC,2CACZ,CAOA,yBAAyB,CAAU,CAAE,CACnC,IAAM,EAAc,IAAI,CAAC,gBAAgB,CAAC,GAC1C,OAAO,IAAI,CAAC,CAAC,EAAc,EAAE,0BAA0B,EACzD,CAMA,yBAA0B,CAExB,IAAK,IAAM,KADX,AAAA,GAAU,IAAI,CAAC,CAAC,EAAY,EACT,IAAI,CAAC,CAAC,EAAY,EACnC,GAAI,CAAC,EAAK,UAAU,GAClB,OAAO,EAGX,OAAO,IACT,CAQA,2BAA2B,CAAS,CAAE,CAAK,CAAE,CAC3C,IAAM,EAAO,IAAI,CAAC,kBAAkB,CAAC,SACrC,EAAK,GAIE,EAAK,iBAAiB,CAAC,EAChC,CAQA,8BAA8B,CAAS,CAAE,CAAK,CAAE,CAC9C,IAAM,EAAO,IAAI,CAAC,kBAAkB,CAAC,SACrC,EAAK,GAGE,EAAK,oBAAoB,CAAC,EACnC,CAOA,oBAAoB,CAAS,CAAE,CAC7B,OAAO,IAAI,CAAC,CAAC,EAAa,EAAE,kBAAkB,IAAc,CAAA,CAC9D,CAQA,aAAa,CAAS,CAAE,CAAK,CAAE,CAC7B,IAAM,EAAO,IAAI,CAAC,kBAAkB,CAAC,SACrC,CAAK,GAIE,EAAK,YAAY,CAAC,EAC3B,CAOA,oBAAoB,CAAS,CAAE,CAC7B,OAAO,AAAA,GAAa,IAAI,CAAC,CAAC,EAAK,CAAE,EAAU,CAAC,CAAE,EAAU,CAAC,CAC3D,CAQA,sBAAsB,CAAS,CAAE,EAAW,CAAC,CAAE,CAC7C,OAAO,ARlvBJ,SAA0B,CAAM,CAAE,CAAO,MAS1C,EARJ,IAAM,EAAU,EAAQ,WAAW,CAC7B,EAAU,EAAQ,QAAQ,CAC1B,EAAS,EAAE,CACb,EAAY,CAAA,EACZ,EAAW,CAAA,EACX,EAAY,CAAA,EACZ,EAAW,CAAA,EACX,EAAS,EAET,EAAW,EAAQ,QAAQ,EAAI,EACnC,KAAO,KAAa,GACd,IACF,EAAS,CAAM,CAAC,EAAQ,CAAC,EAAU,EAAO,CACtC,EAAQ,MAAM,EAAI,CAAC,EAAQ,MAAM,CAAC,GACpC,EAAW,CAAA,EAEX,EAAO,IAAI,CAAC,IAGZ,IACF,EAAS,CAAM,CAAC,EAAQ,CAAC,EAAU,EAAO,CACtC,EAAQ,MAAM,EAAI,CAAC,EAAQ,MAAM,CAAC,GACpC,EAAW,CAAA,EAEX,EAAO,IAAI,CAAC,IAGZ,IACF,EAAS,CAAM,CAAC,EAAU,EAAO,CAAC,EAAQ,CACtC,EAAQ,MAAM,EAAI,CAAC,EAAQ,MAAM,CAAC,GACpC,EAAY,CAAA,EAEZ,EAAO,IAAI,CAAC,IAGZ,IACF,EAAS,CAAM,CAAC,EAAU,EAAO,CAAC,EAAQ,CACtC,EAAQ,MAAM,EAAI,CAAC,EAAQ,MAAM,CAAC,GACpC,EAAY,CAAA,EAEZ,EAAO,IAAI,CAAC,IAGhB,IAEF,OAAO,CACT,EQmsB4B,IAAI,CAAC,CAAC,EAAK,CAAE,CACnC,SAAU,EAAU,CAAC,CACrB,YAAa,EAAU,CAAC,CACxB,SAAU,EACV,OAAQ,AAAC,GAAS,EAAK,IAAI,GAAK,GAAS,MAAM,AACjD,EACF,CAQA,2BAA2B,CAAQ,CAAE,CAAS,CAAE,CAC9C,IAAI,CAAC,kBAAkB,CAAC,IAAY,eAAe,EACrD,CASA,2BAA2B,CAAQ,CAAE,CAAY,CAAE,CAAY,CAAE,CAC3D,IAAiB,IACnB,IAAI,CAAC,kBAAkB,CAAC,IAAe,eAAe,GACtD,IAAI,CAAC,kBAAkB,CAAC,IAAe,YAAY,GAEvD,CAOA,oBAAoB,CAAK,CAAE,CAEzB,OAAO,AADM,IAAI,CAAC,mBAAmB,CAAC,EAAM,QAAQ,EACxC,YAAY,EAC1B,CAOA,gBAAgB,CAAK,CAAE,CACrB,IAAM,EAAe,EAAE,CACjB,EAAY,IAAI,CAAC,mBAAmB,CACxC,IAAI,CAAC,gBAAgB,CAAC,EAAM,QAAQ,GActC,MANA,AANc,CACZ,EAAU,KAAK,CACf,EAAU,KAAK,CACf,EAAU,KAAK,CACf,EAAU,IAAI,CACf,CACK,OAAO,CAAC,AAAC,IACb,IAAI,EAAgB,GAAM,eAC1B,GAAe,QAAQ,AAAC,IACtB,EAAa,IAAI,CAAC,EACpB,EACF,GACO,CACT,CACF,CO11BA,MAAM,GAAW,CACf,CACE,GAAI,eACJ,SAAU,uBACV,SAAU,GACV,YAAa,AAAA,GAAY,KAAK,CAC9B,WAAY,CAAA,EACZ,OAAQ,KACR,SAAU,AAAC,GAAU,AtB6FV,GsB7FwB,qBAAqB,CAAC,EAC3D,EACA,CACE,GAAI,iBACJ,SAAU,yBACV,SAAU,GACV,YAAa,AAAA,GAAY,KAAK,CAC9B,WAAY,CAAA,EACZ,OAAQ,KACR,SAAU,AAAC,IACT,AtBmFS,GsBnFK,uBAAuB,CAAC,GACtC,AtBkFS,GsBlFK,UAAU,CAAC,QAC3B,CACF,EACD,CIVK,GAA4B,CAChC,KAAM,CACJ,QAAS,OACT,OAAQ,OACR,QAAS,CACP,cAAe,IACf,WAAY,AAAA,GAAW,IAAI,AAC7B,CACF,EACA,KAAM,CACJ,QAAS,OACT,OAAQ,OACR,QAAS,CACP,cAAe,IACf,WAAY,AAAA,GAAW,OAAO,AAChC,CACF,EACA,WAAY,CACV,QAAS,SACT,OAAQ,SACR,QAAS,CACP,cAAe,IACf,WAAY,AAAA,GAAW,OAAO,AAChC,CACF,EACA,UAAW,CACT,QAAS,SACT,OAAQ,SACR,QAAS,CACP,cAAe,IACf,WAAY,AAAA,GAAW,OAAO,AAChC,CACF,EACA,WAAY,CACV,QAAS,SACT,OAAQ,SACR,QAAS,CACP,cAAe,IACf,WAAY,AAAA,GAAW,OAAO,AAChC,CACF,EACA,UAAW,CACT,QAAS,SACT,OAAQ,SACR,QAAS,CACP,cAAe,IACf,WAAY,AAAA,GAAW,OAAO,AAChC,CACF,CACF,EAMM,GAAyB,CAC7B,KAAM,CACJ,QAAS,OACT,OAAQ,OACR,QAAS,CACP,cAAe,IACf,WAAY,AAAA,GAAW,IAAI,AAC7B,CACF,EACA,KAAM,CACJ,QAAS,OACT,OAAQ,OACR,QAAS,CACP,cAAe,IACf,WAAY,AAAA,GAAW,OAAO,AAChC,CACF,CACF,CAKA,OAAM,GAEJ,CAAC,EAAW,AAAC,AAIb,aAAY,CAAW,CAAE,CACvB,IAAI,CAAC,CAAC,EAAW,CAAG,CACtB,CAMA,CAAC,EAAiB,CAAC,CAAG,CAAE,CAAS,EAC/B,IAAM,EAAS,IAAI,CAAC,CAAC,EAAW,CAAC,EAAI,EAAE,OACvC,GAAI,CAAC,EACH,MAAM,AAAI,MACR,CAAC,uDAAuD,EAAE,EAAI,CAAC,CAAC,EAGpE,MAAO,CAAC,EAAE,EAAU,CAAC,EAAE,EAAO,CAAC,AACjC,CAOA,WAAW,CAAG,CAAE,CACd,OAAO,IAAI,CAAC,CAAC,EAAW,CAAC,EAAI,CAAC,OAAO,AACvC,CAMA,uBAAuB,CAAe,CAAE,CAAS,CAAE,CACjD,IAAK,IAAM,KAAO,IAAI,CAAC,CAAC,EAAW,CAAE,CACnC,IAAM,EAAO,IAAI,CAAC,CAAC,EAAW,CAAC,EAAI,CACnC,EAAgB,gBAAgB,CAC9B,IAAI,CAAC,CAAC,EAAW,CAAC,EAAI,CAAC,OAAO,CAC9B,IAAI,GACF,CACE,OAAQ,IAAI,CAAC,CAAC,EAAiB,CAAC,EAAK,GACrC,OAAQ,OACR,WAAY,EACZ,QAAS,CACX,EACA,EAAK,OAAO,EAGlB,CACA,EAAgB,aAAa,CAAC,IAAI,CAAC,CAAC,EAAW,CAAC,IAAI,CAAC,OAAO,CAC9D,CACF,CAGA,MAAM,GAAgB,CACpB,YAAa,IAAI,GAAc,IAC/B,SAAU,IAAI,GAAc,GAC9B,EC9JM,GAAe,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,KAAM,KAAK,CACpD,GAAe,CACnB,IACA,KACA,IACA,KACA,MACA,KACA,IACA,KACA,IACA,KACA,KACA,IACA,KACA,KACA,IACA,IACA,IACA,KACA,KACA,IACA,IACA,IACA,IACA,KACA,KACA,KACA,IACA,IACA,MACA,KACA,KACA,IACA,KACA,KACA,IACA,IACA,IACA,IACD,CAEK,GAAa,CACjB,IACA,OACA,OACA,OACA,MACA,IACA,KACA,KACA,MACA,KACA,IACA,IACA,KACA,OACA,MACA,OACA,IACA,KACA,MACA,MACA,IACA,IACA,KACA,MACA,OACA,IACA,IACA,OACA,MACA,IACA,IACA,IACA,KACA,KACA,MACA,KACA,MACA,IACA,KACA,MACA,IACA,IACA,IACA,IACA,OACA,MACD,CAMM,SAAS,KACd,IAAI,EACF,EAAsB,IACtB,EAAsB,IACtB,EAAsB,IACtB,EAAsB,IACtB,EAAsB,IAExB,OAAO,EAAK,MAAM,CAAC,GAAG,WAAW,GAAK,EAAK,SAAS,CAAC,EACvD,CFpFA,MAAM,WAAuB,GAE3B,KAAM,AAUN,aAAY,CAAO,CAAE,CAAO,CAAE,CAC5B,KAAK,CAAC,EAAS,EACjB,CAKA,OAAO,CAAQ,CAAE,CACf,GAAI,IAAI,CAAC,KAAK,EAAI,IAAI,CAAC,KAAK,CAAC,MAAM,CAAE,CACnC,IAAM,EAAK,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,MAAM,CAAC,KAAM,GACpC,EAAQ,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,MAAM,CAAC,SAAU,GACjD,IAAI,CAAC,QAAQ,CAAC,EAAG,EAAK,EACxB,CACA,KAAK,CAAC,OAAO,EACf,CACF,CAMA,MAAM,WAA2B,GAE/B,CAAC,EAAK,AAAC,AAGP,EAAC,EAAU,AAAC,AAGZ,EAAC,EAAW,AAAC,AAGb,EAAC,EAAa,AAAC,AAOf,aAAY,CAAG,CAAE,CAAa,CAAE,CAC9B,KAAK,CAAC,EAAK,GACX,IAAI,CAAC,CAAC,EAAU,CAAG,EAAwB,IAAI,CAC/C,IAAI,CAAC,CAAC,EAAa,CAAG,CACxB,CAMA,SAAS,CAAK,CAAE,CACd,IAAI,CAAC,CAAC,EAAK,CAAG,EACd,IAAI,CAAC,CAAC,EAAW,CAAG,IAAI,CAAC,CAAC,EAAK,CAAC,KAAK,AACvC,CAGA,iBAAkB,CAChB,IAAM,EAAM,IAAI,CAAC,CAAC,EAAmB,GAOrC,MANI,CAAA,IAAQ,IAAI,CAAC,CAAC,EAAU,EAAI,IAAI,CAAC,CAAC,EAAW,EAAI,IAAI,CAAC,CAAC,EAAK,EAAE,KAAA,IAChE,IAAI,CAAC,CAAC,EAAU,CAAG,EACnB,IAAI,CAAC,CAAC,EAAW,CAAG,IAAI,CAAC,CAAC,EAAK,EAAE,MACjC,IAAI,CAAC,CAAC,EAAoB,IAI1B,AAFY,KAAK,CAAC,mBAGlB,IAAI,CAAC,CAAC,EAAa,CAAC,eAAe,IACnC,AAAA,GAAc,kBAAkB,EAEpC,CAEA,CAAC,EAAmB,SAClB,AAAI,CAAC,IAAI,CAAC,CAAC,EAAK,EAAI,IAAI,CAAC,CAAC,EAAK,CAAC,QAAQ,CAAC,MAAM,CAAC,IACvC,EAAwB,IAAI,CAG5B,A/CnDN,SAAiC,CAAK,EAC3C,IAAM,EAAW,KAAK,GAAG,CAAC,UAC1B,AAAI,GAAY,EAAQ,MAAM,CACrB,EAAkB,CAAC,CAExB,GAAY,EAAQ,OAAO,CACtB,KAAK,IAAI,CAAC,GAAS,EAAI,EAAkB,CAAC,CAAG,EAAkB,CAAC,CAElE,EAAkB,CAAC,AAC5B,E+CyCkB,IAAI,CAAC,CAAC,EAAK,CAAC,QAAQ,CAAC,kBAAkB,GAGvD,CAMA,CAAC,EAAoB,GACnB,IAAM,EAAU,IAAI,CAAC,CAAC,EAAK,CAAC,WAAW,CACvC,GAAI,CAAC,IAAI,CAAC,CAAC,EAAK,CAAC,KAAK,CACpB,OAAO,IAAI,CAAC,aAAa,CAAC,AC0CjB,GD1C+B,WAAW,CAAC,UAAU,CAAC,SAEjE,OAAQ,IAAI,CAAC,CAAC,EAAU,EACtB,KAAK,EAAwB,IAAI,CAC/B,IAAI,CAAC,aAAa,CAAC,ACsCZ,GDtC0B,WAAW,CAAC,UAAU,CAAC,SACxD,KACF,MAAK,EAAwB,CAAC,CAC5B,IAAI,CAAC,aAAa,CAChB,ACkCK,GDlCS,WAAW,CAAC,UAAU,CAClC,EAAU,YAAc,cAG5B,KACF,MAAK,EAAwB,CAAC,CAC9B,KAAK,EAAwB,EAAE,CAC/B,KAAK,EAAwB,EAAE,CAC7B,IAAI,CAAC,aAAa,CAChB,ACyBK,GDzBS,WAAW,CAAC,UAAU,CAClC,EAAU,aAAe,eAG7B,KACF,MAAK,EAAwB,CAAC,CAC5B,IAAI,CAAC,aAAa,CAChB,ACkBK,GDlBS,WAAW,CAAC,UAAU,CAClC,EAAU,YAAc,cAG5B,KACF,SACE,IAAI,CAAC,aAAa,CAChB,ACWK,GDXS,WAAW,CAAC,UAAU,CAClC,EAAU,aAAe,cAIjC,CACF,CACF,CAqCA,SAAS,GAAY,CAAS,CAAE,CAAa,CAAE,CAAM,CAAE,CAAY,MAO7D,EANJ,IAAM,EAAiB,AA/BzB,SAAiC,CAAS,EACxC,IAAM,EAAkB,IAAI,GAC1B,QACA,IAAI,GAAwB,CAAC,EAAE,EAAU,IAAI,CAAC,GAGhD,OADA,ACRa,GDQC,WAAW,CAAC,sBAAsB,CAAC,EAAiB,GAC3D,CACT,EAwBiD,GACzC,EAAgB,IAAI,GACxB,AAAA,EAAO,YAAY,GACnB,GAeI,EAAQ,IAAI,GAChB,IAAI,GAAO,CACT,QAAA,CAbA,EAAO,GAAG,CAAC,UAAY,AAAA,GAAS,OAAO,CAM7B,CALZ,EAAiB,IAAI,GAAe,AAAA,EAAO,YAAY,GAAI,CACzD,SAAU,AAAA,GAAc,SAAS,CAAG,EACpC,WAAY,CAAC,AAAA,GAAQ,QAAQ,CAAC,CAC9B,aAAc,EAAE,AAClB,GAC6B,EAAc,CAE/B,CAAC,EAAc,AAM3B,GACA,EAAa,IAAI,EAmBnB,OAjBA,EAAe,QAAQ,CAAC,GAEpB,GACF,CAAA,EAAe,KAAK,CAAG,CADzB,EAGA,EAAM,QAAQ,CAAG,IAAI,EACnB,AAAA,GAAc,SAAS,CACvB,AAAA,GAAc,SAAS,CACvB,GAEF,EAAM,YAAY,CAAG,EACrB,EAAM,MAAM,CAAG,EACf,EAAM,eAAe,CAAG,EAAO,qBAAqB,CAAC,QAAS,GAC9D,EAAM,QAAQ,CAAG,CAAE,EAAG,EAAG,EAAG,EAAG,SAAU,CAAE,EAC3C,EAAM,aAAa,CAAG,EAClB,CAAC,EAAE,EAAc,IAAI,CAAC,CACtB,CAAC,EAAE,EAAU,IAAI,CAAC,CACf,CACT,CAmHO,SAAS,GAAW,CAAY,CAAE,CAAY,MAK/C,EAJJ,IAAM,EAAS,IAAI,GAAgB,GAAgB,EAAa,YAAY,EAK5E,OAJK,EAAO,GAAG,CAAC,SACd,EAAO,GAAG,CAAC,OAAQ,EAAa,IAAI,EAG9B,EAAa,IAAI,EACvB,KAAK,AAAA,GAAU,IAAI,CAEjB,AADA,CAAA,EAAQ,GAAY,OAAQ,KAAM,EAAQ,EAA1C,EACM,IAAI,CAAG,AAAA,GAAU,IAAI,CACtB,GACH,EAAO,GAAG,CAAC,OE3PV,CAAC,EAAE,KAAgB,CAAC,EAAE,KAAgB,CAAC,EF6P1C,KACF,MAAK,AAAA,GAAU,MAAM,CACnB,EAAQ,AAtDd,SAAsB,CAAS,CAAE,CAAa,CAAE,CAAM,CAAE,CAAS,EAC/D,IAAM,EAAQ,GAAY,EAqDS,KArDiB,EAAQ,GAE5D,OADA,EAAM,WAAW,CAAG,IAAI,GAAM,GACvB,CACT,EAkD2B,SAAU,EAAM,EAAQ,GAC7C,KACF,MAAK,AAAA,GAAU,eAAe,CAC5B,EAAQ,AA5Hd,SAA8B,CAAS,CAAE,CAAM,CAAE,CAAY,EAC3D,IAAM,EAAiB,AAtEzB,SAAiC,CAAS,EACxC,IAAM,EAAkB,IAAI,GAC1B,QACA,IAAI,GAAwB,CAAC,EAAE,EAAU,IAAI,CAAC,GAGhD,OADA,ACrBa,GDqBC,QAAQ,CAAC,sBAAsB,CAAC,EAAiB,GACxD,CACT,EA+DiD,GAMzC,EAAQ,IAAI,GAChB,IAAI,GAAO,CACT,SAAU,CAPQ,IAAI,GACxB,AAAA,EAAO,YAAY,GACnB,GAK2B,AAC3B,GACA,AAAsB,UAAtB,EAAa,IAAI,CAAe,AAAA,GAAU,IAAI,CAAG,AAAA,GAAU,eAAe,EAY5E,OAVA,EAAe,QAAQ,CAAC,GACxB,EAAM,QAAQ,CAAG,IAAI,EACnB,AAAA,GAAc,SAAS,CACvB,AAAA,GAAc,SAAS,CACvB,GAEF,EAAM,QAAQ,CAAG,CAAE,EAAG,EAAG,EAAG,EAAG,SAAU,CAAE,EAC3C,EAAM,WAAW,CAAG,IAAI,GAAa,GACrC,EAAM,aAAa,CAAG,CAAC,EAAE,EAAU,IAAI,CAAC,CACxC,EAAM,MAAM,CAAa,IAAI,GACtB,CACT,EAqGQ,kBACA,EACA,EACA,GAEF,KACF,MAAK,AAAA,GAAU,IAAI,CACjB,EAAQ,AA/Ed,SAAoB,CAAS,CAAE,CAAa,CAAE,CAAM,CAAE,CAAY,EAChE,IAAM,EAAQ,GAAY,EA8EqB,KA9EK,EAAQ,GAE5D,OADA,EAAM,WAAW,CAAG,IAAI,GAAa,GAC9B,CACT,EA2EyB,EAAa,SAAS,CAAE,EAAM,EAAQ,GACzD,KACF,SACE,EAAQ,AArGd,SAAqB,CAAS,CAAE,CAAa,CAAE,CAAM,CAAE,CAAY,EACjE,IAAM,EAAQ,GAAY,EAoGsB,KApGI,EAAQ,GAO5D,OANI,EAAM,SAAS,IACjB,EAAM,WAAW,CAAG,IAAI,GAAO,GAC/B,EAAM,QAAQ,CAAG,CAAA,GAEjB,EAAM,WAAW,CAAG,IAAI,GAAM,GAEzB,CACT,EA4F0B,EAAa,SAAS,CAAE,EAAM,EAAQ,EAE9D,CAMA,OAJA,EAAM,WAAW,CAAG,EAAa,WAAW,CACxC,EAAa,YAAY,EAC3B,AAhEJ,SAAoB,CAAK,CAAE,CAAY,EACrC,GAAK,EAIL,IAAK,IAAM,KAAM,EAAc,CAC7B,IAAM,EAAgB,AAAA,GAAgB,QAAQ,CAAC,EAAI,CACjD,QACA,UACA,SACD,EACD,GAAI,EAAe,CACjB,IAAM,EAAW,AAAA,GAAc,EAC3B,CAAA,EAAS,cAAc,CACzB,EAAM,YAAY,CAAC,KAAK,CAAC,EAAU,CAAE,OAAQ,CAAA,CAAK,GAElD,EAAM,YAAY,CAAC,KAAK,CAAC,EAAU,CAAE,OAAQ,CAAA,CAAK,EAEtD,MACE,AAAA,EAAI,KAAK,CAAC,CAAC,YAAY,EAAE,EAAG,oCAAoC,CAAC,CAErE,CACF,EA0Ce,EAAO,EAAa,YAAY,EAEtC,CACT,CD3VO,SAAS,KACd,OAAO,A1BYM,G0BZU,GAAG,CAAC,iBAC7B,CA2BO,SAAS,GAAc,CAAI,GAChC,AAdF,SAA6B,CAAI,EAC/B,IAAM,EAAkB,AAvC1B,SAA+B,CAAI,EACjC,IAAM,EAAS,CACb,KAAM,UACN,KAAM,EACN,IAAK,EACL,eAAgB,EAChB,aAAc,CAChB,EAQA,OAPI,IACF,EAAO,IAAI,CAAG,EAAK,MAAM,CAAC,GAAG,CAAC,QAC9B,EAAO,IAAI,CAAG,EAAK,YAAY,CAAC,aAAa,GAC7C,EAAO,GAAG,CAAG,EAAK,MAAM,CAAC,MAAM,CAAC,MAAO,GACvC,EAAO,cAAc,CAAG,EAAK,MAAM,CAAC,iBAAiB,GACrD,EAAO,YAAY,CAAG,AAAA,GAAc,oBAAoB,IAEnD,CACT,EAuBgD,GACxC,EAAc,KACd,EAAW,EAAc,EAAY,IAAI,CAAG,CAC9C,CAAA,EAAgB,IAAI,CAAG,GAXpB,A1BIM,G0BJU,GAAG,CAAC,iBAYP,EAEtB,EAOsB,GACpB,IAAM,EAAiB,EAAK,YAAY,CAAC,oBAAoB,GACvD,EAAkB,EAAE,CAC1B,EAAe,OAAO,CAAC,AAAC,GACtB,EAAgB,IAAI,CAAC,CACnB,YAAa,EAAO,KAAK,CAAC,WAAW,CACrC,aAAc,EAAO,QAAQ,CAAC,YAAY,CAC1C,aAAc,EAAO,QAAQ,CAAC,MAAM,CAAC,cAAc,EACrD,IAGF,IAAM,EAAY,CAChB,WAAY,AAAA,GAAc,oBAAoB,GAC9C,KAAM,CACJ,MAAO,EAAK,KAAK,CACjB,aAAc,EAAK,YAAY,CAC/B,aAAc,EAAK,MAAM,CAAC,cAAc,GACxC,gBAAiB,CACnB,CACF,EACA,A1BrCa,G0BqCG,GAAG,CAAC,aAAc,EACpC,CM1FO,MAAM,GACX,CAAC,EAAK,CAAG,IAAI,GAAM,AACnB,cAAc,CAAC,CAGf,OAAQ,CACN,IAAI,CAAC,CAAC,EAAK,CAAC,KAAK,EACnB,CAOA,CAAC,EAAa,CAAC,CAAI,EACjB,OAAO,ACXF,OAAO,IAAI,CAAC,ACCd,SAAgC,CAAG,EACxC,GAAI,CACF,OAAO,mBAAmB,EAC5B,CAAE,MAAO,EAAO,CAEd,OADA,QAAQ,KAAK,CAAC,GACP,mBAAmB,EAAI,YAAY,GAC5C,CACF,EFG0B,IAAM,OAAO,CAAC,KAAM,IAC5C,CAOA,QAAQ,CAAI,CAAE,CACZ,GAAI,CAAC,EACH,OAAO,EAET,IAAM,EAAM,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC,EAAK,CAAC,IAAI,CAAC,EAAE,IAAI,CAAC,CAAC,EAAa,CAAC,GAAM,GAAG,CAAC,CAEnE,OADA,IAAI,CAAC,CAAC,EAAK,CAAC,GAAG,CAAC,EAAK,GACd,CACT,CAMA,SAAS,CAAG,CAAE,CACZ,IAAM,EAAQ,IAAI,CAAC,CAAC,EAAK,CAAC,GAAG,CAAC,SAE9B,CADA,IAAI,CAAC,CAAC,EAAK,CAAC,MAAM,CAAC,GACd,GAII,GAHP,QAAQ,KAAK,CAAC,CAAC,eAAe,EAAE,EAAI,mBAAmB,CAAC,EACjD,EAIX,CAOA,UAAU,CAAI,CAAE,CACd,OAAO,EAAK,OAAO,CAAC,uCAAwC,AAAC,GAC3D,IAAI,CAAC,QAAQ,CAAC,GAElB,CACF,CDhDA,MAAM,GAAgB,IAAI,GAQnB,SAAS,GAAiB,CAAI,CAAE,CAAW,EAChD,MAAO,CAAC,4CAA4C,EAClD,EAAc,IAAM,GACrB,EAAE,EAAK,EAAE,EAAc,IAAM,GAAG,OAAO,CAAC,AAC3C,CA8BA,MAAM,GAAY,CAEhB,CACE,GAAI,kBACJ,IAAK,qBACP,EAEA,CACE,GAAI,kBACJ,IAAK,qBACP,EAEA,CACE,GAAI,kCACJ,IAAK,CAAC,EAAS,EAAQ,KACrB,IAAM,EAAQ,KAAK,GAAG,CAAC,EAAO,MAAM,CAAE,GACtC,MAAO,CAAC;;EAAM,EAAE,EAAM,CAAC,EAAE,EAAI,IAAI,GAAG,GAAG,EAAE,EAAM;AAAG,CAAC,AACrD,CACF,EAEA,GAAoB,SAAW,CAC7B,YAAa,eACb,YAAa,eACf,GAEA,GAAoB,aAAe,CACjC,YAAa,cACb,YAAa,gBACb,aAAc,CAAA,EACd,UAAW,CAAA,CACb,GAEA,CACE,GAAI,yBACJ,IAAK,cACP,EAEA,GAAoB,mBAAqB,CACvC,YAAa,OACb,YAAa,QACb,WAAY,OACZ,WAAY,OACd,GAEA,GAAoB,qBAAuB,CACzC,YAAa,OACb,YAAa,QACb,WAAY,OACZ,WAAY,OACd,GACD,CAMK,GAAgB,CAEpB,CACE,GAAI,kDACJ,IAAK,mBACP,EAEA,CACE,GAAI,UACJ,IAAK,MACP,EACD,CAMK,GAAW,CAEf,CACE,GAAI,qEACJ,IAAK,CAAC,EAAO,EAAW,EAAS,EAAK,KAEpC,IAAM,EAAO,CAAC,UAAU,EACtB,GAAW,GACZ,SAAS,EAHc,EAAY,YAAc,GAGtB,OAAO,EAAE,EAAI,SAAS,EAAE,GAAS,GAAG,GAAG,CAAC,CACpE,OAAO,GAAc,OAAO,CAAC,EAC/B,CACF,EAEA,CACE,GAAI,6DACJ,IAAK,CAAC,EAAO,EAAO,EAAM,SA9GD,MACvB,EADuB,EA+GK,EA9G5B,EAAW,GACX,yBAAyB,IAAI,CA6GP,GA5GxB,EAAW,qCACF,mCAAmC,IAAI,CA2GxB,IA1GxB,CAAA,EAAW,sCADN,EAGH,GACF,CAAA,EAAW,CAAC,wBAAwB,EAAE,EAAS,OAAO,CAAC,AAAD,EAuGpD,EArGG,CAAC,EAAE,EAAM,EAAE,EAAS,CAAC,CAsGxB,IAAM,EAAO,CAAC,yBAAyB,EAAE,EAAK,SAAS,EAAE,GAAS,GAAG,EAAE,EACrE,GAAS,GACV,IAAI,EAAE,GAAiB,EAAM,CAAA,GAAM,CAAC,CACrC,OAAO,GAAc,OAAO,CAAC,EAC/B,CACF,EAEA,CACE,GAAI,6CACJ,IAAK,CAAC,EAAO,KACX,IAAM,EAAO,CAAC,yBAAyB,EAAE,EAAK,EAAE,EAAE,EAAK,IAAI,EAAE,GAC3D,EACA,CAAA,GACA,CAAC,CACH,OAAO,GAAc,OAAO,CAAC,EAC/B,CACF,EAEA,CACE,GAAI,4CACJ,IAAK,CAAC,EAAO,KACX,IAAM,EAAU,AA2Lf,SAA0B,CAAI,EACnC,IAAI,EAAS,GACb,IAAK,IAAM,KAAO,EAChB,GAAU,GAAmB,GAE/B,OAAO,CACT,EAjMuC,GAC3B,EAAO,CAAC,SAAS,EAAE,EAAQ,EAAE,EAAE,EAAQ,IAAI,CAAC,CAClD,OAAO,GAAc,OAAO,CAAC,EAC/B,CACF,EAEA,CACE,GAAI,gCACJ,IAAK,CAAC,EAAO,EAAO,KAClB,IAAM,EAAO,CAAC,MAAM,EAAE,GAAS,EAAM,OAAO,CAAC,CAC7C,OAAO,GAAc,OAAO,CAAC,EAC/B,CACF,EAEA,CACE,GAAI,oBACJ,IAAK,qBACP,EACA,CACE,GAAI,gBACJ,IAAK,qBACP,EACA,CACE,GAAI,gBACJ,IAAK,aACP,EACA,CACE,GAAI,cACJ,IAAK,aACP,EAEA,CACE,GAAI,gCACJ,IAAK,yBACP,EACA,CACE,GAAI,4BACJ,IAAK,yBACP,EACA,CACE,GAAI,4BACJ,IAAK,iBACP,EACA,CACE,GAAI,0BACJ,IAAK,iBACP,EACD,CAMK,GAAkB,CACtB,CACE,GAAI,2BACJ,IAAK,CAAC,EAAO,IAAQ,GAAmB,EAC1C,EACD,CAKK,GAAe,CACnB,CACE,GAAI,OACJ,IAAK,GACP,EACD,CAMK,GAAwB,CAC5B,CACE,GAAI,kBACJ,IAAK,OACP,EACA,CACE,GAAI,6BACJ,IAAK,MACP,EACD,CAoBK,GAAkB,CACtB,CACE,GAAI,UACJ,IAAK,EACP,EACA,CACE,GAAI,kCACJ,IAAK,EACP,EACD,CAQD,SAAS,GAAoB,CAAI,CAAE,CAAY,SACxC,GAGL,EAAa,OAAO,CAAC,AAAC,IACpB,EAAO,EAAK,UAAU,CAAC,EAAI,EAAE,CAAE,EAAI,GAAG,CACxC,GAJS,CAMX,CAkBA,SAAS,GAAoB,CAAO,CAAE,CAAO,EAC3C,IAAM,EAAkB,AAAI,OAC1B,CAAC,SAAS,EAAE,EAAQ,qBAAqB,EAAE,EAAQ,KAAK,CAAC,CACzD,KAEI,EAAoB,AAAI,OAAO,CAAC,CAAC,EAAE,EAAQ,YAAY,CAAC,CAAE,MAC1D,EAAkB,CAAC,EAAE,GAAS,YAAc,GAAG,EAAE,EACrD,GAAS,YAAc,GACxB,CAAC,CACF,MAAO,CACL,GAAI,EACJ,IAAK,AAAC,IACJ,IAAI,EAAgB,EAAM,UAAU,CAAC,EAAmB,GAUxD,OATI,EAAQ,YAAY,EACtB,CAAA,EAAgB,EAAc,OAAO,CAAC,WAAY,IAAI,OAAO,EAD/D,EAGI,EAAQ,SAAS,EACnB,CAAA,EAAgB,GAAc,OAAO,CAAC,EADxC,EAGW,CAAC;;AAAI,EAAE,GAAS,aAAe,GAAG,EAAE,EAAc,EAC3D,GAAS,aAAe,GACzB;;AAAI,CAAC,AAER,CACF,CACF,CAQA,SAAS,GAAmB,CAAG,EAC7B,MAAO,CAAC,EAAE,EAAE,EAAI,UAAU,CAAC,GAAG,QAAQ,GAAG,CAAC,CAAC,AAC7C,C,I,G,C,EKxXA,GAAiB,KAAK,KAAK,CAAC,molC,I,G,C,ECA5B,GAAiB,IAAA,IAAoB,qCAAA,YAAA,GAAA,EAAsC,QAAQ,G,I,G,C,ECAnF,GAAiB,IAAA,IAAoB,uCAAA,YAAA,GAAA,EAAwC,QAAQ,G,I,G,C,ECArF,GAAiB,IAAA,IAAoB,0CAAA,YAAA,GAAA,EAA2C,QAAQ,G,I,G,C,ECAxF,GAAiB,IAAA,IAAoB,sCAAA,YAAA,GAAA,EAAuC,QAAQ,G,I,G,C,ECApF,GAAiB,IAAA,IAAoB,yCAAA,YAAA,GAAA,EAA0C,QAAQ,G,I,G,C,ECAvF,GAAiB,IAAA,IAAoB,uCAAA,YAAA,GAAA,EAAwC,QAAQ,G,I,G,C,ECArF,GAAiB,IAAA,IAAoB,sCAAA,YAAA,GAAA,EAAuC,QAAQ,G,I,G,C,ECApF,GAAiB,IAAA,IAAoB,wCAAA,YAAA,GAAA,EAAyC,QAAQ,G,I,G,C,ECAtF,GAAiB,IAAA,IAAoB,wCAAA,YAAA,GAAA,EAAyC,QAAQ,G,I,G,C,ECAtF,GAAiB,IAAA,IAAoB,+CAAA,YAAA,GAAA,EAAgD,QAAQ,G,I,G,C,ECA7F,GAAiB,IAAA,IAAoB,oCAAA,YAAA,GAAA,EAAqC,QAAQ,G,I,G,C,ECAlF,GAAiB,IAAA,IAAoB,sEAAA,YAAA,GAAA,EAAuE,QAAQ,G,I,G,C,ECApH,GAAiB,IAAA,IAAoB,uCAAA,YAAA,GAAA,EAAwC,QAAQ,G,I,G,C,ECArF,GAAiB,IAAA,IAAoB,0CAAA,YAAA,GAAA,EAA2C,QAAQ,G,I,G,C,ECAxF,GAAiB,IAAA,IAAoB,8CAAA,YAAA,GAAA,EAA+C,QAAQ,G,I,G,C,ECA5F,GAAiB,IAAA,IAAoB,qDAAA,YAAA,GAAA,EAAsD,QAAQ,G,I,G,C,ECAnG,GAAiB,IAAA,IAAoB,0DAAA,YAAA,GAAA,EAA2D,QAAQ,G,I,G,C,ECAxG,GAAiB,IAAA,IAAoB,iDAAA,YAAA,GAAA,EAAkD,QAAQ,G,I,G,C,ECA/F,GAAiB,IAAA,IAAoB,wDAAA,YAAA,GAAA,EAAyD,QAAQ,GpBiC/F,MAAM,GAAY,CACvB,SAAA,IAAA,IAAA,IACA,YAAa,IAAI,IAAI,CACnB,CAAC,S,I,I,IAA4D,CAC7D,CAAC,Y,I,I,IAAkE,CACnE,CAAC,Q,I,I,IAA0D,CAC3D,CAAC,U,I,I,IAA+D,CAChE,CAAC,S,I,I,IAA4D,CAC7D,CAAC,Q,I,I,IAA0D,CAC3D,CAAC,U,I,I,IAA8D,CAC/D,CAAC,U,I,I,IAA8D,CAChE,EACD,eAAA,IAAA,IAAA,IACA,QAAA,IAAA,IAAA,IACA,MAAA,IAAA,IAAA,IAIA,WAAA,IAAA,IAAA,IACA,eAAA,IAAA,IAAA,IACA,kBAAmB,IAAI,IAAI,CACzB,CAAC,Q,I,I,IAA+D,CAChE,CACE,e,I,I,IAED,CACD,CAAC,O,I,I,IAA0E,CAC3E,CAAC,W,I,I,IAAqE,CACtE,CAAC,M,I,I,IAAuE,CACzE,CACH,E,I,G,C,EqB/DA,GAAiB,IAAA,IAAoB,wCAAA,YAAA,GAAA,EAAyC,QAAQ,GrBoE/E,MAAM,GAAc,CACzB,K,C,EAAM,K,E,U,C,E,O,C,EACN,WAAA,IAAA,IAAA,GACF,ELPO,SAAS,GAAmB,CAAG,CAAE,CAAa,EACnD,OAAO,AAAA,GAAgB,GAAK,IAAI,CAAC,AAAC,QAC5B,EACA,EACJ,GAAI,EACF,KCqX8B,EAE9B,EADJ,GAAc,KAAK,GAGnB,EAAS,GAFL,EAAS,ADvXY,ECuXP,UAAU,CAAC,MAAO,IAEC,IACjC,GAAS,KACX,CAAA,EAAS,GAAoB,EAAQ,EAAQ,GAAG,CAAA,EAGlD,EAAS,GAAoB,EAAQ,IACrC,EAAS,GAAoB,EAAQ,IACrC,EAAS,GAAoB,EAAQ,IACrC,EAAS,GAAoB,EAAQ,IACrC,EAAS,GAAoB,EAAQ,IACrC,EAAS,GAAoB,EAAQ,IAEjC,GAAS,MACX,CAAA,EAAS,GAAoB,EAAQ,EAAQ,IAAI,CAAA,EDtY/C,ECwYG,GAAc,SAAS,CAAC,EDzY7B,MAGE,EAAO,AAAA,EAAI,CAAC,wBAAwB,EAAE,EAAI,QAAQ,GAAG,CAAC,CAGxD,IAAM,EAAY,AAAA,GAAc,MAAO,CACrC,UAAW,kBACX,KAAM,EACN,KAAM,CACR,GACA,OAAO,AAAA,GAAG,kBAAkB,CAAC,EAAW,CACtC,cAAe,EACf,IAAK,CAAA,CACP,EACF,EACF,CTlBA,MAAM,GAAU,CACd,UAAW,EACX,oBAAqB,EACrB,iBAAkB,EAClB,aAAc,CAChB,EAGA,IAAI,GAAiB,CAAA,CASrB,OAAM,GAEJ,CAAC,EAAK,AAAC,AAEP,EAAC,EAAQ,AAAC,AAEV,EAAC,EAAgB,AAAC,AAElB,EAAC,EAAO,AAAC,AAET,EAAC,EAAW,AAAC,AAEb,EAAC,EAAe,AAAC,AASjB,aAAY,CAAK,CAAE,CAAO,CAAE,CAAW,CAAE,CAAe,CAAE,CACxD,IAAI,CAAC,CAAC,EAAK,CAAG,EACd,IAAI,CAAC,CAAC,EAAO,CAAG,EAChB,IAAI,CAAC,CAAC,EAAW,CAAG,EACpB,IAAI,CAAC,CAAC,EAAe,CAAG,CAC1B,CAOA,CAAC,EAAkB,CAAC,CAAY,EAC9B,GAAI,IAAI,CAAC,CAAC,EAAK,CAAC,QAAQ,GAAK,AAAA,GAAS,IAAI,CAAE,CAC1C,GAAI,IAAI,CAAC,CAAC,EAAe,CACvB,OAAO,CACF,EACL,IAAM,EAAc,IAAI,CAAC,CAAC,EAAO,CAAC,gBAAgB,CAAC,EAAU,QAAQ,EAKrE,GAAI,AAHF,EAAa,kBAAkB,CAAC,GAAe,GAE/C,AApEsB,IAoEtB,IAAI,CAAC,CAAC,EAAK,CAAC,eAAe,CAE3B,OAAO,IAAI,CAAC,CAAC,EAAO,CAAC,gBAAgB,CAAC,EAAU,QAAQ,CAE5D,CACF,CAEA,OAAO,IAAI,CAAC,CAAC,EAAqB,CAChC,EACA,IAAI,CAAC,CAAC,EAAK,CAAC,eAAe,CAE/B,CAKA,eAAgB,CACd,IAAI,CAAC,CAAC,EAAgB,CAAG,AAAA,EAAS,IAAI,CAAC,IAAI,CAAC,CAAC,EAAK,CAAC,QAAQ,EAC3D,IAAM,EAAe,IAAI,CAAC,CAAC,EAAO,CAAC,gBAAgB,CAAC,IAAI,CAAC,CAAC,EAAK,CAAC,QAAQ,EAClE,EAAgB,IAAI,CAAC,CAAC,EAAkB,CAAC,GAE/C,GACE,CAAC,EAAc,UAAU,CAAC,IAC1B,IAAI,CAAC,CAAC,EAAO,CAAC,mBAAmB,CAAC,GAClC,CACA,IAAI,CAAC,CAAC,EAAW,CAAC,KAAK,CAAG,IAAI,CAAC,CAAC,EAAK,CACrC,IAAI,EAAY,IAAI,CAAC,CAAC,EAAW,CAAC,kBAAkB,CAClD,EACA,EACA,IAAI,CAAC,CAAC,EAAK,CAAC,eAAe,CAEzB,CAAA,EAAU,MAAM,CAAG,IACrB,IAAI,CAAC,CAAC,EAAQ,CAAG,IAAI,GACnB,CAAE,KAAM,EAAW,MAAO,GAAI,EAC9B,IAAI,CAAC,CAAC,EAAK,CAAC,MAAM,CAAC,QAAQ,EAE7B,IAAI,CAAC,CAAC,EAAiB,CAAC,CAAS,CAAC,EAAU,MAAM,CAAG,EAAE,EAE3D,CACF,CAQA,CAAC,EAAqB,CAAC,CAAW,CAAE,CAAW,EAC7C,IAAM,EAAI,EACR,EAAY,CAAC,CAAG,EAChB,EAAY,CAAC,CAAG,GAEZ,EAAI,EACR,EAAY,CAAC,CAAG,EAChB,EAAY,CAAC,CAAG,GAEZ,EAAO,IAAI,CAAC,CAAC,EAAO,CAAC,cAAc,GACzC,OAAO,IAAI,EACT,EAAW,EAAG,EAAG,EAAK,KAAK,CAAG,GAC9B,EAAW,EAAG,EAAG,EAAK,MAAM,CAAG,GAEnC,CAMA,CAAC,EAAiB,CAAC,CAAQ,EACzB,IAAM,EAAe,IAAI,CAAC,CAAC,EAAO,CAAC,gBAAgB,CAAC,IAAI,CAAC,CAAC,EAAK,CAAC,QAAQ,CACxE,CAAA,IAAI,CAAC,CAAC,EAAK,CAAC,QAAQ,CAAG,EACvB,IAAM,EAAe,IAAI,CAAC,CAAC,EAAO,CAAC,gBAAgB,CAAC,IAAI,CAAC,CAAC,EAAK,CAAC,QAAQ,EACxE,IAAI,CAAC,CAAC,EAAO,CAAC,0BAA0B,CACtC,IAAI,CAAC,CAAC,EAAK,CACX,EACA,EAEJ,CAIA,CAAC,EAAe,GACd,IAAI,CAAC,CAAC,EAAiB,CAAC,IAAI,CAAC,CAAC,EAAgB,CAChD,CAMA,QAAS,OAGP,CAFA,IAAI,CAAC,CAAC,EAAe,GACrB,IAAI,CAAC,CAAC,EAAc,GAChB,IAAI,CAAC,CAAC,EAAQ,EACT,IAAI,CAAC,CAAC,EAAQ,CAAC,wBAAwB,CAAC,IAAI,CAAC,CAAC,EAAK,CAAC,MAAM,EAE5D,QAAQ,OAAO,EACxB,CAKA,CAAC,EAAc,GACb,GAAI,IAAI,CAAC,CAAC,EAAK,CAAC,SAAS,GAAI,CAC3B,IAAM,EAAc,AAAA,GAAW,IAAI,CAAC,CAAC,EAAK,CAAC,YAAY,CACvD,CAAA,EAAY,QAAQ,CAAG,IAAI,CAAC,CAAC,EAAgB,CAC7C,EAAY,eAAe,CAAG,EAC9B,AAAA,GAAM,QAAQ,CAAC,EACjB,CACF,CACF,CAKA,MAAM,GAEJ,CAAC,EAAO,AAAC,AAET,EAAC,EAAW,AAAC,AAEb,EAAC,EAAM,AAAC,AAER,EAAC,EAAe,AAAC,AAOjB,aAAY,CAAO,CAAE,CAAW,CAAE,CAAe,CAAE,CACjD,IAAI,CAAC,CAAC,EAAM,CAAG,EAAE,CACjB,IAAI,CAAC,CAAC,EAAO,CAAG,EAChB,IAAI,CAAC,CAAC,EAAW,CAAG,EACpB,IAAI,CAAC,CAAC,EAAe,CAAG,CAC1B,CAOA,gBAAgB,CAAK,CAAE,CACrB,GAAI,AAA0B,IAA1B,EAAM,eAAe,CACvB,OAEF,IAAM,EAAkB,IAAI,GAC1B,EACA,IAAI,CAAC,CAAC,EAAO,CACb,IAAI,CAAC,CAAC,EAAW,CACjB,IAAI,CAAC,CAAC,EAAe,EAEvB,EAAgB,aAAa,GAC7B,IAAI,CAAC,CAAC,EAAM,CAAC,IAAI,CAAC,EACpB,CAMA,QAAS,CACP,IAAM,EAAW,EAAE,CAEnB,OADA,IAAI,CAAC,CAAC,EAAM,CAAC,OAAO,CAAC,AAAC,GAAU,EAAS,IAAI,CAAC,EAAM,MAAM,KACnD,QAAQ,GAAG,CAAC,EACrB,CACF,CAKA,MAAM,GACJ,aAAc,CAAC,CAMf,MAAM,aAAa,CAAK,CAAE,CACxB,MAAM,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,KACvB,GAAe,EACR,EAAM,OAAO,IAExB,CAMA,SAAU,CACR,OAAO,QAAQ,OAAO,EACxB,CAQA,QAAQ,CAAa,CAAE,CACrB,OAAO,QAAQ,OAAO,CAAC,KACzB,CAKA,QAAS,CACP,OAAO,QAAQ,OAAO,CAAC,KACzB,CACF,CAyBA,MAAM,WAAmB,GACvB,SAAU,CACR,MAAO,AE5TJ,CAAA,WACL,IAAM,EAAgB,IAAI,GAAoB,CAC5C,UAAW,AAAA,EAAI,CAAC,qBAAqB,CAAC,CACtC,UAAW,gBACX,cAAe,CAAA,EACf,OAAQ,gBACV,GACM,EAAa,IAAI,GAAoB,CACzC,UAAW,AAAA,EAAI,CAAC,kBAAkB,CAAC,CACnC,UAAW,gBACX,cAAe,CAAA,EACf,OAAQ,aACV,GACM,EAAW,IAAI,GAAoB,CACvC,UAAW,AAAA,EAAI,CAAC,eAAe,CAAC,CAChC,UAAW,oBACX,cAAe,CAAA,EACf,OAAQ,IAAM,ACOX,CAAA,WACL,IAAM,EAAW,EAAE,CAInB,OAHA,GAAS,OAAO,CAAC,AAAC,IAChB,EAAS,IAAI,CAAC,A1B+PX,SAAuB,CAAU,EACtC,IAAI,EACJ,OAAQ,EAAW,WAAW,EAC5B,KAAK,GAAY,QAAQ,CACvB,EAAU,IAAI,GAAgB,GAC9B,KACF,MAAK,GAAY,KAAK,CACpB,EAAU,IAAI,GAAa,GAC3B,KACF,MAAK,GAAY,WAAW,CAC1B,EAAU,IAAI,GAAkB,GAChC,KACF,SACE,MAAM,AAAI,MACR,CAAC,4CAA4C,EAAE,EAAW,WAAW,CAAC,CAAC,CAE7E,CACA,OAAO,CACT,E0BjRgC,GAC9B,GACO,AAAA,GAAG,kBAAkB,CAAC,AAAA,EAAI,CAAC,qBAAqB,CAAC,CAAE,CACxD,cAAe,EACf,UAAW,MACb,EACF,CAAA,GDfE,GACM,EAAgB,IAAI,GAAoB,CAC5C,UAAW,AAAA,EAAI,CAAC,qBAAqB,CAAC,CACtC,UAAW,0BACX,cAAe,CAAA,EACf,OAAQ,IAAM,AEzBX,CAAA,WACL,IAAM,EAAgB,AAAA,KAChB,EAAY,GAAyB,MAAO,CAChD,UAAW,gBACb,GACA,GAAI,EAAe,CACjB,IAAM,EAAO,SAAS,aAAa,CAAC,MACpC,EAAU,WAAW,CAAC,GACtB,EAAK,WAAW,CACd,GAAyB,KAAM,CAC7B,KAAM,AAAA,EAAI,CAAC,KAAK,EAAE,EAAc,IAAI,CAAC,CAAC,AACxC,IAEF,EAAK,WAAW,CACd,GAAyB,KAAM,CAC7B,KAAM,AAAA,EAAI,CAAC,KAAK,EAAE,EAAc,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,AACnD,IAEF,EAAK,WAAW,CACd,GAAyB,KAAM,CAC7B,KAAM,AAAA,EAAI,CAAC,gBAAgB,EAAE,EAAc,cAAc,CAAC,CAAC,AAC7D,IAEF,EAAK,WAAW,CACd,GAAyB,KAAM,CAC7B,KAAM,AAAA,EAAI,CAAC,WAAW,EAAE,EAAc,GAAG,CAAC,CAAC,AAC7C,IAEF,EAAK,WAAW,CACd,GAAyB,KAAM,CAC7B,KAAM,AAAA,EAAI,CAAC,cAAc,EAAE,EAAc,YAAY,CAAC,CAAC,AACzD,GAEJ,MACE,EAAU,WAAW,CACnB,GAAyB,IAAK,CAC5B,KAAM,AAAA,EAAI,CAAC,0BAA0B,CAAC,AACxC,IAIJ,OAAO,AAAA,GAAG,mBAAmB,CAAC,AAAA,EAAI,CAAC,2BAA2B,CAAC,CAAE,EACnE,CAAA,GFhBE,GACM,EAAS,IAAI,GAAoB,CACrC,UAAW,AAAA,EAAI,CAAC,aAAa,CAAC,CAC9B,UAAW,kBACX,cAAe,CAAA,EACf,OAAQ,IAAM,AO/BX,CAAA,WACL,IAAM,EAAQ,IAAI,GAAkB,CAClC,MAAO,AAAA,EAAI,CAAC,YAAY,CAAC,CACzB,OAAQ,IAAM,GAAmB,AAAA,GAAU,QAAQ,CACrD,GAEM,EAAO,IAAI,GAAkB,CACjC,MAAO,AAAA,EAAI,CAAC,WAAW,CAAC,CACxB,OAAQ,IAAM,GAAmB,AAAA,GAAU,OAAO,CACpD,GAEM,EAAU,IAAI,GAAkB,CACpC,MAAO,AAAA,EAAI,CAAC,cAAc,CAAC,CAC3B,OAAQ,IAAM,GAAmB,AAAA,GAAU,UAAU,CACvD,GACA,OAAO,GAAmB,AAAA,GAAU,cAAc,CAAE,CAAC,EAAM,EAAO,EAAQ,CAC5E,CAAA,GPgBE,GACA,OAAO,AAAA,GAAG,kBAAkB,CAAC,AAAA,EAAI,CAAC,eAAe,CAAC,CAAE,CAClD,cAAe,CAAC,EAAQ,EAAU,EAAe,EAAe,EAAW,CAC3E,UAAW,MACb,EACF,CAAA,IFyR0B,IAAI,CAAC,AAAC,IAC1B,GAAiB,AAAa,gBAAb,EACV,IAAI,CAAC,YAAY,CAAC,IAAI,KAEjC,CACF,CAIA,MAAM,WAAgB,GACpB,SAAU,CAGR,OAFA,AAAA,EAAI,GAAG,CAAC,iBAED,IAAI,CAAC,CAAC,EAA4B,GACtC,IAAI,CAAC,AAAC,QAED,EADJ,IAAM,EAAO,EAAU,MAAM,CAAC,GAAG,CAAC,QASlC,OAJE,EAHG,GAEM,EACC,AAAA,EAAI,CAAC,+BAA+B,EAAE,EAAK,CAAC,CAE5C,AAAA,EAAI,CAAC,sBAAsB,EAAE,EAAK,CAAC,CAJnC,AAAA,EAAI,CAAC,6BAA6B,EAAE,EAAK,GAAG,CAAC,CAMlD,AAAA,GAAG,YAAY,CAAC,EAAS,CAC9B,cAAe,AAAA,EAAI,CAAC,oBAAoB,CAAC,CACzC,UAAW,MACb,EACF,GACC,IAAI,CAAC,AAAC,IACL,EAAU,MAAM,CAAC,QAAQ,CACvB,AAAA,GAAM,UAAU,GAAG,6BAA6B,GAC3C,IAER,IAAI,CAAC,AAAC,GACL,AAAI,EAAM,KAAK,CACN,AAAA,GAAG,YAAY,CAAC,EAAM,KAAK,CAAE,CAAE,UAAW,MAAO,GAExD,KAAA,GAGH,IAAI,CAAC,IAAM,GAAa,YAAY,CAAC,IAAI,IAC9C,CAOA,CAAC,EAA4B,GAC3B,IAAM,EAAY,GAAiB,AKtRhC,WACL,IAAM,EAAY,A1B9CL,G0B8CqB,GAAG,CAAC,cACtC,GAAI,CAAC,EAAW,CACd,AAAA,EAAI,IAAI,CAAC,mCACT,MACF,CACA,GAAI,CAAC,EAAU,IAAI,CAAC,KAAK,CAAE,CACzB,AAAA,EAAI,IAAI,CAAC,+CACT,MACF,CACA,EAAU,IAAI,CAAC,YAAY,CAAC,YAAY,CAAG,EAAE,CAC7C,EAAU,IAAI,CAAC,YAAY,CAAC,IAAI,CAAG,AAAA,GACjC,EAAU,IAAI,CAAC,YAAY,CAAC,MAAM,EAEpC,IAAM,EAAY,AAAA,GAChB,EAAU,IAAI,CAAC,YAAY,CAC3B,EAAU,IAAI,CAAC,YAAY,EAc7B,OAZA,EAAU,IAAI,CAAC,eAAe,CAAC,OAAO,CAAC,AAAC,IACtC,EAAQ,YAAY,CAAC,IAAI,CAAG,AAAA,GAAkB,EAAQ,YAAY,CAAC,MAAM,EACzE,IAAM,EAAW,AAAA,GAAc,EAAQ,YAAY,CAAE,EAAQ,YAAY,EACnE,EAAQ,EAAU,YAAY,CAAC,gBAAgB,CAAC,EAAQ,WAAW,EACzE,GAAI,CAAC,EAAO,CACV,AAAA,EAAI,KAAK,CACP,CAAC,8BAA8B,EAAE,EAAQ,WAAW,CAAC,yBAAyB,CAAC,EAEjF,MACF,CACA,EAAM,GAAG,CAAC,EACZ,GACO,CAAE,KAAM,EAAW,WAAY,EAAU,UAAU,AAAC,CAC7D,ILuP4D,YACxD,AAAI,EACK,AAAA,GAAc,sBAAsB,CACzC,EAAU,UAAU,CACpB,EAAU,IAAI,EACd,IAAI,CAAC,IAAM,CAAA,GAEN,AAAA,GAAc,kBAAkB,GAAG,IAAI,CAAC,IAAM,CAAA,EAEzD,CACF,CAKA,MAAM,WAAmB,GACvB,MAAM,SAAU,CACd,AAAA,EAAI,GAAG,CAAC,oBACJ,IACF,AAAA,GAAc,GAEhB,AAAA,GAAc,YAAa,CACzB,UAAW,EACX,aAAc,EACd,SAAU,EAAU,QAAQ,CAC5B,SAAU,IAAI,EAAS,EAAG,KAAM,EAClC,GACA,MAAM,AC/YD,IAAI,QAAQ,AAAC,IAClB,WAAW,IAAM,IAAW,IAC9B,GD8YK,IAAI,CAAC,IACJ,AAAA,GAAG,YAAY,CAAC,AAAA,EAAI,CAAC,cAAc,CAAC,CAAE,CACpC,cAAe,AAAA,EAAI,CAAC,gBAAgB,CAAC,AACvC,IAED,IAAI,CAAC,IAAM,AAAA,GAAc,kBAAkB,IAC3C,IAAI,CAAC,IAAM,IAAI,CAAC,YAAY,CAAC,IAAI,IACtC,CACF,CAKA,MAAM,WAAwB,GAC5B,MAAM,SAAU,CACd,AAAA,EAAI,GAAG,CAAC,yBACJ,IACF,AAAA,GAAc,GAEhB,MAAM,AAAA,GAAG,YAAY,CAAC,AAAA,EAAI,CAAC,eAAe,CAAC,CAAE,CAC3C,cAAe,AAAA,EAAI,CAAC,gBAAgB,CAAC,AACvC,GACG,IAAI,CAAC,IAAM,AAAA,GAAc,kBAAkB,IAC3C,IAAI,CAAC,IAAM,IAAI,CAAC,YAAY,CAAC,IAAI,IACtC,CACF,CAKA,MAAM,WAAqB,GACzB,aAAc,CACZ,KAAK,EACP,CAKA,MAAM,SAAU,CACd,MAAM,KAAK,CAAC,UACZ,AAAA,EAAI,GAAG,CAAC,sBACR,MAAM,IACR,CAOA,MAAM,QAAQ,CAAO,CAAE,CAAK,CAAE,EAAS,CAAC,CAAC,CAAE,CACzC,OAAQ,GACN,KAAK,GAAQ,mBAAmB,CAC9B,CACE,IAAM,EAAS,MAAM,GACnB,EAAO,MAAM,CACb,EAAO,QAAQ,CAEb,CAAA,IAAW,AAAA,GAAiB,aAAa,CAC3C,MAAM,GAAS,GACN,IAAW,AAAA,GAAiB,aAAa,CAClD,MAAM,GAAoB,EAAO,QAAQ,EAEzC,MAAM,GAAgB,EAAO,CAC3B,cACE,EAAO,MAAM,GAAK,AAAA,GAAiB,qBAAqB,AAC5D,GAEE,AAAkC,IAAlC,EAAU,MAAM,CAAC,GAAG,CAAC,KAAM,GAC7B,IAAI,CAAC,YAAY,CAAC,IAAI,IAEtB,IAAI,CAAC,YAAY,CAAC,IAAI,GAE1B,CAEA,KACF,MAAK,GAAQ,gBAAgB,CAC3B,MAAM,AAAA,GAAG,YAAY,CAAC,AAAA,EAAI,CAAC,sBAAsB,CAAC,EAClD,KACF,MAAK,GAAQ,YAAY,CACvB,AAAA,EAAI,GAAG,CAAC,YACR,MAAM,GAAgB,EAAO,CAAE,cAAe,CAAA,CAAM,GACjD,IAAI,CAAC,IAAM,AAAA,GAAG,YAAY,CAAC,AAAA,EAAI,CAAC,iBAAiB,CAAC,GAClD,IAAI,CAAC,IAAM,GAAe,IAAI,EAErC,CACA,OAAO,QAAQ,OAAO,CAAC,KACzB,CACF,CAKA,MAAM,WAA4B,GAChC,aAAc,CACZ,KAAK,EACP,CAKA,MAAM,SAAU,CACd,MAAM,KAAK,CAAC,UACZ,AAAA,EAAI,GAAG,CAAC,6BACR,MAAM,IACR,CAOA,MAAM,QAAQ,CAAO,CAAE,CAAK,CAAE,EAAS,CAAC,CAAC,CAAE,CACzC,OAAQ,GACN,KAAK,GAAQ,mBAAmB,CAC9B,CACE,IAAM,EAAS,MAAM,GACnB,EAAO,MAAM,CACb,EAAO,QAAQ,CAEb,CAAA,IAAW,AAAA,GAAiB,aAAa,CAC3C,MAAM,GAAS,GACN,IAAW,AAAA,GAAiB,aAAa,CAClD,MAAM,GAAoB,EAAO,QAAQ,EAEzC,MAAM,IAAI,CAAC,CAAC,EAAc,CAAC,EAAO,CAChC,cACE,EAAO,MAAM,GAAK,AAAA,GAAiB,qBAAqB,AAC5D,GAEE,AAAkC,IAAlC,EAAU,MAAM,CAAC,GAAG,CAAC,KAAM,GAC7B,IAAI,CAAC,YAAY,CAAC,IAAI,IAEtB,AAAyD,IAAzD,AAAA,GAAM,UAAU,GAAG,eAAe,CAAC,GAAW,MAAM,CAEpD,IAAI,CAAC,YAAY,CAAC,IAAI,IAEtB,IAAI,CAAC,YAAY,CAAC,IAAI,GAE1B,CAEA,KACF,MAAK,GAAQ,gBAAgB,CAC3B,AAAA,GAAG,YAAY,CAAC,AAAA,EAAI,CAAC,sBAAsB,CAAC,EAC5C,KACF,MAAK,GAAQ,YAAY,CACvB,MAAM,IAAI,CAAC,CAAC,EAAc,CAAC,EAAO,CAAE,cAAe,CAAA,CAAM,GAAG,IAAI,CAC9D,AAAC,GACC,AAAI,EACK,AAAA,GAAG,YAAY,CACpB,AAAA,EAAI,CAAC,gCAAgC,CAAC,EACtC,IAAI,CAAC,IAAM,GAAe,IAAI,GAEzB,QAAQ,OAAO,GAKhC,CACA,OAAO,QAAQ,OAAO,CAAC,KACzB,CASA,CAAC,EAAc,CAAC,CAAK,CAAE,EAAU,CAAE,cAAe,CAAA,CAAK,CAAC,EACtD,IAAM,EAAU,AAAA,GAAM,UAAU,GAC1B,EAAY,EAAQ,eAAe,CAAC,GACtC,EAAmB,CAAA,EACvB,IAAK,IAAM,KAAY,EACrB,GAAI,EAAS,KAAK,EAAI,EAAS,WAAW,CAAC,gBAAgB,CAAC,GAAY,CACtE,EAAmB,CAAA,EACnB,KACF,CAEF,IAAM,EAAmB,EAAQ,gBAAgB,CAAC,EAAU,QAAQ,EAC9D,EAAkB,EAAQ,gBAAgB,CAAC,GAC3C,EAAW,EAAiB,kBAAkB,CAAC,GAIrD,OAHI,GAAoB,GA5iBQ,GA6iB9B,CAAA,EAAU,WAAW,CAAG,CAAA,CAD1B,EAGO,GAAgB,EAAO,GAAS,IAAI,CAAC,IAAM,CAAA,EACpD,CACF,CAEA,MAAM,WAAyB,GAC7B,aAAc,CACZ,KAAK,EACP,CACA,MAAM,SAAU,CACd,MAAM,KAAK,CAAC,UACZ,AAAA,EAAI,GAAG,CAAC,0BACR,MAAM,KACN,IAAM,EAAU,AAAA,GAAM,UAAU,GAE1B,EAAc,IAAI,GAAY,GAC9B,EAAW,IAAI,GACnB,EACA,EACA,EAAU,WAAW,EAEvB,IAAK,IAAM,KAAS,AAAA,GAAM,SAAS,GAAG,MAAM,GACtC,IAAU,GAAa,EAAM,KAAK,EAChC,CAAA,CAAC,EAAM,WAAW,IAAM,GAAc,GAAK,CAAA,GAC7C,EAAS,eAAe,CAAC,GAI/B,IAAK,IAAM,KAAS,AAAA,GAAM,gBAAgB,GAAG,MAAM,GAC7C,EAAM,KAAK,EACb,EAAS,eAAe,CAAC,GAM7B,IAAK,IAAM,KAHX,MAAM,EAAS,MAAM,GAEA,EAAQ,eAAe,CAAC,IAE3C,GAAI,EAAM,OAAO,GAEf,OADA,IAAI,CAAC,YAAY,CAAC,IAAI,IACf,QAAQ,OAAO,CAAC,MAI3B,IAAI,CAAC,YAAY,CAAC,IAAI,GACxB,CACF,CAEA,MAAM,WAAgC,GACpC,aAAc,CACZ,KAAK,EACP,CACA,MAAM,SAAU,CACd,MAAM,KAAK,CAAC,UACZ,AAAA,EAAI,GAAG,CAAC,iCACR,MAAM,KACN,IAAM,EAAU,AAAA,GAAM,UAAU,GAE1B,EAAc,IAAI,GAAY,GAC9B,EAAW,IAAI,GACnB,EACA,EACA,EAAU,WAAW,EAEjB,EAAe,EAAQ,eAAe,CAAC,GAC7C,IAAK,IAAM,KAAS,AAAA,GAAM,SAAS,GAAG,MAAM,GACtC,IAAU,GAAa,EAAM,KAAK,EAAI,EAAM,WAAW,GACrD,EAAa,QAAQ,CAAC,IAAU,EAAM,YAAY,GACpD,MAAM,EAAM,WAAW,CAAC,KAAK,CAAC,GAE9B,EAAS,eAAe,CAAC,IAI/B,IAAK,IAAM,KAAS,AAAA,GAAM,gBAAgB,GAAG,MAAM,GAC7C,EAAM,KAAK,EACb,EAAS,eAAe,CAAC,GAa7B,OAVA,MAAM,EAAS,MAAM,GAEjB,AAAkC,IAAlC,EAAU,MAAM,CAAC,GAAG,CAAC,KAAM,GAC7B,IAAI,CAAC,YAAY,CAAC,IAAI,IACb,AAAwB,IAAxB,EAAa,MAAM,CAC5B,IAAI,CAAC,YAAY,CAAC,IAAI,IAEtB,IAAI,CAAC,YAAY,CAAC,IAAI,IAGjB,QAAQ,OAAO,CAAC,KACzB,CACF,CAMA,SAAS,KACP,EAAU,WAAW,CAAG,CAAA,EACxB,IAAM,EAAU,AAAA,GAAM,UAAU,GAC1B,EAAS,IAAI,GAAY,EAAS,GAAW,gBAAgB,CACjE,EAAQ,gBAAgB,CAAC,EAAU,MAAM,CAAC,QAAQ,EAClD,EAAU,eAAe,EAK3B,OAHA,EAAQ,iBAAiB,CAAC,GAC1B,EAAQ,iBAAiB,CAAC,EAAQ,eAAe,CAAC,IAClD,EAAQ,kBAAkB,CAAC,EAAU,QAAQ,EACtC,QAAQ,OAAO,CAAC,KACzB,CASA,SAAS,GAAgB,CAAK,CAAE,EAAU,CAAE,cAAe,CAAA,CAAK,CAAC,MAE3D,EADJ,IAAM,EAAU,AAAA,GAAM,UAAU,SAShC,CANE,EADE,EAAQ,aAAa,CACX,EAAQ,wBAAwB,CAAC,GAEjC,CAAC,EAAU,QAAQ,CAAE,EAAM,CAEzC,EAAQ,iBAAiB,CAAC,MAC1B,EAAQ,iBAAiB,CAAC,MACtB,GAKK,AAJU,IAAI,GACnB,CAAE,KAAM,EAAW,MAAO,GAAI,EAC9B,EAAU,MAAM,CAAC,QAAQ,EAEX,wBAAwB,CAAC,EAAU,MAAM,EAElD,QAAQ,OAAO,EAE1B,CAMA,SAAS,KACP,IAAM,EAAU,AAAA,GAAM,UAAU,GAC1B,EAAW,EAAE,CAUnB,OATA,AAAA,GAAM,gBAAgB,GAAG,OAAO,CAAC,AAAC,IAEhC,AADqB,EAAQ,mBAAmB,CAAC,GACpC,OAAO,CAAC,AAAC,IAChB,EAAM,KAAK,EAAI,CAAC,EAAM,SAAS,IAAM,EAAQ,WAAW,EAC1D,EAAS,IAAI,CAAC,EAAQ,WAAW,CAAC,KAAK,CAAC,GAE5C,EACF,GAEO,QAAQ,GAAG,CAAC,EACrB,CAMA,SAAS,GAAS,CAAK,EAIrB,IAAM,EAAU,AADH,AADG,AAAA,GAAM,UAAU,GACX,mBAAmB,CAAC,GACpB,YAAY,GAC3B,EAAW,EAAE,CACnB,IAAK,IAAM,KAAU,EAAQ,MAAM,GAC7B,EAAO,WAAW,EACpB,EAAS,IAAI,CAAC,EAAO,WAAW,CAAC,KAAK,CAAC,IAG3C,OAAO,QAAQ,GAAG,CAAC,EACrB,CAOA,SAAS,GAAe,CAAY,QAIlC,CAHI,IACF,AAAA,GAAc,GAEX,AAAA,GAAc,kBAAkB,IAG9B,AAAA,GAAc,kBAAkB,GACpC,IAAI,CAAC,IAAM,AlB8kBT,CAAA,SAAwB,CAAS,EACtC,IAAM,EAAmB,GAAyB,OAClD,EAAiB,WAAW,CAC1B,GAAyB,IAAK,CAC5B,KAAM,AAAA,EAAI,CAAC,mBAAmB,CAAC,AACjC,IAEF,IAAM,EAAW,GAAyB,MAY1C,OAXA,EAAiB,WAAW,CAAC,GAC7B,EAAS,WAAW,CAClB,GAAyB,KAAM,CAC7B,KAAM,AAAA,EAAI,CAAC,eAAe,E0D11CK,E1D01C6B,CAAC,E0D51C/B,E1D41CgE,CAAC,AACjG,IAEF,EAAS,WAAW,CAClB,GAAyB,KAAM,CAC7B,KAAM,AAAA,EAAI,CAAC,cAAc,E0Dh2CK,E1Dg2C4B,CAAC,E0Dl2C9B,E1Dk2C8D,CAAC,AAC9F,IAEK,GAAuB,EAAW,CACvC,iBAAkB,CAAA,EAClB,UAAW,CAAA,EACX,YAAa,EACb,cAAe,AAAA,EAAI,CAAC,mBAAmB,CAAC,AAC1C,EACF,CAAA,EkBvmB4C,IACvC,IAAI,CAAC,IAAM,AAAA,GAAc,iBAAiB,IAC1C,IAAI,CAAC,AAAC,IACL,EAAU,MAAM,CAAC,QAAQ,CACvB,AAAA,GAAM,UAAU,GAAG,6BAA6B,GAC3C,IAER,IAAI,CAAC,AAAC,GACL,AAAI,EAAM,KAAK,CACN,AAAA,GAAG,YAAY,CAAC,EAAM,KAAK,CAAE,CAAE,UAAW,MAAO,GAExD,KAAA,GAGH,IAAI,CAAC,IAAM,EAAa,YAAY,CAAC,IAAI,KAjBnC,EAAa,YAAY,CAAC,IAAI,GAkBzC,CAOA,SAAS,GAAoB,CAAQ,SACnC,AAAK,EAID,EAAS,gBAAgB,GACpB,AAAA,GAAG,YAAY,CAAC,AAAA,EAAI,CAAC,wBAAwB,CAAC,EAGhD,GAAoC,EAAU,CACnD,iBAAkB,EAAS,MAAM,GACjC,cAAe,EAAS,MAAM,EAChC,IAVE,AAAA,EAAI,KAAK,CAAC,4CACH,QAAQ,OAAO,GAU1B,CAwBA,SAAS,GAAmB,CAAM,CAAE,CAAQ,EAC1C,GAAI,IAAW,AAAA,GAAiB,qBAAqB,CAAE,CACrD,GAAI,GAAU,mBAAoB,CAChC,IAAM,EAAiB,EAAS,YAAY,CAAC,sBAAsB,GAEnE,OAAO,AADU,GAAgB,SAE7B,AAAA,GAAiB,aAAa,CAC9B,AAAA,GAAiB,aAAa,AACpC,CAEA,OAAO,AAAA,GAAG,gBAAgB,CACxB,AAAA,EAAI,CAAC,oBAAoB,CAAC,CAC1B,AAAA,EAAI,CAAC,sBAAsB,CAAC,CAC5B,CAAC,AAAA,EAAI,CAAC,iBAAiB,CAAC,CAAE,AAAA,EAAI,CAAC,aAAa,CAAC,CAAC,EAC9C,IAAI,CAAC,AAAC,GACN,AAAI,AAAW,IAAX,EACK,AAAA,GAAiB,aAAa,CAE9B,AAAA,GAAiB,aAAa,CAG3C,CACA,OAAO,CACT,CAyBA,IAAI,GAAe,IAjkBnB,cAA6B,GAC3B,SAAU,CACR,AAAA,EAAI,GAAG,CAAC,uBACV,CAOA,MAAM,QAAQ,CAAO,CAAE,CAAW,CAAE,CAAY,CAAE,CAC5C,IAAY,GAAQ,SAAS,EAC/B,IAAI,CAAC,YAAY,CAAC,IAAI,GAE1B,CACF,EAujBI,GAAe,CAAA,EAYnB,IAAA,GAPqB,CACnB,QAAS,GACT,aAhCF,WACE,OAAO,CACT,EA+BE,QAzBF,SAAiB,CAAK,EACpB,EAAY,CACd,EAwBE,aA9EF,SAAsB,CAAO,CAAE,CAAM,CAAE,CAAM,EAC3C,GAAI,GAAc,CAChB,AAAA,EAAI,KAAK,CAAC,CAAC,eAAe,EAAE,EAAQ,mCAAmC,CAAC,EACxE,MACF,CACA,GAAe,CAAA,EACf,GAAa,OAAO,CAAC,EAAS,EAAQ,GAAQ,IAAI,CAAC,KACjD,GAAe,CAAA,CACjB,EACF,CAsEA,EoCx3BA,SAAS,GAAiB,CAAS,EACjC,MAAO,CACL,KAAM,AAAA,GAAS,MAAM,CACrB,QAAS,CAAC,EAAQ,EAAO,IACvB,AAAA,GAAa,YAAY,CACvB,AAAA,GAAa,OAAO,CAAC,mBAAmB,CACxC,EACA,GAEJ,MAAO,CACT,CACF,CAMA,SAAS,GAAmB,CAAS,EACnC,MAAO,CACL,KAAM,AAAA,GAAS,QAAQ,CACvB,QAAS,CAAC,EAAQ,EAAO,IACvB,AAAA,GAAa,YAAY,CACvB,AAAA,GAAa,OAAO,CAAC,gBAAgB,CACrC,EACA,GAEJ,MAAO,CACT,CACF,CAMA,SAAS,GAAe,CAAS,EAC/B,MAAO,CACL,KAAM,AAAA,GAAS,IAAI,CACnB,QAAS,CAAC,EAAQ,EAAO,IACvB,AAAA,GAAa,YAAY,CACvB,AAAA,GAAa,OAAO,CAAC,YAAY,CACjC,EACA,GAEJ,MAAO,CACT,CACF,CAEO,MAAM,GAAgB,IAAI,IAAI,CACnC,CAAC,IAAK,CAAE,KAAM,AAAA,GAAS,QAAQ,CAAE,MAAO,WAAY,EAAE,CAEtD,CAAC,OAAQ,CAAE,KAAM,AAAA,GAAS,QAAQ,CAAE,MAAO,aAAc,EAAE,CAC3D,CAAC,QAAS,CAAE,KAAM,AAAA,GAAS,QAAQ,CAAE,MAAO,cAAe,EAAE,CAC7D,CAAC,MAAO,CAAE,KAAM,AAAA,GAAS,QAAQ,CAAE,MAAO,YAAa,EAAE,CACzD,CAAC,OAAQ,CAAE,KAAM,AAAA,GAAS,QAAQ,CAAE,MAAO,aAAc,EAAE,CAC3D,CAAC,QAAS,CAAE,KAAM,AAAA,GAAS,QAAQ,CAAE,MAAO,cAAe,EAAE,CAC7D,CAAC,MAAO,CAAE,KAAM,AAAA,GAAS,QAAQ,CAAE,MAAO,YAAa,EAAE,CACzD,CAAC,OAAQ,CAAE,KAAM,AAAA,GAAS,QAAQ,CAAE,MAAO,aAAc,EAAE,CAC3D,CAAC,QAAS,CAAE,KAAM,AAAA,GAAS,QAAQ,CAAE,MAAO,cAAe,EAAE,CAC7D,CAAC,MAAO,CAAE,KAAM,AAAA,GAAS,QAAQ,CAAE,MAAO,YAAa,EAAE,CACzD,CAAC,OAAQ,CAAE,KAAM,AAAA,GAAS,QAAQ,CAAE,MAAO,aAAc,EAAE,CAC3D,CAAC,QAAS,CAAE,KAAM,AAAA,GAAS,QAAQ,CAAE,MAAO,cAAe,EAAE,CAC7D,CAAC,MAAO,CAAE,KAAM,AAAA,GAAS,QAAQ,CAAE,MAAO,YAAa,EAAE,CACzD,CAAC,OAAQ,CAAE,KAAM,AAAA,GAAS,QAAQ,CAAE,MAAO,aAAc,EAAE,CAC3D,CAAC,OAAQ,CAAE,KAAM,AAAA,GAAS,QAAQ,CAAE,MAAO,aAAc,EAAE,CAC3D,CAAC,OAAQ,CAAE,KAAM,AAAA,GAAS,QAAQ,CAAE,MAAO,aAAc,EAAE,CAC3D,CAAC,SAAU,CAAE,KAAM,AAAA,GAAS,QAAQ,CAAE,MAAO,eAAgB,EAAE,CAC/D,CAAC,SAAU,CAAE,KAAM,AAAA,GAAS,QAAQ,CAAE,MAAO,eAAgB,EAAE,CAC/D,CAAC,SAAU,CAAE,KAAM,AAAA,GAAS,QAAQ,CAAE,MAAO,eAAgB,EAAE,CAC/D,CAAC,SAAU,CAAE,KAAM,AAAA,GAAS,QAAQ,CAAE,MAAO,eAAgB,EAAE,CAC/D,CAAC,IAAK,CAAE,KAAM,AAAA,GAAS,QAAQ,CAAE,MAAO,WAAY,EAAE,CAEtD,CAAC,MAAO,GAAe,cAAc,CACrC,CAAC,MAAO,GAAe,cAAc,CACrC,CAAC,MAAO,GAAe,cAAc,CACrC,CAAC,MAAO,GAAe,cAAc,CACrC,CAAC,MAAO,GAAmB,cAAc,CACzC,CAAC,MAAO,GAAmB,cAAc,CACzC,CAAC,MAAO,GAAmB,cAAc,CACzC,CAAC,MAAO,GAAmB,cAAc,CACzC,CAAC,IAAK,CAAE,KAAM,AAAA,GAAS,QAAQ,CAAE,MAAO,WAAY,EAAE,CACtD,CAAC,IAAK,CAAE,KAAM,AAAA,GAAS,QAAQ,CAAE,MAAO,WAAY,EAAE,CAEtD,CAAC,IAAK,GAAiB,aAAa,CACpC,CAAC,QAAS,GAAiB,iBAAiB,CAC5C,CAAC,QAAS,GAAiB,iBAAiB,CAE5C,CAAC,QAAS,GAAiB,kBAAkB,CAC7C,CAAC,QAAS,GAAiB,kBAAkB,CAC7C,CAAC,IAAK,GAAiB,cAAc,CACtC,CC5FM,OAAM,GAEX,CAAC,EAAa,AAAC,AAEf,EAAC,CAAkB,AAAC,AAGpB,EAAC,EAAU,AAAC,AAEZ,EAAC,EAAW,AAAC,AAGb,EAAC,EAAc,AAAC,AAGhB,CAAA,SAAU,AAGV,CAAA,KAAM,AAON,aAAY,EAAa,CAAC,CAAE,EAAc,CAAC,CAAE,CACvC,EAAa,GACf,IAAI,CAAC,CAAC,EAAa,CAAG,EACtB,IAAI,CAAC,CAAC,CAAkB,CAAG,EAAI,GAE/B,IAAI,CAAC,CAAC,CAAkB,CAAG,EAE7B,IAAI,CAAC,CAAC,EAAU,CAAG,EACnB,IAAI,CAAC,CAAC,EAAW,CAAG,CACtB,CAMA,YAAa,CACX,OAAO,IAAI,CAAC,CAAC,EAAa,AAC5B,CAMA,MAAO,CACL,OAAO,IAAI,CAAC,MAAM,EACpB,CAOA,YAAa,CACX,OAAO,IAAI,CAAC,YAAY,EAC1B,CAOA,OAAO,CAAY,CAAE,CACnB,AAAA,EAAO,WAAW,GAClB,AAAA,EAAO,UAAU,CAAC,IAAI,CAAC,CAAC,EAAa,EACrC,AAAA,GAAM,MAAM,CAAC,GACb,IAAI,CAAC,QAAQ,CAAC,GACd,AAAA,EAAO,UAAU,CAAC,GACe,IAA7B,IAAI,CAAC,CAAC,CAAkB,GAC1B,IAAI,CAAC,CAAC,EAAa,EAAI,EAAe,IAAI,CAAC,CAAC,CAAkB,CAC1D,IAAI,CAAC,CAAC,EAAa,CAAG,GACxB,IAAI,CAAC,CAAC,CAAkB,CAAG,EAC3B,IAAI,CAAC,CAAC,EAAa,CAAG,GACb,IAAI,CAAC,CAAC,EAAa,CAAG,IAC/B,IAAI,CAAC,CAAC,CAAkB,CAAG,EAC3B,IAAI,CAAC,CAAC,EAAa,CAAG,IAGtB,IAAI,CAAC,CAAC,EAAc,EAAI,AAAwB,IAAxB,IAAI,CAAC,CAAC,EAAa,GAC7C,IAAI,CAAC,CAAC,EAAc,GACpB,IAAI,CAAC,CAAC,EAAc,CAAG,KAE3B,CAOA,QAAS,CACP,OAAO,IAAI,CAAC,CAAC,EAAO,GAAG,IAAI,CAAC,IAAM,IAAI,CAAC,QAAQ,GACjD,CAMA,CAAC,EAAO,UACN,AAAI,IAAI,CAAC,CAAC,EAAW,CAAG,GACtB,IAAI,CAAC,CAAC,CAAkB,CAAG,GAAK,IAAI,CAAC,CAAC,EAAW,CAC1C,IAAI,QAAQ,AAAC,IAClB,IAAI,CAAC,CAAC,EAAc,CAAG,CACzB,IAEO,QAAQ,OAAO,EAE1B,CAOA,QAAS,CACP,OAAO,QAAQ,OAAO,EACxB,CAOA,cAAe,CACb,OAAO,QAAQ,OAAO,EACxB,CAOA,SAAS,CAAkB,CAAE,CAC3B,OAAO,QAAQ,OAAO,EACxB,CAOA,UAAW,CACT,OAAO,QAAQ,OAAO,EACxB,CACF,C3CvIA,MAAM,GAAY,AAAA,GAAc,SAAS,CAwFzC,SAAS,GAAmB,CAAK,CAAE,CAAY,CAAE,CAAO,EACtD,GAAI,EAAc,CAChB,IAAM,EAAW,AAAA,GAAc,EAC3B,CAAA,EAAQ,KAAK,EAAI,EAAS,cAAc,CAC1C,EAAM,YAAY,EAAE,MAAM,EAAU,CAAE,OAAQ,CAAA,CAAK,GAEnD,EAAM,YAAY,EAAE,MAAM,EAAU,CAAE,OAAQ,CAAA,CAAK,EAEvD,CACF,CAoBA,MAAM,WAAoB,GAExB,CAAC,EAAS,AAAC,AAGX,aAAY,CAAS,CAAE,CACrB,KAAK,GACL,IAAI,CAAC,CAAC,EAAS,CAAG,EAClB,IAAI,CAAC,KAAK,CAAG,EAAU,KAAK,AAC9B,CAGA,QAAS,CACP,OAAO,QAAQ,OAAO,EACxB,CAEA,cAAe,CACb,IAAM,EAAW,AAAA,GAAS,mBAAmB,CAC3C,IAAI,CAAC,CAAC,EAAS,CAAC,SAAS,CACzB,GAEF,CAAA,IAAI,CAAC,SAAS,CAAG,AAxHrB,SAAoB,CAAS,EAC3B,GAAI,EAAU,IAAI,YAAY,GAC5B,EAAW,EAAU,IAAI,MACpB,GAAI,EAAU,IAAI,CAEvB,EADc,AAAA,GAAW,EAAU,IAAI,OAElC,GAAI,CAAC,EACV,MAAM,AAAI,MAAM,6BAGlB,OAAO,CACT,EA6GgC,IAAI,CAAC,CAAC,EAAS,EAC3C,IAAM,EAAU,IAAI,GAClB,AAAA,EAAO,YAAY,GACnB,EACA,GACA,IAAI,CAAC,SAAS,EAEhB,AAAA,GAAM,UAAU,CAAC,GAEjB,IAAM,EAAwB,AAAA,GAAgB,gBAAgB,CAC5D,CAAC,YAAa,SAAU,UAAU,CAClC,AAAC,GAAU,EAAM,QAAQ,EAAI,AAAA,GAAc,oBAAoB,IAG3D,EAAQ,EAAsB,IAAI,CACtC,AAAC,GAAU,AAAa,cAAb,EAAM,EAAE,EAEf,EAAU,EAAsB,IAAI,CACxC,AAAC,GAAU,AAAa,iBAAb,EAAM,EAAE,EA6BrB,MA1BA,AA5HJ,CAAA,SAAuB,CAAS,EAC9B,IAAM,EAAU,EAAE,CAKlB,OAJA,EAAU,OAAO,CAAC,OAAO,CAAC,AAAC,IACzB,IAAM,EAAQ,AAAA,GAAW,GACzB,EAAQ,IAAI,CAAC,EACf,GACO,CACT,CAAA,EAqHkB,IAAI,CAAC,CAAC,EAAS,EAAE,OAAO,CAAC,AAAC,IAGtC,GAFA,EAAM,QAAQ,CAAG,EAAQ,uBAAuB,GAAG,UAAU,CAC7D,AAAA,GAAM,QAAQ,CAAC,GACX,EAAM,QAAQ,GAAI,CACpB,IAAI,EAAa,EACb,AAAA,GAAS,GAAK,IAChB,GAAmB,EAAO,EAAO,CAAE,MAAO,CAAA,CAAM,GAChD,KAEE,AAAA,GAAS,GAAK,IAChB,GAAmB,EAAO,EAAS,CAAE,MAAO,CAAA,CAAM,GAClD,KAEF,AAjER,SAAmC,CAAK,CAAE,CAAO,CAAE,CAAO,EACxD,KAAO,EAAQ,GAAG,IAAK,GAErB,GAAmB,EADE,EAAQ,cAAc,GACH,EAE5C,EA4DkC,EAAO,EAAuB,CACtD,IAAK,EACL,MAAO,CAAA,CACT,EACF,CACF,GACA,AAjIJ,CAAA,SAAyB,CAAS,EAChC,IAAM,EAAY,EAAE,CA4BpB,OA3BA,EAAU,SAAS,CAAC,OAAO,CAAC,AAAC,QACvB,EACA,CAGF,CAAA,EAAa,IAAI,GAAK,AAAA,GAAa,KAAK,EACxC,EAAa,IAAI,GAAK,AAAA,GAAa,OAAO,EAE1C,EAAK,kBACL,EAAO,AAAA,GAAU,IAAI,GAErB,EAAK,kBACL,EAAO,AAAA,GAAU,eAAe,EAGlC,IAAM,EAAQ,AAAA,GAAW,CACvB,GAAI,EACJ,KAAM,GAA8B,GACpC,YAAa,GAAqC,GAClD,UAAW,EACX,KAAM,EACN,aAAc,EAChB,GACM,EAAW,AAAA,GAAc,GAC/B,EAAM,YAAY,CAAC,WAAW,CAAC,GAC/B,EAAU,IAAI,CAAC,EACjB,GACO,CACT,CAAA,EAmGoB,IAAI,CAAC,CAAC,EAAS,EAAE,OAAO,CAAC,AAAC,IACxC,EAAS,QAAQ,CAAG,EAAQ,uBAAuB,GAAG,UAAU,CAChE,AAAA,GAAM,WAAW,CAAC,EACpB,GACA,AAAA,GAAc,gBAAgB,CAAC,IAAI,CAAC,SAAS,CAAC,MAAM,CAAE,IAAK,GAC3D,AAAA,GAAM,QAAQ,CAAC,IAAI,CAAC,SAAS,EAC7B,AAAA,GAAa,OAAO,CAAC,IAAI,CAAC,SAAS,EAC5B,QAAQ,OAAO,EACxB,CAKA,SAAS,CAAkB,CAAE,CAE7B,CAKA,UAAW,CACT,OAAO,QAAQ,OAAO,CAAC,KACzB,CACF,C6ClNO,MAAM,GAAiB,CAC5B,IAAK,EACL,KAAM,EACN,SAAU,CACZ,CAKO,OAAM,GAEX,CAAC,EAAM,AAAC,AAER,EAAC,EAAW,AAAC,AAEb,EAAC,EAAe,AAAC,AAEjB,EAAC,EAAc,AAAC,AAQhB,aAAY,CAAM,CAAE,CAAK,CAAE,EAAsB,CAAC,CAAE,CAClD,IAAM,EAAa,AAAA,EAAO,mBAAmB,GACvC,EACJ,EAAsB,KAAK,GAAG,CAAC,EAAW,KAAK,CAAE,EAAW,MAAM,CACpE,CAAA,IAAI,CAAC,CAAC,EAAM,CAAG,IAAI,GAEnB,IAAI,CAAC,CAAC,EAAW,CAAG,IAAI,GAAQ,CAC9B,KAAM,EACN,MAAO,EACP,cAAe,CACjB,GAEA,IAAI,CAAC,CAAC,EAAe,CAAG,IAAI,GAC5B,IAAI,CAAC,CAAC,EAAW,CAAC,yBAAyB,CAAC,IAAI,CAAC,CAAC,EAAM,CAC1D,CAMA,OAAO,CAAY,CAAE,CACf,IAAI,CAAC,CAAC,EAAc,GAAK,GAAe,GAAG,GAC7C,IAAI,CAAC,CAAC,EAAM,CAAC,MAAM,CAAC,GACpB,AAAA,EAAO,cAAc,CAAC,IAAI,CAAC,CAAC,EAAM,CAAC,QAAQ,EAE/C,CAMA,YAAY,CAAE,CAAE,CAAE,CAAE,CAClB,IAAI,CAAC,iBAAiB,CAAC,GAAe,QAAQ,EAC9C,IAAI,CAAC,CAAC,EAAM,CAAC,QAAQ,CAAC,CAAC,CAAG,EAC1B,IAAI,CAAC,CAAC,EAAM,CAAC,QAAQ,CAAC,CAAC,CAAG,CAC5B,CAOA,MAAM,CAAE,CAAE,CAAE,CAAE,CACZ,IAAI,CAAC,CAAC,EAAM,CAAC,QAAQ,CAAC,CAAC,EAAI,EAC3B,IAAI,CAAC,CAAC,EAAM,CAAC,QAAQ,CAAC,CAAC,EAAI,EAC3B,AAAA,EAAO,cAAc,CAAC,IAAI,CAAC,CAAC,EAAM,CAAC,QAAQ,CAC7C,CAMA,kBAAkB,CAAM,CAAE,CACxB,GAAI,IAAW,IAAI,CAAC,CAAC,EAAc,CAInC,OADA,IAAI,CAAC,CAAC,EAAc,CAAG,EACf,GACN,KAAK,GAAe,IAAI,CACtB,IAAI,CAAC,CAAC,EAAW,CAAC,yBAAyB,CAAC,IAAI,CAAC,CAAC,EAAM,EACxD,KACF,MAAK,GAAe,QAAQ,CAC1B,IAAI,CAAC,CAAC,EAAe,CAAC,yBAAyB,CAAC,IAAI,CAAC,CAAC,EAAM,EAC5D,KACF,MAAK,GAAe,GAAG,CACrB,KACF,SACE,AAAA,EAAI,KAAK,CACP,CAAC,0CAA0C,EAAE,EAAO,SAAS,CAAC,CAEpE,CACF,CACF,CD7FO,MAAM,GAAqB,CAChC,GAAI,EACJ,GAAI,EACJ,GAAI,EACJ,GAAI,CACN,CAGO,OAAM,GAEX,CAAC,EAAW,AAAC,AAGb,EAAC,EAAc,AAAC,AAGhB,EAAC,EAAmB,AAAC,AAGrB,EAAC,EAAgB,AAAC,AAElB,EAAC,EAAqB,AAAC,AASvB,aAAY,CAAW,CAAE,CAAQ,CAAE,CAAW,CAAE,CAAkB,CAAE,CAClE,IAAI,CAAC,CAAC,EAAW,CAAG,EACpB,IAAI,CAAC,CAAC,EAAe,CAAC,EAAU,EAAa,CAAA,GAC7C,IAAI,CAAC,CAAC,EAAsB,CAAC,EAAU,EACzC,CAKA,CAAC,EAAsB,CAAC,CAAQ,CAAE,CAAQ,EACxC,IAAI,CAAC,CAAC,EAAqB,CAAG,IAAI,GAChC,CACE,OAAQ,iBACR,WAAY,EACZ,QAAS,EACT,OAAQ,MACV,EACA,CAAE,cAAe,EAAG,WAAY,AAAA,GAAW,IAAI,AAAC,GAGlD,IAAI,CAAC,CAAC,EAAwB,GAC9B,IAAI,CAAC,CAAC,EAAgB,CAAG,AAAA,GAAI,SAAS,CACpC,IAAI,CAAC,CAAC,EAAqB,CAC3B,KACE,IAAI,CAAC,CAAC,EAAiB,CAAC,SAAS,IAAI,CAAE,CAAE,aAAc,MAAO,EAChE,EACA,KACE,SAAS,cAAc,EACzB,GAEF,IAAM,EAAS,IAAI,CAAC,CAAC,EAAgB,CAAC,EAAU,EAAU,EAC1D,CAAA,IAAI,CAAC,CAAC,EAAgB,CAAC,QAAQ,CAAC,CAAC,CAAG,EAAO,CAAC,CAC5C,IAAI,CAAC,CAAC,EAAgB,CAAC,QAAQ,CAAC,CAAC,CAAG,EAAO,CAAC,CAC5C,iBAAiB,mBAAoB,KACnC,IAAI,CAAC,CAAC,EAAwB,EAChC,EACF,CAMA,CAAC,EAAwB,GAClB,SAAS,iBAAiB,CAG7B,IAAI,CAAC,CAAC,EAAqB,CAAC,eAAe,CAAC,GAF5C,IAAI,CAAC,CAAC,EAAqB,CAAC,eAAe,CAAC,EAIhD,CAOA,CAAC,EAAiB,CAAC,CAAO,CAAE,CAAO,SACjC,AAAI,EAAQ,iBAAiB,CACpB,EAAQ,iBAAiB,CAAC,GAE5B,QAAQ,MAAM,CACnB,AAAI,MAAM,gDAEd,CASA,CAAC,EAAgB,CAAC,CAAQ,CAAE,CAAQ,CAAE,CAAM,EAC1C,IAAM,EAAQ,IAAI,EAAM,EAAG,GAC3B,OAAQ,GACN,KAAK,GAAmB,EAAE,CACxB,EAAM,CAAC,CAAG,EAAS,EACnB,EAAM,CAAC,CAAG,EAAS,EACnB,KACF,MAAK,GAAmB,EAAE,CACxB,EAAM,CAAC,CAAG,CAAC,EAAS,EACpB,EAAM,CAAC,CAAG,EAAS,EACnB,KACF,MAAK,GAAmB,EAAE,CACxB,EAAM,CAAC,CAAG,CAAC,EAAS,EACpB,EAAM,CAAC,CAAG,CAAC,EAAS,EACpB,KACF,MAAK,GAAmB,EAAE,CACxB,EAAM,CAAC,CAAG,EAAS,EACnB,EAAM,CAAC,CAAG,CAAC,EAAS,CAExB,CACA,OAAO,CACT,CAOA,CAAC,EAAe,CAAC,CAAQ,CAAE,CAAQ,CAAE,CAAU,EAE7C,IAAM,EAAS,IAAI,CAAC,CAAC,EAAgB,CAAC,EAAU,EADjC,EAAa,EAAI,GAGhC,IAAI,CAAC,CAAC,EAAkB,CAAC,EAAO,CAAC,CAAE,EAAO,CAAC,EACvC,GACF,IAAI,CAAC,CAAC,EAAkB,CAAC,EAAO,CAAC,CAAE,EAAO,CAAC,CAAE,EAEjD,CAMA,CAAC,EAAkB,CAAC,CAAO,CAAE,CAAO,EAClC,IAAI,CAAC,CAAC,EAAmB,CAAG,IAAI,GAC9B,CACE,OAAQ,kBACR,WAAY,EACZ,QAAS,EACT,OAAQ,MACV,EACA,CAAE,cAAe,EAAG,WAAY,AAAA,GAAW,IAAI,AAAC,GAElD,IAAI,CAAC,CAAC,EAAc,CAAG,AAAA,GAAI,SAAS,CAClC,IAAI,CAAC,CAAC,EAAmB,CACzB,KACE,IAAI,CAAC,gBAAgB,CAAC,CAAA,EACxB,EACA,KACE,IAAI,CAAC,gBAAgB,CAAC,CAAA,EACxB,GAEF,IAAI,CAAC,CAAC,EAAc,CAAC,QAAQ,CAAC,CAAC,CAAG,EAClC,IAAI,CAAC,CAAC,EAAc,CAAC,QAAQ,CAAC,CAAC,CAAG,EAClC,IAAI,CAAC,CAAC,EAAc,CAAC,WAAW,CAAC,KACnC,CAMA,iBAAiB,CAAE,CAAE,CACf,GACF,IAAI,CAAC,CAAC,EAAmB,CAAC,eAAe,CAAC,GAC1C,IAAI,CAAC,CAAC,EAAW,CAAC,iBAAiB,CAAC,AAAA,GAAe,IAAI,IAEvD,IAAI,CAAC,CAAC,EAAmB,CAAC,eAAe,CAAC,GAC1C,IAAI,CAAC,CAAC,EAAW,CAAC,iBAAiB,CAAC,AAAA,GAAe,GAAG,EAE1D,CAQA,CAAC,EAAkB,CAAC,CAAO,CAAE,CAAO,CAAE,CAAQ,EAC5C,IAAM,EAAc,AAlMK,EAkMkB,EAC3C,IAAI,CAAC,CAAC,EAAqB,CACzB,eACA,EACA,EAAU,EACV,KACE,IAAI,CAAC,gBAAgB,CAAC,CAAA,GACtB,IAAI,CAAC,CAAC,EAAW,CAAC,WAAW,CAAC,EAAG,CAAC,EACpC,EACA,IAAM,IAAI,CAAC,CAAC,EAAW,CAAC,iBAAiB,CAAC,AAAA,GAAe,GAAG,GAG9D,IAAI,CAAC,CAAC,EAAqB,CACzB,kBACA,EAAU,EACV,EACA,KACE,IAAI,CAAC,gBAAgB,CAAC,CAAA,GACtB,IAAI,CAAC,CAAC,EAAW,CAAC,WAAW,CAAC,EAAa,EAC7C,EACA,IAAM,IAAI,CAAC,CAAC,EAAW,CAAC,iBAAiB,CAAC,AAAA,GAAe,GAAG,GAG9D,IAAI,CAAC,CAAC,EAAqB,CACzB,iBACA,EACA,EAAU,EACV,KACE,IAAI,CAAC,gBAAgB,CAAC,CAAA,GACtB,IAAI,CAAC,CAAC,EAAW,CAAC,WAAW,CAAC,EAAG,EACnC,EACA,IAAM,IAAI,CAAC,CAAC,EAAW,CAAC,iBAAiB,CAAC,AAAA,GAAe,GAAG,GAG9D,IAAI,CAAC,CAAC,EAAqB,CACzB,iBACA,EAAU,EACV,EACA,KACE,IAAI,CAAC,gBAAgB,CAAC,CAAA,GACtB,IAAI,CAAC,CAAC,EAAW,CAAC,WAAW,CAAC,CAAC,EAAa,EAC9C,EACA,IAAM,IAAI,CAAC,CAAC,EAAW,CAAC,iBAAiB,CAAC,AAAA,GAAe,GAAG,EAEhE,CAUA,CAAC,EAAqB,CAAC,CAAe,CAAE,CAAC,CAAE,CAAC,CAAE,CAAY,CAAE,CAAU,EACpE,IAAM,EAAgB,IAAI,GACxB,CACE,OAAQ,EACR,WAAY,EACZ,QAAS,EACT,OAAQ,MACV,EACA,CAAE,cAAe,EAAG,WAAY,AAAA,GAAW,IAAI,AAAC,GAE9C,EAAS,AAAA,GAAI,kBAAkB,CACjC,EACA,EACA,EAEF,CAAA,EAAO,QAAQ,CAAC,CAAC,CAAG,EACpB,EAAO,QAAQ,CAAC,CAAC,CAAG,EACpB,EAAc,eAAe,CAAC,EAChC,CACF,C7C5NO,MAAM,GAEX,KAAM,AAEN,CAAA,IAAK,AAEL,CAAA,OAAQ,AAER,CAAA,SAAU,AAEV,CAAA,SAAU,AAIV,cAAc,CACZ,IAAI,CAAC,IAAI,CAAG,KACZ,IAAI,CAAC,OAAO,CAAG,EAAE,CACjB,IAAI,CAAC,SAAS,CAAG,EAAE,CACnB,IAAI,CAAC,SAAS,CAAG,EAAE,AACrB,CACF,CAsCA,SAAS,GAAS,CAAK,SACrB,AAAK,EAME,GAAY,GAChB,IAAI,CAAC,IAUD,AAViB,EAWrB,IAAI,GACJ,IAAI,CAAC,IAAM,AAZU,EAYJ,UAAU,IAC3B,IAAI,CAAC,KA3CR,EAAoB,IAAI,GACtB,EACA,GACA,AAAA,GAAmB,EAAE,CACrB,AAAA,GAAmB,EAAE,EAEvB,AAAA,GAAI,UAAU,CAAC,CAAA,GAuCX,EAfoB,CAgBtB,IAfC,IAAI,CAAC,IAAM,IAPZ,AAAA,EAAI,KAAK,CACP,oEAEK,QAAQ,MAAM,GAKzB,CAuBA,SAAS,GAAY,CAAK,SACxB,AAAI,EACK,EAAM,MAAM,GAAG,IAAI,CAAC,KACzB,AAAA,GAAM,QAAQ,GACd,EAAe,KA9CnB,EAAoB,KACpB,AAAA,GAAI,KAAK,GACT,AAAA,GAAI,UAAU,CAAC,CAAA,GA8CJ,QAAQ,OAAO,KAGjB,QAAQ,OAAO,CAAC,KAE3B,CA4DA,SAAS,KACP,OCUO,IAAI,GDViB,EAAc,OAAO,GACnD,CA8CA,IAAA,GAbsB,CACpB,mBA1EF,WACE,OAAO,EAAc,OAAO,EAC9B,EAyEE,uBAhEF,SAAgC,CAAe,CAAE,CAAS,EAExD,OADA,EAAc,OAAO,CAAC,EAAiB,GAChC,GAAS,KAClB,EA8DE,qBAVF,WACE,OAAO,EAAc,QAAQ,EAC/B,EASE,YArBF,SAAqB,CAAE,CAAE,CAAE,EACzB,EAAY,KAAK,CAAC,EAAI,GACtB,EAAY,iBAAiB,CAAC,AAAA,GAAe,GAAG,EAChD,EAAkB,gBAAgB,CAAC,CAAA,EACrC,EAkBE,iBA9KF,SAA0B,CAAM,CAAE,CAAK,CAAE,CAAmB,EAC1D,EAAc,IAAI,GAAY,EAAQ,EAAO,EAC/C,EA6KE,aAxFF,SAAsB,CAAY,EAEhC,AADA,CAAA,EAAgB,CAAhB,EACc,KAAK,EACrB,EAsFE,mBA5DF,WAEE,OADA,EAAc,KAAK,GACZ,GAAS,KAClB,EA0DE,kBAnDF,WACE,OAAO,GAAS,KAClB,EAkDE,mBAlGF,WACE,OAAO,GAAY,EACrB,EAiGE,OArCF,SAAgB,CAAY,EAC1B,GAAc,OAAO,GACrB,GAAa,OAAO,EACtB,CAmCA,E+C3NO,SAAS,GAAgB,CAAQ,CAAE,CAAM,EAC9C,IAAM,EAAS,GAAmB,EAAS,MAAM,CAAC,GAAG,CAAC,MAAO,QACvD,EAAe,EAAO,MAAM,CAAC,8BAA8B,CAAC,GAC5D,EAAa,EAAS,MAAM,CAAC,MAAM,CAAC,aAC1C,AAAK,EAID,GAAc,IAAM,GAAgB,EAC/B,EAEA,GANP,AAAA,EAAI,KAAK,CAAC,CAAC,SAAS,EAAE,EAAS,MAAM,CAAC,GAAG,CAAC,QAAQ,eAAe,CAAC,EAC3D,EAOX,CA2DO,SAAS,GAAQ,CAAM,CAAE,CAAM,CAAE,CAAO,EAC7C,OAAQ,GACN,IAAK,QACH,OAAO,GAlHuB,GAkHW,GAhHV,CAiHjC,KAAK,OACH,OAAO,GArHsB,GAqHW,GAnHV,CAoHlC,CAEA,OADA,AAAA,EAAI,KAAK,CAAC,CAAC,sCAAsC,EAAE,EAAO,CAAC,EACpD,CAAA,CACT,CAOO,SAAS,GAAS,CAAK,CAAE,CAAM,EACpC,OAAQ,GACN,IAAK,QACH,CACE,IAAM,EAAU,EAAM,MAAM,CAAC,GAAG,CAAC,YAC7B,EAAK,EAAM,MAAM,CAAC,MAAM,CAAC,KAAM,GAC7B,EAAQ,EAAM,MAAM,CAAC,MAAM,CAAC,SAAU,GACtC,EAAuB,EAAM,MAAM,CAAC,aAAa,CAAC,OAClD,EAAc,GAAoB,EACpC,CAAA,EAAY,GAAG,CAAG,IACpB,EAAY,GAAG,GACf,GAAM,GAAc,EAAY,KAAK,EAAI,EACzC,EAAM,MAAM,CAAC,GAAG,CAAC,KAAM,KAAK,GAAG,CAAC,EAAI,IACpC,EAAM,MAAM,CAAC,GAAG,CACd,WACA,GAA4B,IAGlC,CACA,KACF,KAAK,OACH,CACE,IAAM,EAAqB,EAAM,MAAM,CAAC,iBAAiB,GAEnD,EAAqB,GADJ,EAAM,MAAM,CAAC,GAAG,CAAC,aAElC,EAAmB,KAAK,GAAG,CAC/B,EACA,KAAK,IAAI,CAAC,GAAM,EAAmB,GAAG,EAExC,CAAA,EAAmB,GAAG,CAAG,KAAK,GAAG,CAC/B,EACA,EAAmB,GAAG,CAAG,GAE3B,EAAM,MAAM,CAAC,GAAG,CACd,WACA,GAA4B,IAE9B,EAAM,MAAM,CAAC,GAAG,CAAC,KAAM,EAAM,MAAM,CAAC,MAAM,CAAC,SAAU,GACvD,CACA,KACF,SACE,AAAA,EAAI,KAAK,CAAC,CAAC,sCAAsC,EAAE,EAAO,CAAC,CAC/D,CACF,C1DlKO,MAAM,GAAqB,CAChC,KAAM,EACN,KAAM,EACN,QAAS,EACT,KAAM,CACR,EAMM,GAAiB,CACrB,SAAU,WACV,QAAS,UACT,MAAO,QACP,YAAa,QACb,QAAS,UACT,MAAO,QACP,cAAe,UACf,MAAO,QACP,KAAM,OACN,KAAM,OACN,QAAS,UACT,IAAK,KACP,EA2BM,GAAsB,CAC1B,SAAU,WACV,WAAY,QACZ,OAAQ,SACR,MAAO,QACP,YAAa,cACb,SAAU,UACZ,CAYA,OAAM,GAEJ,CAAC,EAAO,AAAC,AAET,EAAC,EAAgB,AAAC,AAElB,EAAC,EAAO,AAAC,AAET,CAAA,eAAgB,AAEhB,EAAC,EAAa,AAAC,AAOf,aAAY,CAAO,CAAE,EAAmB,CAAC,CAAC,CAAE,CAC1C,IAAI,CAAC,CAAC,EAAO,CAAG,EAChB,IAAI,CAAC,CAAC,EAAgB,CAAG,EACzB,IAAI,CAAC,CAAC,EAAO,CAAG,GAAyB,MAAO,CAAE,UAAW,QAAS,GAEtE,IAAI,CAAC,OAAO,EACd,CAMA,IAAI,SAAU,CACZ,OAAO,IAAI,CAAC,CAAC,EAAO,AACtB,CAMA,IAAI,eAAgB,CAClB,OAAO,IAAI,CAAC,CAAC,EAAa,AAC5B,CAMA,QAAQ,CAAO,CAAE,CACf,IAAI,CAAC,CAAC,EAAa,CAAG,EAAE,CACpB,CAAC,GAAW,IAAI,CAAC,eAAe,EAClC,IAAI,CAAC,eAAe,CAAC,OAAO,CAAC,CAAA,GAE/B,IAAI,CAAC,CAAC,EAAO,CAAC,eAAe,GAE3B,CAAA,CAAC,IAAI,CAAC,CAAC,EAAO,CAAC,YAAY,CAAC,MAAM,IAClC,IAAI,CAAC,CAAC,EAAO,CAAC,YAAY,CAAC,KAAK,AAAL,GAI3B,AAFmB,IAAI,CAAC,CAAC,EAAe,GAE3B,OAAO,CAAC,AAAC,IACpB,IAAM,EACJ,IAAI,CAAC,CAAC,EAAO,CAAC,YAAY,CAAC,YAAY,CAAC,gBAAgB,CACtD,EAAU,SAAS,EAEvB,GAAI,EAAU,CACZ,IAAM,EAAuB,IAAI,CAAC,CAAC,EAAmB,CACpD,EAAU,KAAK,CACf,EAAU,SAAS,CACnB,GAEF,IAAI,CAAC,CAAC,EAAO,CAAC,WAAW,CAAC,EAC5B,CACF,GAGE,IAAI,CAAC,CAAC,EAAgB,CAAC,SAAS,EAClC,IAAI,CAAC,CAAC,EAAgB,CAAC,SAAS,EAEpC,CAMA,CAAC,EAAe,GACd,IAAI,EACJ,OAAQ,IAAI,CAAC,CAAC,EAAgB,CAAC,UAAU,EACvC,KAAK,GAAoB,MAAM,CAC7B,EAAe,CACb,CACE,MAAO,AAAA,EAAI,CAAC,eAAe,CAAC,CAC5B,UAAW,AAAA,GAAU,eAAe,AACtC,EACA,CAAE,MAAO,AAAA,EAAI,CAAC,YAAY,CAAC,CAAE,UAAW,AAAA,GAAU,MAAM,AAAC,EAC1D,CACD,KACF,MAAK,GAAoB,KAAK,CAC5B,EAAe,CACb,CAAE,MAAO,AAAA,EAAI,CAAC,QAAQ,CAAC,CAAE,UAAW,AAAA,GAAU,QAAQ,AAAC,EACvD,CACE,MAAO,AAAA,EAAI,CAAC,eAAe,CAAC,CAC5B,UAAW,AAAA,GAAU,eAAe,AACtC,EACA,CAAE,MAAO,AAAA,EAAI,CAAC,YAAY,CAAC,CAAE,UAAW,AAAA,GAAU,MAAM,AAAC,EAC1D,CACD,KACF,MAAK,GAAoB,WAAW,CAClC,EAAe,CACb,CAAE,MAAO,AAAA,EAAI,CAAC,WAAW,CAAC,CAAE,UAAW,AAAA,GAAU,eAAe,AAAC,EACjE,CAAE,MAAO,AAAA,EAAI,CAAC,QAAQ,CAAC,CAAE,UAAW,AAAA,GAAU,QAAQ,AAAC,EACxD,CACD,KACF,MAAK,GAAoB,QAAQ,CACM,AAAA,GAAU,QAAQ,CACvD,KACF,MAAK,GAAoB,UAAU,CACjC,EAAe,CAAC,IAAI,CAAC,CAAC,EAAiB,GAAG,CAC1C,KACF,MAAK,GAAoB,QAAQ,CACjC,QACE,EAAe,CACb,CAAE,MAAO,AAAA,EAAI,CAAC,KAAK,CAAC,CAAE,UAAW,AAAA,GAAU,KAAK,AAAC,EACjD,CAAE,MAAO,AAAA,EAAI,CAAC,IAAI,CAAC,CAAE,UAAW,AAAA,GAAU,IAAI,AAAC,EAC/C,CAAE,MAAO,AAAA,EAAI,CAAC,IAAI,CAAC,CAAE,UAAW,AAAA,GAAU,IAAI,AAAC,EAC/C,CAAE,MAAO,AAAA,EAAI,CAAC,KAAK,CAAC,CAAE,UAAW,AAAA,GAAU,KAAK,AAAC,EACjD,CAAE,MAAO,AAAA,EAAI,CAAC,IAAI,CAAC,CAAE,UAAW,AAAA,GAAU,IAAI,AAAC,EAC/C,IAAI,CAAC,CAAC,EAAiB,GACxB,AAEL,CACA,OAAO,CACT,CAMA,CAAC,EAAiB,UAChB,AAAI,IAAI,CAAC,CAAC,EAAO,CAAC,YAAY,CAAC,QAAQ,GAC9B,CAAE,MAAO,AAAA,EAAI,CAAC,KAAK,CAAC,CAAE,UAAW,AAAA,GAAU,KAAK,AAAC,EAEjD,CACL,MAAO,AAAA,EAAI,CAAC,QAAQ,CAAC,CACrB,UAAW,AAAA,GAAU,QAAQ,AAC/B,CAEJ,CASA,CAAC,EAAmB,CAAC,CAAK,CAAE,CAAS,CAAE,CAAQ,EAC7C,IAAM,EAAY,GAAyB,MAAO,CAChD,UAAW,OACb,GAEA,EAAU,WAAW,CACnB,GAAyB,OAAQ,CAC/B,UAAW,cACX,KAAM,CACR,IAGF,IAAM,EAAkB,GAAyB,MAAO,CACtD,UAAW,gBACb,GAgBA,OAfA,EAAU,WAAW,CAAC,GAEtB,IAAI,EAAS,CACV,IAAI,CAAC,CAAC,EAAG,IAAM,EAAE,EAAE,CAAG,EAAE,EAAE,EAC1B,OAAO,CAAC,AAAC,IACR,IAAM,EAAU,CAAE,GAAG,IAAI,CAAC,CAAC,EAAO,AAAC,CACnC,CAAA,EAAQ,OAAO,CAAG,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,EACxC,EAAQ,SAAS,CAAG,EACpB,EAAQ,QAAQ,CAAG,EACnB,IAAM,EAAS,IAAI,CAAC,CAAC,EAA2B,CAAC,EAC3B,QAAlB,EAAO,MAAM,EAAa,AAAkB,KAAA,IAAlB,EAAO,MAAM,EACzC,IAAI,CAAC,CAAC,EAAa,CAAC,IAAI,CAAC,GAE3B,EAAgB,WAAW,CAAC,EAAO,OAAO,CAC5C,GACK,CACT,CAOA,CAAC,EAA2B,CAAC,CAAO,MAE9B,EACA,EAFJ,IAAM,EAAQ,AA0wBlB,SAAmC,CAAO,EACxC,IAAM,EAAS,EAAQ,QAAQ,CAAC,MAAM,CAClC,EAAQ,EAAO,GAAG,CAAC,QACvB,GAAI,EAAQ,UAAU,CAAE,CACtB,IAAM,EAAS,EAAO,uBAAuB,CACzC,EAAO,uBAAuB,CAAC,EAAQ,YAAY,EACnD,EAAO,GAAG,CAAC,OACT,EAAQ,EAAO,GAAG,CAAC,SACrB,GACF,CAAA,EAAQ,CAAC,EAAE,EAAM,MAAM,EAAE,EAAO,CAAC,AAAD,EAE9B,GACF,CAAA,EAAQ,CAAC,EAAE,EAAM,QAAQ,EAAE,EAAM,CAAC,AAAD,CAErC,CACA,GACE,EAAQ,SAAS,EACjB,EAAQ,QAAQ,CAAC,YAAY,GAAK,AAAA,GAAa,KAAK,CACpD,CACA,IAAM,EAAQ,EAAQ,YAAY,CAAC,QAAQ,GACvC,EAAQ,QAAQ,CAAC,QAAQ,CACzB,EAAQ,QAAQ,CAAC,iBAAiB,CACtC,EAAQ,CAAC,EAAE,EAAM,CAAC,EAAE,EAAM,OAAO,CAAC,GAAG,GAAG,CAAC,AAC3C,CACA,OAAO,CACT,EAnyB4C,GAYxC,OATI,EAAQ,YAAY,EACtB,EAAS,IACP,EAAQ,YAAY,CAAC,EAAQ,YAAY,CAAE,EAAQ,QAAQ,EAC7D,EAAS,AAAA,GAAe,EAAE,EAE1B,EAAS,UACP,MAAM,GAAmB,GAAS,IAAI,CAAC,IAAM,EAAQ,OAAO,KAC9D,EAEK,IAAI,GAA+B,CACxC,WAAY,EACZ,UAAW,EAAQ,QAAQ,CAAC,aAAa,CACzC,OAAQ,EACR,OAAQ,CACV,EACF,CACF,CA4HA,SAAS,GAAsB,CAAK,CAAE,CAAK,CAAE,CAAG,EAC1C,EAAM,EAAM,MAAM,EACpB,AAAA,EAAI,KAAK,CACP,oEAGJ,IAAK,IAAI,EAAQ,EAAG,EAAQ,GAAO,EAAQ,EAAM,MAAM,CAAE,IACzC,EAAM,IAAI,CAAC,CAAK,CAAC,EAAM,GAEnC,AAAA,EAAI,KAAK,CAAC,CAAC,wBAAwB,EAAE,CAAK,CAAC,EAAM,CAAC,iBAAiB,CAAC,CAG1E,CAOA,SAAS,GAAc,CAAK,CAAE,EAAU,CAAC,CAAC,EACxC,IAAM,EAAY,GAAyB,MAAO,CAAE,UAAW,WAAY,GACrE,EAAiB,GAAyB,MAAO,CACrD,UAAW,iBACb,GACA,EAAU,WAAW,CAAC,GACtB,EAAe,WAAW,CACxB,GAAmB,EAAO,CAAE,gBAAiB,CAAA,EAAM,WAAY,CAAA,CAAK,IAEtE,IAAM,EAAqB,IAAI,GAC7B,CACE,aAAc,EACd,iBAAkB,EAClB,cAAe,EAAQ,aAAa,CACpC,iBAAkB,EAAQ,gBAAgB,AAC5C,EACA,CACE,WAAY,EAAQ,UAAU,CAC9B,UAAW,IACT,EAAe,eAAe,CAC5B,GAAmB,EAAO,CAAE,gBAAiB,CAAA,EAAM,WAAY,CAAA,CAAK,GAE1E,GAGF,OADA,EAAU,WAAW,CAAC,EAAmB,OAAO,EACzC,AAAA,GAAG,kBAAkB,CAAC,EAC/B,CA6GA,SAAS,GAAsC,CAAS,CAAE,CAAO,EAC/D,GAAI,EAAQ,QAAQ,CAAC,YAAY,GAAK,AAAA,GAAa,KAAK,CACtD,OAEF,IAAI,EAAgB,EAAE,CAEtB,OAAQ,EAAQ,QAAQ,CAAC,YAAY,EACnC,KAAK,AAAA,GAAa,KAAK,CACrB,EAAgB,AAoDtB,SAA4B,CAAO,EACjC,IAAM,EAAU,EAAE,CACZ,EAAW,EAAQ,QAAQ,CA6BjC,OA5BI,EAAQ,aAAa,CACvB,EAAQ,IAAI,CACV,IAAI,GAA6B,CAC/B,MAAO,GAAe,EAAQ,QAAQ,EACtC,OAAQ,GAAe,GAAG,AAC5B,IAGF,EAAQ,SAAS,GAAK,EAAS,cAAc,EAC7C,EAAQ,cAAc,EAEtB,EAAQ,IAAI,CACV,IAAI,GAA6B,CAC/B,MAAO,AAAA,EAAI,CAAC,oBAAoB,CAAC,CACjC,OAAQ,GAAe,aAAa,AACtC,IAIA,EAAQ,cAAc,EACxB,EAAQ,IAAI,CACV,IAAI,GAA6B,CAC/B,MAAO,AAAA,EAAI,CAAC,aAAa,CAAC,CAC1B,OAAQ,GAAe,OAAO,AAChC,IAIG,CACT,EApFyC,GACnC,KACF,MAAK,AAAA,GAAa,OAAO,CACvB,EAAgB,AAwBtB,SAA8B,CAAO,EACnC,IAAM,EAAU,EAAE,CAgBlB,OAfI,EAAQ,aAAa,EACvB,EAAQ,IAAI,CACV,IAAI,GAA6B,CAC/B,MAAO,GAAe,EAAQ,QAAQ,EACtC,OAAQ,GAAe,GAAG,AAC5B,IAIJ,EAAQ,IAAI,CACV,IAAI,GAA6B,CAC/B,MAAO,AAAA,EAAI,CAAC,MAAM,CAAC,CACnB,OAAQ,GAAe,OAAO,AAChC,IAEK,CACT,EA1C2C,GACrC,KACF,MAAK,AAAA,GAAa,UAAU,CAC1B,EAAgB,AAqFtB,SAA8B,CAAO,EACnC,IAAM,EAAU,EAAE,CAgBlB,OAdI,GAAiB,IACnB,EAAQ,IAAI,CACV,IAAI,GAA6B,CAC/B,MAAO,GAAe,EAAQ,QAAQ,EACtC,OAAQ,GAAe,OAAO,AAChC,IAGJ,EAAQ,IAAI,CACV,IAAI,GAA6B,CAC/B,MAAO,AAAA,EAAI,CAAC,cAAc,CAAC,CAC3B,OAAQ,GAAe,OAAO,AAChC,IAEK,CACT,EAvG2C,GACrC,KACF,SACE,EAAgB,AA2HtB,SAAuC,CAAO,EAC5C,IAAM,EAAU,EAAE,CAsClB,OApCI,GAAiB,GACnB,EAAQ,IAAI,CACV,IAAI,GAA6B,CAC/B,MAAO,GAAe,EAAQ,QAAQ,EACtC,OAAQ,GAAe,GAAG,AAC5B,IAGF,EAAQ,SAAS,GAAK,EAAQ,QAAQ,CAAC,cAAc,EACrD,EAAQ,QAAQ,CAAC,cAAc,CAE/B,EAAQ,IAAI,CACV,IAAI,GAA6B,CAC/B,MAAO,AAAA,EAAI,CAAC,YAAY,CAAC,CACzB,OAAQ,GAAe,KAAK,AAC9B,IAGF,EAAQ,SAAS,GAAK,EAAQ,QAAQ,CAAC,cAAc,EACpD,CAAA,CAAC,EAAQ,QAAQ,CAAC,YAAY,EAC7B,EAAQ,YAAY,CAAC,YAAY,CAAC,QAAO,AAAP,GAEpC,EAAQ,IAAI,CACV,IAAI,GAA6B,CAC/B,MAAO,AAAA,EAAI,CAAC,YAAY,CAAC,CACzB,OAAQ,GAAe,KAAK,AAC9B,IAIJ,EAAQ,IAAI,CACV,IAAI,GAA6B,CAC/B,MAAO,EAAQ,QAAQ,CAAC,OAAO,GAAK,AAAA,EAAI,CAAC,MAAM,CAAC,CAAG,AAAA,EAAI,CAAC,cAAc,CAAC,CACvE,OAAQ,GAAe,OAAO,AAChC,IAEK,CACT,EAnKoD,EAClD,CASA,OANA,EAAc,IAAI,CAChB,IAAI,GAA6B,CAC/B,MAAO,AAAA,EAAI,CAAC,eAAe,CAAC,CAC5B,OAAQ,GAAe,QAAQ,AACjC,IAEK,CACT,CA+FA,SAAS,GAAiB,CAAO,EAC/B,IAAM,EAAW,EAAQ,QAAQ,OACjC,EAAK,EAAS,QAAQ,KAGlB,EAAS,OAAO,GACX,EAAQ,aAAa,CAE1B,EAAS,YAAY,GAChB,EAAQ,gBAAgB,QAEnC,CAqDA,SAAS,GAAe,CAAQ,EAC9B,OAAQ,EAAS,YAAY,EAC3B,KAAK,AAAA,GAAa,UAAU,CAC1B,OAAO,AAAA,EAAI,CAAC,cAAc,CAAC,AAC7B,MAAK,AAAA,GAAa,KAAK,CACvB,KAAK,AAAA,GAAa,OAAO,CACvB,OAAO,AAAA,EAAI,CAAC,iBAAiB,CAAC,AAChC,SACE,OAAO,AAAA,EAAI,CAAC,UAAU,CAAC,AAC3B,CACF,CAmHA,SAAS,GAA4B,CAAO,EAO1C,OAAO,GAAyB,IAAK,CAAE,UAAW,WAAY,IAAA,CAL1D,EAAQ,QAAQ,CAAC,YAAY,CACxB,AAAA,EAAI,CAAC,2BAA2B,CAAC,CAEjC,AAAA,EAAI,CAAC,8BAA8B,CAAC,AAE4B,EAC3E,CAOA,SAAS,GAAgB,CAAO,EAC9B,IAAM,EAAW,EAAQ,QAAQ,CAC3B,EAAY,GAAyB,MAAO,CAChD,UAAW,mBACb,GACA,EAAU,WAAW,CAAC,GAAmB,IAEzC,IAAM,EAAgB,AAlZxB,SAAqC,CAAS,CAAE,CAAO,EAIrD,GAFE,EAAQ,YAAY,GAAK,EAAQ,gBAAgB,EACjD,CAAC,EAAQ,gBAAgB,CAEzB,OAAO,GAAsC,EAAW,GAE1D,OAAQ,EAAQ,UAAU,EACxB,KAAK,GAAmB,IAAI,CAC1B,OAAO,AAgBb,SAAyC,CAAS,CAAE,CAAO,MAKrD,EAJJ,IAAM,EAAgB,EAAE,CAClB,EAAgB,EAAQ,gBAAgB,CAAC,YAAY,CAAC,iBAAiB,CAC3E,EAAQ,QAAQ,EAGlB,GAAK,EAEE,CACL,IAAI,EACA,CAEF,CAAA,EAAc,SAAS,GAAK,AAAA,GAAU,QAAQ,EAC9C,EAAc,SAAS,GAAK,AAAA,GAAU,MAAM,EAC5C,EAAc,SAAS,GAAK,AAAA,GAAU,YAAY,EAElD,EAAQ,AAAA,EAAI,CAAC,kBAAkB,CAAC,CAChC,EAAS,GAAe,WAAW,GAEnC,EAAQ,AAAA,EAAI,CAAC,oBAAoB,CAAC,CAClC,EAAS,GAAe,IAAI,EAE9B,EAAS,IAAI,GAA6B,CACxC,MAAO,EACP,OAAQ,CACV,GACA,EAAc,IAAI,CAAC,EACrB,MApBE,EAAU,WAAW,CAAC,GAA4B,IA4BpD,OANA,EAAS,IAAI,GAA6B,CACxC,MAAO,AAAA,EAAI,CAAC,qBAAqB,CAAC,CAClC,OAAQ,GAAe,KAAK,AAC9B,GACA,EAAc,IAAI,CAAC,GAEZ,CACT,EApD6C,EAAW,EACpD,MAAK,GAAmB,IAAI,CAC1B,OAAO,AAqQb,SAAyC,CAAS,CAAE,CAAO,MAMrD,EALJ,GAAI,EAAQ,QAAQ,CAAC,YAAY,GAAK,AAAA,GAAa,KAAK,CACtD,OAEF,IAAM,EAAgB,EAAE,CAClB,EAAmB,EAAQ,QAAQ,CAAC,QAAQ,CAelD,GAZE,EADE,EAAQ,gBAAgB,CAAC,QAAQ,GACjB,OAAO,gBAAgB,CAEvB,EAAQ,gBAAgB,CAAC,YAAY,CAAC,aAAa,GAUnE,CADF,EAAQ,gBAAgB,CAAC,YAAY,CAAC,iBAAiB,CAAC,EAAQ,QAAQ,EACnD,CACrB,EAAU,WAAW,CAAC,GAA4B,IAC7C,EAAQ,YAAY,CAAC,QAAQ,IAChC,GAAsC,EAAW,GAEnD,MACF,CACA,GAAI,EAAkB,EAAQ,QAAQ,CAAC,QAAQ,CAAE,CAC/C,EAAU,WAAW,CAyEhB,GAAyB,IAAK,CAAE,UAAW,WAAY,KAFvD,AAAA,EAAI,CAAC,2BAA2B,EAtEI,EAsES,CAAC,EAtE3B,EAsEyC,CAAC,AAEK,IAtElE,EAAQ,YAAY,CAAC,QAAQ,IAChC,GAAsC,EAAW,GAEnD,MACF,CAgBA,OAPA,EAAc,IAAI,CART,IAAI,GAA6B,CACxC,MAAO,EAAQ,YAAY,CAAC,QAAQ,GAChC,AAAA,EAAI,CAAC,kBAAkB,EAAE,EAAQ,QAAQ,CAAC,QAAQ,CAAC,OAAO,CAAC,GAAG,CAAC,CAC/D,AAAA,EAAI,CAAC,mBAAmB,EAAE,EAAQ,QAAQ,CAAC,iBAAiB,CAAC,OAAO,CAClE,GACA,CAAC,CACP,OAAQ,GAAe,IAAI,AAC7B,IAOA,EAAc,IAAI,CAJT,IAAI,GAA6B,CACxC,MAAO,AAAA,EAAI,CAAC,eAAe,CAAC,CAC5B,OAAQ,GAAe,QAAQ,AACjC,IAEO,CACT,EAzT6C,EAAW,EACpD,MAAK,GAAmB,OAAO,CAC7B,OAAO,AA+Tb,SAA4C,CAAS,CAAE,CAAO,EAC5D,GAAI,EAAQ,YAAY,CAAC,KAAK,CAC5B,OAAO,GAAsC,EAAW,GAE1D,IAAM,EAAgB,EAAE,CAIxB,GAAI,CADF,EAAQ,gBAAgB,CAAC,YAAY,CAAC,iBAAiB,CAAC,EAAQ,QAAQ,EACnD,CACrB,EAAU,WAAW,CAAC,GAA4B,IAC9C,EAAQ,YAAY,CAAC,KAAK,EAC5B,GAAsC,EAAW,GAEnD,MACF,CAEA,IAAI,EAAS,IAAI,GAA6B,CAC5C,MAAO,AAAA,EAAI,CAAC,cAAc,CAAC,CAC3B,OAAQ,GAAe,OAAO,AAChC,GASA,OARA,EAAc,IAAI,CAAC,GAMnB,EAAc,IAAI,CAJlB,EAAS,IAAI,GAA6B,CACxC,MAAO,AAAA,EAAI,CAAC,qBAAqB,CAAC,CAClC,OAAQ,GAAe,QAAQ,AACjC,IAGO,CACT,EA5VgD,EAAW,EACvD,MAAK,GAAmB,IAAI,CAC5B,QACE,MAAO,EAAE,AACb,CACF,EAgYoD,EAAW,GAE7D,OAAO,AAAA,GAAG,kBAAkB,CAAC,EAAW,CACtC,SAAU,EAAQ,QAAQ,CAC1B,cAAe,EACf,IAAK,CAAA,CACP,EACF,CAOA,SAAS,GAAa,CAAK,EACzB,IAAM,EAAS,GAAyB,MAAO,CAC7C,UAAW,eACb,GACA,EAAO,WAAW,CAAC,GAA+B,EAAM,aAAa,GACrE,EAAO,WAAW,CAChB,GAAyB,OAAQ,CAC/B,KAAM,EAAM,MAAM,EAAE,IAAI,SAAW,AAAA,EAAI,CAAC,OAAO,CAAC,AAClD,IAGF,IAAM,EAAK,EAAM,MAAM,CAAC,MAAM,CAAC,MAC/B,GAAI,EAAI,KAEF,EADJ,IAAM,EAAQ,EAAM,MAAM,CAAC,MAAM,CAAC,UAGhC,EADE,AAAO,IAAP,EACO,AAAA,EAAI,CAAC,MAAM,CAAC,CACZ,EACA,AAAA,EAAI,CAAC,kBAAkB,EAAE,EAAG,CAAC,EAAE,EAAM,CAAC,CAEtC,AAAA,EAAI,CAAC,WAAW,EAAE,EAAG,CAAC,CAEjC,EAAO,WAAW,CAChB,GAAyB,OAAQ,CAC/B,KAAM,CACR,GAEJ,CASA,OARI,EAAM,MAAM,CAAC,iBAAiB,EAChC,EAAO,WAAW,CAChB,GAAyB,OAAQ,CAC/B,KAAM,AAAA,EAAI,CAAC,iBAAiB,EAAE,EAAM,MAAM,CAAC,iBAAiB,GAAG,CAAC,AAClE,IAIG,CACT,CAWA,SAAS,GAAmB,CAAK,CAAE,EAAU,CAAC,CAAC,MAOzC,EANJ,IAAM,EAAY,GAAyB,MAAO,CAChD,UAAW,cACb,GACM,EAAS,GAAa,GAsB5B,OArBA,EAAU,WAAW,CAAC,GAGlB,CAAC,EAAQ,eAAe,GACtB,EAAQ,WAAW,CACrB,EACE,EAAQ,WAAW,YAAY,QAC3B,EAAQ,WAAW,CACnB,GAAyB,IAAK,CAAE,KAAM,EAAQ,WAAW,AAAC,GACvD,EAAM,WAAW,EAC1B,CAAA,EAAqB,GAAyB,IAAK,CACjD,KAAM,EAAM,WAAW,AACzB,EAAA,GAGA,GACF,EAAU,WAAW,CAAC,GAEnB,EAAQ,UAAU,EACrB,EAAU,WAAW,CAAC,AAc1B,SAA0B,CAAK,CAAE,CAAY,CAAE,CAAW,EACxD,IAAM,EAAa,SAAS,aAAa,CAAC,MAS1C,GARI,EAAM,MAAM,CAAC,cAAc,EAC7B,EAAW,WAAW,CACpB,GAAyB,KAAM,CAC7B,KAAM,AAAA,EAAI,CAAC,qBAAqB,EAAE,EAAM,MAAM,CAAC,cAAc,GAAG,CAAC,AACnE,IAIA,EAAa,CACf,IAAM,EAAa,EAAM,YAAY,EAAE,gBACnC,GACF,EAAW,WAAW,CACpB,GAAyB,KAAM,CAC7B,KEl7BD,CAAC,EAAE,AFk7Be,EEl7BZ,OAAO,CAAC,GAAG,UAAU,CAAC,AFm7B7B,GAGN,CAoBA,OAlBA,EAAM,MAAM,EAAE,qBAAqB,QAAQ,CAAC,EAAO,KACjD,GAAI,GAAS,AAAU,MAAV,EAAe,CAC1B,IAAM,EAAiB,MAAM,OAAO,CAAC,GAAS,EAAM,IAAI,CAAC,MAAQ,EACjE,GAAI,CAAC,EAAa,QAAQ,CAAC,IAAQ,CAAC,EAAI,UAAU,CAAC,KAAM,CACvD,IAAM,EAAe,GAAK,QAAQ,IAAK,KACjC,EAAO,SAAS,aAAa,CAAC,MAC9B,EAAQ,GAAyB,OAAQ,CAC7C,KAAM,CAAC,EAAE,EAAa,EAAE,CAAC,AAC3B,GACM,EAAU,GAAyB,OAAQ,CAC/C,KAAM,CACR,GACA,EAAW,WAAW,CAAC,GACvB,EAAK,WAAW,CAAC,GACjB,EAAK,WAAW,CAAC,EACnB,CACF,CACF,GACO,CACT,EAtD2C,EAAO,CAAC,OAAO,CAAE,CAAA,IAEnD,CACT,CA4FO,SAAS,GAAyB,CAAK,CAAE,CAAM,CAAE,CAAO,EAC7D,IAAM,EAAY,GAAyB,MAAO,CAChD,UAAW,OACb,GACM,EAAa,GAAyB,MAAO,CACjD,UAAW,cACb,GACA,EAAU,WAAW,CAAC,GACtB,IAAM,EAAY,GAAyB,MAAO,CAAC,GAC7C,EAAa,GAAyB,MAAO,CAAC,GACpD,EAAW,WAAW,CAAC,GACvB,EAAW,WAAW,CAAC,GACvB,EAAU,WAAW,CAAC,GAAa,IACnC,EAAW,WAAW,CAAC,GAAa,IAEpC,IAAM,EAAa,EACf,GAAmB,OAAO,CAC1B,GAAmB,IAAI,CACrB,EAAiB,IAAI,GAA0B,CACnD,aAAc,EACd,iBAAkB,EAClB,WAAY,EACZ,UAAW,CAAA,CACb,GACM,EAAkB,IAAI,GAC1B,CACE,aAAc,EACd,iBAAkB,EAClB,WAAY,EACZ,UAAW,CAAA,CACb,EACA,CACE,WAAY,EACR,GAAoB,QAAQ,CAC5B,GAAoB,UAAU,AACpC,EAEF,CAAA,EAAe,eAAe,CAAG,EACjC,EAAgB,eAAe,CAAG,EAElC,EAAU,WAAW,CAAC,EAAe,OAAO,EAC5C,EAAW,WAAW,CAAC,EAAgB,OAAO,EAC9C,IAAM,EAAS,IAAI,GAA6B,CAC9C,MAAO,AAAA,EAAI,CAAC,eAAe,CAAC,AAC9B,EACA,CAAA,EAAO,MAAM,CAAG,AAAA,GAAe,MAAM,CACrC,IAAM,EAAgB,EAAE,CAExB,OADA,EAAc,IAAI,CAAC,GACZ,AAAA,GAAG,kBAAkB,CAAC,EAAW,CACtC,SAAU,EAAU,AAAA,EAAI,CAAC,oBAAoB,CAAC,CAAG,AAAA,EAAI,CAAC,kBAAkB,CAAC,CACzE,cAAe,CACjB,EACF,CAiCO,SAAS,GAAuB,CAAK,CAAE,EAAU,CAAC,CAAC,MAgBpD,EACA,EAhBJ,IAAM,EAAY,SAAS,aAAa,CAAC,OACzC,EAAU,WAAW,CACnB,GAAyB,OAAQ,CAC/B,KAAM,AAAA,EAAI,CAAC,eAAe,EAAE,AAAA,GAAc,oBAAoB,GAAG,CAAC,AACpE,IAEF,IAAM,EAAiB,GAAyB,MAAO,CACrD,UAAW,iBACb,GACA,EAAU,WAAW,CAAC,GACtB,IAAM,EAAe,GAAmB,EAAO,CAC7C,WAAY,CAAA,EACZ,YAAa,EAAQ,WAAW,AAClC,GAoEA,OAnEA,EAAe,WAAW,CAAC,GAGvB,CAAC,EAAM,MAAM,KACf,EAAS,IAAI,GAA6B,CACxC,MAAO,AAAA,EAAI,CAAC,gBAAgB,CAAC,CAC7B,OAAQ,IACN,GAAc,EAAO,CACnB,iBAAkB,EAAQ,gBAAgB,CAC1C,cAAe,EAAQ,aAAa,AACtC,GAAG,IAAI,CAAC,IACN,EAAe,eAAe,CAC5B,GAAmB,EAAO,CACxB,WAAY,CAAA,EACZ,YAAa,EAAQ,WAAW,AAClC,IAGR,GACA,EAAU,WAAW,CAAC,EAAO,OAAO,EACpC,EAAS,IAAI,GAA6B,CACxC,MAAO,AAAA,EAAI,CAAC,aAAa,CAAC,CAC1B,OAAQ,IAAM,AA54BpB,CAAA,SAAoB,CAAK,EACvB,IAAM,EAAY,SAAS,aAAa,CAAC,OAEzC,OADA,EAAU,WAAW,CAAC,GAAmB,EAAO,CAAE,gBAAiB,CAAA,CAAK,IACjE,AAAA,GAAG,kBAAkB,CAAC,EAC/B,CAAA,EAw4B+B,EAC3B,GACA,EAAU,WAAW,CAAC,EAAO,OAAO,EAEpC,EAAS,IAAI,GAA6B,CACxC,MAAO,AAAA,EAAI,CAAC,YAAY,CAAC,CACzB,OAAQ,IACN,GAAc,EAAO,CACnB,cAAe,CAAA,EACf,WAAY,GAAoB,KAAK,AACvC,EACJ,GACA,EAAU,WAAW,CAAC,EAAO,OAAO,EAEhC,EAAQ,SAAS,GACnB,EAAS,IAAI,GAA6B,CACxC,MAAO,AAAA,EAAI,CAAC,WAAW,CAAC,CACxB,OAAQ,IACC,AAn5BjB,CAAA,SAA8B,CAAK,MAkC7B,EAjCJ,IAAM,EAAQ,EAAM,YAAY,CAAC,QAAQ,CAAC,AAAA,GAAU,QAAQ,EAEtD,EAAQ,EAAE,CACV,EAAS,EAAE,CACjB,EAAM,MAAM,GAAG,OAAO,CAAC,AAAC,IACtB,GAAI,EAAK,YAAY,GAAK,AAAA,GAAa,UAAU,CAAE,CACjD,IAAM,EAAO,EAAK,MAAM,CAAC,GAAG,CAAC,OACzB,AAAS,CAAA,SAAT,EACF,EAAM,IAAI,CAAC,GACO,UAAT,GACT,EAAO,IAAI,CAAC,EAEhB,CACF,GAEA,IAAM,EAAmB,SAAS,aAAa,CAAC,OAChD,EAAiB,WAAW,CAAC,GAAa,IAE1C,IAAM,EAAmB,GACvB,OACA,EAAM,MAAM,CACZ,EAAO,MAAM,EAET,EAAoB,GACxB,QACA,EAAM,MAAM,CACZ,EAAO,MAAM,EAET,EAAU,EAAE,CAElB,EAAiB,WAAW,CAC1B,GAAyB,IAAK,CAAE,KAAM,AAAA,EAAI,CAAC,oBAAoB,CAAC,AAAC,IAG/D,AAAC,GAAqB,EAEd,GACV,CAAA,EAAU,AAAA,EAAI,CAAC,wBAAwB,CAAC,AAAD,EAFvC,EAAU,AAAA,EAAI,CAAC,mBAAmB,CAAC,CAIrC,EAAiB,WAAW,CAC1B,GAAyB,IAAK,CAAE,KAAM,CAAQ,IAEhD,IAAI,EAAa,GACb,EAAY,GAWhB,OAVI,IACF,EAAa,EAAQ,MAAM,CAC3B,EAAQ,IAAI,CAAC,AAAA,EAAI,CAAC,iBAAiB,CAAC,GAElC,IACF,EAAY,EAAQ,MAAM,CAC1B,EAAQ,IAAI,CAAC,AAAA,EAAI,CAAC,gBAAgB,CAAC,GAErC,EAAQ,IAAI,CAAC,AAAA,EAAI,CAAC,eAAe,CAAC,EAE3B,AAAA,GAAG,gBAAgB,CACxB,AAAA,EAAI,CAAC,oBAAoB,CAAC,CAC1B,EACA,GACA,IAAI,CAAC,AAAC,IACN,GAAI,IAAW,EACb,GAAsB,EAAO,E0DhXC,G1DiX9B,GAAsB,EAAO,E0D/WE,G1DgX/B,GAAmB,EAAO,cACrB,GAAI,IAAW,EAIpB,OAHA,GAAsB,EAAO,E0DrXA,G1DsX7B,GAAsB,EAAO,E0DpXC,G1DqX9B,GAAmB,EAAO,QACnB,AAUb,SAAiC,CAAK,EACpC,IAAM,EAAY,GAAyB,MAAO,CAAE,UAAW,WAAY,GAE3E,EAAU,WAAW,CACnB,GAAmB,EAAO,CAAE,gBAAiB,CAAA,EAAM,WAAY,CAAA,CAAK,IAEtE,IAAM,EAAqB,IAAI,GAC7B,CACE,aAAc,EACd,iBAAkB,EAClB,eAAgB,CAAA,CAClB,EACA,CACE,WAAY,GAAoB,MAAM,AACxC,GAGF,OADA,EAAU,WAAW,CAAC,EAAmB,OAAO,EACzC,AAAA,GAAG,kBAAkB,CAAC,EAAW,CACtC,MAAO,AAAA,EAAI,CAAC,2BAA2B,CAAC,CACxC,SAAU,AAAA,EAAI,CAAC,0BAA0B,CAAC,AAC5C,EACF,EA/BqC,EAGnC,EACF,CAAA,EA20BsC,GAAO,IAAI,CAAC,IACtC,EAAa,WAAW,CACtB,GAAmB,EAAO,CAAE,WAAY,CAAA,CAAK,IAIrD,GACA,EAAU,WAAW,CAAC,EAAO,OAAO,GAGlC,EAAQ,aAAa,GACvB,EAAgB,GAAiB,EAAE,CAInC,AAHA,CAAA,EAAS,IAAI,GAA6B,CACxC,MAAO,AAAA,EAAI,CAAC,iBAAiB,CAAC,AAChC,EAAA,EACO,MAAM,CAAG,aAChB,EAAc,IAAI,CAAC,KAGnB,IAIF,AAHA,CAAA,EAAS,IAAI,GAA6B,CACxC,MAAO,AAAA,EAAI,CAAC,eAAe,CAAC,AAC9B,EAAA,EACO,MAAM,CAAG,AAAA,GAAe,MAAM,CACrC,EAAc,IAAI,CAAC,IAGd,AAAA,GAAG,kBAAkB,CAAC,EAAW,CACtC,cAAe,EAAQ,aAAa,CACpC,cAAe,CACjB,GAAG,IAAI,CAAC,AAAC,GACP,AACO,eADC,EAEG,AArxBf,SAAwB,CAAK,EAC3B,IAAM,EAAY,GAAyB,MAAO,CAAE,UAAW,WAAY,GAErE,EAAqB,IAAI,GAC7B,CACE,aAAc,EACd,iBAAkB,EAClB,cAAe,CAAA,EACf,WAAY,CAAA,EACZ,aAAc,CAAC,EAAS,IAAa,EAAS,WAAW,CAAC,KAAK,CAAC,EAClE,EACA,CACE,WAAY,GAAoB,WAAW,AAC7C,GAEF,EAAU,WAAW,CAAC,EAAmB,OAAO,EAChD,IAAM,EAAe,IAAI,GAA6B,CACpD,MAAO,AAAA,EAAI,CAAC,eAAe,CAAC,CAC5B,OAAQ,AAAA,GAAe,MAAM,AAC/B,GAEA,OAAO,AAAA,GAAG,kBAAkB,CAAC,EAAW,CACtC,MAAO,AAAA,EAAI,CAAC,+BAA+B,CAAC,CAC5C,cAAe,IAAI,EAAmB,aAAa,CAAE,EAAa,AACpE,EACF,EA4vB8B,GAEf,QAAQ,OAAO,GAG9B,CAOO,SAAS,GAAmB,CAAO,MAQpC,CAPC,CAAA,EAAQ,gBAAgB,EAC3B,CAAA,EAAQ,gBAAgB,CAAG,EAAQ,YAAY,AAAZ,EAErC,IAAM,EAAqB,EAAQ,YAAY,CAAC,YAAY,CACtD,EAAmB,EAAQ,gBAAgB,CAAC,YAAY,CACxD,EAAW,EAAQ,QAAQ,CAGjC,OAAQ,EAAQ,QAAQ,CAAC,YAAY,EACnC,KAAK,AAAA,GAAa,MAAM,CACxB,KAAK,AAAA,GAAa,iBAAiB,CACnC,KAAK,AAAA,GAAa,SAAS,CAC3B,KAAK,AAAA,GAAa,MAAM,CACxB,KAAK,AAAA,GAAa,MAAM,CACxB,KAAK,AAAA,GAAa,KAAK,CACvB,KAAK,AAAA,GAAa,UAAU,CAC5B,KAAK,AAAA,GAAa,KAAK,CACvB,KAAK,AAAA,GAAa,OAAO,CACvB,EAAW,EAEf,CACA,OAAO,EAAS,GAAS,IAAI,CAAC,AAAC,IAC7B,OAAQ,GACN,KAAK,GAAe,OAAO,CAEzB,OADA,EAAmB,OAAO,CAAC,GACpB,EAAS,WAAW,CAAC,KAAK,CAAC,EAAQ,YAAY,CACxD,MAAK,GAAe,OAAO,CACzB,EAAmB,OAAO,CAAC,GAC3B,KACF,MAAK,GAAe,aAAa,CACjC,KAAK,GAAe,KAAK,CACvB,EAAiB,KAAK,CAAC,GACvB,KACF,MAAK,GAAe,WAAW,CAC7B,GACE,EAAS,OAAO,IAChB,EAAiB,qBAAqB,CAAC,GAEvC,OAAO,AAAA,GAAG,YAAY,CAAC,AAAA,EAAI,CAAC,2BAA2B,CAAC,EAExD,EAAmB,OAAO,CAAC,GAE3B,AADc,EAAiB,iBAAiB,CAAC,GAC3C,GAAG,CAAC,GAEZ,KACF,MAAK,GAAe,OAAO,CAEvB,EAAmB,OAAO,CAAC,GAE3B,AADc,EAAiB,iBAAiB,CAAC,GAC3C,GAAG,CAAC,GAEZ,KACF,MAAK,GAAe,IAAI,CACtB,CACE,IAAM,EAAQ,EAAQ,YAAY,CAAC,QAAQ,GACvC,EAAS,QAAQ,CACjB,EAAS,iBAAiB,CAC9B,EAAmB,UAAU,CAAC,GACzB,EAAQ,gBAAgB,CAAC,QAAQ,IACpC,EAAiB,aAAa,CAAC,GAEjC,EAAmB,OAAO,CAAC,GACvB,EAAS,YAAY,EAAI,CAAC,EAAiB,QAAQ,CACrD,EAAiB,KAAK,CAAC,EAAU,CAAE,OAAQ,CAAA,CAAK,GAEhD,EAAiB,KAAK,CAAC,EAAU,CAAE,OAAQ,CAAA,CAAK,EAEpD,CACA,KACF,MAAK,GAAe,KAAK,CACvB,EAAiB,KAAK,CAAC,GACvB,KACF,MAAK,GAAe,IAAI,CACtB,EAAmB,OAAO,CAAC,GACvB,EAAS,YAAY,EAAI,CAAC,EAAiB,QAAQ,CACrD,EAAiB,KAAK,CAAC,EAAU,CAAE,OAAQ,CAAA,CAAK,GAEhD,EAAiB,KAAK,CAAC,EAAU,CAAE,OAAQ,CAAA,CAAK,GAGlD,KACF,MAAK,GAAe,GAAG,CACrB,OAAO,EAAS,WAAW,CAAC,KAAK,CAAC,EAAQ,YAAY,CAC1D,CACA,OAAO,QAAQ,OAAO,EACxB,EACF,CnBtzCA,SAAS,GAAkB,CAAI,CAAE,CAAQ,CAAE,EAAQ,OAAO,EACxD,AAAA,GAAc,EAAM,CAClB,MAAO,EACP,UAAW,EACX,aAAc,EACd,SAAU,IAAI,EAAM,EAAS,CAAC,CAAE,EAAS,CAAC,EAC1C,SAAU,IAAI,EAAS,EAAG,IAAK,GAC/B,aAAc,IAAI,EAAa,EAAG,IAAK,EACzC,EACF,CAQA,SAAS,GAAkB,CAAM,CAAE,CAAM,CAAE,CAAM,EAE/C,GADA,AkBkEa,GlBlEC,UAAU,CAAC,YACrB,GAAU,EAOZ,OANA,AAAA,GAAe,AAAA,GAAc,eAAe,CAAC,aAAc,CACzD,UAAW,EACX,aAAc,EACd,SAAU,EAAO,QAAQ,CACzB,SAAU,IAAI,EAAS,EAAG,EAAG,EAC/B,GACO,GAAY,EAAQ,EAAQ,EAEvC,CAQA,SAAS,GAAY,CAAQ,CAAE,CAAQ,CAAE,CAAM,EAC7C,GACE,CAAC,GACD,CAAC,EAAS,KAAK,EACf,EAAS,MAAM,IACf,EAAS,gBAAgB,GAEzB,OAAO,EAET,IAAI,EAAa,EAAS,MAAM,CAAC,GAAG,CAAC,KAAM,GAG3C,GAFA,EAAa,KAAK,GAAG,CAAC,EAAG,EAAa,GACtC,EAAS,MAAM,CAAC,GAAG,CAAC,KAAM,GACtB,AAAe,IAAf,EAKF,CAAA,GAJA,AkBmCW,GlBnCG,UAAU,CAAC,OACzB,AAAA,EAAI,IAAI,CAAC,iBACT,EAAS,WAAW,CAAG,IAAI,GAAmB,GAC9C,EAAS,KAAK,CAAG,CAAA,EACb,EAAS,MAAM,KAAM,KAEnB,EADJ,IAAM,EAAS,EAAS,MAAM,CAAC,sBAAsB,CAAC,EAElD,CAAA,EAAO,KAAK,CAAC,GAAG,CAAG,EAAO,KAAK,CAAC,GAAG,CACrC,EAAO,AAAA,EAAI,CAAC,SAAS,EAAE,EAAO,KAAK,CAAC,GAAG,CAAC,CAAC,CAChC,EAAO,GAAG,CAAC,GAAG,CAAG,EAAO,GAAG,CAAC,GAAG,EACxC,CAAA,EAAO,CAAC,CAAC,EAAE,EAAO,GAAG,CAAC,GAAG,CAAG,EAAO,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,AAAD,EAE7C,GACF,GACE,EACA,EAAS,QAAQ,CACjB,AAAA,GAAQ,sBAAsB,CAGpC,CAAA,KACK,CACL,IAAM,EAAY,EAAS,MAAM,GAC7B,AAAA,GAAQ,sBAAsB,CAC9B,AAAA,GAAQ,uBAAuB,CACnC,GAAkB,CAAC,CAAC,EAAE,EAAO,GAAG,CAAC,CAAE,EAAS,QAAQ,CAAE,EACxD,CACA,OAAO,CACT,CAGO,MAAM,GAEX,KAAM,AAMN,aAAY,CAAK,CAAE,CACjB,IAAI,CAAC,KAAK,CAAG,CACf,CAKA,MAAM,CAAa,CAAE,CACnB,OAAO,QAAQ,OAAO,EACxB,CAMA,MAAM,CAAa,CAAE,CACnB,OAAO,QAAQ,OAAO,EACxB,CAOA,UAAW,CACT,MAAO,CAAA,CACT,CAOA,UAAW,CACT,MAAO,CAAA,CACT,CAWA,iBAAiB,CAAa,CAAE,CAC9B,MAAO,CAAA,CACT,CACF,CAMO,MAAM,WAAc,GAKzB,YAAY,CAAK,CAAE,CACjB,KAAK,CAAC,EACR,CAKA,UAAW,CACT,MAAO,CAAA,CACT,CAKA,UAAW,CACT,MAAO,CAAA,CACT,CAKA,MAAM,CAAO,CAAE,CACb,OAAO,IAAI,CAAC,CAAC,EAAuB,CAAC,IAAI,CAAC,KAAK,CAAE,EACnD,CAMA,MAAM,CAAO,CAAE,CACb,OAAO,IAAI,CAAC,CAAC,EAAuB,CAAC,EAAS,IAAI,CAAC,KAAK,CAC1D,CAQA,iBAAiB,CAAa,CAAE,CAC9B,MAAO,CAAA,CACT,CAQA,CAAC,EAAa,CAAC,CAAQ,CAAE,CAAQ,EAC/B,IAAM,EAAa,AAAA,EAAM,IAAI,CAAC,EAAS,QAAQ,EAS/C,OAAO,AAJc,IAAI,GAAa,CACpC,KAAM,CALY,IAAI,EACtB,EAAS,QAAQ,CAAC,CAAC,CAAG,GAAO,CAAA,EAAS,QAAQ,CAAC,CAAC,CAAG,EAAS,QAAQ,CAAC,CAAA,AAAA,EACrE,EAAS,QAAQ,CAAC,CAAC,CAAG,GAAO,CAAA,EAAS,QAAQ,CAAC,CAAC,CAAG,EAAS,QAAQ,CAAC,CAAC,AAAD,GAGjD,EAAW,CAC/B,MAAO,GACT,GACoB,wBAAwB,CAAC,EAAS,MAAM,CAC9D,CASA,CAAC,EAAmB,CAAC,CAAQ,CAAE,CAAQ,EACrC,IAAI,EAAc,EACd,EAAoB,EAQxB,OAPA,EAAS,MAAM,CAAC,UAAU,GAAG,OAAO,CAAC,AAAC,IACpC,IAAM,EAAS,A6EtOd,SAAwB,CAAM,CAAE,CAAM,EAC3C,IAAM,EAAW,GAAc,IAE/B,GAAI,AAAa,IAAb,EAEF,OADA,AAAA,EAAI,KAAK,CAAC,iCACH,EACF,GAAI,AAAa,KAAb,EAET,OADA,AAAA,EAAI,KAAK,CAAC,wCACH,EAAI,EAAO,aAAa,GAGjC,IAAM,EACJ,EAAW,EAAO,eAAe,CAAG,EAAO,gBAAgB,CACvD,EAAW,EAAO,MAAM,CAAC,cAAc,SAI7C,CAHA,AAAA,EAAI,KAAK,CACP,CAAC,cAAc,EAAE,EAAS,oBAAoB,EAAE,EAAO,eAAe,CAAC,qBAAqB,EAAE,EAAO,gBAAgB,CAAC,aAAa,EAAE,EAAS,CAAC,EAE7I,GAAc,GACT,EAAO,aAAa,GAEtB,CACT,E7EiN8C,EAAQ,GAC5C,EAAS,IACX,IACA,GAAe,EAEnB,GACO,IAAI,QAAQ,AAAC,IAClB,GAAI,GAAe,EAAG,CACpB,AkBhJO,GlBgJO,UAAU,CAAC,QACzB,AAAA,GAAe,AAAA,GAAc,eAAe,CAAC,YAAa,CACxD,UAAW,EACX,aAAc,EACd,SAAU,EAAS,QAAQ,CAC3B,SAAU,IAAI,EAAS,EAAG,EAAG,EAC/B,GACA,IACA,MACF,CACA,IAAI,EAAW,EAAoB,EAAI,eAAiB,QACpD,EACF,EAAoB,EAAI,wBAA0B,kBAEpD,AkB9JS,GlB8JK,UAAU,CAAC,GACzB,AAAA,GAAe,AAAA,GAAc,eAAe,CAAC,GAAW,CACtD,UAAW,EACX,aAAc,EACd,SAAU,EAAS,QAAQ,CAC3B,SAAU,IAAI,EAAS,EAAG,EAAG,EAC/B,GAEA,EADmB,GAAY,EAAU,EAAU,GAErD,EACF,CAQA,CAAC,EAAuB,CAAC,CAAQ,CAAE,CAAQ,EACzC,OAAO,IAAI,CAAC,CAAC,EAAa,CAAC,EAAU,GAAU,IAAI,CAAC,IAClD,IAAI,CAAC,CAAC,EAAmB,CAAC,EAAU,GAExC,CACF,CAMO,MAAM,WAA2B,GAKtC,YAAY,CAAK,CAAE,CACjB,KAAK,CAAC,EACR,CAMA,UAAW,CACT,MAAO,CAAA,CACT,CAKA,UAAW,CACT,MAAO,CAAA,CACT,CAMA,MAAM,MAAM,CAAO,CAAE,CACnB,OmBi0BK,GnBj0BiC,EAAS,IAAI,CAAC,KAAK,CmBi0BT,CAAA,EnBh0BlD,CACF,CAKO,MAAM,WAAc,GAKzB,YAAY,CAAK,CAAE,CACjB,KAAK,CAAC,EACR,CAKA,UAAW,CACT,MAAO,CAAA,CACT,CAKA,UAAW,CACT,MAAO,CAAA,CACT,CAQA,MAAM,CAAO,CAAE,CACb,OAAO,AAAA,GAAG,gBAAgB,CACxB,AAAA,EAAI,CAAC,oBAAoB,CAAC,CAC1B,AAAA,EAAI,CAAC,sBAAsB,CAAC,CAC5B,CAAC,AAAA,EAAI,CAAC,YAAY,CAAC,CAAE,AAAA,EAAI,CAAC,YAAY,CAAC,CAAC,EACxC,IAAI,CAAC,AAAC,GACN,AAAI,AAAW,IAAX,EAGK,IAAI,CAAC,CAAC,EAAa,CAAC,GmB0wB1B,GnB5wBmC,EAAS,IAAI,CAAC,KAAK,CmB4wBd,CAAA,GnBvwB/C,CAOA,CAAC,EAAa,CAAC,CAAI,EACjB,IAAM,EAAa,AAAA,EAAM,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,EAC3C,EAAgB,AAAA,EAAM,IAAI,CAAC,EAAK,QAAQ,EAC9C,OAAO,QAAQ,GAAG,CAAC,CACjB,AAAA,GAAoB,EAAM,GAC1B,AAAA,GAAoB,IAAI,CAAC,KAAK,CAAE,GACjC,CACH,CACF,CAKO,MAAM,WAAqB,GAKhC,YAAY,CAAK,CAAE,CACjB,KAAK,CAAC,EACR,CAKA,UAAW,CACT,MAAO,CAAA,CACT,CAKA,UAAW,CACT,MAAO,CAAA,CACT,CAOA,MAAM,MAAM,CAAO,CAAE,CACnB,IAAI,CAAC,KAAK,CAAC,KAAK,CAAG,CAAA,EACnB,IAAM,EAAiB,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,sBAAsB,GACrE,IAAI,EAWF,OAAO,AAAA,GAAG,YAAY,CAAC,AAAA,EAAI,CAAC,gCAAgC,CAAC,CAX3C,EAClB,IAAM,EAAW,EAAe,QAAQ,CACxC,OAAO,GAAgC,CACrC,SAAU,IAAI,CAAC,CAAC,EAAsB,CAAC,GACvC,aAAc,IAAI,CAAC,KAAK,CACxB,iBAAkB,EAClB,UAAW,EAAe,KAAK,CAAC,SAAS,CACzC,SAAU,EACV,WAAY,GAAgC,IAAI,AAClD,EACF,CAGF,CAQA,CAAC,EAAsB,CAAC,CAAa,SACnC,AAAI,IAAI,CAAC,KAAK,CAAC,IAAI,GAAK,AAAA,GAAU,eAAe,CACxC,AAAA,EAAI,CAAC,6BAA6B,CAAC,CACjC,EAAc,YAAY,GAAK,AAAA,GAAa,KAAK,CAEnD,AAAA,EAAI,CAAC,uBAAuB,CAAC,CAE/B,AAAA,EAAI,CAAC,qBAAqB,CAAC,AACpC,CACF,CAKO,MAAM,WAAe,GAK1B,YAAY,CAAK,CAAE,CACjB,KAAK,CAAC,EACR,CAKA,UAAW,CACT,MAAO,CAAA,CACT,CAKA,UAAW,CACT,MAAO,CAAA,CACT,CAKA,MAAM,CAAO,CAAE,CACb,IAAM,EAAS,GAA0B,IAAI,CAAC,KAAK,CAAE,GAGrD,OAFA,GAAkB,IAAI,CAAC,KAAK,CAAE,EAAS,GAEhC,QAAQ,OAAO,EACxB,CACF,CAMO,MAAM,WAAkB,GAK7B,YAAY,CAAK,CAAE,CACjB,KAAK,CAAC,EACR,CAMA,UAAW,CACT,MAAO,CAAA,CACT,CAKA,UAAW,CACT,MAAO,CAAA,CACT,CAMA,MAAM,MAAM,CAAO,CAAE,CACnB,IAAM,EAAU,AAAA,GAAM,UAAU,GAC1B,EAAY,EAAQ,gBAAgB,CAAC,EAAQ,QAAQ,EACrD,EAAQ,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,qBAAqB,CAAC,QAAS,GACzD,EAAa,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,MAAM,CAAC,cAAe,KACvD,EAAa,EAGjB,IAAK,IAAM,KAFW,EAAQ,qBAAqB,CAAC,EAAW,GAE7B,CAChC,GAAI,EAAa,EACf,MAEF,IAAI,CAAC,CAAC,EAAY,CAAC,EAAK,UAAU,EAClC,EAAK,YAAY,GAAG,OAAO,CAAC,AAAC,IAC3B,GAAI,EAAS,OAAO,IAAM,EAAS,QAAQ,GAAI,CAC7C,IACA,IAAM,EAAS,A6E7clB,SAAwB,CAAQ,CAAE,CAAM,CAAE,CAAK,EACpD,IAAM,EAAuB,EAAS,MAAM,CAAC,GAAG,CAAC,MAAO,GAClD,EAAe,EAAO,MAAM,CAAC,8BAA8B,CAAC,GAC9D,EAAa,EAAM,MAAM,CAAC,MAAM,CAAC,YACjC,IACF,AAAA,EAAI,KAAK,CAAC,CAAC,MAAM,EAAE,EAAS,EAAE,CAAC,eAAe,CAAC,EAC/C,EAAa,GAMf,IAAM,EAAiB,EAFrB,CAAA,EAAS,MAAM,CAAC,cAAc,CAAC,GAC/B,AAAA,GAAyB,EAF3B,EAII,EAAc,GAAc,IAAM,EAChC,EAAS,GACb,EAAM,MAAM,CAAC,uBAAuB,CAAC,WAEvC,AAAI,GAAe,EAEV,KAAK,KAAK,CAAC,AADH,EAAM,MAAM,CAAC,QAAQ,CAAC,YAAa,GACvB,GAEpB,CAEX,E7EubY,EACA,EACA,IAAI,CAAC,KAAK,EAEZ,GAAY,EAAS,EAAU,EACjC,CACF,EACF,CAIA,OAHI,IAAI,CAAC,KAAK,CAAC,YAAY,GAAK,AAAA,GAAa,KAAK,EAChD,EAAQ,YAAY,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,EAEhC,QAAQ,OAAO,EACxB,CAMA,CAAC,EAAY,CAAC,CAAU,GAEtB,ACnfG,SAAgC,CAAa,CAAE,CAAO,EAC3D,IAAM,EAAQ,IAAI,GAChB,CACE,OAAQ,EACR,OAAQ,OACR,WAAY,EACZ,QAAS,CACX,EACA,CAAE,cAAe,IAAK,WAAY,AAAA,GAAW,OAAO,AAAC,GAEvD,GACE,IAAI,GAA0B,AAAA,EAAO,YAAY,GAAI,GACrD,EAEJ,EDqe2B,AADL,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,GAAG,CAAC,UACP,WAAW,GAAI,CAC9C,SAAU,EACV,UAAW,EACX,aAAc,CAChB,EACF,CACF,CAMO,MAAM,WAAoB,GAK/B,YAAY,CAAK,CAAE,CACjB,KAAK,CAAC,EACR,CAMA,UAAW,CACT,MAAO,CAAA,CACT,CAKA,UAAW,CACT,MAAO,CAAA,CACT,CAMA,MAAM,MAAM,CAAO,CAAE,CAEnB,IAAM,EAAW,AADF,IAAI,CAAC,KAAK,CAAC,MAAM,CACR,GAAG,CAAC,QAC5B,GAAI,AAAa,WAAb,EAAuB,CACzB,IAAM,EAAS,GAA0B,IAAI,CAAC,KAAK,CAAE,UACrD,AAAI,AAAW,IAAX,EACK,AAAA,GAAG,YAAY,CAAC,AAAA,EAAI,CAAC,uBAAuB,CAAC,EAC3C,AAAkD,GAAlD,GAAkB,IAAI,CAAC,KAAK,CAAE,EAAS,GACzC,AAAA,GAAG,YAAY,CAAC,AAAA,EAAI,CAAC,wBAAwB,CAAC,EAE9C,AAAA,GAAG,YAAY,CAAC,AAAA,EAAI,CAAC,oBAAoB,EAAE,EAAO,CAAC,CAE9D,CAAO,CACL,IAAI,EAAS,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,MAAM,CAAC,KAAM,GAC5C,GAAI,AAAW,IAAX,EACF,OAAO,AAAA,GAAG,YAAY,CAAC,AAAA,EAAI,CAAC,8BAA8B,CAAC,EAE7D,IAAM,EAAY,EAAQ,MAAM,CAAC,MAAM,CAAC,MAClC,EAAe,EAAQ,MAAM,CAAC,MAAM,CAAC,UAC3C,GAAI,CAAC,EAEH,OADA,AAAA,EAAI,KAAK,CAAC,CAAC,MAAM,EAAE,EAAQ,MAAM,CAAC,GAAG,CAAC,QAAQ,kBAAkB,CAAC,EAC1D,QAAQ,OAAO,GAExB,IAAM,EAAY,EAAe,EACjC,GAAI,EAAY,EAId,OAHA,AAAA,EAAI,KAAK,CACP,CAAC,MAAM,EAAE,EAAQ,MAAM,CAAC,GAAG,CAAC,QAAQ,0BAA0B,CAAC,EAE1D,QAAQ,OAAO,GAGxB,GAAI,AAAW,IADf,CAAA,EAAS,KAAK,GAAG,CAAC,EAAW,EAA7B,EAEE,OAAO,AAAA,GAAG,YAAY,CAAC,AAAA,EAAI,CAAC,mCAAmC,CAAC,EAElE,IAAM,EAAU,EAAY,EACtB,EACJ,AAAa,WAAb,EACI,AAAA,EAAI,CAAC,6BAA6B,EAAE,EAAO,CAAC,CAC5C,AAAA,EAAI,CAAC,qBAAqB,EAAE,EAAO,CAAC,CAC1C,OAAO,AAAA,GAAG,YAAY,CAAC,GAAS,IAAI,CAAC,IACnC,EAAQ,MAAM,CAAC,GAAG,CAAC,KAAM,GAE7B,CACF,CACF,CDtnBO,MAAM,GAAY,CACvB,KAAM,EACN,MAAO,EACP,SAAU,EACV,gBAAiB,EACjB,OAAQ,EACR,KAAM,CACR,EAQa,GAAW,CACtB,OAAQ,SACR,KAAM,OACN,QAAS,SACX,EAQO,SAAS,GAAe,CAAG,EAChC,IAAM,EAAO,EAAS,CAAC,EAAI,CAI3B,aAHI,GACF,AAAA,EAAI,KAAK,CAAC,CAAC,yBAAyB,EAAE,EAAI,CAAC,EAEtC,CACT,CAOO,MAAM,WAAc,GAEzB,YAAa,AAEb,CAAA,eAAgB,AAEhB,CAAA,MAAO,AAEP,CAAA,MAAO,AAEP,CAAA,WAAY,AAEZ,CAAA,KAAM,AAEN,CAAA,WAAY,AAEZ,CAAA,WAAY,AAEZ,CAAA,aAAc,AAEd,CAAA,YAAa,AAEb,CAAA,IAAK,AAOL,aAAY,CAAM,CAAE,EAAO,GAAU,KAAK,CAAE,CAC1C,KAAK,GACL,IAAI,CAAC,WAAW,CAAG,IAAI,GACvB,IAAI,CAAC,MAAM,CAAG,EACd,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAG,CAAA,EACvB,IAAI,CAAC,eAAe,CAAG,EACvB,IAAI,CAAC,KAAK,CAAG,CAAA,EACb,IAAI,CAAC,WAAW,CAAG,CAAA,EACnB,IAAI,CAAC,IAAI,CAAG,EACZ,IAAI,CAAC,YAAY,CAAG,IAAI,GACtB,IAAS,GAAU,MAAM,EAAI,IAAS,GAAU,eAAe,CAC/D,IAAM,IAAI,CAAC,CAAC,EAAqB,GAErC,CAKA,CAAC,EAAqB,GACpB,IAAM,EAAQ,IAAI,CAAC,YAAY,CAAC,uBAAuB,GACvD,IAAI,CAAC,MAAM,CAAC,gBAAgB,CAAC,EAC/B,CAMA,QAAS,CACP,OAAO,IAAI,CAAC,IAAI,GAAK,GAAU,IAAI,AACrC,CAMA,SAAU,CACR,OAAO,IAAI,CAAC,IAAI,GAAK,GAAU,KAAK,AACtC,CAMA,UAAW,CACT,OAAO,IAAI,CAAC,IAAI,GAAK,GAAU,MAAM,AACvC,CAMA,kBAAmB,CACjB,OAAO,IAAI,CAAC,IAAI,GAAK,GAAU,eAAe,AAChD,CAKA,IAAI,QAAQ,CAAK,CAAE,CACjB,IAAI,CAAC,MAAM,CAAC,OAAO,CAAG,CACxB,CAKA,IAAI,SAAU,CACZ,OAAO,IAAI,CAAC,MAAM,CAAC,OAAO,AAC5B,CAKA,IAAI,UAAW,CACb,OAAO,IAAI,CAAC,MAAM,CAAC,QAAQ,AAC7B,CAMA,IAAI,SAAS,CAAK,CAAE,CAClB,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAG,CACzB,CAMA,IAAI,UAAW,CACb,OAAO,IAAI,CAAC,MAAM,CAAC,QAAQ,AAC7B,CAMA,IAAI,SAAS,CAAK,CAAE,CAClB,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAG,CACzB,CAOA,IAAI,UAAW,CACb,OAAO,IAAI,CAAC,MAAM,CAAC,QAAQ,AAC7B,CAMA,IAAI,SAAS,CAAY,CAAE,CACzB,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAG,CACzB,CAMA,kBAAmB,CACjB,OAAO,IAAI,CAAC,MAAM,CAAC,gBAAgB,EACrC,CAMA,aAAc,CACZ,OAAO,IAAI,EAAE,OAAO,IAAI,UAAY,GAAS,MAAM,AACrD,CAMA,WAAY,CACV,OAAO,IAAI,EAAE,OAAO,IAAI,UAAY,GAAS,OAAO,AACtD,CAMA,QAAS,CACP,OAAO,IAAI,EAAE,OAAS,GAAU,IAAI,AACtC,CAMA,IAAI,UAAW,CACb,OAAO,IAAI,EAAE,OAAO,IAAI,OAC1B,CAMA,cAAe,OACb,EAAK,IAAI,CAAC,WAAW,IAGjB,IAAI,CAAC,WAAW,IACX,GAAc,GAAK,EAG9B,CAOA,kBAAkB,CAAU,CAAE,OAC5B,EAAI,CAAA,EAAW,MAAM,IAAM,IAAI,CAAC,gBAAgB,EAAA,GAGtC,CAAC,IAAI,CAAC,KAAK,EAAI,CAAC,IAAI,CAAC,MAAM,IAAO,CAAC,IAAI,CAAC,QAAQ,AAE5D,CAOA,0BAA0B,CAAU,CAAE,QACpC,AAAI,IAAI,CAAC,SAAS,GACT,CAAC,EAAW,SAAS,IAAM,CAAC,EAAW,QAAQ,GAC7C,IAAI,CAAC,gBAAgB,GACvB,EAAW,MAAM,KACf,CAAA,CAAC,IAAI,CAAC,KAAK,EAAI,EAAW,MAAM,EAAA,GAGlC,CAAC,IAAI,CAAC,QAAQ,AAEzB,CAMA,OAAO,CAAY,CAAE,CACnB,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,EACrB,CAKA,YAAY,CAAW,CAAE,CACvB,KAAK,CAAC,YAAY,IAAI,CAAC,MAAM,CAAC,QAAQ,CACxC,CAIA,mBAAmB,CAAW,CAAE,CAC9B,KAAK,CAAC,mBAAmB,IAAI,CAAC,MAAM,CAAC,QAAQ,CAC/C,CAKA,gBAAgB,CAAW,CAAE,CAC3B,KAAK,CAAC,gBAAgB,IAAI,CAAC,MAAM,CAAC,QAAQ,CAC5C,CAIA,kBAAkB,CAAW,CAAE,CAC7B,KAAK,CAAC,kBAAkB,IAAI,CAAC,MAAM,CAAC,QAAQ,CAC9C,CACF,CDnTA,MAAM,GAAS,IAAI,IAGnB,IAAI,GAAU,CAAA,EA8Gd,SAAS,GAAe,CAAS,CAAE,CAAK,EACtC,IAAM,EAAiB,AAAA,EAAO,oBAAoB,CAAC,EAAM,QAAQ,EAC7D,EAAc,EAAM,MAAM,CAAC,cAAc,GAQ7C,OAAO,AAPW,IAAI,EACpB,EAAe,CAAC,CAAG,EAAY,KAAK,CAAG,EACvC,EAAe,CAAC,CAAG,EAAY,MAAM,CAAG,EACxC,EAAY,KAAK,CACjB,EAAY,MAAM,EAGH,kBAAkB,CAAC,EAAU,KAAK,CAAC,CAAC,CAAE,EAAU,KAAK,CAAC,CAAC,CAC1E,CA8CA,SAAS,GAAiB,CAAS,EACjC,GAAI,CAAC,IAGD,CAAC,GAFH,MAAO,CAAA,EAKT,IAAK,GAAM,CAAC,EAAW,EAAM,GAAI,GAC/B,GAAI,GAAe,EAAW,GAE5B,OADA,EAAM,eAAe,CAAC,EAAO,EAAU,MAAM,EACtC,CAAA,EAGX,MAAO,CAAA,CACT,CA8CA,IAAA,GAdY,CACV,UA5MF,SAAmB,CAAK,CAAE,CAAU,CAAE,CAAW,EAC/C,IAAM,EAAQ,IAAI,GAChB,IAAI,GAAO,CACT,SAAU,IAAI,GAA0B,AAAA,EAAO,YAAY,GAAI,EACjE,IAgBF,OAbA,GAAO,GAAG,CAAC,EAAO,GAClB,EAAM,UAAU,CAAC,KACV,EAEM,AAA4B,IAA5B,EAAM,eAAe,IAC9B,EAAM,eAAe,CAAC,GACtB,MAEA,EAAM,eAAe,CAAC,GACtB,KANA,GAQJ,GACA,EAAM,eAAe,CAAC,GACf,CACT,EAwLE,mBA9KF,SAA4B,CAAK,CAAE,CAAU,CAAE,CAAW,EACxD,IAAM,EAAQ,IAAI,GAChB,IAAI,GAAO,CACT,SAAU,IAAI,GAA0B,AAAA,EAAO,YAAY,GAAI,EACjE,IAYF,OATA,GAAO,GAAG,CAAC,EAAO,GAClB,EAAM,gBAAgB,CAAC,KACrB,EAAM,eAAe,CAAC,GACtB,KACF,GACA,EAAM,cAAc,CAAC,KACnB,EAAM,eAAe,CAAC,GACtB,KACF,GACO,CACT,EA8JE,MAjJF,WACE,GAAO,KAAK,EACd,EAgJE,aAzJF,SAAsB,CAAM,EAC1B,GAAO,MAAM,CAAC,EAChB,EAwJE,OA3IF,SAAgB,CAAY,EACrB,IAGL,GAAO,OAAO,CAAC,AAAC,IACd,IAAM,EAAQ,AAAA,EAAS,IAAI,CAAC,EAAO,QAAQ,CAC3C,CAAA,EAAO,QAAQ,CAAG,AAAA,EAAO,oBAAoB,CAAC,EAAO,QAAQ,EAC7D,EAAO,MAAM,CAAC,GACd,EAAO,QAAQ,CAAG,CACpB,EACF,EAkIE,qBArBF,SAA8B,CAAS,EACrC,OAAO,GAAiB,EAC1B,EAoBE,aA5FF,SAAsB,CAAS,EAC7B,GAAI,CAAC,GACH,MAAO,CAAA,EAET,IAAK,GAAM,CAAC,EAAW,EAAM,GAAI,GAC/B,GAAI,GAAe,EAAW,GAE5B,OADA,EAAM,WAAW,CAAC,EAAO,EAAU,MAAM,EAClC,CAAA,EAGX,MAAO,CAAA,CACT,EAkFE,mBAjCF,SAA4B,CAAe,EACzC,MAAO,CAAA,CACT,EAgCE,mBA5EF,SAA4B,CAAS,EACnC,GAAI,CAAC,IAGD,CAAC,GAFH,MAAO,CAAA,EAKT,IAAK,GAAM,CAAC,EAAW,EAAM,GAAI,GAC/B,GAAI,GAAe,EAAW,GAE5B,OADA,EAAM,iBAAiB,CAAC,EAAO,EAAU,MAAM,EACxC,CAAA,EAGX,MAAO,CAAA,CACT,EA+DE,iBAAkB,GAClB,WAlBF,SAAoB,CAAU,EAC5B,GAAU,CACZ,CAiBA,EgF9OO,MAAM,GAAS,CACpB,SAAU,eACV,MAAO,eACP,QAAS,cACX,CECO,OAAM,GACX,CAAC,EAAO,AAAC,AACT,EAAC,EAAO,AAAC,AACT,EAAC,EAAW,AAAC,AACb,EAAC,EAAW,AAAC,AACb,EAAC,EAAO,AAAC,AAWT,aAAY,CAAO,CAAE,CACnB,IAAI,CAAC,CAAC,EAAO,CAAG,EACd,EAAQ,OAAO,CACf,EAAQ,OAAO,EAEjB,IAAI,CAAC,CAAC,EAAO,CAAG,EACd,EAAQ,OAAO,CACf,EAAQ,OAAO,EAEjB,IAAI,CAAC,CAAC,EAAW,CAAG,EAAQ,WAAW,CACvC,IAAI,CAAC,CAAC,EAAW,CAAG,EAAQ,WAAW,AACzC,CAOA,CAAC,EAAU,CAAC,EAAM,CAAC,EACjB,IAAI,EAAS,GACb,KAAO,KAAQ,GACb,GAAU,EAAsB,AAAA,GAAe,IAAI,EAErD,OAAO,CACT,CAOA,CAAC,EAAW,CAAC,EAAM,CAAC,EAClB,IAAI,EAAS,GACb,KAAO,KAAQ,GACb,GAAU,EAAsB,AAAA,GAAe,MAAM,EAEvD,OAAO,CACT,CAOA,CAAC,EAAU,CAAC,EAAM,CAAC,EACjB,IAAI,EAAS,GACb,KAAO,KAAQ,GACb,GAAU,EAAsB,AAAA,GAAe,IAAI,EAErD,OAAO,CACT,CAOA,CAAC,EAAY,CAAC,EAAM,CAAC,EACnB,IAAI,EAAS,GACb,KAAO,KAAQ,GACb,GAAU,EAAsB,AAAA,GAAe,OAAO,EAExD,OAAO,CACT,CAOA,CAAC,EAAa,CAAC,EAAM,CAAC,EACpB,IAAI,EAAS,GACb,KAAO,KAAQ,GACb,GAAU,EAAsB,AAAA,GAAe,QAAQ,EAEzD,OAAO,CACT,CAMA,CAAC,EAAS,CAAC,CAAG,EACZ,OAAO,AAAA,GAAe,IAAI,CAAC,QAAQ,CAAC,EACtC,CAMA,CAAC,EAAU,CAAC,CAAG,EACb,OAAO,AAAA,GAAe,MAAM,CAAC,QAAQ,CAAC,EACxC,CAMA,CAAC,EAAS,CAAC,CAAG,EACZ,OAAO,AAAA,GAAe,IAAI,CAAC,QAAQ,CAAC,EACtC,CAMA,CAAC,EAAW,CAAC,CAAG,EACd,OAAO,AAAA,GAAe,OAAO,CAAC,QAAQ,CAAC,EACzC,CAMA,CAAC,EAAY,CAAC,CAAG,EACf,OAAO,AAAA,GAAe,QAAQ,CAAC,QAAQ,CAAC,EAC1C,CAKA,UAAW,CAGT,IAAI,CAAC,CAAC,EAAO,CAAG,EAAE,CAClB,IAAI,EAAmB,EACnB,EAAe,IAAI,CAAC,CAAC,EAAO,CAChC,KAAO,IAAI,CAAC,CAAC,EAAO,CAAC,MAAM,CAAG,IAAI,CAAC,CAAC,EAAO,CAJvB,GAIuC,CACzD,IAAM,EAAc,EAAmB,EANrB,EAMkD,EAC9D,EACJ,EAAc,EAAI,EAAmB,EAAG,GAAe,EACnD,EAAmB,KAAK,GAAG,CAC/B,EAAmB,EAVH,EAAA,GAad,EAAmB,KAAK,GAAG,CAC7B,IAAI,CAAC,CAAC,EAAW,CACjB,IAAI,CAAC,CAAC,EAAO,CAAG,GAGZ,EACJ,EAAmB,EACf,EAAmB,EAAkB,GACrC,EACA,EAAgB,IAAI,CAAC,CAAC,EAAO,CAAG,EAAe,EAK/C,EAAW,EA1BC,EAsBA,KAAK,GAAG,CACxB,IAAI,CAAC,CAAC,EAAW,CACjB,IAAI,CAAC,CAAC,EAAO,CAAG,IAAI,CAAC,CAAC,EAAO,CAAC,MAAM,GAGtC,IAAI,CAAC,CAAC,EAAU,CAAC,EAAc,EAAU,EAAe,GACxD,EAAmB,EACnB,EAAe,CACjB,CAGA,OAFA,IAAI,CAAC,CAAC,EAAmB,GACzB,IAAI,CAAC,CAAC,EAAW,GACV,IAAI,CAAC,kBAAkB,EAChC,CAMA,oBAAqB,CACnB,OAAO,IAAI,CAAC,CAAC,EAAO,CAAC,GAAG,CAAC,AAAC,GAAY,EAAQ,IAAI,CAAC,IACrD,CASA,CAAC,EAAU,CAAC,CAAY,CAAE,CAAQ,CAAE,CAAa,CAAE,CAAY,EAC7D,AAAA,EAAI,GAAG,CACL,CAAC,YAAY,EAAE,EAAa,CAAC,EAAE,EAAS,CAAC,EAAE,EAAc,CAAC,EAAE,EAAa,CAAC,EAE5E,IAAI,EAAU,GAGd,GAFW,IAAI,CAAC,CAAC,EAAU,CAAC,GACjB,IAAI,CAAC,CAAC,EAAU,CAAC,GACjB,IAAI,CAAC,CAAC,EAAU,CAAC,GAC5B,IAAI,CAAC,CAAC,EAAO,CAAC,IAAI,CAAC,EAAQ,KAAK,CAAC,KACjC,IAAK,IAAI,EAAc,EAAG,EAAc,EAAe,EAAG,IAMxD,EALU,GACC,IAAI,CAAC,CAAC,EAAU,CAAC,GACjB,IAAI,CAAC,CAAC,EAAU,CAAC,GACjB,IAAI,CAAC,CAAC,EAAW,CAAC,EAAW,GAC7B,IAAI,CAAC,CAAC,EAAU,CAAC,GACjB,IAAI,CAAC,CAAC,EAAU,CAAC,GAC5B,IAAI,CAAC,CAAC,EAAO,CAAC,IAAI,CAAC,EAAQ,KAAK,CAAC,KAKnC,EAHU,GACC,IAAI,CAAC,CAAC,EAAU,CAAC,GACjB,IAAI,CAAC,CAAC,EAAU,CAAC,GACjB,IAAI,CAAC,CAAC,EAAU,CAAC,GAC5B,IAAI,CAAC,CAAC,EAAO,CAAC,IAAI,CAAC,EAAQ,KAAK,CAAC,IACnC,CAGA,CAAC,EAAmB,GAClB,IAAK,IAAI,EAAM,EAAG,EAAM,IAAI,CAAC,CAAC,EAAO,CAAC,MAAM,CAAG,EAAG,IAChD,IAAK,IAAI,EAAM,EAAG,EAAM,IAAI,CAAC,CAAC,EAAO,CAAC,EAAE,CAAC,MAAM,CAAG,EAAG,IAEjD,IAAI,CAAC,CAAC,EAAS,CAAC,IAAI,CAAC,CAAC,EAAO,CAAC,EAAI,CAAC,EAAI,GACvC,IAAI,CAAC,CAAC,EAAS,CAAC,IAAI,CAAC,CAAC,EAAO,CAAC,EAAM,EAAE,CAAC,EAAI,GAC3C,IAAI,CAAC,CAAC,EAAU,CAAC,IAAI,CAAC,CAAC,EAAO,CAAC,EAAM,EAAE,CAAC,EAAI,GAC5C,IAAI,CAAC,CAAC,EAAU,CAAC,IAAI,CAAC,CAAC,EAAO,CAAC,EAAM,EAAE,CAAC,EAAI,IAE5C,IAAI,CAAC,CAAC,EAAO,CAAC,EAAI,CAAC,EAAI,CAAG,IAAI,CAAC,CAAC,EAAW,CAAC,GAC5C,IAAI,CAAC,CAAC,EAAO,CAAC,EAAM,EAAE,CAAC,EAAI,CAAG,IAAI,CAAC,CAAC,EAAW,CAAC,GAIxD,CAOA,CAAC,EAAc,CAAC,CAAS,EACvB,OACE,IAAI,CAAC,CAAC,EAAS,CAAC,EAAU,KAAK,GAC/B,IAAI,CAAC,CAAC,EAAS,CAAC,EAAU,MAAM,GAChC,IAAI,CAAC,CAAC,EAAS,CAAC,EAAU,KAAK,CAEnC,CAMA,CAAC,EAAgB,CAAC,CAAS,EACzB,OACE,IAAI,CAAC,CAAC,EAAS,CAAC,EAAU,IAAI,GAC9B,IAAI,CAAC,CAAC,EAAS,CAAC,EAAU,MAAM,GAChC,IAAI,CAAC,CAAC,EAAS,CAAC,EAAU,KAAK,CAEnC,CAKA,CAAC,EAAW,GACV,IAAM,EAAoB,EAAE,CAC5B,IAAI,CAAC,CAAC,EAAO,CAAC,OAAO,CAAC,CAAC,EAAU,IAC/B,EAAS,OAAO,CAAC,CAAC,EAAU,KAC1B,IAAM,EAAY,GAChB,IAAI,CAAC,CAAC,EAAO,CACb,EACA,GAGA,CAAA,IAAI,CAAC,CAAC,EAAgB,CAAC,IACvB,IAAI,CAAC,CAAC,EAAc,CAAC,EAAA,GAErB,EAAkB,IAAI,CAAC,CAAE,IAAK,EAAU,IAAK,CAAS,EAE1D,IAEF,IAAM,EAAkB,GAAqB,GACzC,EAAW,CAAe,CAAC,EAAE,AACjC,CAAA,IAAI,CAAC,CAAC,EAAO,CAAC,EAAS,GAAG,CAAC,CAAC,EAAS,GAAG,CAAC,CAAG,IAAI,CAAC,CAAC,EAAY,GAC9D,EAAW,CAAe,CAAC,EAAE,CAC7B,IAAI,CAAC,CAAC,EAAO,CAAC,EAAS,GAAG,CAAC,CAAC,EAAS,GAAG,CAAC,CAAG,IAAI,CAAC,CAAC,EAAa,EACjE,CACF,CD1QO,MAAM,GAAmB,CAE9B,OAAQ,GAEV,CAgBA,OAAM,GAEJ,CAAC,CAAK,AAAC,AAEP,EAAC,EAAS,AAAC,AAIX,cAAc,CACZ,IAAI,CAAC,KAAK,EACZ,CAKA,UAAW,CACT,OAAO,IAAI,CAAC,CAAC,CAAK,AACpB,CAMA,SAAU,CAMR,OALA,IAAI,CAAC,CAAC,CAAK,GACS,IAAhB,IAAI,CAAC,CAAC,CAAK,EACb,CAAA,EAAY,IAAA,EAEd,IAAI,CAAC,CAAC,EAAU,GACT,IAAI,CAAC,CAAC,EAAS,AACxB,CAKA,SAAU,CACR,MAAO,CAAA,CACT,CAKA,OAAQ,CACN,IAAI,CAAC,CAAC,CAAK,CAAG,EAChB,CAQA,QAAQ,CAAK,CAAE,CAAI,CAAE,CACnB,EAAY,EACZ,IAAI,CAAC,CAAC,CAAK,CAAG,CAChB,CAGA,CAAC,EAAU,GACT,IAAI,CAAC,CAAC,EAAS,CAAG,IAAI,GAEtB,IAAI,CAAC,CAAC,EAAO,GAEb,IAAI,CAAC,CAAC,EAAQ,GACd,IAAI,CAAC,CAAC,EAAU,GAChB,IAAI,CAAC,CAAC,EAAU,GAChB,IAAI,CAAC,CAAC,EAAY,GAClB,IAAI,CAAC,CAAC,EAAM,EACd,CAKA,CAAC,EAAQ,GACP,IAAI,CAAC,CAAC,EAAS,CAAC,KAAK,CAAG,AAAA,EAAI,CAAC,oBAAoB,EAAE,IAAI,CAAC,CAAC,CAAK,CAAC,CAAC,AAClE,CAIA,CAAC,EAAO,GACN,GAAI,CAAC,EAAW,CACd,IAAM,EAAe,AAAA,GAAgB,QAAQ,CAAC,OAAQ,CAAC,SAAS,EAChE,GAAI,CAAC,EACH,MAAM,AAAI,MAAM,oCAElB,EAAY,AAAA,GAAW,EACzB,CACA,IAAI,CAAC,CAAC,EAAS,CAAC,IAAI,CAAG,CACzB,CAMA,CAAC,EAAU,CAAC,EAAY,GAAiB,MAAM,EAE7C,IAAM,EAAmB,AA1G7B,SAAgC,CAAa,EAE3C,IAAM,EAAsB,EADd,CAAA,GAAW,OAAO,qBAAuB,CAAA,EACH,KACpD,OAAO,AAAA,GAAgB,UAAU,CAAC,WAAW,MAAM,CACjD,AAAC,GAAU,EAAM,eAAe,EAAI,EAExC,EAoGoD,GAC5C,EAAU,EACV,EAAe,EACnB,KAAO,EAAU,GAAa,EAJX,GAIsC,CACvD,IAAM,EAAQ,EAAiB,cAAc,GAC7C,GAAW,EAAM,eAAe,CAChC,IACA,IAAI,CAAC,CAAC,EAAS,CAAC,OAAO,CAAC,IAAI,CAAC,EAC/B,CACF,CAKA,CAAC,EAAU,GAET,IAAK,IAAI,EAAc,EAAG,EADL,EACiC,IAAe,CACnE,IAAM,EAAe,AAAA,GAAgB,cAAc,CACjD,UACA,AAAC,GAAU,EAAM,QAAQ,EAAI,IAAI,CAAC,CAAC,CAAK,EAE1C,IAAI,CAAC,CAAC,EAAS,CAAC,OAAO,CAAC,IAAI,CAAC,EAC/B,CACF,CAKA,CAAC,EAAY,GACX,IAAM,EAAgB,AAAA,GAAgB,gBAAgB,CACpD,CAAC,YAAa,QAAS,QAAS,UAAU,CAC1C,AAAC,GAAU,EAAM,QAAQ,EAAI,IAAI,CAAC,CAAC,CAAK,EAEtC,EAAiB,EAA4B,GAAI,IACrD,KAAO,KAAmB,GAAG,CAC3B,IAAM,EAAe,EAAc,cAAc,GAC7C,GACF,IAAI,CAAC,CAAC,EAAS,CAAC,SAAS,CAAC,IAAI,CAAC,EAEnC,CACF,CAGA,CAAC,EAAM,GACL,IAAM,EAAU,IAAI,GAAY,CAC9B,QAAS,GACT,QAAS,GACT,YAAa,GACb,QAAS,GACT,QAAS,GACT,YAAa,CACf,EACA,CAAA,IAAI,CAAC,CAAC,EAAS,CAAC,SAAS,CAAG,EAAQ,QAAQ,GAC5C,AAAA,EAAI,KAAK,CAAC,cACV,IAAI,CAAC,CAAC,EAAS,CAAC,SAAS,CAAC,OAAO,CAAC,AAAC,GAAS,AAAA,EAAI,KAAK,CAAC,GACxD,CACF,CE/LO,MAAM,GAAiC,4BACjC,GAA+B,0BAC/B,GAAmC,8BACnC,GAA0B,qBAC1B,GAAiC,4BACjC,GAAiC,4BAQxC,GAAc,CAClB,MAAO,EACP,MAAO,CACT,EA+BA,SAAS,GAAc,CAAO,CAAE,CAAS,CAAE,CAAM,EAC/C,IAAM,EAAQ,IAAI,YAAY,EAAW,CACvC,OAAQ,CACV,GACA,EAAQ,aAAa,CAAC,EACxB,CAOA,SAAS,GAAmB,CAAK,EAC/B,IAAM,EAAO,EAAM,MAAM,CAAC,qBAAqB,GAC/C,MAAO,CACL,EAAG,EAAM,OAAO,CAAC,EAAE,CAAC,KAAK,CAAG,EAAK,IAAI,CACrC,EAAG,EAAM,OAAO,CAAC,EAAE,CAAC,KAAK,CAAG,EAAK,GAAG,AACtC,CACF,CASA,SAAS,GAAmB,CAAW,CAAE,CAAC,CAAE,CAAC,CAAE,CAAI,EACjD,EAAK,aAAa,CAAG,CAAA,EACrB,EAAK,QAAQ,CAAG,CAAA,EAChB,EAAK,QAAQ,CAAG,EAChB,EAAK,KAAK,CAAG,EACb,EAAK,KAAK,CAAG,EACb,EAAK,MAAM,CAAG,EACd,EAAK,MAAM,CAAG,EACd,GAAc,EAAK,OAAO,CAAE,GAAgC,CAC1D,EAAG,EACH,EAAG,CACL,EACF,CASA,SAAS,GAAiB,CAAW,CAAE,CAAC,CAAE,CAAC,CAAE,CAAI,EAC/C,IAAM,EAAY,EAAK,QAAQ,CAzF/B,gCA2FI,EAEJ,CAAA,EAAK,aAAa,CAAG,CAAA,EACrB,EAAK,QAAQ,CAAG,CAAA,EAChB,EAAK,QAAQ,CAAG,EAChB,EAAK,KAAK,CAAG,EACb,EAAK,KAAK,CAAG,EACb,EAAK,MAAM,CAAG,EACd,EAAK,MAAM,CAAG,EACd,GAAc,EAAK,OAAO,CAAE,EAAW,CACrC,EAAG,EACH,EAAG,CACL,EACF,CAiCA,SAAS,GAAkB,CAAW,CAAE,CAAC,CAAE,CAAC,CAAE,CAAI,EAEhD,IAAI,EAAK,EAAI,EAAK,KAAK,CACnB,EAAK,EAAI,EAAK,KAAK,CAGvB,GAFA,EAAK,KAAK,CAAG,EACb,EAAK,KAAK,CAAG,EACT,EAAK,QAAQ,CAAE,CACjB,IAAM,EAAQ,IAAI,YANF,GAMyB,CACvC,OAAQ,CACN,EAAG,EACH,EAAG,EACH,GAAI,EACJ,GAAI,CACN,CACF,GACA,EAAK,OAAO,CAAC,aAAa,CAAC,EAC7B,KACE,CAAA,KAAK,GAAG,CAAC,EAAI,EAAK,MAAM,EAvJF,IAwJtB,KAAK,GAAG,CAAC,EAAI,EAAK,MAAM,EAxJF,EAwJM,IAE5B,EAAK,QAAQ,CAAG,CAAA,EAChB,EAAK,kBAAkB,CAAG,CAAA,EAE9B,CC9KA,MAAM,GAAc,IAAI,IAAI,CAC1B,CAAC,eAAgB,QAAQ,CACzB,CAAC,oBAAqB,kBAAyB,CAC/C,CAAC,gBAAiB,SAAS,CAC3B,CAAC,oBAAqB,aAAa,CACnC,CAAC,iBAAkB,UAAU,CAC7B,CAAC,kBAAmB,WAAW,CAC/B,CAAC,oBAAqB,aAAa,CACnC,CAAC,eAAgB,aAAa,CAC9B,CAAC,wBAAyB,iBAAiB,CAE3C,CAAC,iBAAkB,UAAU,CAC7B,CAAC,uBAAwB,oBAAoB,CAC7C,CAAC,eAAgB,QAAQ,CACzB,CAAC,gBAAiB,SAAS,CAC3B,CAAC,gBAAiB,iBAAiB,CACnC,CAAC,cAAe,OAAO,CACvB,CAAC,mBAAoB,YAAY,CACjC,CAAC,qBAAsB,cAAc,CACrC,CAAC,wBAAyB,QAAQ,CAClC,CAAC,eAAgB,QAAQ,CACzB,CAAC,cAAe,OAAO,CACvB,CAAC,YAAa,KAAK,CACnB,CAAC,iBAAkB,UAAU,CAC7B,CAAC,wBAAyB,iBAAiB,CAC3C,CAAC,qBAAsB,cAAc,CACrC,CAAC,iBAAkB,UAAU,CAC7B,CAAC,uBAAwB,UAAU,CACnC,CAAC,cAAe,OAAO,CACvB,CAAC,mBAAoB,YAAY,CACjC,CAAC,qBAAsB,cAAc,CACrC,CAAC,oBAAqB,aAAa,CACnC,CAAC,gBAAiB,SAAS,CAC3B,CAAC,qBAAsB,mBAA0B,CACjD,CAAC,kBAAmB,WAAW,CAC/B,CAAC,eAAgB,qBAAqB,CACtC,CAAC,eAAgB,QAAQ,CACzB,CAAC,uBAAwB,OAAO,CAChC,CAAC,eAAgB,QAAQ,CACzB,CAAC,gBAAiB,SAAS,CAC3B,CAAC,mBAAoB,YAAY,CACjC,CAAC,sBAAuB,mBAAmB,CAC3C,CAAC,aAAc,MAAM,CAErB,CAAC,yBAA0B,gBAAgB,CAC3C,CAAC,uBAAwB,eAAe,CACxC,CACE,0BACA,mDACD,CACD,CACE,gCACA,yGACD,CACD,CACE,gCACA,kFACD,CACD,CACE,6BACA,mGACD,CACD,CAAC,4BAA6B,8CAA8C,CAC5E,CACE,2BACA,2IACD,CACD,CACE,+BACA,2EACD,CACD,CACE,gCACA,kEACD,CACD,CACE,qCACA,kFACD,CACD,CACE,4BACA,0HACD,CACD,CAAC,mBAAoB,oDAAoD,CACzE,CACE,oBACA,uEACD,CAED,CAAC,2BAA4B,iCAAiC,CAC9D,CAAC,qBAAsB,0CAA0C,CAEjE,CACE,8BACA,yDACD,CACD,CACE,0BACA,oDACD,CACD,CACE,qBACA,yEACD,CAED,CACE,yBACA,oEACD,CACD,CACE,mBACA,oLACD,CACD,CAAC,8BAA+B,wCAAwC,CACxE,CACE,2BACA,+DACD,CACD,CAAC,kBAAmB,yDAAyD,CAE7E,CAAC,6BAA8B,gCAAgC,CAC/D,CAAC,kBAAmB,qCAAqC,CACzD,CACE,qBACA,qEACD,CACD,CAAC,yBAA0B,sCAAsC,CACjE,CACE,2BACA,uDACD,CACD,CAAC,oBAAqB,qDAAqD,CAE3E,CAAC,qBAAsB,kDAAkD,CACzE,CACE,qBACA,8FACD,CACD,CACE,wBACA,gFACD,CAED,CAAC,8BAA+B,sCAAsC,CACtE,CAAC,uBAAwB,uBAAuB,CAChD,CAAC,kCAAmC,qBAAqB,CACzD,CAAC,8BAA+B,iBAAiB,CACjD,CAAC,wBAAyB,kBAAkB,CAC5C,CAAC,qBAAsB,2BAA2B,CAClD,CAAC,uBAAwB,iBAAiB,CAE1C,CAAC,kBAAmB,kBAAkB,CACtC,CAAC,oBAAqB,yBAAyB,CAC/C,CAAC,0BAA2B,6BAA6B,CACzD,CACE,uBACA,+DACD,CACD,CACE,sBACA,+EACD,CACD,CACE,2BACA,iEACD,CACD,CACE,sCACA,iFACD,CACD,CACE,iCACA,gDACD,CACD,CACE,sBACA,6EACD,CACD,CACE,uBACA,4DACD,CAED,CACE,wBACA,6HACD,CACD,CACE,iCACA,gKACD,CACD,CACE,+BACA,6HACD,CACD,CACE,iBACA,oEACD,CACD,CACE,6BACA,uGACD,CACD,CAAC,+BAAgC,4BAA4B,CAC7D,CAAC,uBAAwB,wCAAwC,CACjE,CACE,2BACA,6FACD,CACD,CAAC,sBAAuB,4BAA4B,CACpD,CACE,iCACA,4EACD,CACD,CACE,8BACA,sFACD,CACD,CACE,mCACA,0DACD,CAED,CACE,0BACA,yDACD,CACD,CACE,sBACA,qOACD,CACD,CACE,gCACA,CACE,qEACA,8GACD,CACF,CACD,CACE,8BACA,CACE,sEACA,uFACD,CACF,CACD,CACE,yBACA,sEACD,CACD,CACE,8BACA,+DACD,CACD,CAAC,yBAA0B,+CAA+C,CAC1E,CACE,yBACA,CACE,oGACA,2EACD,CACF,CACD,CACE,qBACA,CACE,2FACA,uFACD,CACF,CACD,CACE,6BACA,2DACD,CACD,CACE,gCACA,CACE,qDACA,2CACA,kDACD,CACF,CACD,CACE,0BACA,4DACD,CACD,CAAC,wBAAyB,8CAA8C,CACxE,CACE,2BACA,CACE,6CACA,yCACD,CACF,CACD,CAAC,6BAA8B,mCAAmC,CAClE,CACE,oBACA,CACE,oCACA,mFACD,CACF,CACD,CACE,mCACA,CACE,oEACA,oEACD,CACF,CACD,CACE,kBACA,mFACD,CACD,CACE,kBACA,uHACD,CACD,CAAC,gBAAiB,uCAAuC,CACzD,CAAC,iBAAkB,qDAAqD,CAGxE,CAAC,wBAAyB,qBAAqB,CAC/C,CAAC,WAAY,WAAW,CACxB,CAAC,OAAQ,OAAO,CAChB,CAAC,WAAY,WAAW,CACxB,CAAC,cAAe,cAAc,CAC9B,CAAC,mBAAoB,wBAAwB,CAC7C,CAAC,mBAAoB,cAAc,CACnC,CAAC,SAAU,UAAU,CACrB,CAAC,iBAAkB,sBAAsB,CACz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","sources":["<anon>","src/scripts/index.js","src/scripts/utils/polyfills/string.js","src/scripts/utils/logging.js","src/scripts/gameManagement/game.js","src/scripts/utils/game/screen.js","src/scripts/utils/text/fonts.js","src/scripts/utils/geometry.js","src/scripts/utils/maths.js","src/scripts/utils/game/world.js","src/scripts/hud/hud.js","src/scripts/players/actors.js","src/scripts/dnd/interact.js","src/scripts/utils/effects/transient.js","src/scripts/utils/sprites/sprite.js","src/scripts/utils/sprites/spriteRenderers.js","src/scripts/utils/text/text.js","src/scripts/utils/debug.js","src/scripts/utils/sprites/animation.js","src/scripts/utils/sprites/imageManager.js","src/scripts/utils/time/clock.js","src/scripts/utils/arrays/indexer.js","src/scripts/utils/sprites/faders.js","src/scripts/utils/sprites/modifiers.js","src/scripts/utils/sprites/movers.js","src/scripts/utils/dom/ui.js","src/scripts/utils/dom/components.js","src/scripts/utils/game/gameConstants.js","src/scripts/utils/persistentData.js","src/scripts/utils/messageManager.js","src/scripts/utils/soundManager.js","src/scripts/dialogs/actorDialogs.js","src/scripts/players/artefacts.js","src/scripts/utils/game/coins.js","src/scripts/dnd/traits.js","src/scripts/utils/dice.js","src/scripts/dnd/tables.js","src/scripts/utils/arrays/arrayManip.js","src/scripts/dnd/almanacs/artefactBuilder.js","src/scripts/dnd/almanacs/almanacs.js","src/scripts/dnd/almanacs/almanacUtils.js","src/scripts/utils/assetLoaders.js","src/scripts/gameManagement/sceneManager.js","src/scripts/scriptReaders/sceneDefinitionParser.js","src/scripts/utils/tileMaps/tilePlan.js","src/scripts/utils/tileMaps/tileMap.js","src/scripts/utils/ui/interactions.js","src/scripts/utils/tileMaps/pathFinder.js","src/scripts/constants/canvasStyles.js","src/scripts/gameManagement/turnManager.js","src/scripts/utils/timers.js","src/scripts/dialogs/mainMenu.js","src/scripts/dialogs/settingsDialog.js","src/scripts/dialogs/bestAdventureDialog.js","src/scripts/gameManagement/gameSaver.js","src/scripts/dnd/almanacs/actorBuilder.js","src/scripts/scriptReaders/actorAnimationKeys.js","src/scripts/utils/nameGenerator.js","src/scripts/dialogs/guideDialogs.js","src/scripts/utils/text/markdown/markdown.js","src/scripts/utils/text/markdown/parsingWarden.js","src/scripts/utils/text/markdown/base64.js","src/scripts/utils/text/safeEncoder.js","src/assets/assets.js","src/assets/images/dungeon.json","node_modules/@parcel/runtime-js/lib/runtime-7174d0080d1274d2.js","node_modules/@parcel/runtime-js/lib/runtime-b40c61751e69fcd4.js","node_modules/@parcel/runtime-js/lib/runtime-ab8cb64da1d21be8.js","node_modules/@parcel/runtime-js/lib/runtime-883ef8c08be1763c.js","node_modules/@parcel/runtime-js/lib/runtime-6ad34caa1e9118c1.js","node_modules/@parcel/runtime-js/lib/runtime-505f280d92445f9a.js","node_modules/@parcel/runtime-js/lib/runtime-ae5436cacd11838c.js","node_modules/@parcel/runtime-js/lib/runtime-02e9d42864017e24.js","node_modules/@parcel/runtime-js/lib/runtime-7a275e5d599687ca.js","node_modules/@parcel/runtime-js/lib/runtime-db65a9e40efe3bb2.js","node_modules/@parcel/runtime-js/lib/runtime-6dcbcc6e7cf798a9.js","node_modules/@parcel/runtime-js/lib/runtime-637f449040c20d90.js","node_modules/@parcel/runtime-js/lib/runtime-66bb8f2ef0a42128.js","node_modules/@parcel/runtime-js/lib/runtime-ec6591c625def5bb.js","node_modules/@parcel/runtime-js/lib/runtime-e1ee22d88d05e1fa.js","node_modules/@parcel/runtime-js/lib/runtime-f781e1cb03d671c6.js","node_modules/@parcel/runtime-js/lib/runtime-861aa1205691fa86.js","node_modules/@parcel/runtime-js/lib/runtime-e77ed582ea2c964b.js","node_modules/@parcel/runtime-js/lib/runtime-4085a67ea31534a5.js","node_modules/@parcel/runtime-js/lib/runtime-42e5f171258e217b.js","src/scripts/scriptReaders/symbolMapping.js","src/scripts/utils/game/scene.js","src/scripts/hud/hudNavSet.js","src/scripts/utils/game/camera.js","src/scripts/dnd/dndAction.js","src/scripts/utils/text/emojis.js","src/scripts/scriptReaders/autoSceneList.js","src/scripts/utils/tileMaps/roomGenerator.js","src/scripts/utils/dom/pointerActions.js","src/scripts/constants/messageMap.js"],"sourcesContent":["\nfunction $parcel$interopDefault(a) {\n  return a && a.__esModule ? a.default : a;\n}\n/**\n * @file Main entry point\n *\n * @module index\n */ /**\n * @license See {@link https://opensource.org/license/mit/|MIT}\n *\n * Copyright 2024 Steve Butler\n */ /**\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the “Software”), to deal in\n * the Software without restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n * Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */ /**\n * @file Polyfills\n *\n * @module utils/polyfills/string\n */ /**\n * license {@link https://opensource.org/license/mit/|MIT}\n * Copyright 2024 Steve Butler (henspace.com).\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the “Software”), to deal in\n * the Software without restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n * Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */ /**\n * @file Polyfills and shims for String\n *\n * @module utils/polyfills/string\n *\n * @license GPL-3.0-or-later\n * Create quizzes and lessons from plain text files.\n * Copyright 2023 Steve Butler (henspace.com)\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program.  If not, see <https://www.gnu.org/licenses/>.\n *\n */ /**\n * Implement replaceAll function if not already implemented.\n * @see {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/replaceAll}\n *\n * @param {string} str - the source string\n * @param {string | RegExp} pattern - the pattern to look for in the source string\n * @param {string} replacement - the replacement\n */ if (!String.prototype.replaceAll) String.prototype.replaceAll = function stringReplaceAll(pattern, replacement) {\n    if (pattern instanceof RegExp) {\n        if (pattern.flags.indexOf(\"g\") < 0) throw new TypeError(\"String.prototype.replaceAll called with a non-global RegExp argument\");\n        return this.replace(pattern, replacement);\n    } else return this.replace(new RegExp(pattern, \"g\"), replacement);\n};\nfunction $8fb5dd726d6c60c5$var$isLeadingSurrogate(codePoint) {\n    return codePoint >= 0xd800 && codePoint <= 0xdbff;\n}\nfunction $8fb5dd726d6c60c5$var$isTrailingSurrogate(codePoint) {\n    return codePoint >= 0xdc00 && codePoint <= 0xdfff;\n}\nconst $8fb5dd726d6c60c5$var$UNICODE_REPLACEMENT = \"\\uFFFD\";\nfunction $8fb5dd726d6c60c5$export$534a77834069544f(str) {\n    if (!str) return str;\n    let result = \"\";\n    for (const chr of str){\n        const codePoint = chr.codePointAt(0);\n        if ($8fb5dd726d6c60c5$var$isLeadingSurrogate(codePoint) || $8fb5dd726d6c60c5$var$isTrailingSurrogate(codePoint)) result += $8fb5dd726d6c60c5$var$UNICODE_REPLACEMENT; // next character is not a trailing surrogate\n        else result += chr;\n    }\n    return result;\n}\n/**\n * Shim toWellFormed\n */ if (!String.prototype.toWellFormed) String.prototype.toWellFormed = function toWellFormed() {\n    const str = this;\n    if (!str) return str;\n    let result = \"\";\n    for (const chr of str){\n        const codePoint = chr.codePointAt(0);\n        if ($8fb5dd726d6c60c5$var$isLeadingSurrogate(codePoint) || $8fb5dd726d6c60c5$var$isTrailingSurrogate(codePoint)) result += $8fb5dd726d6c60c5$var$UNICODE_REPLACEMENT; // next character is not a trailing surrogate\n        else result += chr;\n    }\n    return result;\n};\n\n\n/**\n * @file Handle logging. This allows easier access to logs on mobile devices.\n *\n * @module utils/logging\n */ /**\n * License {@link https://opensource.org/license/mit/|MIT}\n *\n * Copyright 2024 Steve Butler (henspace.com).\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the “Software”), to deal in\n * the Software without restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n * Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */ let $2d5b4e7cb639ebe1$var$messages = [];\n/** Add listener for syntax errors. */ window.addEventListener(\"error\", (event)=>{\n    alert(`ERROR: ${event.filename}; line ${event.lineno}\\n${event.message}\\n:Stack:\\n${event.error.stack}`);\n});\n/**\n * Log information.\n * @param  {...any} data\n */ function $2d5b4e7cb639ebe1$var$logGeneral(...data) {\n    console.log(...data);\n}\n/**\n * Log information.\n * @param  {...any} data\n */ function $2d5b4e7cb639ebe1$var$logInfo(...data) {\n    console.debug(...data);\n}\n/**\n * Log information.\n * @param  {...any} data\n */ function $2d5b4e7cb639ebe1$var$logDebug(...data) {\n    console.debug(...data);\n}\n/**\n * Log error information.\n * @param  {...any} data\n */ function $2d5b4e7cb639ebe1$var$logError(...data) {\n    console.error(...data);\n    $2d5b4e7cb639ebe1$var$messages = $2d5b4e7cb639ebe1$var$messages.concat(data);\n}\n/**\n * Log error information.\n * @param  {Error}} data\n */ function $2d5b4e7cb639ebe1$var$logFatal(error) {\n    console.error(error);\n    let message;\n    if (error.message) message = `${error.message}\\nStack:\\n${error.stack}`;\n    else message = error;\n    alert(`Fatal error: ${message}\\nPrevious errors:\\n${$2d5b4e7cb639ebe1$var$messages.join(\"\\n\")}`);\n    $2d5b4e7cb639ebe1$var$messages.push(message);\n}\n/**\n * Object to access logging routines.\n */ const $2d5b4e7cb639ebe1$var$LOG = {\n    log: $2d5b4e7cb639ebe1$var$logGeneral,\n    info: $2d5b4e7cb639ebe1$var$logInfo,\n    debug: $2d5b4e7cb639ebe1$var$logDebug,\n    error: $2d5b4e7cb639ebe1$var$logError,\n    fatal: $2d5b4e7cb639ebe1$var$logFatal\n};\nvar $2d5b4e7cb639ebe1$export$2e2bcd8739ae039 = $2d5b4e7cb639ebe1$var$LOG;\n\n\n/**\n * @file The main game. This is a singleton as there can only be a single game.\n *\n * @module gameManagement/game\n */ /**\n * License {@link https://opensource.org/license/mit/|MIT}\n *\n * Copyright 2024 Steve Butler\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the “Software”), to deal in\n * the Software without restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n * Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */ /**\n * @file Utilities for handling the screen size. The screen is implemented as\n * a singleton.\n * The game is configured as a world and a screen. The screen is the area that is\n * rendered with a canvas. The world is the total space in which objects can\n * exist. The world is potentially unbounded.\n *\n * The canvas is set to the same size as the screen and then the canvas is\n * resized to fit the display using CSS.\n *\n * The canvas is centred on the camera, so although the canvas rect and screen\n * rect are the same size, the screen always has its top left at 0, 0 in the world\n * whereas the canvas rect may effectively move around the world.\n *\n * @module utils/screen\n */ /**\n * License {@link https://opensource.org/license/mit/|MIT}\n *\n * Copyright 2024 Steve Butler\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the “Software”), to deal in\n * the Software without restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n * Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */ /**\n * @file Font data\n *\n * @module utils/text/fonts\n */ /**\n * License {@link https://opensource.org/license/mit/|MIT}\n *\n * Copyright 2024 Steve Butler\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the “Software”), to deal in\n * the Software without restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n * Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */ const $3c404572c27a35d5$var$baseSize = 15; // minimum pixel size\n/*\n * These should be replicated in the CSS.\n */ const $3c404572c27a35d5$var$H1_FONT_SCALE = 2.0;\nconst $3c404572c27a35d5$var$H2_FONT_SCALE = 1.5;\nconst $3c404572c27a35d5$var$H3_FONT_SCALE = 1.2;\nconst $3c404572c27a35d5$var$NORMAL_FONT = \"'UnifrakturCook', cursive\";\nconst $3c404572c27a35d5$var$HEADING_FONT = \"'UnifrakturCook', cursive\"; // cspell:disable-line\nconst $3c404572c27a35d5$var$EMOJI_SPRITE_FONT = \"'UnifrakturCook', cursive\"; // cspell:disable-line\n/**\n * @typedef {Object} TextInfo\n * @property {number} size\n * @property {string} fontName\n */ /**\n * Named styles.\n * @type {Object.<String, TextInfo>}\n */ const $3c404572c27a35d5$var$textInfo = {\n    normal: {\n        size: 15,\n        fontName: $3c404572c27a35d5$var$NORMAL_FONT\n    },\n    h1: {\n        size: 30,\n        fontName: $3c404572c27a35d5$var$HEADING_FONT\n    },\n    h2: {\n        size: 22,\n        fontName: $3c404572c27a35d5$var$HEADING_FONT\n    },\n    h3: {\n        size: 18,\n        fontName: $3c404572c27a35d5$var$HEADING_FONT\n    },\n    emojiSprite: {\n        size: 18,\n        fontName: $3c404572c27a35d5$var$EMOJI_SPRITE_FONT\n    }\n};\nfunction $3c404572c27a35d5$export$a0412074baa65d25(designWidth) {\n    $3c404572c27a35d5$var$textInfo.normal.size = $3c404572c27a35d5$var$baseSize + 0.390625 * (designWidth / 100);\n    $3c404572c27a35d5$var$textInfo.h1.size = $3c404572c27a35d5$var$textInfo.normal.size * $3c404572c27a35d5$var$H1_FONT_SCALE;\n    $3c404572c27a35d5$var$textInfo.h2.size = $3c404572c27a35d5$var$textInfo.normal.size * $3c404572c27a35d5$var$H2_FONT_SCALE;\n    $3c404572c27a35d5$var$textInfo.h3.size = $3c404572c27a35d5$var$textInfo.normal.size * $3c404572c27a35d5$var$H3_FONT_SCALE;\n    $3c404572c27a35d5$var$textInfo.emojiSprite.size = designWidth / 10;\n}\nfunction $3c404572c27a35d5$export$955358618f994a11(styleName) {\n    const info = $3c404572c27a35d5$var$textInfo[styleName] ?? $3c404572c27a35d5$var$textInfo[\"normal\"];\n    return `${info.size}px ${info.fontName}`;\n}\nfunction $3c404572c27a35d5$export$ef86e9b1c847b692() {\n    return $3c404572c27a35d5$var$textInfo.normal.size;\n}\n\n\n/**\n * @file Functions for dealing with geometry\n *\n * @module utils/geometry\n */ /**\n * License {@link https://opensource.org/license/mit/|MIT}\n *\n * Copyright 2024 Steve Butler\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the “Software”), to deal in\n * the Software without restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n * Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */ /**\n * @file Maths utilities\n *\n * @module utils/maths\n */ /**\n * License {@link https://opensource.org/license/mit/|MIT}\n *\n * Copyright 2024 Steve Butler\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the “Software”), to deal in\n * the Software without restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n * Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */ /**\n * Common angles\n */ const $05d58a132d6b5767$var$Radians = {\n    DEG_22_5: 1 / 8 * Math.PI,\n    DEG_45: 2 / 8 * Math.PI,\n    DEG_67_5: 3 / 8 * Math.PI,\n    DEG_90: 0.5 * Math.PI,\n    DEG_112_5: 5 / 8 * Math.PI,\n    DEG_135: 6 / 8 * Math.PI,\n    DEG_157_7: 7 / 8 * Math.PI,\n    DEG_180: Math.PI\n};\nfunction $05d58a132d6b5767$export$e0b576e7a74416cd(value, min, max) {\n    if (value < min) return min;\n    else if (value > max) return max;\n    return value;\n}\nconst $05d58a132d6b5767$export$624e7ee3f0468367 = {\n    NONE: -1,\n    N: 0,\n    NE: 1,\n    E: 2,\n    SE: 3,\n    S: 4,\n    SW: 5,\n    W: 6,\n    NW: 7\n};\nfunction $05d58a132d6b5767$export$cf2deb104c051cb7(angle) {\n    const absAngle = Math.abs(angle);\n    if (absAngle <= $05d58a132d6b5767$var$Radians.DEG_45) return $05d58a132d6b5767$export$624e7ee3f0468367.E;\n    if (absAngle <= $05d58a132d6b5767$var$Radians.DEG_135) return Math.sign(angle) > 0 ? $05d58a132d6b5767$export$624e7ee3f0468367.N : $05d58a132d6b5767$export$624e7ee3f0468367.S;\n    return $05d58a132d6b5767$export$624e7ee3f0468367.W;\n}\nfunction $05d58a132d6b5767$export$d9ac11c8e8c20b77(angle) {\n    const absAngle = Math.abs(angle);\n    if (absAngle <= $05d58a132d6b5767$var$Radians.DEG_22_5) return $05d58a132d6b5767$export$624e7ee3f0468367.E;\n    if (absAngle <= $05d58a132d6b5767$var$Radians.DEG_67_5) return Math.sign(angle) > 0 ? $05d58a132d6b5767$export$624e7ee3f0468367.NE : $05d58a132d6b5767$export$624e7ee3f0468367.SE;\n    if (absAngle <= $05d58a132d6b5767$var$Radians.DEG_112_5) return Math.sign(angle) > 0 ? $05d58a132d6b5767$export$624e7ee3f0468367.N : $05d58a132d6b5767$export$624e7ee3f0468367.S;\n    if (absAngle <= $05d58a132d6b5767$var$Radians.DEG_157_7) return Math.sign(angle) > 0 ? $05d58a132d6b5767$export$624e7ee3f0468367.NW : $05d58a132d6b5767$export$624e7ee3f0468367.SW;\n    return $05d58a132d6b5767$export$624e7ee3f0468367.W;\n}\nfunction $05d58a132d6b5767$export$b141de964f0a90c1(min, max) {\n    const minCeiled = Math.ceil(min);\n    const maxFloored = Math.floor(max);\n    return Math.floor(Math.random() * (maxFloored - minCeiled) + minCeiled);\n}\nfunction $05d58a132d6b5767$export$a885de3766ef0b4c(array) {\n    const index = $05d58a132d6b5767$export$b141de964f0a90c1(0, array.length);\n    return array[index];\n}\nfunction $05d58a132d6b5767$export$75c671db1a13cf5f(min, max) {\n    const minCeiled = Math.ceil(min);\n    const maxFloored = Math.floor(max);\n    return Math.floor(Math.random() * (maxFloored - minCeiled + 1) + minCeiled);\n}\nfunction $05d58a132d6b5767$export$8ebf337bfea5f957(valueA, valueB, tolerance) {\n    return valueA - valueB < tolerance;\n}\nfunction $05d58a132d6b5767$export$77419d14798a5605(value, tolerance) {\n    return Math.abs(value) < tolerance;\n}\nfunction $05d58a132d6b5767$export$d6c5c82e8e696750(value, defValue = 0, radix) {\n    const result = parseInt(value, radix);\n    return Number.isNaN(result) ? defValue : result;\n}\nfunction $05d58a132d6b5767$export$437ba3be5ce2ff51(value, defValue = 0) {\n    const result = parseFloat(value);\n    return Number.isNaN(result) ? defValue : result;\n}\n\n\nclass $90999bd6b14cd690$export$baf26146a414f24a {\n    /** @type {number}*/ x;\n    /** @type {number}*/ y;\n    /**\n   * Create point\n   * @param {number} x\n   * @param {number} y\n   */ constructor(x, y){\n        this.x = x;\n        this.y = y;\n    }\n    /**\n   * Create a copy of a point.\n   * @param {Point} point\n   * @returns {Point}\n   */ static copy(point) {\n        return new $90999bd6b14cd690$export$baf26146a414f24a(point.x, point.y);\n    }\n    /**\n   * Check if points are coincident.\n   * @returns {boolean}\n   */ coincident(point) {\n        return this.x === point.x && this.y === point.y;\n    }\n    /**\n   * Get angle to target using normal cartesian coordinates; i.e up is +ve y.\n   * @param {Point} targetPos\n   * @returns {number} angle in radians.\n   */ getCartesianAngleTo(targetPos) {\n        return Math.atan2(targetPos.y - this.y, targetPos.x - this.x);\n    }\n    /**\n   * Get angle to target using normal screen coordinates; i.e down is +ve y.\n   * @param {Point} targetPos\n   * @returns {number} angle in radians.\n   */ getScreenAngleTo(targetPos) {\n        return Math.atan2(this.y - targetPos.y, targetPos.x - this.x);\n    }\n    /**\n   * String representation which can be used as key in maps.\n   * @returns {string}\n   */ toString() {\n        return `(${this.x},${this.y})`;\n    }\n    /**\n   * Test if the position is at the same point, rounded to integer as this.\n   * Rotation is ignored.\n   * @param {Position} position\n   * @returns {boolean}\n   */ isCoincident(position) {\n        return Math.round(this.x) === Math.round(position.x) && Math.round(this.y) === Math.round(position.y);\n    }\n    /**\n   * Test if points are adjacent, i.e within one\n   * @param {Point} other\n   * @param {number} distance\n   * @returns {boolean}\n   */ isOtherClose(other, distance) {\n        const dx = this.x - other.x;\n        const dy = this.y - other.y;\n        return Math.pow(dx, 2) + Math.pow(dy, 2) <= Math.pow(distance, 2);\n    }\n    /**\n   * Get the absolute orthogonal separation between this and the other point.\n   * The separation is calculated by move in the x direction followed by the\n   * y direction. I.e. no diagonal movement.\n   * @param {Point} other\n   * @returns {number}\n   */ getOrthoSeparation(other) {\n        return Math.abs(this.x - other.x) + Math.abs(this.y - other.y);\n    }\n}\nclass $90999bd6b14cd690$export$4a23b3811cef465 {\n    /** x velocity @type {number} */ x;\n    /** y velocity @type {number} */ y;\n    /** rotational velocity @type {number} */ rotation;\n    /**\n   *\n   * @param {number} velX\n   * @param {number} velY\n   * @param {number} velRot\n   */ constructor(velX, velY, velRot){\n        this.x = velX;\n        this.y = velY;\n        this.rotation = velRot;\n    }\n    /**\n   * Get the angle in radians counterclockwise from x axis. This uses cartesian\n   * coordinates where the y axis is positive upwards.\n   * @returns {number}\n   */ getCartesianDirection() {\n        return Math.atan2(this.y, this.x);\n    }\n    /**\n   * Get the angle in radians counterclockwise from x axis. This uses screen\n   * coordinates where the y axis is positive downwards..\n   * @returns {number}\n   */ getScreenDirection() {\n        return Math.atan2(-this.y, this.x);\n    }\n    /**\n   * Test if velocity effectively zero.\n   * @param {number} tolerance\n   * @returns {boolean}\n   */ isZero(tolerance) {\n        return $05d58a132d6b5767$export$77419d14798a5605(this.x, tolerance) && $05d58a132d6b5767$export$77419d14798a5605(this.y, tolerance);\n    }\n}\nclass $90999bd6b14cd690$export$5086e02bc6b47824 {\n    /** x velocity @type {number} */ x;\n    /** y velocity @type {number} */ y;\n    /** rotational velocity @type {number} */ rotation;\n    /**\n   *\n   * @param {number} velX\n   * @param {number} velY\n   * @param {number} velRot\n   */ constructor(velX, velY, velRot){\n        this.x = velX;\n        this.y = velY;\n        this.rotation = velRot;\n    }\n}\nclass $90999bd6b14cd690$export$13807d9ee5a34a42 extends $90999bd6b14cd690$export$baf26146a414f24a {\n    /** type {number} */ rotation;\n    /**\n   *\n   * @param {number} x\n   * @param {number} y\n   * @param {number} rotation\n   */ constructor(x, y, rotation){\n        super(x, y);\n        this.y = y;\n        this.rotation = rotation;\n    }\n    /**\n   * Create a Position from a Point.\n   * @param {Point} point\n   * @returns {Position}\n   */ static fromPoint(point) {\n        return new $90999bd6b14cd690$export$13807d9ee5a34a42(point.x, point.y, 0);\n    }\n    /**\n   * Create copy\n   * @param {Position} position\n   */ static copy(position) {\n        return new $90999bd6b14cd690$export$13807d9ee5a34a42(position.x, position.y, position.rotation);\n    }\n    /** Get a new position representing this position relative to a new origin.\n   * @param {Position} origin\n   * @returns {Position}\n   */ getRelativeTo(origin) {\n        return new $90999bd6b14cd690$export$13807d9ee5a34a42(this.x - origin.x, this.y - origin.y, this.rotation - origin.rotation);\n    }\n    /**\n   * Test that both x and y coordinates are within the length.\n   * @param {Position} targetPos\n   * @param {number} length\n   * @returns {boolean}\n   */ withinSquare(targetPos, length) {\n        return Math.abs(targetPos.x - this.x) < length && Math.abs(targetPos.y - this.y) < length;\n    }\n}\nclass $90999bd6b14cd690$export$4617fb02663045ef {\n    /** @type {number} */ x;\n    /** @type {number} */ y;\n    /** @type {number} */ width;\n    /** @type {number} */ height;\n    /**\n   *\n   * @param {number} x\n   * @param {number} y\n   * @param {number} width\n   * @param {number} height\n   */ constructor(x, y, width, height){\n        this.x = x;\n        this.y = y;\n        this.width = width;\n        this.height = height;\n    }\n    /** Get the bottom right\n   * @returns {Point}\n   */ getBottomRight() {\n        return new $90999bd6b14cd690$export$baf26146a414f24a(this.x + this.width, this.y + this.height);\n    }\n    /** Get the top left\n   * @returns {Point}\n   */ getTopLeft() {\n        return new $90999bd6b14cd690$export$baf26146a414f24a(this.x, this.y);\n    }\n    /**\n   * Test if this overlaps another rectangle\n   * @param {Rectangle} otherRect\n   * @returns {boolean} true if overlapping.\n   */ overlaps(otherRect) {\n        const myBR = this.getBottomRight();\n        const otherRectBR = otherRect.getBottomRight();\n        const noOverlap = otherRect.x > myBR.x || otherRect.y > myBR.y || otherRectBR.x < this.x || otherRectBR.y < this.y;\n        return !noOverlap;\n    }\n    /**\n   * Test if this rectangle contains a point\n   * @param {Point | Position} point\n   * @returns {boolean} - true if point contained\n   */ containsPoint(point) {\n        return point.x >= this.x && point.x <= this.x + this.width && point.y >= this.y && point.y <= this.y + this.height;\n    }\n    /**\n   * Test if this rectangle contains a coordinate\n   * @param {number} x\n   * @param {number} y\n   * @returns {boolean} - true if point contained\n   */ containsCoordinate(x, y) {\n        return x >= this.x && x <= this.x + this.width && y >= this.y && y <= this.y + this.height;\n    }\n    /**\n   * Test if this rectangle equals another.\n   * @param {Rectangle} otherRect\n   * @returns {boolean}\n   */ equals(other) {\n        return this.x === other.x && this.y === other.y && this.width === other.width && this.height === other.height;\n    }\n}\nconst $90999bd6b14cd690$export$ffabdd03f47fc732 = new $90999bd6b14cd690$export$baf26146a414f24a(Number.MIN_VALUE, Number.MIN_VALUE);\nconst $90999bd6b14cd690$export$9bb5b4b8c6114d78 = new $90999bd6b14cd690$export$baf26146a414f24a(Number.MAX_VALUE, Number.MAX_VALUE);\n\n\n\n/**\n * @typedef {Object} ScreenDetails\n * @property {HTMLCanvasElement} canvas\n * @property {number} width\n * @property {number} height\n * @property {number} x\n * @property {number} y\n */ let $a1820c190f7a8b2e$var$throttleTimer = null;\nlet $a1820c190f7a8b2e$var$canvas = null;\nlet $a1820c190f7a8b2e$var$canvasRect = null;\nlet $a1820c190f7a8b2e$var$canvasHalfWidth = 0;\nlet $a1820c190f7a8b2e$var$canvasHalfHeight = 0;\nlet $a1820c190f7a8b2e$var$canvasAlpha = true;\nlet $a1820c190f7a8b2e$var$visibleCanvasRect = null;\nlet $a1820c190f7a8b2e$var$gameElement = null;\nlet $a1820c190f7a8b2e$var$left = 0;\nlet $a1820c190f7a8b2e$var$top = 0;\n//let screenRect;\nlet $a1820c190f7a8b2e$var$scale = 1;\nlet $a1820c190f7a8b2e$var$maxScale = 1;\nlet $a1820c190f7a8b2e$var$minScale = 0.1;\nlet $a1820c190f7a8b2e$var$sizingMethod = \"COVER\";\nlet $a1820c190f7a8b2e$var$cameraPosition = new (0, $90999bd6b14cd690$export$13807d9ee5a34a42)(0, 0, 0);\n/**\n * Add event listener to handle resizing of the window.\n */ window.addEventListener(\"resize\", ()=>{\n    if ($a1820c190f7a8b2e$var$throttleTimer !== null) return; // it will get handled.\n    $a1820c190f7a8b2e$var$throttleTimer = window.setTimeout(()=>{\n        $a1820c190f7a8b2e$var$resize();\n        $a1820c190f7a8b2e$var$throttleTimer = null;\n    }, 200);\n});\n/**\n * Get dimensions of the working area for the game.\n * @returns {module:utils/geometry~Dims2D}\n */ function $a1820c190f7a8b2e$var$getDisplayDims() {\n    return {\n        width: window.innerWidth,\n        height: window.innerHeight\n    };\n}\n/**\n * @param {Object} options - config options.\n * @param {number} options.width - the design width for the screen.\n * @param {number} options.height - the design height for the page.\n * @param {number} options.maxScale - maximum scaling allowed\n * @param {string} options.sizingMethod  - 'FIT' or 'COVER'. Defaults to 'FIT'\n * @param {boolean} options.alpha - Should canvas have an alpha channel\n */ function $a1820c190f7a8b2e$var$setOptions(options) {\n    if ($a1820c190f7a8b2e$var$canvas) {\n        (0, $2d5b4e7cb639ebe1$export$2e2bcd8739ae039).error(\"Multiple calls to setScreen ignored.\");\n        return;\n    }\n    $a1820c190f7a8b2e$var$gameElement = document.getElementById(\"game-content\");\n    $3c404572c27a35d5$export$a0412074baa65d25(options.width);\n    $a1820c190f7a8b2e$var$canvas = document.createElement(\"canvas\");\n    $a1820c190f7a8b2e$var$canvas.id = \"game-canvas\";\n    $a1820c190f7a8b2e$var$canvas.setAttribute(\"width\", options.width);\n    $a1820c190f7a8b2e$var$canvas.setAttribute(\"height\", options.height);\n    $a1820c190f7a8b2e$var$canvas.innerText = \"Loading the app.\";\n    $a1820c190f7a8b2e$var$canvasRect = new (0, $90999bd6b14cd690$export$4617fb02663045ef)(0, 0, options.width, options.height);\n    $a1820c190f7a8b2e$var$canvasHalfWidth = options.width / 2;\n    $a1820c190f7a8b2e$var$canvasHalfHeight = options.height / 2;\n    $a1820c190f7a8b2e$var$gameElement.appendChild($a1820c190f7a8b2e$var$canvas);\n    $a1820c190f7a8b2e$var$maxScale = options.maxScale;\n    $a1820c190f7a8b2e$var$minScale = options.minScale;\n    $a1820c190f7a8b2e$var$sizingMethod = options.sizingMethod;\n    $a1820c190f7a8b2e$var$canvasAlpha = options.alpha;\n    $a1820c190f7a8b2e$var$sizeScreen();\n    $a1820c190f7a8b2e$var$syncDomFonts();\n}\n/**\n * Size the screen\n * @param {number} aspectRatio - aspect ratio (width / height) of the screen\n * @param {number} windowAspectRatio - aspect ratio (width / height) of the screen\n * @param {string} method - FIT or COVER. Defaults to FIT\n */ function $a1820c190f7a8b2e$var$shouldFitHeight(aspectRatio, windowAspectRatio, sizingMethod) {\n    if (sizingMethod === \"COVER\") return aspectRatio > windowAspectRatio;\n    else return aspectRatio < windowAspectRatio;\n}\n/**\n * Resize the screen according to the current inner window dimensions.\n */ function $a1820c190f7a8b2e$var$sizeScreen() {\n    const dims = $a1820c190f7a8b2e$var$getDisplayDims();\n    let aspectRatio = $a1820c190f7a8b2e$var$canvasRect.width / $a1820c190f7a8b2e$var$canvasRect.height;\n    let displayedHeight = 0;\n    let displayedWidth = 0;\n    const windowAspectRatio = dims.width / dims.height;\n    const fitHeight = $a1820c190f7a8b2e$var$shouldFitHeight(aspectRatio, windowAspectRatio, $a1820c190f7a8b2e$var$sizingMethod);\n    if (fitHeight) {\n        displayedHeight = dims.height;\n        displayedWidth = displayedHeight * aspectRatio;\n    } else {\n        displayedWidth = dims.width;\n        displayedHeight = displayedWidth / aspectRatio;\n    }\n    $a1820c190f7a8b2e$var$scale = displayedWidth / $a1820c190f7a8b2e$var$canvasRect.width;\n    if ($a1820c190f7a8b2e$var$scale > $a1820c190f7a8b2e$var$maxScale) {\n        $a1820c190f7a8b2e$var$scale = $a1820c190f7a8b2e$var$maxScale;\n        displayedWidth = $a1820c190f7a8b2e$var$scale * $a1820c190f7a8b2e$var$canvasRect.width;\n        displayedHeight = $a1820c190f7a8b2e$var$scale * $a1820c190f7a8b2e$var$canvasRect.height;\n    } else if ($a1820c190f7a8b2e$var$scale < $a1820c190f7a8b2e$var$minScale) {\n        $a1820c190f7a8b2e$var$scale = $a1820c190f7a8b2e$var$minScale;\n        displayedWidth = $a1820c190f7a8b2e$var$scale * $a1820c190f7a8b2e$var$canvasRect.width;\n        displayedHeight = $a1820c190f7a8b2e$var$scale * $a1820c190f7a8b2e$var$canvasRect.height;\n    }\n    $a1820c190f7a8b2e$var$left = (dims.width - displayedWidth) / 2;\n    $a1820c190f7a8b2e$var$top = (dims.height - displayedHeight) / 2;\n    $a1820c190f7a8b2e$var$canvas.style.left = `${$a1820c190f7a8b2e$var$left}px`;\n    $a1820c190f7a8b2e$var$canvas.style.top = `${$a1820c190f7a8b2e$var$top}px`;\n    $a1820c190f7a8b2e$var$canvas.style.width = `${displayedWidth}px`;\n    $a1820c190f7a8b2e$var$canvas.style.height = `${displayedHeight}px`;\n    let visibleCanvasWidth;\n    let visibleCanvasHeight;\n    let visibleCanvasOffsetX;\n    let visibleCanvasOffsetY;\n    if ($a1820c190f7a8b2e$var$left < 0) {\n        visibleCanvasOffsetX = -$a1820c190f7a8b2e$var$left / $a1820c190f7a8b2e$var$scale;\n        visibleCanvasWidth = dims.width / $a1820c190f7a8b2e$var$scale;\n    } else {\n        visibleCanvasOffsetX = 0;\n        visibleCanvasWidth = $a1820c190f7a8b2e$var$canvasRect.width;\n    }\n    if ($a1820c190f7a8b2e$var$top < 0) {\n        visibleCanvasOffsetY = -$a1820c190f7a8b2e$var$top / $a1820c190f7a8b2e$var$scale;\n        visibleCanvasHeight = dims.height / $a1820c190f7a8b2e$var$scale;\n    } else {\n        visibleCanvasOffsetY = 0;\n        visibleCanvasHeight = $a1820c190f7a8b2e$var$canvasRect.height;\n    }\n    $a1820c190f7a8b2e$var$visibleCanvasRect = new (0, $90999bd6b14cd690$export$4617fb02663045ef)(visibleCanvasOffsetX, visibleCanvasOffsetY, visibleCanvasWidth, visibleCanvasHeight);\n    (0, $2d5b4e7cb639ebe1$export$2e2bcd8739ae039).debug(`Scale: ${$a1820c190f7a8b2e$var$scale}`);\n    (0, $2d5b4e7cb639ebe1$export$2e2bcd8739ae039).debug(`Window: width: ${dims.width}, height: ${dims.height}`);\n    (0, $2d5b4e7cb639ebe1$export$2e2bcd8739ae039).debug(`Display: left: ${$a1820c190f7a8b2e$var$left}, top: ${$a1820c190f7a8b2e$var$top}, width: ${displayedWidth}, height: ${displayedHeight}`);\n    (0, $2d5b4e7cb639ebe1$export$2e2bcd8739ae039).debug(`Visible canvas: left: ${visibleCanvasOffsetX}, top: ${visibleCanvasOffsetY}, width: ${visibleCanvasWidth}, height: ${visibleCanvasHeight}`);\n}\n/**\n * Adjust the font sizes to ensure glass in sync with canvas.\n */ function $a1820c190f7a8b2e$var$syncDomFonts() {\n    const rootFontSize = $3c404572c27a35d5$export$ef86e9b1c847b692() * $a1820c190f7a8b2e$var$scale;\n    document.documentElement.style.fontSize = `${rootFontSize}px`;\n}\n/**\n * Resize the screen.\n */ function $a1820c190f7a8b2e$var$resize() {\n    $a1820c190f7a8b2e$var$sizeScreen();\n    $a1820c190f7a8b2e$var$syncDomFonts();\n}\n/**\n * @typedef {Object} screenDetails\n * @property {HTMLCanvasElement} canvas\n * @property {number} width - design width\n * @property {number} height - design height\n */ /**\n * Clear the canvas.\n */ function $a1820c190f7a8b2e$var$clearCanvas() {\n    $a1820c190f7a8b2e$var$getContext2D().clearRect(0, 0, $a1820c190f7a8b2e$var$canvasRect.width, $a1820c190f7a8b2e$var$canvasRect.height);\n}\n/**\n * Get the bounds of the world that are plotted in the canvas.\n * @returns {Rectangle}\n */ function $a1820c190f7a8b2e$var$getWorldInCanvasBounds() {\n    return new (0, $90999bd6b14cd690$export$4617fb02663045ef)($a1820c190f7a8b2e$var$cameraPosition.x, $a1820c190f7a8b2e$var$cameraPosition.y, $a1820c190f7a8b2e$var$canvasRect.width, $a1820c190f7a8b2e$var$canvasRect.height);\n}\n/**\n * Get canvas dimensions.\n * @returns {Dims2D}\n */ function $a1820c190f7a8b2e$var$getCanvasDimensions() {\n    return {\n        width: $a1820c190f7a8b2e$var$canvasRect.width,\n        height: $a1820c190f7a8b2e$var$canvasRect.height\n    };\n}\n/**\n * Get the canvas context.\n * @returns {CanvasRenderingContext2D}\n */ function $a1820c190f7a8b2e$var$getContext2D() {\n    return $a1820c190f7a8b2e$var$canvas.getContext(\"2d\", {\n        alpha: $a1820c190f7a8b2e$var$canvasAlpha\n    });\n}\n/**\n * @typedef {Object} Closers\n * @property {Element} element - when clicked, this should close a display.\n * @property {number} response - the response returned if this element closed a display.\n */ /**\n * Set the content of the glass layer. OnClick events are added automatically to the\n * closers.\n * @param {HTMLElement} element\n * @param {Object} options\n * @param {Closers[]} options.closers - array of Closers. If not provided then the entire display\n * is used.\n * @param {string} options.className\n * @param {boolean} options.replace - replace current glass\n * @returns {Promise} fulfils to closers.closes value\n */ function $a1820c190f7a8b2e$var$displayOnGlass(element, options) {\n    let glass;\n    if (options.replace) {\n        glass = document.getElementsByClassName(\"glass\")[0];\n        glass?.replaceChildren();\n    }\n    if (!glass) {\n        glass = document.createElement(\"div\");\n        document.body.appendChild(glass);\n        glass.className = \"glass\";\n    }\n    const glassContent = document.createElement(\"div\");\n    glass.appendChild(glassContent);\n    glassContent.className = \"glass-content\";\n    glassContent.appendChild(element);\n    if (options.className) glass.classList.add(options.className);\n    glass.style.display = \"block\";\n    glass.style.opacity = 1;\n    // calculate if content overflows. This is used because of lack of CSS support\n    // for safe in Safari.\n    const contentHeight = glassContent.getBoundingClientRect().height;\n    if (glassContent.scrollHeight > contentHeight) glassContent.classList.add(\"overflow\");\n    const promises = [];\n    if (options.closers && options.closers.length > 0) options.closers.forEach((closer)=>{\n        const promise = new Promise((resolve)=>{\n            closer.element.addEventListener(\"click\", async ()=>{\n                resolve(closer.closes);\n            });\n        });\n        promises.push(promise);\n    });\n    else {\n        const promise = new Promise((resolve)=>glassContent.addEventListener(\"click\", ()=>resolve()));\n        promises.push(promise);\n    }\n    let closingResponse;\n    return Promise.race(promises).then((response)=>{\n        closingResponse = response;\n        return $a1820c190f7a8b2e$var$wipeGlass(glass);\n    }).then(()=>closingResponse);\n}\n/**\n * Clear and close the glass layer. The layer is hidden and it's content removed.\n * @param {Element} glass\n * @returns {Promise} fulfils to undefined. This is to allow opacity transition.\n */ function $a1820c190f7a8b2e$var$wipeGlass(glass) {\n    glass.style.opacity = 0;\n    window.setTimeout(()=>{\n        glass.remove();\n    }, 500);\n    return Promise.resolve();\n}\n/**\n * Pan the camera.\n * @param {number} dx - movement in world units\n * @param {number} dy - movement in world units\n */ function $a1820c190f7a8b2e$var$panCamera(dx, dy) {\n    $a1820c190f7a8b2e$var$cameraPosition.x += dx;\n    $a1820c190f7a8b2e$var$cameraPosition.y += dy;\n}\n/**\n * Centre the canvas on a point\n * @param {Point} point\n */ function $a1820c190f7a8b2e$var$centreCanvasOn(point) {\n    $a1820c190f7a8b2e$var$cameraPosition.x = point.x - $a1820c190f7a8b2e$var$canvasHalfWidth;\n    $a1820c190f7a8b2e$var$cameraPosition.y = point.y - $a1820c190f7a8b2e$var$canvasHalfHeight;\n}\n/**\n * Convert a distance from ui units to world units.\n * @param {number} dist\n * @returns {number}\n */ function $a1820c190f7a8b2e$var$uiToWorld(dist) {\n    return dist / $a1820c190f7a8b2e$var$scale;\n}\n/**\n * Convert a distance from world units to ui units.\n * @param {number} dist\n * @returns {number}\n */ function $a1820c190f7a8b2e$var$worldToUi(dist) {\n    return dist * $a1820c190f7a8b2e$var$scale;\n}\n/**\n * @typedef {Object} MappedPositions\n * @property {Position} canvas - position on the canvas\n * @property {Position} world - position in the world\n */ /**\n * Convert ui Coordinates to world Position\n * @param {number} x  -position in the ui\n * @param {number} y  -position in the ui\n * @returns {MappedPositions} position on the canvas\n */ function $a1820c190f7a8b2e$var$uiCoordsToMappedPositions(x, y) {\n    x = $a1820c190f7a8b2e$var$uiToWorld(x);\n    y = $a1820c190f7a8b2e$var$uiToWorld(y);\n    const canvasPosition = new (0, $90999bd6b14cd690$export$13807d9ee5a34a42)(Math.round(x), Math.round(y));\n    const worldPosition = new (0, $90999bd6b14cd690$export$13807d9ee5a34a42)(Math.round(x + $a1820c190f7a8b2e$var$cameraPosition.x), Math.round(y + $a1820c190f7a8b2e$var$cameraPosition.y), -$a1820c190f7a8b2e$var$cameraPosition.rotation);\n    return {\n        canvas: canvasPosition,\n        world: worldPosition\n    };\n}\n/**\n * Convert world Position to canvas Position\n * @param {Position} position  -position in the world\n * @returns {Position} position on the canvas\n */ function $a1820c190f7a8b2e$var$worldPositionToCanvas(position) {\n    return new (0, $90999bd6b14cd690$export$13807d9ee5a34a42)(position.x - $a1820c190f7a8b2e$var$cameraPosition.x, position.y - $a1820c190f7a8b2e$var$cameraPosition.y, position.rotation);\n}\n/**\n * Convert canvas Position to world Position\n * @param {Position} position  -position on the canvas\n * @returns {Position} position in the world\n */ function $a1820c190f7a8b2e$var$canvasPositionToWorld(position) {\n    return new (0, $90999bd6b14cd690$export$13807d9ee5a34a42)(position.x + $a1820c190f7a8b2e$var$cameraPosition.x, position.y + $a1820c190f7a8b2e$var$cameraPosition.y, position.rotation);\n}\n/**\n * Convert glass position to world position. Negative positions are calculated as\n * offsets from the right and bottom of the glass dimensions. Otherwise they are\n * calculated as offsets from the left and top.\n * @returns {Position}\n */ function $a1820c190f7a8b2e$var$glassPositionToWorld(position) {\n    const xOrigin = position.x < 0 ? $a1820c190f7a8b2e$var$visibleCanvasRect.x + $a1820c190f7a8b2e$var$visibleCanvasRect.width : $a1820c190f7a8b2e$var$visibleCanvasRect.x;\n    const yOrigin = position.y < 0 ? $a1820c190f7a8b2e$var$visibleCanvasRect.y + $a1820c190f7a8b2e$var$visibleCanvasRect.height : $a1820c190f7a8b2e$var$visibleCanvasRect.y;\n    let x = xOrigin + position.x;\n    let y = yOrigin + position.y;\n    return $a1820c190f7a8b2e$var$canvasPositionToWorld(new (0, $90999bd6b14cd690$export$13807d9ee5a34a42)(x, y, position.rotation));\n}\n/**\n * Test if rectangle on screen.\n * @param {Rectangle} rect\n * @return {boolean} true if on screen\n */ function $a1820c190f7a8b2e$var$isOnScreen(rect) {\n    return rect.overlaps($a1820c190f7a8b2e$var$canvasRect);\n}\n/**\n * Test if rectangle is visible on the canvas.\n * @param {Rectangle} rect - this should have been converted to canvas coordinates\n * @return {boolean} true if on screen\n */ function $a1820c190f7a8b2e$var$isOnCanvas(rect) {\n    return rect.overlaps($a1820c190f7a8b2e$var$canvasRect);\n}\n/**\n * Get the dimensions of the visible canvas.\n * @returns {Rectangle}\n */ function $a1820c190f7a8b2e$var$getVisibleCanvasRect() {\n    return $a1820c190f7a8b2e$var$visibleCanvasRect;\n}\n/**\n * Set the global opacity.\n * @param {number} opacity\n */ function $a1820c190f7a8b2e$var$setOpacity(opacity) {\n    $a1820c190f7a8b2e$var$getContext2D().globalAlpha = opacity;\n}\n/**\n * Screen object\n */ const $a1820c190f7a8b2e$var$SCREEN = {\n    canvasPositionToWorld: $a1820c190f7a8b2e$var$canvasPositionToWorld,\n    centreCanvasOn: $a1820c190f7a8b2e$var$centreCanvasOn,\n    clearCanvas: $a1820c190f7a8b2e$var$clearCanvas,\n    displayOnGlass: $a1820c190f7a8b2e$var$displayOnGlass,\n    getCanvas: ()=>$a1820c190f7a8b2e$var$canvas,\n    getContext2D: $a1820c190f7a8b2e$var$getContext2D,\n    getCanvasDimensions: $a1820c190f7a8b2e$var$getCanvasDimensions,\n    getWorldInCanvasBounds: $a1820c190f7a8b2e$var$getWorldInCanvasBounds,\n    getVisibleCanvasRect: $a1820c190f7a8b2e$var$getVisibleCanvasRect,\n    glassPositionToWorld: $a1820c190f7a8b2e$var$glassPositionToWorld,\n    isOnCanvas: $a1820c190f7a8b2e$var$isOnCanvas,\n    isOnScreen: $a1820c190f7a8b2e$var$isOnScreen,\n    panCamera: $a1820c190f7a8b2e$var$panCamera,\n    resize: $a1820c190f7a8b2e$var$resize,\n    setOpacity: $a1820c190f7a8b2e$var$setOpacity,\n    setOptions: $a1820c190f7a8b2e$var$setOptions,\n    wipeGlass: $a1820c190f7a8b2e$var$wipeGlass,\n    worldPositionToCanvas: $a1820c190f7a8b2e$var$worldPositionToCanvas,\n    worldToUi: $a1820c190f7a8b2e$var$worldToUi,\n    uiCoordsToMappedPositions: $a1820c190f7a8b2e$var$uiCoordsToMappedPositions,\n    uiToWorld: $a1820c190f7a8b2e$var$uiToWorld\n};\nvar $a1820c190f7a8b2e$export$2e2bcd8739ae039 = $a1820c190f7a8b2e$var$SCREEN;\n\n\n/**\n * @file World limitations\n *\n * @module game/world\n */ /**\n * License {@link https://opensource.org/license/mit/|MIT}\n *\n * Copyright 2024 Steve Butler\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the “Software”), to deal in\n * the Software without restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n * Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */ \n\n/**\n * @type {TileMap}\n */ let $f8633d94d0c88c58$var$worldTileMap;\n/**\n * @type {Map<string, Sprite>}\n */ const $f8633d94d0c88c58$var$actors = new Map();\n/**\n * @type {Map<string, Sprite>}\n */ const $f8633d94d0c88c58$var$artefacts = new Map();\n/**\n * Sprites that do not interact\n * @type {Map<string, Sprite>}\n */ const $f8633d94d0c88c58$var$passiveSprites = new Map();\n/**\n * Sprites that grow or spawn. These are drawn first.\n * @type {Map<string, Sprite>}\n */ const $f8633d94d0c88c58$var$organicActors = new Map();\n/**\n * Get the world dimensions. The dimensions are based on the worldTileMap size.\n * It defaults to the screen dimensions if no map has been set.\n * @returns {{number, number}} width and height\n */ function $f8633d94d0c88c58$var$getWorldDims() {\n    return $f8633d94d0c88c58$var$worldTileMap ? $f8633d94d0c88c58$var$worldTileMap.getDimensions() : (0, $a1820c190f7a8b2e$export$2e2bcd8739ae039).getCanvasDimensions();\n}\n/**\n * Add a actor to the world.\n * @param {module:players/actors~Actor}\n */ function $f8633d94d0c88c58$var$addActor(target) {\n    if (target.isOrganic()) $f8633d94d0c88c58$var$organicActors.set(target, target);\n    else $f8633d94d0c88c58$var$actors.set(target, target);\n    $f8633d94d0c88c58$var$worldTileMap.moveTileOccupancyGridPoint(target, null, $f8633d94d0c88c58$var$worldTileMap.worldPointToGrid(target.position));\n}\n/**\n * Remove actor from the world.\n * @param {module:players/actors~Actor}\n */ function $f8633d94d0c88c58$var$removeActor(target) {\n    const gridPoint = $f8633d94d0c88c58$var$worldTileMap.worldPointToGrid(target.position);\n    $f8633d94d0c88c58$var$worldTileMap.deleteOccupancyOfGridPoint(target, gridPoint);\n    if (target.isOrganic()) $f8633d94d0c88c58$var$organicActors.delete(target);\n    else $f8633d94d0c88c58$var$actors.delete(target);\n}\n/**\n * Add a artefact to the world.\n * @param {module:players/actors~Actor}\n */ function $f8633d94d0c88c58$var$addArtefact(target) {\n    $f8633d94d0c88c58$var$artefacts.set(target, target);\n    $f8633d94d0c88c58$var$worldTileMap.moveTileOccupancyGridPoint(target, null, $f8633d94d0c88c58$var$worldTileMap.worldPointToGrid(target.position));\n}\n/**\n * Remove artefact from the world.\n * @param {module:players/actors~Actor}\n */ function $f8633d94d0c88c58$var$removeArtefact(target) {\n    const gridPoint = $f8633d94d0c88c58$var$worldTileMap.worldPointToGrid(target.position);\n    $f8633d94d0c88c58$var$worldTileMap.deleteOccupancyOfGridPoint(target, gridPoint);\n    $f8633d94d0c88c58$var$artefacts.delete(target);\n}\n/**\n * Add effect sprite\n * @param {Sprite} sprite\n */ function $f8633d94d0c88c58$var$addPassiveSprite(sprite) {\n    $f8633d94d0c88c58$var$passiveSprites.set(sprite, sprite);\n}\n/**\n * Add effect sprite\n * @param {Sprite} sprite\n */ function $f8633d94d0c88c58$var$removePassiveSprite(sprite) {\n    $f8633d94d0c88c58$var$passiveSprites.delete(sprite);\n}\n/**\n * Set the tile map for the world.\n * @param {TileMap}\n */ function $f8633d94d0c88c58$var$setTileMap(tileMap) {\n    $f8633d94d0c88c58$var$worldTileMap = tileMap;\n}\n/**\n * Get the tile map for the world.\n * @returns {TileMap}\n */ function $f8633d94d0c88c58$var$getTileMap() {\n    return $f8633d94d0c88c58$var$worldTileMap;\n}\n/**\n * Remove the tile map from the world.\n * @param {TileMap}\n */ function $f8633d94d0c88c58$var$removeTileMap() {\n    $f8633d94d0c88c58$var$worldTileMap = null;\n}\n/**\n * Clear the map and all actors.\n */ function $f8633d94d0c88c58$var$clearAll() {\n    $f8633d94d0c88c58$var$organicActors.forEach((actor)=>$f8633d94d0c88c58$var$removeActor(actor));\n    $f8633d94d0c88c58$var$actors.forEach((actor)=>$f8633d94d0c88c58$var$removeActor(actor));\n    $f8633d94d0c88c58$var$artefacts.forEach((actor)=>$f8633d94d0c88c58$var$removeArtefact(actor));\n    $f8633d94d0c88c58$var$passiveSprites.forEach((sprite)=>$f8633d94d0c88c58$var$removePassiveSprite(sprite));\n    $f8633d94d0c88c58$var$removeTileMap();\n}\n/**\n * Update the world. This calls the update methods of the tile map and all sprites/\n * @param {number} deltaSeconds\n */ function $f8633d94d0c88c58$var$update(deltaSeconds) {\n    $f8633d94d0c88c58$var$worldTileMap?.update(deltaSeconds);\n    $f8633d94d0c88c58$var$organicActors.forEach((actor)=>{\n        const oldGridPoint = $f8633d94d0c88c58$var$worldTileMap.worldPointToGrid(actor.position);\n        actor.visible = $f8633d94d0c88c58$var$worldTileMap.canHeroSeeGridPoint(oldGridPoint);\n        actor.update(deltaSeconds);\n        const newGridPoint = $f8633d94d0c88c58$var$worldTileMap.worldPointToGrid(actor.position);\n        $f8633d94d0c88c58$var$worldTileMap.moveTileOccupancyGridPoint(actor, oldGridPoint, newGridPoint);\n    });\n    $f8633d94d0c88c58$var$artefacts.forEach((artefact)=>{\n        const oldGridPoint = $f8633d94d0c88c58$var$worldTileMap.worldPointToGrid(artefact.position);\n        artefact.visible = $f8633d94d0c88c58$var$worldTileMap.canHeroSeeGridPoint(oldGridPoint);\n        artefact.update(deltaSeconds);\n        const newGridPoint = $f8633d94d0c88c58$var$worldTileMap.worldPointToGrid(artefact.position);\n        $f8633d94d0c88c58$var$worldTileMap.moveTileOccupancyGridPoint(artefact, oldGridPoint, newGridPoint);\n    });\n    $f8633d94d0c88c58$var$actors.forEach((actor)=>{\n        const oldGridPoint = $f8633d94d0c88c58$var$worldTileMap.worldPointToGrid(actor.position);\n        actor.visible = $f8633d94d0c88c58$var$worldTileMap.canHeroSeeGridPoint(oldGridPoint);\n        actor.update(deltaSeconds);\n        const newGridPoint = $f8633d94d0c88c58$var$worldTileMap.worldPointToGrid(actor.position);\n        $f8633d94d0c88c58$var$worldTileMap.moveTileOccupancyGridPoint(actor, oldGridPoint, newGridPoint);\n    });\n    $f8633d94d0c88c58$var$passiveSprites.forEach((sprite)=>sprite.update(deltaSeconds));\n}\n/**\n * Resolve a ui click\n * @param {module:ui/interactions~MappedPositions} positions - click coordinates in canvas and world coordinates.\n * @returns {boolean} true if resolved.\n */ function $f8633d94d0c88c58$var$resolveClick(positions) {\n    const tile = $f8633d94d0c88c58$var$worldTileMap?.getTileAtWorldPoint(positions.world);\n    if (tile) {\n        tile.actionClick(positions.world);\n        return true;\n    }\n    return false;\n}\n/**\n * Resolve a context menu event\n * @param {module:ui/interactions~MappedPositions} positions - click coordinates in canvas and world coordinates.\n * @returns {boolean} true if resolved.\n */ function $f8633d94d0c88c58$var$resolveContextMenu(positions) {\n    const tile = $f8633d94d0c88c58$var$worldTileMap.getTileAtWorldPoint(positions.world);\n    if (tile) {\n        tile.actionContextClick(positions.world);\n        return true;\n    }\n    return false;\n}\n/**\n * Resolve a cancel event\n * @param {module:ui/interactions~MappedPositions} positions - click coordinates in canvas and world coordinates.\n * @returns {boolean} true if resolved.\n */ function $f8633d94d0c88c58$var$resolveCancel(positionsUnused) {\n    return false;\n}\n/**\n * Get the actors\n * @returns {Map<Actor, Actor>}\n */ function $f8633d94d0c88c58$var$getActors() {\n    return $f8633d94d0c88c58$var$actors;\n}\n/**\n * Get the organic actors\n * @returns {Map<Actor, Actor>}\n */ function $f8633d94d0c88c58$var$getOrganicActors() {\n    return $f8633d94d0c88c58$var$organicActors;\n}\n/**\n * Get the artefacts\n * @returns {Map<Actor, Actor>}\n */ function $f8633d94d0c88c58$var$getArtefacts() {\n    return $f8633d94d0c88c58$var$actors;\n}\n/**\n * World object singleton.\n */ const $f8633d94d0c88c58$var$WORLD = {\n    addActor: $f8633d94d0c88c58$var$addActor,\n    addArtefact: $f8633d94d0c88c58$var$addArtefact,\n    addPassiveSprite: $f8633d94d0c88c58$var$addPassiveSprite,\n    clearAll: $f8633d94d0c88c58$var$clearAll,\n    getActors: $f8633d94d0c88c58$var$getActors,\n    getOrganicActors: $f8633d94d0c88c58$var$getOrganicActors,\n    getArtefacts: $f8633d94d0c88c58$var$getArtefacts,\n    getTileMap: $f8633d94d0c88c58$var$getTileMap,\n    getWorldDims: $f8633d94d0c88c58$var$getWorldDims,\n    removeTileMap: $f8633d94d0c88c58$var$removeTileMap,\n    resolveCancel: $f8633d94d0c88c58$var$resolveCancel,\n    resolveClick: $f8633d94d0c88c58$var$resolveClick,\n    resolveContextMenu: $f8633d94d0c88c58$var$resolveContextMenu,\n    removeActor: $f8633d94d0c88c58$var$removeActor,\n    removeArtefact: $f8633d94d0c88c58$var$removeArtefact,\n    removePassiveSprite: $f8633d94d0c88c58$var$removePassiveSprite,\n    setTileMap: $f8633d94d0c88c58$var$setTileMap,\n    update: $f8633d94d0c88c58$var$update\n};\nvar $f8633d94d0c88c58$export$2e2bcd8739ae039 = $f8633d94d0c88c58$var$WORLD;\n\n\n/**\n * @file Heads-up display. Unlike the world, this never pans and so positions are\n * locked to the canvas coordinates.\n *\n * @module hud/hud\n */ /**\n * License {@link https://opensource.org/license/mit/|MIT}\n *\n * Copyright 2024 Steve Butler\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the “Software”), to deal in\n * the Software without restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n * Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */ /**\n * @file Actor classes. Actors encapsulate a Sprite and represent moving objects\n * that can interact with the game.\n *\n * @module players/actors\n */ /**\n * License {@link https://opensource.org/license/mit/|MIT}\n *\n * Copyright 2024 Steve Butler\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the “Software”), to deal in\n * the Software without restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n * Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */ /**\n * @file Handle fights and other interactions.\n *\n * @module dnd/interact\n */ /**\n * License {@link https://opensource.org/license/mit/|MIT}\n *\n * Copyright 2024 Steve Butler (henspace.com).\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the “Software”), to deal in\n * the Software without restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n * Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */ \n/**\n * @file Create transient effects.\n *\n * @module utils/effects/transient\n */ /**\n * License {@link https://opensource.org/license/mit/|MIT}\n *\n * Copyright 2024 Steve Butler (henspace.com).\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the “Software”), to deal in\n * the Software without restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n * Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */ /**\n * @file Basic sprite control\n *\n * @module utils/sprites/sprite\n */ /**\n * License {@link https://opensource.org/license/mit/|MIT}\n *\n * Copyright 2024 Steve Butler\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the “Software”), to deal in\n * the Software without restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n * Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */ \n/**\n * @file Handle sprite rendering on the canvas\n *\n * @module utils/sprites/spriteRenderers\n */ /**\n * License {@link https://opensource.org/license/mit/|MIT}\n *\n * Copyright 2024 Steve Butler\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the “Software”), to deal in\n * the Software without restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n * Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */ \n/**\n * @file Canvas functions for handling text.\n *\n * @module utils/text/text\n */ /**\n * License {@link https://opensource.org/license/mit/|MIT}\n *\n * Copyright 2024 Steve Butler\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the “Software”), to deal in\n * the Software without restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n * Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */ \nfunction $335738a0ba898678$export$85b404b88b79e37e(context, text) {\n    const metrics = context.measureText(text);\n    return {\n        width: metrics.width,\n        height: metrics.fontBoundingBoxAscent + metrics.fontBoundingBoxDescent,\n        offsetTop: -metrics.fontBoundingBoxAscent,\n        offsetCentreY: 0.5 * (metrics.fontBoundingBoxDescent - metrics.fontBoundingBoxAscent)\n    };\n}\n/**\n * Wrap text based on https://codepen.io/nishiohirokazu/pen/jjNyye\n * @param {CanvasRenderingContext2D} context\n * @param {string} paragraph\n * @param {module:utils/geometry~Position} position\n * @param {Object} options\n * @param {number} options.xWrapPosition - position to wrap text.\n * @param {number} [options.lineSpacing = 1] - multiplier for line height. 1 shifts lines by the total font height.\n * @returns {number} the next line y position.\n */ function $335738a0ba898678$var$wrapParagraph(context, paragraph, position, options) {\n    const words = paragraph.split(\" \");\n    let x = position.x ?? 0;\n    let y = position.y ?? 0;\n    let maxLineLength = options.xWrapPosition - x;\n    let lineSpacing = options.lineSpacing ?? 1;\n    let line = \"\";\n    let lineHeight;\n    for(let n = 0; n < words.length; n++){\n        let testLine = line + words[n] + \" \";\n        const bounds = $335738a0ba898678$export$85b404b88b79e37e(context);\n        if (!lineHeight) lineHeight = lineSpacing * bounds.height;\n        if (bounds.width > maxLineLength && n > 0) {\n            context.fillText(line, x, y);\n            line = words[n] + \" \";\n            y += lineHeight;\n        } else line = testLine;\n    }\n    context.fillText(line, x, y);\n    return y + lineHeight;\n}\nfunction $335738a0ba898678$export$bec150f75a9b8f11(context, text, position, options) {\n    context.font = $3c404572c27a35d5$export$955358618f994a11(options?.styleName);\n    context.fillStyle = options?.color ?? \"white\";\n    if (!options?.wrapAtX) context.fillText(text, position.x ?? 0, position.y ?? 0);\n    else {\n        var paragraphs = text.split(\"\\n\");\n        for(let n = 0; n < paragraphs.length; n++)options.y = $335738a0ba898678$var$wrapParagraph(context, paragraphs[n], position, options);\n    }\n}\n\n\n\n/**\n * @file Debug utilities\n *\n * @module utils/debug\n */ /**\n * License {@link https://opensource.org/license/mit/|MIT}\n *\n * Copyright 2024 Steve Butler\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the “Software”), to deal in\n * the Software without restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n * Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */ const $f92f169e79f1c193$export$8eb3892b442747bd = {\n    /**\n   * Should sprite boxes be drawn.@type {boolean}\n   */ spriteBoxes: false,\n    /**\n   * Show framerate\n   */ showFps: true\n};\n\n\n\n\n/**\n * @file Animation support\n *\n * @module utils/sprites/animation\n */ /**\n * License {@link https://opensource.org/license/mit/|MIT}\n *\n * Copyright 2024 Steve Butler\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the “Software”), to deal in\n * the Software without restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n * Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */ /**\n * @file Load and manage images. The image manager is implemented as a singleton.\n *\n * @module utils/sprites/imageManager\n */ /**\n * License {@link https://opensource.org/license/mit/|MIT}\n *\n * Copyright 2024 Steve Butler\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the “Software”), to deal in\n * the Software without restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n * Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */ \n/**\n * @typedef {Object} SpriteBitmap\n * @property {string} filename\n * @property {Image} image\n * @property {number} width\n * @property {number} height\n * @property {number} centreX\n * @property {number} centreY\n */ /** @type {Map<string, SpriteBitmap>} */ let $5840285c35321464$var$spriteMap = new Map();\n/**\n * Load an image\n * @param {URL} srcUrl - source URL\n * @returns {Promise} fulfils to @type {Image}.\n */ function $5840285c35321464$var$loadImage(srcUrl) {\n    return new Promise((resolve)=>{\n        const image = new Image();\n        image.addEventListener(\"load\", ()=>{\n            (0, $2d5b4e7cb639ebe1$export$2e2bcd8739ae039).debug(`Image ${srcUrl} loaded.`);\n            resolve(image);\n        });\n        image.src = srcUrl;\n    });\n}\n/**\n * Load a number of images\n * @param {URL[]} srcUrls - array of source URLs\n * @returns {Promise} fulfils to @type {Image[]}.\n */ function $5840285c35321464$var$loadImages(srcUrls) {\n    const promises = [];\n    srcUrls.forEach((url)=>promises.push($5840285c35321464$var$loadImage(url)));\n    return Promise.all(promises);\n}\n/**\n * Load sprite map.\n * @param {Object} spriteMapDef Sprite map definition from TexturePacker Array JSON file without multipack\n * @param {URL} textureUrl\n * @returns {Promise} fulfils to array of sprite map keys\n */ function $5840285c35321464$var$loadSpriteMap(spriteMapDef, textureUrl) {\n    return $5840285c35321464$var$loadImage(textureUrl).then((image)=>$5840285c35321464$var$buildSpriteMap(spriteMapDef, image));\n}\n/**\n * Build the sprite map\n * @param {Object} spriteMapDef - map definition from texture mapper. Array JSON no multi pack.\n * @param {Image} texture - images providing texture for sprite map.\n * @returns {Promise} fulfils to array of sprite map keys.\n */ function $5840285c35321464$var$buildSpriteMap(spriteMapDef, texture) {\n    const promises = [];\n    spriteMapDef.frames.forEach((frame)=>{\n        promises.push(createImageBitmap(texture, frame.frame.x, frame.frame.y, frame.frame.w, frame.frame.h).then((spriteImage)=>{\n            const spriteBitmap = {\n                filename: frame.filename,\n                image: spriteImage,\n                width: frame.frame.w,\n                height: frame.frame.h,\n                centreX: frame.sourceSize.w / 2 - frame.spriteSourceSize.x,\n                centreY: frame.sourceSize.h / 2 - frame.spriteSourceSize.y\n            };\n            $5840285c35321464$var$spriteMap.set(frame.filename, spriteBitmap);\n            return frame.filename;\n        }));\n    });\n    return Promise.all(promises);\n}\n/**\n * @param {string} filename\n * @param {Object} options\n * @param {string} options.fallback - image name to use if not found.\n * @param {boolean} options.quiet - if true, no message is logged if image not found.\n * @returns {SpriteBitmap} null if filename not found.\n */ function $5840285c35321464$var$getSpriteBitmap(filename, options) {\n    let result = $5840285c35321464$var$spriteMap.get(filename);\n    if (!result && !options?.quiet) (0, $2d5b4e7cb639ebe1$export$2e2bcd8739ae039).debug(`Failed to find image ${filename}.`);\n    if (!result && options?.fallback) {\n        result = $5840285c35321464$var$spriteMap.get(options.fallback);\n        if (!result) (0, $2d5b4e7cb639ebe1$export$2e2bcd8739ae039).debug(`Failed to find fallback image ${options.fallback}.`);\n    }\n    return result;\n}\n/**\n * Get image for an undefined bitmap\n * @returns {SpriteBitmap} null if filename not found.\n */ function $5840285c35321464$var$getUndefinedBitmap() {\n    return $5840285c35321464$var$spriteMap.get(\"undefined.png\");\n}\n/**\n * Singleton image manager.\n */ const $5840285c35321464$var$IMAGE_MANAGER = {\n    getSpriteBitmap: $5840285c35321464$var$getSpriteBitmap,\n    getUndefinedBitmap: $5840285c35321464$var$getUndefinedBitmap,\n    loadImage: $5840285c35321464$var$loadImage,\n    loadImages: $5840285c35321464$var$loadImages,\n    loadSpriteMap: $5840285c35321464$var$loadSpriteMap\n};\nvar $5840285c35321464$export$2e2bcd8739ae039 = $5840285c35321464$var$IMAGE_MANAGER;\n\n\n/**\n * @file Time utilities. Two clocks exist in the games: real and turn based.\n *\n * @module utils/time/clock\n */ /**\n * License {@link https://opensource.org/license/mit/|MIT}\n *\n * Copyright 2024 Steve Butler\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the “Software”), to deal in\n * the Software without restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n * Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */ /**\n * @type {DOMHighResTimeStamp}\n */ let $92e1ec0ff12c1fbf$var$currentTimeMs = 0;\n/**\n * @param {DOMHighResTimeStamp} timeNowMs\n */ function $92e1ec0ff12c1fbf$var$updateTimeNow(timeNowMs) {\n    $92e1ec0ff12c1fbf$var$currentTimeMs = timeNowMs;\n}\n/**\n * Get a frame counter.\n * @param {number} framePeriodMs - time between frames\n * @param {number} [timeOffsetMs = 0] - offset to allow some randomisation\n * @returns {number}\n */ function $92e1ec0ff12c1fbf$var$getFrameCount(framePeriodMs, timeOffsetMs = 0) {\n    return Math.floor(($92e1ec0ff12c1fbf$var$currentTimeMs + timeOffsetMs) / framePeriodMs);\n}\n/**\n *  Game clock as singleton.\n */ const $92e1ec0ff12c1fbf$var$GAME_CLOCK = {\n    updateTimeNow: $92e1ec0ff12c1fbf$var$updateTimeNow,\n    getFrameCount: $92e1ec0ff12c1fbf$var$getFrameCount\n};\nvar $92e1ec0ff12c1fbf$export$2e2bcd8739ae039 = $92e1ec0ff12c1fbf$var$GAME_CLOCK;\n\n\n/**\n * @file Simple indexer for arrays.\n *\n * @module utils/arrays/indexer\n */ /**\n * License {@link https://opensource.org/license/mit/|MIT}\n *\n * Copyright 2024 Steve Butler\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the “Software”), to deal in\n * the Software without restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n * Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */ \nconst $af167e06ffca879a$export$cab6ba75b045ad71 = {\n    WRAP: 0,\n    REVERSE: 1,\n    STOP: 2\n};\nclass $af167e06ffca879a$export$7ed7e8a26b54b288 {\n    /** @type {number} */ #length;\n    /** @type {number} */ #maxIndex;\n    /** @type {number} */ #loopMethod;\n    /** @type {number} */ #direction;\n    /** @type {number} */ #index;\n    /**\n   * @param {number} length\n   * @param {LoopMethod} loopMethod\n   */ constructor(length, loopMethod){\n        this.#length = length;\n        this.#maxIndex = length - 1;\n        this.#loopMethod = loopMethod;\n        this.#direction = 1;\n        this.#index = 0;\n    }\n    /**\n   * Get current index.\n   */ get index() {\n        return this.#index;\n    }\n    /**\n   * Set current index. This will be clipped to a valid value.\n   */ set index(value) {\n        this.#index = $05d58a132d6b5767$export$e0b576e7a74416cd(value, 0, this.#length - 1);\n    }\n    /** Advance to the index.\n   * @param {number} distance - amount to move. This should be positive.\n   * @returns {number} the new index\n   */ advanceBy(distance) {\n        if (this.#length < 1) return this.#index;\n        switch(this.#loopMethod){\n            case $af167e06ffca879a$export$cab6ba75b045ad71.WRAP:\n                return this.#advanceByWrap(distance);\n            case $af167e06ffca879a$export$cab6ba75b045ad71.REVERSE:\n                return this.#advanceByReverse(distance);\n            case $af167e06ffca879a$export$cab6ba75b045ad71.NONE:\n            default:\n                return this.#advanceByStop(distance);\n        }\n    }\n    /** Advance the index by distance. The direction is maintained by the indexer\n   * itself. Wrap at ends.\n   * @param {number} distance - amount to move. This should be positive.\n   * @returns {number} the new index\n   */ #advanceByWrap(distance) {\n        distance = distance % this.#length;\n        this.#index += distance % this.#length;\n        if (this.#index >= this.#length) this.#index = this.#index - this.#length;\n        return this.#index;\n    }\n    /** Advance the index by distance. The direction is maintained by the indexer\n   * itself. Reverse at ends.\n   * @param {number} distance - amount to move. This should be positive.\n   * @returns {number} the new index\n   */ #advanceByReverse(distance) {\n        const nFullTraversals = Math.floor(distance / this.#length);\n        if (nFullTraversals % 2) this.#direction = -this.#direction; // odd so reversing\n        distance = distance % this.#length;\n        if (this.#direction > 0) {\n            this.#index += distance;\n            const overshoot = this.#index - this.#maxIndex;\n            if (overshoot > 0) {\n                this.#index = this.#maxIndex - overshoot;\n                this.#direction = -1;\n            }\n        } else if (this.#direction < 0) {\n            this.#index -= distance;\n            if (this.#index < 0) {\n                this.#index = -this.#index;\n                this.#direction = 1;\n            }\n        }\n        return this.#index;\n    }\n    /** Advance the index by distance. The direction is maintained by the indexer\n   * itself. Stop at ends.\n   * @param {number} distance - amount to move. This should be positive.\n   * @returns {number} the new index\n   */ #advanceByStop(distance) {\n        if (this.#direction > 0) this.#index = Math.min(this.#maxIndex, this.#index + distance);\n        else if (this.#direction < 0) this.#index = Math.max(0, this.#index - distance);\n        return this.#index;\n    }\n}\n\n\n\n\nclass $7f41e47310ae6543$export$9d5734c725768403 {\n    /** @type {boolean} */ playing;\n    /** @type {module:utils/sprites/imageManager~SpriteBitmap[]} */ #frames;\n    /** @type {Indexer} */ #indexer;\n    /** @type {number} */ #lastFrameCount;\n    /** offset used to randomise animations. @type {number} */ #timeOffset;\n    /** Period in ms for frame animations @type {number}*/ #framePeriodMs;\n    /**\n   * Construct animation.\n   * @param {Object | string} filenamePattern - if a string is parsed then the image is a single frame.\n   * @param {string} filenamePattern.prefix\n   * @param {number} filenamePattern.startIndex - starting index.\n   * @param {number} filePattern.padding - index is padded with leading zeros to padding length\n   * @param {string} filenamePattern.suffix\n   * @param {Object} options\n   * @param {number} options.framePeriodMs - period in ms for frame animations.\n   * @param {LoopMethod} options.loopMethod - method of looping animation.\n   */ constructor(filenamePattern, options){\n        this.#frames = [];\n        this.#lastFrameCount = 0;\n        this.#timeOffset = $05d58a132d6b5767$export$b141de964f0a90c1(0, 1000);\n        if (typeof filenamePattern === \"string\") {\n            this.#frames.push((0, $5840285c35321464$export$2e2bcd8739ae039).getSpriteBitmap(filenamePattern));\n            return;\n        }\n        this.#framePeriodMs = Math.max(1, options.framePeriodMs);\n        let index = filenamePattern.startIndex ?? 0;\n        let padding = filenamePattern.padding ?? 0;\n        let textureFrame;\n        let firstFrame = true;\n        do {\n            const fileName = `${filenamePattern.prefix}${index.toString().padStart(padding, \"0\")}${filenamePattern.suffix}`;\n            if (firstFrame) {\n                textureFrame = (0, $5840285c35321464$export$2e2bcd8739ae039).getSpriteBitmap(fileName);\n                firstFrame = false;\n            } else textureFrame = (0, $5840285c35321464$export$2e2bcd8739ae039).getSpriteBitmap(fileName, {\n                quiet: true\n            });\n            if (textureFrame) this.#frames.push(textureFrame);\n            index++;\n        }while (textureFrame);\n        this.#indexer = new (0, $af167e06ffca879a$export$7ed7e8a26b54b288)(this.#frames.length, options.loopMethod);\n        this.playing = true;\n    }\n    /**\n   * Get current frame\n   * @returns {module:utils/sprites/imageManager~SpriteBitmap}\n   */ getCurrentFrame() {\n        if (this.#frames.length > 1) {\n            if (this.playing) {\n                const frameCount = (0, $92e1ec0ff12c1fbf$export$2e2bcd8739ae039).getFrameCount(this.#framePeriodMs, this.#timeOffset);\n                if (frameCount !== this.#lastFrameCount) {\n                    this.#indexer.advanceBy(frameCount - this.#lastFrameCount);\n                    this.#lastFrameCount = frameCount;\n                }\n            }\n            return this.#frames[this.#indexer.index];\n        } else return this.#frames[0];\n    }\n    /**\n   * Manual movement of frames. Note this automatically switches off playing.\n   * @param {number} index - frame index. This will be clipped to the ends of the\n   * array.\n   */ setCurrentIndex(index) {\n        if (this.#frames.length > 1) {\n            this.playing = false;\n            this.#indexer.index = index;\n        }\n    }\n    /**\n   * Get the current index.\n   * @returns {number}\n   */ getCurrentIndex() {\n        if (this.#frames.length > 1) return this.#indexer.index;\n        else return 0;\n    }\n}\nclass $7f41e47310ae6543$export$7ded0ab8d4b1a54f {\n    /** @type {Object.<string, AnimatedImage>} */ #animatedImages;\n    /** @type {string} */ #currentImage;\n    /**\n   * Create the keyed animated image\n   * @param {string} key\n   * @param {AnimatedImage} animatedImage\n   */ constructor(key, animatedImage){\n        this.#animatedImages = {};\n        this.#animatedImages[key] = animatedImage;\n        this.#currentImage = animatedImage;\n    }\n    /**\n   * Get the current image.\n   */ get image() {\n        return this.#currentImage;\n    }\n    /**\n   * Add image to available images.\n   * @param {string} key\n   * @param {AnimatedImage} animatedImage\n   */ addAnimatedImage(key, animatedImage) {\n        this.#animatedImages[key] = animatedImage;\n    }\n    /**\n   * Set the current animation key. Ignored if it does not exist.\n   * @param {string} key\n   */ setCurrentKey(key) {\n        //eslint-disable-next-line no-prototype-builtins\n        if (this.#animatedImages.hasOwnProperty(key)) this.#currentImage = this.#animatedImages[key];\n        else (0, $2d5b4e7cb639ebe1$export$2e2bcd8739ae039).error(`Attempt to set current key to nonexistent value of ${key}`);\n    }\n    /**\n   * Get current frame\n   * @returns {module:utils/sprites/imageManager~SpriteBitmap}\n   */ getCurrentFrame() {\n        return this.#currentImage.getCurrentFrame();\n    }\n}\n\n\n/**\n * @typedef {Object} RenderGeometry\n * @property {number} width\n * @property {number} height\n * @property {module:utils/geometry~Point} origin - origin relative to the centre\n */ /**\n * Convert RenderGeometry to Rectangle\n * @param {module:utils/geometry~Position} position\n * @param {RenderGeometry} renderGeom\n * @returns {module:utils/geometry~Rectangle}\n */ function $f1adbd10d5a753d6$var$renderGeometryToRect(position, renderGeom) {\n    return new (0, $90999bd6b14cd690$export$4617fb02663045ef)(position.x - renderGeom.width / 2, position.y - renderGeom.height / 2, renderGeom.width, renderGeom.height);\n}\nclass $f1adbd10d5a753d6$export$b1e2fc7f480e9342 {\n    /** @type {CanvasRenderingContext2D} */ _context;\n    /** @type {module:utils/geometry~Rectangle} */ _boundingBoxCanvas;\n    /**\n   * Construct base renderer\n   * @param {CanvasRenderingContext2D} context\n   */ constructor(context){\n        this._context = context;\n        this._boundingBoxCanvas = new (0, $90999bd6b14cd690$export$4617fb02663045ef)(0, 0, 0, 0);\n    }\n    /**\n   * Return the name of image use to represent the sprite in passive situations\n   * such as dialogs. If there is no image, it returns null;\n   * @returns {string}\n   */ getImageFilename() {\n        return null;\n    }\n    /**\n   * Get the context. This is just provided to allow classes other than children\n   * to read the context. _context could be used but that is not the intent.\n   */ getContext() {\n        return this._context;\n    }\n    /**\n   * Get the axis aligned bounding box\n   * @returns {module:utils/geometry~Rectangle}\n   */ getBoundingBoxCanvas() {\n        return this._boundingBoxCanvas;\n    }\n    /**\n   * Render the sprite.\n   * @param {module:utils/geometry~Position} position in the world\n   * @param {number} opacity\n   */ render(position, opacity) {\n        position = (0, $a1820c190f7a8b2e$export$2e2bcd8739ae039).worldPositionToCanvas(position);\n        if (!this.isOnCanvas(position)) return;\n        const currentAlpha = this._context.globalAlpha;\n        this._context.globalAlpha = currentAlpha * opacity;\n        const rotated = position.rotation;\n        if (rotated) {\n            this._context.save();\n            this._context.translate(position.x, position.y);\n            this._context.rotate(-position.rotation);\n            this._context.translate(-position.x, -position.y);\n        }\n        this._doRender(position);\n        if (rotated) this._context.restore();\n        if ($f92f169e79f1c193$export$8eb3892b442747bd.spriteBoxes) {\n            this._context.strokeStyle = \"green\";\n            this._context.strokeRect(this._boundingBoxCanvas.x, this._boundingBoxCanvas.y, this._boundingBoxCanvas.width, this._boundingBoxCanvas.height);\n        }\n        this._context.globalAlpha = currentAlpha;\n    }\n    /**\n   * Render the sprite\n   * @param {module:utils/geometry~Position} position\n   */ _doRender(positionUnused) {\n        (0, $2d5b4e7cb639ebe1$export$2e2bcd8739ae039).error(\"_doRender method should be overridden.\");\n    }\n    /**\n   * Check if it will be on screen\n   * @param {module:utils/geometry~Position} position\n   * @returns {boolean} true if on screen.\n   */ isOnScreen(position) {\n        const rect = new (0, $90999bd6b14cd690$export$4617fb02663045ef)(position.x - this._boundingBoxCanvas.width / 2, position.y - this._boundingBoxCanvas.height / 2, this._boundingBoxCanvas.width, this._boundingBoxCanvas.height);\n        return (0, $a1820c190f7a8b2e$export$2e2bcd8739ae039).isOnScreen(rect);\n    }\n    /**\n   * Check if it will be on screen\n   * @param {module:utils/geometry~Position} position - this should be in canvas coordinates.\n   * @returns {boolean} true if on screen.\n   */ isOnCanvas(position) {\n        const rect = new (0, $90999bd6b14cd690$export$4617fb02663045ef)(position.x - this._boundingBoxCanvas.width / 2, position.y - this._boundingBoxCanvas.height / 2, this._boundingBoxCanvas.width, this._boundingBoxCanvas.height);\n        return (0, $a1820c190f7a8b2e$export$2e2bcd8739ae039).isOnCanvas(rect);\n    }\n}\nclass $f1adbd10d5a753d6$export$544ff2c168abc0f9 extends $f1adbd10d5a753d6$export$b1e2fc7f480e9342 {\n    /** Name used to access font styles from the fonts.\n   * @type {string}\n   */ #styleName;\n    /** @type {string} */ #lastCalculatedText;\n    /** @type {RenderGeometry} */ #renderGeometry;\n    /** @type {string} */ text;\n    /** @type {string} */ color;\n    /**\n   * @param {CanvasRenderingContext2D} context\n   * @param {string} text\n   * @param {Object} options\n   * @param {string} [options.styleName = 'normal']\n   * @param {string} [options.color = 'white']\n   */ constructor(context, text, options = {\n        styleName: \"normal\",\n        color: \"white\"\n    }){\n        super(context);\n        this.text = text;\n        this.color = options.color;\n        this.#styleName = options.styleName;\n    }\n    /**\n   * Calculate the renderGeometry of the text.\n   * @param {string} text\n   */ #calculateRenderGeometry(text) {\n        this._context.font = $3c404572c27a35d5$export$955358618f994a11(this.#styleName);\n        const metrics = this._context.measureText(text);\n        this.#renderGeometry = {\n            width: metrics.width,\n            height: metrics.fontBoundingBoxAscent + metrics.fontBoundingBoxDescent,\n            origin: {\n                x: -0.5 * metrics.width,\n                y: 0.5 * (metrics.fontBoundingBoxAscent - metrics.fontBoundingBoxDescent)\n            }\n        };\n        this.#lastCalculatedText = text;\n    }\n    /**\n   * Render the sprite\n   * @param {module:utils/geometry~Position} position - this will have been adjusted to the screen.\n   */ _doRender(position) {\n        if (this.text !== this.#lastCalculatedText) this.#calculateRenderGeometry(this.text);\n        const renderPosition = {\n            x: position.x + this.#renderGeometry.origin.x,\n            y: position.y + this.#renderGeometry.origin.y,\n            rotation: position.rotation\n        };\n        $335738a0ba898678$export$bec150f75a9b8f11(this._context, this.#lastCalculatedText, renderPosition, {\n            color: this.color,\n            styleName: this.#styleName\n        });\n        this._boundingBoxCanvas = $f1adbd10d5a753d6$var$renderGeometryToRect(position, this.#renderGeometry);\n    }\n}\nclass $f1adbd10d5a753d6$export$bea6a7ef06354cc extends $f1adbd10d5a753d6$export$b1e2fc7f480e9342 {\n    #width;\n    #height;\n    #halfWidth;\n    #halfHeight;\n    #fillStyle;\n    #strokeStyle;\n    #lineWidth;\n    /**\n   *\n   * @param {CanvasRenderingContext2D} context\n   * @param {Object} options\n   * @param {number} options.width\n   * @param {number} options.height\n   * @param {string} options.fillStyle\n   * @param {string} options.strokeStyle\n   */ constructor(context, options){\n        super(context);\n        this.#width = options.width ?? 10;\n        this.#height = options.height ?? 10;\n        this.#halfWidth = this.#width / 2;\n        this.#halfHeight = this.#height / 2;\n        this.#fillStyle = options.fillStyle;\n        this.#strokeStyle = options.strokeStyle;\n        this.#lineWidth = options.lineWidth ?? 2;\n    }\n    /**\n   * Render the sprite.\n   * @param {module:utils/geometry~Position} position - this will have been adjusted to the screen.\n   */ _doRender(position) {\n        this._context.lineWidth = this.#lineWidth;\n        const x = position.x - this.#halfWidth;\n        const y = position.y - this.#halfHeight;\n        if (this.#fillStyle) {\n            this._context.fillStyle = this.#fillStyle;\n            this._context.fillRect(x, y, this.#width, this.#height);\n        }\n        if (this.#strokeStyle) {\n            this._context.strokeStyle = this.#strokeStyle;\n            this._context.strokeRect(x, y, this.#width, this.#height);\n        }\n        this._boundingBoxCanvas = new (0, $90999bd6b14cd690$export$4617fb02663045ef)(x, y, this.#width, this.#height);\n    }\n}\nclass $f1adbd10d5a753d6$export$184b92f2ec28e2e2 extends $f1adbd10d5a753d6$export$b1e2fc7f480e9342 {\n    #height;\n    #halfHeight;\n    #width;\n    #halfWidth;\n    #fillStyle;\n    #strokeStyle;\n    #offsetX;\n    #offsetY;\n    #fillHeight;\n    #halfFillHeight;\n    /**\n   *\n   * @param {CanvasRenderingContext2D} context\n   * @param {Object} options\n   * @param {number} options.width\n   * @param {number} options.height\n   * @param {string} options.fillStyle\n   * @param {string} options.strokeStyle\n   * @param {number} options.offsetX - sprite is offset from the normal sprite position.\n   * @param {number} options.offsetY - sprite is offset from the normal sprite position.\n   */ constructor(context, options){\n        super(context);\n        this.#height = options.height;\n        this.#halfHeight = this.#height / 2;\n        this.#width = options.width;\n        this.#halfWidth = this.#width / 2;\n        this.#fillStyle = options.fillStyle;\n        this.#strokeStyle = options.strokeStyle;\n        this.#offsetX = options.offsetX ?? 0;\n        this.#offsetY = options.offsetY ?? 0;\n        this.setLevel(0);\n    }\n    /** Set the level of the gauge.\n   * @param {number} proportion - 0 to 1\n   */ setLevel(proportion) {\n        this.#fillHeight = Math.min(proportion, 1) * this.#height;\n        this.#halfFillHeight = 0.5 * this.#fillHeight;\n    }\n    /**\n   * Render the sprite.\n   * @param {module:utils/geometry~Position} position - this will have been adjusted to the screen.\n   */ _doRender(position) {\n        const topStroke = position.y - this.#halfHeight + this.#offsetY;\n        const topFill = position.y + this.#halfHeight - this.#fillHeight + this.#offsetY;\n        const x = position.x - this.#halfWidth + this.#offsetX;\n        if (this.#fillStyle) {\n            this._context.fillStyle = this.#fillStyle;\n            this._context.fillRect(x, topFill, this.#width, this.#fillHeight);\n        }\n        if (this.#strokeStyle) {\n            this._context.strokeStyle = this.#strokeStyle;\n            this._context.strokeRect(x, topStroke, this.#width, this.#height);\n        }\n        this._boundingBoxCanvas = new (0, $90999bd6b14cd690$export$4617fb02663045ef)(x, topStroke, this.#width, this.#height);\n    }\n}\nclass $f1adbd10d5a753d6$export$f1bb2dcf27836475 extends $f1adbd10d5a753d6$export$b1e2fc7f480e9342 {\n    #gaugeRenderers;\n    /**\n   * The number of gauges is determined by the maximum length of the fill styles and\n   * stroke styles\n   * @param {CanvasRenderingContext2D} context\n   * @param {Object} options\n   * @param {number} options.tileSize\n   * @param {string[]} options.fillStyles\n   * @param {string[]} options.strokeStyles\n   */ constructor(context, options){\n        super(context);\n        const nGauges = Math.max(options.fillStyles.length ?? 0, options.strokeStyles.length ?? 0);\n        if (nGauges === 0) {\n            (0, $2d5b4e7cb639ebe1$export$2e2bcd8739ae039).error(\"Attempt to create MultiGaugeTileRenderer with no gauges.\");\n            return;\n        }\n        this.#gaugeRenderers = [];\n        const gaugeWidth = options.tileSize / nGauges;\n        let gaugePosX = -options.tileSize / 2 + gaugeWidth / 2;\n        for(let index = 0; index < nGauges; index++)this.#gaugeRenderers.push(new $f1adbd10d5a753d6$export$184b92f2ec28e2e2(context, {\n            width: gaugeWidth,\n            height: options.tileSize,\n            fillStyle: options.fillStyles?.[index],\n            strokeStyle: options.strokeStyles?.[index],\n            offsetX: gaugePosX + gaugeWidth * index,\n            offsetY: 0\n        }));\n    }\n    /**\n   * Set the level of a gauge.\n   * @param {number} gaugeIndex\n   * @param {number} proportion - 0 to 1\n   */ setLevel(gaugeIndex, proportion) {\n        this.#gaugeRenderers[gaugeIndex]?.setLevel(proportion);\n    }\n    /**\n   * Render the sprite.\n   * @param {module:utils/geometry~Position} position - this will have been adjusted to the screen.\n   */ render(position) {\n        this.#gaugeRenderers?.forEach((renderer)=>renderer.render(position));\n    }\n}\nclass $f1adbd10d5a753d6$export$f6eddc3f9306e494 extends $f1adbd10d5a753d6$export$b1e2fc7f480e9342 {\n    /** @type {RenderGeometry} */ #renderGeometry;\n    /** @type {Point[]} */ path;\n    /**\n   * Create a path renderer.\n   * @param {CanvasRenderingContext2D} context\n   * @param {Point[]} path\n   */ constructor(context, path){\n        super(context);\n        this.path = path;\n    }\n    /** Calculate the rendering geometry.\n   * @param {Point[]} path\n   * @param {module:utils/geometry~Position} position\n   */ #calculateGeometry(path, positionUnused) {\n        let minPoint = (0, $90999bd6b14cd690$export$9bb5b4b8c6114d78);\n        let maxPoint = (0, $90999bd6b14cd690$export$ffabdd03f47fc732);\n        path.forEach((point)=>{\n            minPoint.x = Math.min(minPoint.x, point.x);\n            minPoint.y = Math.min(minPoint.y, point.y);\n            maxPoint.x = Math.max(maxPoint.x, point.x);\n            maxPoint.y = Math.max(maxPoint.y, point.y);\n        });\n        this.#renderGeometry = {\n            width: maxPoint.x - minPoint.x,\n            height: maxPoint.y - minPoint.y,\n            origin: {\n                x: 0.5 * (minPoint.x + maxPoint.x),\n                y: 0.5 * (minPoint.y + maxPoint.y)\n            }\n        };\n    }\n    /**\n   * Render the sprite.\n   * @param {module:utils/geometry~Position} position - this will have been adjusted to the screen.\n   */ _doRender(position) {\n        if (this.path.length < 2) {\n            (0, $2d5b4e7cb639ebe1$export$2e2bcd8739ae039).error(\"Path sprite needs at least 2 points.\");\n            return;\n        }\n        if (!this.#renderGeometry) this.#calculateGeometry(this.path, position);\n        this._context.beginPath();\n        this._context.strokeStyle = \"blue\";\n        this._context.moveTo(this.path[0].x + position.x, this.path[0].y + position.y);\n        for(let n = 1; n < this.path.length; n++)this._context.lineTo(this.path[n].x + position.x, this.path[n].y + position.y);\n        this._context.closePath();\n        this._context.stroke();\n        this._boundingBoxCanvas = $f1adbd10d5a753d6$var$renderGeometryToRect(position, this.#renderGeometry);\n    }\n}\nclass $f1adbd10d5a753d6$export$c1626e6e036a584 extends $f1adbd10d5a753d6$export$b1e2fc7f480e9342 {\n    /** @type {module:utils/sprites/imageManager~SpriteBitmap} */ #spriteBitmap;\n    /** @type {animation.KeyedAnimatedImages} */ #animation;\n    /**\n   * Create an image renderer.\n   * @param {CanvasRenderingContext2D} context\n   * @param {SpriteBitmap | animation.AnimatedImage | animation.KeyAnimatedImages} imageDefinition\n   */ constructor(context, imageDefinition){\n        super(context);\n        if (imageDefinition?.getCurrentFrame) {\n            this.#animation = imageDefinition;\n            this.#spriteBitmap = this.#animation.getCurrentFrame();\n        } else this.#spriteBitmap = imageDefinition;\n        if (this.#spriteBitmap) {\n            this._boundingBoxCanvas.width = this.#spriteBitmap?.width ?? 0;\n            this._boundingBoxCanvas.height = this.#spriteBitmap?.height ?? 0;\n        } else (0, $2d5b4e7cb639ebe1$export$2e2bcd8739ae039).error(`No image frame available for sprite.`, imageDefinition);\n    }\n    /**\n   * @override\n   */ getImageFilename() {\n        return this.#spriteBitmap.filename;\n    }\n    /**\n   * Render the sprite.\n   * @param {module:utils/geometry~Position} position - this will have been adjusted to the screen.\n   */ _doRender(position) {\n        if (!this.#spriteBitmap) return;\n        const frame = this.#animation ? this.#animation.getCurrentFrame() : this.#spriteBitmap;\n        this._boundingBoxCanvas.x = position.x - this._boundingBoxCanvas.width / 2;\n        this._boundingBoxCanvas.y = position.y - this._boundingBoxCanvas.height / 2;\n        this._context.drawImage(frame.image, position.x - frame.centreX, position.y - frame.centreY);\n    }\n}\n\n\nclass $5b82fcc8e5572650$export$3075603db8e6204c {\n    /** @type {Position}*/ #position = new (0, $90999bd6b14cd690$export$13807d9ee5a34a42)(0, 0, 0);\n    /** @type {Velocity} */ #velocity = new (0, $90999bd6b14cd690$export$4a23b3811cef465)(0, 0, 0);\n    /** @type {Acceleration} */ #acceleration = new (0, $90999bd6b14cd690$export$5086e02bc6b47824)(0, 0, 0);\n    /** @type {SpriteCanvasRenderer[]} */ #renderer;\n    /** @type {AbstractModifier} */ modifier;\n    /** @type {boolean} */ visible;\n    /** @type {number} */ opacity;\n    /**\n   * @param {Object} options\n   * @param {SpriteCanvasRenderer } options.renderer - the renderer or renderers that render the sprite\n   * rather than the world.\n   */ constructor(options){\n        this.#renderer = options?.renderer;\n        this.visible = true;\n        this.opacity = 1;\n    }\n    /**\n   * Get the current position.\n   * @returns {Position}\n   */ get position() {\n        return this.#position;\n    }\n    /**\n   * Set the current position. Invalid values become 0.\n   * @param {Position} nextPosition\n   */ set position(nextPosition) {\n        this.#position.x = this.valueOrZero(nextPosition.x);\n        this.#position.y = this.valueOrZero(nextPosition.y);\n        this.#position.rotation = this.valueOrZero(nextPosition.rotation);\n    }\n    /**\n   * Get the current motion.\n   * @returns {Velocity}\n   */ get velocity() {\n        return this.#velocity;\n    }\n    /**\n   * Get the current motion.\n   * @returns {Acceleration}\n   */ get acceleration() {\n        return this.#acceleration;\n    }\n    /**\n   * Set the current motion.\n   * @param {Acceleration} acceleration\n   */ set acceleration(acceleration) {\n        this.#acceleration = acceleration;\n    }\n    /**\n   * Set the current Velocity. Invalid values become 0.\n   * @param {Velocity} nextVelocity\n   */ set velocity(nextVelocity) {\n        this.#velocity.x = this.valueOrZero(nextVelocity.x);\n        this.#velocity.y = this.valueOrZero(nextVelocity.y);\n        this.#velocity.rotation = this.valueOrZero(nextVelocity.rotation);\n    }\n    /**\n   * Returns the value but converts non-numeric values to 0.\n   * @param {number} value\n   * @returns {number}\n   */ valueOrZero(value) {\n        return typeof value === \"number\" ? value : 0;\n    }\n    /**\n   * Update the sprite. Calls the sprite's modifier and then renderer.\n   * @param {number} deltaSeconds - elapsed time.\n   */ update(deltaSeconds) {\n        if (this.modifier) this.modifier = this.modifier.update(this, deltaSeconds);\n        if (this.visible) this.#render();\n    }\n    /**\n   * Render the sprite by calling the sprite's renderer\n   */ #render() {\n        if (!this.#renderer) return;\n        if (!this.#renderer.forEach) this.#renderer.render(this.#position, this.opacity);\n        else this.#renderer.forEach((renderer)=>renderer.render(this.#position, this.opacity));\n    }\n    /** Get the bounding box for the sprite.\n   * @returns {geometry.Rectangle}\n   */ getBoundingBox() {\n        const boundsCanvas = this.#renderer.getBoundingBoxCanvas();\n        return new (0, $90999bd6b14cd690$export$4617fb02663045ef)(this.position.x - boundsCanvas.width / 2, this.position.y - boundsCanvas.height / 2, boundsCanvas.width, boundsCanvas.height);\n    }\n    /**\n   * Get image file name used for passive renderers. If this is a multirenderer,\n   * the first one with a bitmap is returned.\n   * @returns {module:utils/sprites/imageManager~SpriteBitmap}\n   */ getImageFilename() {\n        if (!this.#renderer.forEach) return this.#renderer.getImageFilename();\n        else for (const renderer of this.#renderer){\n            const bitmap = renderer.getImageFilename();\n            if (bitmap) return bitmap;\n        }\n        return null;\n    }\n}\n\n\n\n\n/**\n * @file Faders which adjust opacity\n *\n * @module utils/sprites/faders\n */ /**\n * License {@link https://opensource.org/license/mit/|MIT}\n *\n * Copyright 2024 Steve Butler (henspace.com).\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the “Software”), to deal in\n * the Software without restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n * Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */ /**\n * @file Modifiers for updates\n *\n * @module utils/sprites/modifiers\n */ /**\n * License {@link https://opensource.org/license/mit/|MIT}\n *\n * Copyright 2024 Steve Butler\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the “Software”), to deal in\n * the Software without restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n * Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */ \n/** Default timeout for transient modifiers. @type {number} */ const $f8eb19ad944a8e76$var$DEFAULT_TIMEOUT_SECS = 10;\nclass $f8eb19ad944a8e76$export$f929ba4d0b405b8b {\n    /** @type {AbstractModifier} */ decoratedModifier;\n    /** The resolve function for transient modifiers @type {function(*)} */ #resolveFunc;\n    /** Total active time in seconds */ #activeSeconds;\n    /** Timeout duration */ #timeoutSeconds;\n    /**\n   *\n   * @param {AbstractModifier} [decoratedModifier]\n   */ constructor(decoratedModifier){\n        this.#activeSeconds = 0;\n        this.#timeoutSeconds = 0;\n        this.decoratedModifier = decoratedModifier;\n    }\n    /**\n   * Apply the modifier as transient to a sprite.\n   * @param {AbstractModifier} modifier\n   * @param {Sprite} sprite\n   * @param {number} [timeoutSeconds =\n   * @returns {Promise} fulfils to null on completion;\n   */ applyAsTransientToSprite(sprite, timeoutSeconds = $f8eb19ad944a8e76$var$DEFAULT_TIMEOUT_SECS) {\n        this.#timeoutSeconds = timeoutSeconds;\n        return new Promise((resolve)=>{\n            this.#resolveFunc = resolve;\n            sprite.modifier = this;\n        });\n    }\n    /**\n   * Apply the modifier as continuous to a sprite.\n   * @param {Sprite} sprite\n   */ applyAsContinuousToSprite(sprite) {\n        sprite.modifier = this;\n    }\n    /** Do the update modification. If a decoratedModifier has been set, this is then\n   * called. If after calling update, the modifier is removed, it is removed from\n   * the owning decoratedModifier. Its children are retained.\n   * @param {Sprite} sprite\n   * @param {number} deltaSeconds - elapsed time since last update.\n   * @returns {AbstractModifier} - the modifier required for the next update. This\n   * normally returns itself. If null is return, this indicates that the modifier\n   * has completed its action and can be removed from the chain of decorated\n   * modifiers. This method handles removal of its own decoratedModifier, but removal\n   * of the root, if appropriate, is the responsibility of the Sprite.\n   */ update(sprite, deltaSeconds) {\n        if (this.#resolveFunc) this.#activeSeconds += deltaSeconds;\n        if (this.decoratedModifier) this.decoratedModifier = this.decoratedModifier?.update(sprite, deltaSeconds);\n        const nextModifier = this.doUpdate(sprite, deltaSeconds);\n        if (!nextModifier || this.#activeSeconds > this.#timeoutSeconds) {\n            this.#resolveFunc?.(null);\n            return null;\n        }\n        return nextModifier;\n    }\n    /** Do the update modification for this modifier.\n   * @param {Sprite} sprite\n   * @param {number} deltaSeconds - elapsed time since last update.\n   * @returns {AbstractModifier} - the modifier for the next update.\n   */ doUpdate(spriteUnused, deltaSecondsUnused) {\n        (0, $2d5b4e7cb639ebe1$export$2e2bcd8739ae039).error(\"doUpdate should be overridden.\");\n        return this;\n    }\n}\n\n\nclass $cf74d2982f28ade3$export$709baf898a5dceda extends (0, $f8eb19ad944a8e76$export$f929ba4d0b405b8b) {\n    /** @type {number} */ #deltaOpacityPerSec;\n    /** @type {number} */ #delaySecs;\n    /** @type {number} */ #elapsedSecs;\n    /**\n   * Create fader.\n   * @param {number} delaySecs - default alignment.\n   * @param {number} lifetimeSecs - default alignment.\n   * @param {AbstractModifier} decoratedModifier\n   */ constructor(delaySecs, lifetimeSecs, decoratedModifier){\n        super(decoratedModifier);\n        this.#delaySecs = delaySecs;\n        this.#deltaOpacityPerSec = 1 / Math.max(lifetimeSecs - delaySecs, 0.5);\n        this.#elapsedSecs = 0;\n    }\n    /**\n   * Adjust sprite opacity depending on time. When the time is complete, this\n   * modify returns null to indicate completion.\n   * @param {module:utils/sprites/sprite~Sprite} sprite\n   * @param {number} deltaSeconds - elapsed time\n   * @returns {AbstractModifier}\n   */ doUpdate(sprite, deltaSeconds) {\n        this.#elapsedSecs += deltaSeconds;\n        if (this.#elapsedSecs > this.#delaySecs) sprite.opacity = Math.max(0, 1 - (this.#elapsedSecs - this.#delaySecs) * this.#deltaOpacityPerSec);\n        else sprite.opacity = 1;\n        return sprite.opacity > 0 ? this : null;\n    }\n}\n\n\n\n/**\n * @file Movers for sprites\n *\n * @module utils/sprites/movers\n */ /**\n * License {@link https://opensource.org/license/mit/|MIT}\n *\n * Copyright 2024 Steve Butler\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the “Software”), to deal in\n * the Software without restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n * Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */ \nclass $6b87500f649b76df$var$VariableSpeed {\n    /** @type {number} */ #speed;\n    /** @type {boolean} */ #linear;\n    /** Create variable speed.\n   * @param {number} speed - base speed.\n   * @param {boolean} linear - true if speed constant, otherwise speed faster if\n   * further away.\n   */ constructor(speed, linear){\n        this.#speed = speed;\n        this.#linear = linear;\n    }\n    /**\n   * Get speed to move between points.\n   * @param {Point} pointA\n   * @param {Point} pointB\n   * @returns {number}\n   */ getSpeedBetweenPoints(pointA, pointB) {\n        if (this.#linear) return this.#speed;\n        else {\n            const separation = Math.abs(pointA.x - pointB.x) + Math.abs(pointA.y - pointB.y);\n            return (1 + 0.1 * separation) * this.#speed;\n        }\n    }\n}\nclass $6b87500f649b76df$export$9600794ac1f85e81 extends (0, $f8eb19ad944a8e76$export$f929ba4d0b405b8b) {\n    /** @type {module:utils/geometry~Point} */ #topLeft;\n    /** @type {module:utils/geometry~Point} */ #bottomRight;\n    /**\n   * @param {AbstractModifier} decoratedModifier\n   */ constructor(decoratedModifier){\n        super(decoratedModifier);\n    }\n    /**\n   * Move sprite using its velocity and acceleration\n   * @param {module:utils/sprites/sprite~Sprite} sprite\n   * @param {number} deltaSeconds - elapsed time\n   * @returns {AbstractModifier}\n   */ doUpdate(sprite, deltaSeconds) {\n        sprite.position.x += sprite.velocity.x * deltaSeconds;\n        sprite.position.y += sprite.velocity.y * deltaSeconds;\n        if (sprite.acceleration) {\n            sprite.velocity.x += sprite.acceleration.x * deltaSeconds;\n            sprite.velocity.y += sprite.acceleration.y * deltaSeconds;\n        }\n        return this;\n    }\n}\nclass $6b87500f649b76df$export$9a9871e8ef5d3528 extends (0, $f8eb19ad944a8e76$export$f929ba4d0b405b8b) {\n    /** @type {number} */ #baseDirection;\n    /**\n   * Construct aligner. Rotations are worked out counter clockwise from the positive\n   * x axis direction. However, sprites are normally drawn vertically as you look at them;\n   * i.e they are pointing downwards or at -90 degrees from the horizontal axis. You can\n   * set this using the baseDirection parameter.\n   * @param {number} baseDirection - default alignment.\n   * @param {AbstractModifier} decoratedModifier\n   */ constructor(baseDirection = -Math.PI / 2, decoratedModifier){\n        super(decoratedModifier);\n        this.#baseDirection = baseDirection;\n    }\n    /**\n   * Create a VelocityAligner. This is a convenience factory method that automatically\n   * sets the base direction to -90 degrees which is how sprites are normally drawn; i.e. upright\n   * instead of horizontally.\n   * @param {AbstractModifier} decoratedModifier\n   * @returns {VelocityAligner}\n   */ static createUprightAligner(decoratedModifier) {\n        return new $6b87500f649b76df$export$9a9871e8ef5d3528(-Math.PI / 2, decoratedModifier);\n    }\n    /**\n   * Align sprite using its velocity.\n   * @param {module:utils/sprites/sprite~Sprite} sprite\n   * @param {number} deltaSeconds - elapsed time\n   * @returns {AbstractModifier}\n   */ doUpdate(sprite, deltaSecondsIgnored) {\n        sprite.position.rotation = sprite.velocity.getScreenDirection() - this.#baseDirection;\n        return this;\n    }\n}\nclass $6b87500f649b76df$export$81812ec41a0682d1 extends (0, $f8eb19ad944a8e76$export$f929ba4d0b405b8b) {\n    /** @type {module:utils/geometry~Point} */ #topLeft;\n    /** @type {module:utils/geometry~Point} */ #bottomRight;\n    /**\n   * @param {module:utils/geometry~Rectangle} bounds\n   * @param {AbstractModifier} decoratedModifier\n   */ constructor(bounds, decoratedModifier){\n        super(decoratedModifier);\n        this.#topLeft = bounds.getTopLeft();\n        this.#bottomRight = bounds.getBottomRight();\n    }\n    /**\n   * Move sprite using its velocity and bouncing on screen.\n   * @param {module:utils/sprites/sprite~Sprite} sprite\n   * @param {number} deltaSeconds - elapsed time\n   * @returns {AbstractModifier}\n   */ doUpdate(sprite, deltaSeconds) {\n        const position = sprite.position;\n        const velocity = sprite.velocity;\n        position.x += velocity.x * deltaSeconds;\n        position.y += velocity.y * deltaSeconds;\n        position.rotation += velocity.rotation * deltaSeconds;\n        if (position.x < this.#topLeft.x || position.x > this.#bottomRight.x) velocity.x *= -1;\n        if (position.y < this.#topLeft.y || position.y > this.#bottomRight.y) velocity.y *= -1;\n        sprite.position = position;\n        sprite.velocity = velocity;\n        return this;\n    }\n}\nclass $6b87500f649b76df$export$254d9747e34ddc90 extends (0, $f8eb19ad944a8e76$export$f929ba4d0b405b8b) {\n    /** @type {module:utils/sprites/sprite~Sprite} */ #prey;\n    /** @type {number} */ #maxSeparation;\n    /** @type {number} */ #variableSpeed;\n    /**\n   *\n   * @param {Object} options\n   * @param {module:utils/sprites/sprite~Sprite} options.prey\n   * @param {number} options.maxSeparation - allowable distance between hunter and prey\n   * @param {number} options.speed - pixels / second\n   * @param {boolean} options.linear - if linear the speed is constant, otherwise it speeds up if further away\n   * @param {AbstractModifier} decoratedModifier\n   */ constructor(options, decoratedModifier){\n        super(decoratedModifier);\n        this.#prey = options.prey;\n        this.#maxSeparation = options.maxSeparation;\n        this.#variableSpeed = new $6b87500f649b76df$var$VariableSpeed(options.speed, options.linear);\n    }\n    /**\n   * Update the sprite to track the hunter.\n   * @param {module:utils/sprites/sprite~Sprite} hunter\n   * @param {*} deltaSeconds\n   * @returns {AbstractModifier}\n   */ doUpdate(hunter, deltaSeconds) {\n        const preyPos = this.#prey.position;\n        const hunterPos = hunter.position;\n        const approachSpeed = this.#variableSpeed.getSpeedBetweenPoints(preyPos, hunterPos);\n        if (!hunterPos.withinSquare(preyPos, this.#maxSeparation)) {\n            const angle = hunterPos.getCartesianAngleTo(preyPos);\n            hunter.velocity.x = approachSpeed * Math.cos(angle);\n            hunter.velocity.y = approachSpeed * Math.sin(angle);\n            const dx = hunter.velocity.x * deltaSeconds;\n            const dy = hunter.velocity.y * deltaSeconds;\n            hunter.position.x += this.getMinMove(dx, preyPos.x, hunterPos.x);\n            hunter.position.y += this.getMinMove(dy, preyPos.y, hunterPos.y);\n        }\n        return this;\n    }\n    /**\n   * Get the minimum movement to go from targetValue to currentValue.\n   * @param {number} maxMovement - maximum movement. NB. In this context, max ignores sign.\n   * @param {number} targetValue\n   * @param {number} currentValue\n   */ getMinMove(maxMovement, targetValue, currentValue) {\n        const requiredMovement = targetValue - currentValue;\n        if (Math.sign(maxMovement) < 0) return Math.max(maxMovement, requiredMovement);\n        else return Math.min(maxMovement, requiredMovement);\n    }\n}\nclass $6b87500f649b76df$export$c14f425b03c3e261 extends (0, $f8eb19ad944a8e76$export$f929ba4d0b405b8b) {\n    /** @type {Point[]} */ #path;\n    /** @type {number} */ #index;\n    /** @type {module:utils/geometry~Point} */ #targetPoint;\n    /** @type {VariableSpeed} */ #variableSpeed;\n    /**\n   *\n   * @param {Object} options\n   * @param {Point[]} options.path\n   * @param {number} options.speed - pixels / second\n   * @param {boolean} options.linear - if linear the speed is constant, otherwise it speeds up if further away\n   * @param {AbstractModifier} decoratedModifier\n   */ constructor(options, decoratedModifier){\n        super(decoratedModifier);\n        this.#path = options.path;\n        this.#index = 0;\n        this.#targetPoint = options.path[0];\n        this.#variableSpeed = new $6b87500f649b76df$var$VariableSpeed(options.speed, options.linear);\n    }\n    /**\n   * Update the sprite to track the hunter.\n   * @param {module:utils/sprites/sprite~Sprite} subject\n   * @param {*} deltaSeconds\n   * @returns {AbstractModifier}\n   */ doUpdate(subject, deltaSeconds) {\n        const subjectPos = subject.position;\n        const approachSpeed = this.#variableSpeed.getSpeedBetweenPoints(this.#targetPoint, subjectPos);\n        const angle = subjectPos.getCartesianAngleTo(this.#targetPoint);\n        subject.velocity.x = approachSpeed * Math.cos(angle);\n        subject.velocity.y = approachSpeed * Math.sin(angle);\n        const dx = subject.velocity.x * deltaSeconds;\n        const dy = subject.velocity.y * deltaSeconds;\n        subjectPos.x += this.getMinMove(dx, this.#targetPoint.x, subjectPos.x);\n        subjectPos.y += this.getMinMove(dy, this.#targetPoint.y, subjectPos.y);\n        if (subjectPos.isCoincident(this.#targetPoint)) {\n            if (++this.#index >= this.#path.length) {\n                subject.velocity.x = 0;\n                subject.velocity.y = 0;\n                return this.decoratedModifier; // Remove itself from chain\n            } else this.#targetPoint = this.#path[this.#index];\n        }\n        return this;\n    }\n    /**\n   * Get the minimum movement to go from targetValue to currentValue.\n   * @param {number} maxMovement - maximum movement. NB. In this context, max ignores sign.\n   * @param {number} targetValue\n   * @param {number} currentValue\n   */ getMinMove(maxMovement, targetValue, currentValue) {\n        const requiredMovement = targetValue - currentValue;\n        if (Math.sign(maxMovement) < 0) return Math.max(maxMovement, requiredMovement);\n        else return Math.min(maxMovement, requiredMovement);\n    }\n}\nfunction $6b87500f649b76df$export$6ade622442e46b50(actor, position) {\n    const pathModifier = new $6b87500f649b76df$export$c14f425b03c3e261({\n        path: [\n            position\n        ],\n        speed: 100\n    }, actor.sprite.modifier);\n    return pathModifier.applyAsTransientToSprite(actor.sprite);\n}\n\n\n\n\n\n/**\n * Create a transient sprite\n * @param {module:utils/sprites/spriteRenderers~SpriteCanvasRenderer} renderer\n * @param {Object} options\n * @param {Point} options.position\n * @param {Velocity} options.velocity\n * @param {number} options.delaySecs\n * @param {number} options.lifetimeSecs\n */ function $ae446a5a8f069dac$var$createFadingSprite(renderer, options) {\n    const sprite = new (0, $5b82fcc8e5572650$export$3075603db8e6204c)({\n        renderer: renderer\n    });\n    sprite.position = options.position;\n    sprite.velocity = options.velocity ?? new (0, $90999bd6b14cd690$export$4a23b3811cef465)(0, 0, 0);\n    sprite.acceleration = options.acceleration ?? new (0, $90999bd6b14cd690$export$5086e02bc6b47824)(0, 0, 0);\n    (0, $f8633d94d0c88c58$export$2e2bcd8739ae039).addPassiveSprite(sprite);\n    new (0, $cf74d2982f28ade3$export$709baf898a5dceda)(options.delaySecs, options.lifetimeSecs, new (0, $6b87500f649b76df$export$9600794ac1f85e81)()).applyAsTransientToSprite(sprite, 20).then(()=>(0, $f8633d94d0c88c58$export$2e2bcd8739ae039).removePassiveSprite(sprite));\n}\nfunction $ae446a5a8f069dac$export$5b6dfdcdc3ef8663(image, options) {\n    $ae446a5a8f069dac$var$createFadingSprite(new (0, $f1adbd10d5a753d6$export$c1626e6e036a584)((0, $a1820c190f7a8b2e$export$2e2bcd8739ae039).getContext2D(), image), options);\n}\nfunction $ae446a5a8f069dac$export$ae52c687d6df348d(imageRootName, options) {\n    const image = new (0, $7f41e47310ae6543$export$9d5734c725768403)({\n        prefix: imageRootName,\n        suffix: \".png\",\n        startIndex: 0,\n        padding: 2\n    }, {\n        framePeriodMs: 300,\n        loopMethod: (0, $af167e06ffca879a$export$cab6ba75b045ad71).REVERSE\n    });\n    $ae446a5a8f069dac$var$createFadingSprite(new (0, $f1adbd10d5a753d6$export$c1626e6e036a584)((0, $a1820c190f7a8b2e$export$2e2bcd8739ae039).getContext2D(), image), options);\n}\nfunction $ae446a5a8f069dac$export$dc0b517182376fca(text, options) {\n    $ae446a5a8f069dac$var$createFadingSprite(new (0, $f1adbd10d5a753d6$export$544ff2c168abc0f9)((0, $a1820c190f7a8b2e$export$2e2bcd8739ae039).getContext2D(), text, {\n        color: options.color\n    }), options);\n}\n\n\n\n\n\n/**\n * @file Dialogs for use in the game\n *\n * @module utils/dom/ui\n */ /**\n * License {@link https://opensource.org/license/mit/|MIT}\n *\n * Copyright 2024 Steve Butler (henspace.com).\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the “Software”), to deal in\n * the Software without restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n * Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */ \n/**\n * @file Classes for managing menus.\n *\n * @module utils/dom/menu\n */ /**\n * License {@link https://opensource.org/license/mit/|MIT}\n *\n * Copyright 2024 Steve Butler (henspace.com).\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the “Software”), to deal in\n * the Software without restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n * Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */ \n/**\n * @file Game constants\n *\n * @module gameutils/gameConstants\n */ /**\n * License {@link https://opensource.org/license/mit/|MIT}\n *\n * Copyright 2024 Steve Butler (henspace.com).\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the “Software”), to deal in\n * the Software without restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n * Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */ const $e49c2c8387e6101d$var$GameConstants = {\n    TILE_SIZE: 48\n};\nvar $e49c2c8387e6101d$export$2e2bcd8739ae039 = $e49c2c8387e6101d$var$GameConstants;\n\n\n/**\n * @file Settings\n *\n * @module utils/settings\n */ /**\n * License {@link https://opensource.org/license/mit/|MIT}\n *\n * Copyright 2024 Steve Butler (henspace.com).\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the “Software”), to deal in\n * the Software without restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n * Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */ \n/** Encapsulate storage. */ class $3474d2bbacd35b48$var$PersistentData {\n    /**\n   * Cached objects so they don't need to be reparsed.\n   * @type {Map<string, *>}\n   */ #cache;\n    /**\n   * Create persistent data object.\n   */ constructor(){\n        this.#cache = new Map();\n    }\n    /**\n   * Set value\n   * @param {string} key\n   * @param {*} value\n   */ set(key, value) {\n        this.#cache.set(key, value);\n        try {\n            localStorage.setItem(key, JSON.stringify(value));\n        } catch (error) {\n            (0, $2d5b4e7cb639ebe1$export$2e2bcd8739ae039).error(`Cannot save setting. ${error.message}`);\n        }\n    }\n    /**\n   * Get a value. Uses the cache if already set.\n   * @param {string} key\n   * @param {*} defaultValue\n   * @returns {*} stored data or default value if not present or unparsable.\n   */ get(key, defaultValue) {\n        if (this.#cache.has(key)) return this.#cache.get(key);\n        let value = defaultValue;\n        try {\n            const encodedValue = localStorage.getItem(key);\n            if (encodedValue !== null) value = JSON.parse(encodedValue);\n        } catch (error) {\n            (0, $2d5b4e7cb639ebe1$export$2e2bcd8739ae039).error(`Cannot parse value from local storage. ${error.message}`);\n        }\n        this.#cache.set(key, value);\n        return value;\n    }\n}\nconst $3474d2bbacd35b48$var$PERSISTENT_DATA = new $3474d2bbacd35b48$var$PersistentData();\nvar $3474d2bbacd35b48$export$2e2bcd8739ae039 = $3474d2bbacd35b48$var$PERSISTENT_DATA;\n\n\n/**\n * Base control\n */ class $de9cad813c8cf1e8$var$BaseControl {\n    /**\n   * @type {string}\n   */ #id;\n    /**\n   * @type {Element}\n   */ _element;\n    /** @type {*} */ #value;\n    /** @type {boolean} */ #persistent;\n    /** @type {boolean} */ closes;\n    /**\n   * Create base control\n   * @param {Object} options\n   * @param {boolean} options.persistent - is data stored in persistent storage.\n   * @param {*} options.defValue - default value\n   * @param {boolean} options.closes - flag to indicate whether this control should be used\n   * to close a dialog or form when clicked.\n   */ constructor(options){\n        if (options.closes && options.action) throw new Error(`Attempt made to create control that is set to close forms and perform and action. These are mutually exclusive.`);\n        if (options.persistent && !options.id) throw new Error(\"Persistent controls must have an ID set in the options.\");\n        this.#id = options.id;\n        this.#persistent = options.persistent;\n        if (options.persistent) this.#value = (0, $3474d2bbacd35b48$export$2e2bcd8739ae039).get(this.#id, options.defValue);\n        else this.#value = options.defValue;\n        this.closes = options.closes;\n        this.listeners = 0;\n    }\n    /**\n   * Get the underlying element\n   * @returns {Element}\n   */ get element() {\n        return this._element;\n    }\n    /**\n   *\n   * @returns {*}\n   */ get value() {\n        return this.#value;\n    }\n    /**\n   * Set the value.\n   * @param {*} value\n   */ set value(value) {\n        if (value === this.#value) return;\n        if (this.#persistent) (0, $3474d2bbacd35b48$export$2e2bcd8739ae039).set(this.#id, value);\n        this.#value = value;\n    }\n}\nclass $de9cad813c8cf1e8$export$3e9165d18613c27e extends $de9cad813c8cf1e8$var$BaseControl {\n    /** Create the button.\n   * @param {Object} options - see BaseControl plus\n   * @param {string} options.label\n   * @param {function():Promise} options.action - function called on click.\n   */ constructor(options){\n        super(options);\n        this._element = this.buildElement(options);\n        if (options.action) this._element.addEventListener(\"click\", ()=>options.action());\n    }\n    /**\n   * @param {Object} options - see Constructor.\n   * @returns {Element}\n   */ buildElement(options) {\n        const element = document.createElement(\"button\");\n        element.appendChild(document.createTextNode(options.label));\n        element.className = \"text-button\";\n        return element;\n    }\n}\nclass $de9cad813c8cf1e8$export$5519a977876d156d extends $de9cad813c8cf1e8$var$BaseControl {\n    /** Create the button.\n   * @param {Object} options - see BaseControl. Plus\n   * @param {string} options.leftLabel\n   * @param {string} options.rightLabel\n   * @param {function():Promise} options.action - function called on click.\n   * @param {string} imageName\n   */ constructor(options){\n        super(options);\n        this._element = this.buildElement(options);\n        if (options.action) this._element.addEventListener(\"click\", ()=>options.action());\n    }\n    /**\n   * @param {Object} options - see Constructor.\n   * @returns {Element}\n   */ buildElement(options) {\n        const element = document.createElement(\"button\");\n        if (options.leftLabel) element.appendChild(document.createTextNode(options.leftLabel));\n        element.appendChild($de9cad813c8cf1e8$export$f119f65a5d88757e(options.imageName, \"button-icon\"));\n        if (options.rightLabel) element.appendChild(document.createTextNode(options.rightLabel));\n        element.className = \"icon-button\";\n        return element;\n    }\n}\nfunction $de9cad813c8cf1e8$export$f119f65a5d88757e(imageName, className) {\n    const bitmapImage = (0, $5840285c35321464$export$2e2bcd8739ae039).getSpriteBitmap(imageName ?? \"undefined.png\", {\n        fallback: \"undefined.png\"\n    });\n    const canvas = document.createElement(\"canvas\");\n    canvas.setAttribute(\"width\", (0, $e49c2c8387e6101d$export$2e2bcd8739ae039).TILE_SIZE);\n    canvas.setAttribute(\"height\", (0, $e49c2c8387e6101d$export$2e2bcd8739ae039).TILE_SIZE);\n    const context = canvas.getContext(\"2d\");\n    context.clearRect(0, 0, (0, $e49c2c8387e6101d$export$2e2bcd8739ae039).TILE_SIZE, (0, $e49c2c8387e6101d$export$2e2bcd8739ae039).TILE_SIZE);\n    context.drawImage(bitmapImage.image, 0.5 * ((0, $e49c2c8387e6101d$export$2e2bcd8739ae039).TILE_SIZE - bitmapImage.width), 0.5 * ((0, $e49c2c8387e6101d$export$2e2bcd8739ae039).TILE_SIZE - bitmapImage.height));\n    canvas.className = className;\n    return canvas;\n}\n/**\n * Create a checkbox control\n */ class $de9cad813c8cf1e8$var$CheckboxControl extends $de9cad813c8cf1e8$var$BaseControl {\n    /** @type {Element} */ #checkbox;\n    /**\n   * Create the CheckboxControl\n   * @param {ControlDefinition} options - see Base control plus\n   * @param {string} options.label\n   */ constructor(options){\n        super(options);\n        this._element = this.buildElement(options.label);\n        this.#checkbox.checked = this.value;\n        this._element.addEventListener(\"change\", (event)=>{\n            this.value = this.#checkbox.checked;\n            if (options.onChange) options.onChange(this.value);\n        });\n    }\n    /**\n   * Build the element\n   * @param {string} label\n   * @returns {Element}\n   */ buildElement(label) {\n        const checkboxContainer = document.createElement(\"span\");\n        checkboxContainer.className = \"styled-checkbox\";\n        this.#checkbox = document.createElement(\"input\");\n        this.#checkbox.setAttribute(\"type\", \"checkbox\");\n        checkboxContainer.appendChild(this.#checkbox);\n        checkboxContainer.appendChild($de9cad813c8cf1e8$export$f119f65a5d88757e(\"ui-checkbox00.png\", \"unchecked\"));\n        checkboxContainer.appendChild($de9cad813c8cf1e8$export$f119f65a5d88757e(\"ui-checkbox01.png\", \"checked\"));\n        const element = document.createElement(\"label\");\n        element.appendChild(document.createTextNode(label));\n        element.appendChild(checkboxContainer);\n        return element;\n    }\n}\nclass $de9cad813c8cf1e8$export$432a14a187a97cae extends $de9cad813c8cf1e8$var$BaseControl {\n    /** @type {Element} */ #rangeInput;\n    /**\n   * Create the RangeControl\n   * @param {ControlDefinition} options - see BaseControl plus\n   * @param {string} options.label\n   */ constructor(options){\n        super(options);\n        this._element = this.buildElement(options.label);\n        this.#rangeInput.value = this.value;\n        this._element.addEventListener(\"change\", (event)=>{\n            this.value = this.#rangeInput.value;\n            if (options.onChange) options.onChange(this.value);\n        });\n    }\n    /**\n   * Build the element\n   * @param {string} label\n   * @returns {Element}\n   */ buildElement(label) {\n        const rangeContainer = document.createElement(\"span\");\n        rangeContainer.className = \"styled-range\";\n        this.#rangeInput = document.createElement(\"input\");\n        this.#rangeInput.setAttribute(\"type\", \"range\");\n        rangeContainer.appendChild(this.#rangeInput);\n        const element = document.createElement(\"label\");\n        element.appendChild(document.createTextNode(label));\n        element.appendChild(rangeContainer);\n        return element;\n    }\n}\nconst $de9cad813c8cf1e8$export$82f9c7d14b0424b = {\n    TEXT_BUTTON: \"text button\",\n    CHECKBOX: \"checkbox\",\n    RANGE: \"range\"\n};\nfunction $de9cad813c8cf1e8$export$b42320c90cd2b176(definition) {\n    let control;\n    switch(definition.controlType){\n        case $de9cad813c8cf1e8$export$82f9c7d14b0424b.CHECKBOX:\n            control = new $de9cad813c8cf1e8$var$CheckboxControl(definition);\n            break;\n        case $de9cad813c8cf1e8$export$82f9c7d14b0424b.RANGE:\n            control = new $de9cad813c8cf1e8$export$432a14a187a97cae(definition);\n            break;\n        case $de9cad813c8cf1e8$export$82f9c7d14b0424b.TEXT_BUTTON:\n            control = new $de9cad813c8cf1e8$export$3e9165d18613c27e(definition);\n            break;\n        default:\n            throw new Error(`Attempt to create unrecognised control type ${definition.controlType}`);\n    }\n    return control;\n}\nfunction $de9cad813c8cf1e8$export$c8a8987d4410bf2d(tagName, options = {}) {\n    const element = document.createElement(tagName);\n    if (options.className) element.className = options.className;\n    if (options.html) element.innerHTML = options.html;\n    else if (options.text) element.innerText = options.text;\n    if (options.child) element.appendChild(options.child);\n    return element;\n}\nfunction $de9cad813c8cf1e8$export$1abdc5ba4f551d38(labels) {\n    const bar = $de9cad813c8cf1e8$export$c8a8987d4410bf2d(\"div\", {\n        className: \"button-bar\"\n    });\n    labels.forEach((label)=>{\n        const button = $de9cad813c8cf1e8$export$c8a8987d4410bf2d(\"button\", {\n            text: label\n        });\n    });\n    return bar;\n}\n\n\n/**\n * @file Message manager. Wrapper for all ui messages.\n *\n * @module utils/messageManager\n */ /**\n * license {@link https://opensource.org/license/mit/|MIT}\n * Copyright 2024 Steve Butler (henspace.com).\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the “Software”), to deal in\n * the Software without restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n * Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */ \n/**\n * @type{Map<string, string}\n */ let $2a5626561236b7e1$var$messages;\n/**\n * Add text to the messages.\n * @param {Map<string, string>} messageMap\n */ function $2a5626561236b7e1$var$setMap(messageMap) {\n    $2a5626561236b7e1$var$messages = messageMap;\n}\n/**\n * Get a message based on the key.\n * If the value is an array, a random element from the array is chosen.\n * This is to allow variable messages.\n * @param {string} key\n */ function $2a5626561236b7e1$var$getText(key) {\n    const value = $2a5626561236b7e1$var$messages.get(key);\n    if (value === undefined || value === null) return key;\n    if (Array.isArray(value)) return value[$05d58a132d6b5767$export$b141de964f0a90c1(0, value.length)];\n    return value;\n}\nfunction $2a5626561236b7e1$export$a7357cdd1f0b0168(strs, ...values) {\n    let result = \"\";\n    let key;\n    for (const str of strs){\n        const trimmed = str.trim();\n        if (trimmed !== \"\") {\n            key = trimmed;\n            break;\n        }\n    }\n    if (!key) return values ? values.join(\" \") : \"\";\n    result = $2a5626561236b7e1$var$getText(key);\n    values.forEach((value, index)=>{\n        const placeHolder = `\\${${index}}`;\n        result = result.replace(placeHolder, value);\n    });\n    return result;\n}\nconst $2a5626561236b7e1$export$af7faffe10421f14 = {\n    setMap: $2a5626561236b7e1$var$setMap,\n    getText: $2a5626561236b7e1$var$getText\n};\n\n\n/** @type {function} */ let $81dd6b24526c5347$var$preDialogFunction;\n/** @type {function} */ let $81dd6b24526c5347$var$postDialogFunction;\nconst $81dd6b24526c5347$export$c2043c90d147849d = {\n    OK: 0,\n    CANCEL: 1,\n    YES: 2,\n    NO: 3\n};\n/**\n * Called when a dialog is opened.\n */ function $81dd6b24526c5347$var$prepareDialog() {\n    if ($81dd6b24526c5347$var$preDialogFunction) $81dd6b24526c5347$var$preDialogFunction();\n}\n/**\n * Called when a dialog is closed.\n */ function $81dd6b24526c5347$var$tearDownDialog() {\n    if ($81dd6b24526c5347$var$postDialogFunction) $81dd6b24526c5347$var$postDialogFunction();\n}\n/**\n * Set up function to be called whenever dialog is opened.\n * @param {function} fn\n */ function $81dd6b24526c5347$var$setPreDialogFunction(fn) {\n    $81dd6b24526c5347$var$preDialogFunction = fn;\n}\n/**\n * Set up function to be called whenever dialog is opened.\n * @param {function} fn\n */ function $81dd6b24526c5347$var$setPostDialogFunction(fn) {\n    $81dd6b24526c5347$var$postDialogFunction = fn;\n}\n/**\n * Wrapper for SCREEN.displayOnGlass but calling tearDownDialog at end.\n * @param {HTMLElement} element\n * @param {Object} options\n * @param {Closers[]} options.closers - array of Closers. If not provided then the entire display\n * is used.\n * @param {string} options.className\n * @param {boolean} options.replace - replace current glass\n * @returns {Promise} fulfils to closers.closes value\n */ function $81dd6b24526c5347$var$displayOnGlass(element, options) {\n    return (0, $a1820c190f7a8b2e$export$2e2bcd8739ae039).displayOnGlass(element, options).then((response)=>{\n        $81dd6b24526c5347$var$tearDownDialog();\n        return response;\n    });\n}\n/**\n * Get a message element. This returns a div which contains the message text.\n * @param {string} message\n */ function $81dd6b24526c5347$var$createMessageElement(message) {\n    const element = $de9cad813c8cf1e8$export$c8a8987d4410bf2d(\"div\", {\n        className: \"dialog-scroll-content\"\n    });\n    element.innerText = message;\n    element.classList.add([\n        \"scrollable\"\n    ]);\n    return element;\n}\n/** Create a message that is removed on any click. This sits above everything\n * as a self contained popup.\n * @param {string} message - message for the message manager.\n */ function $81dd6b24526c5347$var$showMessage(message) {\n    const popup = document.createElement(\"div\");\n    popup.appendChild(document.createTextNode(message));\n    popup.className = \"popup\";\n    popup.style.opacity = 1;\n    document.body.appendChild(popup);\n    popup.addEventListener(\"click\", ()=>popup.remove());\n}\n/** Create an okDialog.\n * @param {string} message\n * @param {Object} options\n * @param {string} [options.okButtonLabel = 'BUTTON OK']\n * @param {string} options.className\n * @returns {Promise} fulfils to DialogResponse.OK\n */ function $81dd6b24526c5347$var$showOkDialog(message, options) {\n    $81dd6b24526c5347$var$prepareDialog();\n    const container = document.createElement(\"div\");\n    container.appendChild($81dd6b24526c5347$var$createMessageElement(message));\n    const buttonEl = document.createElement(\"button\");\n    buttonEl.appendChild(document.createTextNode(options?.okButtonLabel ?? (0, $2a5626561236b7e1$export$a7357cdd1f0b0168)`BUTTON OK`));\n    container.appendChild(buttonEl);\n    return $81dd6b24526c5347$var$displayOnGlass(container, {\n        className: options?.className,\n        closers: [\n            {\n                element: buttonEl,\n                closes: $81dd6b24526c5347$export$c2043c90d147849d.OK\n            }\n        ]\n    });\n}\n/**\n * Create a choice dialog.\n * @param {string} title\n * @param {string | Element} message\n * @param {string[]} choices - labels for buttons.\n * @returns {number} index of selected button.\n */ function $81dd6b24526c5347$var$showChoiceDialog(title, message, choices) {\n    const container = document.createElement(\"div\");\n    if (title) container.appendChild($de9cad813c8cf1e8$export$c8a8987d4410bf2d(\"p\", {\n        className: \"dialog-title\",\n        text: title\n    }));\n    container.appendChild($de9cad813c8cf1e8$export$c8a8987d4410bf2d(\"p\", {\n        text: message\n    }));\n    const actionButtons = [];\n    choices?.forEach((choice, index)=>{\n        const button = new $de9cad813c8cf1e8$export$3e9165d18613c27e({\n            label: choice,\n            closes: index\n        });\n        actionButtons.push(button);\n    });\n    return $81dd6b24526c5347$var$showControlsDialog(message, {\n        preamble: title,\n        actionButtons: actionButtons,\n        row: true\n    });\n}\n/** Create an ok Dialog but just showing raw html.\n * @param {string} title\n * @param {Element} element\n * @param {string} [okButtonLabel = 'BUTTON OK']\n * @param {string} className\n * @returns {Promise} fulfils to DialogResponse.OK\n */ function $81dd6b24526c5347$var$showElementOkDialog(title, element, okButtonLabel = (0, $2a5626561236b7e1$export$a7357cdd1f0b0168)`BUTTON OK`, className) {\n    $81dd6b24526c5347$var$prepareDialog();\n    const container = document.createElement(\"div\");\n    const scrollContainer = $de9cad813c8cf1e8$export$c8a8987d4410bf2d(\"div\", {\n        className: \"dialog-scroll-content\"\n    });\n    container.appendChild(scrollContainer);\n    if (title) scrollContainer.appendChild($de9cad813c8cf1e8$export$c8a8987d4410bf2d(\"p\", {\n        className: \"dialog-title\",\n        text: title\n    }));\n    scrollContainer.appendChild(element);\n    const buttonEl = document.createElement(\"button\");\n    buttonEl.appendChild(document.createTextNode(okButtonLabel));\n    container.appendChild(buttonEl);\n    return $81dd6b24526c5347$var$displayOnGlass(container, {\n        closers: [\n            {\n                element: buttonEl,\n                closes: $81dd6b24526c5347$export$c2043c90d147849d.OK\n            }\n        ],\n        className: className\n    });\n}\n/** Create a controls dialog.\n * @param {string | Element} mainContent -message or element to show..\n * @param {Object} options\n * @param {Object} options.title\n * @param {string} options.preamble - text placed before content..\n * @param {BaseControl[]} options.actionButtons\n * @param {boolean} options.row - if true, controls are in a row rather than the\n * default column.\n * @param {string} options.className\n * @param {string} options.okButtonLabel\n * @returns {Promise} fulfils to closures response value or DialogResponse.OK if\n * no closers.\n */ function $81dd6b24526c5347$var$showControlsDialog(mainContent, options = {}) {\n    $81dd6b24526c5347$var$prepareDialog();\n    const container = document.createElement(\"div\");\n    const scrollContainer = $de9cad813c8cf1e8$export$c8a8987d4410bf2d(\"div\", {\n        className: \"dialog-scroll-content\"\n    });\n    container.appendChild(scrollContainer);\n    if (options.title) scrollContainer.appendChild($de9cad813c8cf1e8$export$c8a8987d4410bf2d(\"p\", {\n        className: \"dialog-title\",\n        text: options.title\n    }));\n    if (options.preamble) scrollContainer.appendChild($de9cad813c8cf1e8$export$c8a8987d4410bf2d(\"p\", {\n        text: options.preamble\n    }));\n    if (mainContent instanceof Element) scrollContainer.appendChild(mainContent);\n    else scrollContainer.appendChild($81dd6b24526c5347$var$createMessageElement(mainContent));\n    const actionButtons = $de9cad813c8cf1e8$export$c8a8987d4410bf2d(\"div\", {\n        className: options.row ? \"action-buttons-row\" : \"action-buttons-col\"\n    });\n    container.appendChild(actionButtons);\n    const closers = [];\n    options?.actionButtons?.forEach((button)=>{\n        if (!button.element.parentElement) actionButtons.appendChild(button.element);\n        if (button.closes !== null && button.closes !== undefined) closers.push({\n            element: button.element,\n            closes: button.closes\n        });\n    });\n    if (closers.length === 0) {\n        const okButton = new $de9cad813c8cf1e8$export$3e9165d18613c27e({\n            id: $81dd6b24526c5347$export$c2043c90d147849d.OK,\n            label: options.okButtonLabel ?? (0, $2a5626561236b7e1$export$a7357cdd1f0b0168)`BUTTON OK`\n        });\n        actionButtons.appendChild(okButton.element);\n        closers.push(okButton);\n    }\n    return $81dd6b24526c5347$var$displayOnGlass(container, {\n        closers: closers,\n        className: options?.className\n    });\n}\n/**\n * The UI singleton.\n */ const $81dd6b24526c5347$var$UI = {\n    setPreDialogFunction: $81dd6b24526c5347$var$setPreDialogFunction,\n    setPostDialogFunction: $81dd6b24526c5347$var$setPostDialogFunction,\n    showChoiceDialog: $81dd6b24526c5347$var$showChoiceDialog,\n    showMessage: $81dd6b24526c5347$var$showMessage,\n    showOkDialog: $81dd6b24526c5347$var$showOkDialog,\n    showElementOkDialog: $81dd6b24526c5347$var$showElementOkDialog,\n    showControlsDialog: $81dd6b24526c5347$var$showControlsDialog\n};\nvar $81dd6b24526c5347$export$2e2bcd8739ae039 = $81dd6b24526c5347$var$UI;\n\n\n/**\n * @file Sound manager\n *\n * @module utils/soundManager\n */ /**\n * license {@link https://opensource.org/license/mit/|MIT}\n * Copyright 2024 Steve Butler (henspace.com).\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the “Software”), to deal in\n * the Software without restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n * Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */ \n/**\n * Sound manager\n */ class $4d3fcc3866f168b9$var$SoundManager {\n    /** @type {Map<string, Audio>} */ #effects;\n    /** @type {Audio} */ #music;\n    /** @type {number} */ #musicVolume;\n    /** @type {number} */ #effectsVolume;\n    /**\n   * Construct.\n   */ constructor(){\n        this.#musicVolume = 0.5;\n        this.#effectsVolume = 0.5;\n        this.#effects = new Map();\n    }\n    /**\n   * Load and play music.\n   * @param {string} path - path to music\n   */ loadAndPlayMusic(path) {\n        if (this.#music) throw new Error(\"Only one music track currently supported.\");\n        this.#music = this.#createAudioIfNotNull(path);\n        if (this.#music) this.#music.addEventListener(\"canplay\", (event)=>{\n            this.#music.volume = this.#musicVolume;\n            this.#music.loop = true;\n            this.#music.play();\n            window.addEventListener(\"blur\", ()=>{\n                this.#music.pause();\n            });\n            window.addEventListener(\"focus\", ()=>{\n                this.#music.play();\n            });\n        });\n    }\n    /**\n   * Load the audio sounds.\n   * @param {Map<string, string>} audioPaths\n   * @returns {Promise} fulfils to undefined when all sounds are ready.\n   */ loadEffects(audioPaths) {\n        const promises = [];\n        audioPaths.forEach((path, key)=>{\n            const promise = new Promise((resolve)=>{\n                const audio = this.#createAudioIfNotNull(path);\n                if (audio) audio.addEventListener(\"canplay\", (event)=>{\n                    this.#effects.set(key, audio);\n                    resolve();\n                });\n            });\n            promises.push(promise);\n        });\n        return Promise.all(promises);\n    }\n    /**\n   * Load the audio if not null\n   * @param {string} url\n   * @returns {Audio} new audio object or null if url is null.\n   */ #createAudioIfNotNull(url) {\n        return url ? new Audio(url) : null;\n    }\n    /**\n   * Play an effect.\n   */ playEffect(key) {\n        const effect = this.#effects.get(key);\n        if (effect) {\n            effect.volume = this.#effectsVolume;\n            effect.play();\n        }\n    }\n    /**\n   * Set the music volume.\n   * @param {number} percent\n   */ setMusicVolumePercent(percent) {\n        this.#musicVolume = percent / 100;\n        if (this.#music) this.#music.volume = this.#musicVolume;\n    }\n    /**\n   * Set the music volume.\n   * @param {number} percent\n   */ setEffectsVolumePercent(percent) {\n        this.#effectsVolume = percent / 100;\n    }\n}\nconst $4d3fcc3866f168b9$var$SOUND_MANAGER = new $4d3fcc3866f168b9$var$SoundManager();\nvar $4d3fcc3866f168b9$export$2e2bcd8739ae039 = $4d3fcc3866f168b9$var$SOUND_MANAGER;\n\n\n/**\n * @file Dialogs to show details of actors.\n *\n * @module dialogs/actorDialogs\n */ /**\n * license {@link https://opensource.org/license/mit/|MIT}\n * Copyright 2024 Steve Butler (henspace.com).\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the “Software”), to deal in\n * the Software without restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n * Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */ \n\n\n/**\n * @file Artefacts\n * Artefacts are items that exist in the game but are never rendered in the\n * tile map. They can be stored, or worn. Examples are money and weapons. They can\n * be held by actors, typically a trader or hiddenArtefact.\n * @module players/artefacts\n */ /**\n * license {@link https://opensource.org/license/mit/|MIT}\n * Copyright 2024 Steve Butler (henspace.com).\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the “Software”), to deal in\n * the Software without restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n * Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */ \n\n/**\n * @file Coins\n *\n * @module game/coins\n */ /**\n * license {@link https://opensource.org/license/mit/|MIT}\n * Copyright 2024 Steve Butler (henspace.com).\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the “Software”), to deal in\n * the Software without restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n * Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */ \nconst $8cbfa63134b289e1$var$COIN_REGEX = /^ *(\\d+(?:\\.\\d*)?) *([a-zA-Z]+) *$/;\nconst $8cbfa63134b289e1$var$EXCHANGE_RATE_TO_GOLD = new Map([\n    [\n        \"PP\",\n        10\n    ],\n    [\n        \"GP\",\n        1\n    ],\n    [\n        \"SP\",\n        0.1\n    ],\n    [\n        \"CP\",\n        0.01\n    ]\n]);\nfunction $8cbfa63134b289e1$export$b0d0adc40593e6c1(coinDefn) {\n    let valueFace = 0;\n    let valueGp = 0;\n    const parts = coinDefn.match($8cbfa63134b289e1$var$COIN_REGEX);\n    if (!parts) {\n        (0, $2d5b4e7cb639ebe1$export$2e2bcd8739ae039).error(`Unrecognised coin \"${coinDefn}\". Value set to zero.`);\n        return {\n            valueFace: 0,\n            valueGp: 0,\n            type: \"GP\"\n        };\n    } else {\n        valueFace = parts[1];\n        const exchangeRate = $8cbfa63134b289e1$var$EXCHANGE_RATE_TO_GOLD.get(parts[2]) ?? 0;\n        valueGp = parseFloat(parts[1]) * exchangeRate;\n    }\n    return {\n        valueFace: valueFace,\n        valueGp: valueGp,\n        type: parts[2]\n    };\n}\nfunction $8cbfa63134b289e1$export$51c187ac2e2bbbe8(coinDefn) {\n    return $8cbfa63134b289e1$export$b0d0adc40593e6c1(coinDefn).valueGp;\n}\nfunction $8cbfa63134b289e1$export$ea0330bb743bb1f5(coinDefn, coinType) {\n    const gp = $8cbfa63134b289e1$export$51c187ac2e2bbbe8(coinDefn);\n    const exchangeRate = $8cbfa63134b289e1$var$EXCHANGE_RATE_TO_GOLD.get(coinType);\n    if (exchangeRate) {\n        const value = gp / exchangeRate;\n        return `${value.toFixed(2)} ${coinType}`;\n    }\n    return `0 ${coinType}`; // worthless in this currency\n}\nfunction $8cbfa63134b289e1$export$1df1004f151c8ed5(gp) {\n    return `${gp.toFixed(2)} GP`;\n}\nfunction $8cbfa63134b289e1$export$c3ea19e5141a48b4(gp) {\n    return `${gp.toFixed(2)}\\u{00A0}GP`;\n}\n\n\n\n/**\n * @file Dungeon and dragons properties\n *\n * @module dnd/traits\n */ /**\n * License {@link https://opensource.org/license/mit/|MIT}\n *\n * Copyright 2024 Steve Butler (henspace.com).\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the “Software”), to deal in\n * the Software without restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n * Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */ \n\n/**\n * @file Simulation of dice\n *\n * @module utils/dice\n */ /**\n * License {@link https://opensource.org/license/mit/|MIT}\n *\n * Copyright 2024 Steve Butler (henspace.com).\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the “Software”), to deal in\n * the Software without restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n * Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */ \n\nconst $d9f2d68cf2746c78$var$MULTIDICE_REGEX = /(\\d+)[dD](\\d+)(?: *\\+ *(\\d+))?/;\nfunction $d9f2d68cf2746c78$export$b9d1fef74bbc4c0c(sides = 6) {\n    return $05d58a132d6b5767$export$75c671db1a13cf5f(1, sides);\n}\nfunction $d9f2d68cf2746c78$export$1ca6b1641ccbf456(str) {\n    return $d9f2d68cf2746c78$var$MULTIDICE_REGEX.test(str);\n}\nfunction $d9f2d68cf2746c78$export$7fa777a3b7eeb6e3(dice) {\n    if (!dice) return 1;\n    if (Number.isInteger(dice)) return $d9f2d68cf2746c78$export$b9d1fef74bbc4c0c(dice);\n    const details = $d9f2d68cf2746c78$export$39e91293370042d8(dice);\n    if (!details) {\n        (0, $2d5b4e7cb639ebe1$export$2e2bcd8739ae039).error(`String ${dice} not recognised as a dice roll. Defaulting to 1D1.`);\n        return 1;\n    }\n    let result = 0;\n    for(let roll = 0; roll < details.qty; roll++)result += $d9f2d68cf2746c78$export$b9d1fef74bbc4c0c(parseInt(details.sides)) + details.offset;\n    return result;\n}\nfunction $d9f2d68cf2746c78$export$9ceb90c5f924ec24(dice) {\n    const details = $d9f2d68cf2746c78$export$39e91293370042d8(dice);\n    if (!details) return 1;\n    return details.qty * (details.sides + details.offset);\n}\nfunction $d9f2d68cf2746c78$export$f93f53a0782fdb15(diceA, diceB) {\n    return $d9f2d68cf2746c78$export$9ceb90c5f924ec24(diceA) > $d9f2d68cf2746c78$export$9ceb90c5f924ec24(diceB) ? diceA : diceB;\n}\nfunction $d9f2d68cf2746c78$export$4f1346faf378181a(dice, delta) {\n    const details = $d9f2d68cf2746c78$export$39e91293370042d8(dice);\n    if (!details) return dice;\n    details.qty = Math.max(details.qty + delta, 0);\n    return $d9f2d68cf2746c78$export$6b42f955a363be6b(details);\n}\nfunction $d9f2d68cf2746c78$export$39e91293370042d8(dice) {\n    const match = dice.match($d9f2d68cf2746c78$var$MULTIDICE_REGEX);\n    if (!match) {\n        (0, $2d5b4e7cb639ebe1$export$2e2bcd8739ae039).error(`Invalid dice format: ${dice}`);\n        return null;\n    }\n    const qty = parseInt(match[1]);\n    const sides = parseInt(match[2]);\n    const offset = match[3] ? parseInt(match[3]) : 0;\n    return {\n        qty: qty,\n        sides: sides,\n        offset: offset\n    };\n}\nfunction $d9f2d68cf2746c78$export$6b42f955a363be6b(details) {\n    if (details.offset) return `${details.qty}D${details.sides}+${details.offset}`;\n    else return `${details.qty}D${details.sides}`;\n}\n\n\n/**\n * @file Tables for DND\n *\n * @module dnd/tables\n */ /**\n * license {@link https://opensource.org/license/mit/|MIT}\n * Copyright 2024 Steve Butler (henspace.com).\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the “Software”), to deal in\n * the Software without restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n * Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */ \nconst $68307718ba6b750c$var$CHALLENGE_XP_TABLE = [\n    10,\n    200,\n    450,\n    700,\n    1100,\n    1800,\n    2300,\n    2900,\n    3900,\n    5000,\n    5900,\n    7200,\n    8400,\n    10000,\n    11500,\n    13000,\n    15000,\n    18000,\n    20000,\n    22000,\n    25000,\n    33000,\n    41000,\n    50000,\n    62000,\n    75000,\n    90000,\n    105000,\n    120000,\n    135000,\n    155000\n];\n/** advancement table. NB. this is zero based whereas level is 1 based. */ const $68307718ba6b750c$var$ADVANCEMENT_TABLE = [\n    {\n        exp: 0,\n        profBonus: 2\n    },\n    {\n        exp: 300,\n        profBonus: 2\n    },\n    {\n        exp: 900,\n        profBonus: 2\n    },\n    {\n        exp: 2700,\n        profBonus: 2\n    },\n    {\n        exp: 6500,\n        profBonus: 3\n    },\n    {\n        exp: 14000,\n        profBonus: 3\n    },\n    {\n        exp: 23000,\n        profBonus: 3\n    },\n    {\n        exp: 34000,\n        profBonus: 3\n    },\n    {\n        exp: 48000,\n        profBonus: 4\n    },\n    {\n        exp: 64000,\n        profBonus: 4\n    },\n    {\n        exp: 85000,\n        profBonus: 4\n    },\n    {\n        exp: 100000,\n        profBonus: 4\n    },\n    {\n        exp: 120000,\n        profBonus: 5\n    },\n    {\n        exp: 140000,\n        profBonus: 5\n    },\n    {\n        exp: 165000,\n        profBonus: 5\n    },\n    {\n        exp: 195000,\n        profBonus: 5\n    },\n    {\n        exp: 225000,\n        profBonus: 6\n    },\n    {\n        exp: 265000,\n        profBonus: 6\n    },\n    {\n        exp: 305000,\n        profBonus: 6\n    },\n    {\n        exp: 355000,\n        profBonus: 6\n    }\n];\nfunction $68307718ba6b750c$export$90c939a9a04bf7bb(cr) {\n    let crValue = $05d58a132d6b5767$export$437ba3be5ce2ff51(cr);\n    if (crValue < 0.124) return 10;\n    else if (crValue < 0.249) return 25;\n    else if (crValue < 0.499) return 50;\n    else if (crValue < 0.999) return 100;\n    crValue = Math.min($68307718ba6b750c$var$CHALLENGE_XP_TABLE.length - 1, parseInt(crValue));\n    return $68307718ba6b750c$var$CHALLENGE_XP_TABLE[crValue];\n}\nfunction $68307718ba6b750c$export$42351fd14ab8bd87(exp) {\n    const expValue = $05d58a132d6b5767$export$d6c5c82e8e696750(exp, 0);\n    let level = 0;\n    let index = 0;\n    do {\n        const next = $68307718ba6b750c$var$ADVANCEMENT_TABLE[index++];\n        if (expValue >= next.exp) level = index;\n        else break;\n    }while (index < $68307718ba6b750c$var$ADVANCEMENT_TABLE.length);\n    return {\n        level: level,\n        profBonus: $68307718ba6b750c$var$ADVANCEMENT_TABLE[level - 1].profBonus\n    };\n}\nfunction $68307718ba6b750c$export$deaf172d6f4715c6(level) {\n    level = Math.min(level, $68307718ba6b750c$var$ADVANCEMENT_TABLE.length);\n    level--; // array is zero based.\n    if (level < 0) return $68307718ba6b750c$var$ADVANCEMENT_TABLE[0].exp;\n    return $68307718ba6b750c$var$ADVANCEMENT_TABLE[level].exp;\n}\n\n\n/**\n * @file Various utilities for handling arrays\n *\n * @module utils/arrays/arrayManip\n */ /**\n * License {@link https://opensource.org/license/mit/|MIT}\n *\n * Copyright 2024 Steve Butler\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the “Software”), to deal in\n * the Software without restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n * Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */ /**\n * @typedef Surrounds\n * @property {*} centre - value at centre\n * @property {*} tl - value to top left\n * @property {*} above - value above\n * @property {*} tr - value to top right\n * @property {*} right - value to right\n * @property {*} br - value to bottom right\n * @property {*} below - value below\n * @property {*} bl - value to bottom\n * @property {*} left - value to left\n */ /**\n * Get the surround values from a 2D matrix\n * @param {Array.<Array.<*>>} matrix\n * @param {number} rowIndex\n * @param {number} columnIndex\n * @returns {Surrounds}\n */ function $27af28d7e434b74b$export$7c548b14ef6e7713(matrix, rowIndex, columnIndex) {\n    return {\n        centre: matrix[rowIndex]?.[columnIndex],\n        tl: matrix[rowIndex - 1]?.[columnIndex - 1],\n        above: matrix[rowIndex - 1]?.[columnIndex],\n        tr: matrix[rowIndex - 1]?.[columnIndex + 1],\n        right: matrix[rowIndex]?.[columnIndex + 1],\n        br: matrix[rowIndex + 1]?.[columnIndex + 1],\n        below: matrix[rowIndex + 1]?.[columnIndex],\n        bl: matrix[rowIndex + 1]?.[columnIndex - 1],\n        left: matrix[rowIndex]?.[columnIndex - 1]\n    };\n}\nfunction $27af28d7e434b74b$export$49e2f27690cc6008(matrix, options) {\n    const centreX = options.columnIndex;\n    const centreY = options.rowIndex;\n    const result = [];\n    let lookNorth = true;\n    let lookEast = true;\n    let lookSouth = true;\n    let lookWest = true;\n    let offset = 1;\n    let member;\n    let distance = options.distance ?? 1;\n    while(distance-- > 0){\n        if (lookWest) {\n            member = matrix[centreY][centreX - offset];\n            if (options.filter && !options.filter(member)) lookWest = false;\n            else result.push(member);\n        }\n        if (lookEast) {\n            member = matrix[centreY][centreX + offset];\n            if (options.filter && !options.filter(member)) lookEast = false;\n            else result.push(member);\n        }\n        if (lookNorth) {\n            member = matrix[centreY - offset][centreX];\n            if (options.filter && !options.filter(member)) lookNorth = false;\n            else result.push(member);\n        }\n        if (lookSouth) {\n            member = matrix[centreY + offset][centreX];\n            if (options.filter && !options.filter(member)) lookSouth = false;\n            else result.push(member);\n        }\n        offset++;\n    }\n    return result;\n}\nfunction $27af28d7e434b74b$export$f3448602f079b6d0(source) {\n    let currentIndex = source.length;\n    let randomIndex;\n    // While there remain elements to shuffle.\n    while(currentIndex > 0){\n        randomIndex = Math.floor(Math.random() * currentIndex);\n        currentIndex--;\n        // swap\n        [source[currentIndex], source[randomIndex]] = [\n            source[randomIndex],\n            source[currentIndex]\n        ];\n    }\n    return source;\n}\n\n\n\n/** Basic ability keys @type {string[]}*/ const $95c3fa23148200d5$var$ABILITY_KEYS = [\n    \"STR\",\n    \"DEX\",\n    \"CON\",\n    \"INT\",\n    \"WIS\",\n    \"CHA\"\n];\nconst $95c3fa23148200d5$var$FEET_PER_TILE = 7.5;\nfunction $95c3fa23148200d5$export$1a1308ca8502831f(value) {\n    return Math.floor((value - 10) / 2);\n}\n/** Apply dexterity modifier to an item to get its AC value */ function $95c3fa23148200d5$var$getAcUsingDexterity(item, dexterity) {\n    const modifier = $95c3fa23148200d5$export$1a1308ca8502831f(dexterity);\n    const armourType = item.traits.get(\"TYPE\", \"\").toLowerCase();\n    const armourClass = item.traits.getInt(\"AC\", 0);\n    if (armourType.includes(\"HEAVY\")) return armourClass;\n    else if (armourType.includes(\"MEDIUM\")) return armourClass + Math.min(2, modifier);\n    else return armourClass + modifier;\n}\nclass $95c3fa23148200d5$export$6aedcecc644e4b96 {\n    /** @type {string} */ damageDice;\n    /** @type {number} */ proficiencyBonus;\n    /** @type {number} */ abilityModifier;\n    /** @type {boolean} */ twoWeaponFighting;\n    /** @type {boolean} */ isSecondAttack;\n    /** @type {boolean} */ unarmed;\n    /**\n   *\n   * @param {Artefact} weapon\n   * @param {Object} options\n   * @param {string} options.damageDice\n   * @param {string} options.weaponType - UNARMED makes this an unarmed strike.\n   * @param {number} options.proficiencyBonus\n   * @param {number} options.abilityModifier\n   * @param {boolean} options.secondAttack - true if this is a second attack\n   */ constructor(options){\n        this.damageDice = options.damageDice ?? \"1D1\";\n        const subType = options.weaponType ?? \"\";\n        if (subType === \"UNARMED\") {\n            this.unarmed = true;\n            this.twoWeaponFighting = false;\n        } else if (subType.includes(\"SIMPLE\") && subType.includes(\"LIGHT\")) this.twoWeaponFighting = true;\n        else this.twoWeaponFighting = false;\n        this.proficiencyBonus = options?.proficiencyBonus ?? 0;\n        this.abilityModifier = options?.abilityModifier ?? 0;\n        this.isSecondAttack = options.secondAttack;\n    }\n    /**\n   * Get unarmed damage.\n   * @returns {number}\n   */ #getUnarmedDamage() {\n        return 1 + this.abilityModifier; // ability modifier is the same as strength for melee\n    }\n    /**\n   * Get maximum possible damage from this weapon ignoring the ability modifier\n   * which applies to all weapons equally.\n   * @returns {number}\n   */ getMaxDamage() {\n        if (this.unarmed) return this.#getUnarmedDamage();\n        else return $d9f2d68cf2746c78$export$9ceb90c5f924ec24(this.damageDice) + this.proficiencyBonus;\n    }\n    /**\n   * Roll for attack.\n   * @returns {number}\n   */ rollForAttack() {\n        return $d9f2d68cf2746c78$export$b9d1fef74bbc4c0c(20) + this.abilityModifier + this.proficiencyBonus;\n    }\n    /**\n   * Roll for damage.\n   * @returns {number}\n   */ rollForDamage() {\n        if (this.unarmed) return this.#getUnarmedDamage();\n        let modifier;\n        if (this.isSecondAttack && this.abilityModifier > 0) modifier = 0;\n        else modifier = this.abilityModifier;\n        return $d9f2d68cf2746c78$export$7fa777a3b7eeb6e3(this.damageDice) + modifier;\n    }\n    /**\n   * Clone\n   * @returns {AttackDetail}\n   */ clone() {\n        const attackDetail = new $95c3fa23148200d5$export$6aedcecc644e4b96({});\n        attackDetail.abilityModifier = this.abilityModifier;\n        attackDetail.damageDice = this.damageDice;\n        attackDetail.isSecondAttack = this.isSecondAttack;\n        attackDetail.proficiencyBonus = this.proficiencyBonus;\n        attackDetail.twoWeaponFighting = this.twoWeaponFighting;\n        attackDetail.unarmed = this.unarmed;\n        return attackDetail;\n    }\n}\nclass $95c3fa23148200d5$export$f0f803f528a8d270 {\n    /** Characteristics @type {Map<string, *>} */ _traits;\n    /**\n   * Initialise the traits.\n   * @param {Map<string, *> | string} initialValues\n   */ constructor(initialValues){\n        if (typeof initialValues === \"string\") {\n            this._traits = new Map();\n            this.#setFromString(initialValues);\n        } else this._traits = new Map(initialValues);\n    }\n    /**\n   * Populate the traits from a string definition. The definition comprises a\n   * comma separated list of characteristics with each characteristic comprising\n   * a keyword followed by a space or equals sign and then its value.\n   * Keywords are converted to uppercase.\n   * @param {string} definition\n   * @returns {Traits} returns this to allow chaining.\n   * @throws {Error} if definition invalid.\n   */ #setFromString(definition) {\n        definition.split(\",\").forEach((item)=>{\n            const match = item.match(/^\\s*(\\w+)\\s*[=: ]\\s*(.+?)\\s*$/);\n            if (!match) return;\n            const [key, value] = this.#imposeCase(match[1], match[2]);\n            if (match) this.#setValueFromString(key, value.trim());\n            else throw new Error(`Invalid property definition'${item}'`);\n        });\n        this._compositeAc = this.getInt(\"AC\", 0);\n        return this;\n    }\n    /**\n   * @param {string} key\n   * @param {*} value\n   * @throws {Error} thrown if key invalid.\n   */ set(key, value) {\n        this._traits.set(key, value);\n        this._refreshDerivedValues(key);\n    }\n    /**\n   * Get the trait value. This will look first for the key and then the key\n   * preceded by an underscore.\n   * @param {string} key\n   * @param {*} defValue - default value;\n   * @returns {*}\n   */ get(key, defValue) {\n        return this._traits.get(key) ?? this._traits.get(\"_\" + key) ?? defValue;\n    }\n    /**\n   * Refresh derived values.\n   * This is expected to be overridden.\n   * @param {string} key - key that was updated and triggered refresh.\n   */ _refreshDerivedValues(updatedKeyUnused) {}\n    /**\n   * Get the trait value as an int. This will look first for the key and then the key\n   * preceded by an underscore.\n   * @param {string} key\n   * @param {*} defValue - default value;\n   * @returns {number}\n   */ getInt(key, defValue) {\n        const result = this.get(key, defValue);\n        return $05d58a132d6b5767$export$d6c5c82e8e696750(result, defValue);\n    }\n    /**\n   * Take a value normally entered in feet and convert to tiles.\n   * @param {string} key\n   * @param {number} defValue - default if not found.\n   * @returns {number} results rounded to nearest int.\n   */ getValueInFeetInTiles(key, defValue) {\n        const valueInFeet = this.getInt(key);\n        if (valueInFeet === null || valueInFeet === undefined) return defValue;\n        return Math.round(valueInFeet / $95c3fa23148200d5$var$FEET_PER_TILE);\n    }\n    /**\n   * Get the trait value as an float. This will look first for the key and then the key\n   * preceded by an underscore.\n   * @param {string} key\n   * @param {*} defValue - default value;\n   * @returns {number}\n   */ getFloat(key, defValue) {\n        const result = this.get(key, defValue);\n        return $05d58a132d6b5767$export$437ba3be5ce2ff51(result, defValue);\n    }\n    /**\n   * Get the trait value as a modifier int. This will look first for the key and then the key\n   * preceded by an underscore.\n   * @param {string} key\n   * @param {*} defValue - default value;\n   * @returns {number}\n   */ getAsModifier(key, defValue) {\n        const value = this.getInt(key);\n        if (value === null || value === undefined) return defValue;\n        return $95c3fa23148200d5$export$1a1308ca8502831f(value);\n    }\n    /**\n   * Adjust case to uppercase unless an excluded characteristic. Most values are\n   * converted to uppercase with a few exceptions.\n   * @param {string} key\n   * @param {string} value\n   * @returns {string[]]} first element has the adjusted key and the second the value.\n   */ #imposeCase(key, value) {\n        key = key.toUpperCase();\n        if (key !== \"NAME\") value = value.toUpperCase();\n        return [\n            key,\n            value\n        ];\n    }\n    /**\n   * Set the trait for key to value. This is for a value passed in by the\n   * #setValueFromString method.\n   * + If the value comprises two numbers separated by\n   * a /, the value for the key is set to the numerator and a new key key_MAX is created,\n   * set to the denominator.\n   * + If the value comprises two numbers separated by a >, the value for the key\n   * is set to a random value between (inclusive) the two values, and a new key key_MAX is created,set to the second number.\n   * @param {string} key\n   * @param {string} value\n   */ #setValueFromString(key, value) {\n        switch(key){\n            case \"PROF\":\n                return this.#setProficienciesFromString(key, value);\n            case \"VALUE\":\n                return this.#setCostValueFromString(key, value);\n            case \"DMG\":\n                return this.#setIntOrDiceValueFromString(key, value);\n            case \"HIT_DICE\":\n                return this.#setDiceValueFromString(key, value);\n            default:\n                return this.#setGenericValueFromString(key, value);\n        }\n    }\n    /**\n   * Set the trait for key to value. This is for a value passed in by the\n   * #setValueFromString method.\n   * + If the value comprises two numbers separated by\n   * a /, the value for the key is set to the numerator and a new key key_MAX is created,\n   * set to the denominator.\n   * + If the value comprises two numbers separated by a >, the value for the key\n   * is set to a random value between (inclusive) the two values, and a new key key_MAX is created,set to the second number.\n   * @param {string} key\n   * @param {string} value\n   */ #setCostValueFromString(key, value) {\n        const match = value.match(/^(.*)([a-zA-Z]{2})$/);\n        if (!match) {\n            (0, $2d5b4e7cb639ebe1$export$2e2bcd8739ae039).error(`Invalid value for VALUE trait: ${value}`);\n            value = \"0 GP\";\n        } else {\n            const diceDefn = match[1].trim();\n            let faceValue;\n            if ($d9f2d68cf2746c78$export$1ca6b1641ccbf456(diceDefn)) faceValue = $d9f2d68cf2746c78$export$7fa777a3b7eeb6e3(diceDefn);\n            else faceValue = $05d58a132d6b5767$export$d6c5c82e8e696750(match[1], 0);\n            value = `${faceValue} ${match[2]}`;\n        }\n        this.set(key, value);\n    }\n    /**\n   * Set the trait for key to value. This is for a value passed in by the\n   * #setValueFromString method. The dice is not rolled but stored as is.\n   * @param {string} key\n   * @param {string} value\n   */ #setDiceValueFromString(key, value) {\n        if (!$d9f2d68cf2746c78$export$1ca6b1641ccbf456(value)) {\n            (0, $2d5b4e7cb639ebe1$export$2e2bcd8739ae039).error(`Invalid trait value ${value} for ${key}. Dice definition required.`);\n            value = \"1D6\";\n        }\n        this.set(key, value);\n    }\n    /**\n   * Set the trait for key to value. This is for a value passed in by the\n   * #setValueFromString method.\n   * If the value is a multidice, it is rolled and the resulting value used.\n   * @param {string} key\n   * @param {string} value\n   */ #setIntOrDiceValueFromString(key, value) {\n        if (!$d9f2d68cf2746c78$export$1ca6b1641ccbf456(value) && isNaN(parseInt(value))) {\n            (0, $2d5b4e7cb639ebe1$export$2e2bcd8739ae039).error(`Invalid trait value ${value} for ${key}. Integer or dice definition required.`);\n            value = \"0\";\n        }\n        this.set(key, value);\n    }\n    /**\n   * Set the trait for key to value. This is for a value passed in by the\n   * #setValueFromString method.\n   * If the value is a multidice, it is rolled and the resulting value used.\n   * @param {string} key\n   * @param {string} value\n   */ #setGenericValueFromString(key, value) {\n        if ($d9f2d68cf2746c78$export$1ca6b1641ccbf456(value) && key !== \"DMG\") value = $d9f2d68cf2746c78$export$7fa777a3b7eeb6e3(value); // Note DMG is stored as dice definition as it is rolled on demand.\n        this.set(key, value);\n    }\n    /**\n   * Set proficiencies.\n   * @param {string} key\n   * @param {string} value - ids of items in which the user is proficient. Items\n   * are separated by &.\n   */ #setProficienciesFromString(key, value) {\n        const items = value.split(/\\s*&\\s*/);\n        const proficiencies = [];\n        items.forEach((item)=>proficiencies.push(item.toUpperCase()));\n        this._traits.set(\"PROF\", proficiencies);\n    }\n    /**\n   * Clone traits.\n   * @return {Traits}\n   */ clone() {\n        return new $95c3fa23148200d5$export$f0f803f528a8d270(this._traits);\n    }\n    /**\n   * Get all traits. This is a copy of the underlying traits.\n   * @returns {Map<string, *>}\n   */ getAllTraits() {\n        return new Map([\n            ...this._traits.entries()\n        ]);\n    }\n    /**\n   * Get all traits. This is a copy of the underlying traits sorted by key name.\n   * @returns {Map<string, *>}\n   */ getAllTraitsSorted() {\n        return new Map([\n            ...this._traits.entries()\n        ].sort());\n    }\n    /**\n   * Get all trait values as a string\n   */ valuesToString() {\n        let result = \"\";\n        this._traits.forEach((value, key)=>{\n            if (result !== \"\") result += \",\";\n            result += `${key}:${value}`;\n        });\n        return result;\n    }\n}\nclass $95c3fa23148200d5$export$57c6a82d5c690092 extends $95c3fa23148200d5$export$f0f803f528a8d270 {\n    /**\n   *\n   * @param {Map<string, *>} initialTraits\n   */ constructor(initialTraits){\n        super(initialTraits ?? new Map());\n    }\n    /**\n   * Get the damage dice when cast by an actor.\n   * @param {module:players/actors~Actor} actor\n   * @returns {string}\n   */ getDamageDiceWhenCastBy(actor) {\n        let damageDice = this._traits.get(\"DMG\");\n        let adjustedDice = $d9f2d68cf2746c78$export$4f1346faf378181a(damageDice, actor.traits.getCharacterLevel() - 1);\n        (0, $2d5b4e7cb639ebe1$export$2e2bcd8739ae039).info(`Spell cast: base damage dice = ${damageDice} raised to ${adjustedDice} for level.`);\n        return adjustedDice;\n    }\n}\nclass $95c3fa23148200d5$export$939a756f171fd090 extends $95c3fa23148200d5$export$f0f803f528a8d270 {\n    // Derived traits.\n    /** @type {number} */ _compositeAc;\n    /** @type {number} */ _proficiencyBonus;\n    /** @type {number} */ _level;\n    /** @type {AttackDetail[]} */ _attacks;\n    /** @type {Artefact[]} */ _equippedWeapons;\n    /** @type {Artefact[]} */ _equippedArmour;\n    /**\n   *\n   * @param {Map<string, *>} initialTraits\n   */ constructor(initialTraits){\n        super(initialTraits ?? new Map([\n            [\n                \"NAME\",\n                \"mystery\"\n            ]\n        ]));\n        this._proficiencyBonus = 0;\n        this.#setInitialAbilityScores($95c3fa23148200d5$var$ABILITY_KEYS);\n        this.#initialiseHitPoints();\n        this._refreshDerivedValues();\n    }\n    /**\n   * Clone traits.\n   * @return {Traits}\n   */ clone() {\n        const actorTraits = super.clone();\n        actorTraits._compositeAc = this._compositeAc;\n        actorTraits._proficiencyBonus = this._proficiencyBonus;\n        actorTraits._level = this._level;\n        actorTraits._attacks = this._attacks.map((attack)=>attack.clone());\n        actorTraits._equippedWeapons = this._equippedWeapons; // reference okay\n        actorTraits._equippedArmour = this._equippedArmour; // reference okay\n        return actorTraits;\n    }\n    /**\n   * Calculate the ability scores unless already set.\n   * @param {string[]} keys\n   */ #setInitialAbilityScores(keys) {\n        const values = $27af28d7e434b74b$export$f3448602f079b6d0([\n            15,\n            14,\n            13,\n            12,\n            10,\n            8\n        ]);\n        let valueIndex = 0;\n        keys.forEach((key)=>{\n            if (!this.get(key)) {\n                const value = values[valueIndex++] ?? 8;\n                this.set(key, value);\n            }\n        });\n    }\n    /**\n   * Initialise the hit points unless already set.\n   * This is calculated as the maximum hit dice roll + the constitution modifier.\n   */ #initialiseHitPoints() {\n        const alreadyHasHp = this._traits.has(\"HP\");\n        const alreadyHasHpMax = this._traits.has(\"HP_MAX\");\n        if (alreadyHasHp && alreadyHasHpMax) return;\n        const hitDice = this.get(\"HIT_DICE\");\n        if (hitDice) {\n            const con = this.getInt(\"CON\", 0);\n            const conMod = $95c3fa23148200d5$export$1a1308ca8502831f(con);\n            if (!alreadyHasHpMax) this.set(\"HP_MAX\", $d9f2d68cf2746c78$export$9ceb90c5f924ec24(hitDice) + conMod);\n            if (!alreadyHasHp) this.set(\"HP\", $d9f2d68cf2746c78$export$9ceb90c5f924ec24(hitDice) + conMod);\n        } else if (alreadyHasHp) this.set(\"HP_MAX\", this.get(\"HP\"));\n    }\n    /**\n   * Get the effective armour class;\n   * @returns {number}\n   */ getEffectiveAc() {\n        return this._compositeAc;\n    }\n    /**\n   * Get the effective armour class;\n   * @returns {number}\n   */ getCharacterLevel() {\n        return this._level;\n    }\n    /** Get the save ability modifier for an attack by the attacker.\n   * This is not applicable to melee attacks.\n   *\n   */ getNonMeleeSaveAbilityModifier(attacker) {\n        const saveAbility = attacker.traits.get(\"SAVE_ABILITY\");\n        if (!saveAbility) {\n            (0, $2d5b4e7cb639ebe1$export$2e2bcd8739ae039).error(`Non-melee ${attacker.id} has no SAVE_ABILITY set.`);\n            return 0;\n        }\n        const ability = this.getInt(saveAbility);\n        return $95c3fa23148200d5$export$1a1308ca8502831f(ability ?? 0);\n    }\n    /**\n   * Get the proficiency bonus;\n   * @param {module:players/Artefact} artefact\n   * @returns {number}\n   */ getCharacterPb(artefact) {\n        return this.isProficient(artefact) ? this._proficiencyBonus : 0;\n    }\n    /**\n   * Get attacks.\n   * @returns {AttackDetail[]}\n   */ getAttacks() {\n        return this._attacks;\n    }\n    /**\n   * Update derived values for new artefacts.\n   * @param {Artefact[]} artefacts\n   */ utiliseArtefacts(artefacts) {\n        this._equippedWeapons = artefacts.filter((artefact)=>artefact.artefactType === (0, $c8439a0aab365384$export$e451727f06f039f2).WEAPON);\n        this._equippedArmour = artefacts.filter((artefact)=>artefact.artefactType === (0, $c8439a0aab365384$export$e451727f06f039f2).ARMOUR);\n        this._refreshDerivedValues();\n    }\n    /**\n   * @override\n   * Refresh all derived values.\n   * @param {string} updatedKey\n   */ _refreshDerivedValues(updatedKey) {\n        if (!updatedKey || $95c3fa23148200d5$var$ABILITY_KEYS.includes(updatedKey)) {\n            this._setLevelAndProfBonusFromExp();\n            this._utiliseWeapons(this._equippedWeapons);\n            this._utiliseArmour(this._equippedArmour);\n        }\n    }\n    /**\n   * Armour weapons. The armour classes are combined.\n   * @param {Artefact[]} armour\n   */ _utiliseArmour(armour) {\n        let armourClass = this.getInt(\"AC\", 0); // character's base AC\n        if (!armour || armour.length === 0) {\n            this._compositeAc = armourClass;\n            return;\n        }\n        let dexterity = this.getInt(\"DEX\", 1);\n        let additionalArmourClass = 0;\n        let shieldArmourClass = 0;\n        for (const item of armour)switch(item.artefactType){\n            case (0, $c8439a0aab365384$export$e451727f06f039f2).ARMOUR:\n                {\n                    const acTrait = item.traits.get(\"AC\", 0);\n                    const acValue = $95c3fa23148200d5$var$getAcUsingDexterity(item, dexterity);\n                    if (acTrait.startsWith(\"+\")) additionalArmourClass += acValue;\n                    else if (acValue > armourClass) armourClass = acValue;\n                }\n                break;\n            case (0, $c8439a0aab365384$export$e451727f06f039f2).SHIELD:\n                // only one shield ever used.\n                shieldArmourClass = Math.max(shieldArmourClass, item.traits.getInt(\"AC\", 0));\n                break;\n        }\n        this._compositeAc = armourClass + additionalArmourClass + shieldArmourClass;\n    }\n    /**  */ /**\n   * Utilise weapons. The best option for equipped weapons is automatically selected\n   * to give the maximum chance of damage. Up to two weapons are supported.\n   * @param {Artefact[]} [weapons = []]\n   */ _utiliseWeapons(weapons = []) {\n        this._attacks = [];\n        const strength = this.getInt(\"STR\", 1);\n        const abilityModifier = $95c3fa23148200d5$export$1a1308ca8502831f(strength);\n        if (weapons.length > 2) (0, $2d5b4e7cb639ebe1$export$2e2bcd8739ae039).error(`Unexpected number of equipped weapons. Expected 2; received ${weapons.length}`);\n        let firstAttack;\n        let weaponType;\n        let damageDice;\n        let proficient;\n        if (weapons.length === 0) {\n            damageDice = \"\";\n            weaponType = \"UNARMED\";\n            proficient = true;\n        } else {\n            damageDice = weapons[0].traits.get(\"DMG\", \"1D1\") ?? \"1D1\";\n            weaponType = weapons[0].traits.get(\"TYPE\") ?? \"\";\n            proficient = this.isProficient(weapons[0]);\n        }\n        firstAttack = new $95c3fa23148200d5$export$6aedcecc644e4b96({\n            damageDice: damageDice,\n            weaponType: weaponType,\n            proficiencyBonus: proficient ? this._proficiencyBonus : 0,\n            abilityModifier: abilityModifier,\n            secondAttack: false\n        });\n        let secondAttack;\n        if (weapons.length > 1) secondAttack = new $95c3fa23148200d5$export$6aedcecc644e4b96({\n            damageDice: weapons[1].traits.get(\"DMG\", \"1D1\") ?? \"1D1\",\n            weaponType: weapons[1].traits.get(\"TYPE\") ?? \"\",\n            proficiencyBonus: this.isProficient(weapons[1]) ? this._proficiencyBonus : 0,\n            abilityModifier: strength,\n            secondAttack: true\n        });\n        if (secondAttack?.twoWeaponFighting && firstAttack.twoWeaponFighting) {\n            this._attacks.push(firstAttack);\n            this._attacks.push(secondAttack);\n        } else if (secondAttack && secondAttack.getMaxDamage() > firstAttack.getMaxDamage()) {\n            secondAttack.isSecondAttack = false;\n            this._attacks.push(secondAttack);\n        } else this._attacks.push(firstAttack);\n    }\n    /**\n   * Set the level and prof bonus. These are calculated from the experience.\n   */ _setLevelAndProfBonusFromExp() {\n        const values = $68307718ba6b750c$export$42351fd14ab8bd87(this._traits.get(\"EXP\"));\n        this._level = values.level;\n        this._proficiencyBonus = values.profBonus;\n    }\n    /**\n   * @typedef {Object} ValueChangeInfo\n   * @property {*} was\n   * @property {*} now\n   */ /**\n   * Increase experience based on challenge rating.\n   * @param {string|number} cr\n   * @returns {{exp: ValueChangeInfo, level: ValueChangeInfo}}\n   */ adjustForDefeatOfActor(defeated) {\n        const challengeRating = defeated.traits.get(\"CR\");\n        const gainedExp = $68307718ba6b750c$export$90c939a9a04bf7bb(challengeRating);\n        const currentExp = this.getInt(\"EXP\", 0);\n        const newExp = currentExp + gainedExp;\n        (0, $2d5b4e7cb639ebe1$export$2e2bcd8739ae039).info(`Experience increased from ${currentExp} to ${newExp}.`);\n        this.set(\"EXP\", newExp);\n        const currentLevel = this._level;\n        this._setLevelAndProfBonusFromExp();\n        const newLevel = this._level;\n        return {\n            exp: {\n                was: currentExp,\n                now: newExp\n            },\n            level: {\n                was: currentLevel,\n                now: newLevel\n            }\n        };\n    }\n    /**\n   * Test if proficient with an item.\n   * The test looks at the artefact's TYPE trait. If it includes one of this trait's\n   * PROF entries, the result is true. This means that a PROF entry of 'melee' would\n   * match 'simple melee' and 'martial melee'.\n   * @param {Artefact} item\n   * @returns {boolean}\n   */ isProficient(artefact) {\n        const proficiencies = this._traits.get(\"PROF\");\n        const artefactSubtype = artefact.traits.get(\"TYPE\");\n        if (!proficiencies || !artefactSubtype) return false;\n        for (const prof of proficiencies){\n            const words = prof.split(\" \");\n            let allWordsIncluded = true;\n            for (const word of words)if (!artefactSubtype.includes(word)) {\n                allWordsIncluded = false;\n                break;\n            }\n            if (allWordsIncluded) return true;\n        }\n        return false;\n    }\n}\nclass $95c3fa23148200d5$export$393871cb127e924 extends $95c3fa23148200d5$export$f0f803f528a8d270 {\n    /**\n   *\n   * @param {Map<string, *>} initialTraits\n   */ constructor(initialTraits){\n        super(initialTraits ?? new Map([\n            [\n                \"NAME\",\n                \"mystery\"\n            ]\n        ]));\n    }\n}\n\n\n/**\n * @file Build artefact\n *\n * @module dnd/almanacs/artefactBuilder\n */ /**\n * license {@link https://opensource.org/license/mit/|MIT}\n * Copyright 2024 Steve Butler (henspace.com).\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the “Software”), to deal in\n * the Software without restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n * Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */ \n\n\n/**\n * Create an artefact.\n * @param {module:dnd/almanacs/almanacActors~AlmanacEntry} almanacEntry\n * @param {string} imageName\n * @param {module:dnd/traits~Traits} traits\n */ function $35cb0fa7cb9f77a0$var$createArtefact(almanacEntry, imageName, traits) {\n    const artefact = new (0, $c8439a0aab365384$export$5612627710242fc2)(almanacEntry, \"\", `${imageName}.png`);\n    artefact.traits = traits;\n    return artefact;\n}\nfunction $35cb0fa7cb9f77a0$export$f71b2f640dbd3eb(almanacEntry, traitsString) {\n    const traitsInitialValues = traitsString ?? almanacEntry.traitsString;\n    let traits;\n    let imageName;\n    if (almanacEntry.type === (0, $c8439a0aab365384$export$e451727f06f039f2).SPELL) {\n        traits = new (0, $95c3fa23148200d5$export$57c6a82d5c690092)(traitsInitialValues);\n        imageName = \"spell\";\n    } else if (almanacEntry.type === (0, $c8439a0aab365384$export$e451727f06f039f2).CANTRIP) {\n        traits = new (0, $95c3fa23148200d5$export$57c6a82d5c690092)(traitsInitialValues);\n        imageName = \"cantrip\";\n    } else {\n        traits = new (0, $95c3fa23148200d5$export$f0f803f528a8d270)(traitsInitialValues);\n        imageName = almanacEntry.imageName;\n    }\n    traits.set(\"NAME\", almanacEntry.name);\n    const artefact = $35cb0fa7cb9f77a0$var$createArtefact(almanacEntry, imageName, traits);\n    artefact.description = almanacEntry.description;\n    if (artefact.isMagic()) artefact.interaction = new (0, $31cf9b99c7a79e42$export$eecad08565115e9c)(artefact);\n    else if (artefact.isConsumable()) artefact.interaction = new (0, $31cf9b99c7a79e42$export$91e310df03ee2deb)(artefact);\n    return artefact;\n}\n\n\n/**\n * @file Almanacs\n *\n * @module dnd/almanacs/almanacs\n */ /**\n * license {@link https://opensource.org/license/mit/|MIT}\n * Copyright 2024 Steve Butler (henspace.com).\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the “Software”), to deal in\n * the Software without restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n * Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */ \n/**\n * @file Utilities for working with almanacs\n *\n * @module dnd/almanacs/almanacUtils\n */ /**\n * license {@link https://opensource.org/license/mit/|MIT}\n * Copyright 2024 Steve Butler (henspace.com).\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the “Software”), to deal in\n * the Software without restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n * Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */ \n\nfunction $191a34beaf268e78$export$9544647517c5db11(idMain = \"?\") {\n    if (idMain.len < 2) return idMain;\n    const name = idMain.replace(/_/g, \" \");\n    const capitalisedName = name.charAt(0).toUpperCase() + name.substring(1);\n    return (0, $2a5626561236b7e1$export$af7faffe10421f14).getText(capitalisedName);\n}\nfunction $191a34beaf268e78$export$83737b3fc54f1416(id) {\n    const messageKey = `DESCRIPTION ${id.toUpperCase()}`;\n    const result = (0, $2a5626561236b7e1$export$af7faffe10421f14).getText(messageKey);\n    if (messageKey === result) {\n        (0, $2d5b4e7cb639ebe1$export$2e2bcd8739ae039).error(`No description set for ${messageKey}.`);\n        return \"\";\n    }\n    return result;\n}\nfunction $191a34beaf268e78$export$7659ebb14ded9371(id = \"?\") {\n    const parts = id.split(\"+\");\n    if (id.len < 2) return id;\n    return {\n        name: $191a34beaf268e78$export$9544647517c5db11(parts[0]),\n        imageName: parts[0].toLowerCase(),\n        description: $191a34beaf268e78$export$83737b3fc54f1416(parts[0])\n    };\n}\n\n\n/**\n * @file Load assets. This module is placed in the assets folder to simplify\n * dynamic imports using Parcel's import.meta.url property.\n *\n * @module utils/assetLoaders.js\n */ /**\n * License {@link https://opensource.org/license/mit/|MIT}\n *\n * Copyright 2024 Steve Butler (henspace.com).\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the “Software”), to deal in\n * the Software without restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n * Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */ \nfunction $5114bd1ce9a158d7$export$fa2f0f26e19d189b(url) {\n    return fetch(url).then((response)=>response.text()).then((text)=>text).catch((reason)=>{\n        (0, $2d5b4e7cb639ebe1$export$2e2bcd8739ae039).error(`Error fetching ${url}: ${reason}`);\n        return null;\n    });\n}\nfunction $5114bd1ce9a158d7$export$942e11b08cbf2222(url) {\n    return fetch(url).then((response)=>response.text()).then((text)=>text).catch((reason)=>{\n        (0, $2d5b4e7cb639ebe1$export$2e2bcd8739ae039).error(`Error fetching ${url}: ${reason}`);\n        return null;\n    });\n}\n\n\n\n\n\n/** Likelihoods of finding items */ const $4d7b11e4136f6d93$var$COMMON_PERCENT = 80;\nconst $4d7b11e4136f6d93$var$UNCOMMON_PERCENT = 25;\nconst $4d7b11e4136f6d93$var$RARE_PERCENT = 5;\nconst $4d7b11e4136f6d93$var$VERY_RARE_PERCENT = 1;\n/** @typedef {string} AlmanacRarityValue */ /**\n * @enum {AlmanacRarityValue}\n */ const $4d7b11e4136f6d93$var$AlmanacRarity = {\n    COMMON: \"COMMON\",\n    UNCOMMON: \"UNCOMMON\",\n    RARE: \"RARE\",\n    VERY_RARE: \"VERY RARE\"\n};\n/**\n * @typedef {Object} AlmanacEntry\n * @property {number} minLevel\n * @property {string} id\n * @property {string} rarity - COMMON, UNCOMMON, RARE, VERY RARE\n * @property {string} imageName\n * @property {string} description\n * @property {string} typeId\n * @property {ArtefactType | ActorType} type\n * @property {string} equipmentIds - comma separated equipment list\n * @property {string} traitsString\n * @property {number} challengeRating - just used for searching the almanac\n */ class $4d7b11e4136f6d93$var$Almanac {\n    /** @type {number} */ static COMMON_CUTOFF = $4d7b11e4136f6d93$var$COMMON_PERCENT / ($4d7b11e4136f6d93$var$COMMON_PERCENT + $4d7b11e4136f6d93$var$UNCOMMON_PERCENT + $4d7b11e4136f6d93$var$RARE_PERCENT + $4d7b11e4136f6d93$var$VERY_RARE_PERCENT);\n    /** @type {number} */ static UNCOMMON_CUTOFF = ($4d7b11e4136f6d93$var$COMMON_PERCENT + $4d7b11e4136f6d93$var$UNCOMMON_PERCENT) / ($4d7b11e4136f6d93$var$COMMON_PERCENT + $4d7b11e4136f6d93$var$UNCOMMON_PERCENT + $4d7b11e4136f6d93$var$RARE_PERCENT + $4d7b11e4136f6d93$var$VERY_RARE_PERCENT);\n    /** @type {number} */ static RARE_CUTOFF = ($4d7b11e4136f6d93$var$COMMON_PERCENT + $4d7b11e4136f6d93$var$UNCOMMON_PERCENT + $4d7b11e4136f6d93$var$RARE_PERCENT) / ($4d7b11e4136f6d93$var$COMMON_PERCENT + $4d7b11e4136f6d93$var$UNCOMMON_PERCENT + $4d7b11e4136f6d93$var$RARE_PERCENT + $4d7b11e4136f6d93$var$VERY_RARE_PERCENT);\n    /** @type {number} */ static VERY_RARE_CUTOFF = 1;\n    /** @type {AlmanacEntry[]} */ common;\n    /** @type {AlmanacEntry[]} */ uncommon;\n    /** @type {AlmanacEntry[]} */ rare;\n    /** @type {AlmanacEntry[]} */ veryRare;\n    /**\n   * Create the almanac\n   */ constructor(){\n        this.common = [];\n        this.uncommon = [];\n        this.rare = [];\n        this.veryRare = [];\n    }\n    /**\n   * Merge almanac with this.\n   * @param {Almanac} almanac\n   */ mergeAlmanac(almanac) {\n        this.common.push(...almanac.common);\n        this.uncommon.push(...almanac.uncommon);\n        this.rare.push(...almanac.rare);\n        this.veryRare.push(...almanac.veryRare);\n    }\n    /** Find first element matching the callback. The search starts with common entries and moves on to\n   * rare.\n   * @param {function(element:AlmanacEntry, index:number, AlmanacEntry[]):truthy} callback\n   * @returns {AlmanacEntry} undefined if not found.\n   */ find(callback) {\n        let result = this.common.find(callback);\n        if (result) return result;\n        result = this.uncommon.find(callback);\n        if (result) return result;\n        result = this.rare.find(callback);\n        if (result) return result;\n        return this.veryRare.find(callback);\n    }\n    /** Create a new almanac filtering the values.\n   * @param {function(element:AlmanacEntry, index:number, AlmanacEntry[]):truthy} filterFn\n   * @returns {Almanac} undefined if not found.\n   */ filter(filterFn) {\n        const almanac = new $4d7b11e4136f6d93$var$Almanac();\n        almanac.common = filterFn ? this.common.filter(filterFn) : [\n            ...this.common\n        ];\n        almanac.uncommon = filterFn ? this.uncommon.filter(filterFn) : [\n            ...this.uncommon\n        ];\n        almanac.rare = filterFn ? this.rare.filter(filterFn) : [\n            ...this.rare\n        ];\n        almanac.veryRare = filterFn ? this.veryRare.filter(filterFn) : [\n            ...this.veryRare\n        ];\n        return almanac;\n    }\n    /**\n   * Get a random entry from the almanac.\n   * @returns {AlmanacEntry}\n   */ getRandomEntry() {\n        const cutoff = Math.random();\n        if (cutoff < $4d7b11e4136f6d93$var$Almanac.COMMON_CUTOFF) return this.getRandomCommonEntry();\n        else if (cutoff < $4d7b11e4136f6d93$var$Almanac.UNCOMMON_CUTOFF) return this.getRandomUncommonEntry();\n        else if (cutoff < $4d7b11e4136f6d93$var$Almanac.RARE_CUTOFF) return this.getRandomRareEntry();\n        else return this.getRandomVeryRareEntry();\n    }\n    /**\n   * Get a random entry from the almanac's common elements.\n   * @returns {AlmanacEntry}\n   */ getRandomCommonEntry() {\n        return $05d58a132d6b5767$export$a885de3766ef0b4c(this.common);\n    }\n    /**\n   * Get a random entry from the almanac's uncommon elements. If there are no\n   * uncommon entries, it falls back to common.\n   * @returns {AlmanacEntry}\n   */ getRandomUncommonEntry() {\n        if (this.uncommon.length === 0) return this.getRandomCommonEntry();\n        else return $05d58a132d6b5767$export$a885de3766ef0b4c(this.uncommon);\n    }\n    /**\n   * Get a random entry from the almanac's rare elements. If there are no\n   * rare entries, it falls back to uncommon.\n   * @returns {AlmanacEntry}\n   */ getRandomRareEntry() {\n        if (this.rare.length === 0) return this.getRandomUncommonEntry();\n        else return $05d58a132d6b5767$export$a885de3766ef0b4c(this.rare);\n    }\n    /**\n   * Get a random entry from the almanac's very rare elements. If there are no\n   * very rare entries, it falls back to rare.\n   * @returns {AlmanacEntry}\n   */ getRandomVeryRareEntry() {\n        if (this.veryRare.length === 0) return this.getRandomRareEntry();\n        else return $05d58a132d6b5767$export$a885de3766ef0b4c(this.veryRare);\n    }\n}\nclass $4d7b11e4136f6d93$var$AlmanacLibrary {\n    /** @type {Map<string, Almanac>} */ #almanacs;\n    constructor(){\n        this.#almanacs = new Map();\n    }\n    /**\n   * Add Almanac\n   * @param {string} key\n   * @param {Almanac} almanac\n   */ addAlmanac(key, almanac) {\n        this.#almanacs.set(key, almanac);\n    }\n    /**\n   * Get Almanac\n   * @param {string} key\n   * @returns {Almanac}\n   */ getAlmanac(key) {\n        const result = this.#almanacs.get(key);\n        if (!result) (0, $2d5b4e7cb639ebe1$export$2e2bcd8739ae039)`Attempt to get non-existent almanac ${key}`;\n        return result;\n    }\n    /**\n   * Get a random entry from the key\n   * @param {string | string[]} keyOrKeys - almanac\n   * @param {function(entry:AlmanacEntry):boolean} filterFn\n   * @returns {AlmanacEntry} null if none found.\n   */ getRandomEntry(keyOrKeys, filterFn) {\n        let key;\n        if (Array.isArray(keyOrKeys)) key = $05d58a132d6b5767$export$a885de3766ef0b4c(keyOrKeys);\n        else key = keyOrKeys;\n        let almanac = this.getAlmanac(key).filter(filterFn);\n        if (almanac) return almanac.getRandomEntry();\n        (0, $2d5b4e7cb639ebe1$export$2e2bcd8739ae039).error(`Failed to find almanac with key ${key}`);\n        return;\n    }\n    /** Find an entry by its id.\n   * @param {string} id\n   * @param {string[]} keys - the almanacs to search\n   * @returns {AlmanacEntry}\n   */ findById(id, keys) {\n        if (!keys) keys = this.#almanacs.keys();\n        for (const key of keys){\n            const result = this.#almanacs.get(key)?.find((entry)=>entry.id === id);\n            if (result) return result;\n        }\n        (0, $2d5b4e7cb639ebe1$export$2e2bcd8739ae039).error(`Failed to find almanac entry for '${id}' in ${keys.join(\", \")}`);\n        return;\n    }\n    /** Create a pool of almanacs as one new almanac.\n   * Only entries who pass the filterFn test, if provided, are returned.\n   * @param {string[]} keys - almanacs to search\n   * @param {function(entry:AlmanacEntry):boolean} filterFn\n   * @returns {Almanac}\n   */ getPooledAlmanac(almanacKeys, filterFn) {\n        const pooledAlmanac = new $4d7b11e4136f6d93$var$Almanac();\n        almanacKeys.forEach((key)=>{\n            const almanac = this.getAlmanac(key).filter(filterFn);\n            pooledAlmanac.mergeAlmanac(almanac);\n        });\n        return pooledAlmanac;\n    }\n    /**\n   *\n   * @param {string} key - almanac key\n   * @param {*} type - entry type\n   * @returns {module:players/artefacts~ArtefactTypeValue | module:players/artefacts~ActorTypeValue }\n   */ getItemType(key, type) {\n        switch(key){\n            case \"HEROES\":\n            case \"ENEMIES\":\n            case \"TRADERS\":\n                return (0, $9e949bc7e910e09d$export$4a19f89b3effac)(type);\n            default:\n                return (0, $c8439a0aab365384$export$6f0824563061af7a)(type);\n        }\n    }\n}\nfunction $4d7b11e4136f6d93$export$1943ae6675bfce8b(line, almanacKey) {\n    const parts = line.match(/^ *(\\d+) *, *(\\w+ ?\\w+) *, *(\\w*) *, *([\\w+]*) *(?:\\[ *([\\w, ]*?)])? *\\*(.*)$/);\n    if (!parts) {\n        (0, $2d5b4e7cb639ebe1$export$2e2bcd8739ae039).error(`Invalid almanac entry ${line}`);\n        return null;\n    }\n    const entry = {};\n    entry.minLevel = parseInt(parts[1]);\n    entry.rarity = parts[2].toUpperCase();\n    entry.typeId = parts[3];\n    entry.type = $4d7b11e4136f6d93$export$62947dea9802b3b0.getItemType(almanacKey, entry.typeId);\n    entry.id = parts[4];\n    const derivedParts = $191a34beaf268e78$export$7659ebb14ded9371(entry.id);\n    entry.name = derivedParts.name;\n    entry.imageName = derivedParts.imageName;\n    entry.description = derivedParts.description;\n    entry.equipmentIds = $4d7b11e4136f6d93$var$csvToArray(parts[5]);\n    entry.traitsString = parts[6];\n    entry.challengeRating = $4d7b11e4136f6d93$var$extractCrValue(entry.traitsString);\n    return entry;\n}\n/**\n * Extract the CR rating as this is used as a filter.\n * @param {string} traits\n */ function $4d7b11e4136f6d93$var$extractCrValue(traits) {\n    const match = traits?.match(/CR *[:=] *([\\d.]+)/);\n    return match ? $05d58a132d6b5767$export$437ba3be5ce2ff51(match[1], 0) : 0;\n}\n/**\n * Parse comma separated list of equipment ids into array.\n * @param {string} list\n * @returns {string[]}\n */ function $4d7b11e4136f6d93$var$csvToArray(list) {\n    return list ? list.trim().split(/\\s*,\\s*/) : list;\n}\n/**\n * Parse text file into almanac\n * @param {string} text\n * @param {string} key - Almanac key\n * @returns {Almanac}\n */ function $4d7b11e4136f6d93$var$parseAlmanacText(text, key) {\n    const almanac = new $4d7b11e4136f6d93$var$Almanac();\n    const lines = text.split(/[\\r\\n]+/);\n    lines.forEach((line)=>{\n        line = line.trim();\n        if (line !== \"\" && !line.startsWith(\"#\")) {\n            const entry = $4d7b11e4136f6d93$export$1943ae6675bfce8b(line, key);\n            if (entry) switch(entry.rarity){\n                case $4d7b11e4136f6d93$var$AlmanacRarity.VERY_RARE:\n                    almanac.veryRare.push(entry);\n                    break;\n                case $4d7b11e4136f6d93$var$AlmanacRarity.RARE:\n                    almanac.rare.push(entry);\n                    break;\n                case $4d7b11e4136f6d93$var$AlmanacRarity.UNCOMMON:\n                    almanac.uncommon.push(entry);\n                    break;\n                case $4d7b11e4136f6d93$var$AlmanacRarity.COMMON:\n                default:\n                    almanac.common.push(entry);\n                    break;\n            }\n        }\n    });\n    return almanac;\n}\nfunction $4d7b11e4136f6d93$export$8775ef33499e3a00(urlMap) {\n    const promises = [];\n    urlMap.forEach((url, key)=>{\n        const promise = $5114bd1ce9a158d7$export$fa2f0f26e19d189b(url).then((text)=>{\n            $4d7b11e4136f6d93$export$62947dea9802b3b0.addAlmanac(key, $4d7b11e4136f6d93$var$parseAlmanacText(text, key));\n        });\n        promises.push(promise);\n    });\n    return Promise.all(promises);\n}\nconst $4d7b11e4136f6d93$export$62947dea9802b3b0 = new $4d7b11e4136f6d93$var$AlmanacLibrary();\n\n\nconst $c8439a0aab365384$export$39337ab5872e9457 = {\n    HEAD: {\n        id: \"HEAD\",\n        space: 1,\n        money: false,\n        spacesExpand: false\n    },\n    BODY: {\n        id: \"BODY\",\n        space: 1,\n        money: false,\n        spacesExpand: false\n    },\n    HANDS: {\n        id: \"HANDS\",\n        space: 2,\n        money: false,\n        spacesExpand: false\n    },\n    FEET: {\n        id: \"FEET\",\n        space: 2,\n        money: false,\n        spacesExpand: false\n    },\n    BACKPACK: {\n        id: \"BACKPACK\",\n        space: 8,\n        money: false,\n        spacesExpand: true\n    },\n    WAGON: {\n        id: \"WAGON\",\n        space: 8,\n        money: false,\n        spacesExpand: true\n    },\n    CANTRIPS: {\n        id: \"CANTRIPS\",\n        space: 999,\n        money: false,\n        spacesExpand: true\n    },\n    SPELLS: {\n        id: \"SPELLS\",\n        space: 9,\n        money: false,\n        spacesExpand: true\n    },\n    PREPARED_SPELLS: {\n        id: \"PREPARED SPELLS\",\n        space: 9,\n        money: false,\n        spacesExpand: true\n    },\n    PURSE: {\n        id: \"PURSE\",\n        space: Number.MAX_SAFE_INTEGER,\n        money: true,\n        spacesExpand: false\n    }\n};\nconst $c8439a0aab365384$export$e451727f06f039f2 = {\n    ARMOUR: {\n        storageSpace: 1,\n        storeType: {\n            stash: $c8439a0aab365384$export$39337ab5872e9457.WAGON,\n            equip: $c8439a0aab365384$export$39337ab5872e9457.BODY\n        }\n    },\n    CONSUMABLE: {\n        storageSpace: 1,\n        storeType: {\n            stash: $c8439a0aab365384$export$39337ab5872e9457.BACKPACK\n        }\n    },\n    CANTRIP: {\n        storageSpace: 1,\n        storeType: {\n            stash: null,\n            equip: $c8439a0aab365384$export$39337ab5872e9457.CANTRIPS\n        }\n    },\n    SPELL: {\n        storageSpace: 1,\n        storeType: {\n            stash: $c8439a0aab365384$export$39337ab5872e9457.SPELLS,\n            equip: $c8439a0aab365384$export$39337ab5872e9457.PREPARED_SPELLS\n        }\n    },\n    WEAPON: {\n        storageSpace: 1,\n        storeType: {\n            stash: $c8439a0aab365384$export$39337ab5872e9457.BACKPACK,\n            equip: $c8439a0aab365384$export$39337ab5872e9457.HANDS\n        }\n    },\n    SHIELD: {\n        storageSpace: 1,\n        storeType: {\n            stash: $c8439a0aab365384$export$39337ab5872e9457.BACKPACK,\n            equip: $c8439a0aab365384$export$39337ab5872e9457.HANDS\n        }\n    },\n    TWO_HANDED_WEAPON: {\n        storageSpace: 2,\n        storeType: {\n            stash: $c8439a0aab365384$export$39337ab5872e9457.BACKPACK,\n            equip: $c8439a0aab365384$export$39337ab5872e9457.HANDS\n        }\n    },\n    HEAD_GEAR: {\n        storageSpace: 1,\n        storeType: {\n            stash: $c8439a0aab365384$export$39337ab5872e9457.BACKPACK,\n            equip: $c8439a0aab365384$export$39337ab5872e9457.HEAD\n        }\n    },\n    COINS: {\n        storageSpace: 0,\n        storeType: {\n            stash: $c8439a0aab365384$export$39337ab5872e9457.PURSE\n        }\n    }\n};\nfunction $c8439a0aab365384$export$6f0824563061af7a(str) {\n    const type = $c8439a0aab365384$export$e451727f06f039f2[str];\n    if (type === null || type === undefined) (0, $2d5b4e7cb639ebe1$export$2e2bcd8739ae039).error(`Unrecognised artefact type: ${str}`);\n    return type;\n}\n/**\n * @interface StoreInterface\n */ /**\n * @function StoreInterface.store\n * @param {Artefact} artefact\n * @returns {boolean} true if stored, else false.\n */ /**\n * @function StoreInterface.retrieve\n * @param {Artefact} artefact\n * @returns {Artefact} the retrieved artefact which is removed from the store.\n */ /**\n * @function StoreInterface.canAdd\n * @param {Artefact} artefact\n * @returns {boolean} true if it can be added.\n */ /**\n * @function StoreInterface.has\n * @param {Artefact} artefact\n * @returns {boolean} true if it has the artefact.\n */ /**\n * @property {StoreType} StoreInterface.storeType\n */ /**\n * @property {string} StoreInterface.storeTypeId\n */ /**\n * Store for artefacts\n * @implements {StoreInterface}\n */ class $c8439a0aab365384$var$ArtefactStore {\n    /** @type {number} */ #maxSize;\n    /** @type {Map<Artefact, Artefact>} */ #artefacts;\n    /** @type {number} */ #usedSpace;\n    /** @type {boolean} */ #spacesExpand;\n    /** @type {StoreType} */ #storeType;\n    /** Create store.\n   * @param {number} maxSize;\n   * @param {boolean} spacesExpand - if true, each space can take an artefact of\n   * any size.\n   */ constructor(maxSize, spacesExpand, storeType){\n        this.#maxSize = maxSize;\n        this.#usedSpace = 0;\n        this.#artefacts = new Map();\n        this.#spacesExpand = spacesExpand;\n        this.#storeType = storeType;\n    }\n    /**\n   * Get store type ID\n   * @returns {string}\n   */ get storeTypeId() {\n        return this.#storeType.id;\n    }\n    /**\n   * Get the store type\n   * @returns {StoreType}\n   */ get storeType() {\n        return this.#storeType;\n    }\n    /**\n   * Get free space\n   * @returns {number}\n   */ get freeSpace() {\n        return this.#maxSize - this.#usedSpace;\n    }\n    /**\n   * Get maximum space\n   * @returns {number}\n   */ get maxSpace() {\n        return this.#maxSize;\n    }\n    /**\n   * Test if empty\n   * @returns {boolean}\n   */ isEmpty() {\n        return this.#usedSpace === 0;\n    }\n    /** Get the space required by an artefact. If #spacesExpand\n   * this is always 1.\n   * @param {Artefact}\n   * @returns {number}\n   */ getRequiredSpace(artefact) {\n        return this.#spacesExpand ? 1 : artefact.storageSpace;\n    }\n    /**\n   * Test if store has artefact.\n   * @param {Artefact} artefact\n   * @returns {boolean}\n   */ has(artefact) {\n        return this.#artefacts.has(artefact);\n    }\n    /**\n   *\n   * @param {Artefact} artefact\n   * @returns {boolean} true if stored; false if no room.\n   */ add(artefact) {\n        const space = this.#maxSize - this.#usedSpace;\n        const requiredSpace = this.getRequiredSpace(artefact);\n        if (space >= requiredSpace) {\n            this.#artefacts.set(artefact, artefact);\n            this.#usedSpace += requiredSpace;\n            return true;\n        }\n        return false;\n    }\n    /**\n   * Retrieve artefact. This removes it from the store.\n   * @param {Artefact} artefact - to retrieve.\n   * @returns {Artefact} null if not found.\n   */ take(artefact) {\n        const storedArtefact = this.#artefacts.get(artefact);\n        const requiredSpace = this.getRequiredSpace(artefact);\n        if (storedArtefact) {\n            this.#usedSpace -= requiredSpace;\n            this.#artefacts.delete(storedArtefact);\n        }\n        return storedArtefact;\n    }\n    /**\n   * Take the first element.\n   * @returns {Artefact} null if empty.\n   */ takeFirst() {\n        if (this.isEmpty()) return null;\n        const firstArtefact = this.#artefacts.values().next().value;\n        return this.take(firstArtefact);\n    }\n    /**\n   * Iterable values in the store.\n   * @returns {Iterable<Artefacts>}\n   */ values() {\n        return this.#artefacts.values();\n    }\n    /**\n   * Test if an artefact can be stored.\n   * @param {Artefact} artefact\n   * @returns {boolean}\n   */ canAdd(artefact) {\n        const requiredSpace = this.getRequiredSpace(artefact);\n        return this.#maxSize - this.#usedSpace >= requiredSpace;\n    }\n}\n/**\n * Gold storage. This effectively merges artifacts into one combining the VALUE trait.\n * Note that if only one artefact is added, it is returned. Once more than one has been\n * added a composite money artefact is returne.\n * @implements {StoreInterface}\n */ class $c8439a0aab365384$var$MoneyStore {\n    /** @type {Artefact} */ #artefact;\n    /** @type {boolean} */ #multipleArtefacts;\n    /** Create store.\n   * @param {number} maxSize;\n   */ constructor(){\n        this.#multipleArtefacts = false;\n    }\n    /**\n   * Get store type\n   * @returns {StoreType}\n   */ get storeType() {\n        return $c8439a0aab365384$export$39337ab5872e9457.PURSE;\n    }\n    /**\n   * Get store type Id\n   * @returns {StoreType}\n   */ get storeTypeId() {\n        return $c8439a0aab365384$export$39337ab5872e9457.PURSE.id;\n    }\n    /**\n   * Test if empty\n   * @override\n   * @returns {boolean}\n   */ isEmpty() {\n        return !this.#artefact || this.#artefact.costInGp === 0;\n    }\n    /**\n   * Test if store has any money.\n   * @override\n   * @param {Artefact} artefact\n   * @returns {boolean}\n   */ has(artefactUnused) {\n        return this.#artefact.costInGp > 0;\n    }\n    /**\n   * The artefact is just used as a carrier for the cost.\n   * @override\n   */ add(artefact) {\n        const costDetails = artefact.costDetails;\n        if (!this.#artefact) {\n            this.#artefact = artefact.clone();\n            return true;\n        }\n        const currentCostDetails = this.#artefact.costDetails;\n        if (!this.#multipleArtefacts) {\n            this.#artefact = $c8439a0aab365384$var$MoneyStore.createGoldCoinArtefact(currentCostDetails.valueGp);\n            this.#multipleArtefacts = true;\n        }\n        this.#artefact.costInGp = currentCostDetails.valueGp + costDetails.valueGp;\n        return true;\n    }\n    /**\n   * Retrieve an artefact.\n   * @param {Artefact} artefact\n   * @returns {Artefact} value set to value of gold taken which may be less\n   * than the requested amount..\n   */ take(artefact) {\n        const taken = Math.min(this.#artefact.costInGp, artefact.costInGp);\n        this.#artefact.costInGp = this.#artefact.costInGp - taken;\n        artefact.costInGp = taken; //may be less than requested.\n        return artefact;\n    }\n    /**\n   * Test if artefact can be added.\n   * @param {Artefact} artefact\n   * @returns {boolean}\n   */ canAdd(artefactUnused) {\n        return true;\n    }\n    /**\n   * Get iterable of values. For the gold store there is only one.\n   * @returns {Iterable<Artefacts>}\n   */ values() {\n        if (!this.#artefact || this.#artefact.costInGp === 0) return [].values();\n        else return [\n            this.#artefact.clone()\n        ].values();\n    }\n    /**\n   * Create a gold coin artefact.\n   * @param {number} gp\n   * @returns {Artefact}\n   */ static createGoldCoinArtefact(gp) {\n        const almanacEntry = (0, $4d7b11e4136f6d93$export$1943ae6675bfce8b)(`0,COMMON,COINS,gold_coins * VALUE:${gp}GP`);\n        const artefact = (0, $35cb0fa7cb9f77a0$export$f71b2f640dbd3eb)(almanacEntry);\n        artefact.costInGp = gp;\n        return artefact;\n    }\n}\nclass $c8439a0aab365384$export$5612627710242fc2 {\n    /** @type {string} */ id;\n    /** @type {string} */ iconImageName;\n    /** @type {string} */ description;\n    /** @type {ArtefactTypeValue} */ artefactType;\n    /** @type {module:dnd/traits/~ArtefactTraits} */ traits;\n    /** @type {AbstractInteraction} */ interaction;\n    /** @type {module:dnd/almanacs/almanacs~AlmanacEntry} */ almanacEntry;\n    /**\n   * Create artefact.\n   * @param {AlmanacEntry} almanacEntry\n   * @param {string} description\n   * @param {string} iconImageName\n   * @param {number} artefactType - artefact enumeration\n   */ constructor(almanacEntry, description, iconImageName){\n        this.id = almanacEntry.id;\n        this.description = description;\n        this.iconImageName = iconImageName;\n        this.artefactType = almanacEntry.type;\n        this.almanacEntry = almanacEntry;\n    }\n    /** Get the cost details.\n   * @returns {module:game/coins~CoinDetails}\n   */ get costDetails() {\n        const coinDefn = this.traits?.get(\"VALUE\");\n        return $8cbfa63134b289e1$export$b0d0adc40593e6c1(coinDefn);\n    }\n    /**\n   * Get the artefact cost in GP;\n   * @returns {number}\n   */ get costInGp() {\n        const coinDefn = this.traits?.get(\"VALUE\");\n        return $8cbfa63134b289e1$export$51c187ac2e2bbbe8(coinDefn);\n    }\n    /**\n   * Get the artefact sell back price in GP. Coins are sold back at normal cost.\n   * @returns {number}\n   */ get sellBackPriceInGp() {\n        if (this.artefactType === $c8439a0aab365384$export$e451727f06f039f2.COINS) return this.costInGp;\n        else return Math.round(75 * this.costInGp) / 100;\n    }\n    /**\n   * Set the artefact cost in GP;\n   * @param {number} gp\n   */ set costInGp(gp) {\n        if (!this.traits) throw new Error(\"Artefact has no traits so cannot set cost.\");\n        this.traits.set(\"VALUE\", $8cbfa63134b289e1$export$1df1004f151c8ed5(gp));\n    }\n    /** Get the storage space used by this artefact.\n   * @returns {number}\n   */ get storageSpace() {\n        return this.artefactType.storageSpace;\n    }\n    /**\n   * Get stash store type\n   * @returns {StoreTypeValue}\n   */ get stashStoreType() {\n        return this.artefactType.storeType.stash;\n    }\n    /**\n   * Get equip store type\n   * @returns {StoreTypeValue}\n   */ get equipStoreType() {\n        return this.artefactType.storeType.equip;\n    }\n    /** Convenience method to test if the stash store is a wagon.\n   * @returns {boolean}\n   */ get stashInWagon() {\n        return this.stashStoreType === $c8439a0aab365384$export$39337ab5872e9457.WAGON;\n    }\n    /**\n   * @returns {StoreTypeValue}\n   */ getDefaultStoreType() {\n        return this.artefactType.storeType.stash ?? this.artefactType.storeType.equip;\n    }\n    /**\n   * Get all store types\n   * @returns {StoreTypeValue[]}\n   */ getStoreTypes() {\n        const storeTypes = [];\n        if (this.artefactType.storeType.stash) storeTypes.push(this.artefactType.storeType.stash);\n        if (this.artefactType.storeType.equip) storeTypes.push(this.artefactType.storeType.equip);\n        return storeTypes;\n    }\n    /**\n   * Clone the artefact\n   */ clone() {\n        const clone = new $c8439a0aab365384$export$5612627710242fc2(this.almanacEntry, this.description, this.iconImageName);\n        clone.traits = this.traits.clone();\n        clone.value = this.value;\n        return clone;\n    }\n    /**\n   * Test if this is a magical item.\n   * @returns {boolean}\n   */ isMagic() {\n        return this.artefactType === $c8439a0aab365384$export$e451727f06f039f2.SPELL || this.artefactType === $c8439a0aab365384$export$e451727f06f039f2.CANTRIP;\n    }\n    /**\n   * Test if this is a useable item.\n   * @returns {boolean}\n   */ isUsable() {\n        return !!this.interaction?.canReact();\n    }\n    /** Test if this is consumable.\n   * @returns {boolean}\n   */ isConsumable() {\n        return this.artefactType === $c8439a0aab365384$export$e451727f06f039f2.CONSUMABLE;\n    }\n}\nclass $c8439a0aab365384$export$39a477c01214ccc0 {\n    /** @type {Map<StoreLocation, Artefact[]} */ #stores;\n    /** @type {boolean} */ #hasWagon;\n    /** @type {function} */ #onChange;\n    /**\n   * Construct artefact storage.\n   * @param {boolean} hasWagon\n   * @param {function()} onChange - called when there is an inventory change.\n   */ constructor(hasWagon, onChange){\n        this.#stores = new Map();\n        this.#hasWagon = hasWagon;\n        for(const storeTypeName in $c8439a0aab365384$export$39337ab5872e9457){\n            const storeType = $c8439a0aab365384$export$39337ab5872e9457[storeTypeName];\n            this.#addStore(storeType);\n        }\n        this.#onChange = onChange;\n    }\n    /**\n   * Test if this has a wagon\n   */ get hasWagon() {\n        return this.#hasWagon;\n    }\n    /**\n   * Notify change.\n   */ #notifyChange() {\n        if (this.#onChange) this.#onChange();\n    }\n    /**\n   *\n   * @param {StoreType} storeType\n   */ #addStore(storeType) {\n        if (storeType.money) return this.#stores.set(storeType, new $c8439a0aab365384$var$MoneyStore(storeType.space, storeType.spacesExpand));\n        let storeValid = true;\n        if (this.#hasWagon && storeType === $c8439a0aab365384$export$39337ab5872e9457.BACKPACK) storeValid = false;\n        else if (!this.#hasWagon && storeType === $c8439a0aab365384$export$39337ab5872e9457.WAGON) storeValid = false;\n        if (storeValid) this.#stores.set(storeType, new $c8439a0aab365384$var$ArtefactStore(storeType.space, storeType.spacesExpand, storeType));\n    }\n    /** Get a store from the store type. Note that a trader's wagon serves\n   * both as a backpack and a wagon.\n   * @param {StoreTypeValue} storeType\n   * @returns {ArtefactStore}\n   */ getStore(storeType) {\n        if (this.#hasWagon && storeType === $c8439a0aab365384$export$39337ab5872e9457.BACKPACK) storeType = $c8439a0aab365384$export$39337ab5872e9457.WAGON;\n        return this.#stores.get(storeType);\n    }\n    /** Get a store from the store type. Note that a trader's wagon serves\n   * both as a backpack and a wagon.\n   * @param {string} storeId\n   * @returns {ArtefactStore} null if not found\n   */ getStoreByTypeId(storeTypeId) {\n        for (const store of this.#stores.values()){\n            if (store.storeTypeId === storeTypeId) return store;\n        }\n        return null;\n    }\n    /**\n   * Get the store where an item should be stored. This is normally\n   * the stash store. If a suitable stash store is not available, the equip store is\n   * returned. This is because armour cannot be carried, just worn. The exception is\n   * traders, who can store anything in their packs.\n   * @param {Artefact}\n   * @returns {ArtefactStore} null if it cannot be stored\n   */ findSuitableStore(artefact) {\n        let storeType = artefact.stashStoreType;\n        if (!this.#stores.has(storeType)) storeType = artefact.equipStoreType;\n        const store = this.getStore(storeType);\n        if (store?.canAdd(artefact)) return store;\n        return null;\n    }\n    /**\n   * @param {Artefact} artefact\n   * @returns {boolean} true if successful; false if no space.\n   */ addArtefact(artefact) {\n        const store = this.getStore(artefact.getDefaultStoreType());\n        const result = store?.add(artefact);\n        this.#notifyChange();\n        return result;\n    }\n    /**\n   * @typedef {Object} StorageDetails\n   * @property {ArtefactStore} store\n   * @property {Artefact} artefact\n   */ /**\n   * Get the first stored artefact.\n   * @returns {StorageDetails} null if nothing found\n   */ getFirstStorageDetails() {\n        for (const store of this.#stores.values()){\n            const artefacts = store.values();\n            const value = artefacts.next()?.value;\n            if (value) return {\n                store: store,\n                artefact: value\n            };\n        }\n        return null;\n    }\n    /** Test whether a similar artefact is stored. This is done by\n   * testing the id.\n   * @param {Artefact} artefact\n   * @returns {boolean}\n   */ hasArtefactWithSameId(artefact) {\n        const storageDetails = this.getAllStorageDetails();\n        for (const details of storageDetails){\n            if (details.artefact.id === artefact.id) return true;\n        }\n        return false;\n    }\n    /**\n   * Get all equipped artefacts. This excludes magic\n   * @returns {Artefact[]}\n   */ getAllEquippedArtefacts() {\n        const result = [];\n        const stores = [\n            this.#stores.get($c8439a0aab365384$export$39337ab5872e9457.HEAD),\n            this.#stores.get($c8439a0aab365384$export$39337ab5872e9457.BODY),\n            this.#stores.get($c8439a0aab365384$export$39337ab5872e9457.HANDS),\n            this.#stores.get($c8439a0aab365384$export$39337ab5872e9457.FEET),\n            this.#stores.get($c8439a0aab365384$export$39337ab5872e9457.CANTRIPS),\n            this.#stores.get($c8439a0aab365384$export$39337ab5872e9457.PREPARED_SPELLS)\n        ];\n        for (const store of stores)store.values().forEach((item)=>result.push(item));\n        return result;\n    }\n    /**\n   * Get all stored artefacts.\n   * @returns {StorageDetails[]}\n   */ getAllStorageDetails() {\n        const storageDetails = [];\n        this.#stores.values().forEach((store)=>{\n            store.values().forEach((artefact)=>{\n                storageDetails.push({\n                    store: store,\n                    artefact: artefact\n                });\n            });\n        });\n        return storageDetails;\n    }\n    /**\n   * Get current gold. A convenience method to access the PURSE\n   * @returns {number}\n   */ getPurseValue() {\n        const content = this.getStore($c8439a0aab365384$export$39337ab5872e9457.PURSE).values();\n        const artefact = content.next()?.value;\n        return artefact ? artefact.costInGp : 0;\n    }\n    /** Add gold to purse.\n   * @param {number} gp\n   */ addToPurse(gp) {\n        const artefact = $c8439a0aab365384$var$MoneyStore.createGoldCoinArtefact(gp);\n        this.#stores.get($c8439a0aab365384$export$39337ab5872e9457.PURSE).add(artefact);\n        this.#notifyChange();\n    }\n    /**\n   * Take gold from purse.\n   * @param {number} gp - amount to take.\n   * @returns {number} amount taken.\n   */ takeFromPurse(gp) {\n        const artefact = $c8439a0aab365384$var$MoneyStore.createGoldCoinArtefact(gp);\n        const taken = this.#stores.get($c8439a0aab365384$export$39337ab5872e9457.PURSE).take(artefact);\n        this.#notifyChange();\n        return taken.costInGp;\n    }\n    /**\n   * Convenience method to get contents of a store.\n   *\n   * @param {StoreTypeValue} storeType\n   * @returns {Iterable<Artefact>} null if empty\n   */ getStoreContents(storeType) {\n        const store = this.getStore(storeType);\n        return !store || store.isEmpty() ? null : store.values();\n    }\n    /**\n   * Discard an artefact that has been equipped or stashed.\n   * @param {Artefact} artefact\n   * @returns {boolean} true on success.\n   */ discard(artefact) {\n        if (this.discardStashed(artefact, true)) return true;\n        else return this.discardEquipped(artefact);\n    }\n    /**\n   * Discard an artefact that has been equipped.\n   * @param {Artefact} artefact\n   * @param {boolean} quiet\n   * @returns {boolean} true on success.\n   */ discardEquipped(artefact, quiet) {\n        const equipStore = this.getStore(artefact.equipStoreType);\n        if (!equipStore) {\n            if (!quiet) (0, $2d5b4e7cb639ebe1$export$2e2bcd8739ae039).error(\"Cannot discard artefact as there isn't an equip store.\");\n            return false;\n        }\n        if (!equipStore.take(artefact)) {\n            if (!quiet) (0, $2d5b4e7cb639ebe1$export$2e2bcd8739ae039).error(\"Artefact could not be found so not discarded.\");\n            return false;\n        }\n        this.#notifyChange();\n        return true;\n    }\n    /**\n   * Discard an artefact that has been stashed.\n   * @param {Artefact} artefact\n   * @param {boolean} quiet\n   * @returns {boolean} true on success.\n   */ discardStashed(artefact, quiet) {\n        const stashStore = this.getStore(artefact.stashStoreType);\n        if (!stashStore) {\n            if (!quiet) (0, $2d5b4e7cb639ebe1$export$2e2bcd8739ae039).error(\"Cannot discard artefact as there isn't a stash store.\");\n            return false;\n        }\n        if (!stashStore.take(artefact)) {\n            if (!quiet) (0, $2d5b4e7cb639ebe1$export$2e2bcd8739ae039).error(\"Artefact could not be found so not discarded.\");\n            return false;\n        }\n        this.#notifyChange();\n        return true;\n    }\n    /**\n   * Equip artefact. The artefact should normally exist in the stash unless\n   * the options.direct flag is set.\n   * If space is required, artefacts will be unequipped to make space.\n   * @param {Artefact} artefact\n   * @param {Object} options\n   * @param {boolean} direct - if true, this can be a new object that does not\n   * exist in the stash.\n   * @returns {boolean} true on success.\n   */ equip(artefact, options = {}) {\n        const stashStore = this.getStore(artefact.stashStoreType);\n        const equipStore = this.getStore(artefact.equipStoreType);\n        if (!stashStore && !options.direct) {\n            (0, $2d5b4e7cb639ebe1$export$2e2bcd8739ae039).error(\"Cannot equip artefact as there isn`t a stash store to take it from.\");\n            return false;\n        }\n        if (!equipStore) {\n            (0, $2d5b4e7cb639ebe1$export$2e2bcd8739ae039).error(\"Cannot equip artefact as there isn't an equip store.\");\n            return false;\n        }\n        const spaceRequired = artefact.storageSpace;\n        if (spaceRequired > equipStore.maxSpace) {\n            (0, $2d5b4e7cb639ebe1$export$2e2bcd8739ae039).error(\"The equip store cannot hold this item.\");\n            return false;\n        }\n        const takenArtefact = stashStore?.take(artefact);\n        if (!takenArtefact && !options.direct) {\n            (0, $2d5b4e7cb639ebe1$export$2e2bcd8739ae039).error(\"Could not find artefact in the stash.\");\n            return false;\n        }\n        while(equipStore.freeSpace < spaceRequired){\n            const unequiped = equipStore.takeFirst();\n            stashStore?.add(unequiped);\n        }\n        const result = equipStore.add(artefact);\n        this.#notifyChange();\n        return result;\n    }\n    /**\n   * Unequip and stash artefact. The artefact should normally exist in the equip store unless\n   * the options.direct flag is set.\n   * If space is required in the stash, the attempt fails.\n   * @param {Artefact} artefact\n   * @param {Object} options\n   * @param {boolean} direct - if true, this can be a new object that does not\n   * exist in the stash.\n   * @returns {boolean} true on success.\n   */ stash(artefact, options = {}) {\n        const stashStore = this.getStore(artefact.stashStoreType);\n        const equipStore = this.getStore(artefact.equipStoreType);\n        if (!stashStore) {\n            (0, $2d5b4e7cb639ebe1$export$2e2bcd8739ae039).info(\"Cannot stash artefact as there isn`t a suitable stash store to put it in.\");\n            return false;\n        }\n        if (!equipStore && !options.direct) {\n            (0, $2d5b4e7cb639ebe1$export$2e2bcd8739ae039).error(\"No suitable equip store found. If stashing a new artefact, the direct option should be set.\");\n            return false;\n        }\n        const spaceRequired = artefact.storageSpace;\n        if (spaceRequired > stashStore.freeSpace) {\n            (0, $2d5b4e7cb639ebe1$export$2e2bcd8739ae039).error(\"The stash store cannot hold this item.\");\n            return false;\n        }\n        const takenArtefact = equipStore?.take(artefact);\n        if (!takenArtefact && !options.direct) {\n            (0, $2d5b4e7cb639ebe1$export$2e2bcd8739ae039).error(\"The artefact hasn't been equipped so can't unequip it.\");\n            return false;\n        }\n        const result = stashStore.add(artefact);\n        this.#notifyChange();\n        return result;\n    }\n}\n\n\n/**\n * @file Scene manager\n *\n * @module gameManagement/sceneManager\n */ /**\n * License {@link https://opensource.org/license/mit/|MIT}\n *\n * Copyright 2024 Steve Butler (henspace.com).\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the “Software”), to deal in\n * the Software without restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n * Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */ /**\n * @file Convert a screen definition into a scene.\n *\n * @module scriptReaders/sceneDefinitionParser\n */ /**\n * License {@link https://opensource.org/license/mit/|MIT}\n *\n * Copyright 2024 Steve Butler (henspace.com).\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the “Software”), to deal in\n * the Software without restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n * Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */ /**\n * @file Tile map support\n *\n * @module utils/tileMaps/tilePlan\n */ /**\n * License {@link https://opensource.org/license/mit/|MIT}\n *\n * Copyright 2024 Steve Butler\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the “Software”), to deal in\n * the Software without restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n * Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */ \n\n\n/** Symbol used to mark void tiles @type {string} */ const $aa430e5af6097d50$var$VOID_SYMBOL = \" \";\nconst $aa430e5af6097d50$export$1b3c5bcd5a8a9304 = {\n    WALL: [\n        \"#\",\n        \"*\",\n        \"|\"\n    ],\n    DOOR_IN: [\n        \"-\"\n    ],\n    DOOR_OUT: [\n        \"=\"\n    ],\n    GROUND: [\n        \".\",\n        \":\",\n        \",\",\n        \";\"\n    ],\n    VOID: [\n        \" \"\n    ]\n};\n/**\n * Clarifiers appended to ambiguous design symbols.\n */ const $aa430e5af6097d50$var$Clarifiers = {\n    TOP_LEFT: \"-TL\",\n    TOP_LEFT_INTERNAL: \"-TLI\",\n    TOP: \"-T\",\n    TOP_RIGHT: \"-TR\",\n    TOP_RIGHT_INTERNAL: \"-TRI\",\n    RIGHT: \"-R\",\n    BOTTOM_RIGHT: \"-BR\",\n    BOTTOM_RIGHT_INTERNAL: \"-BRI\",\n    BOTTOM: \"-B\",\n    BOTTOM_LEFT: \"-BL\",\n    BOTTOM_LEFT_INTERNAL: \"-BLI\",\n    LEFT: \"-L\",\n    TOP_TEE: \"-TTEE\",\n    RIGHT_TEE: \"-RTEE\",\n    BOTTOM_TEE: \"-BTEE\",\n    LEFT_TEE: \"-LTEE\",\n    INTERNAL_CROSS: \"-XI\",\n    INTERNAL_VERTICAL: \"-VI\",\n    INTERNAL_HORIZONTAL: \"-HI\"\n};\n/**\n * Shadow clarifiers. Added to some symbols to mark it as being below a top wall.\n */ const $aa430e5af6097d50$var$ShadowClarifier = {\n    BELOW_WALL: \"-SBW\",\n    BELOW_END_WALL: \"-SBE\"\n};\nclass $aa430e5af6097d50$export$5bb21ea01a6aaf38 {\n    /** @type {Array.<Array.<*>>} */ matrix;\n    /** @type {Point} */ entryPointByDoor;\n    /** @type {Point} */ exitPointByDoor;\n    constructor(){\n        this.entryPointByDoor = new (0, $90999bd6b14cd690$export$baf26146a414f24a)(0, 0);\n        this.exitPointByDoor = new (0, $90999bd6b14cd690$export$baf26146a414f24a)(0, 0);\n    }\n    /**\n   * Converts a tile map design into a tile map plan\n   * @param {TileMapDesign} design\n   * @param {SymbolMap}} symbolMap\n   * @returns {TilePlan}\n   */ static generateTileMapPlan(design, symbolMap) {\n        const tilePlan = new $aa430e5af6097d50$export$5bb21ea01a6aaf38();\n        let matrix = tilePlan.convertToMatrix(design);\n        matrix = tilePlan.clarifyMatrix(matrix);\n        tilePlan.createPlan(matrix, symbolMap);\n        return tilePlan;\n    }\n    /**\n   * Convert the user's design from array of strings into a 2D array.\n   * @returns {Array.string[]}\n   */ convertToMatrix(design) {\n        const matrix = [];\n        let nColumns = 0;\n        design.forEach((row)=>{\n            nColumns = Math.max(nColumns, row.length);\n        });\n        design.forEach((row)=>{\n            if (row.length < nColumns) row = row + \" \".repeat(nColumns - length);\n            matrix.push(row.split(\"\"));\n        });\n        return matrix;\n    }\n    /**\n   * Go through the design matrix and convert any ambiguous symbols to more specific\n   * ones. Note the tilePlan matrix is not adjusted. The entry and exit tiles are discovered though.\n   * @param {Array.string[]} matrix\n   */ clarifyMatrix(matrix) {\n        const unambiguousMatrix = [];\n        matrix.forEach((rowValue, rowIndex)=>{\n            const correctedRow = [];\n            unambiguousMatrix.push(correctedRow);\n            rowValue.forEach((colValue, colIndex)=>{\n                const surrounds = (0, $27af28d7e434b74b$export$7c548b14ef6e7713)(matrix, rowIndex, colIndex);\n                if ($aa430e5af6097d50$var$isVoid(colValue)) colValue = $aa430e5af6097d50$var$VOID_SYMBOL;\n                else if ($aa430e5af6097d50$var$isGround(colValue)) {\n                    colValue = $aa430e5af6097d50$var$clarifyGround(colValue, surrounds);\n                    if ($aa430e5af6097d50$var$isEntryTile(colValue, surrounds)) this.entryPointByDoor = new (0, $90999bd6b14cd690$export$baf26146a414f24a)(colIndex, rowIndex);\n                    else if ($aa430e5af6097d50$var$isExitTile(colValue, surrounds)) this.exitPointByDoor = new (0, $90999bd6b14cd690$export$baf26146a414f24a)(colIndex, rowIndex);\n                } else if ($aa430e5af6097d50$var$isPartOfWall(colValue)) colValue = $aa430e5af6097d50$var$clarifyWallPart(colValue, surrounds);\n                correctedRow.push(colValue);\n            });\n        });\n        return unambiguousMatrix;\n    }\n    /**\n   * Convert a clarified design plan matrix into a tile plan.\n   * @param {string[][]} matrix\n   * @param {Map<string, *>} symbolMap\n   * @returns {Array.<Array.<*>>}\n   */ createPlan(matrix, symbolMap) {\n        const planMatrix = [];\n        matrix.forEach((rowValue)=>{\n            const planRow = [];\n            planMatrix.push(planRow);\n            rowValue.forEach((columnValue)=>{\n                planRow.push($aa430e5af6097d50$var$getDesignInfo(columnValue, symbolMap));\n            });\n        });\n        this.matrix = planMatrix;\n    }\n}\n/**\n * Test if symbol is a void.\n * @returns {boolean}\n */ function $aa430e5af6097d50$var$isVoid(symbol) {\n    return $aa430e5af6097d50$export$1b3c5bcd5a8a9304.VOID.includes(symbol);\n}\n/**\n * Test if symbol is an entrance.\n * @returns {boolean}\n */ function $aa430e5af6097d50$var$isEntrance(symbol) {\n    return $aa430e5af6097d50$export$1b3c5bcd5a8a9304.DOOR_IN.includes(symbol);\n}\n/**\n * Test if symbol is an exit.\n * @returns {boolean}\n */ function $aa430e5af6097d50$var$isExit(symbol) {\n    return $aa430e5af6097d50$export$1b3c5bcd5a8a9304.DOOR_OUT.includes(symbol);\n}\n/**\n * Test if symbol is a door.\n * @returns {boolean}\n */ function $aa430e5af6097d50$var$isDoor(symbol) {\n    return $aa430e5af6097d50$var$isEntrance(symbol) || $aa430e5af6097d50$var$isExit(symbol);\n}\n/**\n * Test if symbol is a wall.\n * @returns {boolean}\n */ function $aa430e5af6097d50$var$isWall(symbol) {\n    return $aa430e5af6097d50$export$1b3c5bcd5a8a9304.WALL.includes(symbol);\n}\n/**\n * Test if symbol is ground.\n * @returns {boolean}\n */ function $aa430e5af6097d50$var$isGround(symbol) {\n    return $aa430e5af6097d50$export$1b3c5bcd5a8a9304.GROUND.includes(symbol);\n}\n/**\n * Test if the symbol, unclarified, is part of a wall.\n * @param {string} symbol\n * @returns {boolean}\n */ function $aa430e5af6097d50$var$isPartOfWall(symbol) {\n    return $aa430e5af6097d50$var$isWall(symbol) || $aa430e5af6097d50$var$isDoor(symbol);\n}\n/**\n * Clarify the ground.\n * @param {string} value\n * @param {module:utils/arrays/arrayManip~Surrounds} surrounds\n * @return {string}\n */ function $aa430e5af6097d50$var$clarifyGround(value, surrounds) {\n    if ($aa430e5af6097d50$var$isPartOfWall(surrounds.above)) {\n        if ($aa430e5af6097d50$var$isPartOfWall(surrounds.tl)) value += $aa430e5af6097d50$var$ShadowClarifier.BELOW_WALL;\n        else value += $aa430e5af6097d50$var$ShadowClarifier.BELOW_END_WALL;\n    }\n    return value;\n}\n/**\n * Check if this floor tile is the entry tile. This is the tile the hero will\n * appear on when entering the map. The tests are made in the order of where\n * the doors is most likely to be placed assuming a left to right, top to bottom\n * design.\n * @param {string} value\n * @param {module:utils/arrays/arrayManip~Surrounds} surrounds\n * @returns {boolean}\n */ function $aa430e5af6097d50$var$isEntryTile(value, surrounds) {\n    return $aa430e5af6097d50$var$isEntrance(surrounds.left) || $aa430e5af6097d50$var$isEntrance(surrounds.above) || $aa430e5af6097d50$var$isEntrance(surrounds.right) || $aa430e5af6097d50$var$isEntrance(surrounds.below);\n}\n/**\n * Check if this floor tile is the exit tile. This is the tile the hero will\n * appear on when entering the map. The tests are made in the order of where\n * the doors is most likely to be placed assuming a left to right, top to bottom\n * design.\n * @param {string} value\n * @param {module:utils/arrays/arrayManip~Surrounds} surrounds\n * @returns {boolean}\n */ function $aa430e5af6097d50$var$isExitTile(value, surrounds) {\n    return $aa430e5af6097d50$var$isExit(surrounds.right) || $aa430e5af6097d50$var$isExit(surrounds.below) || $aa430e5af6097d50$var$isExit(surrounds.left) || $aa430e5af6097d50$var$isExit(surrounds.above);\n}\n/**\n * Distinguish the type of tile based on its surroundings.\n * This function does not handle corners.\n * @param {string} value\n * @param {module:utils/arrays/arrayManip~Surrounds} surrounds\n * @return {string}\n */ function $aa430e5af6097d50$var$clarifyWallPart(value, surrounds) {\n    let result = value;\n    // internals centre cross\n    if ($aa430e5af6097d50$var$isPartOfWall(surrounds.above) && $aa430e5af6097d50$var$isPartOfWall(surrounds.right) && $aa430e5af6097d50$var$isPartOfWall(surrounds.below) && $aa430e5af6097d50$var$isPartOfWall(surrounds.left)) result += $aa430e5af6097d50$var$Clarifiers.INTERNAL_CROSS;\n    else if ($aa430e5af6097d50$var$isGround(surrounds.left) && $aa430e5af6097d50$var$isGround(surrounds.right)) result += $aa430e5af6097d50$var$Clarifiers.INTERNAL_VERTICAL;\n    else if ($aa430e5af6097d50$var$isGround(surrounds.above) && $aa430e5af6097d50$var$isGround(surrounds.below)) result += $aa430e5af6097d50$var$Clarifiers.INTERNAL_HORIZONTAL;\n    else if ($aa430e5af6097d50$var$isPartOfWall(surrounds.left) && $aa430e5af6097d50$var$isPartOfWall(surrounds.right) && $aa430e5af6097d50$var$isPartOfWall(surrounds.below)) result += $aa430e5af6097d50$var$Clarifiers.TOP_TEE;\n    else if ($aa430e5af6097d50$var$isPartOfWall(surrounds.above) && $aa430e5af6097d50$var$isPartOfWall(surrounds.below) && $aa430e5af6097d50$var$isPartOfWall(surrounds.left)) result += $aa430e5af6097d50$var$Clarifiers.RIGHT_TEE;\n    else if ($aa430e5af6097d50$var$isPartOfWall(surrounds.left) && $aa430e5af6097d50$var$isPartOfWall(surrounds.right) && $aa430e5af6097d50$var$isPartOfWall(surrounds.above)) result += $aa430e5af6097d50$var$Clarifiers.BOTTOM_TEE;\n    else if ($aa430e5af6097d50$var$isPartOfWall(surrounds.above) && $aa430e5af6097d50$var$isPartOfWall(surrounds.below) && $aa430e5af6097d50$var$isPartOfWall(surrounds.right)) result += $aa430e5af6097d50$var$Clarifiers.LEFT_TEE;\n    else if ($aa430e5af6097d50$var$isPartOfWall(surrounds.right) && $aa430e5af6097d50$var$isPartOfWall(surrounds.below)) result += $aa430e5af6097d50$var$isGround(surrounds.br) ? $aa430e5af6097d50$var$Clarifiers.TOP_LEFT : $aa430e5af6097d50$var$Clarifiers.TOP_LEFT_INTERNAL;\n    else if ($aa430e5af6097d50$var$isPartOfWall(surrounds.left) && $aa430e5af6097d50$var$isPartOfWall(surrounds.below)) result += $aa430e5af6097d50$var$isGround(surrounds.bl) ? $aa430e5af6097d50$var$Clarifiers.TOP_RIGHT : $aa430e5af6097d50$var$Clarifiers.TOP_RIGHT_INTERNAL;\n    else if ($aa430e5af6097d50$var$isPartOfWall(surrounds.left) && $aa430e5af6097d50$var$isPartOfWall(surrounds.above)) result += $aa430e5af6097d50$var$isGround(surrounds.tl) ? $aa430e5af6097d50$var$Clarifiers.BOTTOM_RIGHT : $aa430e5af6097d50$var$Clarifiers.BOTTOM_RIGHT_INTERNAL;\n    else if ($aa430e5af6097d50$var$isPartOfWall(surrounds.right) && $aa430e5af6097d50$var$isPartOfWall(surrounds.above)) result += $aa430e5af6097d50$var$isGround(surrounds.tr) ? $aa430e5af6097d50$var$Clarifiers.BOTTOM_LEFT : $aa430e5af6097d50$var$Clarifiers.BOTTOM_LEFT_INTERNAL;\n    else if ($aa430e5af6097d50$var$isPartOfWall(surrounds.above) && $aa430e5af6097d50$var$isPartOfWall(surrounds.below)) // vertical\n    result += $aa430e5af6097d50$var$isGround(surrounds.right) ? $aa430e5af6097d50$var$Clarifiers.LEFT : $aa430e5af6097d50$var$Clarifiers.RIGHT;\n    else if ($aa430e5af6097d50$var$isPartOfWall(surrounds.right) && $aa430e5af6097d50$var$isPartOfWall(surrounds.left)) // horizontal\n    result += $aa430e5af6097d50$var$isGround(surrounds.below) ? $aa430e5af6097d50$var$Clarifiers.TOP : $aa430e5af6097d50$var$Clarifiers.BOTTOM;\n    if ($aa430e5af6097d50$var$isPartOfWall(surrounds.above)) return result += $aa430e5af6097d50$var$ShadowClarifier.BELOW_WALL;\n    return result;\n}\n/** Get the design info from the symbol map. The function reduces the specialism\n * of the symbol if it cannot find it. I.e it removes any shadow clarifiers and\n * then all other clarifiers when hunting for the symbol in the symbol map.\n * @param {string} symbol - clarified symbol.\n * @param {Map<string, *>} symbolMap\n * @returns {TileDesignInfo}\n */ function $aa430e5af6097d50$var$getDesignInfo(symbol, symbolMap) {\n    if (symbol === $aa430e5af6097d50$var$VOID_SYMBOL) return null;\n    const match = symbol.match(/(.)(-[^-]*)?(-[^-]*)?/);\n    let info = symbolMap.get(symbol);\n    if (!info && match[2] && match[3]) info = symbolMap.get(`${match[1]}${match[2]}`); // no shadow clarifier\n    if (!info && match[2]) info = symbolMap.get(match[1]); // no clarifiers at all\n    if (!info) {\n        const fallbackSymbol = $aa430e5af6097d50$var$getFirstOfCohort(match[1]);\n        if (fallbackSymbol && fallbackSymbol !== match[1]) return $aa430e5af6097d50$var$getDesignInfo($aa430e5af6097d50$var$formClarifiedSymbol(fallbackSymbol, match[2], match[3]), symbolMap);\n        else (0, $2d5b4e7cb639ebe1$export$2e2bcd8739ae039).error(`Failed to find symbol for ${symbol}`);\n    }\n    return info;\n}\n/**\n * Searches the SpecialSymbols and finds the first entry in the array that matches\n * the unclarified symbol.\n * @param {string} unclarifiedSymbol\n * @returns {string} null if not found\n */ function $aa430e5af6097d50$var$getFirstOfCohort(unclarifiedSymbol) {\n    for(const prop in $aa430e5af6097d50$export$1b3c5bcd5a8a9304){\n        if ($aa430e5af6097d50$export$1b3c5bcd5a8a9304[prop].includes(unclarifiedSymbol)) return $aa430e5af6097d50$export$1b3c5bcd5a8a9304[prop][0];\n    }\n    return null;\n}\n/**\n * Add clarifiers onto symbol.\n * @param {string} unclarifiedSymbol\n * @param {string} clarifier\n * @param {string} shadowClarifier\n */ function $aa430e5af6097d50$var$formClarifiedSymbol(unclarifiedSymbol, clarifier, shadowClarifier) {\n    let result = unclarifiedSymbol;\n    if (clarifier) result += clarifier;\n    if (shadowClarifier) result += shadowClarifier;\n    return result;\n}\n\n\n/**\n * @file Tile map\n *\n * @module utils/tileMaps/tileMap\n */ /**\n * License {@link https://opensource.org/license/mit/|MIT}\n *\n * Copyright 2024 Steve Butler\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the “Software”), to deal in\n * the Software without restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n * Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */ \n\n\n\n\n/**\n * @file Interactions with the ui\n *\n * @module utils/ui/interactions\n */ /**\n * License {@link https://opensource.org/license/mit/|MIT}\n *\n * Copyright 2024 Steve Butler\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the “Software”), to deal in\n * the Software without restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n * Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */ /**\n * @typedef {function} UiClickCallback\n * @param {Object} target - initial object that triggered the handler\n * @param {module:utils/geometry~Point} point - the position that was clicked in world coordinates\n */ /**\n * BAse for all UiClickHandlers\n */ class $0244e696098defc3$export$a82f6454288e7804 {\n    /** @type {UiClickCallback} */ #onClick;\n    /** @type {UiClickCallback} */ #onContextClick;\n    /** @type {UiClickCallback} */ #onPointerDown;\n    /** @type {UiClickCallback} */ #onPointerUp;\n    /** Set click handler. Note that this does not add a listener for the event.\n   * @param {UiClickCallback} handler\n   */ setOnClick(handler) {\n        this.#onClick = handler;\n    }\n    /** Set on context Click handler.\n   * @param {UiClickCallback} handler\n   */ setOnContextClick(handler) {\n        this.#onContextClick = handler;\n    }\n    /** Set pointer down handler. Note that this does not add a listener for the event.\n   * @param {UiClickCallback} handler\n   */ setOnPointerDown(handler) {\n        this.#onPointerDown = handler;\n    }\n    /** Set pointer up handler. Note that this does not add a listener for the event.\n   * @param {UiClickCallback} handler\n   */ setOnPointerUp(handler) {\n        this.#onPointerUp = handler;\n    }\n    /**\n   * Handle click\n   * @param {module:utils/geometry~Point} point\n   */ actionClick(point) {\n        this.#onClick?.(this, point);\n    }\n    /**\n   * Handle context click\n   * @param {module:utils/geometry~Point} point\n   */ actionContextClick(point) {\n        this.#onContextClick?.(this, point);\n    }\n    /**\n   * Handle pointer down\n   * @param {module:utils/geometry~Point} point\n   */ actionPointerDown(point) {\n        this.#onPointerDown?.(this, point);\n    }\n    /**\n   * Handle pointer up\n   * @param {module:utils/geometry~Point} point\n   */ actionPointerUp(point) {\n        this.#onPointerUp?.(this, point);\n    }\n}\n\n\n\n\n/**\n * @file Path finders within a tile map\n *\n * @module utils/tileMaps/pathFinder\n */ /**\n * License {@link https://opensource.org/license/mit/|MIT}\n *\n * Copyright 2024 Steve Butler\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the “Software”), to deal in\n * the Software without restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n * Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */ \n\nclass $2d040b97465ee48e$export$3565eb3d00ca5a74 {\n    /** @type {Map<string, Point[]>} */ #routes;\n    /** @type {module:utils/tileMaps/tileMap~TileMap} */ #tileMap;\n    /**\n   * Create routes.\n   * @param {module:utils/tileMaps/tileMap~TileMap} tileMap\n   */ constructor(tileMap){\n        this.#tileMap = tileMap;\n        this.#routes = new Map();\n    }\n    /**\n   * Set route to reach coordinates\n   * @param {Point[]} route\n   * @param {*} x\n   * @param {*} y\n   */ setRouteToCoords(route, x, y) {\n        this.#routes.set(this.coordsToKey(x, y), route);\n    }\n    /**\n   * Get route to reach coordinates\n   * @param {*} x\n   * @param {*} y\n   * @returns {Point[]} route}\n   */ getRouteToCoords(x, y) {\n        return this.#routes.get(this.coordsToKey(x, y));\n    }\n    /** Test if routes has route to coords.\n   * @param {number} x - grid position\n   * @param {number} y - grid position\n   * @returns {boolean}\n   */ hasRouteToCoords(x, y) {\n        return this.#routes.has(this.coordsToKey(x, y));\n    }\n    /**\n   * Create a key for the routes map from a row and column.\n   * @param {number} x\n   * @param {number} y\n   * @returns {string}\n   */ coordsToKey(x, y) {\n        return `${x}|${y}`;\n    }\n    /**\n   * Convert a map key to a grid reference.\n   * @param {string} key\n   * @returns {Point} Point giving the tile map grid reference.\n   */ keyToGridPoint(key) {\n        const reference = key.split(\"|\");\n        return new (0, $90999bd6b14cd690$export$baf26146a414f24a)(parseInt(reference[0]), parseInt(reference[1]));\n    }\n    /**\n   * Get the entries\n   * @returns {Iterator}\n   */ forEach(callback) {\n        this.#routes.forEach((value, key, map)=>callback(value, key, map));\n    }\n    /**\n   * Check if any routes contains the coordinates\n   * @param {Point} point\n   * @returns {boolean}\n   */ containsGridPoint(point) {\n        return this.#routes.has(this.coordsToKey(point.x, point.y));\n    }\n    /**\n   * Get wayPoints to get to destination of x, y. The starting point is stripped\n   * off. Points are returned as grid references\n   * @param {Point} destination\n   * @returns {Point[]} array of points to reach grid reference x, y. Null if no route.\n   */ getWaypointsAsGridPoints(destination) {\n        const points = this.getRouteToCoords(destination.x, destination.y);\n        if (points && points.length > 1) return points.slice(1);\n        else return null;\n    }\n    /**\n   * Get wayPoints to get to destination of x, y. The starting point is stripped\n   * off.\n   * @param {Point} destination\n   * @returns {Point[]} array of points to reach grid reference x, y\n   */ getWaypointsAsWorldPoints(destination) {\n        const waypoints = this.getWaypointsAsGridPoints(destination);\n        if (waypoints) return waypoints.map((gridPoint)=>this.#tileMap.gridPointToWorldPoint(gridPoint));\n        else return waypoints;\n    }\n}\nclass $2d040b97465ee48e$export$4c535f8fc4520664 {\n    /** Actor trying to find routes. @type {module:players/actors~Actor} */ actor;\n    /** @type {Route[]} */ #routes;\n    /** @type {module:utils/tileMaps/tileMap~TileMap} */ #tileMap;\n    /** @type {Point} */ #startPoint;\n    /** Create the route finder.\n   * @param {module:utils/tileMaps/tileMap~TileMap} tileMap\n   * @param {module:players/actors~Actor} actor\n   */ constructor(tileMap, actor){\n        this.#tileMap = tileMap;\n        this.actor = actor;\n    }\n    /**\n   * Find a route to the destination gridPoint. Note that it tries to find a route\n   * adjacent to the target grid point, not actually on the grid point. The resulting\n   * route is dumb, in that it does not try all options to maximise movement.\n   * @param {Point} startingGridPoint - starting point\n   * @param {Point} targetGridPoint - starting point\n   * @param {*} maxMove - maximum number of moves allowed.\n   * @returns {Map<string, Point[]>} null if no path available or necessary.\n   */ getDumbRouteNextTo(startingGridPoint, targetGridPoint, maxMove) {\n        let destination = this.#getAdjacentTarget(startingGridPoint, targetGridPoint);\n        if (destination.coincident(startingGridPoint)) return [];\n        if (!this.#tileMap.canGridPointBeOccupiedByActor(destination, this.actor)) destination = this.#rotateGridPointAbout(destination, targetGridPoint);\n        let path = [];\n        let dX = Math.sign(destination.x - startingGridPoint.x);\n        let dY = Math.sign(destination.y - startingGridPoint.y);\n        let waypoint = (0, $90999bd6b14cd690$export$baf26146a414f24a).copy(startingGridPoint);\n        let movingX = Math.random() < 0.5;\n        let consecutiveFails = 0;\n        while(maxMove > 0){\n            let nextPoint = (0, $90999bd6b14cd690$export$baf26146a414f24a).copy(waypoint);\n            let moved = false;\n            if (movingX && dX !== 0 && waypoint.x != destination.x) {\n                nextPoint.x += dX;\n                moved = true;\n            } else if (!movingX && dY !== 0 && waypoint.y != destination.y) {\n                nextPoint.y += dY;\n                moved = true;\n            }\n            moved = moved && this.#tileMap.canGridPointBeOccupiedByActor(nextPoint, this.actor);\n            if (moved) {\n                consecutiveFails = 0;\n                waypoint = nextPoint;\n                maxMove--;\n            } else {\n                if (++consecutiveFails >= 2) break;\n                if (!waypoint.coincident(startingGridPoint)) path.push(this.#tileMap.gridPointToWorldPoint(waypoint));\n                startingGridPoint = waypoint;\n                movingX = !movingX; //flip axi\n            }\n        }\n        if (!waypoint.coincident(startingGridPoint)) path.push(this.#tileMap.gridPointToWorldPoint(waypoint));\n        return path;\n    }\n    /**\n   * Get all available routes as a Map of paths.\n   * @param {Point} startingGridPoint - starting point\n   * @param {*} maxMove - maximum number of moves allowed.\n   * @returns {Map<string, Point[]>}\n   */ getAllRoutesFrom(startingGridPoint, maxMove) {\n        this.#routes = new $2d040b97465ee48e$export$3565eb3d00ca5a74(this.#tileMap);\n        this.#startPoint = startingGridPoint;\n        this.#findRoutes(startingGridPoint.x, startingGridPoint.y, maxMove, null);\n        return this.#routes;\n    }\n    /**\n   * @param {number} x - tile x index of current tile\n   * @param {number} y - tile y index of current tile\n   * @param {number} maxTiles - the maximum number of tiles that can be moved.\n   * @param {Point[]} [routePoints] - array of points that\n   * represent current path taken to get here. If null, this is the start of the\n   * route.\n   */ #findRoutes(x, y, movesLeft, routePoints) {\n        if (!routePoints) /* Initialise route. Don't check if it's clear as it may well be occupied\n       * by the sprite seeking a route.\n       */ routePoints = [\n            new (0, $90999bd6b14cd690$export$baf26146a414f24a)(x, y)\n        ];\n        else {\n            if (x === this.#startPoint.x && y === this.#startPoint.y) return;\n            else if (!this.#isTilePassable(x, y)) return;\n            const existingRoute = this.#routes.getRouteToCoords(x, y);\n            if (!existingRoute || routePoints.length < existingRoute.length - 1) {\n                routePoints.push(new (0, $90999bd6b14cd690$export$baf26146a414f24a)(x, y)); // we have a route to this point\n                if (this.#canTileBeOccupied(x, y)) // only save route if we are actually allowed to occupy its end point.\n                this.#routes.setRouteToCoords(routePoints, x, y);\n                movesLeft--;\n            } else return;\n        }\n        if (movesLeft > 0) {\n            // try all 4 directions\n            this.#findRoutes(x, y - 1, movesLeft, [\n                ...routePoints\n            ]); // up\n            this.#findRoutes(x + 1, y, movesLeft, [\n                ...routePoints\n            ]); // right\n            this.#findRoutes(x, y + 1, movesLeft, [\n                ...routePoints\n            ]); // down\n            this.#findRoutes(x - 1, y, movesLeft, [\n                ...routePoints\n            ]); // left\n        }\n    }\n    /** Check if tile is passable.\n   * @param {number} x\n   * @param {number} y\n   * @returns {boolean}\n   *\n   */ #isTilePassable(x, y) {\n        return this.#tileMap.isGridPointPassableByActor(new (0, $90999bd6b14cd690$export$baf26146a414f24a)(x, y), this.actor);\n    }\n    /** Check if tile can be occupied.\n   * @param {number} x\n   * @param {number} y\n   * @returns {boolean}\n   *\n   */ #canTileBeOccupied(x, y) {\n        return this.#tileMap.canGridPointBeOccupiedByActor(new (0, $90999bd6b14cd690$export$baf26146a414f24a)(x, y), this.actor);\n    }\n    #getAdjacentTarget(current, target) {\n        const deltaX = target.x - current.x;\n        const deltaY = target.y - current.y;\n        let adjX = target.x;\n        let adjY = target.y;\n        if (Math.abs(deltaX) > Math.abs(deltaY)) adjX -= Math.sign(deltaX);\n        else adjY -= Math.sign(deltaY);\n        return new (0, $90999bd6b14cd690$export$baf26146a414f24a)(adjX, adjY);\n    }\n    /**\n   * Rotate a grid point about a target grid point. This does not rotate to\n   * diagonals.\n   */ #rotateGridPointAbout(gridPoint, originPoint) {\n        if (gridPoint.x === originPoint.x && gridPoint.y < originPoint.y) return new (0, $90999bd6b14cd690$export$baf26146a414f24a)(gridPoint.x + 1, gridPoint.y + 1);\n        else if (gridPoint.x > originPoint.x && gridPoint.y === originPoint.y) return new (0, $90999bd6b14cd690$export$baf26146a414f24a)(gridPoint.x - 1, gridPoint.y + 1);\n        if (gridPoint.x === originPoint.x && gridPoint.y > originPoint.y) return new (0, $90999bd6b14cd690$export$baf26146a414f24a)(gridPoint.x - 1, gridPoint.y - 1);\n        if (gridPoint.x < originPoint.x && gridPoint.y === originPoint.y) return new (0, $90999bd6b14cd690$export$baf26146a414f24a)(gridPoint.x + 1, gridPoint.y - 1);\n        return gridPoint;\n    }\n}\nclass $2d040b97465ee48e$export$e832cee54e4e1a4d {\n    /** Actor tracing rays. @type {module:players/actors~Actor} */ #actor;\n    /** Start point of the ray. @type {Point} */ #rayStartPoint;\n    /** @type {module:utils/tileMaps/tileMap~TileMap} */ #tileMap;\n    /** @type {Map<string, Point>} */ #reachedPoints;\n    /** @type {Point}   */ #lastStartPoint;\n    /** @type {Rectangle} */ #bounds;\n    /** @type {Rectangle} */ #lastBounds;\n    /** Create the ray tracer.\n   * @param {module:utils/tileMaps/tileMap~TileMap} tileMap\n   * @param {module:players/actors~Actor} actor\n   */ constructor(tileMap, actor){\n        this.#tileMap = tileMap;\n        this.#actor = actor;\n    }\n    /**\n   * Find all the tiles that are reached from the actor.\n   * @returns {Map<Point>} grid points of reached tiles.\n   */ findReachedTiles() {\n        this.#rayStartPoint = this.#tileMap.worldPointToGrid(this.#actor.position);\n        // this.#bounds = this.#tileMap.getVisibleGridPointRect();\n        this.#bounds = this.#tileMap.getMapGridPointRect();\n        if (this.#lastStartPoint && this.#lastStartPoint.coincident(this.#rayStartPoint) && this.#bounds && this.#bounds.equals(this.#lastBounds)) return this.#reachedPoints;\n        this.#reachedPoints = new Map();\n        this.#reachedPoints.set(this.#rayStartPoint.toString(), this.#rayStartPoint);\n        this.#getRayEnds().forEach((endPoint)=>{\n            this.#traceRayToEnd(endPoint);\n        });\n        this.#lastStartPoint = this.#rayStartPoint;\n        this.#lastBounds = this.#bounds;\n        return this.#reachedPoints;\n    }\n    /**\n   * Test if grid point in rays.\n   * @param {Point} gridPoint\n   * @returns {boolean}\n   */ isGridPointInRays(gridPoint) {\n        return this.#reachedPoints ? this.#reachedPoints.has(gridPoint.toString()) : false;\n    }\n    /**\n   * Get the end point of the rays.\n   * @returns {Point[]} array of the end grid points for each ray.\n   */ #getRayEnds() {\n        const rayEnds = [];\n        for(let col = this.#bounds.x; col <= this.#bounds.x + this.#bounds.width; col++){\n            rayEnds.push(new (0, $90999bd6b14cd690$export$baf26146a414f24a)(col, this.#bounds.y));\n            rayEnds.push(new (0, $90999bd6b14cd690$export$baf26146a414f24a)(col, this.#bounds.y + this.#bounds.height));\n        }\n        for(let row = this.#bounds.y + 1; row <= this.#bounds.y + this.#bounds.height - 1; row++){\n            rayEnds.push(new (0, $90999bd6b14cd690$export$baf26146a414f24a)(this.#bounds.x, row));\n            rayEnds.push(new (0, $90999bd6b14cd690$export$baf26146a414f24a)(this.#bounds.x + this.#bounds.width, row));\n        }\n        return rayEnds;\n    }\n    /**\n   * Trace the ray to its end. Note that calculations are done in cartesian coordinates\n   * and so Y values need to be negated during calculations.\n   * @param {Point} endPoint\n   */ #traceRayToEnd(endPoint) {\n        let dx;\n        let dy;\n        let steps;\n        const angle = this.#rayStartPoint.getScreenAngleTo(endPoint);\n        const compassDirection = $05d58a132d6b5767$export$d9ac11c8e8c20b77(angle);\n        if (Math.abs(endPoint.x - this.#rayStartPoint.x) >= Math.abs(endPoint.y - this.#rayStartPoint.y)) {\n            dx = Math.sign(endPoint.x - this.#rayStartPoint.x);\n            steps = Math.abs(endPoint.x - this.#rayStartPoint.x);\n            dy = steps < 1 ? 0 : (endPoint.y - this.#rayStartPoint.y) / steps;\n        } else {\n            dy = Math.sign(endPoint.y - this.#rayStartPoint.y);\n            steps = Math.abs(endPoint.y - this.#rayStartPoint.y);\n            dx = steps < 1 ? 0 : (endPoint.x - this.#rayStartPoint.x) / steps;\n        }\n        let x = this.#rayStartPoint.x;\n        let y = this.#rayStartPoint.y;\n        let firstPoint = true;\n        while(steps >= 0){\n            const gridPoint = new (0, $90999bd6b14cd690$export$baf26146a414f24a)(Math.round(x), Math.round(y));\n            if (firstPoint || this.#tileMap.isSeeThrough(gridPoint, this.#actor)) this.#markReachedPoint(gridPoint, compassDirection);\n            else break; // ray ends.\n            firstPoint = false;\n            x += dx;\n            y += dy;\n            steps--;\n        }\n    }\n    /**\n   * Mark the point as reached. Note that surrounding obstacle tiles need to be\n   * shown as well otherwise wall will not appear.\n   * @param {Point} point\n   * @param {number} compassDir - eight point compass direction of ray\n   */ #markReachedPoint(point, compassDir) {\n        this.#reachedPoints.set(point.toString(), point);\n        switch(compassDir){\n            case $05d58a132d6b5767$export$624e7ee3f0468367.N:\n                this.#markReachedIfNotSeeThrough(new (0, $90999bd6b14cd690$export$baf26146a414f24a)(point.x - 1, point.y - 1));\n                this.#markReachedIfNotSeeThrough(new (0, $90999bd6b14cd690$export$baf26146a414f24a)(point.x, point.y - 1));\n                this.#markReachedIfNotSeeThrough(new (0, $90999bd6b14cd690$export$baf26146a414f24a)(point.x + 1, point.y - 1));\n                break;\n            case $05d58a132d6b5767$export$624e7ee3f0468367.NE:\n                this.#markReachedIfNotSeeThrough(new (0, $90999bd6b14cd690$export$baf26146a414f24a)(point.x, point.y - 1));\n                this.#markReachedIfNotSeeThrough(new (0, $90999bd6b14cd690$export$baf26146a414f24a)(point.x + 1, point.y - 1));\n                this.#markReachedIfNotSeeThrough(new (0, $90999bd6b14cd690$export$baf26146a414f24a)(point.x + 1, point.y));\n                break;\n            case $05d58a132d6b5767$export$624e7ee3f0468367.E:\n                this.#markReachedIfNotSeeThrough(new (0, $90999bd6b14cd690$export$baf26146a414f24a)(point.x + 1, point.y - 1));\n                this.#markReachedIfNotSeeThrough(new (0, $90999bd6b14cd690$export$baf26146a414f24a)(point.x + 1, point.y));\n                this.#markReachedIfNotSeeThrough(new (0, $90999bd6b14cd690$export$baf26146a414f24a)(point.x + 1, point.y + 1));\n                break;\n            case $05d58a132d6b5767$export$624e7ee3f0468367.SE:\n                this.#markReachedIfNotSeeThrough(new (0, $90999bd6b14cd690$export$baf26146a414f24a)(point.x + 1, point.y));\n                this.#markReachedIfNotSeeThrough(new (0, $90999bd6b14cd690$export$baf26146a414f24a)(point.x + 1, point.y + 1));\n                this.#markReachedIfNotSeeThrough(new (0, $90999bd6b14cd690$export$baf26146a414f24a)(point.x, point.y + 1));\n                break;\n            case $05d58a132d6b5767$export$624e7ee3f0468367.S:\n                this.#markReachedIfNotSeeThrough(new (0, $90999bd6b14cd690$export$baf26146a414f24a)(point.x - 1, point.y + 1));\n                this.#markReachedIfNotSeeThrough(new (0, $90999bd6b14cd690$export$baf26146a414f24a)(point.x, point.y + 1));\n                this.#markReachedIfNotSeeThrough(new (0, $90999bd6b14cd690$export$baf26146a414f24a)(point.x + 1, point.y + 1));\n                break;\n            case $05d58a132d6b5767$export$624e7ee3f0468367.SW:\n                this.#markReachedIfNotSeeThrough(new (0, $90999bd6b14cd690$export$baf26146a414f24a)(point.x - 1, point.y));\n                this.#markReachedIfNotSeeThrough(new (0, $90999bd6b14cd690$export$baf26146a414f24a)(point.x - 1, point.y + 1));\n                this.#markReachedIfNotSeeThrough(new (0, $90999bd6b14cd690$export$baf26146a414f24a)(point.x, point.y + 1));\n                break;\n            case $05d58a132d6b5767$export$624e7ee3f0468367.W:\n                this.#markReachedIfNotSeeThrough(new (0, $90999bd6b14cd690$export$baf26146a414f24a)(point.x - 1, point.y - 1));\n                this.#markReachedIfNotSeeThrough(new (0, $90999bd6b14cd690$export$baf26146a414f24a)(point.x - 1, point.y));\n                this.#markReachedIfNotSeeThrough(new (0, $90999bd6b14cd690$export$baf26146a414f24a)(point.x - 1, point.y + 1));\n                break;\n            case $05d58a132d6b5767$export$624e7ee3f0468367.NW:\n                this.#markReachedIfNotSeeThrough(new (0, $90999bd6b14cd690$export$baf26146a414f24a)(point.x - 1, point.y));\n                this.#markReachedIfNotSeeThrough(new (0, $90999bd6b14cd690$export$baf26146a414f24a)(point.x - 1, point.y - 1));\n                this.#markReachedIfNotSeeThrough(new (0, $90999bd6b14cd690$export$baf26146a414f24a)(point.x, point.y - 1));\n                break;\n        }\n    }\n    /**\n   * Mark a tile as Reached if not see through\n   * @param {Point} point\n   */ #markReachedIfNotSeeThrough(point) {\n        if (!this.#tileMap.isSeeThrough(point)) this.#reachedPoints.set(point.toString(), point);\n    }\n}\n\n\n/**\n * @file Colours used in the game.\n *\n * @module constants/colours\n */ /**\n * License {@link https://opensource.org/license/mit/|MIT}\n *\n * Copyright 2024 Steve Butler (henspace.com).\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the “Software”), to deal in\n * the Software without restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n * Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */ /**\n * Colours used in the game.\n * @enum {string}\n */ const $f5b04f63aedb55f0$export$1f4d983d2ef95b6b = {\n    DOOR_HIGHLIGHT_FILL: \"rgba(0, 255, 0, 0.2)\",\n    DOOR_HIGHLIGHT_STROKE: \"green\",\n    HP_GAUGE: \"rgba(204, 51, 0, 0.4)\",\n    HP_TRANSIENT_TEXT_HERO: \"white\",\n    HP_TRANSIENT_TEXT_ENEMY: \"black\",\n    INTERACT_HIGHLIGHT_FILL: \"transparent\",\n    INTERACT_HIGHLIGHT_STROKE: \"black\",\n    MORALE_GAUGE: \"rgba(0, 0, 255, 0.4)\",\n    MOVE_HIGHLIGHT_FILL: \"rgba(255, 255, 255, 0.2)\",\n    MOVE_HIGHLIGHT_STROKE: \"white\"\n};\n\n\nconst $e5bc60fa707f771a$export$ea490c48f1c71643 = {\n    MOVEMENT_TILE: 0,\n    INTERACT_TILE: 1,\n    OCCUPIED_TILE: 2,\n    HERO_TILE: 3,\n    MOVE_OR_INTERACT_TILE: 4\n};\nconst $e5bc60fa707f771a$export$b57fd20cbd2711c3 = {\n    OBSTACLE: -1,\n    GROUND: 0,\n    ENTRANCE: 1,\n    EXIT: 2,\n    STAIRS_UP: 3,\n    STAIRS_DOWN: 4\n};\nclass $e5bc60fa707f771a$export$235cb65c20ad2b7 extends (0, $0244e696098defc3$export$a82f6454288e7804) {\n    /** @type {Sprite} */ sprite;\n    /** @type {boolean} */ obstacle;\n    /** @type {module:players/actors~Actor} */ #occupants;\n    /** @type {Point} */ #gridPoint;\n    /** @type {Point} */ #worldPoint;\n    /** @type {TileRole} */ #role;\n    /** Construct tile\n   * @param {Sprite} tileSprite;\n   * @param {Object} options;\n   * @param {boolean} options.obstacle;\n   * @param {!Point} options.gridPoint;\n   * @param {!Point} options.worldPoint;\n   * @param {TileRole} options.role;\n   */ constructor(tileSprite, options){\n        super();\n        this.sprite = tileSprite;\n        this.#occupants = new Map();\n        this.obstacle = options.obstacle;\n        this.#gridPoint = options.gridPoint;\n        this.#worldPoint = options.worldPoint;\n        this.#role = options.role;\n    }\n    /**\n   * Get the role.\n   */ get role() {\n        return this.#role;\n    }\n    /**\n   * Get the grid point.\n   * @returns {Point}\n   */ get gridPoint() {\n        return this.#gridPoint;\n    }\n    /**\n   * Get the world point.\n   * @returns {Point}\n   */ get worldPoint() {\n        return this.#worldPoint;\n    }\n    /** Add occupant.\n   * @param {import('..utils/game/actors.js').Actor\n   */ addOccupant(occupant) {\n        this.#occupants.set(occupant, occupant);\n    }\n    /** Remove occupant.\n   * @param {module:players/actors~Actor}\n   */ deleteOccupant(occupant) {\n        this.#occupants.delete(occupant);\n    }\n    /** get occupants.\n   * @returns {module:players/actors~Actor[]}\n   */ getOccupants() {\n        return this.#occupants;\n    }\n    /**\n   * Handle the click but change the point to the sprites' position\n   */ actionClick(pointUnused) {\n        super.actionClick(this.sprite.position);\n    }\n    /**\n   * Handle the click but change the point to the sprites' position\n   */ actionContextClick(pointUnused) {\n        super.actionClick(this.sprite.position);\n    }\n    /**\n   * Test if occupied\n   * @returns {boolean}\n   */ isOccupied() {\n        return this.#occupants.size > 0;\n    }\n    /**\n   * Test if tile can be passed by the actor\n   * @param {Object} actor\n   * @returns {boolean}\n   */ isPassableByActor(actor) {\n        if (this.#role === $e5bc60fa707f771a$export$b57fd20cbd2711c3.ENTRANCE || this.#role === $e5bc60fa707f771a$export$b57fd20cbd2711c3.EXIT) return false;\n        if (this.obstacle) return false;\n        for (const occupant of this.#occupants.values()){\n            if (occupant !== actor && !occupant.isPassableByActor(actor)) return false;\n        }\n        return true;\n    }\n    /**\n   * Test if tile can be occupied by the actor\n   * @param {Object} actor\n   * @returns {boolean}\n   */ canBeOccupiedByActor(actor) {\n        if ((this.#role === $e5bc60fa707f771a$export$b57fd20cbd2711c3.ENTRANCE || this.#role === $e5bc60fa707f771a$export$b57fd20cbd2711c3.EXIT) && !actor.isHero()) return false;\n        if (this.obstacle) return false;\n        for (const occupant of this.#occupants.values()){\n            if (occupant !== actor && !occupant.canShareLocationWithActor(actor)) return false;\n        }\n        return true;\n    }\n    /**\n   * Test if tile can be seen through by the actor\n   * @param {Object} actor\n   * @returns {boolean}\n   */ isSeeThrough(actorUnused) {\n        if (this.obstacle || this.#role === $e5bc60fa707f771a$export$b57fd20cbd2711c3.ENTRANCE || this.#role === $e5bc60fa707f771a$export$b57fd20cbd2711c3.EXIT) return false;\n        return true;\n    }\n}\nclass $e5bc60fa707f771a$export$16ec26812de3ce7a {\n    /** @type {CanvasRenderingContext2D} */ #context;\n    /** @type {Tile[]} */ #tiles;\n    #tilesX;\n    #tilesY;\n    #gridSize;\n    #width;\n    #height;\n    /** @type {module:utils/tileMaps/pathFinder~Routes} */ #movementRoutes;\n    /** @type {Point[]} */ #movementGridPoints;\n    /** @type {Sprite} */ #movementTileHighlighter;\n    /** @type {Sprite} */ #reachableDoorTileHighlighter;\n    /** @type {Tile[]} */ #reachableDoorTileGridPoints;\n    /** @type {Tile} */ #entranceTile;\n    /** @type {Tile} */ #exitTile;\n    /** @type {Point} */ #entryGridPointByDoor;\n    /** @type {Point} */ #exitGridPointByDoor;\n    /** @type {Tile[]} */ #randomGround;\n    /** @type {RayTracer} */ #heroRayTracer;\n    /** @type {Point[]} */ #interactTileGridPoints;\n    /** @type {Sprite} */ #interactTileHighlighter;\n    /** @type {Actor} */ #heroActor;\n    /**\n   * Create tile map from 2D matrix\n   * @param {CanvasRenderingContext2D} context\n   * @param {TilePlan} plan\n   * @param {number} gridSize - in world coordinates\n   */ constructor(context, plan, gridSize, heroActor){\n        this.#heroActor = heroActor;\n        const matrix = plan.matrix;\n        this.#entryGridPointByDoor = plan.entryPointByDoor;\n        this.#exitGridPointByDoor = plan.exitPointByDoor;\n        this.#context = context;\n        this.#movementTileHighlighter = new (0, $5b82fcc8e5572650$export$3075603db8e6204c)({\n            renderer: new (0, $f1adbd10d5a753d6$export$bea6a7ef06354cc)(context, {\n                width: gridSize,\n                height: gridSize,\n                fillStyle: (0, $f5b04f63aedb55f0$export$1f4d983d2ef95b6b).MOVE_HIGHLIGHT_FILL,\n                strokeStyle: (0, $f5b04f63aedb55f0$export$1f4d983d2ef95b6b).MOVE_HIGHLIGHT_STROKE\n            })\n        });\n        this.#reachableDoorTileHighlighter = new (0, $5b82fcc8e5572650$export$3075603db8e6204c)({\n            renderer: new (0, $f1adbd10d5a753d6$export$bea6a7ef06354cc)(context, {\n                width: gridSize,\n                height: gridSize,\n                fillStyle: (0, $f5b04f63aedb55f0$export$1f4d983d2ef95b6b).DOOR_HIGHLIGHT_FILL,\n                strokeStyle: \"green\"\n            })\n        });\n        this.#interactTileHighlighter = new (0, $5b82fcc8e5572650$export$3075603db8e6204c)({\n            renderer: new (0, $f1adbd10d5a753d6$export$bea6a7ef06354cc)(context, {\n                width: gridSize,\n                height: gridSize,\n                fillStyle: (0, $f5b04f63aedb55f0$export$1f4d983d2ef95b6b).INTERACT_HIGHLIGHT_FILL,\n                strokeStyle: (0, $f5b04f63aedb55f0$export$1f4d983d2ef95b6b).INTERACT_HIGHLIGHT_STROKE\n            })\n        });\n        this.#gridSize = gridSize;\n        this.#tiles = [];\n        this.#tilesY = matrix.length;\n        this.#tilesX = matrix[0].length;\n        this.#width = gridSize * this.tilesX;\n        this.#height = gridSize * this.tilesY;\n        this.#randomGround = [];\n        matrix.forEach((row, rowIndex)=>{\n            const tileRow = [];\n            this.#tiles.push(tileRow);\n            row.forEach((tileDefn, columnIndex)=>{\n                if (tileDefn) {\n                    const sprite = new (0, $5b82fcc8e5572650$export$3075603db8e6204c)({\n                        renderer: new (0, $f1adbd10d5a753d6$export$c1626e6e036a584)(context, (0, $5840285c35321464$export$2e2bcd8739ae039).getSpriteBitmap(tileDefn.image))\n                    });\n                    const gridPoint = new (0, $90999bd6b14cd690$export$baf26146a414f24a)(columnIndex, rowIndex);\n                    const worldPoint = this.gridPointToWorldPoint(gridPoint);\n                    let tile = new $e5bc60fa707f771a$export$235cb65c20ad2b7(sprite, {\n                        obstacle: tileDefn.role === $e5bc60fa707f771a$export$b57fd20cbd2711c3.OBSTACLE,\n                        gridPoint: gridPoint,\n                        worldPoint: worldPoint,\n                        role: tileDefn.role\n                    });\n                    if (tileDefn.onClick) tile.setOnClick((target, point)=>this.#filterClick(target, point, tileDefn.onClick));\n                    this.processTileRole(tile);\n                    tileRow.push(tile);\n                    sprite.position.x = columnIndex * this.#gridSize + this.#gridSize / 2;\n                    sprite.position.y = rowIndex * this.#gridSize + this.#gridSize / 2;\n                } else tileRow.push(null);\n            });\n        });\n        if (!this.#entranceTile) {\n            (0, $2d5b4e7cb639ebe1$export$2e2bcd8739ae039).error(\"No entrance has been set. Setting to the first ground tile\");\n            this.#entranceTile = this.#randomGround[0];\n        }\n    }\n    /**\n   * Get tilemap dimensions in terms of number of tiles.\n   * @returns {module:utils/geometry~Dims2D}\n   */ getDimsInTiles() {\n        return {\n            width: this.#tilesX,\n            height: this.#tilesY\n        };\n    }\n    /**\n   * Process a tile's specific role.\n   * @param {Tile} tile\n   */ processTileRole(tile) {\n        switch(tile.role){\n            case $e5bc60fa707f771a$export$b57fd20cbd2711c3.ENTRANCE:\n                if (this.#entranceTile) {\n                    const gp = tile.gridPoint;\n                    (0, $2d5b4e7cb639ebe1$export$2e2bcd8739ae039).error(`Duplicate entrance found at (${gp.x}, ${gp.y}). Ignored.`);\n                } else this.#entranceTile = tile;\n                break;\n            case $e5bc60fa707f771a$export$b57fd20cbd2711c3.EXIT:\n                if (this.#exitTile) {\n                    const gp = tile.gridPoint;\n                    (0, $2d5b4e7cb639ebe1$export$2e2bcd8739ae039).error(`Duplicate exit found at (${gp.x}, ${gp.y}). Ignored.`);\n                } else this.#exitTile = tile;\n                break;\n            case $e5bc60fa707f771a$export$b57fd20cbd2711c3.GROUND:\n                if (!tile.gridPoint.coincident(this.#entryGridPointByDoor)) this.#randomGround.push(tile);\n                break;\n        }\n    }\n    /**\n   * Update method to render tiles.\n   * @param {number} deltaSeconds - elapsed time.\n   */ update(deltaSeconds) {\n        this.#setRayTracer();\n        const visibleGridPoints = this.getVisibleGridPointRect();\n        for(let row = visibleGridPoints.y; row <= visibleGridPoints.y + visibleGridPoints.height; row++){\n            for(let col = visibleGridPoints.x; col <= visibleGridPoints.x + visibleGridPoints.width; col++)if (this.#heroRayTracer?.isGridPointInRays(new (0, $90999bd6b14cd690$export$baf26146a414f24a)(col, row))) {\n                const tile = this.#tiles[row][col];\n                tile?.sprite.update(deltaSeconds);\n            }\n        }\n        this.#highlightTiles(deltaSeconds);\n    }\n    /**\n   * Set up the ray tracer if not already set.\n   */ #setRayTracer() {\n        if (this.#heroActor) {\n            if (!this.#heroRayTracer) this.#heroRayTracer = new (0, $2d040b97465ee48e$export$e832cee54e4e1a4d)(this, this.#heroActor);\n            const heroTile = this.getTileAtWorldPoint(this.#heroActor.position);\n            if (heroTile) {\n                const heroTileRole = heroTile.role;\n                if (heroTileRole != $e5bc60fa707f771a$export$b57fd20cbd2711c3.ENTRANCE && heroTileRole != $e5bc60fa707f771a$export$b57fd20cbd2711c3.EXIT) this.#heroRayTracer.findReachedTiles();\n            }\n        }\n    }\n    /**\n   * Get the tilemap bounds as a rectangle in gridpoints.\n   * @returns {Rectangle}\n   */ getMapGridPointRect() {\n        return new (0, $90999bd6b14cd690$export$4617fb02663045ef)(0, 0, this.#tilesX, this.#tilesY);\n    }\n    /**\n   * Get the visible bounds as a rectangle in gridpoints.\n   * @returns {Rectangle}\n   */ getVisibleGridPointRect() {\n        const visibleBounds = (0, $a1820c190f7a8b2e$export$2e2bcd8739ae039).getWorldInCanvasBounds();\n        const gridPointTL = this.worldPointToGrid(new (0, $90999bd6b14cd690$export$baf26146a414f24a)(visibleBounds.x, visibleBounds.y));\n        const gridPointBR = this.worldPointToGrid(new (0, $90999bd6b14cd690$export$baf26146a414f24a)(visibleBounds.x + visibleBounds.width, visibleBounds.y + visibleBounds.height));\n        const minCol = Math.max(0, gridPointTL.x);\n        const maxCol = Math.min(this.#tilesX - 1, gridPointBR.x);\n        const minRow = Math.max(0, gridPointTL.y);\n        const maxRow = Math.min(this.#tilesY - 1, gridPointBR.y);\n        return new (0, $90999bd6b14cd690$export$4617fb02663045ef)(minCol, minRow, maxCol - minCol, maxRow - minRow);\n    }\n    /**\n   * Get the gridsize\n   * @returns {number}\n   */ getGridSize() {\n        return this.#gridSize;\n    }\n    /** Get world dimensions.\n   * @returns {module:utils/geometry~Dims2D}\n   */ getDimensions() {\n        return {\n            width: this.#width,\n            height: this.#height\n        };\n    }\n    /**\n   * Get sprite at position.\n   * @param {Point} point - in world coordinates.\n   * @returns {Tile} null if no tile.\n   */ getTileAtWorldPoint(point) {\n        const gridPoint = this.worldPointToGrid(point);\n        return this.getTileAtGridPoint(gridPoint);\n    }\n    /**\n   * Get sprite at position.\n   * @param {Point} point - in grid coordinates.\n   * @returns {Tile} null if no tile.\n   */ getTileAtGridPoint(gridPoint) {\n        if (!gridPoint) return null;\n        const row = gridPoint.y;\n        const col = gridPoint.x;\n        if (col >= 0 && row >= 0 && col < this.#tilesX && row < this.#tilesY) return this.#tiles[row][col];\n        return null;\n    }\n    /**\n   * Convert world coordinate to mad grid reference.\n   * @param {Point} point\n   * @returns {Point}\n   */ worldPointToGrid(point) {\n        return new (0, $90999bd6b14cd690$export$baf26146a414f24a)(Math.floor(point.x / this.#gridSize), Math.floor(point.y / this.#gridSize));\n    }\n    /**\n   * Get a world point aligned to the centre of a tile\n   * @param {Point} point\n   */ gridAlignedWorldPoint(point) {\n        const gridPoint = this.worldPointToGrid(point);\n        return this.gridPointToWorldPoint(gridPoint);\n    }\n    /** Convert a point in tile coordinates to world coordinates.\n   * @param {Point}\n   * @returns {Point}\n   */ gridPointToWorldPoint(point) {\n        const halfGrid = 0.5 * this.#gridSize;\n        return new (0, $90999bd6b14cd690$export$baf26146a414f24a)(point.x * this.#gridSize + halfGrid, point.y * this.#gridSize + halfGrid);\n    }\n    /** Get the world position of the entrance. The default is the first tile if there\n   * is no door\n   * @returns {Point}\n   */ getWorldPositionOfTileByEntry() {\n        return this.gridPointToWorldPoint(this.#entryGridPointByDoor);\n    }\n    /** Get the grid position of the door at index. If there are no doors, then\n   * the entrance is the first ground tile\n   * @returns {Point}\n   */ getGridPositionOfEntrance() {\n        return this.#entranceTile.gridPoint;\n    }\n    /**\n   * Set the highlighted routes.\n   * @param {*} routes\n   */ setMovementRoutes(routes) {\n        this.#movementRoutes = routes;\n        if (routes) {\n            this.#movementGridPoints = new Map();\n            this.#movementRoutes.forEach((gridPoints)=>gridPoints.forEach((gridPoint)=>{\n                    this.#movementGridPoints.set(gridPoint, gridPoint);\n                }));\n        } else this.#movementGridPoints = null;\n    }\n    /**\n   * Set interaction tiles\n   * @param {Actor[]} actors - actors where a reaction can take place.\n   */ setInteractActors(actors) {\n        this.#interactTileGridPoints = [];\n        actors?.forEach((actor)=>{\n            if (actor.interaction.canReact()) this.#interactTileGridPoints.push(this.worldPointToGrid(actor.position));\n        });\n    }\n    /**\n   * Recalculate the reachable doors.\n   */ calcReachableDoors(heroPosition) {\n        this.#reachableDoorTileGridPoints = [];\n        const surrounds = this.getSurroundingTiles(this.worldPointToGrid(heroPosition));\n        [\n            surrounds.above,\n            surrounds.right,\n            surrounds.below,\n            surrounds.left\n        ].forEach((tile)=>{\n            if (tile.gridPoint.coincident(this.#exitTile.gridPoint)) this.#reachableDoorTileGridPoints.push(tile.gridPoint);\n            else if (tile.gridPoint.coincident(this.#entranceTile.gridPoint)) this.#reachableDoorTileGridPoints.push(tile.gridPoint);\n        });\n    }\n    /**\n   * Highlight routes marked by the highlighters. There are three possible highlights:\n   * movement, interaction and event tiles.\n   * @param {number} deltaSeconds\n   */ #highlightTiles(deltaSeconds) {\n        this.#highlightMovementTiles(deltaSeconds);\n        this.#highlightInteractTiles(deltaSeconds);\n        this.#highlightReachableDoorTiles(deltaSeconds);\n    }\n    /**\n   * Highlight movement routes.\n   * @param {number} deltaSeconds\n   */ #highlightMovementTiles(deltaSeconds) {\n        this.#movementGridPoints?.forEach((gridPoint)=>{\n            this.#movementTileHighlighter.position = this.gridPointToWorldPoint(gridPoint);\n            this.#movementTileHighlighter.update(deltaSeconds);\n        });\n    }\n    /**\n   * Highlight movement routes.\n   * @param {number} deltaSeconds\n   */ #highlightInteractTiles(deltaSeconds) {\n        this.#interactTileGridPoints?.forEach((gp)=>{\n            this.#interactTileHighlighter.position = this.gridPointToWorldPoint(gp);\n            this.#interactTileHighlighter.update(deltaSeconds);\n        });\n    }\n    /**\n   * Highlight reachable door tiles.\n   * @param {number} deltaSeconds\n   */ #highlightReachableDoorTiles(deltaSeconds) {\n        this.#reachableDoorTileGridPoints?.forEach((gp)=>{\n            this.#reachableDoorTileHighlighter.position = this.gridPointToWorldPoint(gp);\n            this.#reachableDoorTileHighlighter.update(deltaSeconds);\n        });\n    }\n    /**\n   * Handle a tile click.\n   * To be actioned a tile must be in the highlightedRoutes\n   * @param {Sprite} target - the sprite that was clicked. This prevents the need\n   * to use 'this' which may not be correct in the context.\n   * @param {Point} point - the position in the world that was clicked\n   * @param {module:utils/sprites/sprite~SpriteClickHandler} clickHandler\n   */ #filterClick(target, point, clickHandler) {\n        const gridPoint = this.worldPointToGrid(point);\n        let occupant;\n        const occupants = target.getOccupants();\n        if (occupants.size > 0) occupant = occupants.values().next().value;\n        const movement = this.#movementRoutes?.containsGridPoint(gridPoint);\n        let interaction = false;\n        if (this.#interactTileGridPoints) {\n            for (const point of this.#interactTileGridPoints)if (point.isCoincident(gridPoint)) {\n                interaction = true;\n                break;\n            }\n        }\n        const isDeadProp = !occupant?.alive && occupant?.isProp();\n        if (movement && interaction || isDeadProp) {\n            clickHandler(target, point, {\n                filter: $e5bc60fa707f771a$export$ea490c48f1c71643.MOVE_OR_INTERACT_TILE,\n                occupant: occupant\n            });\n            return;\n        } else if (movement) {\n            clickHandler(target, point, {\n                filter: $e5bc60fa707f771a$export$ea490c48f1c71643.MOVEMENT_TILE,\n                occupant: occupant\n            });\n            return;\n        } else if (interaction) {\n            clickHandler(target, point, {\n                filter: $e5bc60fa707f771a$export$ea490c48f1c71643.INTERACT_TILE,\n                occupant: occupant\n            });\n            return;\n        }\n        if (this.#reachableDoorTileGridPoints) {\n            for (const gp of this.#reachableDoorTileGridPoints)if (gp.isCoincident(gridPoint)) {\n                clickHandler(target, point, {\n                    filter: $e5bc60fa707f771a$export$ea490c48f1c71643.INTERACT_TILE\n                });\n                return;\n            }\n        }\n        const heroGridPoint = this.worldPointToGrid(this.#heroActor.position);\n        if (gridPoint.coincident(heroGridPoint)) {\n            clickHandler(target, point, {\n                occupant: this.#heroActor,\n                filter: $e5bc60fa707f771a$export$ea490c48f1c71643.OCCUPIED_TILE\n            });\n            return;\n        }\n        if (occupant) clickHandler(target, point, {\n            occupant: occupant,\n            filter: $e5bc60fa707f771a$export$ea490c48f1c71643.OCCUPIED_TILE\n        });\n        (0, $2d5b4e7cb639ebe1$export$2e2bcd8739ae039).debug(\"Ignore click outside of highlighted area\");\n    }\n    /**\n   * Get waypoints to reach destination grid point\n   * @param {Point} worldPoint - destination\n   * @returns {Point[]} null if no route currently found.\n   */ getWaypointsToWorldPoint(worldPoint) {\n        const destination = this.worldPointToGrid(worldPoint);\n        return this.#movementRoutes?.getWaypointsAsWorldPoints(destination);\n    }\n    /**\n   * Get a random unoccupied ground tile.\n   * @returns {Tile} null if no free ground tile.\n   */ getRandomFreeGroundTile() {\n        (0, $27af28d7e434b74b$export$f3448602f079b6d0)(this.#randomGround);\n        for (const tile of this.#randomGround){\n            if (!tile.isOccupied()) return tile;\n        }\n        return null;\n    }\n    /**\n   * Test if point is passable.\n   * @param {Point} gridPoint - row and col coordinates.\n   * @param {module:players/actors~Actor} actor - actor trying to pass\n   * @returns {boolean}\n   */ isGridPointPassableByActor(gridPoint, actor) {\n        const tile = this.getTileAtGridPoint(gridPoint);\n        if (!tile) return false;\n        return tile.isPassableByActor(actor);\n    }\n    /**\n   * Test if tile can be occupied by the actor\n   * @param {Point} gridPoint - row and col coordinates.\n   * @param {module:players/actors~Actor} actor - actor trying to occupy location\n   * @returns {boolean}\n   */ canGridPointBeOccupiedByActor(gridPoint, actor) {\n        const tile = this.getTileAtGridPoint(gridPoint);\n        if (!tile) return false;\n        return tile.canBeOccupiedByActor(actor);\n    }\n    /**\n   * Is the grid point visible by the hero.\n   * @param {Point} gridPoint\n   * @returns {boolean}\n   */ canHeroSeeGridPoint(gridPoint) {\n        return this.#heroRayTracer?.isGridPointInRays(gridPoint) ?? true;\n    }\n    /**\n   * Test if point can be seen through.\n   * @param {Point} gridPoint - row and col coordinates.\n   * @param {module:players/actors~Actor} actor - actor trying to see\n   * @returns {boolean}\n   */ isSeeThrough(gridPoint, actor) {\n        const tile = this.getTileAtGridPoint(gridPoint);\n        if (!tile) return true;\n        return tile.isSeeThrough(actor);\n    }\n    /**\n   * Get the tiles surrounding a reference.\n   * @param {Point} gridPoint\n   * @returns {module:utils/arrays/arrayManip~Surrounds}\n   */ getSurroundingTiles(gridPoint) {\n        return (0, $27af28d7e434b74b$export$7c548b14ef6e7713)(this.#tiles, gridPoint.y, gridPoint.x);\n    }\n    /**\n   * Get tiles radiating up and down.\n   * @param {Point} gridPoint\n   * @param {number} [distance = 1] - in tiles.\n   * @returns {Tiles[]}\n   */ getRadiatingUpAndDown(gridPoint, distance = 1) {\n        return (0, $27af28d7e434b74b$export$49e2f27690cc6008)(this.#tiles, {\n            rowIndex: gridPoint.y,\n            columnIndex: gridPoint.x,\n            distance: distance,\n            filter: (tile)=>tile.role === $e5bc60fa707f771a$export$b57fd20cbd2711c3.GROUND\n        });\n    }\n    /**\n   * Removed occupant from the list of occupants\n   * of the tile at the grid point.\n   * @param {Object} occupant\n   * @param {Point} gridPoint\n   */ deleteOccupancyOfGridPoint(occupant, gridPoint) {\n        this.getTileAtGridPoint(gridPoint)?.deleteOccupant(occupant);\n    }\n    /**\n   * Set the object's tile occupancy. It is removed from the list of occupants\n   * of the tile at the previous point and added to those of the next.\n   * @param {Object} occupant\n   * @param {Point} oldGridPoint\n   * @param {Point} newGridPoint\n   */ moveTileOccupancyGridPoint(occupant, oldGridPoint, newGridPoint) {\n        if (newGridPoint !== oldGridPoint) {\n            this.getTileAtGridPoint(oldGridPoint)?.deleteOccupant(occupant);\n            this.getTileAtGridPoint(newGridPoint)?.addOccupant(occupant);\n        }\n    }\n    /**\n   * Get coincident actors.\n   * @param {Actor} actor\n   * @returns {Actor[]}\n   */ getCoincidentActors(actor) {\n        const tile = this.getTileAtWorldPoint(actor.position);\n        return tile.getOccupants();\n    }\n    /**\n   * Get all the participants around an actor. Diagonals are not included in\n   * potential participants.\n   * @param {Actor} actor\n   * @returns {Actor[]}\n   */ getParticipants(actor) {\n        const participants = [];\n        const surrounds = this.getSurroundingTiles(this.worldPointToGrid(actor.position));\n        const tiles = [\n            surrounds.above,\n            surrounds.right,\n            surrounds.below,\n            surrounds.left\n        ];\n        tiles.forEach((tile)=>{\n            let tileOccupants = tile?.getOccupants();\n            tileOccupants?.forEach((occupant)=>{\n                participants.push(occupant);\n            });\n        });\n        return participants;\n    }\n}\n\n\n/**\n * @file Manage the game turns. The turnManager is a state machine and implemented\n * as a singleton.\n *\n * @module gameManagement/turnManager\n */ /**\n * License {@link https://opensource.org/license/mit/|MIT}\n *\n * Copyright 2024 Steve Butler\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the “Software”), to deal in\n * the Software without restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n * Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */ \n\n\n\n\n\n\n/**\n * @file Timers\n *\n * @module utils/timers\n */ /**\n * License {@link https://opensource.org/license/mit/|MIT}\n *\n * Copyright 2024 Steve Butler (henspace.com).\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the “Software”), to deal in\n * the Software without restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n * Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */ /**\n *\n * @param {number} secs\n * @returns {Promise} fulfils to null\n */ function $f65da51c58cb4dd3$export$229c72e5fdee233b(secs) {\n    return new Promise((resolve)=>{\n        setTimeout(()=>resolve(), secs * 1000);\n    });\n}\n\n\n\n\n\n/**\n * @file Main menu\n *\n * @module menus/mainMenu\n */ /**\n * License {@link https://opensource.org/license/mit/|MIT}\n *\n * Copyright 2024 Steve Butler (henspace.com).\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the “Software”), to deal in\n * the Software without restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n * Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */ \n\n/**\n * @file Settings dialog\n *\n * @module dialogs/settingsDialog\n */ /**\n * License {@link https://opensource.org/license/mit/|MIT}\n *\n * Copyright 2024 Steve Butler (henspace.com).\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the “Software”), to deal in\n * the Software without restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n * Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */ \n\n\n\n\n\n/** Settings */ const $76f86892cf60c694$var$SETTINGS = [\n    {\n        id: \"MUSIC_VOLUME\",\n        labelKey: \"CONTROL MUSIC VOLUME\",\n        defValue: 50,\n        controlType: (0, $de9cad813c8cf1e8$export$82f9c7d14b0424b).RANGE,\n        persistent: true,\n        action: null,\n        onChange: (value)=>(0, $4d3fcc3866f168b9$export$2e2bcd8739ae039).setMusicVolumePercent(value)\n    },\n    {\n        id: \"EFFECTS_VOLUME\",\n        labelKey: \"CONTROL EFFECTS VOLUME\",\n        defValue: 50,\n        controlType: (0, $de9cad813c8cf1e8$export$82f9c7d14b0424b).RANGE,\n        persistent: true,\n        action: null,\n        onChange: (value)=>{\n            (0, $4d3fcc3866f168b9$export$2e2bcd8739ae039).setEffectsVolumePercent(value);\n            (0, $4d3fcc3866f168b9$export$2e2bcd8739ae039).playEffect(\"PUNCH\");\n        }\n    }\n];\nfunction $76f86892cf60c694$export$7da80b63b5cb0fd0() {\n    const controls = [];\n    $76f86892cf60c694$var$SETTINGS.forEach((setting)=>{\n        controls.push((0, $de9cad813c8cf1e8$export$b42320c90cd2b176)(setting));\n    });\n    return (0, $81dd6b24526c5347$export$2e2bcd8739ae039).showControlsDialog((0, $2a5626561236b7e1$export$a7357cdd1f0b0168)`DIALOG TITLE SETTINGS`, {\n        actionButtons: controls,\n        className: \"door\"\n    });\n}\nfunction $76f86892cf60c694$export$ef0c17c6967bb348() {\n    $76f86892cf60c694$var$SETTINGS.forEach((setting)=>{\n        setting.label = (0, $2a5626561236b7e1$export$af7faffe10421f14).getText(setting.labelKey);\n        if (setting.persistent & setting.onChange) {\n            const value = (0, $3474d2bbacd35b48$export$2e2bcd8739ae039).get(setting.id, setting.defValue);\n            setting.onChange(value);\n        }\n    });\n}\n\n\n\n/**\n * @file Dialog to show the best adventure\n *\n * @module dialogs\\bestAdventureDialog\n */ /**\n * license {@link https://opensource.org/license/mit/|MIT}\n * Copyright 2024 Steve Butler (henspace.com).\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the “Software”), to deal in\n * the Software without restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n * Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */ \n\n\n/**\n * @file Saver for games\n *\n * @module gameManagement\\gameSaver\n */ /**\n * license {@link https://opensource.org/license/mit/|MIT}\n * Copyright 2024 Steve Butler (henspace.com).\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the “Software”), to deal in\n * the Software without restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n * Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */ \n\n\n/**\n * @file Actor and artefact builder\n *\n * @module dnd/almanacs/actorBuilder\n */ /**\n * license {@link https://opensource.org/license/mit/|MIT}\n * Copyright 2024 Steve Butler (henspace.com).\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the “Software”), to deal in\n * the Software without restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n * Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */ \n\n\n\n\n\n\n\n/**\n * @file Standard animation keys.\n *\n * @module scriptReaders/actorAnimationKeys\n */ /**\n * License {@link https://opensource.org/license/mit/|MIT}\n *\n * Copyright 2024 Steve Butler (henspace.com).\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the “Software”), to deal in\n * the Software without restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n * Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */ \n\n/**\n * @typedef {Object} AnimationDefinition\n * @property {string} keyName - animation key name.\n * @property {string} suffix - appended to the image name for this animation\n * @property {Object} options - passed to AnimatedImage constructor\n */ /**\n * @typedef {Object<string, AnimationDefinition>} AnimationDefinitions\n */ /**\n * Standard animation definitions for an actor.\n * It is assumed that animation images are formed from a root name.\n * @type {AnimationDefinitions}\n */ const $cfb969eb0974fd3f$var$PeripateticAnimationDefns = {\n    DEAD: {\n        keyName: \"DEAD\",\n        suffix: \"dead\",\n        options: {\n            framePeriodMs: 100,\n            loopMethod: (0, $af167e06ffca879a$export$cab6ba75b045ad71).STOP\n        }\n    },\n    IDLE: {\n        keyName: \"IDLE\",\n        suffix: \"idle\",\n        options: {\n            framePeriodMs: 300,\n            loopMethod: (0, $af167e06ffca879a$export$cab6ba75b045ad71).REVERSE\n        }\n    },\n    WALK_NORTH: {\n        keyName: \"WALK_N\",\n        suffix: \"walk-n\",\n        options: {\n            framePeriodMs: 100,\n            loopMethod: (0, $af167e06ffca879a$export$cab6ba75b045ad71).REVERSE\n        }\n    },\n    WALK_EAST: {\n        keyName: \"WALK_E\",\n        suffix: \"walk-e\",\n        options: {\n            framePeriodMs: 100,\n            loopMethod: (0, $af167e06ffca879a$export$cab6ba75b045ad71).REVERSE\n        }\n    },\n    WALK_SOUTH: {\n        keyName: \"WALK_S\",\n        suffix: \"walk-s\",\n        options: {\n            framePeriodMs: 100,\n            loopMethod: (0, $af167e06ffca879a$export$cab6ba75b045ad71).REVERSE\n        }\n    },\n    WALK_WEST: {\n        keyName: \"WALK_W\",\n        suffix: \"walk-w\",\n        options: {\n            framePeriodMs: 100,\n            loopMethod: (0, $af167e06ffca879a$export$cab6ba75b045ad71).REVERSE\n        }\n    }\n};\n/**\n * Standard animation definitions for an actor.\n * It is assumed that animation images are formed from a root nam\n */ const $cfb969eb0974fd3f$var$ArtefactAnimationDefns = {\n    DEAD: {\n        keyName: \"DEAD\",\n        suffix: \"dead\",\n        options: {\n            framePeriodMs: 100,\n            loopMethod: (0, $af167e06ffca879a$export$cab6ba75b045ad71).STOP\n        }\n    },\n    IDLE: {\n        keyName: \"IDLE\",\n        suffix: \"idle\",\n        options: {\n            framePeriodMs: 300,\n            loopMethod: (0, $af167e06ffca879a$export$cab6ba75b045ad71).REVERSE\n        }\n    }\n};\n/**\n *\n */ class $cfb969eb0974fd3f$var$AnimationKeys {\n    /** @type {AnimationDefinitions} */ #definitions;\n    /**\n   * @param {AnimationDefinitions[]} definitions\n   */ constructor(definitions){\n        this.#definitions = definitions;\n    }\n    /**\n   * Form the frame name for an image\n   * @param {string} key - the key name for the animation.\n   * @param {string} imageName\n   */ #formFrameNameRoot(key, imageName) {\n        const suffix = this.#definitions[key]?.suffix;\n        if (!suffix) throw new Error(`Attempt made to use invalid standard animation key of '${key}'`);\n        return `${imageName}-${suffix}`;\n    }\n    /**\n   * Get the key name.\n   * @param {string} key\n   * @return {string}\n   */ getKeyName(key) {\n        return this.#definitions[key].keyName;\n    }\n    /**\n   * Add all animations to the keyed animation.\n   * @param {KeyedAnimatedImages} keyedAnimations\n   * @param {string} imageName - root name for the animation image.\n   */ addAllToKeyedAnimation(keyedAnimations, imageName) {\n        for(const key in this.#definitions){\n            const anim = this.#definitions[key];\n            keyedAnimations.addAnimatedImage(this.#definitions[key].keyName, new (0, $7f41e47310ae6543$export$9d5734c725768403)({\n                prefix: this.#formFrameNameRoot(key, imageName),\n                suffix: \".png\",\n                startIndex: 0,\n                padding: 2\n            }, anim.options));\n        }\n        keyedAnimations.setCurrentKey(this.#definitions.IDLE.keyName);\n    }\n}\n/** Object to access standard animations. */ const $cfb969eb0974fd3f$var$StdAnimations = {\n    peripatetic: new $cfb969eb0974fd3f$var$AnimationKeys($cfb969eb0974fd3f$var$PeripateticAnimationDefns),\n    artefact: new $cfb969eb0974fd3f$var$AnimationKeys($cfb969eb0974fd3f$var$ArtefactAnimationDefns)\n};\nvar $cfb969eb0974fd3f$export$2e2bcd8739ae039 = $cfb969eb0974fd3f$var$StdAnimations;\n\n\n\n\n\n\n\n\n\n/**\n * @file Name generator\n *\n * @module utils\\nameGenerator\n */ /**\n * license {@link https://opensource.org/license/mit/|MIT}\n * Copyright 2024 Steve Butler (henspace.com).\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the “Software”), to deal in\n * the Software without restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n * Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */ \nconst $d7e9a662a8cbeae3$var$VOWEL_SOUNDS = [\n    \"a\",\n    \"e\",\n    \"i\",\n    \"o\",\n    \"u\",\n    \"ee\",\n    \"oo\"\n];\nconst $d7e9a662a8cbeae3$var$START_SOUNDS = [\n    \"b\",\n    \"br\",\n    \"c\",\n    \"ch\",\n    \"chr\",\n    \"cr\",\n    \"d\",\n    \"dr\",\n    \"f\",\n    \"fl\",\n    \"fr\",\n    \"g\",\n    \"gl\",\n    \"gr\",\n    \"h\",\n    \"j\",\n    \"k\",\n    \"kr\",\n    \"kl\",\n    \"l\",\n    \"m\",\n    \"n\",\n    \"p\",\n    \"pl\",\n    \"pr\",\n    \"qu\",\n    \"r\",\n    \"s\",\n    \"sch\",\n    \"sh\",\n    \"st\",\n    \"t\",\n    \"th\",\n    \"tr\",\n    \"v\",\n    \"w\",\n    \"y\",\n    \"z\"\n];\nconst $d7e9a662a8cbeae3$var$END_SOUNDS = [\n    \"b\",\n    \"bbey\",\n    \"bble\",\n    \"bboy\",\n    \"bby\",\n    \"c\",\n    \"ch\",\n    \"ck\",\n    \"cky\",\n    \"ct\",\n    \"d\",\n    \"f\",\n    \"ff\",\n    \"ffle\",\n    \"ffy\",\n    \"ffey\",\n    \"g\",\n    \"ge\",\n    \"gey\",\n    \"gle\",\n    \"k\",\n    \"l\",\n    \"ll\",\n    \"lly\",\n    \"lley\",\n    \"m\",\n    \"n\",\n    \"ngle\",\n    \"nny\",\n    \"p\",\n    \"r\",\n    \"s\",\n    \"sk\",\n    \"ss\",\n    \"ssy\",\n    \"st\",\n    \"sty\",\n    \"t\",\n    \"th\",\n    \"thy\",\n    \"v\",\n    \"w\",\n    \"y\",\n    \"z\",\n    \"zzle\",\n    \"zzy\"\n];\nfunction $d7e9a662a8cbeae3$export$899caa88e79f0830() {\n    let name = $05d58a132d6b5767$export$a885de3766ef0b4c($d7e9a662a8cbeae3$var$START_SOUNDS) + $05d58a132d6b5767$export$a885de3766ef0b4c($d7e9a662a8cbeae3$var$VOWEL_SOUNDS) + $05d58a132d6b5767$export$a885de3766ef0b4c($d7e9a662a8cbeae3$var$START_SOUNDS) + $05d58a132d6b5767$export$a885de3766ef0b4c($d7e9a662a8cbeae3$var$VOWEL_SOUNDS) + $05d58a132d6b5767$export$a885de3766ef0b4c($d7e9a662a8cbeae3$var$END_SOUNDS);\n    return name.charAt(0).toUpperCase() + name.substring(1);\n}\nfunction $d7e9a662a8cbeae3$export$7bca63501c2c13de() {\n    return `${$d7e9a662a8cbeae3$export$899caa88e79f0830()} ${$d7e9a662a8cbeae3$export$899caa88e79f0830()}`;\n}\n\n\n/**\n * Specialist traits renderer\n */ class $ba30ae746a7f0f6d$var$TraitsRenderer extends $f1adbd10d5a753d6$export$f1bb2dcf27836475 {\n    /** @type {Actor} */ actor;\n    /**\n   * The number of gauges is determined by the maximum length of the fill styles and\n   * stroke styles\n   * @param {CanvasRenderingContext2D} context\n   * @param {Object} options\n   * @param {number} options.tileSize\n   * @param {string[]} options.fillStyles\n   * @param {string[]} options.strokeStyles\n   */ constructor(context, options){\n        super(context, options);\n    }\n    /**\n   * Render the sprite.\n   * @param {module:utils/geometry~Position} position - this will have been adjusted to the screen.\n   */ render(position) {\n        if (this.actor && this.actor.traits) {\n            const hp = this.actor.traits.getInt(\"HP\", 0);\n            const hpMax = this.actor.traits.getInt(\"HP_MAX\", 1);\n            this.setLevel(0, hp / hpMax);\n        }\n        super.render(position);\n    }\n}\n/**\n * Animation that automatically adjusts the animation based on the actor's velocity\n * and alive property.\n */ class $ba30ae746a7f0f6d$var$ActorStateAnimator extends $7f41e47310ae6543$export$7ded0ab8d4b1a54f {\n    /** @type {Actor} */ #actor;\n    /** Number from eight point compass. */ #compassDir;\n    /** @type{boolean}*/ #aliveStatus;\n    /** @type {animation.AnimatedImage} */ #fallbackImage;\n    /**\n   * Create the keyed animated image\n   * @param {string} key\n   * @param {AnimatedImage} animatedImage\n   */ constructor(key, animatedImage){\n        super(key, animatedImage);\n        this.#compassDir = $05d58a132d6b5767$export$624e7ee3f0468367.NONE;\n        this.#fallbackImage = animatedImage;\n    }\n    /**\n   * Set the actor who's velocity will be monitored.\n   * @param {Actor} actor\n   */ setActor(actor) {\n        this.#actor = actor;\n        this.#aliveStatus = this.#actor.alive;\n    }\n    /** override */ getCurrentFrame() {\n        const dir = this.#getCurrentDirection();\n        if (dir !== this.#compassDir || this.#aliveStatus != this.#actor?.alive) {\n            this.#compassDir = dir;\n            this.#aliveStatus = this.#actor?.alive;\n            this.#setAnimationForState();\n        }\n        const frame = super.getCurrentFrame();\n        return frame ?? this.#fallbackImage.getCurrentFrame() ?? (0, $5840285c35321464$export$2e2bcd8739ae039).getUndefinedBitmap();\n    }\n    #getCurrentDirection() {\n        if (!this.#actor || this.#actor.velocity.isZero(0.1)) return $05d58a132d6b5767$export$624e7ee3f0468367.NONE;\n        else {\n            const dir = this.#actor.velocity.getScreenDirection();\n            return $05d58a132d6b5767$export$cf2deb104c051cb7(dir);\n        }\n    }\n    /**\n   * Set the appropriate animation based on the the current compass direction.\n   * Only four points supported.\n   */ #setAnimationForState() {\n        const reverse = this.#actor.disengaging;\n        if (!this.#actor.alive) return this.setCurrentKey((0, $cfb969eb0974fd3f$export$2e2bcd8739ae039).peripatetic.getKeyName(\"DEAD\"));\n        switch(this.#compassDir){\n            case $05d58a132d6b5767$export$624e7ee3f0468367.NONE:\n                this.setCurrentKey((0, $cfb969eb0974fd3f$export$2e2bcd8739ae039).peripatetic.getKeyName(\"IDLE\"));\n                break;\n            case $05d58a132d6b5767$export$624e7ee3f0468367.E:\n                this.setCurrentKey((0, $cfb969eb0974fd3f$export$2e2bcd8739ae039).peripatetic.getKeyName(reverse ? \"WALK_WEST\" : \"WALK_EAST\"));\n                break;\n            case $05d58a132d6b5767$export$624e7ee3f0468367.N:\n            case $05d58a132d6b5767$export$624e7ee3f0468367.NW:\n            case $05d58a132d6b5767$export$624e7ee3f0468367.NE:\n                this.setCurrentKey((0, $cfb969eb0974fd3f$export$2e2bcd8739ae039).peripatetic.getKeyName(reverse ? \"WALK_SOUTH\" : \"WALK_NORTH\"));\n                break;\n            case $05d58a132d6b5767$export$624e7ee3f0468367.W:\n                this.setCurrentKey((0, $cfb969eb0974fd3f$export$2e2bcd8739ae039).peripatetic.getKeyName(reverse ? \"WALK_EAST\" : \"WALK_WEST\"));\n                break;\n            default:\n                this.setCurrentKey((0, $cfb969eb0974fd3f$export$2e2bcd8739ae039).peripatetic.getKeyName(reverse ? \"WALK_NORTH\" : \"WALK_SOUTH\"));\n                break;\n        }\n    }\n}\n/**\n * Create set of standard animations.\n * @param {string} imageName - root name for images.\n * @returns {animation.KeyedAnimatedImages}\n */ function $ba30ae746a7f0f6d$var$createStandardKeyFrames(imageName) {\n    const keyedAnimations = new $ba30ae746a7f0f6d$var$ActorStateAnimator(\"still\", new $7f41e47310ae6543$export$9d5734c725768403(`${imageName}.png`));\n    (0, $cfb969eb0974fd3f$export$2e2bcd8739ae039).peripatetic.addAllToKeyedAnimation(keyedAnimations, imageName);\n    return keyedAnimations;\n}\n/**\n * Create set of standard artefact animations.\n * @returns {animation.KeyedAnimatedImages}\n */ function $ba30ae746a7f0f6d$var$createArtefactKeyFrames(imageName) {\n    const keyedAnimations = new $ba30ae746a7f0f6d$var$ActorStateAnimator(\"still\", new $7f41e47310ae6543$export$9d5734c725768403(`${imageName}.png`));\n    (0, $cfb969eb0974fd3f$export$2e2bcd8739ae039).artefact.addAllToKeyedAnimation(keyedAnimations, imageName);\n    return keyedAnimations;\n}\n/**\n * Create the actor.\n * @param {string} imageName - no extension\n * @param {string} iconImageName - alternative image used for dialogs. Falls back to imageName. png extension automatically added.\n * @param {module:dnd/traits~Traits} traits\n * @param {module:dnd/almanacs/almanacs~AlmanacEntry} almanacEntry\n * @returns {Actor}\n */ function $ba30ae746a7f0f6d$var$createActor(imageName, iconImageName, traits, almanacEntry) {\n    const keyedAnimation = $ba30ae746a7f0f6d$var$createStandardKeyFrames(imageName);\n    const imageRenderer = new $f1adbd10d5a753d6$export$c1626e6e036a584((0, $a1820c190f7a8b2e$export$2e2bcd8739ae039).getContext2D(), keyedAnimation);\n    let renderers;\n    let traitsRenderer;\n    if (traits.get(\"MOVE\") !== (0, $9e949bc7e910e09d$export$be204faa7b4ee90a).ORGANIC) {\n        traitsRenderer = new $ba30ae746a7f0f6d$var$TraitsRenderer((0, $a1820c190f7a8b2e$export$2e2bcd8739ae039).getContext2D(), {\n            tileSize: (0, $e49c2c8387e6101d$export$2e2bcd8739ae039).TILE_SIZE - 2,\n            fillStyles: [\n                (0, $f5b04f63aedb55f0$export$1f4d983d2ef95b6b).HP_GAUGE\n            ],\n            strokeStyles: []\n        });\n        renderers = [\n            traitsRenderer,\n            imageRenderer\n        ];\n    } else renderers = [\n        imageRenderer\n    ];\n    const actor = new (0, $9e949bc7e910e09d$export$f73d3eb6fd876d80)(new (0, $5b82fcc8e5572650$export$3075603db8e6204c)({\n        renderer: renderers\n    }), almanacEntry.type);\n    keyedAnimation.setActor(actor);\n    if (traitsRenderer) traitsRenderer.actor = actor;\n    actor.position = new (0, $90999bd6b14cd690$export$13807d9ee5a34a42)((0, $e49c2c8387e6101d$export$2e2bcd8739ae039).TILE_SIZE, (0, $e49c2c8387e6101d$export$2e2bcd8739ae039).TILE_SIZE, 0);\n    actor.almanacEntry = almanacEntry;\n    actor.traits = traits;\n    actor.maxTilesPerMove = traits.getValueInFeetInTiles(\"SPEED\", 1);\n    actor.velocity = {\n        x: 0,\n        y: 0,\n        rotation: 0\n    };\n    actor.iconImageName = iconImageName ? `${iconImageName}.png` : `${imageName}.png`;\n    return actor;\n}\n/**\n * Create the artefact holder.\n * @param {string} imageName - no extension\n * @param {module:dnd/traits~Traits} traits\n * @param {module:dnd/almanacs/almanacs~AlmanacEntry} almanacEntry\n * @returns {Actor}\n */ function $ba30ae746a7f0f6d$var$createArtefactHolder(imageName, traits, almanacEntry) {\n    const keyedAnimation = $ba30ae746a7f0f6d$var$createArtefactKeyFrames(imageName);\n    const imageRenderer = new $f1adbd10d5a753d6$export$c1626e6e036a584((0, $a1820c190f7a8b2e$export$2e2bcd8739ae039).getContext2D(), keyedAnimation);\n    const actor = new (0, $9e949bc7e910e09d$export$f73d3eb6fd876d80)(new (0, $5b82fcc8e5572650$export$3075603db8e6204c)({\n        renderer: [\n            imageRenderer\n        ]\n    }), almanacEntry.type === \"SPELL\" ? (0, $9e949bc7e910e09d$export$ec2f7d5cc9321319).PROP : (0, $9e949bc7e910e09d$export$ec2f7d5cc9321319).HIDDEN_ARTEFACT);\n    keyedAnimation.setActor(actor);\n    actor.position = new (0, $90999bd6b14cd690$export$13807d9ee5a34a42)((0, $e49c2c8387e6101d$export$2e2bcd8739ae039).TILE_SIZE, (0, $e49c2c8387e6101d$export$2e2bcd8739ae039).TILE_SIZE, 0);\n    actor.velocity = {\n        x: 0,\n        y: 0,\n        rotation: 0\n    };\n    actor.interaction = new (0, $31cf9b99c7a79e42$export$13d2779752f0bd8f)(actor);\n    actor.iconImageName = `${imageName}.png`;\n    actor.traits = traits ?? new (0, $95c3fa23148200d5$export$939a756f171fd090)();\n    return actor;\n}\n/**\n * Create animated enemy\n * @param {string} imageName - without extension\n * @param {string} iconImageName - without extension. Name of icon for dialogs.\n * @param {module:dnd/traits~Traits} traits\n * @param {module:dnd/almanacs/almanacs~AlmanacEntry} almanacEntry\n * @returns {Actor}\n */ function $ba30ae746a7f0f6d$var$createEnemy(imageName, iconImageName, traits, almanacEntry) {\n    const actor = $ba30ae746a7f0f6d$var$createActor(imageName, iconImageName, traits, almanacEntry);\n    if (actor.isOrganic()) {\n        actor.interaction = new (0, $31cf9b99c7a79e42$export$bbfcae392104b4c9)(actor);\n        actor.obstacle = false;\n    } else actor.interaction = new (0, $31cf9b99c7a79e42$export$56070c78bbcda189)(actor);\n    return actor;\n}\n/**\n * Create animated prop\n * @param {string} imageName - without extension\n * @param {string} iconImageName - without extension. Name of icon for dialogs.\n * @param {module:dnd/traits~Traits} traits\n * @param {module:dnd/almanacs/almanacs~AlmanacEntry} almanacEntry\n * @returns {Actor}\n */ function $ba30ae746a7f0f6d$var$createProp(imageName, iconImageName, traits, almanacEntry) {\n    const actor = $ba30ae746a7f0f6d$var$createActor(imageName, iconImageName, traits, almanacEntry);\n    actor.interaction = new (0, $31cf9b99c7a79e42$export$13d2779752f0bd8f)(actor);\n    return actor;\n}\n/**\n * Create animated trader\n * @param {string} imageName - without extension\n * @param {string} iconImageName - alternative image used for dialogs. Fallsback to imageName. png extension automatically added.\n * @param {module:dnd/traits~Traits} traits\n * @param {module:dnd/almanacs/almanacs~AlmanacEntry} almanacEntry\n * @returns {Actor}\n */ function $ba30ae746a7f0f6d$var$createTrader(imageName, iconImageName, traits, actorType) {\n    const actor = $ba30ae746a7f0f6d$var$createActor(imageName, iconImageName, traits, actorType);\n    actor.interaction = new (0, $31cf9b99c7a79e42$export$366210f9de782ba6)(actor);\n    return actor;\n}\n/**\n * @param {Actor} actor\n * @param {string[]} equipmentIds - ids of artefacts in the artefacts almanac.\n */ function $ba30ae746a7f0f6d$var$equipActor(actor, equipmentIds) {\n    if (!equipmentIds) return;\n    for (const id of equipmentIds){\n        const artefactEntry = (0, $4d7b11e4136f6d93$export$62947dea9802b3b0).findById(id, [\n            \"MONEY\",\n            \"WEAPONS\",\n            \"ARMOUR\"\n        ]);\n        if (artefactEntry) {\n            const artefact = (0, $35cb0fa7cb9f77a0$export$f71b2f640dbd3eb)(artefactEntry);\n            if (artefact.equipStoreType) actor.storeManager.equip(artefact, {\n                direct: true\n            });\n            else actor.storeManager.stash(artefact, {\n                direct: true\n            });\n        } else (0, $2d5b4e7cb639ebe1$export$2e2bcd8739ae039).error(`Cannot find ${id} artefact in almanac to equip actor.`);\n    }\n}\nfunction $ba30ae746a7f0f6d$export$260a0189ba712b47(almanacEntry, traitsString) {\n    const traits = new (0, $95c3fa23148200d5$export$939a756f171fd090)(traitsString ?? almanacEntry.traitsString);\n    if (!traits.get(\"NAME\")) traits.set(\"NAME\", almanacEntry.name);\n    let actor;\n    switch(almanacEntry.type){\n        case (0, $9e949bc7e910e09d$export$ec2f7d5cc9321319).HERO:\n            actor = $ba30ae746a7f0f6d$var$createActor(\"hero\", null, traits, almanacEntry);\n            actor.type = (0, $9e949bc7e910e09d$export$ec2f7d5cc9321319).HERO;\n            if (!traitsString) traits.set(\"NAME\", (0, $d7e9a662a8cbeae3$export$7bca63501c2c13de)());\n            break;\n        case (0, $9e949bc7e910e09d$export$ec2f7d5cc9321319).TRADER:\n            actor = $ba30ae746a7f0f6d$var$createTrader(\"trader\", null, traits, almanacEntry);\n            break;\n        case (0, $9e949bc7e910e09d$export$ec2f7d5cc9321319).HIDDEN_ARTEFACT:\n            actor = $ba30ae746a7f0f6d$var$createArtefactHolder(\"hidden-artefact\", null, traits, almanacEntry);\n            break;\n        case (0, $9e949bc7e910e09d$export$ec2f7d5cc9321319).PROP:\n            actor = $ba30ae746a7f0f6d$var$createProp(almanacEntry.imageName, null, traits, almanacEntry);\n            break;\n        default:\n            actor = $ba30ae746a7f0f6d$var$createEnemy(almanacEntry.imageName, null, traits, almanacEntry);\n            break;\n    }\n    actor.description = almanacEntry.description;\n    if (almanacEntry.equipmentIds) $ba30ae746a7f0f6d$var$equipActor(actor, almanacEntry.equipmentIds);\n    return actor;\n}\n\n\n\n\n\n/** @typedef {Object} AdventureResult\n * @property {string} name\n * @property {number} gold\n * @property {number} exp\n * @property {number} characterLevel\n * @property {number} dungeonLevel\n */ /**\n * Create an adventure result\n * @param {module:players/actors~Actor} hero\n * @returns {AdventureResult}\n */ function $6c32e7787b3dbd90$var$createAdventureResult(hero) {\n    const result = {\n        name: \"unknown\",\n        gold: 0,\n        exp: 0,\n        characterLevel: 0,\n        dungeonLevel: 0\n    };\n    if (hero) {\n        result.name = hero.traits.get(\"NAME\");\n        result.gold = hero.storeManager.getPurseValue();\n        result.exp = hero.traits.getInt(\"EXP\", 0);\n        result.characterLevel = hero.traits.getCharacterLevel();\n        result.dungeonLevel = (0, $6664788cb4fc34b5$export$2e2bcd8739ae039).getCurrentSceneLevel();\n    }\n    return result;\n}\nfunction $6c32e7787b3dbd90$export$ac811b1f517c0c21() {\n    return (0, $3474d2bbacd35b48$export$2e2bcd8739ae039).get(\"BEST_ADVENTURE\");\n}\n/**\n * Get the best stored adventure result.\n * @param {AdventureResult} adventureResult\n */ function $6c32e7787b3dbd90$var$saveBestAdventure(adventureResult) {\n    return (0, $3474d2bbacd35b48$export$2e2bcd8739ae039).set(\"BEST_ADVENTURE\", adventureResult);\n}\n/**\n * Save the hero's adventure if better than the last.\n * @param {module:players/actors~Actor} hero\n */ function $6c32e7787b3dbd90$var$saveAdventureIfBest(hero) {\n    const adventureResult = $6c32e7787b3dbd90$var$createAdventureResult(hero);\n    const currentBest = $6c32e7787b3dbd90$export$ac811b1f517c0c21();\n    const lastGold = currentBest ? currentBest.gold : 0;\n    if (adventureResult.gold > lastGold) $6c32e7787b3dbd90$var$saveBestAdventure(adventureResult);\n}\nfunction $6c32e7787b3dbd90$export$384cd953322e3851(hero) {\n    $6c32e7787b3dbd90$var$saveAdventureIfBest(hero);\n    const storageDetails = hero.storeManager.getAllStorageDetails();\n    const artefactDetails = [];\n    storageDetails.forEach((detail)=>artefactDetails.push({\n            storeTypeId: detail.store.storeTypeId,\n            almanacEntry: detail.artefact.almanacEntry,\n            traitsString: detail.artefact.traits.valuesToString()\n        }));\n    const gameState = {\n        sceneLevel: (0, $6664788cb4fc34b5$export$2e2bcd8739ae039).getCurrentSceneLevel(),\n        hero: {\n            alive: hero.alive,\n            almanacEntry: hero.almanacEntry,\n            traitsString: hero.traits.valuesToString(),\n            artefactDetails: artefactDetails\n        }\n    };\n    (0, $3474d2bbacd35b48$export$2e2bcd8739ae039).set(\"GAME_STATE\", gameState);\n}\nfunction $6c32e7787b3dbd90$export$e5b7197cc57951e6() {\n    const gameState = (0, $3474d2bbacd35b48$export$2e2bcd8739ae039).get(\"GAME_STATE\");\n    if (!gameState) {\n        (0, $2d5b4e7cb639ebe1$export$2e2bcd8739ae039).info(\"No saved game state to restore.\");\n        return;\n    }\n    if (!gameState.hero.alive) {\n        (0, $2d5b4e7cb639ebe1$export$2e2bcd8739ae039).info(\"Last hero state was dead, so not restoring.\");\n        return;\n    }\n    gameState.hero.almanacEntry.equipmentIds = []; // these are intial arefacts which may have been dropped.\n    gameState.hero.almanacEntry.type = (0, $9e949bc7e910e09d$export$4a19f89b3effac)(gameState.hero.almanacEntry.typeId);\n    const heroActor = (0, $ba30ae746a7f0f6d$export$260a0189ba712b47)(gameState.hero.almanacEntry, gameState.hero.traitsString);\n    gameState.hero.artefactDetails.forEach((details)=>{\n        details.almanacEntry.type = (0, $c8439a0aab365384$export$6f0824563061af7a)(details.almanacEntry.typeId);\n        const artefact = (0, $35cb0fa7cb9f77a0$export$f71b2f640dbd3eb)(details.almanacEntry, details.traitsString);\n        const store = heroActor.storeManager.getStoreByTypeId(details.storeTypeId);\n        if (!store) {\n            (0, $2d5b4e7cb639ebe1$export$2e2bcd8739ae039).error(`Unable to find store matching ${details.storeTypeId}. Game restore abandoned.`);\n            return;\n        }\n        store.add(artefact);\n    });\n    return {\n        hero: heroActor,\n        sceneLevel: gameState.sceneLevel\n    };\n}\n\n\nfunction $4ebbde9be28bffa6$export$43941cd1606ecb62() {\n    const bestAdventure = (0, $6c32e7787b3dbd90$export$ac811b1f517c0c21)();\n    const container = $de9cad813c8cf1e8$export$c8a8987d4410bf2d(\"div\", {\n        className: \"best-adventure\"\n    });\n    if (bestAdventure) {\n        const list = document.createElement(\"ul\");\n        container.appendChild(list);\n        list.appendChild($de9cad813c8cf1e8$export$c8a8987d4410bf2d(\"li\", {\n            text: (0, $2a5626561236b7e1$export$a7357cdd1f0b0168)`Name:${bestAdventure.name}`\n        }));\n        list.appendChild($de9cad813c8cf1e8$export$c8a8987d4410bf2d(\"li\", {\n            text: (0, $2a5626561236b7e1$export$a7357cdd1f0b0168)`Gold:${bestAdventure.gold.toFixed(2)}`\n        }));\n        list.appendChild($de9cad813c8cf1e8$export$c8a8987d4410bf2d(\"li\", {\n            text: (0, $2a5626561236b7e1$export$a7357cdd1f0b0168)`Character level:${bestAdventure.characterLevel}`\n        }));\n        list.appendChild($de9cad813c8cf1e8$export$c8a8987d4410bf2d(\"li\", {\n            text: (0, $2a5626561236b7e1$export$a7357cdd1f0b0168)`Experience:${bestAdventure.exp}`\n        }));\n        list.appendChild($de9cad813c8cf1e8$export$c8a8987d4410bf2d(\"li\", {\n            text: (0, $2a5626561236b7e1$export$a7357cdd1f0b0168)`Dungeon level:${bestAdventure.dungeonLevel}`\n        }));\n    } else container.appendChild($de9cad813c8cf1e8$export$c8a8987d4410bf2d(\"p\", {\n        text: (0, $2a5626561236b7e1$export$a7357cdd1f0b0168)`MESSAGE NO SAVED ADVENTURE`\n    }));\n    return (0, $81dd6b24526c5347$export$2e2bcd8739ae039).showElementOkDialog((0, $2a5626561236b7e1$export$a7357cdd1f0b0168)`DIALOG TITLE BEST ADVENTURE`, container);\n}\n\n\n/**\n * @file Dialogs showing guides which are in Markdown.\n *\n * @module dialogs/guideDialogs\n */ /**\n * license {@link https://opensource.org/license/mit/|MIT}\n * Copyright 2024 Steve Butler (henspace.com).\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the “Software”), to deal in\n * the Software without restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n * Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */ \n/**\n * @file Light markdown parser\n *\n * @module utils\\text\\markdown\\markdown\n */ /**\n * license {@link https://opensource.org/license/mit/|MIT}\n * Copyright 2024 Steve Butler (henspace.com).\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the “Software”), to deal in\n * the Software without restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n * Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */ /**\n * @file Simple protection from future parsing.\n *\n * @module utils\\text\\markdown\\parsingWarden\n */ /**\n * license {@link https://opensource.org/license/mit/|MIT}\n * Copyright 2024 Steve Butler (henspace.com).\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the “Software”), to deal in\n * the Software without restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n * Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */ /**\n * @file Base64 routines\n *\n * @module utils\\text\\markdown\\base64\n */ /**\n * license {@link https://opensource.org/license/mit/|MIT}\n * Copyright 2024 Steve Butler (henspace.com).\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the “Software”), to deal in\n * the Software without restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n * Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */ /**\n * @file Safe version of encode functions.\n *\n * @module utils\\text\\safeEncoder\n */ /**\n * license {@link https://opensource.org/license/mit/|MIT}\n * Copyright 2024 Steve Butler (henspace.com).\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the “Software”), to deal in\n * the Software without restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n * Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */ /**\n * Encode the uri. This just calls encodeURIComponent. If it fails, the string\n * will be converted using `toWellFormed()` to remove any lone surrogates.\n * The function `toWellFormed` is not called by default as it is expensive and\n * lone surrogates are unlikely to be encountered.\n * @param {string} uri\n * @returns {string}\n * @throws {URIError}\n */ function $990a16e447485476$export$493c6e092b6b7343(uri) {\n    try {\n        return encodeURIComponent(uri);\n    } catch (error) {\n        console.error(error);\n        return encodeURIComponent(uri.toWellFormed());\n    }\n}\n\n\nfunction $6d0f1216bf14677c$export$17093f29c5387c55(str) {\n    return window.btoa((0, $990a16e447485476$export$493c6e092b6b7343)(str));\n}\nfunction $6d0f1216bf14677c$export$f729b1c6dd29c383(base64) {\n    return decodeURIComponent(window.atob(base64));\n}\n\n\nclass $712a52cadf432d0a$export$194ecf1460f71071 {\n    #wards = new Map();\n    constructor(){}\n    /** Clear all the entries */ clear() {\n        this.#wards.clear();\n    }\n    /**\n   * Create a key code from the data.\n   * @param {string} data\n   * @returns {string} a unique key.\n   */ #createKeyCode(data) {\n        return (0, $6d0f1216bf14677c$export$17093f29c5387c55)(data).replace(/=/g, \":\"); // == is markdown\n    }\n    /**\n   *\n   * @param {string} data - the data to guard\n   * @returns {string} the key. This can be used as the protected data. If data\n   * is empty, it is returned untouched.\n   */ protect(data) {\n        if (!data) return data; // nothing to protect\n        const key = `???${this.#wards.size}${this.#createKeyCode(data)}???`;\n        this.#wards.set(key, data);\n        return key;\n    }\n    /**\n   * Get the originally protected string. The protected value is removed.\n   * @returns {string} the originally protected value. If not found, the key is returned.\n   */ retrieve(key) {\n        const value = this.#wards.get(key);\n        this.#wards.delete(key);\n        if (!value) {\n            console.error(`Could not find ${key} in protected data.`);\n            return key;\n        } else return value;\n    }\n    /**\n   * Search for keys in the data and reinstate. Any retrieved values are removed.\n   * @param {string} data\n   * @returns {string}\n   */ reinstate(data) {\n        return data.replace(/[?]{3}\\d+[a-zA-Z0-9+/]+:{0,2}[?]{3}/g, (match)=>this.retrieve(match));\n    }\n}\n\n\n/**\n * @typedef {Object} Replacement\n * @property {RegExp} re - the expression to match.\n * @property {string | function(match, ...captures): string} rep - replacement. If a function is\n * passed, it is provided with the string that matched followed by the captured\n * groups.\n */ /**\n * @type {ParsingWarden}\n */ const $7a78d71b35cfa098$var$parsingWarden = new (0, $712a52cadf432d0a$export$194ecf1460f71071)();\nfunction $7a78d71b35cfa098$export$8df0edb81ed6c93c(href, parentheses) {\n    return `<span class=\"printable-link for-print-only\">${parentheses ? \"(\" : \"\"}${href}${parentheses ? \")\" : \"\"}</span>`;\n}\n/**\n * Applies an appropriate icon to the label text of a link. Applies none if no icon.\n * @param {string} href\n * @param {string} label\n * @returns {string}\n */ function $7a78d71b35cfa098$var$addIconToLink(href, label) {\n    let iconHtml = \"\";\n    if (/^https:\\/\\/vimeo.com\\//.test(href)) iconHtml = '<i class=\"fa-brands fa-vimeo\"></i>';\n    else if (/^https:\\/\\/(www\\.)?youtube.com\\//.test(href)) iconHtml = '<i class=\"fa-brands fa-youtube\"></i>';\n    if (iconHtml) iconHtml = `<span class='link-icon'>${iconHtml}</span>`;\n    return `${label}${iconHtml}`;\n}\n/**\n * Block replacements (flow) {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Content_categories}\n * When processing the Markdown, blocks are created. These are defined as blocks\n * of text separated by at least one blank line. The following replacements\n * are used for code which should be treated as independent blocks. To ensure\n * post processing is correct, they should insert two newlines at the end to\n * create an independent block.\n * @type {Replacement[]}\n */ const $7a78d71b35cfa098$var$blockReps = [\n    /** Setext heading 1 */ {\n        re: /(?:(.+)\\n=+\\n)/g,\n        rep: \"\\n\\n<h1>$1</h1>\\n\\n\"\n    },\n    /** Setext heading 2 */ {\n        re: /(?:(.+)\\n-+\\n)/g,\n        rep: \"\\n\\n<h2>$1</h2>\\n\\n\"\n    },\n    /** ATX heading. Any level. */ {\n        re: /^(#+)(?: *)(.+?)(?:#*)[ \\t]*$/gm,\n        rep: (matched, hashes, txt)=>{\n            const level = Math.min(hashes.length, 6);\n            return `\\n\\n<h${level}>${txt.trim()}</h${level}>\\n`;\n        }\n    },\n    /** block quote */ $7a78d71b35cfa098$var$reAllLinesStartWith(\">[ \t]*\", {\n        blockPrefix: \"<blockquote>\",\n        blockSuffix: \"</blockquote>\"\n    }),\n    /** code block */ $7a78d71b35cfa098$var$reAllLinesStartWith(\"(?: {4}|\t)\", {\n        blockPrefix: \"<pre><code>\",\n        blockSuffix: \"</code></pre>\",\n        trimContents: true,\n        useWarden: true\n    }),\n    /** horizontal rule. This must come before unordered lists to prevent interpretation of - as bullet */ {\n        re: /^(?:[*_-] *){3,}\\s*$/gm,\n        rep: \"\\n\\n<hr>\\n\\n\"\n    },\n    /** unordered list */ $7a78d71b35cfa098$var$reAllLinesStartWith(\" {0,3}[*+-][ \t]+\", {\n        blockPrefix: \"<ul>\",\n        blockSuffix: \"</ul>\",\n        linePrefix: \"<li>\",\n        lineSuffix: \"</li>\"\n    }),\n    /** ordered list */ $7a78d71b35cfa098$var$reAllLinesStartWith(\" {0,3}\\\\d+\\\\.[ \t]+\", {\n        blockPrefix: \"<ol>\",\n        blockSuffix: \"</ol>\",\n        linePrefix: \"<li>\",\n        lineSuffix: \"</li>\"\n    })\n];\n/**\n * Block replacements used for creating paragraphs.\n * @type {Replacement[]}\n */ const $7a78d71b35cfa098$var$paragraphReps = [\n    /** paragraphs of elements not in blocks */ {\n        re: /(?:(?:^|\\n{2,})(?!<\\w+>))((?:.(?:\\n(?!\\n))?)+)/g,\n        rep: \"\\n\\n<p>$1</p>\\n\\n\"\n    },\n    /** tidy up */ {\n        re: /\\n{2,}/g,\n        rep: \"\\n\\n\"\n    }\n];\n/**\n * Span replacements used for Markdown.\n * @type {Replacement[]}\n */ const $7a78d71b35cfa098$var$spanReps = [\n    /** image */ {\n        re: /!(&lt;)?\\[(.*?)\\]\\((https?:\\/\\/[-\\w@:%.+~#=/]+?)(?: +\"(.*?)\")?\\)/gm,\n        rep: (match, floatLeft, altText, src, title)=>{\n            const additionalClass = floatLeft ? \"floatable\" : \"\";\n            const html = `<img alt=\"${altText ?? \"\"}\" class=\"${additionalClass}\" src=\"${src}\" title=\"${title ?? \"\"}\"/>`;\n            return $7a78d71b35cfa098$var$parsingWarden.protect(html);\n        }\n    },\n    /** link */ {\n        re: /\\[(.*?)\\]\\((https?:\\/\\/[-\\w@:%.+~#=/]+?)(?: +\"(.*?)\")?\\)/gm,\n        rep: (match, label, href, title)=>{\n            label = $7a78d71b35cfa098$var$addIconToLink(href, label);\n            const html = `<a target=\"_blank\" href=\"${href}\" title=\"${title ?? \"\"}\">${label ?? \"\"}</a>${$7a78d71b35cfa098$export$8df0edb81ed6c93c(href, true)}`;\n            return $7a78d71b35cfa098$var$parsingWarden.protect(html);\n        }\n    },\n    /** automatic link */ {\n        re: /(?:&lt;|<)(https?:\\/\\/[-\\w@:%.+~#=/]+?)>/gm,\n        rep: (match, href)=>{\n            const html = `<a target=\"_blank\" href=\"${href}\">${href}</a>${$7a78d71b35cfa098$export$8df0edb81ed6c93c(href, true)}`;\n            return $7a78d71b35cfa098$var$parsingWarden.protect(html);\n        }\n    },\n    /** automatic email */ {\n        re: /(?:&lt;|<)([\\w.-]+@(?:[\\w-]+\\.)+[\\w-]+)/gm,\n        rep: (match, address)=>{\n            const encoded = $7a78d71b35cfa098$export$52ce4ed9be59edb4(address);\n            const html = `<a href=\"${encoded}\">${encoded}</a>`;\n            return $7a78d71b35cfa098$var$parsingWarden.protect(html);\n        }\n    },\n    /** code */ {\n        re: /(?:`{2,}(.*?)`{2,}|`(.*?)`)/gm,\n        rep: (match, codeA, codeB)=>{\n            const html = `<code>${codeA ?? codeB}</code>`;\n            return $7a78d71b35cfa098$var$parsingWarden.protect(html);\n        }\n    },\n    /** emphasis single letters*/ {\n        re: /\\*\\*([^\\s])\\*\\*/gm,\n        rep: \"<strong>$1</strong>\"\n    },\n    {\n        re: /__([^\\s])__/gm,\n        rep: \"<strong>$1</strong>\"\n    },\n    {\n        re: /\\*([^\\s])\\*/gm,\n        rep: \"<em>$1</em>\"\n    },\n    {\n        re: /_([^\\s])_/gm,\n        rep: \"<em>$1</em>\"\n    },\n    /** emphasis words */ {\n        re: /\\*\\*([^\\s])(.*?)([^\\s])\\*\\*/gm,\n        rep: \"<strong>$1$2$3</strong>\"\n    },\n    {\n        re: /__([^\\s])(.*?)([^\\s])__/gm,\n        rep: \"<strong>$1$2$3</strong>\"\n    },\n    {\n        re: /\\*([^\\s])(.*?)([^\\s])\\*/gm,\n        rep: \"<em>$1$2$3</em>\"\n    },\n    {\n        re: /_([^\\s])(.*?)([^\\s])_/gm,\n        rep: \"<em>$1$2$3</em>\"\n    }\n];\n/**\n * Escape replacements used for Markdown\n * @type {Replacement[]}\n */ const $7a78d71b35cfa098$var$markdownEscReps = [\n    {\n        re: /\\\\([\\\\`*_{}[\\]()#+.!-])/g,\n        rep: (match, chr)=>$7a78d71b35cfa098$var$encodeCharToEntity(chr)\n    }\n];\n/**\n * Replacements for security reasons.\n */ const $7a78d71b35cfa098$var$securityReps = [\n    {\n        re: \"\\x00\",\n        rep: \"\\uFFFD\"\n    }\n];\n/**\n * Escape HTML\n * @type {Replacement}\n */ const $7a78d71b35cfa098$var$htmlEscIgnoringBrReps = [\n    {\n        re: /&(?![\\w#]+?;)/gm,\n        rep: \"&amp;\"\n    },\n    {\n        re: /<(?!\\/?(?:br|sub|sup)>)/gim,\n        rep: \"&lt;\"\n    }\n];\n/**\n * Escape HTML\n * @type {Replacement}\n */ const $7a78d71b35cfa098$var$htmlEscAllReps = [\n    {\n        re: /&(?![\\w#]+?;)/gm,\n        rep: \"&amp;\"\n    },\n    {\n        re: /</gim,\n        rep: \"&lt;\"\n    }\n];\n/**\n * Clean up HTML\n */ const $7a78d71b35cfa098$var$htmlCleanUpReps = [\n    {\n        re: /^\\s*$/gm,\n        rep: \"\"\n    },\n    {\n        re: /<(?:p|div)>\\s*?<\\/(?:p|div)>/gim,\n        rep: \"\"\n    }\n];\n/**\n * Parse data using replacements.\n * @param {string} data - text to be parsed.\n * @param {Replacement} replacements - replacements to apply.\n * @returns {string}\n */ function $7a78d71b35cfa098$var$processReplacements(data, replacements) {\n    if (!data) return data;\n    replacements.forEach((sub)=>{\n        data = data.replaceAll(sub.re, sub.rep);\n    });\n    return data;\n}\n/**\n * Create Replacement for consecutive block of lines that all begin with the\n * specified character. This will form part of a regular expression so should be\n * escaped if special characters are to be matched.\n * @param {string} reStart - expression to match at start of each line. NB. if this\n * is a group, it must be non-capturing.\n * @param {Object} [options] - options for the block formation.\n * @param {string} options.blockPrefix - characters placed at the beginning of the resulting block.\n * @param {string} options.blockSuffix - characters placed at the end of the resulting block.\n * @param {string} options.linePrefix - characters placed at the beginning of each resulting line.\n * @param {string} options.lineSuffix - characters placed at the end of each resulting line.\n * @param {boolean} options.trimContents - if true, leading and trailing newlines and carriage returns are stripped\n * @param {boolean} options.useWarden - if true, the result is protected from further parsing.\n * from the block's contents\n * @returns {Replacement}\n */ function $7a78d71b35cfa098$var$reAllLinesStartWith(reStart, options) {\n    const reBlockSearchRe = new RegExp(`(?:^|\\\\n)${reStart}(?:.|\\\\n)*?(?:(\\\\n(?!${reStart}))|$)`, \"g\");\n    const lineReplacementRe = new RegExp(`^${reStart}([ \\\\t]*.*)$`, \"gm\");\n    const lineReplacement = `${options?.linePrefix ?? \"\"}$1${options?.lineSuffix ?? \"\"}`;\n    return {\n        re: reBlockSearchRe,\n        rep: (match)=>{\n            let blockContents = match.replaceAll(lineReplacementRe, lineReplacement);\n            if (options.trimContents) blockContents = blockContents.replace(/^[\\n\\r]*/, \"\").trimEnd();\n            if (options.useWarden) blockContents = $7a78d71b35cfa098$var$parsingWarden.protect(blockContents);\n            let html = `\\n\\n${options?.blockPrefix ?? \"\"}${blockContents}${options?.blockSuffix ?? \"\"}\\n\\n`;\n            return html;\n        }\n    };\n}\n/**\n * Encode character to HTML entity\n * @param {string} chr - character to encode. Although accepting a string, only the first\n * character is encoded.\n * @returns{string} HTML entity for first character.\n */ function $7a78d71b35cfa098$var$encodeCharToEntity(chr) {\n    return `&#${chr.charCodeAt(0).toString()};`;\n}\nfunction $7a78d71b35cfa098$export$52ce4ed9be59edb4(data) {\n    let result = \"\";\n    for (const chr of data)result += $7a78d71b35cfa098$var$encodeCharToEntity(chr);\n    return result;\n}\nfunction $7a78d71b35cfa098$export$e861db14a47fdf73(data) {\n    let decoded = data.replaceAll(/&#([0-9]{1,4});/g, (match, value)=>String.fromCharCode(parseInt(value)) + \"\\xad\");\n    decoded = decoded.replace(/&lt;/gi, \"<\");\n    decoded = decoded.replace(/&gt;/gi, \">\");\n    decoded = decoded.replace(/&nbsp;/gi, \" \");\n    decoded = decoded.replace(/&amp;/gi, \"&\");\n    decoded = decoded.replace(/</gi, \"<\\xad\");\n    decoded = decoded.replace(/&/gi, \"&\\xad\");\n    return decoded;\n}\nfunction $7a78d71b35cfa098$export$bd6a2eae5de02ff5(data, options) {\n    $7a78d71b35cfa098$var$parsingWarden.clear(); // this shouldn't be necessary as the warden automatically clears on retrieval.\n    var result = data.replaceAll(/\\r/g, \"\"); // normalise line endings\n    result = $7a78d71b35cfa098$var$processReplacements(result, $7a78d71b35cfa098$var$securityReps);\n    if (options?.pre) result = $7a78d71b35cfa098$var$processReplacements(result, options.pre);\n    result = $7a78d71b35cfa098$var$processReplacements(result, $7a78d71b35cfa098$var$htmlEscIgnoringBrReps);\n    result = $7a78d71b35cfa098$var$processReplacements(result, $7a78d71b35cfa098$var$markdownEscReps);\n    result = $7a78d71b35cfa098$var$processReplacements(result, $7a78d71b35cfa098$var$blockReps);\n    result = $7a78d71b35cfa098$var$processReplacements(result, $7a78d71b35cfa098$var$paragraphReps);\n    result = $7a78d71b35cfa098$var$processReplacements(result, $7a78d71b35cfa098$var$spanReps);\n    result = $7a78d71b35cfa098$var$processReplacements(result, $7a78d71b35cfa098$var$htmlCleanUpReps);\n    if (options?.post) result = $7a78d71b35cfa098$var$processReplacements(result, options.post);\n    return $7a78d71b35cfa098$var$parsingWarden.reinstate(result);\n}\nfunction $7a78d71b35cfa098$export$e635f05a4ac9fdf7(data) {\n    $7a78d71b35cfa098$var$parsingWarden.clear(); // this shouldn't be necessary as the warden automatically clears on retrieval.\n    var result = data.replaceAll(/\\r/g, \"\"); // normalise line endings\n    result = $7a78d71b35cfa098$var$processReplacements(result, $7a78d71b35cfa098$var$securityReps);\n    result = $7a78d71b35cfa098$var$processReplacements(result, $7a78d71b35cfa098$var$htmlEscIgnoringBrReps);\n    result = $7a78d71b35cfa098$var$processReplacements(result, $7a78d71b35cfa098$var$markdownEscReps);\n    result = $7a78d71b35cfa098$var$processReplacements(result, $7a78d71b35cfa098$var$spanReps);\n    result = $7a78d71b35cfa098$var$processReplacements(result, $7a78d71b35cfa098$var$htmlCleanUpReps);\n    return $7a78d71b35cfa098$var$parsingWarden.reinstate(result);\n}\nfunction $7a78d71b35cfa098$export$4cf11838cdc2a8a8(data) {\n    data = $7a78d71b35cfa098$var$processReplacements(data, $7a78d71b35cfa098$var$securityReps);\n    return $7a78d71b35cfa098$var$processReplacements(data, $7a78d71b35cfa098$var$htmlEscAllReps);\n}\nfunction $7a78d71b35cfa098$export$15c8d03178b27d68(html) {\n    let plain = html.replace(/<[^>]*>/g, \"\").replace(/\\s+/g, \" \");\n    return $7a78d71b35cfa098$export$e861db14a47fdf73(plain);\n}\n\n\n\n\n\n/**\n * @file Urls\n *\n * @module src/assets/urls.js\n */ /**\n * license {@link https://opensource.org/license/mit/|MIT}\n * Copyright 2024 Steve Butler (henspace.com).\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the “Software”), to deal in\n * the Software without restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n * Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */ var $e8347232c61bf163$exports = {};\n$e8347232c61bf163$exports = JSON.parse('{\"frames\":[{\"filename\":\"acid00.png\",\"frame\":{\"x\":99,\"y\":1,\"w\":49,\"h\":48},\"rotated\":false,\"trimmed\":false,\"spriteSourceSize\":{\"x\":0,\"y\":0,\"w\":49,\"h\":48},\"sourceSize\":{\"w\":49,\"h\":48}},{\"filename\":\"axe.png\",\"frame\":{\"x\":100,\"y\":191,\"w\":42,\"h\":49},\"rotated\":false,\"trimmed\":true,\"spriteSourceSize\":{\"x\":3,\"y\":0,\"w\":42,\"h\":49},\"sourceSize\":{\"w\":48,\"h\":49}},{\"filename\":\"black_flask.png\",\"frame\":{\"x\":623,\"y\":202,\"w\":28,\"h\":46},\"rotated\":false,\"trimmed\":true,\"spriteSourceSize\":{\"x\":10,\"y\":1,\"w\":28,\"h\":46},\"sourceSize\":{\"w\":48,\"h\":48}},{\"filename\":\"blank.png\",\"frame\":{\"x\":96,\"y\":362,\"w\":3,\"h\":3},\"rotated\":false,\"trimmed\":true,\"spriteSourceSize\":{\"x\":0,\"y\":0,\"w\":3,\"h\":3},\"sourceSize\":{\"w\":48,\"h\":48}},{\"filename\":\"block.png\",\"frame\":{\"x\":1,\"y\":293,\"w\":48,\"h\":48},\"rotated\":false,\"trimmed\":false,\"spriteSourceSize\":{\"x\":0,\"y\":0,\"w\":48,\"h\":48},\"sourceSize\":{\"w\":48,\"h\":48}},{\"filename\":\"blood-splat-twice.png\",\"frame\":{\"x\":1,\"y\":1,\"w\":96,\"h\":94},\"rotated\":false,\"trimmed\":true,\"spriteSourceSize\":{\"x\":0,\"y\":1,\"w\":96,\"h\":94},\"sourceSize\":{\"w\":96,\"h\":96}},{\"filename\":\"blood-splat.png\",\"frame\":{\"x\":1,\"y\":97,\"w\":94,\"h\":92},\"rotated\":false,\"trimmed\":true,\"spriteSourceSize\":{\"x\":1,\"y\":4,\"w\":94,\"h\":92},\"sourceSize\":{\"w\":96,\"h\":96}},{\"filename\":\"blue_crystal.png\",\"frame\":{\"x\":429,\"y\":298,\"w\":42,\"h\":46},\"rotated\":false,\"trimmed\":true,\"spriteSourceSize\":{\"x\":3,\"y\":1,\"w\":42,\"h\":46},\"sourceSize\":{\"w\":48,\"h\":48}},{\"filename\":\"blue_flask.png\",\"frame\":{\"x\":186,\"y\":388,\"w\":28,\"h\":46},\"rotated\":false,\"trimmed\":true,\"spriteSourceSize\":{\"x\":10,\"y\":1,\"w\":28,\"h\":46},\"sourceSize\":{\"w\":48,\"h\":48}},{\"filename\":\"cantrip.png\",\"frame\":{\"x\":289,\"y\":201,\"w\":44,\"h\":46},\"rotated\":false,\"trimmed\":true,\"spriteSourceSize\":{\"x\":2,\"y\":1,\"w\":44,\"h\":46},\"sourceSize\":{\"w\":48,\"h\":48}},{\"filename\":\"coins.png\",\"frame\":{\"x\":1,\"y\":343,\"w\":47,\"h\":49},\"rotated\":false,\"trimmed\":true,\"spriteSourceSize\":{\"x\":1,\"y\":0,\"w\":47,\"h\":49},\"sourceSize\":{\"w\":48,\"h\":49}},{\"filename\":\"copper_coins.png\",\"frame\":{\"x\":383,\"y\":297,\"w\":44,\"h\":46},\"rotated\":false,\"trimmed\":true,\"spriteSourceSize\":{\"x\":2,\"y\":1,\"w\":44,\"h\":46},\"sourceSize\":{\"w\":48,\"h\":49}},{\"filename\":\"door-B.png\",\"frame\":{\"x\":303,\"y\":1,\"w\":48,\"h\":48},\"rotated\":false,\"trimmed\":false,\"spriteSourceSize\":{\"x\":0,\"y\":0,\"w\":48,\"h\":48},\"sourceSize\":{\"w\":48,\"h\":48}},{\"filename\":\"door-L.png\",\"frame\":{\"x\":831,\"y\":251,\"w\":33,\"h\":48},\"rotated\":false,\"trimmed\":true,\"spriteSourceSize\":{\"x\":15,\"y\":0,\"w\":33,\"h\":48},\"sourceSize\":{\"w\":48,\"h\":48}},{\"filename\":\"door-R.png\",\"frame\":{\"x\":429,\"y\":248,\"w\":33,\"h\":48},\"rotated\":false,\"trimmed\":true,\"spriteSourceSize\":{\"x\":0,\"y\":0,\"w\":33,\"h\":48},\"sourceSize\":{\"w\":48,\"h\":48}},{\"filename\":\"door-T.png\",\"frame\":{\"x\":353,\"y\":1,\"w\":48,\"h\":48},\"rotated\":false,\"trimmed\":false,\"spriteSourceSize\":{\"x\":0,\"y\":0,\"w\":48,\"h\":48},\"sourceSize\":{\"w\":48,\"h\":48}},{\"filename\":\"engraved_pillar.png\",\"frame\":{\"x\":703,\"y\":246,\"w\":44,\"h\":42},\"rotated\":false,\"trimmed\":true,\"spriteSourceSize\":{\"x\":2,\"y\":3,\"w\":44,\"h\":42},\"sourceSize\":{\"w\":48,\"h\":48}},{\"filename\":\"fire00.png\",\"frame\":{\"x\":403,\"y\":1,\"w\":48,\"h\":48},\"rotated\":false,\"trimmed\":false,\"spriteSourceSize\":{\"x\":0,\"y\":0,\"w\":48,\"h\":48},\"sourceSize\":{\"w\":48,\"h\":48}},{\"filename\":\"fire01.png\",\"frame\":{\"x\":1,\"y\":191,\"w\":48,\"h\":49},\"rotated\":false,\"trimmed\":false,\"spriteSourceSize\":{\"x\":0,\"y\":0,\"w\":48,\"h\":49},\"sourceSize\":{\"w\":48,\"h\":49}},{\"filename\":\"floor-SBE.png\",\"frame\":{\"x\":453,\"y\":1,\"w\":48,\"h\":48},\"rotated\":false,\"trimmed\":false,\"spriteSourceSize\":{\"x\":0,\"y\":0,\"w\":48,\"h\":48},\"sourceSize\":{\"w\":48,\"h\":48}},{\"filename\":\"floor-SBW.png\",\"frame\":{\"x\":503,\"y\":1,\"w\":48,\"h\":48},\"rotated\":false,\"trimmed\":false,\"spriteSourceSize\":{\"x\":0,\"y\":0,\"w\":48,\"h\":48},\"sourceSize\":{\"w\":48,\"h\":48}},{\"filename\":\"floor.png\",\"frame\":{\"x\":553,\"y\":1,\"w\":48,\"h\":48},\"rotated\":false,\"trimmed\":false,\"spriteSourceSize\":{\"x\":0,\"y\":0,\"w\":48,\"h\":48},\"sourceSize\":{\"w\":48,\"h\":48}},{\"filename\":\"floor2-SBE.png\",\"frame\":{\"x\":603,\"y\":1,\"w\":48,\"h\":48},\"rotated\":false,\"trimmed\":false,\"spriteSourceSize\":{\"x\":0,\"y\":0,\"w\":48,\"h\":48},\"sourceSize\":{\"w\":48,\"h\":48}},{\"filename\":\"floor2-SBW.png\",\"frame\":{\"x\":653,\"y\":1,\"w\":48,\"h\":48},\"rotated\":false,\"trimmed\":false,\"spriteSourceSize\":{\"x\":0,\"y\":0,\"w\":48,\"h\":48},\"sourceSize\":{\"w\":48,\"h\":48}},{\"filename\":\"floor2.png\",\"frame\":{\"x\":703,\"y\":1,\"w\":48,\"h\":48},\"rotated\":false,\"trimmed\":false,\"spriteSourceSize\":{\"x\":0,\"y\":0,\"w\":48,\"h\":48},\"sourceSize\":{\"w\":48,\"h\":48}},{\"filename\":\"goblin-dead00.png\",\"frame\":{\"x\":96,\"y\":467,\"w\":42,\"h\":30},\"rotated\":false,\"trimmed\":true,\"spriteSourceSize\":{\"x\":3,\"y\":9,\"w\":42,\"h\":30},\"sourceSize\":{\"w\":48,\"h\":48}},{\"filename\":\"goblin-idle00.png\",\"frame\":{\"x\":216,\"y\":394,\"w\":39,\"h\":40},\"rotated\":false,\"trimmed\":true,\"spriteSourceSize\":{\"x\":4,\"y\":4,\"w\":39,\"h\":40},\"sourceSize\":{\"w\":48,\"h\":48}},{\"filename\":\"goblin-idle01.png\",\"frame\":{\"x\":504,\"y\":387,\"w\":40,\"h\":41},\"rotated\":false,\"trimmed\":true,\"spriteSourceSize\":{\"x\":4,\"y\":4,\"w\":40,\"h\":41},\"sourceSize\":{\"w\":48,\"h\":48}},{\"filename\":\"goblin-idle02.png\",\"frame\":{\"x\":652,\"y\":403,\"w\":39,\"h\":40},\"rotated\":false,\"trimmed\":true,\"spriteSourceSize\":{\"x\":4,\"y\":4,\"w\":39,\"h\":40},\"sourceSize\":{\"w\":48,\"h\":48}},{\"filename\":\"goblin-idle03.png\",\"frame\":{\"x\":693,\"y\":413,\"w\":37,\"h\":40},\"rotated\":false,\"trimmed\":true,\"spriteSourceSize\":{\"x\":5,\"y\":4,\"w\":37,\"h\":40},\"sourceSize\":{\"w\":48,\"h\":48}},{\"filename\":\"goblin-walk-e00.png\",\"frame\":{\"x\":726,\"y\":455,\"w\":31,\"h\":41},\"rotated\":false,\"trimmed\":true,\"spriteSourceSize\":{\"x\":8,\"y\":4,\"w\":31,\"h\":41},\"sourceSize\":{\"w\":48,\"h\":48}},{\"filename\":\"goblin-walk-n00.png\",\"frame\":{\"x\":748,\"y\":297,\"w\":35,\"h\":40},\"rotated\":false,\"trimmed\":true,\"spriteSourceSize\":{\"x\":7,\"y\":4,\"w\":35,\"h\":40},\"sourceSize\":{\"w\":48,\"h\":48}},{\"filename\":\"goblin-walk-s00.png\",\"frame\":{\"x\":648,\"y\":445,\"w\":37,\"h\":42},\"rotated\":false,\"trimmed\":true,\"spriteSourceSize\":{\"x\":5,\"y\":3,\"w\":37,\"h\":42},\"sourceSize\":{\"w\":48,\"h\":48}},{\"filename\":\"goblin-walk-w00.png\",\"frame\":{\"x\":687,\"y\":455,\"w\":37,\"h\":42},\"rotated\":false,\"trimmed\":true,\"spriteSourceSize\":{\"x\":5,\"y\":3,\"w\":37,\"h\":42},\"sourceSize\":{\"w\":48,\"h\":48}},{\"filename\":\"goblin.png\",\"frame\":{\"x\":1,\"y\":445,\"w\":47,\"h\":48},\"rotated\":false,\"trimmed\":true,\"spriteSourceSize\":{\"x\":1,\"y\":0,\"w\":47,\"h\":48},\"sourceSize\":{\"w\":48,\"h\":48}},{\"filename\":\"gold_coins.png\",\"frame\":{\"x\":1,\"y\":394,\"w\":47,\"h\":49},\"rotated\":false,\"trimmed\":true,\"spriteSourceSize\":{\"x\":1,\"y\":0,\"w\":47,\"h\":49},\"sourceSize\":{\"w\":48,\"h\":49}},{\"filename\":\"helmet.png\",\"frame\":{\"x\":192,\"y\":341,\"w\":38,\"h\":45},\"rotated\":false,\"trimmed\":true,\"spriteSourceSize\":{\"x\":5,\"y\":1,\"w\":38,\"h\":45},\"sourceSize\":{\"w\":48,\"h\":49}},{\"filename\":\"hero-dead00.png\",\"frame\":{\"x\":653,\"y\":246,\"w\":48,\"h\":33},\"rotated\":false,\"trimmed\":true,\"spriteSourceSize\":{\"x\":0,\"y\":7,\"w\":48,\"h\":33},\"sourceSize\":{\"w\":48,\"h\":48}},{\"filename\":\"hero-idle00.png\",\"frame\":{\"x\":735,\"y\":101,\"w\":46,\"h\":47},\"rotated\":false,\"trimmed\":true,\"spriteSourceSize\":{\"x\":1,\"y\":1,\"w\":46,\"h\":47},\"sourceSize\":{\"w\":48,\"h\":48}},{\"filename\":\"hero-idle01.png\",\"frame\":{\"x\":753,\"y\":1,\"w\":48,\"h\":48},\"rotated\":false,\"trimmed\":false,\"spriteSourceSize\":{\"x\":0,\"y\":0,\"w\":48,\"h\":48},\"sourceSize\":{\"w\":48,\"h\":48}},{\"filename\":\"hero-idle02.png\",\"frame\":{\"x\":783,\"y\":101,\"w\":46,\"h\":47},\"rotated\":false,\"trimmed\":true,\"spriteSourceSize\":{\"x\":1,\"y\":1,\"w\":46,\"h\":47},\"sourceSize\":{\"w\":48,\"h\":48}},{\"filename\":\"hero-idle03.png\",\"frame\":{\"x\":51,\"y\":191,\"w\":47,\"h\":48},\"rotated\":false,\"trimmed\":true,\"spriteSourceSize\":{\"x\":1,\"y\":0,\"w\":47,\"h\":48},\"sourceSize\":{\"w\":48,\"h\":48}},{\"filename\":\"hero-walk-e00.png\",\"frame\":{\"x\":749,\"y\":198,\"w\":34,\"h\":47},\"rotated\":false,\"trimmed\":true,\"spriteSourceSize\":{\"x\":10,\"y\":1,\"w\":34,\"h\":47},\"sourceSize\":{\"w\":48,\"h\":48}},{\"filename\":\"hero-walk-e01.png\",\"frame\":{\"x\":831,\"y\":152,\"w\":35,\"h\":47},\"rotated\":false,\"trimmed\":true,\"spriteSourceSize\":{\"x\":10,\"y\":1,\"w\":35,\"h\":47},\"sourceSize\":{\"w\":48,\"h\":48}},{\"filename\":\"hero-walk-e02.png\",\"frame\":{\"x\":184,\"y\":436,\"w\":39,\"h\":48},\"rotated\":false,\"trimmed\":true,\"spriteSourceSize\":{\"x\":9,\"y\":0,\"w\":39,\"h\":48},\"sourceSize\":{\"w\":48,\"h\":48}},{\"filename\":\"hero-walk-e03.png\",\"frame\":{\"x\":225,\"y\":436,\"w\":30,\"h\":48},\"rotated\":false,\"trimmed\":true,\"spriteSourceSize\":{\"x\":10,\"y\":0,\"w\":30,\"h\":48},\"sourceSize\":{\"w\":48,\"h\":48}},{\"filename\":\"hero-walk-n00.png\",\"frame\":{\"x\":100,\"y\":292,\"w\":46,\"h\":47},\"rotated\":false,\"trimmed\":true,\"spriteSourceSize\":{\"x\":2,\"y\":1,\"w\":46,\"h\":47},\"sourceSize\":{\"w\":48,\"h\":48}},{\"filename\":\"hero-walk-n01.png\",\"frame\":{\"x\":51,\"y\":241,\"w\":47,\"h\":48},\"rotated\":false,\"trimmed\":true,\"spriteSourceSize\":{\"x\":1,\"y\":0,\"w\":47,\"h\":48},\"sourceSize\":{\"w\":48,\"h\":48}},{\"filename\":\"hero-walk-n02.png\",\"frame\":{\"x\":100,\"y\":292,\"w\":46,\"h\":47},\"rotated\":false,\"trimmed\":true,\"spriteSourceSize\":{\"x\":2,\"y\":1,\"w\":46,\"h\":47},\"sourceSize\":{\"w\":48,\"h\":48}},{\"filename\":\"hero-walk-n03.png\",\"frame\":{\"x\":363,\"y\":345,\"w\":40,\"h\":48},\"rotated\":false,\"trimmed\":true,\"spriteSourceSize\":{\"x\":8,\"y\":0,\"w\":40,\"h\":48},\"sourceSize\":{\"w\":48,\"h\":48}},{\"filename\":\"hero-walk-s00.png\",\"frame\":{\"x\":335,\"y\":151,\"w\":46,\"h\":47},\"rotated\":false,\"trimmed\":true,\"spriteSourceSize\":{\"x\":1,\"y\":1,\"w\":46,\"h\":47},\"sourceSize\":{\"w\":48,\"h\":48}},{\"filename\":\"hero-walk-s01.png\",\"frame\":{\"x\":803,\"y\":1,\"w\":48,\"h\":48},\"rotated\":false,\"trimmed\":false,\"spriteSourceSize\":{\"x\":0,\"y\":0,\"w\":48,\"h\":48},\"sourceSize\":{\"w\":48,\"h\":48}},{\"filename\":\"hero-walk-s02.png\",\"frame\":{\"x\":335,\"y\":151,\"w\":46,\"h\":47},\"rotated\":false,\"trimmed\":true,\"spriteSourceSize\":{\"x\":1,\"y\":1,\"w\":46,\"h\":47},\"sourceSize\":{\"w\":48,\"h\":48}},{\"filename\":\"hero-walk-s03.png\",\"frame\":{\"x\":100,\"y\":242,\"w\":45,\"h\":48},\"rotated\":false,\"trimmed\":true,\"spriteSourceSize\":{\"x\":3,\"y\":0,\"w\":45,\"h\":48},\"sourceSize\":{\"w\":48,\"h\":48}},{\"filename\":\"hero-walk-w00.png\",\"frame\":{\"x\":343,\"y\":395,\"w\":39,\"h\":48},\"rotated\":false,\"trimmed\":true,\"spriteSourceSize\":{\"x\":1,\"y\":0,\"w\":39,\"h\":48},\"sourceSize\":{\"w\":48,\"h\":48}},{\"filename\":\"hero-walk-w01.png\",\"frame\":{\"x\":147,\"y\":241,\"w\":43,\"h\":48},\"rotated\":false,\"trimmed\":true,\"spriteSourceSize\":{\"x\":0,\"y\":0,\"w\":43,\"h\":48},\"sourceSize\":{\"w\":48,\"h\":48}},{\"filename\":\"hero-walk-w02.png\",\"frame\":{\"x\":299,\"y\":444,\"w\":39,\"h\":47},\"rotated\":false,\"trimmed\":true,\"spriteSourceSize\":{\"x\":1,\"y\":1,\"w\":39,\"h\":47},\"sourceSize\":{\"w\":48,\"h\":48}},{\"filename\":\"hero-walk-w03.png\",\"frame\":{\"x\":569,\"y\":295,\"w\":37,\"h\":48},\"rotated\":false,\"trimmed\":true,\"spriteSourceSize\":{\"x\":3,\"y\":0,\"w\":37,\"h\":48},\"sourceSize\":{\"w\":48,\"h\":48}},{\"filename\":\"hero.png\",\"frame\":{\"x\":383,\"y\":151,\"w\":46,\"h\":47},\"rotated\":false,\"trimmed\":true,\"spriteSourceSize\":{\"x\":1,\"y\":1,\"w\":46,\"h\":47},\"sourceSize\":{\"w\":48,\"h\":48}},{\"filename\":\"hidden-artefact-dead00.png\",\"frame\":{\"x\":148,\"y\":341,\"w\":42,\"h\":45},\"rotated\":false,\"trimmed\":true,\"spriteSourceSize\":{\"x\":1,\"y\":0,\"w\":42,\"h\":45},\"sourceSize\":{\"w\":48,\"h\":48}},{\"filename\":\"hidden-artefact-idle00.png\",\"frame\":{\"x\":142,\"y\":388,\"w\":42,\"h\":44},\"rotated\":false,\"trimmed\":true,\"spriteSourceSize\":{\"x\":3,\"y\":2,\"w\":42,\"h\":44},\"sourceSize\":{\"w\":48,\"h\":48}},{\"filename\":\"hidden-artefact.png\",\"frame\":{\"x\":142,\"y\":388,\"w\":42,\"h\":44},\"rotated\":false,\"trimmed\":true,\"spriteSourceSize\":{\"x\":3,\"y\":2,\"w\":42,\"h\":44},\"sourceSize\":{\"w\":48,\"h\":48}},{\"filename\":\"hud-arrow-down00.png\",\"frame\":{\"x\":431,\"y\":151,\"w\":46,\"h\":46},\"rotated\":false,\"trimmed\":true,\"spriteSourceSize\":{\"x\":1,\"y\":1,\"w\":46,\"h\":46},\"sourceSize\":{\"w\":48,\"h\":48}},{\"filename\":\"hud-arrow-down01.png\",\"frame\":{\"x\":479,\"y\":151,\"w\":46,\"h\":46},\"rotated\":false,\"trimmed\":true,\"spriteSourceSize\":{\"x\":1,\"y\":1,\"w\":46,\"h\":46},\"sourceSize\":{\"w\":48,\"h\":48}},{\"filename\":\"hud-arrow-left00.png\",\"frame\":{\"x\":527,\"y\":151,\"w\":46,\"h\":46},\"rotated\":false,\"trimmed\":true,\"spriteSourceSize\":{\"x\":1,\"y\":1,\"w\":46,\"h\":46},\"sourceSize\":{\"w\":48,\"h\":48}},{\"filename\":\"hud-arrow-left01.png\",\"frame\":{\"x\":575,\"y\":151,\"w\":46,\"h\":46},\"rotated\":false,\"trimmed\":true,\"spriteSourceSize\":{\"x\":1,\"y\":1,\"w\":46,\"h\":46},\"sourceSize\":{\"w\":48,\"h\":48}},{\"filename\":\"hud-arrow-right00.png\",\"frame\":{\"x\":241,\"y\":201,\"w\":46,\"h\":46},\"rotated\":false,\"trimmed\":true,\"spriteSourceSize\":{\"x\":1,\"y\":1,\"w\":46,\"h\":46},\"sourceSize\":{\"w\":48,\"h\":48}},{\"filename\":\"hud-arrow-right01.png\",\"frame\":{\"x\":335,\"y\":200,\"w\":46,\"h\":46},\"rotated\":false,\"trimmed\":true,\"spriteSourceSize\":{\"x\":1,\"y\":1,\"w\":46,\"h\":46},\"sourceSize\":{\"w\":48,\"h\":48}},{\"filename\":\"hud-arrow-up00.png\",\"frame\":{\"x\":383,\"y\":200,\"w\":46,\"h\":46},\"rotated\":false,\"trimmed\":true,\"spriteSourceSize\":{\"x\":1,\"y\":1,\"w\":46,\"h\":46},\"sourceSize\":{\"w\":48,\"h\":48}},{\"filename\":\"hud-arrow-up01.png\",\"frame\":{\"x\":431,\"y\":199,\"w\":46,\"h\":46},\"rotated\":false,\"trimmed\":true,\"spriteSourceSize\":{\"x\":1,\"y\":1,\"w\":46,\"h\":46},\"sourceSize\":{\"w\":48,\"h\":48}},{\"filename\":\"hud-auto-centre00.png\",\"frame\":{\"x\":479,\"y\":199,\"w\":46,\"h\":46},\"rotated\":false,\"trimmed\":true,\"spriteSourceSize\":{\"x\":1,\"y\":1,\"w\":46,\"h\":46},\"sourceSize\":{\"w\":48,\"h\":48}},{\"filename\":\"hud-auto-centre01.png\",\"frame\":{\"x\":527,\"y\":199,\"w\":46,\"h\":46},\"rotated\":false,\"trimmed\":true,\"spriteSourceSize\":{\"x\":1,\"y\":1,\"w\":46,\"h\":46},\"sourceSize\":{\"w\":48,\"h\":48}},{\"filename\":\"hud-fullscreen00.png\",\"frame\":{\"x\":97,\"y\":99,\"w\":48,\"h\":48},\"rotated\":false,\"trimmed\":false,\"spriteSourceSize\":{\"x\":0,\"y\":0,\"w\":48,\"h\":48},\"sourceSize\":{\"w\":48,\"h\":48}},{\"filename\":\"hud-fullscreen01.png\",\"frame\":{\"x\":575,\"y\":199,\"w\":46,\"h\":46},\"rotated\":false,\"trimmed\":true,\"spriteSourceSize\":{\"x\":1,\"y\":1,\"w\":46,\"h\":46},\"sourceSize\":{\"w\":48,\"h\":48}},{\"filename\":\"iron_rations.png\",\"frame\":{\"x\":702,\"y\":333,\"w\":44,\"h\":36},\"rotated\":false,\"trimmed\":true,\"spriteSourceSize\":{\"x\":2,\"y\":7,\"w\":44,\"h\":36},\"sourceSize\":{\"w\":49,\"h\":49}},{\"filename\":\"miss.png\",\"frame\":{\"x\":608,\"y\":299,\"w\":44,\"h\":44},\"rotated\":false,\"trimmed\":true,\"spriteSourceSize\":{\"x\":2,\"y\":2,\"w\":44,\"h\":44},\"sourceSize\":{\"w\":48,\"h\":48}},{\"filename\":\"orc-dead00.png\",\"frame\":{\"x\":473,\"y\":343,\"w\":48,\"h\":34},\"rotated\":false,\"trimmed\":true,\"spriteSourceSize\":{\"x\":0,\"y\":11,\"w\":48,\"h\":34},\"sourceSize\":{\"w\":48,\"h\":48}},{\"filename\":\"orc-idle00.png\",\"frame\":{\"x\":51,\"y\":291,\"w\":47,\"h\":48},\"rotated\":false,\"trimmed\":true,\"spriteSourceSize\":{\"x\":1,\"y\":0,\"w\":47,\"h\":48},\"sourceSize\":{\"w\":48,\"h\":48}},{\"filename\":\"orc-idle01.png\",\"frame\":{\"x\":197,\"y\":101,\"w\":47,\"h\":48},\"rotated\":false,\"trimmed\":true,\"spriteSourceSize\":{\"x\":0,\"y\":0,\"w\":47,\"h\":48},\"sourceSize\":{\"w\":48,\"h\":48}},{\"filename\":\"orc-idle02.png\",\"frame\":{\"x\":246,\"y\":101,\"w\":47,\"h\":48},\"rotated\":false,\"trimmed\":true,\"spriteSourceSize\":{\"x\":1,\"y\":0,\"w\":47,\"h\":48},\"sourceSize\":{\"w\":48,\"h\":48}},{\"filename\":\"orc-idle03.png\",\"frame\":{\"x\":295,\"y\":101,\"w\":47,\"h\":48},\"rotated\":false,\"trimmed\":true,\"spriteSourceSize\":{\"x\":1,\"y\":0,\"w\":47,\"h\":48},\"sourceSize\":{\"w\":48,\"h\":48}},{\"filename\":\"orc-walk-e00.png\",\"frame\":{\"x\":384,\"y\":395,\"w\":38,\"h\":48},\"rotated\":false,\"trimmed\":true,\"spriteSourceSize\":{\"x\":9,\"y\":0,\"w\":38,\"h\":48},\"sourceSize\":{\"w\":48,\"h\":48}},{\"filename\":\"orc-walk-e01.png\",\"frame\":{\"x\":831,\"y\":102,\"w\":36,\"h\":48},\"rotated\":false,\"trimmed\":true,\"spriteSourceSize\":{\"x\":9,\"y\":0,\"w\":36,\"h\":48},\"sourceSize\":{\"w\":48,\"h\":48}},{\"filename\":\"orc-walk-e02.png\",\"frame\":{\"x\":831,\"y\":301,\"w\":33,\"h\":48},\"rotated\":false,\"trimmed\":true,\"spriteSourceSize\":{\"x\":9,\"y\":0,\"w\":33,\"h\":48},\"sourceSize\":{\"w\":48,\"h\":48}},{\"filename\":\"orc-walk-e03.png\",\"frame\":{\"x\":340,\"y\":445,\"w\":39,\"h\":48},\"rotated\":false,\"trimmed\":true,\"spriteSourceSize\":{\"x\":9,\"y\":0,\"w\":39,\"h\":48},\"sourceSize\":{\"w\":48,\"h\":48}},{\"filename\":\"orc-walk-n00.png\",\"frame\":{\"x\":144,\"y\":191,\"w\":45,\"h\":48},\"rotated\":false,\"trimmed\":true,\"spriteSourceSize\":{\"x\":2,\"y\":0,\"w\":45,\"h\":48},\"sourceSize\":{\"w\":48,\"h\":48}},{\"filename\":\"orc-walk-n01.png\",\"frame\":{\"x\":344,\"y\":101,\"w\":47,\"h\":48},\"rotated\":false,\"trimmed\":true,\"spriteSourceSize\":{\"x\":1,\"y\":0,\"w\":47,\"h\":48},\"sourceSize\":{\"w\":48,\"h\":48}},{\"filename\":\"orc-walk-n02.png\",\"frame\":{\"x\":589,\"y\":101,\"w\":46,\"h\":48},\"rotated\":false,\"trimmed\":true,\"spriteSourceSize\":{\"x\":2,\"y\":0,\"w\":46,\"h\":48},\"sourceSize\":{\"w\":48,\"h\":48}},{\"filename\":\"orc-walk-n03.png\",\"frame\":{\"x\":257,\"y\":442,\"w\":40,\"h\":48},\"rotated\":false,\"trimmed\":true,\"spriteSourceSize\":{\"x\":8,\"y\":0,\"w\":40,\"h\":48},\"sourceSize\":{\"w\":48,\"h\":48}},{\"filename\":\"orc-walk-s00.png\",\"frame\":{\"x\":637,\"y\":101,\"w\":47,\"h\":47},\"rotated\":false,\"trimmed\":true,\"spriteSourceSize\":{\"x\":1,\"y\":1,\"w\":47,\"h\":47},\"sourceSize\":{\"w\":48,\"h\":48}},{\"filename\":\"orc-walk-s01.png\",\"frame\":{\"x\":393,\"y\":101,\"w\":47,\"h\":48},\"rotated\":false,\"trimmed\":true,\"spriteSourceSize\":{\"x\":0,\"y\":0,\"w\":47,\"h\":48},\"sourceSize\":{\"w\":48,\"h\":48}},{\"filename\":\"orc-walk-s02.png\",\"frame\":{\"x\":637,\"y\":101,\"w\":47,\"h\":47},\"rotated\":false,\"trimmed\":true,\"spriteSourceSize\":{\"x\":1,\"y\":1,\"w\":47,\"h\":47},\"sourceSize\":{\"w\":48,\"h\":48}},{\"filename\":\"orc-walk-s03.png\",\"frame\":{\"x\":148,\"y\":291,\"w\":45,\"h\":48},\"rotated\":false,\"trimmed\":true,\"spriteSourceSize\":{\"x\":3,\"y\":0,\"w\":45,\"h\":48},\"sourceSize\":{\"w\":48,\"h\":48}},{\"filename\":\"orc-walk-w00.png\",\"frame\":{\"x\":320,\"y\":345,\"w\":41,\"h\":48},\"rotated\":false,\"trimmed\":true,\"spriteSourceSize\":{\"x\":1,\"y\":0,\"w\":41,\"h\":48},\"sourceSize\":{\"w\":48,\"h\":48}},{\"filename\":\"orc-walk-w01.png\",\"frame\":{\"x\":195,\"y\":290,\"w\":42,\"h\":48},\"rotated\":false,\"trimmed\":true,\"spriteSourceSize\":{\"x\":0,\"y\":0,\"w\":42,\"h\":48},\"sourceSize\":{\"w\":48,\"h\":48}},{\"filename\":\"orc-walk-w02.png\",\"frame\":{\"x\":442,\"y\":101,\"w\":47,\"h\":48},\"rotated\":false,\"trimmed\":true,\"spriteSourceSize\":{\"x\":1,\"y\":0,\"w\":47,\"h\":48},\"sourceSize\":{\"w\":48,\"h\":48}},{\"filename\":\"orc-walk-w03.png\",\"frame\":{\"x\":96,\"y\":417,\"w\":42,\"h\":48},\"rotated\":false,\"trimmed\":true,\"spriteSourceSize\":{\"x\":3,\"y\":0,\"w\":42,\"h\":48},\"sourceSize\":{\"w\":48,\"h\":48}},{\"filename\":\"orc.png\",\"frame\":{\"x\":491,\"y\":101,\"w\":47,\"h\":48},\"rotated\":false,\"trimmed\":true,\"spriteSourceSize\":{\"x\":1,\"y\":0,\"w\":47,\"h\":48},\"sourceSize\":{\"w\":48,\"h\":48}},{\"filename\":\"platinum_coins.png\",\"frame\":{\"x\":540,\"y\":101,\"w\":47,\"h\":48},\"rotated\":false,\"trimmed\":true,\"spriteSourceSize\":{\"x\":1,\"y\":1,\"w\":47,\"h\":48},\"sourceSize\":{\"w\":48,\"h\":49}},{\"filename\":\"poleaxe.png\",\"frame\":{\"x\":1,\"y\":242,\"w\":48,\"h\":49},\"rotated\":false,\"trimmed\":false,\"spriteSourceSize\":{\"x\":0,\"y\":0,\"w\":48,\"h\":49},\"sourceSize\":{\"w\":48,\"h\":49}},{\"filename\":\"rat-dead00.png\",\"frame\":{\"x\":652,\"y\":356,\"w\":48,\"h\":24},\"rotated\":false,\"trimmed\":true,\"spriteSourceSize\":{\"x\":0,\"y\":12,\"w\":48,\"h\":24},\"sourceSize\":{\"w\":48,\"h\":48}},{\"filename\":\"rat-idle00.png\",\"frame\":{\"x\":502,\"y\":476,\"w\":37,\"h\":24},\"rotated\":false,\"trimmed\":true,\"spriteSourceSize\":{\"x\":3,\"y\":12,\"w\":37,\"h\":24},\"sourceSize\":{\"w\":48,\"h\":48}},{\"filename\":\"rat-idle01.png\",\"frame\":{\"x\":541,\"y\":476,\"w\":37,\"h\":24},\"rotated\":false,\"trimmed\":true,\"spriteSourceSize\":{\"x\":4,\"y\":12,\"w\":37,\"h\":24},\"sourceSize\":{\"w\":49,\"h\":48}},{\"filename\":\"rat-idle02.png\",\"frame\":{\"x\":546,\"y\":403,\"w\":37,\"h\":25},\"rotated\":false,\"trimmed\":true,\"spriteSourceSize\":{\"x\":4,\"y\":12,\"w\":37,\"h\":25},\"sourceSize\":{\"w\":49,\"h\":49}},{\"filename\":\"rat-walk-e00.png\",\"frame\":{\"x\":101,\"y\":341,\"w\":45,\"h\":25},\"rotated\":false,\"trimmed\":true,\"spriteSourceSize\":{\"x\":3,\"y\":12,\"w\":45,\"h\":25},\"sourceSize\":{\"w\":48,\"h\":48}},{\"filename\":\"rat-walk-n00.png\",\"frame\":{\"x\":616,\"y\":445,\"w\":30,\"h\":28},\"rotated\":false,\"trimmed\":true,\"spriteSourceSize\":{\"x\":9,\"y\":8,\"w\":30,\"h\":28},\"sourceSize\":{\"w\":48,\"h\":48}},{\"filename\":\"rat-walk-s00.png\",\"frame\":{\"x\":585,\"y\":393,\"w\":30,\"h\":34},\"rotated\":false,\"trimmed\":true,\"spriteSourceSize\":{\"x\":10,\"y\":2,\"w\":30,\"h\":34},\"sourceSize\":{\"w\":48,\"h\":48}},{\"filename\":\"rat-walk-w00.png\",\"frame\":{\"x\":654,\"y\":329,\"w\":46,\"h\":25},\"rotated\":false,\"trimmed\":true,\"spriteSourceSize\":{\"x\":0,\"y\":12,\"w\":46,\"h\":25},\"sourceSize\":{\"w\":49,\"h\":49}},{\"filename\":\"rat.png\",\"frame\":{\"x\":580,\"y\":476,\"w\":37,\"h\":24},\"rotated\":false,\"trimmed\":true,\"spriteSourceSize\":{\"x\":3,\"y\":12,\"w\":37,\"h\":24},\"sourceSize\":{\"w\":48,\"h\":48}},{\"filename\":\"red_crystal.png\",\"frame\":{\"x\":232,\"y\":345,\"w\":42,\"h\":47},\"rotated\":false,\"trimmed\":true,\"spriteSourceSize\":{\"x\":3,\"y\":1,\"w\":42,\"h\":47},\"sourceSize\":{\"w\":48,\"h\":49}},{\"filename\":\"RIP.png\",\"frame\":{\"x\":99,\"y\":51,\"w\":48,\"h\":46},\"rotated\":false,\"trimmed\":true,\"spriteSourceSize\":{\"x\":0,\"y\":2,\"w\":48,\"h\":46},\"sourceSize\":{\"w\":48,\"h\":48}},{\"filename\":\"silver_coins.png\",\"frame\":{\"x\":191,\"y\":151,\"w\":46,\"h\":48},\"rotated\":false,\"trimmed\":true,\"spriteSourceSize\":{\"x\":2,\"y\":1,\"w\":46,\"h\":48},\"sourceSize\":{\"w\":48,\"h\":49}},{\"filename\":\"skull.png\",\"frame\":{\"x\":686,\"y\":101,\"w\":47,\"h\":47},\"rotated\":false,\"trimmed\":true,\"spriteSourceSize\":{\"x\":0,\"y\":1,\"w\":47,\"h\":47},\"sourceSize\":{\"w\":48,\"h\":48}},{\"filename\":\"slime-dead00.png\",\"frame\":{\"x\":149,\"y\":51,\"w\":48,\"h\":48},\"rotated\":false,\"trimmed\":false,\"spriteSourceSize\":{\"x\":0,\"y\":0,\"w\":48,\"h\":48},\"sourceSize\":{\"w\":48,\"h\":48}},{\"filename\":\"slime-idle00.png\",\"frame\":{\"x\":150,\"y\":1,\"w\":49,\"h\":48},\"rotated\":false,\"trimmed\":false,\"spriteSourceSize\":{\"x\":0,\"y\":0,\"w\":49,\"h\":48},\"sourceSize\":{\"w\":49,\"h\":48}},{\"filename\":\"slime-idle01.png\",\"frame\":{\"x\":201,\"y\":1,\"w\":49,\"h\":48},\"rotated\":false,\"trimmed\":false,\"spriteSourceSize\":{\"x\":0,\"y\":0,\"w\":49,\"h\":48},\"sourceSize\":{\"w\":49,\"h\":48}},{\"filename\":\"slime-idle02.png\",\"frame\":{\"x\":252,\"y\":1,\"w\":49,\"h\":48},\"rotated\":false,\"trimmed\":false,\"spriteSourceSize\":{\"x\":0,\"y\":0,\"w\":49,\"h\":48},\"sourceSize\":{\"w\":49,\"h\":48}},{\"filename\":\"slime-walk-e00.png\",\"frame\":{\"x\":652,\"y\":382,\"w\":48,\"h\":19},\"rotated\":false,\"trimmed\":true,\"spriteSourceSize\":{\"x\":0,\"y\":13,\"w\":48,\"h\":19},\"sourceSize\":{\"w\":48,\"h\":49}},{\"filename\":\"slime-walk-n00.png\",\"frame\":{\"x\":849,\"y\":51,\"w\":18,\"h\":49},\"rotated\":false,\"trimmed\":true,\"spriteSourceSize\":{\"x\":14,\"y\":0,\"w\":18,\"h\":49},\"sourceSize\":{\"w\":48,\"h\":49}},{\"filename\":\"slime-walk-s00.png\",\"frame\":{\"x\":623,\"y\":151,\"w\":17,\"h\":49},\"rotated\":false,\"trimmed\":true,\"spriteSourceSize\":{\"x\":14,\"y\":0,\"w\":17,\"h\":49},\"sourceSize\":{\"w\":48,\"h\":49}},{\"filename\":\"slime-walk-w00.png\",\"frame\":{\"x\":51,\"y\":341,\"w\":48,\"h\":19},\"rotated\":false,\"trimmed\":true,\"spriteSourceSize\":{\"x\":0,\"y\":13,\"w\":48,\"h\":19},\"sourceSize\":{\"w\":48,\"h\":49}},{\"filename\":\"slime.png\",\"frame\":{\"x\":239,\"y\":249,\"w\":46,\"h\":46},\"rotated\":false,\"trimmed\":true,\"spriteSourceSize\":{\"x\":2,\"y\":0,\"w\":46,\"h\":46},\"sourceSize\":{\"w\":48,\"h\":48}},{\"filename\":\"spell.png\",\"frame\":{\"x\":257,\"y\":394,\"w\":42,\"h\":46},\"rotated\":false,\"trimmed\":true,\"spriteSourceSize\":{\"x\":3,\"y\":1,\"w\":42,\"h\":46},\"sourceSize\":{\"w\":48,\"h\":48}},{\"filename\":\"spider-dead00.png\",\"frame\":{\"x\":143,\"y\":151,\"w\":46,\"h\":38},\"rotated\":false,\"trimmed\":true,\"spriteSourceSize\":{\"x\":1,\"y\":5,\"w\":46,\"h\":38},\"sourceSize\":{\"w\":48,\"h\":48}},{\"filename\":\"spider-idle00.png\",\"frame\":{\"x\":97,\"y\":149,\"w\":44,\"h\":40},\"rotated\":false,\"trimmed\":true,\"spriteSourceSize\":{\"x\":2,\"y\":4,\"w\":44,\"h\":40},\"sourceSize\":{\"w\":48,\"h\":48}},{\"filename\":\"spider-idle01.png\",\"frame\":{\"x\":702,\"y\":290,\"w\":44,\"h\":41},\"rotated\":false,\"trimmed\":true,\"spriteSourceSize\":{\"x\":2,\"y\":4,\"w\":44,\"h\":41},\"sourceSize\":{\"w\":48,\"h\":48}},{\"filename\":\"spider-idle02.png\",\"frame\":{\"x\":785,\"y\":298,\"w\":44,\"h\":41},\"rotated\":false,\"trimmed\":true,\"spriteSourceSize\":{\"x\":2,\"y\":4,\"w\":44,\"h\":41},\"sourceSize\":{\"w\":48,\"h\":48}},{\"filename\":\"spider-idle03.png\",\"frame\":{\"x\":523,\"y\":343,\"w\":44,\"h\":42},\"rotated\":false,\"trimmed\":true,\"spriteSourceSize\":{\"x\":2,\"y\":4,\"w\":44,\"h\":42},\"sourceSize\":{\"w\":48,\"h\":48}},{\"filename\":\"spider-walk-e00.png\",\"frame\":{\"x\":502,\"y\":430,\"w\":40,\"h\":44},\"rotated\":false,\"trimmed\":true,\"spriteSourceSize\":{\"x\":4,\"y\":2,\"w\":40,\"h\":44},\"sourceSize\":{\"w\":48,\"h\":48}},{\"filename\":\"spider-walk-n00.png\",\"frame\":{\"x\":702,\"y\":371,\"w\":44,\"h\":40},\"rotated\":false,\"trimmed\":true,\"spriteSourceSize\":{\"x\":2,\"y\":4,\"w\":44,\"h\":40},\"sourceSize\":{\"w\":48,\"h\":48}},{\"filename\":\"spider-walk-s00.png\",\"frame\":{\"x\":50,\"y\":460,\"w\":44,\"h\":40},\"rotated\":false,\"trimmed\":true,\"spriteSourceSize\":{\"x\":2,\"y\":4,\"w\":44,\"h\":40},\"sourceSize\":{\"w\":48,\"h\":48}},{\"filename\":\"spider-walk-w00.png\",\"frame\":{\"x\":544,\"y\":430,\"w\":40,\"h\":44},\"rotated\":false,\"trimmed\":true,\"spriteSourceSize\":{\"x\":4,\"y\":2,\"w\":40,\"h\":44},\"sourceSize\":{\"w\":48,\"h\":48}},{\"filename\":\"spider.png\",\"frame\":{\"x\":97,\"y\":149,\"w\":44,\"h\":40},\"rotated\":false,\"trimmed\":true,\"spriteSourceSize\":{\"x\":2,\"y\":4,\"w\":44,\"h\":40},\"sourceSize\":{\"w\":48,\"h\":48}},{\"filename\":\"trader-dead00.png\",\"frame\":{\"x\":191,\"y\":201,\"w\":48,\"h\":37},\"rotated\":false,\"trimmed\":true,\"spriteSourceSize\":{\"x\":0,\"y\":5,\"w\":48,\"h\":37},\"sourceSize\":{\"w\":48,\"h\":48}},{\"filename\":\"trader-idle-s03.png\",\"frame\":{\"x\":239,\"y\":151,\"w\":46,\"h\":48},\"rotated\":false,\"trimmed\":true,\"spriteSourceSize\":{\"x\":2,\"y\":0,\"w\":46,\"h\":48},\"sourceSize\":{\"w\":48,\"h\":48}},{\"filename\":\"trader-idle00.png\",\"frame\":{\"x\":785,\"y\":200,\"w\":44,\"h\":47},\"rotated\":false,\"trimmed\":true,\"spriteSourceSize\":{\"x\":2,\"y\":1,\"w\":44,\"h\":47},\"sourceSize\":{\"w\":48,\"h\":48}},{\"filename\":\"trader-idle01.png\",\"frame\":{\"x\":786,\"y\":150,\"w\":43,\"h\":48},\"rotated\":false,\"trimmed\":true,\"spriteSourceSize\":{\"x\":3,\"y\":0,\"w\":43,\"h\":48},\"sourceSize\":{\"w\":48,\"h\":48}},{\"filename\":\"trader-idle02.png\",\"frame\":{\"x\":785,\"y\":249,\"w\":44,\"h\":47},\"rotated\":false,\"trimmed\":true,\"spriteSourceSize\":{\"x\":2,\"y\":1,\"w\":44,\"h\":47},\"sourceSize\":{\"w\":48,\"h\":48}},{\"filename\":\"trader-walk-e00.png\",\"frame\":{\"x\":463,\"y\":428,\"w\":37,\"h\":47},\"rotated\":false,\"trimmed\":true,\"spriteSourceSize\":{\"x\":0,\"y\":1,\"w\":37,\"h\":47},\"sourceSize\":{\"w\":48,\"h\":48}},{\"filename\":\"trader-walk-e01.png\",\"frame\":{\"x\":301,\"y\":395,\"w\":40,\"h\":47},\"rotated\":false,\"trimmed\":true,\"spriteSourceSize\":{\"x\":0,\"y\":1,\"w\":40,\"h\":47},\"sourceSize\":{\"w\":48,\"h\":48}},{\"filename\":\"trader-walk-e02.png\",\"frame\":{\"x\":831,\"y\":201,\"w\":34,\"h\":48},\"rotated\":false,\"trimmed\":true,\"spriteSourceSize\":{\"x\":1,\"y\":0,\"w\":34,\"h\":48},\"sourceSize\":{\"w\":48,\"h\":48}},{\"filename\":\"trader-walk-e03.png\",\"frame\":{\"x\":424,\"y\":395,\"w\":37,\"h\":48},\"rotated\":false,\"trimmed\":true,\"spriteSourceSize\":{\"x\":0,\"y\":0,\"w\":37,\"h\":48},\"sourceSize\":{\"w\":48,\"h\":48}},{\"filename\":\"trader-walk-n00.png\",\"frame\":{\"x\":50,\"y\":362,\"w\":44,\"h\":47},\"rotated\":false,\"trimmed\":true,\"spriteSourceSize\":{\"x\":2,\"y\":1,\"w\":44,\"h\":47},\"sourceSize\":{\"w\":48,\"h\":48}},{\"filename\":\"trader-walk-n01.png\",\"frame\":{\"x\":140,\"y\":434,\"w\":42,\"h\":48},\"rotated\":false,\"trimmed\":true,\"spriteSourceSize\":{\"x\":4,\"y\":0,\"w\":42,\"h\":48},\"sourceSize\":{\"w\":48,\"h\":48}},{\"filename\":\"trader-walk-n02.png\",\"frame\":{\"x\":50,\"y\":411,\"w\":44,\"h\":47},\"rotated\":false,\"trimmed\":true,\"spriteSourceSize\":{\"x\":2,\"y\":1,\"w\":44,\"h\":47},\"sourceSize\":{\"w\":48,\"h\":48}},{\"filename\":\"trader-walk-n03.png\",\"frame\":{\"x\":381,\"y\":445,\"w\":39,\"h\":48},\"rotated\":false,\"trimmed\":true,\"spriteSourceSize\":{\"x\":8,\"y\":0,\"w\":39,\"h\":48},\"sourceSize\":{\"w\":48,\"h\":48}},{\"filename\":\"trader-walk-s00.png\",\"frame\":{\"x\":335,\"y\":248,\"w\":45,\"h\":47},\"rotated\":false,\"trimmed\":true,\"spriteSourceSize\":{\"x\":2,\"y\":1,\"w\":45,\"h\":47},\"sourceSize\":{\"w\":48,\"h\":48}},{\"filename\":\"trader-walk-s01.png\",\"frame\":{\"x\":192,\"y\":240,\"w\":45,\"h\":48},\"rotated\":false,\"trimmed\":true,\"spriteSourceSize\":{\"x\":3,\"y\":0,\"w\":45,\"h\":48},\"sourceSize\":{\"w\":48,\"h\":48}},{\"filename\":\"trader-walk-s02.png\",\"frame\":{\"x\":382,\"y\":248,\"w\":45,\"h\":47},\"rotated\":false,\"trimmed\":true,\"spriteSourceSize\":{\"x\":2,\"y\":1,\"w\":45,\"h\":47},\"sourceSize\":{\"w\":48,\"h\":48}},{\"filename\":\"trader-walk-s03.png\",\"frame\":{\"x\":287,\"y\":151,\"w\":46,\"h\":48},\"rotated\":false,\"trimmed\":true,\"spriteSourceSize\":{\"x\":2,\"y\":0,\"w\":46,\"h\":48},\"sourceSize\":{\"w\":48,\"h\":48}},{\"filename\":\"trader-walk-w00.png\",\"frame\":{\"x\":422,\"y\":445,\"w\":39,\"h\":48},\"rotated\":false,\"trimmed\":true,\"spriteSourceSize\":{\"x\":8,\"y\":0,\"w\":39,\"h\":48},\"sourceSize\":{\"w\":48,\"h\":48}},{\"filename\":\"trader-walk-w01.png\",\"frame\":{\"x\":608,\"y\":250,\"w\":43,\"h\":47},\"rotated\":false,\"trimmed\":true,\"spriteSourceSize\":{\"x\":5,\"y\":1,\"w\":43,\"h\":47},\"sourceSize\":{\"w\":48,\"h\":48}},{\"filename\":\"trader-walk-w02.png\",\"frame\":{\"x\":405,\"y\":346,\"w\":39,\"h\":47},\"rotated\":false,\"trimmed\":true,\"spriteSourceSize\":{\"x\":9,\"y\":1,\"w\":39,\"h\":47},\"sourceSize\":{\"w\":48,\"h\":48}},{\"filename\":\"trader-walk-w03.png\",\"frame\":{\"x\":463,\"y\":379,\"w\":39,\"h\":47},\"rotated\":false,\"trimmed\":true,\"spriteSourceSize\":{\"x\":9,\"y\":1,\"w\":39,\"h\":47},\"sourceSize\":{\"w\":48,\"h\":48}},{\"filename\":\"trader.png\",\"frame\":{\"x\":96,\"y\":368,\"w\":44,\"h\":47},\"rotated\":false,\"trimmed\":true,\"spriteSourceSize\":{\"x\":2,\"y\":1,\"w\":44,\"h\":47},\"sourceSize\":{\"w\":48,\"h\":48}},{\"filename\":\"ui-best-adventure00.png\",\"frame\":{\"x\":287,\"y\":249,\"w\":46,\"h\":46},\"rotated\":false,\"trimmed\":true,\"spriteSourceSize\":{\"x\":1,\"y\":1,\"w\":46,\"h\":46},\"sourceSize\":{\"w\":48,\"h\":48}},{\"filename\":\"ui-best-adventure01.png\",\"frame\":{\"x\":239,\"y\":297,\"w\":46,\"h\":46},\"rotated\":false,\"trimmed\":true,\"spriteSourceSize\":{\"x\":1,\"y\":1,\"w\":46,\"h\":46},\"sourceSize\":{\"w\":48,\"h\":48}},{\"filename\":\"ui-checkbox00.png\",\"frame\":{\"x\":287,\"y\":297,\"w\":46,\"h\":46},\"rotated\":false,\"trimmed\":true,\"spriteSourceSize\":{\"x\":1,\"y\":1,\"w\":46,\"h\":46},\"sourceSize\":{\"w\":48,\"h\":48}},{\"filename\":\"ui-checkbox01.png\",\"frame\":{\"x\":335,\"y\":297,\"w\":46,\"h\":46},\"rotated\":false,\"trimmed\":true,\"spriteSourceSize\":{\"x\":1,\"y\":1,\"w\":46,\"h\":46},\"sourceSize\":{\"w\":48,\"h\":48}},{\"filename\":\"ui-guides00.png\",\"frame\":{\"x\":642,\"y\":150,\"w\":46,\"h\":46},\"rotated\":false,\"trimmed\":true,\"spriteSourceSize\":{\"x\":1,\"y\":1,\"w\":46,\"h\":46},\"sourceSize\":{\"w\":48,\"h\":48}},{\"filename\":\"ui-guides01.png\",\"frame\":{\"x\":690,\"y\":150,\"w\":46,\"h\":46},\"rotated\":false,\"trimmed\":true,\"spriteSourceSize\":{\"x\":1,\"y\":1,\"w\":46,\"h\":46},\"sourceSize\":{\"w\":48,\"h\":48}},{\"filename\":\"ui-play00.png\",\"frame\":{\"x\":738,\"y\":150,\"w\":46,\"h\":46},\"rotated\":false,\"trimmed\":true,\"spriteSourceSize\":{\"x\":1,\"y\":1,\"w\":46,\"h\":46},\"sourceSize\":{\"w\":48,\"h\":48}},{\"filename\":\"ui-play01.png\",\"frame\":{\"x\":653,\"y\":198,\"w\":46,\"h\":46},\"rotated\":false,\"trimmed\":true,\"spriteSourceSize\":{\"x\":1,\"y\":1,\"w\":46,\"h\":46},\"sourceSize\":{\"w\":48,\"h\":48}},{\"filename\":\"ui-settings00.png\",\"frame\":{\"x\":701,\"y\":198,\"w\":46,\"h\":46},\"rotated\":false,\"trimmed\":true,\"spriteSourceSize\":{\"x\":1,\"y\":1,\"w\":46,\"h\":46},\"sourceSize\":{\"w\":48,\"h\":48}},{\"filename\":\"ui-settings01.png\",\"frame\":{\"x\":464,\"y\":247,\"w\":46,\"h\":46},\"rotated\":false,\"trimmed\":true,\"spriteSourceSize\":{\"x\":1,\"y\":1,\"w\":46,\"h\":46},\"sourceSize\":{\"w\":48,\"h\":48}},{\"filename\":\"ui-spinner-down00.png\",\"frame\":{\"x\":512,\"y\":247,\"w\":46,\"h\":46},\"rotated\":false,\"trimmed\":true,\"spriteSourceSize\":{\"x\":1,\"y\":1,\"w\":46,\"h\":46},\"sourceSize\":{\"w\":48,\"h\":48}},{\"filename\":\"ui-spinner-down01.png\",\"frame\":{\"x\":560,\"y\":247,\"w\":46,\"h\":46},\"rotated\":false,\"trimmed\":true,\"spriteSourceSize\":{\"x\":1,\"y\":1,\"w\":46,\"h\":46},\"sourceSize\":{\"w\":48,\"h\":48}},{\"filename\":\"ui-spinner-left00.png\",\"frame\":{\"x\":473,\"y\":295,\"w\":46,\"h\":46},\"rotated\":false,\"trimmed\":true,\"spriteSourceSize\":{\"x\":1,\"y\":1,\"w\":46,\"h\":46},\"sourceSize\":{\"w\":48,\"h\":48}},{\"filename\":\"ui-spinner-left01.png\",\"frame\":{\"x\":521,\"y\":295,\"w\":46,\"h\":46},\"rotated\":false,\"trimmed\":true,\"spriteSourceSize\":{\"x\":1,\"y\":1,\"w\":46,\"h\":46},\"sourceSize\":{\"w\":48,\"h\":48}},{\"filename\":\"ui-spinner-right00.png\",\"frame\":{\"x\":654,\"y\":281,\"w\":46,\"h\":46},\"rotated\":false,\"trimmed\":true,\"spriteSourceSize\":{\"x\":1,\"y\":1,\"w\":46,\"h\":46},\"sourceSize\":{\"w\":48,\"h\":48}},{\"filename\":\"ui-spinner-right01.png\",\"frame\":{\"x\":783,\"y\":341,\"w\":46,\"h\":46},\"rotated\":false,\"trimmed\":true,\"spriteSourceSize\":{\"x\":1,\"y\":1,\"w\":46,\"h\":46},\"sourceSize\":{\"w\":48,\"h\":48}},{\"filename\":\"ui-spinner-up00.png\",\"frame\":{\"x\":569,\"y\":345,\"w\":46,\"h\":46},\"rotated\":false,\"trimmed\":true,\"spriteSourceSize\":{\"x\":1,\"y\":1,\"w\":46,\"h\":46},\"sourceSize\":{\"w\":48,\"h\":48}},{\"filename\":\"ui-spinner-up01.png\",\"frame\":{\"x\":748,\"y\":389,\"w\":46,\"h\":46},\"rotated\":false,\"trimmed\":true,\"spriteSourceSize\":{\"x\":1,\"y\":1,\"w\":46,\"h\":46},\"sourceSize\":{\"w\":48,\"h\":48}},{\"filename\":\"undefined.png\",\"frame\":{\"x\":586,\"y\":429,\"w\":28,\"h\":43},\"rotated\":false,\"trimmed\":true,\"spriteSourceSize\":{\"x\":10,\"y\":3,\"w\":28,\"h\":43},\"sourceSize\":{\"w\":48,\"h\":49}},{\"filename\":\"wall-B.png\",\"frame\":{\"x\":199,\"y\":51,\"w\":48,\"h\":48},\"rotated\":false,\"trimmed\":false,\"spriteSourceSize\":{\"x\":0,\"y\":0,\"w\":48,\"h\":48},\"sourceSize\":{\"w\":48,\"h\":48}},{\"filename\":\"wall-BL.png\",\"frame\":{\"x\":748,\"y\":339,\"w\":33,\"h\":48},\"rotated\":false,\"trimmed\":true,\"spriteSourceSize\":{\"x\":15,\"y\":0,\"w\":33,\"h\":48},\"sourceSize\":{\"w\":48,\"h\":48}},{\"filename\":\"wall-BLI.png\",\"frame\":{\"x\":249,\"y\":51,\"w\":48,\"h\":48},\"rotated\":false,\"trimmed\":false,\"spriteSourceSize\":{\"x\":0,\"y\":0,\"w\":48,\"h\":48},\"sourceSize\":{\"w\":48,\"h\":48}},{\"filename\":\"wall-BR.png\",\"frame\":{\"x\":749,\"y\":247,\"w\":34,\"h\":48},\"rotated\":false,\"trimmed\":true,\"spriteSourceSize\":{\"x\":0,\"y\":0,\"w\":34,\"h\":48},\"sourceSize\":{\"w\":48,\"h\":48}},{\"filename\":\"wall-BRI.png\",\"frame\":{\"x\":299,\"y\":51,\"w\":48,\"h\":48},\"rotated\":false,\"trimmed\":false,\"spriteSourceSize\":{\"x\":0,\"y\":0,\"w\":48,\"h\":48},\"sourceSize\":{\"w\":48,\"h\":48}},{\"filename\":\"wall-BTEE.png\",\"frame\":{\"x\":349,\"y\":51,\"w\":48,\"h\":48},\"rotated\":false,\"trimmed\":false,\"spriteSourceSize\":{\"x\":0,\"y\":0,\"w\":48,\"h\":48},\"sourceSize\":{\"w\":48,\"h\":48}},{\"filename\":\"wall-HI.png\",\"frame\":{\"x\":399,\"y\":51,\"w\":48,\"h\":48},\"rotated\":false,\"trimmed\":false,\"spriteSourceSize\":{\"x\":0,\"y\":0,\"w\":48,\"h\":48},\"sourceSize\":{\"w\":48,\"h\":48}},{\"filename\":\"wall-L.png\",\"frame\":{\"x\":831,\"y\":351,\"w\":33,\"h\":48},\"rotated\":false,\"trimmed\":true,\"spriteSourceSize\":{\"x\":15,\"y\":0,\"w\":33,\"h\":48},\"sourceSize\":{\"w\":48,\"h\":48}},{\"filename\":\"wall-LTEE.png\",\"frame\":{\"x\":617,\"y\":345,\"w\":33,\"h\":48},\"rotated\":false,\"trimmed\":true,\"spriteSourceSize\":{\"x\":15,\"y\":0,\"w\":33,\"h\":48},\"sourceSize\":{\"w\":48,\"h\":48}},{\"filename\":\"wall-R.png\",\"frame\":{\"x\":796,\"y\":389,\"w\":33,\"h\":48},\"rotated\":false,\"trimmed\":true,\"spriteSourceSize\":{\"x\":0,\"y\":0,\"w\":33,\"h\":48},\"sourceSize\":{\"w\":48,\"h\":48}},{\"filename\":\"wall-RTEE.png\",\"frame\":{\"x\":831,\"y\":401,\"w\":33,\"h\":48},\"rotated\":false,\"trimmed\":true,\"spriteSourceSize\":{\"x\":0,\"y\":0,\"w\":33,\"h\":48},\"sourceSize\":{\"w\":48,\"h\":48}},{\"filename\":\"wall-T.png\",\"frame\":{\"x\":449,\"y\":51,\"w\":48,\"h\":48},\"rotated\":false,\"trimmed\":false,\"spriteSourceSize\":{\"x\":0,\"y\":0,\"w\":48,\"h\":48},\"sourceSize\":{\"w\":48,\"h\":48}},{\"filename\":\"wall-TL.png\",\"frame\":{\"x\":617,\"y\":395,\"w\":33,\"h\":48},\"rotated\":false,\"trimmed\":true,\"spriteSourceSize\":{\"x\":15,\"y\":0,\"w\":33,\"h\":48},\"sourceSize\":{\"w\":48,\"h\":48}},{\"filename\":\"wall-TLI.png\",\"frame\":{\"x\":499,\"y\":51,\"w\":48,\"h\":48},\"rotated\":false,\"trimmed\":false,\"spriteSourceSize\":{\"x\":0,\"y\":0,\"w\":48,\"h\":48},\"sourceSize\":{\"w\":48,\"h\":48}},{\"filename\":\"wall-TR.png\",\"frame\":{\"x\":759,\"y\":437,\"w\":33,\"h\":48},\"rotated\":false,\"trimmed\":true,\"spriteSourceSize\":{\"x\":0,\"y\":0,\"w\":33,\"h\":48},\"sourceSize\":{\"w\":48,\"h\":48}},{\"filename\":\"wall-TRI.png\",\"frame\":{\"x\":549,\"y\":51,\"w\":48,\"h\":48},\"rotated\":false,\"trimmed\":false,\"spriteSourceSize\":{\"x\":0,\"y\":0,\"w\":48,\"h\":48},\"sourceSize\":{\"w\":48,\"h\":48}},{\"filename\":\"wall-TTEE.png\",\"frame\":{\"x\":599,\"y\":51,\"w\":48,\"h\":48},\"rotated\":false,\"trimmed\":false,\"spriteSourceSize\":{\"x\":0,\"y\":0,\"w\":48,\"h\":48},\"sourceSize\":{\"w\":48,\"h\":48}},{\"filename\":\"wall-VI.png\",\"frame\":{\"x\":649,\"y\":51,\"w\":48,\"h\":48},\"rotated\":false,\"trimmed\":false,\"spriteSourceSize\":{\"x\":0,\"y\":0,\"w\":48,\"h\":48},\"sourceSize\":{\"w\":48,\"h\":48}},{\"filename\":\"wall-XI.png\",\"frame\":{\"x\":699,\"y\":51,\"w\":48,\"h\":48},\"rotated\":false,\"trimmed\":false,\"spriteSourceSize\":{\"x\":0,\"y\":0,\"w\":48,\"h\":48},\"sourceSize\":{\"w\":48,\"h\":48}},{\"filename\":\"wall2-B.png\",\"frame\":{\"x\":749,\"y\":51,\"w\":48,\"h\":48},\"rotated\":false,\"trimmed\":false,\"spriteSourceSize\":{\"x\":0,\"y\":0,\"w\":48,\"h\":48},\"sourceSize\":{\"w\":48,\"h\":48}},{\"filename\":\"wall2-HI.png\",\"frame\":{\"x\":799,\"y\":51,\"w\":48,\"h\":48},\"rotated\":false,\"trimmed\":false,\"spriteSourceSize\":{\"x\":0,\"y\":0,\"w\":48,\"h\":48},\"sourceSize\":{\"w\":48,\"h\":48}},{\"filename\":\"wall2-T.png\",\"frame\":{\"x\":147,\"y\":101,\"w\":48,\"h\":48},\"rotated\":false,\"trimmed\":false,\"spriteSourceSize\":{\"x\":0,\"y\":0,\"w\":48,\"h\":48},\"sourceSize\":{\"w\":48,\"h\":48}},{\"filename\":\"waterskin.png\",\"frame\":{\"x\":276,\"y\":345,\"w\":42,\"h\":47},\"rotated\":false,\"trimmed\":true,\"spriteSourceSize\":{\"x\":5,\"y\":2,\"w\":42,\"h\":47},\"sourceSize\":{\"w\":49,\"h\":49}}],\"meta\":{\"app\":\"https://www.codeandweb.com/texturepacker\",\"version\":\"1.0\",\"image\":\"dungeon.png\",\"format\":\"RGBA8888\",\"size\":{\"w\":868,\"h\":501},\"scale\":\"1\",\"smartupdate\":\"$TexturePacker:SmartUpdate:94658cd81a5aeb0ba4c4b81be5cebb39:deac94a193445edcf54606c9a41efa30:9c0fba27a8a0c106083a8713f6c67b32$\"}}');\n\n\nvar $87dc2795575ea161$exports = {};\n$87dc2795575ea161$exports = new URL(\"about.167275cc.md\", import.meta.url).toString();\n\n\nvar $f99da778ee579cab$exports = {};\n$f99da778ee579cab$exports = new URL(\"armour.698e2b94.txt\", import.meta.url).toString();\n\n\nvar $94ddb04bf5e29e79$exports = {};\n$94ddb04bf5e29e79$exports = new URL(\"artefacts.07825358.txt\", import.meta.url).toString();\n\n\nvar $c80c85d492ab7d5a$exports = {};\n$c80c85d492ab7d5a$exports = new URL(\"magic.d01e3398.txt\", import.meta.url).toString();\n\n\nvar $795671ad888baef5$exports = {};\n$795671ad888baef5$exports = new URL(\"monsters.36f9886e.txt\", import.meta.url).toString();\n\n\nvar $d2a5d58b5408aedf$exports = {};\n$d2a5d58b5408aedf$exports = new URL(\"heroes.6da9b27a.txt\", import.meta.url).toString();\n\n\nvar $f5f0a69c3f51bc7d$exports = {};\n$f5f0a69c3f51bc7d$exports = new URL(\"money.8a4afea3.txt\", import.meta.url).toString();\n\n\nvar $8434dd039fabe3ba$exports = {};\n$8434dd039fabe3ba$exports = new URL(\"traders.5b2d56dc.txt\", import.meta.url).toString();\n\n\nvar $939651671126947b$exports = {};\n$939651671126947b$exports = new URL(\"weapons.470aeefb.txt\", import.meta.url).toString();\n\n\nvar $f579d6f2ff49d46e$exports = {};\n$f579d6f2ff49d46e$exports = new URL(\"dungeon_script.34f994bb.txt\", import.meta.url).toString();\n\n\nvar $c7b9d7e7b1a866d1$exports = {};\n$c7b9d7e7b1a866d1$exports = new URL(\"help.29d4aacb.md\", import.meta.url).toString();\n\n\nvar $9b17816e9421bf34$exports = {};\n$9b17816e9421bf34$exports = new URL(\"do-alto-do-trono-da-desolacao-trimmed.18cbfbbb.mp3\", import.meta.url).toString();\n\n\nvar $c8e1c52358f4b01a$exports = {};\n$c8e1c52358f4b01a$exports = new URL(\"privacy.9596e717.md\", import.meta.url).toString();\n\n\nvar $ad818775a1f17d84$exports = {};\n$ad818775a1f17d84$exports = new URL(\"quickStart.76062113.md\", import.meta.url).toString();\n\n\nvar $e9b929c6a5686351$exports = {};\n$e9b929c6a5686351$exports = new URL(\"punch-trimmed.d5ee82fe.mp3\", import.meta.url).toString();\n\n\nvar $c80282312db54902$exports = {};\n$c80282312db54902$exports = new URL(\"punch-trimmed-double.7756f095.mp3\", import.meta.url).toString();\n\n\nvar $6b1f536af9290193$exports = {};\n$6b1f536af9290193$exports = new URL(\"long-medium-swish-trimmed.69cad07b.mp3\", import.meta.url).toString();\n\n\nvar $333d6d6fa8b30bb9$exports = {};\n$333d6d6fa8b30bb9$exports = new URL(\"bubbling-trimmed.361718fa.mp3\", import.meta.url).toString();\n\n\nvar $68e8bdea1e306bb4$exports = {};\n$68e8bdea1e306bb4$exports = new URL(\"male-hurt-sound-trimmed.76fa38ed.mp3\", import.meta.url).toString();\n\n\nconst $3c63fcd0cf599322$export$54b43579d6cb0cf2 = {\n    ABOUT_MD: new URL($87dc2795575ea161$exports),\n    ALMANAC_MAP: new Map([\n        [\n            \"ARMOUR\",\n            new URL($f99da778ee579cab$exports)\n        ],\n        [\n            \"ARTEFACTS\",\n            new URL($94ddb04bf5e29e79$exports)\n        ],\n        [\n            \"MAGIC\",\n            new URL($c80c85d492ab7d5a$exports)\n        ],\n        [\n            \"ENEMIES\",\n            new URL($795671ad888baef5$exports)\n        ],\n        [\n            \"HEROES\",\n            new URL($d2a5d58b5408aedf$exports)\n        ],\n        [\n            \"MONEY\",\n            new URL($f5f0a69c3f51bc7d$exports)\n        ],\n        [\n            \"TRADERS\",\n            new URL($8434dd039fabe3ba$exports)\n        ],\n        [\n            \"WEAPONS\",\n            new URL($939651671126947b$exports)\n        ]\n    ]),\n    DUNGEON_SCRIPT: new URL($f579d6f2ff49d46e$exports),\n    HELP_MD: new URL($c7b9d7e7b1a866d1$exports),\n    MUSIC: new URL($9b17816e9421bf34$exports),\n    PRIVACY_MD: new URL($c8e1c52358f4b01a$exports),\n    QUICK_START_MD: new URL($ad818775a1f17d84$exports),\n    SOUND_EFFECTS_MAP: new Map([\n        [\n            \"PUNCH\",\n            new URL($e9b929c6a5686351$exports)\n        ],\n        [\n            \"DOUBLE PUNCH\",\n            new URL($c80282312db54902$exports)\n        ],\n        [\n            \"MISS\",\n            new URL($6b1f536af9290193$exports)\n        ],\n        [\n            \"POISONED\",\n            new URL($333d6d6fa8b30bb9$exports)\n        ],\n        [\n            \"DIE\",\n            new URL($68e8bdea1e306bb4$exports)\n        ]\n    ])\n};\nvar $a3a9222774fc4465$exports = {};\n$a3a9222774fc4465$exports = new URL(\"dungeon.8eed0f9b.png\", import.meta.url).toString();\n\n\nconst $3c63fcd0cf599322$export$bd73ddfe5f8475d8 = {\n    data: (0, (/*@__PURE__*/$parcel$interopDefault($e8347232c61bf163$exports))),\n    textureUrl: new URL($a3a9222774fc4465$exports)\n};\n\n\nfunction $20ee2fb47fce794c$export$ef24b48d1bf77082() {\n    const about = new (0, $de9cad813c8cf1e8$export$3e9165d18613c27e)({\n        label: (0, $2a5626561236b7e1$export$a7357cdd1f0b0168)`BUTTON ABOUT`,\n        action: ()=>$20ee2fb47fce794c$export$8bd46d86307c9a41((0, $3c63fcd0cf599322$export$54b43579d6cb0cf2).ABOUT_MD)\n    });\n    const help = new (0, $de9cad813c8cf1e8$export$3e9165d18613c27e)({\n        label: (0, $2a5626561236b7e1$export$a7357cdd1f0b0168)`BUTTON HELP`,\n        action: ()=>$20ee2fb47fce794c$export$8bd46d86307c9a41((0, $3c63fcd0cf599322$export$54b43579d6cb0cf2).HELP_MD)\n    });\n    const privacy = new (0, $de9cad813c8cf1e8$export$3e9165d18613c27e)({\n        label: (0, $2a5626561236b7e1$export$a7357cdd1f0b0168)`BUTTON PRIVACY`,\n        action: ()=>$20ee2fb47fce794c$export$8bd46d86307c9a41((0, $3c63fcd0cf599322$export$54b43579d6cb0cf2).PRIVACY_MD)\n    });\n    return $20ee2fb47fce794c$export$8bd46d86307c9a41((0, $3c63fcd0cf599322$export$54b43579d6cb0cf2).QUICK_START_MD, [\n        help,\n        about,\n        privacy\n    ]);\n}\nfunction $20ee2fb47fce794c$export$8bd46d86307c9a41(url, actionButtons) {\n    return (0, $5114bd1ce9a158d7$export$fa2f0f26e19d189b)(url).then((markdown)=>{\n        let html;\n        let text;\n        if (markdown) html = (0, $7a78d71b35cfa098$export$bd6a2eae5de02ff5)(markdown);\n        else text = (0, $2a5626561236b7e1$export$a7357cdd1f0b0168)`MESSAGE CANNOT LOAD URL ${url.toString()}`;\n        const container = (0, $de9cad813c8cf1e8$export$c8a8987d4410bf2d)(\"div\", {\n            className: \"parsed-markdown\",\n            text: text,\n            html: html\n        });\n        return (0, $81dd6b24526c5347$export$2e2bcd8739ae039).showControlsDialog(container, {\n            actionButtons: actionButtons,\n            row: true\n        });\n    });\n}\n\n\nfunction $80c5728456151bbf$export$7e05f8bc47a87cf8() {\n    const playAdventure = new (0, $de9cad813c8cf1e8$export$5519a977876d156d)({\n        leftLabel: (0, $2a5626561236b7e1$export$a7357cdd1f0b0168)`BUTTON PLAY ADVENTURE`,\n        imageName: \"ui-play00.png\",\n        internalLabel: true,\n        closes: \"PLAY ADVENTURE\"\n    });\n    const playCasual = new (0, $de9cad813c8cf1e8$export$5519a977876d156d)({\n        leftLabel: (0, $2a5626561236b7e1$export$a7357cdd1f0b0168)`BUTTON PLAY CASUAL`,\n        imageName: \"ui-play00.png\",\n        internalLabel: true,\n        closes: \"PLAY CASUAL\"\n    });\n    const settings = new (0, $de9cad813c8cf1e8$export$5519a977876d156d)({\n        leftLabel: (0, $2a5626561236b7e1$export$a7357cdd1f0b0168)`BUTTON SETTINGS`,\n        imageName: \"ui-settings00.png\",\n        internalLabel: true,\n        action: ()=>(0, $76f86892cf60c694$export$7da80b63b5cb0fd0)()\n    });\n    const bestAdventure = new (0, $de9cad813c8cf1e8$export$5519a977876d156d)({\n        leftLabel: (0, $2a5626561236b7e1$export$a7357cdd1f0b0168)`BUTTON BEST ADVENTURE`,\n        imageName: \"ui-best-adventure00.png\",\n        internalLabel: true,\n        action: ()=>(0, $4ebbde9be28bffa6$export$43941cd1606ecb62)()\n    });\n    const guides = new (0, $de9cad813c8cf1e8$export$5519a977876d156d)({\n        leftLabel: (0, $2a5626561236b7e1$export$a7357cdd1f0b0168)`BUTTON GUIDES`,\n        imageName: \"ui-guides00.png\",\n        internalLabel: true,\n        action: ()=>(0, $20ee2fb47fce794c$export$ef24b48d1bf77082)()\n    });\n    return (0, $81dd6b24526c5347$export$2e2bcd8739ae039).showControlsDialog((0, $2a5626561236b7e1$export$a7357cdd1f0b0168)`MENU TITLE MAIN`, {\n        actionButtons: [\n            guides,\n            settings,\n            bestAdventure,\n            playAdventure,\n            playCasual\n        ],\n        className: \"door\"\n    });\n}\n\n\n\n\n\n\n\n\n\n/**\n * Factor that is multiplied by the maxMovesPerTurn property of an actor to determine\n * if it will bother trying to reach the hero.\n */ const $f37d71a6f3b25578$var$TOO_MANY_TURNS_TO_REACH = 1.5;\n/**\n * Max number of tiles that the hero can move for it to be allowed as disengagement.\n */ const $f37d71a6f3b25578$var$MAX_TILES_FOR_DISENGAGEMENT = 2;\n/**\n * Enumeration of supported events\n * @enum {number}\n */ const $f37d71a6f3b25578$var$EventId = {\n    MAIN_MENU: 0,\n    CLICKED_FREE_GROUND: 1,\n    CLICKED_ENTRANCE: 2,\n    CLICKED_EXIT: 3\n};\n/** Should the game be saved and restored @type {boolean} */ let $f37d71a6f3b25578$var$persistentGame = true;\n/**\n * Class that allows a simulated movement of an actor. The movement using\n * the route finder takes place immediately, so that the effect of the actor's\n * final position can be used to affect other actors without waiting for the normal\n * duration of the move. The actual motion can then be actioned by a subsequent call to reenact.\n *\n */ class $f37d71a6f3b25578$var$ReplayableActorMover {\n    /** @type {Actor} */ #actor;\n    /** @type {AbstractModifier} */ #modifier;\n    /** @type {Position} */ #originalPosition;\n    /** @type {TileMap} */ #tileMap;\n    /** @type {RouteFinder} */ #routeFinder;\n    /** @type {boolean} */ #heroDisengaging;\n    /**\n   *\n   * @param {Actor} actor\n   * @param {TileMap} tileMap\n   * @param {RouteFinder} routeFinder\n   * @param {boolean} heroDisengaging\n   */ constructor(actor, tileMap, routeFinder, heroDisengaging){\n        this.#actor = actor;\n        this.#tileMap = tileMap;\n        this.#routeFinder = routeFinder;\n        this.#heroDisengaging = heroDisengaging;\n    }\n    /**\n   * Get a target grid position based on actor type\n   * @param {Point} actorGridPos\n   * @returns {Point}\n   */ #getTargetGridPoint(actorGridPos) {\n        if (this.#actor.moveType === (0, $9e949bc7e910e09d$export$be204faa7b4ee90a).HUNT) {\n            if (this.#heroDisengaging) return actorGridPos; // frozen\n            else {\n                const heroGridPos = this.#tileMap.worldPointToGrid($f37d71a6f3b25578$var$heroActor.position);\n                const orthoSeparation = actorGridPos.getOrthoSeparation(heroGridPos) - 1;\n                const maxHuntSeparation = this.#actor.maxTilesPerMove * $f37d71a6f3b25578$var$TOO_MANY_TURNS_TO_REACH;\n                if (orthoSeparation <= maxHuntSeparation) return this.#tileMap.worldPointToGrid($f37d71a6f3b25578$var$heroActor.position);\n            }\n        }\n        // everything else falls back to random walk.\n        return this.#getRandomGridPosition(actorGridPos, this.#actor.maxTilesPerMove);\n    }\n    /**\n   * Move actor to new position using the route finder. The move takes place instantly\n   * but can be replayed using the replay method.\n   */ moveInstantly() {\n        this.#originalPosition = (0, $90999bd6b14cd690$export$13807d9ee5a34a42).copy(this.#actor.position);\n        const actorGridPos = this.#tileMap.worldPointToGrid(this.#actor.position);\n        const targetGridPos = this.#getTargetGridPoint(actorGridPos);\n        if (!targetGridPos.coincident(actorGridPos) && this.#tileMap.canHeroSeeGridPoint(actorGridPos)) {\n            this.#routeFinder.actor = this.#actor;\n            let waypoints = this.#routeFinder.getDumbRouteNextTo(actorGridPos, targetGridPos, this.#actor.maxTilesPerMove);\n            if (waypoints.length > 0) {\n                this.#modifier = new (0, $6b87500f649b76df$export$c14f425b03c3e261)({\n                    path: waypoints,\n                    speed: 100\n                }, this.#actor.sprite.modifier);\n                this.#setActorsPosition(waypoints[waypoints.length - 1]);\n            }\n        }\n    }\n    /**\n   * Get a random target point.\n   * @param {Point} currentGrid\n   * @param {number} maxDistance - max movement in any direction\n   * @returns {Point}\n   */ #getRandomGridPosition(currentGrid, maxDistance) {\n        const x = $05d58a132d6b5767$export$75c671db1a13cf5f(currentGrid.x - maxDistance, currentGrid.x + maxDistance);\n        const y = $05d58a132d6b5767$export$75c671db1a13cf5f(currentGrid.y - maxDistance, currentGrid.y + maxDistance);\n        const dims = this.#tileMap.getDimsInTiles();\n        return new (0, $90999bd6b14cd690$export$baf26146a414f24a)($05d58a132d6b5767$export$e0b576e7a74416cd(x, 0, dims.width - 1), $05d58a132d6b5767$export$e0b576e7a74416cd(y, 0, dims.height - 1));\n    }\n    /**\n   * Set the actors position, updating the tile map occupancy as required.\n   * @param {Position} position\n   */ #setActorsPosition(position) {\n        const oldGridPoint = this.#tileMap.worldPointToGrid(this.#actor.position);\n        this.#actor.position = position;\n        const newGridPoint = this.#tileMap.worldPointToGrid(this.#actor.position);\n        this.#tileMap.moveTileOccupancyGridPoint(this.#actor, oldGridPoint, newGridPoint);\n    }\n    /**\n   * Restore the actor's original position.\n   */ #restorePosition() {\n        this.#setActorsPosition(this.#originalPosition);\n    }\n    /**\n   * Undertake the move defined by the modifier.\n   * @returns {Promise} fulfils to undefined.\n   */ replay() {\n        this.#restorePosition();\n        this.#cloneIfOrganic();\n        if (this.#modifier) return this.#modifier.applyAsTransientToSprite(this.#actor.sprite);\n        return Promise.resolve();\n    }\n    /**\n   * Clone the actor if currently spawning.\n   */ #cloneIfOrganic() {\n        if (this.#actor.isOrganic()) {\n            const clonedActor = (0, $ba30ae746a7f0f6d$export$260a0189ba712b47)(this.#actor.almanacEntry);\n            clonedActor.position = this.#originalPosition;\n            clonedActor.maxTilesPerMove = 0;\n            (0, $f8633d94d0c88c58$export$2e2bcd8739ae039).addActor(clonedActor);\n        }\n    }\n}\n/**\n * Class used to handle multiple ReplayableActorMovers.\n */ class $f37d71a6f3b25578$var$MovementReplayer {\n    /** @type {TileMap} */ #tileMap;\n    /** @type {RouteFinder} */ #routeFinder;\n    /** @type {ReplayableActorMover[]} */ #movers;\n    /** @type {boolean} */ #heroDisengaging;\n    /**\n   *\n   * @param {TileMap} tileMap\n   * @param {RouteFinder} routeFinder\n   * @param {boolean} heroDisengaging\n   */ constructor(tileMap, routeFinder, heroDisengaging){\n        this.#movers = [];\n        this.#tileMap = tileMap;\n        this.#routeFinder = routeFinder;\n        this.#heroDisengaging = heroDisengaging;\n    }\n    /**\n   * Add the actor and move immediately to hero. Note if the actor's movement\n   * is zero, the function does nothing.\n   * @param {Actor} actor\n   */ addAndMoveActor(actor) {\n        if (actor.maxTilesPerMove === 0) return;\n        const replayableMover = new $f37d71a6f3b25578$var$ReplayableActorMover(actor, this.#tileMap, this.#routeFinder, this.#heroDisengaging);\n        replayableMover.moveInstantly();\n        this.#movers.push(replayableMover);\n    }\n    /**\n   * Replay all movements in parallel.\n   * @returns {Promise} fulfils to undefined when all movements complete.\n   */ replay() {\n        const promises = [];\n        this.#movers.forEach((mover)=>promises.push(mover.replay()));\n        return Promise.all(promises);\n    }\n}\n/**\n * Basic State class\n */ class $f37d71a6f3b25578$var$State {\n    constructor(){}\n    /**\n   * Transition to a new state\n   * @returns {Promise} fulfills to null\n   */ async transitionTo(state) {\n        await this.onExit().then(()=>{\n            $f37d71a6f3b25578$var$currentState = state;\n            return state.onEntry();\n        });\n    }\n    /**\n   * Perform actions on entering the state.\n   * @returns {Promise} fulfills to null\n   */ onEntry() {\n        return Promise.resolve();\n    }\n    /**\n   * Handle event.\n   * @param {number} eventId\n   * @param  {module:utils/sprites/sprite~Sprite} sprite - the sprite initiating the event\n   * @param {Object} detail - object will depend on the eventId\n   * @returns {Promise} fulfills to null\n   */ onEvent(eventIdUnused) {\n        return Promise.resolve(null);\n    }\n    /**\n   * Actions when the state exits\n   * @returns {Promise} fulfills to null\n   */ onExit() {\n        return Promise.resolve(null);\n    }\n}\n/**\n * At WaitingToStart\n */ class $f37d71a6f3b25578$var$WaitingToStart extends $f37d71a6f3b25578$var$State {\n    onEntry() {\n        (0, $2d5b4e7cb639ebe1$export$2e2bcd8739ae039).log(\"WaitingToStart state\");\n    }\n    /**\n   * @override\n   * @param {number} eventId\n   * @param  {module:utils/sprites/sprite~Sprite} point - the point initiating the event\n   * @param {Object} detail - object will depend on the eventId\n   */ async onEvent(eventId, pointUnused, detailUnused) {\n        if (eventId === $f37d71a6f3b25578$var$EventId.MAIN_MENU) this.transitionTo(new $f37d71a6f3b25578$var$AtMainMenu());\n    }\n}\n/**\n * At main Menu\n */ class $f37d71a6f3b25578$var$AtMainMenu extends $f37d71a6f3b25578$var$State {\n    onEntry() {\n        return (0, $80c5728456151bbf$export$7e05f8bc47a87cf8)().then((response)=>{\n            $f37d71a6f3b25578$var$persistentGame = response !== \"PLAY CASUAL\";\n            return this.transitionTo(new $f37d71a6f3b25578$var$AtStart());\n        });\n    }\n}\n/**\n * At start state\n */ class $f37d71a6f3b25578$var$AtStart extends $f37d71a6f3b25578$var$State {\n    onEntry() {\n        (0, $2d5b4e7cb639ebe1$export$2e2bcd8739ae039).log(\"Enter AtStart\");\n        return this.#loadFirstOrContinuationScene().then((continuation)=>{\n            const name = $f37d71a6f3b25578$var$heroActor.traits.get(\"NAME\");\n            let message;\n            if (!$f37d71a6f3b25578$var$persistentGame) message = (0, $2a5626561236b7e1$export$a7357cdd1f0b0168)`MESSAGE DUNGEON INTRO CASUAL ${name}')}`;\n            else if (continuation) message = (0, $2a5626561236b7e1$export$a7357cdd1f0b0168)`MESSAGE DUNGEON INTRO CONTINUE ${name}`;\n            else message = (0, $2a5626561236b7e1$export$a7357cdd1f0b0168)`MESSAGE DUNGEON INTRO ${name}`;\n            return (0, $81dd6b24526c5347$export$2e2bcd8739ae039).showOkDialog(message, {\n                okButtonLabel: (0, $2a5626561236b7e1$export$a7357cdd1f0b0168)`BUTTON ENTER DUNGEON`,\n                className: \"wall\"\n            });\n        }).then((scene)=>{\n            $f37d71a6f3b25578$var$heroActor.sprite.position = (0, $f8633d94d0c88c58$export$2e2bcd8739ae039).getTileMap().getWorldPositionOfTileByEntry();\n            return scene;\n        }).then((scene)=>{\n            if (scene.intro) return (0, $81dd6b24526c5347$export$2e2bcd8739ae039).showOkDialog(scene.intro, {\n                className: \"mask\"\n            });\n            else return;\n        }).then(()=>$f37d71a6f3b25578$var$currentState.transitionTo(new $f37d71a6f3b25578$var$HeroTurnIdle()));\n    }\n    /**\n   * Load the first scene or if using saved games and there\n   * is one in progress, load that.\n   * @returns {Promise<boolean>} fulfils to true if continuation\n   */ #loadFirstOrContinuationScene() {\n        const savedGame = $f37d71a6f3b25578$var$persistentGame ? (0, $6c32e7787b3dbd90$export$e5b7197cc57951e6)() : null;\n        if (savedGame) return (0, $6664788cb4fc34b5$export$2e2bcd8739ae039).continueFromSavedScene(savedGame.sceneLevel, savedGame.hero).then(()=>true);\n        else return (0, $6664788cb4fc34b5$export$2e2bcd8739ae039).switchToFirstScene().then(()=>false);\n    }\n}\n/**\n * At Game Over\n */ class $f37d71a6f3b25578$var$AtGameOver extends $f37d71a6f3b25578$var$State {\n    async onEntry() {\n        (0, $2d5b4e7cb639ebe1$export$2e2bcd8739ae039).log(\"Enter AtGameOver\");\n        if ($f37d71a6f3b25578$var$persistentGame) (0, $6c32e7787b3dbd90$export$384cd953322e3851)($f37d71a6f3b25578$var$heroActor);\n        (0, $ae446a5a8f069dac$export$dc0b517182376fca)(\"YOU DIED!\", {\n            delaySecs: 1,\n            lifetimeSecs: 2,\n            position: $f37d71a6f3b25578$var$heroActor.position,\n            velocity: new (0, $90999bd6b14cd690$export$4a23b3811cef465)(0, -100, 0)\n        });\n        await (0, $f65da51c58cb4dd3$export$229c72e5fdee233b)(2).then(()=>(0, $81dd6b24526c5347$export$2e2bcd8739ae039).showOkDialog((0, $2a5626561236b7e1$export$a7357cdd1f0b0168)`MESSAGE DEFEAT`, {\n                okButtonLabel: (0, $2a5626561236b7e1$export$a7357cdd1f0b0168)`BUTTON TRY AGAIN`\n            })).then(()=>(0, $6664788cb4fc34b5$export$2e2bcd8739ae039).unloadCurrentScene()).then(()=>this.transitionTo(new $f37d71a6f3b25578$var$AtMainMenu()));\n    }\n}\n/**\n * At Game Completed\n */ class $f37d71a6f3b25578$var$AtGameCompleted extends $f37d71a6f3b25578$var$State {\n    async onEntry() {\n        (0, $2d5b4e7cb639ebe1$export$2e2bcd8739ae039).log(\"Enter AtGameCompleted\");\n        if ($f37d71a6f3b25578$var$persistentGame) (0, $6c32e7787b3dbd90$export$384cd953322e3851)($f37d71a6f3b25578$var$heroActor);\n        await (0, $81dd6b24526c5347$export$2e2bcd8739ae039).showOkDialog((0, $2a5626561236b7e1$export$a7357cdd1f0b0168)`MESSAGE VICTORY`, {\n            okButtonLabel: (0, $2a5626561236b7e1$export$a7357cdd1f0b0168)`BUTTON TRY AGAIN`\n        }).then(()=>(0, $6664788cb4fc34b5$export$2e2bcd8739ae039).unloadCurrentScene()).then(()=>this.transitionTo(new $f37d71a6f3b25578$var$AtMainMenu()));\n    }\n}\n/**\n * State where the hero is in the map.\n */ class $f37d71a6f3b25578$var$HeroTurnIdle extends $f37d71a6f3b25578$var$State {\n    constructor(){\n        super();\n    }\n    /**\n   * @override\n   */ async onEntry() {\n        await super.onEntry();\n        (0, $2d5b4e7cb639ebe1$export$2e2bcd8739ae039).log(\"Enter HeroTurnIdle\");\n        await $f37d71a6f3b25578$var$prepareHeroTurn();\n    }\n    /**\n   * @override\n   * @param {number} eventId\n   * @param  {module:utils/sprites/sprite~Sprite} point - the point initiating the event\n   * @param {Object} [detail = {}] - object will depend on the eventId\n   */ async onEvent(eventId, point, detail = {}) {\n        switch(eventId){\n            case $f37d71a6f3b25578$var$EventId.CLICKED_FREE_GROUND:\n                {\n                    const filter = await $f37d71a6f3b25578$var$disambiguateFilter(detail.filter, detail.occupant);\n                    if (filter === (0, $e5bc60fa707f771a$export$ea490c48f1c71643).INTERACT_TILE) await $f37d71a6f3b25578$var$interact(point);\n                    else if (filter === (0, $e5bc60fa707f771a$export$ea490c48f1c71643).OCCUPIED_TILE) await $f37d71a6f3b25578$var$showOccupantDetails(detail.occupant);\n                    else await $f37d71a6f3b25578$var$moveHeroToPoint(point, {\n                        usePathFinder: detail.filter !== (0, $e5bc60fa707f771a$export$ea490c48f1c71643).MOVE_OR_INTERACT_TILE\n                    });\n                    if ($f37d71a6f3b25578$var$heroActor.traits.get(\"HP\", 0) === 0) this.transitionTo(new $f37d71a6f3b25578$var$AtGameOver());\n                    else this.transitionTo(new $f37d71a6f3b25578$var$ComputerTurnIdle());\n                }\n                break;\n            case $f37d71a6f3b25578$var$EventId.CLICKED_ENTRANCE:\n                await (0, $81dd6b24526c5347$export$2e2bcd8739ae039).showOkDialog((0, $2a5626561236b7e1$export$a7357cdd1f0b0168)`MESSAGE ENTRANCE STUCK`);\n                break;\n            case $f37d71a6f3b25578$var$EventId.CLICKED_EXIT:\n                (0, $2d5b4e7cb639ebe1$export$2e2bcd8739ae039).log(\"Escaping\");\n                await $f37d71a6f3b25578$var$moveHeroToPoint(point, {\n                    usePathFinder: false\n                }).then(()=>(0, $81dd6b24526c5347$export$2e2bcd8739ae039).showOkDialog((0, $2a5626561236b7e1$export$a7357cdd1f0b0168)`MESSAGE OPEN EXIT`)).then(()=>$f37d71a6f3b25578$var$startNextScene(this));\n                break;\n        }\n        return Promise.resolve(null);\n    }\n}\n/**\n * State where the hero is in the map.\n */ class $f37d71a6f3b25578$var$HeroTurnInteracting extends $f37d71a6f3b25578$var$State {\n    constructor(){\n        super();\n    }\n    /**\n   * @override\n   */ async onEntry() {\n        await super.onEntry();\n        (0, $2d5b4e7cb639ebe1$export$2e2bcd8739ae039).log(\"Enter HeroTurnInteracting\");\n        await $f37d71a6f3b25578$var$prepareHeroTurn();\n    }\n    /**\n   * @override\n   * @param {number} eventId\n   * @param  {module:utils/sprites/sprite~Sprite} point - the point initiating the event\n   * @param {Object} [detail = {}] - object will depend on the eventId\n   */ async onEvent(eventId, point, detail = {}) {\n        switch(eventId){\n            case $f37d71a6f3b25578$var$EventId.CLICKED_FREE_GROUND:\n                {\n                    const filter = await $f37d71a6f3b25578$var$disambiguateFilter(detail.filter, detail.occupant);\n                    if (filter === (0, $e5bc60fa707f771a$export$ea490c48f1c71643).INTERACT_TILE) await $f37d71a6f3b25578$var$interact(point);\n                    else if (filter === (0, $e5bc60fa707f771a$export$ea490c48f1c71643).OCCUPIED_TILE) await $f37d71a6f3b25578$var$showOccupantDetails(detail.occupant);\n                    else await this.#tryToDisengage(point, {\n                        usePathFinder: detail.filter !== (0, $e5bc60fa707f771a$export$ea490c48f1c71643).MOVE_OR_INTERACT_TILE\n                    });\n                    if ($f37d71a6f3b25578$var$heroActor.traits.get(\"HP\", 0) === 0) this.transitionTo(new $f37d71a6f3b25578$var$AtGameOver());\n                    else if ((0, $f8633d94d0c88c58$export$2e2bcd8739ae039).getTileMap().getParticipants($f37d71a6f3b25578$var$heroActor).length === 0) this.transitionTo(new $f37d71a6f3b25578$var$ComputerTurnIdle());\n                    else this.transitionTo(new $f37d71a6f3b25578$var$ComputerTurnInteracting());\n                }\n                break;\n            case $f37d71a6f3b25578$var$EventId.CLICKED_ENTRANCE:\n                (0, $81dd6b24526c5347$export$2e2bcd8739ae039).showOkDialog((0, $2a5626561236b7e1$export$a7357cdd1f0b0168)`MESSAGE ENTRANCE STUCK`);\n                break;\n            case $f37d71a6f3b25578$var$EventId.CLICKED_EXIT:\n                await this.#tryToDisengage(point, {\n                    usePathFinder: false\n                }).then((success)=>{\n                    if (success) return (0, $81dd6b24526c5347$export$2e2bcd8739ae039).showOkDialog((0, $2a5626561236b7e1$export$a7357cdd1f0b0168)`MESSAGE OPEN EXIT WHILE FIGHTING`).then(()=>$f37d71a6f3b25578$var$startNextScene(this));\n                    else return Promise.resolve();\n                });\n                break;\n        }\n        return Promise.resolve(null);\n    }\n    /**\n   * Try to run\n   * @param {Point} point - position in world.\n   * @param {Object} [options = {usePathFinder: true}]\n   * @param {boolean} options.usePathFinder - should path finder be used.\n   * @returns {Promise} fulfils to true if successful else false.\n   */ #tryToDisengage(point, options = {\n        usePathFinder: true\n    }) {\n        const tileMap = (0, $f8633d94d0c88c58$export$2e2bcd8739ae039).getTileMap();\n        const opponents = tileMap.getParticipants($f37d71a6f3b25578$var$heroActor);\n        let respectDisengage = false;\n        for (const opponent of opponents)if (opponent.alive && opponent.interaction.respectDisengage($f37d71a6f3b25578$var$heroActor)) {\n            respectDisengage = true;\n            break;\n        }\n        const currentGridPoint = tileMap.worldPointToGrid($f37d71a6f3b25578$var$heroActor.position);\n        const targetGridPoint = tileMap.worldPointToGrid(point);\n        const movement = currentGridPoint.getOrthoSeparation(targetGridPoint);\n        if (respectDisengage && movement <= $f37d71a6f3b25578$var$MAX_TILES_FOR_DISENGAGEMENT) $f37d71a6f3b25578$var$heroActor.disengaging = true;\n        return $f37d71a6f3b25578$var$moveHeroToPoint(point, options).then(()=>true);\n    }\n}\nclass $f37d71a6f3b25578$var$ComputerTurnIdle extends $f37d71a6f3b25578$var$State {\n    constructor(){\n        super();\n    }\n    async onEntry() {\n        await super.onEntry();\n        (0, $2d5b4e7cb639ebe1$export$2e2bcd8739ae039).log(\"Enter ComputerTurnIdle\");\n        await $f37d71a6f3b25578$var$applyOrganicToActors();\n        const tileMap = (0, $f8633d94d0c88c58$export$2e2bcd8739ae039).getTileMap();\n        const routeFinder = new (0, $2d040b97465ee48e$export$4c535f8fc4520664)(tileMap);\n        const replayer = new $f37d71a6f3b25578$var$MovementReplayer(tileMap, routeFinder, $f37d71a6f3b25578$var$heroActor.disengaging);\n        for (const actor of (0, $f8633d94d0c88c58$export$2e2bcd8739ae039).getActors().values()){\n            if (actor !== $f37d71a6f3b25578$var$heroActor && actor.alive) {\n                if (!actor.isWandering() || $d9f2d68cf2746c78$export$b9d1fef74bbc4c0c(6) > 3) replayer.addAndMoveActor(actor);\n            }\n        }\n        for (const actor of (0, $f8633d94d0c88c58$export$2e2bcd8739ae039).getOrganicActors().values())if (actor.alive) replayer.addAndMoveActor(actor);\n        await replayer.replay();\n        const participants = tileMap.getParticipants($f37d71a6f3b25578$var$heroActor);\n        for (const actor of participants)if (actor.isEnemy()) {\n            this.transitionTo(new $f37d71a6f3b25578$var$HeroTurnInteracting());\n            return Promise.resolve(null);\n        }\n        this.transitionTo(new $f37d71a6f3b25578$var$HeroTurnIdle());\n    }\n}\nclass $f37d71a6f3b25578$var$ComputerTurnInteracting extends $f37d71a6f3b25578$var$State {\n    constructor(){\n        super();\n    }\n    async onEntry() {\n        await super.onEntry();\n        (0, $2d5b4e7cb639ebe1$export$2e2bcd8739ae039).log(\"Enter ComputerTurnInteracting\");\n        await $f37d71a6f3b25578$var$applyOrganicToActors();\n        const tileMap = (0, $f8633d94d0c88c58$export$2e2bcd8739ae039).getTileMap();\n        const routeFinder = new (0, $2d040b97465ee48e$export$4c535f8fc4520664)(tileMap);\n        const replayer = new $f37d71a6f3b25578$var$MovementReplayer(tileMap, routeFinder, $f37d71a6f3b25578$var$heroActor.disengaging);\n        const participants = tileMap.getParticipants($f37d71a6f3b25578$var$heroActor);\n        for (const actor of (0, $f8633d94d0c88c58$export$2e2bcd8739ae039).getActors().values())if (actor !== $f37d71a6f3b25578$var$heroActor && actor.alive && actor.interaction) {\n            if (participants.includes(actor) && actor.willInteract()) await actor.interaction.enact($f37d71a6f3b25578$var$heroActor);\n            else replayer.addAndMoveActor(actor);\n        }\n        for (const actor of (0, $f8633d94d0c88c58$export$2e2bcd8739ae039).getOrganicActors().values())if (actor.alive) replayer.addAndMoveActor(actor);\n        await replayer.replay();\n        if ($f37d71a6f3b25578$var$heroActor.traits.get(\"HP\", 0) === 0) this.transitionTo(new $f37d71a6f3b25578$var$AtGameOver());\n        else if (participants.length === 0) this.transitionTo(new $f37d71a6f3b25578$var$HeroTurnIdle());\n        else this.transitionTo(new $f37d71a6f3b25578$var$HeroTurnInteracting());\n        return Promise.resolve(null);\n    }\n}\n/**\n * Prepare hero turn\n * @returns {Promise}\n */ function $f37d71a6f3b25578$var$prepareHeroTurn() {\n    $f37d71a6f3b25578$var$heroActor.disengaging = false;\n    const tileMap = (0, $f8633d94d0c88c58$export$2e2bcd8739ae039).getTileMap();\n    const routes = new (0, $2d040b97465ee48e$export$4c535f8fc4520664)(tileMap, $f37d71a6f3b25578$var$heroActor).getAllRoutesFrom(tileMap.worldPointToGrid($f37d71a6f3b25578$var$heroActor.sprite.position), $f37d71a6f3b25578$var$heroActor.maxTilesPerMove);\n    tileMap.setMovementRoutes(routes);\n    tileMap.setInteractActors(tileMap.getParticipants($f37d71a6f3b25578$var$heroActor));\n    tileMap.calcReachableDoors($f37d71a6f3b25578$var$heroActor.position);\n    return Promise.resolve(null);\n}\n/**\n * Move to point\n * @param {Point} point\n * @param {Object} [options = {usePathFinder:true}]\n * @param {boolean} options.usePathFinder\n * @returns {Promise}\n */ function $f37d71a6f3b25578$var$moveHeroToPoint(point, options = {\n    usePathFinder: true\n}) {\n    const tileMap = (0, $f8633d94d0c88c58$export$2e2bcd8739ae039).getTileMap();\n    let waypoints;\n    if (options.usePathFinder) waypoints = tileMap.getWaypointsToWorldPoint(point);\n    else waypoints = [\n        $f37d71a6f3b25578$var$heroActor.position,\n        point\n    ];\n    tileMap.setMovementRoutes(null);\n    tileMap.setInteractActors(null);\n    if (waypoints) {\n        const modifier = new (0, $6b87500f649b76df$export$c14f425b03c3e261)({\n            path: waypoints,\n            speed: 100\n        }, $f37d71a6f3b25578$var$heroActor.sprite.modifier);\n        return modifier.applyAsTransientToSprite($f37d71a6f3b25578$var$heroActor.sprite);\n    } else return Promise.resolve();\n}\n/**\n * Apply organic actions to all actors.\n * @returns {Promise} fulfils to undefined on completion.\n */ function $f37d71a6f3b25578$var$applyOrganicToActors() {\n    const tileMap = (0, $f8633d94d0c88c58$export$2e2bcd8739ae039).getTileMap();\n    const promises = [];\n    (0, $f8633d94d0c88c58$export$2e2bcd8739ae039).getOrganicActors().forEach((organic)=>{\n        const participants = tileMap.getCoincidentActors(organic);\n        participants.forEach((actor)=>{\n            if (actor.alive && !actor.isOrganic() && organic.interaction) promises.push(organic.interaction.enact(actor));\n        });\n    });\n    return Promise.all(promises);\n}\n/**\n * Interact with point\n * @param {Point} point - position in world.\n * @returns {Promise}\n */ function $f37d71a6f3b25578$var$interact(point) {\n    /** @type {module:utils/tileMaps/tileMap~TileMap} */ const tileMap = (0, $f8633d94d0c88c58$export$2e2bcd8739ae039).getTileMap();\n    const tile = tileMap.getTileAtWorldPoint(point);\n    const targets = tile.getOccupants();\n    const promises = [];\n    for (const target of targets.values())if (target.interaction) promises.push(target.interaction.react($f37d71a6f3b25578$var$heroActor));\n    return Promise.all(promises);\n}\n/**\n * Start next scene.\n * @param {State} currentState\n * @returns {Promise} fulfils to undefined.\n */ function $f37d71a6f3b25578$var$startNextScene(currentState) {\n    if ($f37d71a6f3b25578$var$persistentGame) (0, $6c32e7787b3dbd90$export$384cd953322e3851)($f37d71a6f3b25578$var$heroActor);\n    if (!(0, $6664788cb4fc34b5$export$2e2bcd8739ae039).areThereMoreScenes()) return currentState.transitionTo(new $f37d71a6f3b25578$var$AtGameCompleted());\n    return (0, $6664788cb4fc34b5$export$2e2bcd8739ae039).unloadCurrentScene().then(()=>$3b30d95b613bb442$export$1fa1f898df932d80($f37d71a6f3b25578$var$heroActor)).then(()=>(0, $6664788cb4fc34b5$export$2e2bcd8739ae039).switchToNextScene()).then((scene)=>{\n        $f37d71a6f3b25578$var$heroActor.sprite.position = (0, $f8633d94d0c88c58$export$2e2bcd8739ae039).getTileMap().getWorldPositionOfTileByEntry();\n        return scene;\n    }).then((scene)=>{\n        if (scene.intro) return (0, $81dd6b24526c5347$export$2e2bcd8739ae039).showOkDialog(scene.intro, {\n            className: \"mask\"\n        });\n        else return;\n    }).then(()=>currentState.transitionTo(new $f37d71a6f3b25578$var$HeroTurnIdle()));\n}\n/**\n * Show occupant details.\n * @param {Actor} occupant\n * @returns {Promise} fulfils to undefined.\n */ function $f37d71a6f3b25578$var$showOccupantDetails(occupant) {\n    if (!occupant) {\n        (0, $2d5b4e7cb639ebe1$export$2e2bcd8739ae039).error(\"Clicked on tile but no occupant to view.\");\n        return Promise.resolve();\n    }\n    if (occupant.isHiddenArtefact()) return (0, $81dd6b24526c5347$export$2e2bcd8739ae039).showOkDialog((0, $2a5626561236b7e1$export$a7357cdd1f0b0168)`MESSAGE GROUND DISTURBED`);\n    return $3b30d95b613bb442$export$634672c91d44b77e(occupant, {\n        allowConsumption: occupant.isHero(),\n        allowMagicUse: occupant.isHero()\n    });\n}\n/**\n * Trigger an event. This will then be passed to the current State to handle.\n * @param {number} eventId\n * @param  {module:utils/sprites/sprite~Sprite} sprite - the sprite initiating the event\n * @param {Object} detail - object will depend on the eventId\n */ function $f37d71a6f3b25578$var$triggerEvent(eventId, sprite, detail) {\n    if ($f37d71a6f3b25578$var$ignoreEvents) {\n        (0, $2d5b4e7cb639ebe1$export$2e2bcd8739ae039).debug(`Ignoring event ${eventId} as still processing earlier event.`);\n        return;\n    }\n    $f37d71a6f3b25578$var$ignoreEvents = true;\n    $f37d71a6f3b25578$var$currentState.onEvent(eventId, sprite, detail).then(()=>{\n        $f37d71a6f3b25578$var$ignoreEvents = false;\n    });\n}\n/**\n * @param {ClickEventFilter} filter\n * @param {Actor} occupant\n * @returns {Promise<ClickEventFilter>}\n */ function $f37d71a6f3b25578$var$disambiguateFilter(filter, occupant) {\n    if (filter === (0, $e5bc60fa707f771a$export$ea490c48f1c71643).MOVE_OR_INTERACT_TILE) {\n        if (occupant?.isHiddenArtefact()) {\n            const storageDetails = occupant.storeManager.getFirstStorageDetails();\n            const artefact = storageDetails?.artefact;\n            return artefact ? (0, $e5bc60fa707f771a$export$ea490c48f1c71643).INTERACT_TILE : (0, $e5bc60fa707f771a$export$ea490c48f1c71643).MOVEMENT_TILE;\n        }\n        return (0, $81dd6b24526c5347$export$2e2bcd8739ae039).showChoiceDialog((0, $2a5626561236b7e1$export$a7357cdd1f0b0168)`DIALOG TITLE CHOICES`, (0, $2a5626561236b7e1$export$a7357cdd1f0b0168)`MESSAGE SEARCH OR MOVE`, [\n            (0, $2a5626561236b7e1$export$a7357cdd1f0b0168)`BUTTON CLIMB OVER`,\n            (0, $2a5626561236b7e1$export$a7357cdd1f0b0168)`BUTTON SEARCH`\n        ]).then((choice)=>{\n            if (choice === 0) return (0, $e5bc60fa707f771a$export$ea490c48f1c71643).MOVEMENT_TILE;\n            else return (0, $e5bc60fa707f771a$export$ea490c48f1c71643).INTERACT_TILE;\n        });\n    }\n    return filter;\n}\n/**\n * Set the current hero sprite.\n * @returns {module:players/actors~Actor}\n */ function $f37d71a6f3b25578$var$getHeroActor() {\n    return $f37d71a6f3b25578$var$heroActor;\n}\n/**\n * Start\n * @param {module:players/actors~Actor} actor - the hero actor\n */ function $f37d71a6f3b25578$var$setHero(actor) {\n    $f37d71a6f3b25578$var$heroActor = actor;\n}\n/**\n * @type {module:players/actors~Actor}\n */ let $f37d71a6f3b25578$var$heroActor;\n/**\n * @type {State}\n */ let $f37d71a6f3b25578$var$currentState = new $f37d71a6f3b25578$var$WaitingToStart();\n/**\n * Flag to determine whether events are accepted.\n */ let $f37d71a6f3b25578$var$ignoreEvents = false;\n/**\n * Single instance of the turn manager.\n */ const $f37d71a6f3b25578$var$TURN_MANAGER = {\n    EventId: $f37d71a6f3b25578$var$EventId,\n    getHeroActor: $f37d71a6f3b25578$var$getHeroActor,\n    setHero: $f37d71a6f3b25578$var$setHero,\n    triggerEvent: $f37d71a6f3b25578$var$triggerEvent\n};\nvar $f37d71a6f3b25578$export$2e2bcd8739ae039 = $f37d71a6f3b25578$var$TURN_MANAGER;\n\n\n\n\n/**\n * @file Conversion of map plan keys to images and tile definitions.\n *\n * @module scriptReaders/symbolMapping\n */ /**\n * License {@link https://opensource.org/license/mit/|MIT}\n *\n * Copyright 2024 Steve Butler (henspace.com).\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the “Software”), to deal in\n * the Software without restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n * Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */ \n\n/**\n * @typedef {module:scriptReaders/sceneDefinitionParser~TileDefinition} TileDefinition\n */ /**\n * @param {string} imageName\n * @returns {TileDefinition}\n */ function $611de0d332640d82$var$createGroundDefn(imageName) {\n    return {\n        role: (0, $e5bc60fa707f771a$export$b57fd20cbd2711c3).GROUND,\n        onClick: (target, point, detail)=>(0, $f37d71a6f3b25578$export$2e2bcd8739ae039).triggerEvent((0, $f37d71a6f3b25578$export$2e2bcd8739ae039).EventId.CLICKED_FREE_GROUND, point, detail),\n        image: imageName\n    };\n}\n/**\n * @param {string} imageName\n * @returns {TileDefinition}\n */ function $611de0d332640d82$var$createEntranceDefn(imageName) {\n    return {\n        role: (0, $e5bc60fa707f771a$export$b57fd20cbd2711c3).ENTRANCE,\n        onClick: (target, point, detail)=>(0, $f37d71a6f3b25578$export$2e2bcd8739ae039).triggerEvent((0, $f37d71a6f3b25578$export$2e2bcd8739ae039).EventId.CLICKED_ENTRANCE, point, detail),\n        image: imageName\n    };\n}\n/**\n * @param {string} imageName\n * @returns {TileDefinition}\n */ function $611de0d332640d82$var$createExitDefn(imageName) {\n    return {\n        role: (0, $e5bc60fa707f771a$export$b57fd20cbd2711c3).EXIT,\n        onClick: (target, point, detail)=>(0, $f37d71a6f3b25578$export$2e2bcd8739ae039).triggerEvent((0, $f37d71a6f3b25578$export$2e2bcd8739ae039).EventId.CLICKED_EXIT, point, detail),\n        image: imageName\n    };\n}\nconst $611de0d332640d82$export$7dccdb77f761a8ef = new Map([\n    [\n        \"x\",\n        {\n            role: (0, $e5bc60fa707f771a$export$b57fd20cbd2711c3).OBSTACLE,\n            image: \"block.png\"\n        }\n    ],\n    // wall parts\n    [\n        \"#-TL\",\n        {\n            role: (0, $e5bc60fa707f771a$export$b57fd20cbd2711c3).OBSTACLE,\n            image: \"wall-TL.png\"\n        }\n    ],\n    [\n        \"#-TLI\",\n        {\n            role: (0, $e5bc60fa707f771a$export$b57fd20cbd2711c3).OBSTACLE,\n            image: \"wall-TLI.png\"\n        }\n    ],\n    [\n        \"#-T\",\n        {\n            role: (0, $e5bc60fa707f771a$export$b57fd20cbd2711c3).OBSTACLE,\n            image: \"wall-T.png\"\n        }\n    ],\n    [\n        \"#-TR\",\n        {\n            role: (0, $e5bc60fa707f771a$export$b57fd20cbd2711c3).OBSTACLE,\n            image: \"wall-TR.png\"\n        }\n    ],\n    [\n        \"#-TRI\",\n        {\n            role: (0, $e5bc60fa707f771a$export$b57fd20cbd2711c3).OBSTACLE,\n            image: \"wall-TRI.png\"\n        }\n    ],\n    [\n        \"#-R\",\n        {\n            role: (0, $e5bc60fa707f771a$export$b57fd20cbd2711c3).OBSTACLE,\n            image: \"wall-R.png\"\n        }\n    ],\n    [\n        \"#-BR\",\n        {\n            role: (0, $e5bc60fa707f771a$export$b57fd20cbd2711c3).OBSTACLE,\n            image: \"wall-BR.png\"\n        }\n    ],\n    [\n        \"#-BRI\",\n        {\n            role: (0, $e5bc60fa707f771a$export$b57fd20cbd2711c3).OBSTACLE,\n            image: \"wall-BRI.png\"\n        }\n    ],\n    [\n        \"#-B\",\n        {\n            role: (0, $e5bc60fa707f771a$export$b57fd20cbd2711c3).OBSTACLE,\n            image: \"wall-B.png\"\n        }\n    ],\n    [\n        \"#-BL\",\n        {\n            role: (0, $e5bc60fa707f771a$export$b57fd20cbd2711c3).OBSTACLE,\n            image: \"wall-BL.png\"\n        }\n    ],\n    [\n        \"#-BLI\",\n        {\n            role: (0, $e5bc60fa707f771a$export$b57fd20cbd2711c3).OBSTACLE,\n            image: \"wall-BLI.png\"\n        }\n    ],\n    [\n        \"#-L\",\n        {\n            role: (0, $e5bc60fa707f771a$export$b57fd20cbd2711c3).OBSTACLE,\n            image: \"wall-L.png\"\n        }\n    ],\n    [\n        \"#-XI\",\n        {\n            role: (0, $e5bc60fa707f771a$export$b57fd20cbd2711c3).OBSTACLE,\n            image: \"wall-XI.png\"\n        }\n    ],\n    [\n        \"#-VI\",\n        {\n            role: (0, $e5bc60fa707f771a$export$b57fd20cbd2711c3).OBSTACLE,\n            image: \"wall-VI.png\"\n        }\n    ],\n    [\n        \"#-HI\",\n        {\n            role: (0, $e5bc60fa707f771a$export$b57fd20cbd2711c3).OBSTACLE,\n            image: \"wall-HI.png\"\n        }\n    ],\n    [\n        \"#-TTEE\",\n        {\n            role: (0, $e5bc60fa707f771a$export$b57fd20cbd2711c3).OBSTACLE,\n            image: \"wall-TTEE.png\"\n        }\n    ],\n    [\n        \"#-RTEE\",\n        {\n            role: (0, $e5bc60fa707f771a$export$b57fd20cbd2711c3).OBSTACLE,\n            image: \"wall-RTEE.png\"\n        }\n    ],\n    [\n        \"#-BTEE\",\n        {\n            role: (0, $e5bc60fa707f771a$export$b57fd20cbd2711c3).OBSTACLE,\n            image: \"wall-BTEE.png\"\n        }\n    ],\n    [\n        \"#-LTEE\",\n        {\n            role: (0, $e5bc60fa707f771a$export$b57fd20cbd2711c3).OBSTACLE,\n            image: \"wall-LTEE.png\"\n        }\n    ],\n    [\n        \"#\",\n        {\n            role: (0, $e5bc60fa707f771a$export$b57fd20cbd2711c3).OBSTACLE,\n            image: \"block.png\"\n        }\n    ],\n    // doors\n    [\n        \"=-T\",\n        $611de0d332640d82$var$createExitDefn(\"door-T.png\")\n    ],\n    [\n        \"=-R\",\n        $611de0d332640d82$var$createExitDefn(\"door-R.png\")\n    ],\n    [\n        \"=-B\",\n        $611de0d332640d82$var$createExitDefn(\"door-B.png\")\n    ],\n    [\n        \"=-L\",\n        $611de0d332640d82$var$createExitDefn(\"door-L.png\")\n    ],\n    [\n        \"--T\",\n        $611de0d332640d82$var$createEntranceDefn(\"door-T.png\")\n    ],\n    [\n        \"--R\",\n        $611de0d332640d82$var$createEntranceDefn(\"door-R.png\")\n    ],\n    [\n        \"--B\",\n        $611de0d332640d82$var$createEntranceDefn(\"door-B.png\")\n    ],\n    [\n        \"--L\",\n        $611de0d332640d82$var$createEntranceDefn(\"door-L.png\")\n    ],\n    [\n        \"=\",\n        {\n            role: (0, $e5bc60fa707f771a$export$b57fd20cbd2711c3).OBSTACLE,\n            image: \"block.png\"\n        }\n    ],\n    [\n        \"-\",\n        {\n            role: (0, $e5bc60fa707f771a$export$b57fd20cbd2711c3).OBSTACLE,\n            image: \"block.png\"\n        }\n    ],\n    // ground\n    [\n        \".\",\n        $611de0d332640d82$var$createGroundDefn(\"floor.png\")\n    ],\n    [\n        \".-SBW\",\n        $611de0d332640d82$var$createGroundDefn(\"floor-SBW.png\")\n    ],\n    [\n        \".-SBE\",\n        $611de0d332640d82$var$createGroundDefn(\"floor-SBE.png\")\n    ],\n    [\n        \",-SBE\",\n        $611de0d332640d82$var$createGroundDefn(\"floor2-SBE.png\")\n    ],\n    [\n        \",-SBW\",\n        $611de0d332640d82$var$createGroundDefn(\"floor2-SBW.png\")\n    ],\n    [\n        \",\",\n        $611de0d332640d82$var$createGroundDefn(\"floor2.png\")\n    ]\n]);\n\n\n/**\n * @file Encapsulation of a Scene. A scene equates normally to a level in a\n * dungeon.\n *\n * @module game/scene\n */ /**\n * License {@link https://opensource.org/license/mit/|MIT}\n *\n * Copyright 2024 Steve Butler\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the “Software”), to deal in\n * the Software without restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n * Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */ \n\nclass $3751b2d81c8b6353$export$765fdbac0eda2a0b {\n    /** @type {number} */ #globalOpacity;\n    /** @type {number} */ #deltaOpacityPerSec;\n    /** @type {number} */ #fadeInSecs;\n    /** @type {number} */ #fadeOutSecs;\n    /** Fade out promise resolution @type {function}  */ #fadeOutResolve;\n    /** @type {module:players/actors~Actor} */ heroActor;\n    /** @type {string} */ intro;\n    /**\n   * Create the scene.\n   * @param {number} [fadeInSecs = 2]\n   * @param {number} [fadeOutSecs = 2]\n   */ constructor(fadeInSecs = 2, fadeOutSecs = 2){\n        if (fadeInSecs > 0) {\n            this.#globalOpacity = 0;\n            this.#deltaOpacityPerSec = 1 / fadeInSecs;\n        } else this.#deltaOpacityPerSec = 1;\n        this.#fadeInSecs = fadeInSecs;\n        this.#fadeOutSecs = fadeOutSecs;\n    }\n    /**\n   * Get the global opacity.\n   * @returns {number}\n   */ getOpacity() {\n        return this.#globalOpacity;\n    }\n    /**\n   * Called at start. Game waits for preload before calling initialise.\n   * @function Scene#load\n   * @returns {Promise} fulfills to null\n   */ load() {\n        return this.doLoad();\n    }\n    /**\n   * Called after load. Game waits for initialise before starting the loop.\n   * @function Scene#initialise\n   * @returns {Promise} fulfills to null\n   */ initialise() {\n        return this.doInitialise();\n    }\n    /**\n   * Called in animation phase\n   * @function Scene#update\n   * @param {number} deltaSeconds\n   */ update(deltaSeconds) {\n        (0, $a1820c190f7a8b2e$export$2e2bcd8739ae039).clearCanvas();\n        (0, $a1820c190f7a8b2e$export$2e2bcd8739ae039).setOpacity(this.#globalOpacity);\n        (0, $f8633d94d0c88c58$export$2e2bcd8739ae039).update(deltaSeconds);\n        this.doUpdate(deltaSeconds);\n        (0, $a1820c190f7a8b2e$export$2e2bcd8739ae039).setOpacity(1);\n        if (this.#deltaOpacityPerSec !== 0) {\n            this.#globalOpacity += deltaSeconds * this.#deltaOpacityPerSec;\n            if (this.#globalOpacity > 1) {\n                this.#deltaOpacityPerSec = 0;\n                this.#globalOpacity = 1;\n            } else if (this.#globalOpacity < 0) {\n                this.#deltaOpacityPerSec = 0;\n                this.#globalOpacity = 0;\n            }\n        }\n        if (this.#fadeOutResolve && this.#globalOpacity === 0) {\n            this.#fadeOutResolve();\n            this.#fadeOutResolve = null;\n        }\n    }\n    /**\n   * Called when scene swapped out\n   * @function Scene#unload\n   * @returns {Promise} fulfills to null\n   */ unload() {\n        return this.#fadeOut().then(()=>this.doUnload());\n    }\n    /**\n   * Fade out the scene\n   * @returns {Promise} fulfils to undefined when fade complete.\n   */ #fadeOut() {\n        if (this.#fadeOutSecs > 0) {\n            this.#deltaOpacityPerSec = -1 / this.#fadeOutSecs;\n            return new Promise((resolve)=>{\n                this.#fadeOutResolve = resolve;\n            });\n        } else return Promise.resolve();\n    }\n    /**\n   * Called at start. Game waits for preload before calling initialise.\n   * This should be overridden.\n   * @returns {Promise} fulfills to null\n   */ doLoad() {\n        return Promise.resolve();\n    }\n    /**\n   * Called after load. Game waits for initialise before starting the loop.\n   * This should be overridden\n   * @returns {Promise} fulfills to null\n   */ doInitialise() {\n        return Promise.resolve();\n    }\n    /**\n   * Called in animation phase\n   * This should be overridden\n   * @param {number} deltaSeconds\n   */ doUpdate(deltaSecondsUnused) {\n        return Promise.resolve();\n    }\n    /**\n   * Called when scene swapped out\n   * This should be overridden\n   * @returns {Promise} fulfills to null\n   */ doUnload() {\n        return Promise.resolve();\n    }\n}\n\n\n\n\n\n\n\n\n\n\n\n\nconst $fee0c02ce96028b6$var$GRID_SIZE = (0, $e49c2c8387e6101d$export$2e2bcd8739ae039).TILE_SIZE;\n/** @type {Actor} */ let $fee0c02ce96028b6$var$lastHero;\n/**\n * @typedef {Object} ActorDefn\n * @property {string} id\n * @property {module:dnd/traits~CharacterTraits} traits\n * @property {string} description\n */ /**\n * Create the hero. If the scene definition doesn't have a hero definition, the\n * lastHero is used.\n * @param {SceneDefinition} sceneDefn\n * @returns {Actor}\n */ function $fee0c02ce96028b6$var$createHero(sceneDefn) {\n    if (sceneDefn.hero instanceof (0, $9e949bc7e910e09d$export$f73d3eb6fd876d80)) $fee0c02ce96028b6$var$lastHero = sceneDefn.hero;\n    else if (sceneDefn.hero) {\n        const actor = (0, $ba30ae746a7f0f6d$export$260a0189ba712b47)(sceneDefn.hero);\n        $fee0c02ce96028b6$var$lastHero = actor;\n    } else if (!$fee0c02ce96028b6$var$lastHero) throw new Error(\"No hero has been defined.\");\n    return $fee0c02ce96028b6$var$lastHero;\n}\n/**\n * Create the enemies.\n * @param {SceneDefinition} sceneDefn\n * @returns {Actor[]}\n */ function $fee0c02ce96028b6$var$createEnemies(sceneDefn) {\n    const enemies = [];\n    sceneDefn.enemies.forEach((almanacEntry)=>{\n        const actor = (0, $ba30ae746a7f0f6d$export$260a0189ba712b47)(almanacEntry);\n        enemies.push(actor);\n    });\n    return enemies;\n}\n/**\n * Create the artefacts.\n * @param {SceneDefinition} sceneDefn\n * @returns {Actor[]}\n */ function $fee0c02ce96028b6$var$createArtefacts(sceneDefn) {\n    const artefacts = [];\n    sceneDefn.artefacts.forEach((almanacEntry)=>{\n        let id;\n        let type;\n        if (almanacEntry.type === (0, $c8439a0aab365384$export$e451727f06f039f2).SPELL || almanacEntry.type === (0, $c8439a0aab365384$export$e451727f06f039f2).CANTRIP) {\n            id = \"engraved_pillar\";\n            type = (0, $9e949bc7e910e09d$export$ec2f7d5cc9321319).PROP;\n        } else {\n            id = \"hidden_artefact\";\n            type = (0, $9e949bc7e910e09d$export$ec2f7d5cc9321319).HIDDEN_ARTEFACT;\n        }\n        const actor = (0, $ba30ae746a7f0f6d$export$260a0189ba712b47)({\n            id: id,\n            name: $191a34beaf268e78$export$9544647517c5db11(id),\n            description: $191a34beaf268e78$export$83737b3fc54f1416(id),\n            imageName: id,\n            type: type,\n            traitsString: \"\"\n        });\n        const artefact = (0, $35cb0fa7cb9f77a0$export$f71b2f640dbd3eb)(almanacEntry);\n        actor.storeManager.addArtefact(artefact);\n        artefacts.push(actor);\n    });\n    return artefacts;\n}\n/**\n * Add an artefact from the almanac.\n * @param {Actor[]} actors\n * @param {AlmanacEntry} almanacEntry\n * @param {Object} options\n * @param {boolean} options.equip - if true, try to equip rather than stash.\n */ function $fee0c02ce96028b6$var$addArtefactToActor(actor, almanacEntry, options) {\n    if (almanacEntry) {\n        const artefact = (0, $35cb0fa7cb9f77a0$export$f71b2f640dbd3eb)(almanacEntry);\n        if (options.equip && artefact.equipStoreType) actor.storeManager?.equip(artefact, {\n            direct: true\n        });\n        else actor.storeManager?.stash(artefact, {\n            direct: true\n        });\n    }\n}\n/**\n * Add an artefact from the almanac.\n * @param {Actor[]} actors\n * @param {Almanac} almanac\n * @param {Object} options\n * @param {number} options.qty - number to add.\n * @param {boolean} options.equip - if true, try to equip rather than stash.\n */ function $fee0c02ce96028b6$var$addRandomArtefactsToActor(actor, almanac, options) {\n    while(options.qty-- > 0){\n        const almanacEntry = almanac.getRandomEntry();\n        $fee0c02ce96028b6$var$addArtefactToActor(actor, almanacEntry, options);\n    }\n}\n/**\n * Scene created from a scene definition.\n */ class $fee0c02ce96028b6$var$ParsedScene extends (0, $3751b2d81c8b6353$export$765fdbac0eda2a0b) {\n    /** @type {SceneDefinition} */ #sceneDefn;\n    /** Construct the scene from a definition. */ constructor(sceneDefn){\n        super();\n        this.#sceneDefn = sceneDefn;\n        this.intro = sceneDefn.intro;\n    }\n    /** @override */ doLoad() {\n        return Promise.resolve();\n    }\n    doInitialise() {\n        const tilePlan = (0, $aa430e5af6097d50$export$5bb21ea01a6aaf38).generateTileMapPlan(this.#sceneDefn.mapDesign, (0, $611de0d332640d82$export$7dccdb77f761a8ef));\n        this.heroActor = $fee0c02ce96028b6$var$createHero(this.#sceneDefn);\n        const tileMap = new (0, $e5bc60fa707f771a$export$16ec26812de3ce7a)((0, $a1820c190f7a8b2e$export$2e2bcd8739ae039).getContext2D(), tilePlan, $fee0c02ce96028b6$var$GRID_SIZE, this.heroActor);\n        (0, $f8633d94d0c88c58$export$2e2bcd8739ae039).setTileMap(tileMap);\n        const pooledArtefactAlmanac = (0, $4d7b11e4136f6d93$export$62947dea9802b3b0).getPooledAlmanac([\n            \"ARTEFACTS\",\n            \"ARMOUR\",\n            \"WEAPONS\"\n        ], (entry)=>entry.minLevel <= (0, $6664788cb4fc34b5$export$2e2bcd8739ae039).getCurrentSceneLevel());\n        const water = pooledArtefactAlmanac.find((entry)=>entry.id === \"waterskin\");\n        const rations = pooledArtefactAlmanac.find((entry)=>entry.id === \"iron_rations\");\n        $fee0c02ce96028b6$var$createEnemies(this.#sceneDefn).forEach((enemy)=>{\n            enemy.position = tileMap.getRandomFreeGroundTile().worldPoint;\n            (0, $f8633d94d0c88c58$export$2e2bcd8739ae039).addActor(enemy);\n            if (enemy.isTrader()) {\n                let qtyOfItems = 7;\n                if ((0, $d9f2d68cf2746c78$export$b9d1fef74bbc4c0c)(6) > 3) {\n                    $fee0c02ce96028b6$var$addArtefactToActor(enemy, water, {\n                        equip: false\n                    });\n                    qtyOfItems--;\n                }\n                if ((0, $d9f2d68cf2746c78$export$b9d1fef74bbc4c0c)(6) > 3) {\n                    $fee0c02ce96028b6$var$addArtefactToActor(enemy, rations, {\n                        equip: false\n                    });\n                    qtyOfItems--;\n                }\n                $fee0c02ce96028b6$var$addRandomArtefactsToActor(enemy, pooledArtefactAlmanac, {\n                    qty: qtyOfItems,\n                    equip: false\n                });\n            }\n        });\n        $fee0c02ce96028b6$var$createArtefacts(this.#sceneDefn).forEach((artefact)=>{\n            artefact.position = tileMap.getRandomFreeGroundTile().worldPoint;\n            (0, $f8633d94d0c88c58$export$2e2bcd8739ae039).addArtefact(artefact);\n        });\n        (0, $6664788cb4fc34b5$export$2e2bcd8739ae039).setCameraToTrack(this.heroActor.sprite, 200, 0);\n        (0, $f8633d94d0c88c58$export$2e2bcd8739ae039).addActor(this.heroActor);\n        (0, $f37d71a6f3b25578$export$2e2bcd8739ae039).setHero(this.heroActor);\n        return Promise.resolve();\n    }\n    /**\n   * @override\n   */ doUpdate(deltaSecondsUnused) {\n        return;\n    }\n    /**\n   * @override\n   */ doUnload() {\n        return Promise.resolve(null);\n    }\n}\nfunction $fee0c02ce96028b6$export$cc8138686166266c(sceneDefn) {\n    return new $fee0c02ce96028b6$var$ParsedScene(sceneDefn);\n}\n\n\n\n/**\n * @file Navigation button set for the HUD\n *\n * @module hud/hudNavSet\n */ /**\n * License {@link https://opensource.org/license/mit/|MIT}\n *\n * Copyright 2024 Steve Butler (henspace.com).\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the “Software”), to deal in\n * the Software without restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n * Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */ \n\n\n/**\n * @file Camera dolly class. This provides a mechanism to allow the canvas to\n * track a specified Sprite.\n *\n * @module game/camera\n */ /**\n * License {@link https://opensource.org/license/mit/|MIT}\n *\n * Copyright 2024 Steve Butler\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the “Software”), to deal in\n * the Software without restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n * Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */ \n\n\n\nconst $1e8586c4726fc461$export$17735bdb93cbf279 = {\n    OFF: 0,\n    HERO: 1,\n    VELOCITY: 2\n};\nclass $1e8586c4726fc461$export$39ca3bda943df04d {\n    /** @type {module:utils/sprites/sprite~Sprite} */ #sprite;\n    /** @type {module:utils/sprites/modifiers~AbstractModifier} */ #heroTracker;\n    /** @type {module:utils/sprites/modifiers~AbstractModifier} */ #velocityTracker;\n    /** @type {number} */ #trackingMethod;\n    /**\n   * Create a camera dolly. This is a sprite that is designed to track a target.\n   * @param {Sprite} target\n   * @param {number} speed\n   * @param {number} proportionSeparated - max space between camera and target as proportion of minimum screen dimension.\n   */ constructor(target, speed, proportionSeparated = 0){\n        const canvasDims = (0, $a1820c190f7a8b2e$export$2e2bcd8739ae039).getCanvasDimensions();\n        const separation = proportionSeparated * Math.min(canvasDims.width, canvasDims.height);\n        this.#sprite = new (0, $5b82fcc8e5572650$export$3075603db8e6204c)();\n        this.#heroTracker = new (0, $6b87500f649b76df$export$254d9747e34ddc90)({\n            prey: target,\n            speed: speed,\n            maxSeparation: separation\n        });\n        this.#velocityTracker = new (0, $6b87500f649b76df$export$9600794ac1f85e81)();\n        this.#heroTracker.applyAsContinuousToSprite(this.#sprite);\n    }\n    /**\n   * Update the camera position.\n   * @param {number} deltaSeconds - elapsed time since last update.\n   */ update(deltaSeconds) {\n        if (this.#trackingMethod !== $1e8586c4726fc461$export$17735bdb93cbf279.OFF) {\n            this.#sprite.update(deltaSeconds);\n            (0, $a1820c190f7a8b2e$export$2e2bcd8739ae039).centreCanvasOn(this.#sprite.position);\n        }\n    }\n    /**\n   * Set the velocity to dX, dY. This will automatically set tracking to velocity.\n   * @param {number} dX\n   * @param {number} dY\n   */ setVelocity(vX, vY) {\n        this.setTrackingMethod($1e8586c4726fc461$export$17735bdb93cbf279.VELOCITY);\n        this.#sprite.velocity.x = vX;\n        this.#sprite.velocity.y = vY;\n    }\n    /**\n   * Pan the camera by dx, dy. Automatic tracking is switched off.\n   * @param {number} dx\n   * @param {number} dy\n   */ panBy(dx, dy) {\n        this.#sprite.position.x += dx;\n        this.#sprite.position.y += dy;\n        (0, $a1820c190f7a8b2e$export$2e2bcd8739ae039).centreCanvasOn(this.#sprite.position);\n    }\n    /**\n   * Set the trackingMethod\n   * @param {number} method - CameraTracking enum\n   */ setTrackingMethod(method) {\n        if (method === this.#trackingMethod) return;\n        this.#trackingMethod = method;\n        switch(method){\n            case $1e8586c4726fc461$export$17735bdb93cbf279.HERO:\n                this.#heroTracker.applyAsContinuousToSprite(this.#sprite);\n                break;\n            case $1e8586c4726fc461$export$17735bdb93cbf279.VELOCITY:\n                this.#velocityTracker.applyAsContinuousToSprite(this.#sprite);\n                break;\n            case $1e8586c4726fc461$export$17735bdb93cbf279.OFF:\n                break;\n            default:\n                (0, $2d5b4e7cb639ebe1$export$2e2bcd8739ae039).error(`Attempt to set invalid tracking method of ${method} ignored.`);\n        }\n    }\n}\n\n\n\n/**\n * @type {number}\n */ const $ef1fa57d025b1fd1$var$SCROLL_TILES_PER_SEC = 3;\nconst $ef1fa57d025b1fd1$export$763f95e026c05695 = {\n    TR: 0,\n    BR: 1,\n    BL: 2,\n    TL: 3\n};\nclass $ef1fa57d025b1fd1$export$5e8c6d32f039cdeb {\n    /** @type {CameraDolly} */ #cameraDolly;\n    /** @type {Actor} */ #trackingButton;\n    /** @type {module:utils/sprites/imageManager~SpriteBitmap} */ #trackingButtonImage;\n    /** @type {Actor} */ #fullscreenButton;\n    /** @type {AnimatedImage} */ #fullscreenButtonImage;\n    /**\n   *\n   * @param {CameraDolly} cameraDolly\n   * @param {number} gridSize\n   * @param {NavigationLocation} locationNav\n   * @param {NavigationLocation} locationFullscreen\n   */ constructor(cameraDolly, gridSize, locationNav, locationFullscreen){\n        this.#cameraDolly = cameraDolly;\n        this.#createButtonSet(gridSize, locationNav, false);\n        this.#createFullscreenButton(gridSize, locationFullscreen);\n    }\n    /**\n   * Create the button to handle fullscreen mode\n   */ #createFullscreenButton(gridSize, location) {\n        this.#fullscreenButtonImage = new (0, $7f41e47310ae6543$export$9d5734c725768403)({\n            prefix: \"hud-fullscreen\",\n            startIndex: 0,\n            padding: 2,\n            suffix: \".png\"\n        }, {\n            framePeriodMs: 1,\n            loopMethod: (0, $af167e06ffca879a$export$cab6ba75b045ad71).STOP\n        });\n        this.#setFullscreenButtonImage();\n        this.#fullscreenButton = (0, $e3583859a0cae8b2$export$2e2bcd8739ae039).addButton(this.#fullscreenButtonImage, ()=>{\n            this.#requestFullscreen(document.body, {\n                navigationUI: \"hide\"\n            });\n        }, ()=>{\n            document.exitFullscreen();\n        });\n        const centre = this.#getLocationPoint(gridSize, location, 1);\n        this.#fullscreenButton.position.x = centre.x;\n        this.#fullscreenButton.position.y = centre.y;\n        addEventListener(\"fullscreenchange\", ()=>{\n            this.#setFullscreenButtonImage();\n        });\n    }\n    /**\n   * Set the image for the full screen button. It is assumed that\n   * index 0 is shown when not in fullscreen and image 1 when it it.\n   * @param {AnimatedI} fullscreenButtonImage\n   */ #setFullscreenButtonImage() {\n        if (!document.fullscreenElement) this.#fullscreenButtonImage.setCurrentIndex(0);\n        else this.#fullscreenButtonImage.setCurrentIndex(1);\n    }\n    /**\n   * Request full screen mode.\n   * @param {Element} element - what should go full screen.\n   * @param {Object} options - see {@link https://developer.mozilla.org/en-US/docs/Web/API/Element/requestFullscreen}\n   * @returns {Promise}\n   */ #requestFullscreen(element, options) {\n        if (element.requestFullscreen) return element.requestFullscreen(options);\n        return Promise.reject(new Error(\"Fullscreen requests not supported by browser\"));\n    }\n    /** Get centre point information\n   * @param {number} gridSize - tile size\n   * @param {NavigationLocation} location\n   * @param {number} offset - offset applied to location.\n   * This grid units (i.e. tiles).\n   * @returns {Point}\n   */ #getLocationPoint(gridSize, location, offset) {\n        const point = new (0, $90999bd6b14cd690$export$baf26146a414f24a)(0, 0);\n        switch(location){\n            case $ef1fa57d025b1fd1$export$763f95e026c05695.TL:\n                point.x = offset * gridSize;\n                point.y = offset * gridSize;\n                break;\n            case $ef1fa57d025b1fd1$export$763f95e026c05695.TR:\n                point.x = -offset * gridSize;\n                point.y = offset * gridSize;\n                break;\n            case $ef1fa57d025b1fd1$export$763f95e026c05695.BR:\n                point.x = -offset * gridSize;\n                point.y = -offset * gridSize;\n                break;\n            case $ef1fa57d025b1fd1$export$763f95e026c05695.BL:\n                point.x = offset * gridSize;\n                point.y = -offset * gridSize;\n                break;\n        }\n        return point;\n    }\n    /**\n   * Create the buttons.\n   * @param {number} gridSize\n   * @param {NavigationLocation} location\n   * @param {boolean} showArrows\n   */ #createButtonSet(gridSize, location, showArrows) {\n        const offset = showArrows ? 2 : 1;\n        const centre = this.#getLocationPoint(gridSize, location, offset);\n        this.#createCentreButton(centre.x, centre.y);\n        if (showArrows) this.#createArrowButtons(centre.x, centre.y, gridSize);\n    }\n    /** Create the centre button.\n   * @param {number} centreX\n   * @param {number} centreY\n   */ #createCentreButton(centreX, centreY) {\n        this.#trackingButtonImage = new (0, $7f41e47310ae6543$export$9d5734c725768403)({\n            prefix: \"hud-auto-centre\",\n            startIndex: 0,\n            padding: 2,\n            suffix: \".png\"\n        }, {\n            framePeriodMs: 1,\n            loopMethod: (0, $af167e06ffca879a$export$cab6ba75b045ad71).STOP\n        });\n        this.#trackingButton = (0, $e3583859a0cae8b2$export$2e2bcd8739ae039).addButton(this.#trackingButtonImage, ()=>{\n            this.setTrackingState(true);\n        }, ()=>{\n            this.setTrackingState(false);\n        });\n        this.#trackingButton.position.x = centreX;\n        this.#trackingButton.position.y = centreY;\n        this.#trackingButton.actionClick(null); // defaulting to selected.\n    }\n    /**\n   * Set the tracking state.\n   * @param {boolean} on\n   */ setTrackingState(on) {\n        if (on) {\n            this.#trackingButtonImage.setCurrentIndex(1);\n            this.#cameraDolly.setTrackingMethod((0, $1e8586c4726fc461$export$17735bdb93cbf279).HERO);\n        } else {\n            this.#trackingButtonImage.setCurrentIndex(0);\n            this.#cameraDolly.setTrackingMethod((0, $1e8586c4726fc461$export$17735bdb93cbf279).OFF);\n        }\n    }\n    /**\n   * Create the arrow buttons\n   * @param {number} centreX\n   * @param {number} centreY\n   * @param {number} gridSize\n   */ #createArrowButtons(centreX, centreY, gridSize) {\n        const scrollSpeed = $ef1fa57d025b1fd1$var$SCROLL_TILES_PER_SEC * gridSize;\n        this.#createMomentaryButton(\"hud-arrow-up\", centreX, centreY - gridSize, ()=>{\n            this.setTrackingState(false);\n            this.#cameraDolly.setVelocity(0, -scrollSpeed);\n        }, ()=>this.#cameraDolly.setTrackingMethod((0, $1e8586c4726fc461$export$17735bdb93cbf279).OFF));\n        this.#createMomentaryButton(\"hud-arrow-right\", centreX + gridSize, centreY, ()=>{\n            this.setTrackingState(false);\n            this.#cameraDolly.setVelocity(scrollSpeed, 0);\n        }, ()=>this.#cameraDolly.setTrackingMethod((0, $1e8586c4726fc461$export$17735bdb93cbf279).OFF));\n        this.#createMomentaryButton(\"hud-arrow-down\", centreX, centreY + gridSize, ()=>{\n            this.setTrackingState(false);\n            this.#cameraDolly.setVelocity(0, scrollSpeed);\n        }, ()=>this.#cameraDolly.setTrackingMethod((0, $1e8586c4726fc461$export$17735bdb93cbf279).OFF));\n        this.#createMomentaryButton(\"hud-arrow-left\", centreX - gridSize, centreY, ()=>{\n            this.setTrackingState(false);\n            this.#cameraDolly.setVelocity(-scrollSpeed, 0);\n        }, ()=>this.#cameraDolly.setTrackingMethod((0, $1e8586c4726fc461$export$17735bdb93cbf279).OFF));\n    }\n    /**\n   * Create a momentary button.\n   * @param {string} imageNamePrefix - images are assumed to be imageNamePrefixNNN.png\n   * @param {number} x - x position\n   * @param {number} y - y position\n   * @param {function} callbackDown\n   * @param {function} callbackUp\n   */ #createMomentaryButton(imageNamePrefix, x, y, callbackDown, callbackUp) {\n        const animatedImage = new (0, $7f41e47310ae6543$export$9d5734c725768403)({\n            prefix: imageNamePrefix,\n            startIndex: 0,\n            padding: 2,\n            suffix: \".png\"\n        }, {\n            framePeriodMs: 1,\n            loopMethod: (0, $af167e06ffca879a$export$cab6ba75b045ad71).STOP\n        });\n        let button = (0, $e3583859a0cae8b2$export$2e2bcd8739ae039).addMomentaryButton(animatedImage, callbackDown, callbackUp);\n        button.position.x = x;\n        button.position.y = y;\n        animatedImage.setCurrentIndex(0);\n    }\n}\n\n\n\n\n\n/**\n * @interface SceneList\n */ /**\n * Get the next scene.\n * @function SceneList.getNext\n * @param{number} index\n * @returns {SceneDefinition}\n *\n */ /**\n * Has another scene.\n * @function SceneList.hasNext\n * @returns {boolean}\n *\n */ /**\n * Reset to the first scene.\n * @function SceneList.reset\n */ /**\n * Get the scene index. This will be the index of the last scene retrieved by\n * a call to getNext.\n * @function SceneList.getIndex\n * @returns {number}\n */ /**\n * Restore a saved game\n * @function SceneList.restore\n * @param {number} index\n * @param {Actor} hero\n */ /** @type {module:utils/sprites/sprite~Sprite}  */ let $6664788cb4fc34b5$var$cameraDolly;\n/** @type {SceneList} */ let $6664788cb4fc34b5$var$sceneDefnList;\nlet $6664788cb4fc34b5$var$currentScene;\nlet $6664788cb4fc34b5$var$navigationButtons;\nclass $6664788cb4fc34b5$export$2a8e6ebcf5b5c91 {\n    /** @type {string} */ intro;\n    /** @type {Actor || ActorDefn} */ hero;\n    /** @type {ActorDefn[]} */ enemies;\n    /** @type {ActorDefn[]} */ artefacts;\n    /** @type {string[]} */ mapDesign;\n    /**\n   * Construct an empty scene\n   */ constructor(){\n        this.hero = null;\n        this.enemies = [];\n        this.artefacts = [];\n        this.mapDesign = [];\n    }\n}\n/**\n * Set camera dolly\n * @param {module:utils/sprites/sprite~Sprite} sprite\n * @param {number} speed - See {@link module:game/camera.createCameraDolly}\n * @param {number} proportionSeparated - See {@link module:game/camera.createCameraDolly}\n */ function $6664788cb4fc34b5$var$setCameraToTrack(sprite, speed, proportionSeparated) {\n    $6664788cb4fc34b5$var$cameraDolly = new (0, $1e8586c4726fc461$export$39ca3bda943df04d)(sprite, speed, proportionSeparated);\n}\n/**\n * Create the HUD\n */ function $6664788cb4fc34b5$var$createHud() {\n    $6664788cb4fc34b5$var$navigationButtons = new (0, $ef1fa57d025b1fd1$export$5e8c6d32f039cdeb)($6664788cb4fc34b5$var$cameraDolly, 48, (0, $ef1fa57d025b1fd1$export$763f95e026c05695).BR, (0, $ef1fa57d025b1fd1$export$763f95e026c05695).BL);\n    (0, $e3583859a0cae8b2$export$2e2bcd8739ae039).setVisible(true);\n}\n/**\n * Clear the HUD.\n */ function $6664788cb4fc34b5$var$clearHud() {\n    $6664788cb4fc34b5$var$navigationButtons = null;\n    (0, $e3583859a0cae8b2$export$2e2bcd8739ae039).clear();\n    (0, $e3583859a0cae8b2$export$2e2bcd8739ae039).setVisible(false);\n}\n/** Set the current scene, unloading any existing scene\n * @param {module:game/scene~Scene} scene\n * @returns {Promise} fulfils to undefined.\n * Rejects if scene is undefined or null.\n */ function $6664788cb4fc34b5$var$setScene(scene) {\n    if (!scene) {\n        (0, $2d5b4e7cb639ebe1$export$2e2bcd8739ae039).error(\"Attempt made to switch to the next scene when there are no more.\");\n        return Promise.reject();\n    }\n    return $6664788cb4fc34b5$var$unloadScene($6664788cb4fc34b5$var$currentScene).then(()=>$6664788cb4fc34b5$var$loadScene(scene)).then(()=>scene);\n}\n/**\n * Load scene\n * @param {module:game/scene~Scene} scene\n * @returns {Promise} fulfills to null\n */ function $6664788cb4fc34b5$var$loadScene(scene) {\n    return scene.load().then(()=>scene.initialise()).then(()=>{\n        $6664788cb4fc34b5$var$createHud();\n        $6664788cb4fc34b5$var$currentScene = scene;\n    });\n}\n/**\n * Unload scene. This can be safely called even if the\n * current scene has already been unloaded.\n * @param {module:game/scene~Scene} scene\n * @returns {Promise} fulfills to null\n */ function $6664788cb4fc34b5$var$unloadScene(scene) {\n    if (scene) return scene.unload().then(()=>{\n        (0, $f8633d94d0c88c58$export$2e2bcd8739ae039).clearAll();\n        $6664788cb4fc34b5$var$currentScene = null;\n        $6664788cb4fc34b5$var$clearHud();\n        return Promise.resolve();\n    });\n    else return Promise.resolve(null);\n}\n/**\n * Unload current scene\n * @returns {Promise} fulfills to null\n */ function $6664788cb4fc34b5$var$unloadCurrentScene() {\n    return $6664788cb4fc34b5$var$unloadScene($6664788cb4fc34b5$var$currentScene);\n}\n/**\n * Configure the scenes from the script.\n * @param {module:gameManagement/sceneManager~SceneDefinition} listOfScenes\n */ function $6664788cb4fc34b5$var$setSceneList(listOfScenes) {\n    $6664788cb4fc34b5$var$sceneDefnList = listOfScenes;\n    $6664788cb4fc34b5$var$sceneDefnList.reset();\n}\n/**\n * Test to see if there are more scenes.\n * @returns {boolean}\n */ function $6664788cb4fc34b5$var$areThereMoreScenes() {\n    return $6664788cb4fc34b5$var$sceneDefnList.hasNext();\n}\n/**\n * Continue from a saved scene.\n * @param {number} savedSceneLevel\n * @param {Actor} savedHero\n * @returns {Promise} fulfils to the loaded scene.\n * Rejects if no scenes.\n */ function $6664788cb4fc34b5$var$continueFromSavedScene(savedSceneLevel, savedHero) {\n    $6664788cb4fc34b5$var$sceneDefnList.restore(savedSceneLevel, savedHero);\n    return $6664788cb4fc34b5$var$setScene($6664788cb4fc34b5$var$getNextSceneFromList());\n}\n/**\n * Switch to the first scene.\n * @returns {Promise} fulfils to the loaded scene.\n * Rejects if no scenes.\n */ function $6664788cb4fc34b5$var$switchToFirstScene() {\n    $6664788cb4fc34b5$var$sceneDefnList.reset();\n    return $6664788cb4fc34b5$var$setScene($6664788cb4fc34b5$var$getNextSceneFromList());\n}\n/**\n * Switch to the next scene.\n * @returns {Promise} fulfils to the loaded scene.\n * Rejects if there are no more.\n */ function $6664788cb4fc34b5$var$switchToNextScene() {\n    return $6664788cb4fc34b5$var$setScene($6664788cb4fc34b5$var$getNextSceneFromList());\n}\n/**\n * Gets the next scene from the scene definition list.\n * @returns {Scene}\n */ function $6664788cb4fc34b5$var$getNextSceneFromList() {\n    return (0, $fee0c02ce96028b6$export$cc8138686166266c)($6664788cb4fc34b5$var$sceneDefnList.getNext());\n}\n/**\n * UPdate the scene\n * @param {number} deltaSeconds\n */ function $6664788cb4fc34b5$var$update(deltaSeconds) {\n    $6664788cb4fc34b5$var$currentScene?.update(deltaSeconds);\n    $6664788cb4fc34b5$var$cameraDolly?.update(deltaSeconds);\n}\n/**\n * Pan the camera.\n * @param {number} dx\n * @param {number} dy\n */ function $6664788cb4fc34b5$var$panCameraBy(dx, dy) {\n    $6664788cb4fc34b5$var$cameraDolly.panBy(dx, dy);\n    $6664788cb4fc34b5$var$cameraDolly.setTrackingMethod((0, $1e8586c4726fc461$export$17735bdb93cbf279).OFF);\n    $6664788cb4fc34b5$var$navigationButtons.setTrackingState(false);\n}\n/**\n * Get the current scene level.\n * @returns {number}\n */ function $6664788cb4fc34b5$var$getCurrentSceneLevel() {\n    return $6664788cb4fc34b5$var$sceneDefnList.getIndex();\n}\n/**\n * SCENE_MANAGER Singleton.\n */ const $6664788cb4fc34b5$var$SCENE_MANAGER = {\n    areThereMoreScenes: $6664788cb4fc34b5$var$areThereMoreScenes,\n    continueFromSavedScene: $6664788cb4fc34b5$var$continueFromSavedScene,\n    getCurrentSceneLevel: $6664788cb4fc34b5$var$getCurrentSceneLevel,\n    panCameraBy: $6664788cb4fc34b5$var$panCameraBy,\n    setCameraToTrack: $6664788cb4fc34b5$var$setCameraToTrack,\n    setSceneList: $6664788cb4fc34b5$var$setSceneList,\n    switchToFirstScene: $6664788cb4fc34b5$var$switchToFirstScene,\n    switchToNextScene: $6664788cb4fc34b5$var$switchToNextScene,\n    unloadCurrentScene: $6664788cb4fc34b5$var$unloadCurrentScene,\n    update: $6664788cb4fc34b5$var$update\n};\nvar $6664788cb4fc34b5$export$2e2bcd8739ae039 = $6664788cb4fc34b5$var$SCENE_MANAGER;\n\n\n\n/**\n * @file DnD dice rolls.\n *\n * @module dnd/dndAction\n */ /**\n * license {@link https://opensource.org/license/mit/|MIT}\n * Copyright 2024 Steve Butler (henspace.com).\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the “Software”), to deal in\n * the Software without restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n * Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */ \n\n\nconst $9bf960d1e43f0ba6$export$f38bd2bad06ce15b = 3;\nconst $9bf960d1e43f0ba6$export$f482b03c0d47770c = 1;\nconst $9bf960d1e43f0ba6$export$acf4bc55b62ab78b = 1;\nconst $9bf960d1e43f0ba6$export$ff8cb03fee7cf5b7 = 1;\nfunction $9bf960d1e43f0ba6$export$a00548f2d1dc9708(attack, target) {\n    const diceRoll = $d9f2d68cf2746c78$export$b9d1fef74bbc4c0c(20);\n    // handle fate and curses.\n    if (diceRoll === 1) {\n        (0, $2d5b4e7cb639ebe1$export$2e2bcd8739ae039).debug(\"Attack dice rolled 0: cursed.\");\n        return 0; // cursed.\n    } else if (diceRoll === 20) {\n        (0, $2d5b4e7cb639ebe1$export$2e2bcd8739ae039).debug(\"Attack dice rolled 20: critical hit.\");\n        return 2 * attack.rollForDamage(); // critical hit\n    }\n    const attackRoll = diceRoll + attack.abilityModifier + attack.proficiencyBonus;\n    const targetAc = target.traits.getEffectiveAc();\n    (0, $2d5b4e7cb639ebe1$export$2e2bcd8739ae039).debug(`Attack: dice: ${diceRoll}, ability modifier: ${attack.abilityModifier}, proficiency bonus: ${attack.proficiencyBonus}, target AC: ${targetAc}`);\n    if (attackRoll >= targetAc) return attack.rollForDamage();\n    return 0;\n}\nfunction $9bf960d1e43f0ba6$export$b066f38ab0e5b2dc(attacker, target) {\n    const damage = $d9f2d68cf2746c78$export$7fa777a3b7eeb6e3(attacker.traits.get(\"DMG\", \"1D4\"));\n    const saveModifier = target.traits.getNonMeleeSaveAbilityModifier(attacker);\n    const difficulty = attacker.traits.getInt(\"DC\");\n    if (!difficulty) {\n        (0, $2d5b4e7cb639ebe1$export$2e2bcd8739ae039).error(`Poisoner ${attacker.traits.get(\"NAME\")} has no DC set.`);\n        return damage;\n    }\n    if ($d9f2d68cf2746c78$export$b9d1fef74bbc4c0c(20) + saveModifier >= difficulty) return 0;\n    else return damage;\n}\nfunction $9bf960d1e43f0ba6$export$471963e02ad769b2(consumable, consumer) {\n    const gain = $d9f2d68cf2746c78$export$7fa777a3b7eeb6e3(consumable.traits.get(\"HP\", \"1D4\"));\n    const currentHp = consumer.traits.get(\"HP\", 0);\n    const maxHp = consumer.traits.get(\"HP_MAX\", currentHp);\n    const shortFall = maxHp - currentHp;\n    return Math.min(shortFall, gain);\n}\nfunction $9bf960d1e43f0ba6$export$53864c490cc48ef4(attacker, target, spell) {\n    const attackerIntelligence = attacker.traits.get(\"INT\", 1);\n    const saveModifier = target.traits.getNonMeleeSaveAbilityModifier(spell);\n    let difficulty = spell.traits.getInt(\"DC\");\n    if (difficulty === null || difficulty === undefined) {\n        (0, $2d5b4e7cb639ebe1$export$2e2bcd8739ae039).error(`Magic ${attacker.id} has no DC set.`);\n        difficulty = 0;\n    }\n    const spellModifier = attacker.traits.getCharacterPb(spell) + (0, $95c3fa23148200d5$export$1a1308ca8502831f)(attackerIntelligence);\n    const fullDifficulty = difficulty + spellModifier;\n    let savingThrow = $d9f2d68cf2746c78$export$b9d1fef74bbc4c0c(20) + saveModifier;\n    const damage = $d9f2d68cf2746c78$export$7fa777a3b7eeb6e3(spell.traits.getDamageDiceWhenCastBy(attacker));\n    if (savingThrow >= fullDifficulty) {\n        const factor = spell.traits.getFloat(\"DMG_SAVED\", 0);\n        return Math.round(factor * damage);\n    } else return damage;\n}\nfunction $9bf960d1e43f0ba6$export$105ff773d2a2501a(length, nMeals, nDrinks) {\n    switch(length){\n        case \"SHORT\":\n            return nMeals >= $9bf960d1e43f0ba6$export$f482b03c0d47770c && nDrinks >= $9bf960d1e43f0ba6$export$ff8cb03fee7cf5b7;\n        case \"LONG\":\n            return nMeals >= $9bf960d1e43f0ba6$export$f38bd2bad06ce15b && nDrinks >= $9bf960d1e43f0ba6$export$acf4bc55b62ab78b;\n    }\n    (0, $2d5b4e7cb639ebe1$export$2e2bcd8739ae039).error(`Attempt to rest for unknown length of ${length}`);\n    return false;\n}\nfunction $9bf960d1e43f0ba6$export$1f1ba427ee30f22d(actor, length) {\n    switch(length){\n        case \"SHORT\":\n            {\n                const hitDice = actor.traits.get(\"HIT_DICE\");\n                let hp = actor.traits.getInt(\"HP\", 0);\n                const hpMax = actor.traits.getInt(\"HP_MAX\", hp);\n                const constitutionModifier = actor.traits.getAsModifier(\"CON\");\n                const diceDetails = $d9f2d68cf2746c78$export$39e91293370042d8(hitDice);\n                if (diceDetails.qty > 0) {\n                    diceDetails.qty--;\n                    hp += $d9f2d68cf2746c78$export$b9d1fef74bbc4c0c(diceDetails.sides) + constitutionModifier; // just roll one.\n                    actor.traits.set(\"HP\", Math.min(hp, hpMax));\n                    actor.traits.set(\"HIT_DICE\", $d9f2d68cf2746c78$export$6b42f955a363be6b(diceDetails));\n                }\n            }\n            break;\n        case \"LONG\":\n            {\n                const maxNumberOfHitDice = actor.traits.getCharacterLevel();\n                const currentHitDice = actor.traits.get(\"HIT_DICE\");\n                const currentDiceDetails = $d9f2d68cf2746c78$export$39e91293370042d8(currentHitDice);\n                const recoveredHitDice = Math.max(1, Math.ceil(0.5 * currentDiceDetails.qty));\n                currentDiceDetails.qty = Math.min(maxNumberOfHitDice, currentDiceDetails.qty + recoveredHitDice);\n                actor.traits.set(\"HIT_DICE\", $d9f2d68cf2746c78$export$6b42f955a363be6b(currentDiceDetails));\n                actor.traits.set(\"HP\", actor.traits.getInt(\"HP_MAX\", 0));\n            }\n            break;\n        default:\n            (0, $2d5b4e7cb639ebe1$export$2e2bcd8739ae039).error(`Attempt to rest for unknown length of ${length}`);\n    }\n}\n\n\n\nconst $3b30d95b613bb442$export$30b1e0f61711dee7 = {\n    VIEW: 0,\n    SELL: 1,\n    PILLAGE: 2,\n    FIND: 3\n};\n/**\n * ArtefactActions\n * @enum {string}\n */ const $3b30d95b613bb442$var$ArtefactAction = {\n    CONTINUE: \"continue\",\n    CONSUME: \"consume\",\n    LEAVE: \"leave\",\n    LEARN_SPELL: \"learn\",\n    DISCARD: \"discard\",\n    EQUIP: \"equip\",\n    PREPARE_SPELL: \"prepare\",\n    STASH: \"stash\",\n    TAKE: \"take\",\n    SELL: \"sell\",\n    PILLAGE: \"pillage\",\n    USE: \"use\"\n};\n/**\n * @typedef {Object} ArtefactDialogOptions\n * @property {Actor} currentOwner - who currently owns the artefact.\n * @property {Actor} prospectiveOwner - who currently owns the artefact.\n * @property {boolean} allowMagicUse - allow an item to be used.\n * @property {boolean} allowConsumption - allow an item to be consumed.\n * @property {boolean} allowSpellPrep - allow a spell to be prepared.\n * @property {Artefact} artefact - the item .\n * @property {StoreType} storeType\n * @property {ArtefactActionTypeValue} actionType\n * @param {function(noChain:boolean):Promise} refresh - function to call if storage changed.\n * if noChain is set, linkedInventories are not called. This is used to prevent\n * circular loops.\n * @param {boolean} showPrice\n * @param {boolean} showDamage - add damage detail to button labels.\n * @param {function(actor: Actor, artefact: Artefact):Promise} customAction - custom action on artefact click.\n */ /**\n * @typedef {string} InventoryLimitationValue\n */ /**\n * @enum {InventoryLimitationValue}\n */ const $3b30d95b613bb442$var$InventoryLimitation = {\n    STANDARD: \"standard\",\n    STASH_ONLY: \"stash\",\n    SPELLS: \"spells\",\n    MAGIC: \"magic\",\n    READY_MAGIC: \"ready magic\",\n    CANTRIPS: \"cantrips\"\n};\n/**\n * @typedef {Object} InventoryOptions\n * @property {InventoryLimitationValue} limitation\n * @property {InventoryOptions} linkedInventory - this will be refreshed at the same\n * time as the inventory.\n * @property {function()} onRefresh - function to call on an inventory refresh.\n **/ /**\n * Container for an inventory.\n */ class $3b30d95b613bb442$var$InventoryContainerElement {\n    /** @type {ArtefactDialogOptions} */ #options;\n    /** @type {InventoryOptions} */ #inventoryOptions;\n    /** @type {Element} */ #content;\n    /** This will be refresh when this is refreshed. @type {InventoryContainerElement} */ linkedInventory;\n    /** Action buttons @type {BaseControl[]} */ #actionButtons;\n    /**\n   * Construct\n   * @param {ArtefactDialogOptions} options;\n   * @param {InventoryOptions} inventoryOptions\n   */ constructor(options, inventoryOptions = {}){\n        this.#options = options;\n        this.#inventoryOptions = inventoryOptions;\n        this.#content = $de9cad813c8cf1e8$export$c8a8987d4410bf2d(\"div\", {\n            className: \"stores\"\n        });\n        this.refresh();\n    }\n    /**\n   * Get the container element\n   * @returns {Element}\n   */ get element() {\n        return this.#content;\n    }\n    /**\n   * Get the container action buttons.\n   * @returns {BaseControl[]}\n   */ get actionButtons() {\n        return this.#actionButtons;\n    }\n    /**\n   * Rebuild the list.\n   * @param {boolean} noChain - prevent calls to linkedInventories.\n   */ refresh(noChain) {\n        this.#actionButtons = [];\n        if (!noChain && this.linkedInventory) this.linkedInventory.refresh(true); // suppress linking\n        this.#content.replaceChildren();\n        if (!this.#options.currentOwner.isHero() || this.#options.currentOwner.alive) {\n            let storesToShow = this.#getStoresToShow();\n            storesToShow.forEach((storeInfo)=>{\n                const contents = this.#options.currentOwner.storeManager.getStoreContents(storeInfo.storeType);\n                if (contents) {\n                    const storeContentsElement = this.#createStoreContents(storeInfo.label, storeInfo.storeType, contents);\n                    this.#content.appendChild(storeContentsElement);\n                }\n            });\n        }\n        if (this.#inventoryOptions.onRefresh) this.#inventoryOptions.onRefresh();\n    }\n    /**\n   * Get array of stores to show.\n   * @return {{label: string, storeType: StoreType}}\n   */ #getStoresToShow() {\n        let storesToShow;\n        switch(this.#inventoryOptions.limitation){\n            case $3b30d95b613bb442$var$InventoryLimitation.SPELLS:\n                storesToShow = [\n                    {\n                        label: (0, $2a5626561236b7e1$export$a7357cdd1f0b0168)`Prepared spells`,\n                        storeType: (0, $c8439a0aab365384$export$39337ab5872e9457).PREPARED_SPELLS\n                    },\n                    {\n                        label: (0, $2a5626561236b7e1$export$a7357cdd1f0b0168)`Known spells`,\n                        storeType: (0, $c8439a0aab365384$export$39337ab5872e9457).SPELLS\n                    }\n                ];\n                break;\n            case $3b30d95b613bb442$var$InventoryLimitation.MAGIC:\n                storesToShow = [\n                    {\n                        label: (0, $2a5626561236b7e1$export$a7357cdd1f0b0168)`Cantrips`,\n                        storeType: (0, $c8439a0aab365384$export$39337ab5872e9457).CANTRIPS\n                    },\n                    {\n                        label: (0, $2a5626561236b7e1$export$a7357cdd1f0b0168)`Prepared spells`,\n                        storeType: (0, $c8439a0aab365384$export$39337ab5872e9457).PREPARED_SPELLS\n                    },\n                    {\n                        label: (0, $2a5626561236b7e1$export$a7357cdd1f0b0168)`Known spells`,\n                        storeType: (0, $c8439a0aab365384$export$39337ab5872e9457).SPELLS\n                    }\n                ];\n                break;\n            case $3b30d95b613bb442$var$InventoryLimitation.READY_MAGIC:\n                storesToShow = [\n                    {\n                        label: (0, $2a5626561236b7e1$export$a7357cdd1f0b0168)`Ready magic`,\n                        storeType: (0, $c8439a0aab365384$export$39337ab5872e9457).PREPARED_SPELLS\n                    },\n                    {\n                        label: (0, $2a5626561236b7e1$export$a7357cdd1f0b0168)`Cantrips`,\n                        storeType: (0, $c8439a0aab365384$export$39337ab5872e9457).CANTRIPS\n                    }\n                ];\n                break;\n            case $3b30d95b613bb442$var$InventoryLimitation.CANTRIPS:\n                (0, $c8439a0aab365384$export$39337ab5872e9457).CANTRIPS;\n                break;\n            case $3b30d95b613bb442$var$InventoryLimitation.STASH_ONLY:\n                storesToShow = [\n                    this.#getStashStoreInfo()\n                ];\n                break;\n            case $3b30d95b613bb442$var$InventoryLimitation.STANDARD:\n            default:\n                storesToShow = [\n                    {\n                        label: (0, $2a5626561236b7e1$export$a7357cdd1f0b0168)`Purse`,\n                        storeType: (0, $c8439a0aab365384$export$39337ab5872e9457).PURSE\n                    },\n                    {\n                        label: (0, $2a5626561236b7e1$export$a7357cdd1f0b0168)`Head`,\n                        storeType: (0, $c8439a0aab365384$export$39337ab5872e9457).HEAD\n                    },\n                    {\n                        label: (0, $2a5626561236b7e1$export$a7357cdd1f0b0168)`Body`,\n                        storeType: (0, $c8439a0aab365384$export$39337ab5872e9457).BODY\n                    },\n                    {\n                        label: (0, $2a5626561236b7e1$export$a7357cdd1f0b0168)`Hands`,\n                        storeType: (0, $c8439a0aab365384$export$39337ab5872e9457).HANDS\n                    },\n                    {\n                        label: (0, $2a5626561236b7e1$export$a7357cdd1f0b0168)`Feet`,\n                        storeType: (0, $c8439a0aab365384$export$39337ab5872e9457).FEET\n                    },\n                    this.#getStashStoreInfo()\n                ];\n                break;\n        }\n        return storesToShow;\n    }\n    /** Get the stash store for the actor.\n   * This gets the WAGON for a trader\n   * @returns {label: string, storeType: StoreType}\n   */ #getStashStoreInfo() {\n        if (this.#options.currentOwner.isTrader()) return {\n            label: (0, $2a5626561236b7e1$export$a7357cdd1f0b0168)`Wagon`,\n            storeType: (0, $c8439a0aab365384$export$39337ab5872e9457).WAGON\n        };\n        else return {\n            label: (0, $2a5626561236b7e1$export$a7357cdd1f0b0168)`Backpack`,\n            storeType: (0, $c8439a0aab365384$export$39337ab5872e9457).BACKPACK\n        };\n    }\n    /**\n   * Create element showing store contents. Buttons created are pushed to\n   * this.#actionButtons.\n   * @param {string} label\n   * @param {StoreTypeValue} storeType\n   * @param {Iterator<Artefact>} contents\n   * @returns {Element}\n   */ #createStoreContents(label, storeType, contents) {\n        const container = $de9cad813c8cf1e8$export$c8a8987d4410bf2d(\"div\", {\n            className: \"store\"\n        });\n        container.appendChild($de9cad813c8cf1e8$export$c8a8987d4410bf2d(\"span\", {\n            className: \"store-label\",\n            text: label\n        }));\n        const contentsElement = $de9cad813c8cf1e8$export$c8a8987d4410bf2d(\"div\", {\n            className: \"store-contents\"\n        });\n        container.appendChild(contentsElement);\n        [\n            ...contents\n        ].sort((a, b)=>a.id < b.id).forEach((artefact)=>{\n            const options = {\n                ...this.#options\n            };\n            options.refresh = this.refresh.bind(this);\n            options.storeType = storeType;\n            options.artefact = artefact;\n            const button = this.#createArtefactButtonControl(options);\n            if (button.closes !== null && button.closes !== undefined) this.#actionButtons.push(button);\n            contentsElement.appendChild(button.element);\n        });\n        return container;\n    }\n    /**\n   * Create an artefact button. If a custom action is set, the button is a closer.\n   * Otherwise it just pops up a dialog giving details about the artefact.\n   * @param {ArtefactDialogOptions} options\n   * @returns {components.BitmapButtonControl}\n   */ #createArtefactButtonControl(options) {\n        const label = $3b30d95b613bb442$var$createArtefactButtonLabel(options);\n        let action;\n        let closes;\n        if (options.customAction) {\n            action = ()=>options.customAction(options.currentOwner, options.artefact);\n            closes = (0, $81dd6b24526c5347$export$c2043c90d147849d).OK;\n        } else action = async ()=>{\n            await $3b30d95b613bb442$export$19550c7d374fe949(options).then(()=>options.refresh?.());\n        };\n        return new $de9cad813c8cf1e8$export$5519a977876d156d({\n            rightLabel: label,\n            imageName: options.artefact.iconImageName,\n            action: action,\n            closes: closes\n        });\n    }\n}\n/**\n * Show the actor's traits.\n * @param {Actor} actor\n * @returns {Promise}\n */ function $3b30d95b613bb442$var$showTraits(actor) {\n    const container = document.createElement(\"div\");\n    container.appendChild($3b30d95b613bb442$var$createActorElement(actor, {\n        hideDescription: true\n    }));\n    return (0, $81dd6b24526c5347$export$2e2bcd8739ae039).showControlsDialog(container);\n}\n/**\n * Show a rest action dialog.\n * @param {module:players/actors~Actor} actor\n * @returns {Promise} fulfils to undefined.\n */ function $3b30d95b613bb442$var$showRestActionDialog(actor) {\n    const store = actor.storeManager.getStore((0, $c8439a0aab365384$export$39337ab5872e9457).BACKPACK);\n    const meals = [];\n    const drinks = [];\n    store.values().forEach((item)=>{\n        if (item.artefactType === (0, $c8439a0aab365384$export$e451727f06f039f2).CONSUMABLE) {\n            const type = item.traits.get(\"TYPE\");\n            if (type === \"MEAL\") meals.push(item);\n            else if (type === \"DRINK\") drinks.push(item);\n        }\n    });\n    const messageContainer = document.createElement(\"div\");\n    messageContainer.appendChild($3b30d95b613bb442$var$createIdCard(actor));\n    const longRestPossible = $9bf960d1e43f0ba6$export$105ff773d2a2501a(\"LONG\", meals.length, drinks.length);\n    const shortRestPossible = $9bf960d1e43f0ba6$export$105ff773d2a2501a(\"SHORT\", meals.length, drinks.length);\n    const choices = [];\n    messageContainer.appendChild($de9cad813c8cf1e8$export$c8a8987d4410bf2d(\"p\", {\n        text: (0, $2a5626561236b7e1$export$a7357cdd1f0b0168)`MESSAGE EXPLAIN REST`\n    }));\n    let message;\n    if (!longRestPossible && !shortRestPossible) message = (0, $2a5626561236b7e1$export$a7357cdd1f0b0168)`MESSAGE CANNOT REST`;\n    else if (!longRestPossible) message = (0, $2a5626561236b7e1$export$a7357cdd1f0b0168)`MESSAGE CANNOT REST LONG`;\n    messageContainer.appendChild($de9cad813c8cf1e8$export$c8a8987d4410bf2d(\"p\", {\n        text: message\n    }));\n    let shortIndex = -1;\n    let longIndex = -1;\n    if (shortRestPossible) {\n        shortIndex = choices.length;\n        choices.push((0, $2a5626561236b7e1$export$a7357cdd1f0b0168)`BUTTON REST SHORT`);\n    }\n    if (longRestPossible) {\n        longIndex = choices.length;\n        choices.push((0, $2a5626561236b7e1$export$a7357cdd1f0b0168)`BUTTON REST LONG`);\n    }\n    choices.push((0, $2a5626561236b7e1$export$a7357cdd1f0b0168)`BUTTON CONTINUE`);\n    return (0, $81dd6b24526c5347$export$2e2bcd8739ae039).showChoiceDialog((0, $2a5626561236b7e1$export$a7357cdd1f0b0168)`DIALOG TITLE CHOICES`, messageContainer, choices).then((choice)=>{\n        if (choice === shortIndex) {\n            $3b30d95b613bb442$var$discardItemsFromStore(store, meals, $9bf960d1e43f0ba6$export$f482b03c0d47770c);\n            $3b30d95b613bb442$var$discardItemsFromStore(store, drinks, $9bf960d1e43f0ba6$export$ff8cb03fee7cf5b7);\n            $9bf960d1e43f0ba6$export$1f1ba427ee30f22d(actor, \"SHORT\");\n        } else if (choice === longIndex) {\n            $3b30d95b613bb442$var$discardItemsFromStore(store, meals, $9bf960d1e43f0ba6$export$f38bd2bad06ce15b);\n            $3b30d95b613bb442$var$discardItemsFromStore(store, drinks, $9bf960d1e43f0ba6$export$acf4bc55b62ab78b);\n            $9bf960d1e43f0ba6$export$1f1ba427ee30f22d(actor, \"LONG\");\n            return $3b30d95b613bb442$var$showPrepareSpellsDialog(actor);\n        }\n        return;\n    });\n}\n/**\n * Show dialog allowing the player to prepare their spells.\n * @param {module:players/actors~Actor} actor\n */ function $3b30d95b613bb442$var$showPrepareSpellsDialog(actor) {\n    const container = $de9cad813c8cf1e8$export$c8a8987d4410bf2d(\"div\", {\n        className: \"inventory\"\n    });\n    container.appendChild($3b30d95b613bb442$var$createActorElement(actor, {\n        hideDescription: true,\n        hideTraits: true\n    }));\n    const inventoryContainer = new $3b30d95b613bb442$var$InventoryContainerElement({\n        currentOwner: actor,\n        prospectiveOwner: actor,\n        allowSpellPrep: true\n    }, {\n        limitation: $3b30d95b613bb442$var$InventoryLimitation.SPELLS\n    });\n    container.appendChild(inventoryContainer.element);\n    return (0, $81dd6b24526c5347$export$2e2bcd8739ae039).showControlsDialog(container, {\n        title: (0, $2a5626561236b7e1$export$a7357cdd1f0b0168)`DIALOG TITLE PREPARE SPELLS`,\n        preamble: (0, $2a5626561236b7e1$export$a7357cdd1f0b0168)`MESSAGE EXPLAIN SPELL PREP`\n    });\n}\n/**\n * @param {module:players/artefacts~StoreInterface}\n * @param {module:players/artefacts~Artefact[]} items\n * @param {number} qty\n */ function $3b30d95b613bb442$var$discardItemsFromStore(store, items, qty) {\n    if (qty > items.length) (0, $2d5b4e7cb639ebe1$export$2e2bcd8739ae039).error(\"Attempt being made to discard more items than provided in array.\");\n    for(let index = 0; index < qty && index < items.length; index++){\n        const taken = store.take(items[index]);\n        if (!taken) (0, $2d5b4e7cb639ebe1$export$2e2bcd8739ae039).error(`Trying to take artefact ${items[index]}, but none found.`);\n    }\n}\n/**\n * Show actor's inventory.\n * @param {Actor} actor\n * @param {{allowConsumption: boolean, allowMagicUse: boolean, limitation:InventoryLimitation}} [options = {}]\n */ function $3b30d95b613bb442$var$showInventory(actor, options = {}) {\n    const container = $de9cad813c8cf1e8$export$c8a8987d4410bf2d(\"div\", {\n        className: \"inventory\"\n    });\n    const actorContainer = $de9cad813c8cf1e8$export$c8a8987d4410bf2d(\"div\", {\n        className: \"actor-container\"\n    });\n    container.appendChild(actorContainer);\n    actorContainer.appendChild($3b30d95b613bb442$var$createActorElement(actor, {\n        hideDescription: true,\n        hideTraits: true\n    }));\n    const inventoryContainer = new $3b30d95b613bb442$var$InventoryContainerElement({\n        currentOwner: actor,\n        prospectiveOwner: actor,\n        allowMagicUse: options.allowMagicUse,\n        allowConsumption: options.allowConsumption\n    }, {\n        limitation: options.limitation,\n        onRefresh: ()=>actorContainer.replaceChildren($3b30d95b613bb442$var$createActorElement(actor, {\n                hideDescription: true,\n                hideTraits: true\n            }))\n    });\n    container.appendChild(inventoryContainer.element);\n    return (0, $81dd6b24526c5347$export$2e2bcd8739ae039).showControlsDialog(container);\n}\n/**\n * Show actor's inventory and allow casting of spells.\n * @param {Actor} actor\n * @param {{allowMagicUse: boolean, limitation:InventoryLimitation}} [options = {}]\n * @returns {Promise}\n */ function $3b30d95b613bb442$var$showCastSpells(actor) {\n    const container = $de9cad813c8cf1e8$export$c8a8987d4410bf2d(\"div\", {\n        className: \"inventory\"\n    });\n    const inventoryContainer = new $3b30d95b613bb442$var$InventoryContainerElement({\n        currentOwner: actor,\n        prospectiveOwner: actor,\n        allowMagicUse: true,\n        showDamage: true,\n        customAction: (enactor, artefact)=>artefact.interaction.react(enactor)\n    }, {\n        limitation: $3b30d95b613bb442$var$InventoryLimitation.READY_MAGIC\n    });\n    container.appendChild(inventoryContainer.element);\n    const cancelButton = new $de9cad813c8cf1e8$export$3e9165d18613c27e({\n        label: (0, $2a5626561236b7e1$export$a7357cdd1f0b0168)`BUTTON CONTINUE`,\n        closes: (0, $81dd6b24526c5347$export$c2043c90d147849d).CANCEL\n    });\n    return (0, $81dd6b24526c5347$export$2e2bcd8739ae039).showControlsDialog(container, {\n        title: (0, $2a5626561236b7e1$export$a7357cdd1f0b0168)`DIALOG TITLE PICK SPELL TO CAST`,\n        actionButtons: [\n            ...inventoryContainer.actionButtons,\n            cancelButton\n        ]\n    });\n}\n/**\n * Create buttons for dialog. The buttons are added to the container.\n * @param {Element} container - container for the action buttons.\n * @param {ArtefactDialogOptions} options\n * @returns {module:utils/dom/components~BaseControlElement}\n */ function $3b30d95b613bb442$var$createArtefactDialogButtons(container, options) {\n    const selfAction = options.currentOwner === options.prospectiveOwner || !options.prospectiveOwner;\n    if (selfAction) return $3b30d95b613bb442$var$createSelfActionArtefactDialogButtons(container, options);\n    switch(options.actionType){\n        case $3b30d95b613bb442$export$30b1e0f61711dee7.FIND:\n            return $3b30d95b613bb442$var$createFindArtefactDialogButtons(container, options);\n        case $3b30d95b613bb442$export$30b1e0f61711dee7.SELL:\n            return $3b30d95b613bb442$var$createSellArtefactDialogButtons(container, options);\n        case $3b30d95b613bb442$export$30b1e0f61711dee7.PILLAGE:\n            return $3b30d95b613bb442$var$createPillageArtefactDialogButtons(container, options);\n        case $3b30d95b613bb442$export$30b1e0f61711dee7.VIEW:\n        default:\n            return [];\n    }\n}\n/**\n * Create buttons for dialog. The buttons are added to the container.\n * @param {Element} container - container for the action buttons.\n * @param {ArtefactDialogOptions} options\n * @returns {module:utils/dom/components~BaseControlElement[]}\n */ function $3b30d95b613bb442$var$createFindArtefactDialogButtons(container, options) {\n    const actionButtons = [];\n    const possibleStore = options.prospectiveOwner.storeManager.findSuitableStore(options.artefact);\n    let button;\n    if (!possibleStore) container.appendChild($3b30d95b613bb442$var$createFailedStorageGuidance(options));\n    else {\n        let label;\n        let action;\n        if (possibleStore.storeType === (0, $c8439a0aab365384$export$39337ab5872e9457).CANTRIPS || possibleStore.storeType === (0, $c8439a0aab365384$export$39337ab5872e9457).SPELLS || possibleStore.storeType === (0, $c8439a0aab365384$export$39337ab5872e9457).READY_SPELLS) {\n            label = (0, $2a5626561236b7e1$export$a7357cdd1f0b0168)`BUTTON LEARN SPELL`;\n            action = $3b30d95b613bb442$var$ArtefactAction.LEARN_SPELL;\n        } else {\n            label = (0, $2a5626561236b7e1$export$a7357cdd1f0b0168)`BUTTON TAKE ARTEFACT`;\n            action = $3b30d95b613bb442$var$ArtefactAction.TAKE;\n        }\n        button = new $de9cad813c8cf1e8$export$3e9165d18613c27e({\n            label: label,\n            closes: action\n        });\n        actionButtons.push(button);\n    }\n    button = new $de9cad813c8cf1e8$export$3e9165d18613c27e({\n        label: (0, $2a5626561236b7e1$export$a7357cdd1f0b0168)`BUTTON LEAVE ARTEFACT`,\n        closes: $3b30d95b613bb442$var$ArtefactAction.LEAVE\n    });\n    actionButtons.push(button);\n    return actionButtons;\n}\n/**\n * Create buttons for dialog. The buttons are added to the container.\n * @param {Element} container - container for the action buttons.\n * @param {ArtefactDialogOptions} options\n * @returns {module:utils/dom/components~BaseControlElement}\n */ function $3b30d95b613bb442$var$createSelfActionArtefactDialogButtons(container, options) {\n    if (options.artefact.artefactType === (0, $c8439a0aab365384$export$e451727f06f039f2).COINS) return;\n    let actionButtons = [];\n    switch(options.artefact.artefactType){\n        case (0, $c8439a0aab365384$export$e451727f06f039f2).SPELL:\n            actionButtons = $3b30d95b613bb442$var$createSpellButtons(options);\n            break;\n        case (0, $c8439a0aab365384$export$e451727f06f039f2).CANTRIP:\n            actionButtons = $3b30d95b613bb442$var$createCantripButtons(options);\n            break;\n        case (0, $c8439a0aab365384$export$e451727f06f039f2).CONSUMABLE:\n            actionButtons = $3b30d95b613bb442$var$createConsumeButtons(options);\n            break;\n        default:\n            actionButtons = $3b30d95b613bb442$var$createStandardArtefactButtons(options);\n    }\n    //actionButtons.forEach((button) => container.appendChild(button.element));\n    actionButtons.push(new $de9cad813c8cf1e8$export$3e9165d18613c27e({\n        label: (0, $2a5626561236b7e1$export$a7357cdd1f0b0168)`BUTTON CONTINUE`,\n        closes: $3b30d95b613bb442$var$ArtefactAction.CONTINUE\n    }));\n    return actionButtons;\n}\n/**\n * Create cantrip artefact buttons.\n * @param {ArtefactDialogOptions} options\n * @returns {module:utils/dom/components~BaseControlElement[]}\n */ function $3b30d95b613bb442$var$createCantripButtons(options) {\n    const buttons = [];\n    if (options.allowMagicUse) buttons.push(new $de9cad813c8cf1e8$export$3e9165d18613c27e({\n        label: $3b30d95b613bb442$var$getLabelForUse(options.artefact),\n        closes: $3b30d95b613bb442$var$ArtefactAction.USE\n    }));\n    buttons.push(new $de9cad813c8cf1e8$export$3e9165d18613c27e({\n        label: (0, $2a5626561236b7e1$export$a7357cdd1f0b0168)`Forget`,\n        closes: $3b30d95b613bb442$var$ArtefactAction.DISCARD\n    }));\n    return buttons;\n}\n/**\n * Create spell artefact buttons.\n * @param {ArtefactDialogOptions} options\n * @returns {module:utils/dom/components~BaseControlElement[]}\n */ function $3b30d95b613bb442$var$createSpellButtons(options) {\n    const buttons = [];\n    const artefact = options.artefact;\n    if (options.allowMagicUse) buttons.push(new $de9cad813c8cf1e8$export$3e9165d18613c27e({\n        label: $3b30d95b613bb442$var$getLabelForUse(options.artefact),\n        closes: $3b30d95b613bb442$var$ArtefactAction.USE\n    }));\n    else if (options.storeType === artefact.stashStoreType && options.allowSpellPrep) buttons.push(new $de9cad813c8cf1e8$export$3e9165d18613c27e({\n        label: (0, $2a5626561236b7e1$export$a7357cdd1f0b0168)`BUTTON PREPARE SPELL`,\n        closes: $3b30d95b613bb442$var$ArtefactAction.PREPARE_SPELL\n    }));\n    if (options.allowSpellPrep) buttons.push(new $de9cad813c8cf1e8$export$3e9165d18613c27e({\n        label: (0, $2a5626561236b7e1$export$a7357cdd1f0b0168)`BUTTON FORGET`,\n        closes: $3b30d95b613bb442$var$ArtefactAction.DISCARD\n    }));\n    return buttons;\n}\n/**\n * Create consume artefact buttons.\n * @param {ArtefactDialogOptions} options\n * @returns {module:utils/dom/components~BaseControlElement[]}\n */ function $3b30d95b613bb442$var$createConsumeButtons(options) {\n    const buttons = [];\n    if ($3b30d95b613bb442$var$isArtefactUsable(options)) buttons.push(new $de9cad813c8cf1e8$export$3e9165d18613c27e({\n        label: $3b30d95b613bb442$var$getLabelForUse(options.artefact),\n        closes: $3b30d95b613bb442$var$ArtefactAction.CONSUME\n    }));\n    buttons.push(new $de9cad813c8cf1e8$export$3e9165d18613c27e({\n        label: (0, $2a5626561236b7e1$export$a7357cdd1f0b0168)`BUTTON DISCARD`,\n        closes: $3b30d95b613bb442$var$ArtefactAction.DISCARD\n    }));\n    return buttons;\n}\n/**\n * Check to see if the artefact is allowed to be used.\n * @param {ArtefactDialogOptions} options\n * @returns {boolean}\n */ function $3b30d95b613bb442$var$isArtefactUsable(options) {\n    const artefact = options.artefact;\n    if (!artefact.isUsable()) return false;\n    if (artefact.isMagic()) return options.allowMagicUse;\n    if (artefact.isConsumable()) return options.allowConsumption;\n}\n/**\n * Create standard artefact buttons.\n * @param {ArtefactDialogOptions} options\n * @returns {module:utils/dom/components~BaseControlElement[]}\n */ function $3b30d95b613bb442$var$createStandardArtefactButtons(options) {\n    const buttons = [];\n    if ($3b30d95b613bb442$var$isArtefactUsable(options)) buttons.push(new $de9cad813c8cf1e8$export$3e9165d18613c27e({\n        label: $3b30d95b613bb442$var$getLabelForUse(options.artefact),\n        closes: $3b30d95b613bb442$var$ArtefactAction.USE\n    }));\n    else if (options.storeType === options.artefact.stashStoreType && options.artefact.equipStoreType) buttons.push(new $de9cad813c8cf1e8$export$3e9165d18613c27e({\n        label: (0, $2a5626561236b7e1$export$a7357cdd1f0b0168)`BUTTON EQUIP`,\n        closes: $3b30d95b613bb442$var$ArtefactAction.EQUIP\n    }));\n    else if (options.storeType === options.artefact.equipStoreType && (!options.artefact.stashInWagon || options.currentOwner.storeManager.hasWagon)) buttons.push(new $de9cad813c8cf1e8$export$3e9165d18613c27e({\n        label: (0, $2a5626561236b7e1$export$a7357cdd1f0b0168)`BUTTON STASH`,\n        closes: $3b30d95b613bb442$var$ArtefactAction.STASH\n    }));\n    buttons.push(new $de9cad813c8cf1e8$export$3e9165d18613c27e({\n        label: options.artefact.isMagic() ? (0, $2a5626561236b7e1$export$a7357cdd1f0b0168)`Forget` : (0, $2a5626561236b7e1$export$a7357cdd1f0b0168)`BUTTON DISCARD`,\n        closes: $3b30d95b613bb442$var$ArtefactAction.DISCARD\n    }));\n    return buttons;\n}\n/**\n * Get a suitable label for a button to use an artefact.\n * @param {module:players/artefacts~Artefact} artefact\n * @returns {string}\n */ function $3b30d95b613bb442$var$getLabelForUse(artefact) {\n    switch(artefact.artefactType){\n        case (0, $c8439a0aab365384$export$e451727f06f039f2).CONSUMABLE:\n            return (0, $2a5626561236b7e1$export$a7357cdd1f0b0168)`BUTTON CONSUME`;\n        case (0, $c8439a0aab365384$export$e451727f06f039f2).SPELL:\n        case (0, $c8439a0aab365384$export$e451727f06f039f2).CANTRIP:\n            return (0, $2a5626561236b7e1$export$a7357cdd1f0b0168)`BUTTON CAST SPELL`;\n        default:\n            return (0, $2a5626561236b7e1$export$a7357cdd1f0b0168)`BUTTON USE`;\n    }\n}\n/**\n * Create buttons for dialog. The buttons are added to the container.\n * @param {Element} container - container for the action buttons.\n * @param {ArtefactDialogOptions} options\n * @returns {module:utils/dom/components~BaseControlElement}\n */ function $3b30d95b613bb442$var$createSellArtefactDialogButtons(container, options) {\n    if (options.artefact.artefactType === (0, $c8439a0aab365384$export$e451727f06f039f2).COINS) return;\n    const actionButtons = [];\n    const artefactCostInGp = options.artefact.costInGp;\n    let buyersFundsInGp;\n    if (options.prospectiveOwner.isTrader()) buyersFundsInGp = Number.MAX_SAFE_INTEGER; // traders have unlimited funds.\n    else buyersFundsInGp = options.prospectiveOwner.storeManager.getPurseValue();\n    // button labels shows action relative to the hero.\n    // i.e. although the action may be the trader selling\n    // an item, to the player this is viewed as buying.\n    let button;\n    const prospectiveStore = options.prospectiveOwner.storeManager.findSuitableStore(options.artefact);\n    if (!prospectiveStore) {\n        container.appendChild($3b30d95b613bb442$var$createFailedStorageGuidance(options));\n        if (!options.currentOwner.isTrader()) $3b30d95b613bb442$var$createSelfActionArtefactDialogButtons(container, options);\n        return;\n    }\n    if (buyersFundsInGp < options.artefact.costInGp) {\n        container.appendChild($3b30d95b613bb442$var$createNoFundsGuidance(buyersFundsInGp, artefactCostInGp));\n        if (!options.currentOwner.isTrader()) $3b30d95b613bb442$var$createSelfActionArtefactDialogButtons(container, options);\n        return;\n    }\n    button = new $de9cad813c8cf1e8$export$3e9165d18613c27e({\n        label: options.currentOwner.isTrader() ? (0, $2a5626561236b7e1$export$a7357cdd1f0b0168)`BUTTON BUY FOR GP ${options.artefact.costInGp.toFixed(2)}` : (0, $2a5626561236b7e1$export$a7357cdd1f0b0168)`BUTTON SELL FOR GP ${options.artefact.sellBackPriceInGp.toFixed(2)}`,\n        closes: $3b30d95b613bb442$var$ArtefactAction.SELL\n    });\n    actionButtons.push(button);\n    button = new $de9cad813c8cf1e8$export$3e9165d18613c27e({\n        label: (0, $2a5626561236b7e1$export$a7357cdd1f0b0168)`BUTTON CONTINUE`,\n        closes: $3b30d95b613bb442$var$ArtefactAction.CONTINUE\n    });\n    actionButtons.push(button);\n    return actionButtons;\n}\n/**\n * Create buttons for dialog. The buttons are added to the container.\n * @param {Element} container - container for the action buttons.\n * @param {ArtefactDialogOptions} options\n * @returns {module:utils/dom/components~BaseControlElement}\n */ function $3b30d95b613bb442$var$createPillageArtefactDialogButtons(container, options) {\n    if (options.currentOwner.alive) return $3b30d95b613bb442$var$createSelfActionArtefactDialogButtons(container, options);\n    const actionButtons = [];\n    const prospectiveStore = options.prospectiveOwner.storeManager.findSuitableStore(options.artefact);\n    if (!prospectiveStore) {\n        container.appendChild($3b30d95b613bb442$var$createFailedStorageGuidance(options));\n        if (options.currentOwner.alive) $3b30d95b613bb442$var$createSelfActionArtefactDialogButtons(container, options);\n        return;\n    }\n    let button = new $de9cad813c8cf1e8$export$3e9165d18613c27e({\n        label: (0, $2a5626561236b7e1$export$a7357cdd1f0b0168)`BUTTON PILLAGE`,\n        closes: $3b30d95b613bb442$var$ArtefactAction.PILLAGE\n    });\n    actionButtons.push(button);\n    button = new $de9cad813c8cf1e8$export$3e9165d18613c27e({\n        label: (0, $2a5626561236b7e1$export$a7357cdd1f0b0168)`BUTTON LEAVE ARTEFACT`,\n        closes: $3b30d95b613bb442$var$ArtefactAction.CONTINUE\n    });\n    actionButtons.push(button);\n    return actionButtons;\n}\n/**\n * Create an element advising that insufficient funds are available.\n * @param {number} availableGp\n * @param {number} requiredGp\n * @returns {Element}\n */ function $3b30d95b613bb442$var$createNoFundsGuidance(availableGp, requiredGp) {\n    let text;\n    text = (0, $2a5626561236b7e1$export$a7357cdd1f0b0168)`MESSAGE INSUFFICIENT FUNDS ${requiredGp} ${availableGp}`;\n    return $de9cad813c8cf1e8$export$c8a8987d4410bf2d(\"p\", {\n        className: \"guidance\",\n        text: text\n    });\n}\n/**\n * Create an element that provides guidance about why something cannot be stored.\n * @param {ArtefactDialogOptions} options\n * @returns {Element}\n */ function $3b30d95b613bb442$var$createFailedStorageGuidance(options) {\n    let text;\n    if (options.artefact.stashInWagon) text = (0, $2a5626561236b7e1$export$a7357cdd1f0b0168)`MESSAGE MAKE SPACE IN EQUIP`;\n    else text = (0, $2a5626561236b7e1$export$a7357cdd1f0b0168)`MESSAGE MAKE SPACE IN BACKPACK`;\n    return $de9cad813c8cf1e8$export$c8a8987d4410bf2d(\"p\", {\n        className: \"guidance\",\n        text: text\n    });\n}\n/**\n * Show equipment dialog.\n * @param {ArtefactDialogOptions} options\n * @return {Promise} fulfils to response from the dialog.\n */ function $3b30d95b613bb442$var$showEquipDialog(options) {\n    const artefact = options.artefact;\n    const container = $de9cad813c8cf1e8$export$c8a8987d4410bf2d(\"div\", {\n        className: \"use-weapon-dialog\"\n    });\n    container.appendChild($3b30d95b613bb442$var$createActorElement(artefact));\n    const actionButtons = $3b30d95b613bb442$var$createArtefactDialogButtons(container, options);\n    return (0, $81dd6b24526c5347$export$2e2bcd8739ae039).showControlsDialog(container, {\n        preamble: options.preamble,\n        actionButtons: actionButtons,\n        row: true\n    });\n}\n/**\n * Create an id card element for an actor.\n * @param {module:players/actors~Actor|module:game/artefact~Artefacts} actor\n * @returns {Element}\n */ function $3b30d95b613bb442$var$createIdCard(actor) {\n    const idCard = $de9cad813c8cf1e8$export$c8a8987d4410bf2d(\"div\", {\n        className: \"actor-id-card\"\n    });\n    idCard.appendChild($de9cad813c8cf1e8$export$f119f65a5d88757e(actor.iconImageName));\n    idCard.appendChild($de9cad813c8cf1e8$export$c8a8987d4410bf2d(\"span\", {\n        text: actor.traits?.get(\"NAME\") ?? (0, $2a5626561236b7e1$export$a7357cdd1f0b0168)`Unknown`\n    }));\n    const hp = actor.traits.getInt(\"HP\");\n    if (hp) {\n        const hpMax = actor.traits.getInt(\"HP_MAX\");\n        let hpText;\n        if (hp === 0) hpText = (0, $2a5626561236b7e1$export$a7357cdd1f0b0168)`(DEAD)`;\n        else if (hpMax) hpText = (0, $2a5626561236b7e1$export$a7357cdd1f0b0168)`(HP OUT OF VALUE) ${hp} ${hpMax}`;\n        else hpText = (0, $2a5626561236b7e1$export$a7357cdd1f0b0168)`(HP VALUE) ${hp}`;\n        idCard.appendChild($de9cad813c8cf1e8$export$c8a8987d4410bf2d(\"span\", {\n            text: hpText\n        }));\n    }\n    if (actor.traits.getCharacterLevel) idCard.appendChild($de9cad813c8cf1e8$export$c8a8987d4410bf2d(\"span\", {\n        text: (0, $2a5626561236b7e1$export$a7357cdd1f0b0168)`CHARACTER LEVEL: ${actor.traits.getCharacterLevel()}`\n    }));\n    return idCard;\n}\n/**\n * Create an element describing an actor.\n * @param {module:players/actors~Actor} actor\n * @param {Object} options\n * @param {boolean} options.hideDescription\n * @param {boolean} options.hideTraits\n * @param {string | Element} options.description - override the normal\n * description of the actor.\n * @returns {Element}\n */ function $3b30d95b613bb442$var$createActorElement(actor, options = {}) {\n    const container = $de9cad813c8cf1e8$export$c8a8987d4410bf2d(\"div\", {\n        className: \"actor-detail\"\n    });\n    const idCard = $3b30d95b613bb442$var$createIdCard(actor);\n    container.appendChild(idCard);\n    let descriptionElement;\n    if (!options.hideDescription) {\n        if (options.description) descriptionElement = options.description instanceof Element ? options.description : $de9cad813c8cf1e8$export$c8a8987d4410bf2d(\"p\", {\n            text: options.description\n        });\n        else if (actor.description) descriptionElement = $de9cad813c8cf1e8$export$c8a8987d4410bf2d(\"p\", {\n            text: actor.description\n        });\n    }\n    if (descriptionElement) container.appendChild(descriptionElement);\n    if (!options.hideTraits) container.appendChild($3b30d95b613bb442$var$createTraitsList(actor, [\n        \"NAME\"\n    ], true));\n    return container;\n}\n/**\n * Create an element showing an actor's traits. Gold coins contained in the actor's\n * purse are included as a trait if includeGold flag is set.\n * @param {module:players/actors~Actor|module:players/artefacts~Artefact} actor\n * @param {string[]} excludedKeys - Keys to ignore. Elements starting with an\n * underscore are automatically hidden.\n * @param {boolean} includeGold - flag to determine if gold pieces are included.\n * @returns {Element}\n */ function $3b30d95b613bb442$var$createTraitsList(actor, excludedKeys, includeGold) {\n    const traitsList = document.createElement(\"ul\");\n    if (actor.traits.getEffectiveAc) traitsList.appendChild($de9cad813c8cf1e8$export$c8a8987d4410bf2d(\"li\", {\n        text: (0, $2a5626561236b7e1$export$a7357cdd1f0b0168)`AC (including armour)${actor.traits.getEffectiveAc()}`\n    }));\n    if (includeGold) {\n        const goldPieces = actor.storeManager?.getPurseValue();\n        if (goldPieces) traitsList.appendChild($de9cad813c8cf1e8$export$c8a8987d4410bf2d(\"li\", {\n            text: (0, $8cbfa63134b289e1$export$c3ea19e5141a48b4)(goldPieces)\n        }));\n    }\n    actor.traits?.getAllTraitsSorted().forEach((value, key)=>{\n        if (value && value !== \"0\") {\n            const displayedValue = Array.isArray(value) ? value.join(\", \") : value;\n            if (!excludedKeys.includes(key) && !key.startsWith(\"_\")) {\n                const displayedKey = key?.replace(\"_\", \" \");\n                const item = document.createElement(\"li\");\n                const label = $de9cad813c8cf1e8$export$c8a8987d4410bf2d(\"span\", {\n                    text: `${displayedKey}: `\n                });\n                const content = $de9cad813c8cf1e8$export$c8a8987d4410bf2d(\"span\", {\n                    text: displayedValue\n                });\n                traitsList.appendChild(item);\n                item.appendChild(label);\n                item.appendChild(content);\n            }\n        }\n    });\n    return traitsList;\n}\n/**\n * Create a label for an artefact button.\n * @param {ArtefactDialogOptions} options\n * @return {string}\n */ function $3b30d95b613bb442$var$createArtefactButtonLabel(options) {\n    const traits = options.artefact.traits;\n    let label = traits.get(\"NAME\");\n    if (options.showDamage) {\n        const damage = traits.getDamageDiceWhenCastBy ? traits.getDamageDiceWhenCastBy(options.currentOwner) : traits.get(\"DMG\");\n        const range = traits.get(\"RANGE\");\n        if (damage) label = `${label} DMG: ${damage}`;\n        if (range) label = `${label} RANGE: ${range}`;\n    }\n    if (options.showPrice || options.artefact.artefactType === (0, $c8439a0aab365384$export$e451727f06f039f2).COINS) {\n        const price = options.currentOwner.isTrader() ? options.artefact.costInGp : options.artefact.sellBackPriceInGp;\n        label = `${label} ${price.toFixed(2)} GP`;\n    }\n    return label;\n}\nfunction $3b30d95b613bb442$export$22192403b4d58a2d(buyer, seller, pillage) {\n    const container = $de9cad813c8cf1e8$export$c8a8987d4410bf2d(\"div\", {\n        className: \"trade\"\n    });\n    const sideBySide = $de9cad813c8cf1e8$export$c8a8987d4410bf2d(\"div\", {\n        className: \"side-by-side\"\n    });\n    container.appendChild(sideBySide);\n    const buyerSide = $de9cad813c8cf1e8$export$c8a8987d4410bf2d(\"div\", {});\n    const sellerSide = $de9cad813c8cf1e8$export$c8a8987d4410bf2d(\"div\", {});\n    sideBySide.appendChild(buyerSide);\n    sideBySide.appendChild(sellerSide);\n    buyerSide.appendChild($3b30d95b613bb442$var$createIdCard(buyer));\n    sellerSide.appendChild($3b30d95b613bb442$var$createIdCard(seller));\n    const actionType = pillage ? $3b30d95b613bb442$export$30b1e0f61711dee7.PILLAGE : $3b30d95b613bb442$export$30b1e0f61711dee7.SELL;\n    const buyerInventory = new $3b30d95b613bb442$var$InventoryContainerElement({\n        currentOwner: buyer,\n        prospectiveOwner: seller,\n        actionType: actionType,\n        showPrice: true\n    });\n    const sellerInventory = new $3b30d95b613bb442$var$InventoryContainerElement({\n        currentOwner: seller,\n        prospectiveOwner: buyer,\n        actionType: actionType,\n        showPrice: true\n    }, {\n        limitation: pillage ? $3b30d95b613bb442$var$InventoryLimitation.STANDARD : $3b30d95b613bb442$var$InventoryLimitation.STASH_ONLY\n    });\n    buyerInventory.linkedInventory = sellerInventory;\n    sellerInventory.linkedInventory = buyerInventory;\n    buyerSide.appendChild(buyerInventory.element);\n    sellerSide.appendChild(sellerInventory.element);\n    const button = new $de9cad813c8cf1e8$export$3e9165d18613c27e({\n        label: (0, $2a5626561236b7e1$export$a7357cdd1f0b0168)`BUTTON CONTINUE`\n    });\n    button.closes = (0, $81dd6b24526c5347$export$c2043c90d147849d).CANCEL;\n    const actionButtons = [];\n    actionButtons.push(button);\n    return (0, $81dd6b24526c5347$export$2e2bcd8739ae039).showControlsDialog(container, {\n        preamble: pillage ? (0, $2a5626561236b7e1$export$a7357cdd1f0b0168)`DIALOG TITLE PILLAGE` : (0, $2a5626561236b7e1$export$a7357cdd1f0b0168)`DIALOG TITLE TRADE`,\n        actionButtons: actionButtons\n    });\n}\nfunction $3b30d95b613bb442$export$b41ef3e846117718(buyer, seller) {\n    return $3b30d95b613bb442$export$22192403b4d58a2d(buyer, seller, false);\n}\nfunction $3b30d95b613bb442$export$57057306d4e02258(pillager, victim) {\n    return $3b30d95b613bb442$export$22192403b4d58a2d(pillager, victim, true);\n}\nfunction $3b30d95b613bb442$export$634672c91d44b77e(actor, options = {}) {\n    const container = document.createElement(\"div\");\n    container.appendChild($de9cad813c8cf1e8$export$c8a8987d4410bf2d(\"span\", {\n        text: (0, $2a5626561236b7e1$export$a7357cdd1f0b0168)`Dungeon level: ${(0, $6664788cb4fc34b5$export$2e2bcd8739ae039).getCurrentSceneLevel()}`\n    }));\n    const actorContainer = $de9cad813c8cf1e8$export$c8a8987d4410bf2d(\"div\", {\n        className: \"actor-container\"\n    });\n    container.appendChild(actorContainer);\n    const actorElement = $3b30d95b613bb442$var$createActorElement(actor, {\n        hideTraits: true,\n        description: options.description\n    });\n    actorContainer.appendChild(actorElement);\n    let button;\n    let actionButtons;\n    if (!actor.isProp()) {\n        button = new $de9cad813c8cf1e8$export$3e9165d18613c27e({\n            label: (0, $2a5626561236b7e1$export$a7357cdd1f0b0168)`BUTTON INVENTORY`,\n            action: ()=>$3b30d95b613bb442$var$showInventory(actor, {\n                    allowConsumption: options.allowConsumption,\n                    allowMagicUse: options.allowMagicUse\n                }).then(()=>actorContainer.replaceChildren($3b30d95b613bb442$var$createActorElement(actor, {\n                        hideTraits: true,\n                        description: options.description\n                    })))\n        });\n        container.appendChild(button.element);\n        button = new $de9cad813c8cf1e8$export$3e9165d18613c27e({\n            label: (0, $2a5626561236b7e1$export$a7357cdd1f0b0168)`BUTTON TRAITS`,\n            action: ()=>$3b30d95b613bb442$var$showTraits(actor)\n        });\n        container.appendChild(button.element);\n        button = new $de9cad813c8cf1e8$export$3e9165d18613c27e({\n            label: (0, $2a5626561236b7e1$export$a7357cdd1f0b0168)`BUTTON MAGIC`,\n            action: ()=>$3b30d95b613bb442$var$showInventory(actor, {\n                    allowMagicUse: false,\n                    limitation: $3b30d95b613bb442$var$InventoryLimitation.MAGIC\n                })\n        });\n        container.appendChild(button.element);\n        if (options.allowRest) {\n            button = new $de9cad813c8cf1e8$export$3e9165d18613c27e({\n                label: (0, $2a5626561236b7e1$export$a7357cdd1f0b0168)`BUTTON REST`,\n                action: ()=>{\n                    return $3b30d95b613bb442$var$showRestActionDialog(actor).then(()=>actorElement.replaceWith($3b30d95b613bb442$var$createActorElement(actor, {\n                            hideTraits: true\n                        })));\n                }\n            });\n            container.appendChild(button.element);\n        }\n        if (options.allowMagicUse) {\n            actionButtons = actionButtons ?? [];\n            button = new $de9cad813c8cf1e8$export$3e9165d18613c27e({\n                label: (0, $2a5626561236b7e1$export$a7357cdd1f0b0168)`BUTTON CAST SPELL`\n            });\n            button.closes = \"CAST SPELL\";\n            actionButtons.push(button);\n        }\n    }\n    if (actionButtons) {\n        button = new $de9cad813c8cf1e8$export$3e9165d18613c27e({\n            label: (0, $2a5626561236b7e1$export$a7357cdd1f0b0168)`BUTTON CONTINUE`\n        });\n        button.closes = (0, $81dd6b24526c5347$export$c2043c90d147849d).CANCEL;\n        actionButtons.push(button);\n    }\n    return (0, $81dd6b24526c5347$export$2e2bcd8739ae039).showControlsDialog(container, {\n        okButtonLabel: options.okButtonLabel,\n        actionButtons: actionButtons\n    }).then((closes)=>{\n        switch(closes){\n            case \"CAST SPELL\":\n                return $3b30d95b613bb442$var$showCastSpells(actor);\n            default:\n                return Promise.resolve();\n        }\n    });\n}\nfunction $3b30d95b613bb442$export$19550c7d374fe949(options) {\n    if (!options.prospectiveOwner) options.prospectiveOwner = options.currentOwner; // self action\n    const sourceStoreManager = options.currentOwner.storeManager;\n    const destStoreManager = options.prospectiveOwner.storeManager;\n    const artefact = options.artefact;\n    let dialogFn;\n    switch(options.artefact.artefactType){\n        case (0, $c8439a0aab365384$export$e451727f06f039f2).WEAPON:\n        case (0, $c8439a0aab365384$export$e451727f06f039f2).TWO_HANDED_WEAPON:\n        case (0, $c8439a0aab365384$export$e451727f06f039f2).HEAD_GEAR:\n        case (0, $c8439a0aab365384$export$e451727f06f039f2).ARMOUR:\n        case (0, $c8439a0aab365384$export$e451727f06f039f2).SHIELD:\n        case (0, $c8439a0aab365384$export$e451727f06f039f2).COINS:\n        case (0, $c8439a0aab365384$export$e451727f06f039f2).CONSUMABLE:\n        case (0, $c8439a0aab365384$export$e451727f06f039f2).SPELL:\n        case (0, $c8439a0aab365384$export$e451727f06f039f2).CANTRIP:\n            dialogFn = $3b30d95b613bb442$var$showEquipDialog;\n            break;\n    }\n    return dialogFn(options).then((response)=>{\n        switch(response){\n            case $3b30d95b613bb442$var$ArtefactAction.CONSUME:\n                sourceStoreManager.discard(artefact);\n                return artefact.interaction.react(options.currentOwner);\n            case $3b30d95b613bb442$var$ArtefactAction.DISCARD:\n                sourceStoreManager.discard(artefact);\n                break;\n            case $3b30d95b613bb442$var$ArtefactAction.PREPARE_SPELL:\n            case $3b30d95b613bb442$var$ArtefactAction.EQUIP:\n                destStoreManager.equip(artefact);\n                break;\n            case $3b30d95b613bb442$var$ArtefactAction.LEARN_SPELL:\n                if (artefact.isMagic() && destStoreManager.hasArtefactWithSameId(artefact)) return (0, $81dd6b24526c5347$export$2e2bcd8739ae039).showOkDialog((0, $2a5626561236b7e1$export$a7357cdd1f0b0168)`MESSAGE SPELL ALREADY KNOWN`);\n                else {\n                    sourceStoreManager.discard(artefact);\n                    const store = destStoreManager.findSuitableStore(artefact);\n                    store.add(artefact);\n                }\n                break;\n            case $3b30d95b613bb442$var$ArtefactAction.PILLAGE:\n                {\n                    sourceStoreManager.discard(artefact);\n                    const store = destStoreManager.findSuitableStore(artefact);\n                    store.add(artefact);\n                }\n                break;\n            case $3b30d95b613bb442$var$ArtefactAction.SELL:\n                {\n                    const money = options.currentOwner.isTrader() ? artefact.costInGp : artefact.sellBackPriceInGp;\n                    sourceStoreManager.addToPurse(money);\n                    if (!options.prospectiveOwner.isTrader()) destStoreManager.takeFromPurse(money); // traders have unlimited funds\n                    sourceStoreManager.discard(artefact);\n                    if (artefact.stashInWagon && !destStoreManager.hasWagon) destStoreManager.equip(artefact, {\n                        direct: true\n                    });\n                    else destStoreManager.stash(artefact, {\n                        direct: true\n                    });\n                }\n                break;\n            case $3b30d95b613bb442$var$ArtefactAction.STASH:\n                destStoreManager.stash(artefact);\n                break;\n            case $3b30d95b613bb442$var$ArtefactAction.TAKE:\n                sourceStoreManager.discard(artefact);\n                if (artefact.stashInWagon && !destStoreManager.hasWagon) destStoreManager.equip(artefact, {\n                    direct: true\n                });\n                else destStoreManager.stash(artefact, {\n                    direct: true\n                });\n                break;\n            case $3b30d95b613bb442$var$ArtefactAction.USE:\n                return artefact.interaction.react(options.currentOwner);\n        }\n        return Promise.resolve();\n    });\n}\nfunction $3b30d95b613bb442$export$1fa1f898df932d80(heroActor) {\n    const messageContainer = $de9cad813c8cf1e8$export$c8a8987d4410bf2d(\"div\");\n    messageContainer.appendChild($de9cad813c8cf1e8$export$c8a8987d4410bf2d(\"p\", {\n        text: (0, $2a5626561236b7e1$export$a7357cdd1f0b0168)`MESSAGE REST DIALOG`\n    }));\n    const restReqs = $de9cad813c8cf1e8$export$c8a8987d4410bf2d(\"ul\");\n    messageContainer.appendChild(restReqs);\n    restReqs.appendChild($de9cad813c8cf1e8$export$c8a8987d4410bf2d(\"li\", {\n        text: (0, $2a5626561236b7e1$export$a7357cdd1f0b0168)`SHORT REST REQ ${$9bf960d1e43f0ba6$export$ff8cb03fee7cf5b7} ${$9bf960d1e43f0ba6$export$f482b03c0d47770c}`\n    }));\n    restReqs.appendChild($de9cad813c8cf1e8$export$c8a8987d4410bf2d(\"li\", {\n        text: (0, $2a5626561236b7e1$export$a7357cdd1f0b0168)`LONG REST REQ ${$9bf960d1e43f0ba6$export$acf4bc55b62ab78b} ${$9bf960d1e43f0ba6$export$f38bd2bad06ce15b}`\n    }));\n    return $3b30d95b613bb442$export$634672c91d44b77e(heroActor, {\n        allowConsumption: true,\n        allowRest: true,\n        description: messageContainer,\n        okButtonLabel: (0, $2a5626561236b7e1$export$a7357cdd1f0b0168)`BUTTON TO NEXT ROOM`\n    });\n}\n\n\n\n\n\n\n\n\n/**\n * Display rising text that fades.\n * @param {string} text\n * @param {module:utils/geometry~Position} position\n * @param {string} [color = 'white']\n */ function $31cf9b99c7a79e42$var$displayRisingText(text, position, color = \"white\") {\n    (0, $ae446a5a8f069dac$export$dc0b517182376fca)(text, {\n        color: color,\n        delaySecs: 2,\n        lifetimeSecs: 3,\n        position: new (0, $90999bd6b14cd690$export$baf26146a414f24a)(position.x, position.y),\n        velocity: new (0, $90999bd6b14cd690$export$4a23b3811cef465)(0, -48, 0),\n        acceleration: new (0, $90999bd6b14cd690$export$5086e02bc6b47824)(0, -96, 0)\n    });\n}\n/**\n * Apply poison damage to defender\n * @param {Artefact} poison\n * @param {Actor} victim\n * @param {number} damage\n * @returns {number} resulting HP of defender\n */ function $31cf9b99c7a79e42$var$applyPoisonDamage(poison, victim, damage) {\n    (0, $4d3fcc3866f168b9$export$2e2bcd8739ae039).playEffect(\"POISONED\");\n    if (damage >= 0) {\n        (0, $ae446a5a8f069dac$export$5b6dfdcdc3ef8663)((0, $5840285c35321464$export$2e2bcd8739ae039).getSpriteBitmap(\"skull.png\"), {\n            delaySecs: 0,\n            lifetimeSecs: 1,\n            position: victim.position,\n            velocity: new (0, $90999bd6b14cd690$export$4a23b3811cef465)(0, 0, 0)\n        });\n        return $31cf9b99c7a79e42$var$applyDamage(poison, victim, damage);\n    }\n}\n/**\n * Apply damage to defender\n * @param {Artefact | Actor} attacker\n * @param {Actor} defender\n * @param {number} damage\n * @returns {number} resulting HP of defender\n */ function $31cf9b99c7a79e42$var$applyDamage(attacker, defender, damage) {\n    if (!damage || !defender.alive || defender.isProp() || defender.isHiddenArtefact()) return 0;\n    let defenderHP = defender.traits.get(\"HP\", 0);\n    defenderHP = Math.max(0, defenderHP - damage);\n    defender.traits.set(\"HP\", defenderHP);\n    if (defenderHP === 0) {\n        (0, $4d3fcc3866f168b9$export$2e2bcd8739ae039).playEffect(\"DIE\");\n        (0, $2d5b4e7cb639ebe1$export$2e2bcd8739ae039).info(\"Killed actor.\");\n        defender.interaction = new $31cf9b99c7a79e42$export$b0a99659d931757e(defender);\n        defender.alive = false;\n        if (attacker.isHero?.()) {\n            const change = attacker.traits.adjustForDefeatOfActor(defender);\n            let text;\n            if (change.level.now > change.level.was) text = (0, $2a5626561236b7e1$export$a7357cdd1f0b0168)`LEVEL UP ${change.level.now}`;\n            else if (change.exp.now > change.exp.was) text = `+${change.exp.now - change.exp.was} EXP`;\n            if (text) $31cf9b99c7a79e42$var$displayRisingText(text, attacker.position, (0, $f5b04f63aedb55f0$export$1f4d983d2ef95b6b).HP_TRANSIENT_TEXT_HERO);\n        }\n    } else {\n        const textColor = defender.isHero() ? (0, $f5b04f63aedb55f0$export$1f4d983d2ef95b6b).HP_TRANSIENT_TEXT_HERO : (0, $f5b04f63aedb55f0$export$1f4d983d2ef95b6b).HP_TRANSIENT_TEXT_ENEMY;\n        $31cf9b99c7a79e42$var$displayRisingText(`-${damage} HP`, defender.position, textColor);\n    }\n    return defenderHP;\n}\nclass $31cf9b99c7a79e42$export$f7b5529658291013 {\n    /** Actor owning the interaction @type {Actor} */ owner;\n    /**\n   *\n   * @param {Actor|Artefact} owner\n   */ constructor(owner){\n        this.owner = owner;\n    }\n    /**\n   * @param {module:players/actors~Actor} reactor\n   * @returns {Promise}\n   */ enact(reactorUnused) {\n        return Promise.resolve();\n    }\n    /**\n   * @param {module:players/actors~Actor} enactor\n   * @returns {Promise}\n   */ react(enactorUnused) {\n        return Promise.resolve();\n    }\n    /**\n   * Test to see if the interaction can react.\n   * This should be overridden.\n   * @returns {boolean}\n   */ canReact() {\n        return false;\n    }\n    /**\n   * Test to see if the interaction can enact.\n   * This should be overridden.\n   * @returns {boolean}\n   */ canEnact() {\n        return false;\n    }\n    /**\n   * Test to see if actor can disengage from an interaction. Actors can\n   * always move away from an interaction. Disengaging is different in that\n   * following actions can be affected. The interaction will not do anything\n   * about the disengaging. This flag merely indicates whether callers should\n   * respect an attempt to disengage.\n   * @param {Actor} escaper\n   * @returns {boolean} true if can run\n   */ respectDisengage(escaperUnused) {\n        return false;\n    }\n}\nclass $31cf9b99c7a79e42$export$56070c78bbcda189 extends $31cf9b99c7a79e42$export$f7b5529658291013 {\n    /**\n   * Construct the interaction.\n   * @param {Actor} owner - parent actor.\n   */ constructor(owner){\n        super(owner);\n    }\n    /**\n   * @override\n   * @returns {boolean}\n   */ canEnact() {\n        return true;\n    }\n    /**\n   * @override\n   * @returns {boolean}\n   */ canReact() {\n        return true;\n    }\n    /**\n   * @param {module:players/actors~Actor} reactor\n   * @returns {Promise}\n   */ enact(reactor) {\n        return this.#resolveAttackerDefender(this.owner, reactor);\n    }\n    /**\n   * @param {module:players/actors~Actor} enactor\n   * @returns {Promise}\n   */ react(enactor) {\n        return this.#resolveAttackerDefender(enactor, this.owner);\n    }\n    /**\n   * Test to see if actor can run away from an interaction. If the actor cannot,\n   * a failed message appears. The actual move is not undertaken\n   * @param {Actor} escaper\n   * @returns {boolean} true if can run\n   */ respectDisengage(escaperUnused) {\n        return true;\n    }\n    /**\n   * Display an attack\n   * @param {Actor} attacker\n   * @param {Actor} defender\n   * @returns {Promise}\n   */ #displayAttack(attacker, defender) {\n        const startPoint = (0, $90999bd6b14cd690$export$baf26146a414f24a).copy(attacker.position);\n        const attackPoint = new (0, $90999bd6b14cd690$export$baf26146a414f24a)(attacker.position.x + 0.2 * (defender.position.x - attacker.position.x), attacker.position.y + 0.2 * (defender.position.y - attacker.position.y));\n        const pathModifier = new (0, $6b87500f649b76df$export$c14f425b03c3e261)({\n            path: [\n                attackPoint,\n                startPoint\n            ],\n            speed: 100\n        });\n        return pathModifier.applyAsTransientToSprite(attacker.sprite);\n    }\n    /**\n   * Undertake attack. Note that the defender is not removed if its hit points\n   * hit zero.\n   * @param {Actor} attacker\n   * @param {Actor} defender\n   * @returns {Promise} fulfils to the defender's HP.\n   */ #undertakeAllAttacks(attacker, defender) {\n        let totalDamage = 0;\n        let successfulAttacks = 0;\n        attacker.traits.getAttacks().forEach((attack)=>{\n            const damage = $9bf960d1e43f0ba6$export$a00548f2d1dc9708(attack, defender);\n            if (damage > 0) {\n                successfulAttacks++;\n                totalDamage += damage;\n            }\n        });\n        return new Promise((resolve)=>{\n            if (totalDamage <= 0) {\n                (0, $4d3fcc3866f168b9$export$2e2bcd8739ae039).playEffect(\"MISS\");\n                (0, $ae446a5a8f069dac$export$5b6dfdcdc3ef8663)((0, $5840285c35321464$export$2e2bcd8739ae039).getSpriteBitmap(\"miss.png\"), {\n                    delaySecs: 0,\n                    lifetimeSecs: 1,\n                    position: defender.position,\n                    velocity: new (0, $90999bd6b14cd690$export$4a23b3811cef465)(0, 0, 0)\n                });\n                resolve();\n                return;\n            }\n            let hitSound = successfulAttacks > 1 ? \"DOUBLE PUNCH\" : \"PUNCH\";\n            let hitImage = successfulAttacks > 1 ? \"blood-splat-twice.png\" : \"blood-splat.png\";\n            (0, $4d3fcc3866f168b9$export$2e2bcd8739ae039).playEffect(hitSound);\n            (0, $ae446a5a8f069dac$export$5b6dfdcdc3ef8663)((0, $5840285c35321464$export$2e2bcd8739ae039).getSpriteBitmap(hitImage), {\n                delaySecs: 0,\n                lifetimeSecs: 1,\n                position: defender.position,\n                velocity: new (0, $90999bd6b14cd690$export$4a23b3811cef465)(0, 0, 0)\n            });\n            const defenderHP = $31cf9b99c7a79e42$var$applyDamage(attacker, defender, totalDamage);\n            resolve(defenderHP);\n        });\n    }\n    /**\n   * Resolve a fight.\n   * @param {Actor} attacker\n   * @param {Actor} defender\n   * @returns {Promise}\n   */ #resolveAttackerDefender(attacker, defender) {\n        return this.#displayAttack(attacker, defender).then(()=>this.#undertakeAllAttacks(attacker, defender));\n    }\n}\nclass $31cf9b99c7a79e42$export$b0a99659d931757e extends $31cf9b99c7a79e42$export$f7b5529658291013 {\n    /**\n   * Construct the interaction.\n   * @param {Actor} owner - parent actor.\n   */ constructor(owner){\n        super(owner);\n    }\n    /**\n   * @override\n   * @returns {boolean}\n   */ canEnact() {\n        return false;\n    }\n    /**\n   * @override\n   * @returns {boolean}\n   */ canReact() {\n        return true;\n    }\n    /**\n   * Respond to a search\n   * @param {module:players/actors~Actor} reactor\n   * @returns {Promise}\n   */ async react(enactor) {\n        return $3b30d95b613bb442$export$57057306d4e02258(enactor, this.owner);\n    }\n}\nclass $31cf9b99c7a79e42$export$366210f9de782ba6 extends $31cf9b99c7a79e42$export$f7b5529658291013 {\n    /**\n   * Construct the interaction.\n   * @param {Actor} owner - parent actor.\n   */ constructor(owner){\n        super(owner);\n    }\n    /**\n   * @override\n   * @returns {boolean}\n   */ canEnact() {\n        return false;\n    }\n    /**\n   * @override\n   * @returns {boolean}\n   */ canReact() {\n        return true;\n    }\n    /**\n   * Trades are passive. Only the hero can initiate a trade.\n   * Note there is possibility for traders to block the exit, so\n   * the option to barge past is provided.\n   * @param {module:players/actors~Actor} enactor\n   * @returns {Promise}\n   */ react(enactor) {\n        return (0, $81dd6b24526c5347$export$2e2bcd8739ae039).showChoiceDialog((0, $2a5626561236b7e1$export$a7357cdd1f0b0168)`DIALOG TITLE CHOICES`, (0, $2a5626561236b7e1$export$a7357cdd1f0b0168)`MESSAGE TRADE OR BARGE`, [\n            (0, $2a5626561236b7e1$export$a7357cdd1f0b0168)`BUTTON TRADE`,\n            (0, $2a5626561236b7e1$export$a7357cdd1f0b0168)`BUTTON BARGE`\n        ]).then((choice)=>{\n            if (choice === 0) return $3b30d95b613bb442$export$b41ef3e846117718(enactor, this.owner);\n            else return this.#swapPositions(enactor);\n        });\n    }\n    /**\n   * Swap position with another actor\n   * @param {Actor} them\n   * @returns {Promise} fulfils to undefined when complete.\n   */ #swapPositions(them) {\n        const myPosition = (0, $90999bd6b14cd690$export$baf26146a414f24a).copy(this.owner.position);\n        const theirPosition = (0, $90999bd6b14cd690$export$baf26146a414f24a).copy(them.position);\n        return Promise.all([\n            (0, $6b87500f649b76df$export$6ade622442e46b50)(them, myPosition),\n            (0, $6b87500f649b76df$export$6ade622442e46b50)(this.owner, theirPosition)\n        ]);\n    }\n}\nclass $31cf9b99c7a79e42$export$13d2779752f0bd8f extends $31cf9b99c7a79e42$export$f7b5529658291013 {\n    /**\n   * Construct the interaction.\n   * @param {Actor} actor - parent actor.\n   */ constructor(actor){\n        super(actor);\n    }\n    /**\n   * @override\n   * @returns {boolean}\n   */ canEnact() {\n        return false;\n    }\n    /**\n   * @override\n   * @returns {boolean}\n   */ canReact() {\n        return true;\n    }\n    /**\n   * Finding an artefact is a passive action and can only be initiated by another\n   * actor.\n   * @param {module:players/actors~Actor} enactor\n   * @returns {Promise}\n   */ async react(enactor) {\n        this.owner.alive = false;\n        const storageDetails = this.owner.storeManager.getFirstStorageDetails();\n        if (storageDetails) {\n            const artefact = storageDetails.artefact;\n            return $3b30d95b613bb442$export$19550c7d374fe949({\n                preamble: this.#createDiscoveryMessage(artefact),\n                currentOwner: this.owner,\n                prospectiveOwner: enactor,\n                storeType: storageDetails.store.storeType,\n                artefact: artefact,\n                actionType: $3b30d95b613bb442$export$30b1e0f61711dee7.FIND\n            });\n        } else return (0, $81dd6b24526c5347$export$2e2bcd8739ae039).showOkDialog((0, $2a5626561236b7e1$export$a7357cdd1f0b0168)`MESSAGE NOTHING MORE TO DISCOVER`);\n    }\n    /**\n   * Create a message describing the action of discovery rather\n   * than the artefact itself.\n   * @param {*} foundArtefact\n   * @returns {string}\n   */ #createDiscoveryMessage(foundArtefact) {\n        if (this.owner.type === (0, $9e949bc7e910e09d$export$ec2f7d5cc9321319).HIDDEN_ARTEFACT) return (0, $2a5626561236b7e1$export$a7357cdd1f0b0168)`MESSAGE FOUND HIDDEN ARTEFACT`;\n        else if (foundArtefact.artefactType === (0, $c8439a0aab365384$export$e451727f06f039f2).SPELL) // must be a prop and only engraved pillars currently supported.\n        return (0, $2a5626561236b7e1$export$a7357cdd1f0b0168)`MESSAGE FOUND ENGRAVING`;\n        return (0, $2a5626561236b7e1$export$a7357cdd1f0b0168)`MESSAGE FOUND GENERIC`;\n    }\n}\nclass $31cf9b99c7a79e42$export$bbfcae392104b4c9 extends $31cf9b99c7a79e42$export$f7b5529658291013 {\n    /**\n   * Construct the interaction.\n   * @param {Actor} owner - parent actor.\n   */ constructor(owner){\n        super(owner);\n    }\n    /**\n   * @override\n   * @returns {boolean}\n   */ canEnact() {\n        return true;\n    }\n    /**\n   * @override\n   * @returns {boolean}\n   */ canReact() {\n        return false;\n    }\n    /**\n   * @param {module:players/actors~Actor} reactor\n   * @returns {Promise}\n   */ enact(reactor) {\n        const damage = $9bf960d1e43f0ba6$export$b066f38ab0e5b2dc(this.owner, reactor);\n        $31cf9b99c7a79e42$var$applyPoisonDamage(this.owner, reactor, damage);\n        return Promise.resolve();\n    }\n}\nclass $31cf9b99c7a79e42$export$eecad08565115e9c extends $31cf9b99c7a79e42$export$f7b5529658291013 {\n    /**\n   * Construct the interaction.\n   * @param {Artefact} owner - parent spell.\n   */ constructor(owner){\n        super(owner);\n    }\n    /**\n   * @override\n   * @returns {boolean}\n   */ canEnact() {\n        return false;\n    }\n    /**\n   * @override\n   * @returns {boolean}\n   */ canReact() {\n        return true;\n    }\n    /**\n   * Respond to a spell cast\n   * @param {module:players/actors~Actor} enactor\n   * @returns {Promise}\n   */ async react(enactor) {\n        const tileMap = (0, $f8633d94d0c88c58$export$2e2bcd8739ae039).getTileMap();\n        const gridPoint = tileMap.worldPointToGrid(enactor.position);\n        const range = this.owner.traits.getValueInFeetInTiles(\"RANGE\", 1);\n        const maxTargets = this.owner.traits.getInt(\"MAX_TARGETS\", 999);\n        let hitTargets = 0;\n        const affectedTiles = tileMap.getRadiatingUpAndDown(gridPoint, range);\n        for (const tile of affectedTiles){\n            if (hitTargets > maxTargets) break;\n            this.#displaySpell(tile.worldPoint);\n            tile.getOccupants().forEach((occupant)=>{\n                if (occupant.isEnemy() || occupant.isTrader()) {\n                    hitTargets++;\n                    const damage = $9bf960d1e43f0ba6$export$53864c490cc48ef4(enactor, occupant, this.owner);\n                    $31cf9b99c7a79e42$var$applyDamage(enactor, occupant, damage);\n                }\n            });\n        }\n        if (this.owner.artefactType === (0, $c8439a0aab365384$export$e451727f06f039f2).SPELL) enactor.storeManager.stash(this.owner); // spells have to be prepared again once used.\n        return Promise.resolve();\n    }\n    /**\n   * Display a spell attack at a point.\n   * @param {Point} worldPoint\n   */ #displaySpell(worldPoint) {\n        const spellType = this.owner.traits.get(\"EFFECT\");\n        (0, $ae446a5a8f069dac$export$ae52c687d6df348d)(spellType.toLowerCase(), {\n            position: worldPoint,\n            delaySecs: 0,\n            lifetimeSecs: 1\n        });\n    }\n}\nclass $31cf9b99c7a79e42$export$91e310df03ee2deb extends $31cf9b99c7a79e42$export$f7b5529658291013 {\n    /**\n   * Construct the interaction.\n   * @param {Artefact} owner - parent actor.\n   */ constructor(owner){\n        super(owner);\n    }\n    /**\n   * @override\n   * @returns {boolean}\n   */ canEnact() {\n        return false;\n    }\n    /**\n   * @override\n   * @returns {boolean}\n   */ canReact() {\n        return true;\n    }\n    /**\n   * Respond to a consume instruction\n   * @param {module:players/actors~Actor} enactor\n   * @returns {Promise}\n   */ async react(enactor) {\n        const traits = this.owner.traits;\n        const foodType = traits.get(\"TYPE\");\n        if (foodType === \"POISON\") {\n            const damage = $9bf960d1e43f0ba6$export$b066f38ab0e5b2dc(this.owner, enactor);\n            if (damage === 0) return (0, $81dd6b24526c5347$export$2e2bcd8739ae039).showOkDialog((0, $2a5626561236b7e1$export$a7357cdd1f0b0168)`MESSAGE RESISTED POISON`);\n            else if ($31cf9b99c7a79e42$var$applyPoisonDamage(this.owner, enactor, damage) <= 0) return (0, $81dd6b24526c5347$export$2e2bcd8739ae039).showOkDialog((0, $2a5626561236b7e1$export$a7357cdd1f0b0168)`MESSAGE KILLED BY POISON`);\n            else return (0, $81dd6b24526c5347$export$2e2bcd8739ae039).showOkDialog((0, $2a5626561236b7e1$export$a7357cdd1f0b0168)`MESSAGE IT'S POISON ${damage}`);\n        } else {\n            let gainHp = this.owner.traits.getInt(\"HP\", 0);\n            if (gainHp === 0) return (0, $81dd6b24526c5347$export$2e2bcd8739ae039).showOkDialog((0, $2a5626561236b7e1$export$a7357cdd1f0b0168)`MESSAGE CONSUME BUT NO HP GAIN`);\n            const enactorHp = enactor.traits.getInt(\"HP\");\n            const enactorHpMax = enactor.traits.getInt(\"HP_MAX\");\n            if (!enactorHpMax) {\n                (0, $2d5b4e7cb639ebe1$export$2e2bcd8739ae039).error(`Actor ${enactor.traits.get(\"NAME\")} has no HP_MAX set`);\n                return Promise.resolve();\n            }\n            const shortfall = enactorHpMax - enactorHp;\n            if (shortfall < 0) {\n                (0, $2d5b4e7cb639ebe1$export$2e2bcd8739ae039).error(`Actor ${enactor.traits.get(\"NAME\")} has HP higher than HP_MAX`);\n                return Promise.resolve();\n            }\n            gainHp = Math.min(shortfall, gainHp);\n            if (gainHp === 0) return (0, $81dd6b24526c5347$export$2e2bcd8739ae039).showOkDialog((0, $2a5626561236b7e1$export$a7357cdd1f0b0168)`MESSAGE CONSUME BUT ALREADY FULL HP`);\n            const finalHp = enactorHp + gainHp;\n            const message = foodType === \"POTION\" ? (0, $2a5626561236b7e1$export$a7357cdd1f0b0168)`MESSAGE IT'S A HEALTHY DRINK ${gainHp}` : (0, $2a5626561236b7e1$export$a7357cdd1f0b0168)`MESSAGE IT'S HEALTHY ${gainHp}`;\n            return (0, $81dd6b24526c5347$export$2e2bcd8739ae039).showOkDialog(message).then(()=>enactor.traits.set(\"HP\", finalHp));\n        }\n    }\n}\n\n\n\n\n\n\nconst $9e949bc7e910e09d$export$ec2f7d5cc9321319 = {\n    HERO: 0,\n    ENEMY: 1,\n    ARTEFACT: 2,\n    HIDDEN_ARTEFACT: 3,\n    TRADER: 4,\n    PROP: 5\n};\nconst $9e949bc7e910e09d$export$be204faa7b4ee90a = {\n    WANDER: \"WANDER\",\n    HUNT: \"HUNT\",\n    ORGANIC: \"ORGANIC\"\n};\nfunction $9e949bc7e910e09d$export$4a19f89b3effac(str) {\n    const type = $9e949bc7e910e09d$export$ec2f7d5cc9321319[str];\n    if (type === null || type === undefined) (0, $2d5b4e7cb639ebe1$export$2e2bcd8739ae039).error(`Unrecognised actor type: ${str}`);\n    return type;\n}\nclass $9e949bc7e910e09d$export$f73d3eb6fd876d80 extends (0, $0244e696098defc3$export$a82f6454288e7804) {\n    /** @type {module:dnd/almanacs/almanacs~AlmanacEntry} almanacEntry */ almanacEntry;\n    /** @type {number} */ maxTilesPerMove;\n    /** @type {module:utils/sprites/sprite~Sprite} */ sprite;\n    /** @type {Traits} */ traits;\n    /** @type {AbstractInteraction} */ interaction;\n    /** @type {boolean} */ alive;\n    /** True if actor is disengaging from a fight. @type {boolean} */ disengaging;\n    /** @type {string} */ description;\n    /** @type {string} */ iconImageName;\n    /** @type {ArtefactStoreManager} */ storeManager;\n    /** @type {ActorType} */ type;\n    /**\n   * Create the actor.\n   * @param {module:utils/sprites/sprite~Sprite} sprite\n   * @param {number} [type = ActorType.ENEMY] type of actor. See @link {ActorType}\n   */ constructor(sprite, type = $9e949bc7e910e09d$export$ec2f7d5cc9321319.ENEMY){\n        super();\n        this.interaction = new (0, $31cf9b99c7a79e42$export$f7b5529658291013)();\n        this.sprite = sprite;\n        this.sprite.obstacle = true;\n        this.maxTilesPerMove = 1;\n        this.alive = true;\n        this.disengaging = false;\n        this.type = type;\n        this.storeManager = new (0, $c8439a0aab365384$export$39a477c01214ccc0)(type === $9e949bc7e910e09d$export$ec2f7d5cc9321319.TRADER || type === $9e949bc7e910e09d$export$ec2f7d5cc9321319.HIDDEN_ARTEFACT, ()=>this.#updateTraitsFromStore());\n    }\n    /**\n   * Refresh DnD properties.\n   */ #updateTraitsFromStore() {\n        const items = this.storeManager.getAllEquippedArtefacts();\n        this.traits.utiliseArtefacts(items);\n    }\n    /**\n   * Test if this actor is the hero.\n   * @returns {boolean}\n   */ isHero() {\n        return this.type === $9e949bc7e910e09d$export$ec2f7d5cc9321319.HERO;\n    }\n    /**\n   * Test if this actor is an enemy.\n   * @returns {boolean}\n   */ isEnemy() {\n        return this.type === $9e949bc7e910e09d$export$ec2f7d5cc9321319.ENEMY;\n    }\n    /**\n   * Test if this actor is a trader.\n   * @returns {boolean}\n   */ isTrader() {\n        return this.type === $9e949bc7e910e09d$export$ec2f7d5cc9321319.TRADER;\n    }\n    /**\n   * Test if this actor is a hidden artefact.\n   * @returns {boolean}\n   */ isHiddenArtefact() {\n        return this.type === $9e949bc7e910e09d$export$ec2f7d5cc9321319.HIDDEN_ARTEFACT;\n    }\n    /** Set the underlying sprite visibility.\n   * @param {boolean}\n   */ set visible(value) {\n        this.sprite.visible = value;\n    }\n    /** Get the underlying sprite visibility.\n   * @returns {boolean}\n   */ get visible() {\n        return this.sprite.visible;\n    }\n    /**\n   * Get obstacle property. This comes from the underlying sprite.\n   * @param {boolean} value\n   */ get obstacle() {\n        return this.sprite.obstacle;\n    }\n    /**\n   * Set as obstacle. This sets the underlying sprite's property.\n   * @param {boolean} value\n   */ set obstacle(value) {\n        this.sprite.obstacle = value;\n    }\n    /**\n   * Get the actor's position.\n   * @returns {module:utils/geometry~Position}\n   */ get position() {\n        return this.sprite.position;\n    }\n    /**\n   * Set the actor's position.\n   * @param {module:utils/geometry~Position} value\n   */ set position(value) {\n        this.sprite.position = value;\n    }\n    /**\n   * Get the current motion.\n   * @returns {Velocity}\n   */ get velocity() {\n        return this.sprite.velocity;\n    }\n    /**\n   * Set the current Velocity. Invalid values become 0.\n   * @param {Velocity} nextVelocity\n   */ set velocity(nextVelocity) {\n        this.sprite.velocity = nextVelocity;\n    }\n    /**\n   * Get the sprite's image name.\n   * @returns {string} null if none.\n   */ getImageFilename() {\n        return this.sprite.getImageFilename();\n    }\n    /**\n   * Is this a wandering actor.\n   * @returns {boolean}\n   */ isWandering() {\n        return this?.traits.get(\"MOVE\") === $9e949bc7e910e09d$export$be204faa7b4ee90a.WANDER;\n    }\n    /**\n   * Is this an organic actor.\n   * @returns {boolean}\n   */ isOrganic() {\n        return this?.traits.get(\"MOVE\") === $9e949bc7e910e09d$export$be204faa7b4ee90a.ORGANIC;\n    }\n    /**\n   * Is this a prop.\n   * @returns {boolean}\n   */ isProp() {\n        return this?.type === $9e949bc7e910e09d$export$ec2f7d5cc9321319.PROP;\n    }\n    /**\n   * Get the move type\n   * @returns {MoveTypeValue}\n   */ get moveType() {\n        return this?.traits.get(\"MOVE\");\n    }\n    /**\n   * Test if the actor will interact.\n   * @returns {boolean}\n   */ willInteract() {\n        if (!this.interaction) return false;\n        if (this.isWandering()) return $d9f2d68cf2746c78$export$b9d1fef74bbc4c0c(6) > 3;\n        return true;\n    }\n    /**\n   * Is the actor passable?\n   * @param {Actor} otherActor\n   * @returns {boolean}\n   */ isPassableByActor(otherActor) {\n        if (otherActor.isHero() && this.isHiddenArtefact()) return true;\n        else return !this.alive && !this.isProp() || !this.obstacle;\n    }\n    /**\n   * Can it share a tile location with another actor?\n   * @param {Actor} otherActor\n   * @returns {boolean}\n   */ canShareLocationWithActor(otherActor) {\n        if (this.isOrganic()) return !otherActor.isOrganic() && !otherActor.isTrader(); // don't kill off traders.\n        else if (this.isHiddenArtefact()) return otherActor.isHero();\n        else if (!this.alive && otherActor.isHero()) return true;\n        else return !this.obstacle;\n    }\n    /**\n   * Call update on the underlying sprite\n   * @param {number} deltaSeconds\n   */ update(deltaSeconds) {\n        this.sprite.update(deltaSeconds);\n    }\n    /**\n   * Handle the click but change the point to the sprite's position\n   */ actionClick(pointUnused) {\n        super.actionClick(this.sprite.position);\n    }\n    /**\n   * Handle the click but change the point to the sprite's position\n   */ actionContextClick(pointUnused) {\n        super.actionContextClick(this.sprite.position);\n    }\n    /**\n   * Handle the pointer up event but change the point to the sprite's position\n   */ actionPointerUp(pointUnused) {\n        super.actionPointerUp(this.sprite.position);\n    }\n    /**\n   * Handle the pointer down event but change the point to the sprite's position\n   */ actionPointerDown(pointUnused) {\n        super.actionPointerDown(this.sprite.position);\n    }\n}\n\n\n\n\n\n\n\n/**\n * @type {Map<string, Sprite>}\n */ const $e3583859a0cae8b2$var$actors = new Map();\n/** @type {boolean} */ let $e3583859a0cae8b2$var$visible = false;\n/**\n * Add a button to the hud. If two callbacks are provided, an AnimatedImage\n * is required with two frames.\n * @param {SpriteBitmap | AnimatedImage} image\n * @param {module:ui/interactions~UiClickCallback} callbackOn\n * @param {module:ui/interactions~UiClickCallback} callbackOff\n * @returns {Actor}\n */ function $e3583859a0cae8b2$var$addButton(image, callbackOn, callbackOff) {\n    const actor = new (0, $9e949bc7e910e09d$export$f73d3eb6fd876d80)(new (0, $5b82fcc8e5572650$export$3075603db8e6204c)({\n        renderer: new (0, $f1adbd10d5a753d6$export$c1626e6e036a584)((0, $a1820c190f7a8b2e$export$2e2bcd8739ae039).getContext2D(), image)\n    }));\n    $e3583859a0cae8b2$var$actors.set(actor, actor);\n    actor.setOnClick(()=>{\n        if (!callbackOff) callbackOn();\n        else if (image.getCurrentIndex() === 0) {\n            image.setCurrentIndex(1);\n            callbackOn();\n        } else {\n            image.setCurrentIndex(0);\n            callbackOff();\n        }\n    });\n    image.setCurrentIndex(0);\n    return actor;\n}\n/**\n * Add a momentary button to the hud. If two callbacks are provided, an AnimatedImage\n * is required with two frames.\n * @param {SpriteBitmap | AnimatedImage} image\n * @param {module:ui/interactions~UiClickCallback} callbackOn\n * @param {module:ui/interactions~UiClickCallback} callbackOff\n * @returns {Actor}\n */ function $e3583859a0cae8b2$var$addMomentaryButton(image, callbackOn, callbackOff) {\n    const actor = new (0, $9e949bc7e910e09d$export$f73d3eb6fd876d80)(new (0, $5b82fcc8e5572650$export$3075603db8e6204c)({\n        renderer: new (0, $f1adbd10d5a753d6$export$c1626e6e036a584)((0, $a1820c190f7a8b2e$export$2e2bcd8739ae039).getContext2D(), image)\n    }));\n    $e3583859a0cae8b2$var$actors.set(actor, actor);\n    actor.setOnPointerDown(()=>{\n        image.setCurrentIndex(1);\n        callbackOn?.();\n    });\n    actor.setOnPointerUp(()=>{\n        image.setCurrentIndex(0);\n        callbackOff?.();\n    });\n    return actor;\n}\n/**\n * Remove sprite from the hud.\n * @param {module:utils/sprites/sprite~Sprite}\n */ function $e3583859a0cae8b2$var$removeButton(target) {\n    $e3583859a0cae8b2$var$actors.delete(target);\n}\n/**\n * Clear the HUD\n */ function $e3583859a0cae8b2$var$clear() {\n    $e3583859a0cae8b2$var$actors.clear();\n}\n/**\n * Update the world. This calls the update methods of the tile map and all sprites/\n * @param {number} deltaSeconds\n */ function $e3583859a0cae8b2$var$update(deltaSeconds) {\n    if (!$e3583859a0cae8b2$var$visible) return;\n    $e3583859a0cae8b2$var$actors.forEach((sprite)=>{\n        const uiPos = (0, $90999bd6b14cd690$export$13807d9ee5a34a42).copy(sprite.position);\n        sprite.position = (0, $a1820c190f7a8b2e$export$2e2bcd8739ae039).glassPositionToWorld(sprite.position);\n        sprite.update(deltaSeconds);\n        sprite.position = uiPos;\n    });\n}\n/** Debug function. */ function $e3583859a0cae8b2$var$borderHUD() {\n    const rect = (0, $a1820c190f7a8b2e$export$2e2bcd8739ae039).getVisibleCanvasRect();\n    const context = (0, $a1820c190f7a8b2e$export$2e2bcd8739ae039).getContext2D();\n    context.strokeStyle = \"green\";\n    context.lineWidth = 4;\n    (0, $a1820c190f7a8b2e$export$2e2bcd8739ae039).getContext2D().strokeRect(rect.x + 5, rect.y + 5, rect.width - 10, rect.height - 10);\n}\n/**\n * Check if the click is in a actor.\n * @param {module:ui/interactions~MappedPositions} positions - canvas and world positions\n * @param {Actor} actor\n */ function $e3583859a0cae8b2$var$isHittingActor(positions, actor) {\n    const actorCanvasPos = (0, $a1820c190f7a8b2e$export$2e2bcd8739ae039).glassPositionToWorld(actor.position);\n    let boundingBox = actor.sprite.getBoundingBox();\n    const canvasBox = new (0, $90999bd6b14cd690$export$4617fb02663045ef)(actorCanvasPos.x - boundingBox.width / 2, actorCanvasPos.y - boundingBox.height / 2, boundingBox.width, boundingBox.height);\n    return canvasBox.containsCoordinate(positions.world.x, positions.world.y);\n}\n/**\n * Resolve a ui click\n * @param {module:ui/interactions~MappedPositions} positions - click in canvas and world coordinates.\n * @returns {boolean} true if resolved.\n */ function $e3583859a0cae8b2$var$resolveClick(positions) {\n    if (!$e3583859a0cae8b2$var$visible) return false;\n    for (const [keyUnused, actor] of $e3583859a0cae8b2$var$actors)if ($e3583859a0cae8b2$var$isHittingActor(positions, actor)) {\n        actor.actionClick(actor, positions.canvas);\n        return true;\n    }\n    return false;\n}\n/**\n * Resolve a pointer down\n * @param {module:ui/interactions~MappedPositions} positions - click in canvas and world coordinates.\n * @returns {boolean} true if resolved.\n */ function $e3583859a0cae8b2$var$resolvePointerDown(positions) {\n    if (!$e3583859a0cae8b2$var$visible) return false;\n    if (!$e3583859a0cae8b2$var$visible) return false;\n    for (const [keyUnused, actor] of $e3583859a0cae8b2$var$actors)if ($e3583859a0cae8b2$var$isHittingActor(positions, actor)) {\n        actor.actionPointerDown(actor, positions.canvas);\n        return true;\n    }\n    return false;\n}\n/**\n * Resolve a ui pointer up event\n * @param {module:ui/interactions~MappedPositions} positions - click in canvas and world coordinates.\n * @returns {boolean} true if resolved.\n */ function $e3583859a0cae8b2$var$resolvePointerUp(positions) {\n    if (!$e3583859a0cae8b2$var$visible) return false;\n    if (!$e3583859a0cae8b2$var$visible) return false;\n    for (const [keyUnused, actor] of $e3583859a0cae8b2$var$actors)if ($e3583859a0cae8b2$var$isHittingActor(positions, actor)) {\n        actor.actionPointerUp(actor, positions.canvas);\n        return true;\n    }\n    return false;\n}\n/**\n * Resolve a context menu event.\n * @param {module:ui/interactions~MappedPositions} positions - click in canvas and world coordinates.\n * @returns {boolean} true if resolved.\n */ function $e3583859a0cae8b2$var$resolveContextMenu(positionsUnused) {\n    return false;\n}\n/**\n * Resolve a cancel event. For the HUD, a cancel event is treated the same as a pointer\n * up event.\n * @param {module:ui/interactions~MappedPositions} positions - click in canvas and world coordinates.\n * @returns {boolean} true if resolved.\n */ function $e3583859a0cae8b2$var$resolvePointerCancel(positions) {\n    return $e3583859a0cae8b2$var$resolvePointerUp(positions);\n}\n/**\n * Set the visibility of the HUD.\n * @param {boolean} visibility - true to show.\n */ function $e3583859a0cae8b2$var$setVisible(visibility) {\n    $e3583859a0cae8b2$var$visible = visibility;\n}\n/**\n * HUD object\n */ const $e3583859a0cae8b2$var$HUD = {\n    addButton: $e3583859a0cae8b2$var$addButton,\n    addMomentaryButton: $e3583859a0cae8b2$var$addMomentaryButton,\n    clear: $e3583859a0cae8b2$var$clear,\n    removeButton: $e3583859a0cae8b2$var$removeButton,\n    update: $e3583859a0cae8b2$var$update,\n    resolvePointerCancel: $e3583859a0cae8b2$var$resolvePointerCancel,\n    resolveClick: $e3583859a0cae8b2$var$resolveClick,\n    resolveContextMenu: $e3583859a0cae8b2$var$resolveContextMenu,\n    resolvePointerDown: $e3583859a0cae8b2$var$resolvePointerDown,\n    resolvePointerUp: $e3583859a0cae8b2$var$resolvePointerUp,\n    setVisible: $e3583859a0cae8b2$var$setVisible\n};\nvar $e3583859a0cae8b2$export$2e2bcd8739ae039 = $e3583859a0cae8b2$var$HUD;\n\n\n/**\n * @file Support for emojis, especially as sprites.\n *\n * @module utils/text/emojis\n */ /**\n * License {@link https://opensource.org/license/mit/|MIT}\n *\n * Copyright 2024 Steve Butler\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the “Software”), to deal in\n * the Software without restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n * Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */ \nconst $2b83232840d61fcb$export$57244dfe9a4da758 = {\n    GRINNING: \"\\uD83D\\uDE00\",\n    SANTA: \"\\uD83C\\uDF85\",\n    SHAKING: \"\\uD83E\\uDEE8\"\n};\nfunction $2b83232840d61fcb$export$9d534e3026b35ff(context) {\n    let fallbackIndex = 0;\n    for(const key in $2b83232840d61fcb$export$57244dfe9a4da758){\n        const metrics = context.measureText($2b83232840d61fcb$export$57244dfe9a4da758[key]);\n        const height = metrics.fontBoundingBoxAscent + metrics.fontBoundingBoxDescent;\n        const centreToBaseLine = 0.5 * height - metrics.fontBoundingBoxDescent;\n        context.fillText($2b83232840d61fcb$export$57244dfe9a4da758[key], -0.5 * metrics.width, centreToBaseLine);\n        const alphaAtCentre = context.getImageData(0, 0, 1, 1).data[3];\n        if (alphaAtCentre <= 0) {\n            (0, $2d5b4e7cb639ebe1$export$2e2bcd8739ae039).debug(`Emoji ${key} not supported.`);\n            $2b83232840d61fcb$export$57244dfe9a4da758[key] = `[${fallbackIndex++}]`;\n        }\n        context.clearRect(0, 0, metrics.width, height);\n    }\n}\n\n\n\n\n\n\n/**\n * @file Automatic scene generator\n *\n * @module scriptReaders/autoSceneList\n */ /**\n * license {@link https://opensource.org/license/mit/|MIT}\n * Copyright 2024 Steve Butler (henspace.com).\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the “Software”), to deal in\n * the Software without restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n * Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */ \n\n\n\n/**\n * @file Random room generator\n *\n * @module utils/tileMaps/roomGenerator\n */ /**\n * License {@link https://opensource.org/license/mit/|MIT}\n *\n * Copyright 2024 Steve Butler (henspace.com).\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the “Software”), to deal in\n * the Software without restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n * Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */ \n\n\n\nclass $ff98e45c12875199$export$46f5471185d8bc9e {\n    #maxCols;\n    #maxRows;\n    #maxRoomCols;\n    #maxRoomRows;\n    #dungeon;\n    /**\n   *\n   * @param {Object} options\n   * @param {number} options.minCols\n   * @param {number} options.minRows\n   * @param {number} options.maxCols\n   * @param {number} options.maxRows\n   * @param {number} options.maxRoomWidth\n   * @param {number} options.maxRoomheight\n   */ constructor(options){\n        this.#maxCols = $05d58a132d6b5767$export$75c671db1a13cf5f(options.minCols, options.maxCols);\n        this.#maxRows = $05d58a132d6b5767$export$75c671db1a13cf5f(options.minRows, options.maxRows);\n        this.#maxRoomCols = options.maxRoomCols;\n        this.#maxRoomRows = options.maxRoomRows;\n    }\n    /**\n   * Get a random wall char.\n   * @param {number} [qty = 1]\n   * @returns {string}\n   */ #getWallChr(qty = 1) {\n        let result = \"\";\n        while(qty-- > 0)result += $05d58a132d6b5767$export$a885de3766ef0b4c((0, $aa430e5af6097d50$export$1b3c5bcd5a8a9304).WALL);\n        return result;\n    }\n    /**\n   * Get a random ground char.\n   * @param {number} [qty = 1]\n   * @returns {string}\n   */ #getFloorChr(qty = 1) {\n        let result = \"\";\n        while(qty-- > 0)result += $05d58a132d6b5767$export$a885de3766ef0b4c((0, $aa430e5af6097d50$export$1b3c5bcd5a8a9304).GROUND);\n        return result;\n    }\n    /**\n   * Get a random void char.\n   * @param {number} [qty = 1]\n   * @returns {string}\n   */ #getLandChr(qty = 1) {\n        let result = \"\";\n        while(qty-- > 0)result += $05d58a132d6b5767$export$a885de3766ef0b4c((0, $aa430e5af6097d50$export$1b3c5bcd5a8a9304).VOID);\n        return result;\n    }\n    /**\n   * Get a random door in char.\n   * @param {number} [qty = 1]\n   * @returns {string}\n   */ #getDoorInChr(qty = 1) {\n        let result = \"\";\n        while(qty-- > 0)result += $05d58a132d6b5767$export$a885de3766ef0b4c((0, $aa430e5af6097d50$export$1b3c5bcd5a8a9304).DOOR_IN);\n        return result;\n    }\n    /**\n   * Get a random door out char.\n   * @param {number} [qty = 1]\n   * @returns {string}\n   */ #getDoorOutChr(qty = 1) {\n        let result = \"\";\n        while(qty-- > 0)result += $05d58a132d6b5767$export$a885de3766ef0b4c((0, $aa430e5af6097d50$export$1b3c5bcd5a8a9304).DOOR_OUT);\n        return result;\n    }\n    /** Test is a wall char.\n   * @param {string} char\n   * @returns {boolean}\n   */ #isWallChr(chr) {\n        return (0, $aa430e5af6097d50$export$1b3c5bcd5a8a9304).WALL.includes(chr);\n    }\n    /** Test is a floor char.\n   * @param {string} char\n   * @returns {boolean}\n   */ #isFloorChr(chr) {\n        return (0, $aa430e5af6097d50$export$1b3c5bcd5a8a9304).GROUND.includes(chr);\n    }\n    /** Test is a land char.\n   * @param {string} char\n   * @returns {boolean}\n   */ #isLandChr(chr) {\n        return (0, $aa430e5af6097d50$export$1b3c5bcd5a8a9304).VOID.includes(chr);\n    }\n    /** Test is a door in char.\n   * @param {string} char\n   * @returns {boolean}\n   */ #isDoorInChr(chr) {\n        return (0, $aa430e5af6097d50$export$1b3c5bcd5a8a9304).DOOR_IN.includes(chr);\n    }\n    /** Test is a door out char.\n   * @param {string} char\n   * @returns {boolean}\n   */ #isDoorOutChr(chr) {\n        return (0, $aa430e5af6097d50$export$1b3c5bcd5a8a9304).DOOR_OUT.includes(chr);\n    }\n    /**\n   * Generate a room.\n   * @returns {String[]}\n   */ generate() {\n        const minRoomCols = 4;\n        const minRoomRows = 4;\n        this.#dungeon = [];\n        let lastLeftLandCols = 0;\n        let lastRoomCols = this.#maxCols;\n        while(this.#dungeon.length < this.#maxRows - minRoomRows){\n            const maxLeftLand = lastLeftLandCols + lastRoomCols - minRoomCols - 2;\n            const leftLandCols = maxLeftLand > 0 ? $05d58a132d6b5767$export$b141de964f0a90c1(0, maxLeftLand) : 0;\n            const reqdMinRoomWidth = Math.max(lastLeftLandCols - leftLandCols + minRoomCols, minRoomCols);\n            let reqdMaxRoomWidth = Math.min(this.#maxRoomCols, this.#maxCols - leftLandCols);\n            const roomCols = reqdMaxRoomWidth > reqdMinRoomWidth ? $05d58a132d6b5767$export$b141de964f0a90c1(reqdMinRoomWidth, reqdMaxRoomWidth) : reqdMinRoomWidth;\n            const rightLandCols = this.#maxCols - leftLandCols - roomCols;\n            const maxHeight = Math.min(this.#maxRoomRows, this.#maxRows - this.#dungeon.length);\n            const roomRows = $05d58a132d6b5767$export$b141de964f0a90c1(minRoomRows, maxHeight);\n            this.#createRoom(leftLandCols, roomCols, rightLandCols, roomRows);\n            lastLeftLandCols = leftLandCols;\n            lastRoomCols = roomCols;\n        }\n        this.#removeInternalWalls();\n        this.#locateDoors();\n        return this.getMatrixAsStrings();\n    }\n    /**\n   * Convert matrix to a plan design.\n   * @returns {string[]}\n   */ getMatrixAsStrings() {\n        return this.#dungeon.map((columns)=>columns.join(\"\"));\n    }\n    /**\n   *\n   * @param {number} leftLandCols\n   * @param {number} roomCols\n   * @param {number} rightLandCols\n   * @param {number} numberOfRows\n   */ #createRoom(leftLandCols, roomCols, rightLandCols, numberOfRows) {\n        (0, $2d5b4e7cb639ebe1$export$2e2bcd8739ae039).log(`Create room ${leftLandCols} ${roomCols} ${rightLandCols} ${numberOfRows}`);\n        let columns = \"\";\n        columns += this.#getLandChr(leftLandCols);\n        columns += this.#getWallChr(roomCols);\n        columns += this.#getLandChr(rightLandCols);\n        this.#dungeon.push(columns.split(\"\"));\n        for(let internalRow = 0; internalRow < numberOfRows - 2; internalRow++){\n            columns = \"\";\n            columns += this.#getLandChr(leftLandCols);\n            columns += this.#getWallChr(1);\n            columns += this.#getFloorChr(roomCols - 2);\n            columns += this.#getWallChr(1);\n            columns += this.#getLandChr(rightLandCols);\n            this.#dungeon.push(columns.split(\"\"));\n        }\n        columns = \"\";\n        columns += this.#getLandChr(leftLandCols);\n        columns += this.#getWallChr(roomCols);\n        columns += this.#getLandChr(rightLandCols);\n        this.#dungeon.push(columns.split(\"\"));\n    }\n    /** Go through the dungeon removing internal walls. */ #removeInternalWalls() {\n        for(let row = 1; row < this.#dungeon.length - 1; row++){\n            for(let col = 1; col < this.#dungeon[0].length - 2; col++)if (this.#isWallChr(this.#dungeon[row][col]) && this.#isWallChr(this.#dungeon[row + 1][col]) && this.#isFloorChr(this.#dungeon[row - 1][col]) && this.#isFloorChr(this.#dungeon[row + 2][col])) {\n                this.#dungeon[row][col] = this.#getFloorChr(1);\n                this.#dungeon[row + 1][col] = this.#getFloorChr(1);\n            }\n        }\n    }\n    /**\n   * Is this a vertical wall where a door could go.\n   * @param {module:utils/arrays/arrayManip~Surrounds} surrounds\n   * @returns {boolean}\n   */ #isVerticalWall(surrounds) {\n        return this.#isWallChr(surrounds.above) && this.#isWallChr(surrounds.centre) && this.#isWallChr(surrounds.below);\n    }\n    /**\n   * Is this a Horizontal wall where a door could go.\n   * @param {module:utils/arrays/arrayManip~Surrounds} surrounds\n   * @returns {boolean}\n   */ #isHorizontalWall(surrounds) {\n        return this.#isWallChr(surrounds.left) && this.#isWallChr(surrounds.centre) && this.#isWallChr(surrounds.right);\n    }\n    /**\n   * Position the doors.\n   */ #locateDoors() {\n        const possibleLocations = [];\n        this.#dungeon.forEach((rowValue, rowIndex)=>rowValue.forEach((colValue, colIndex)=>{\n                const surrounds = $27af28d7e434b74b$export$7c548b14ef6e7713(this.#dungeon, rowIndex, colIndex);\n                if (this.#isHorizontalWall(surrounds) || this.#isVerticalWall(surrounds)) possibleLocations.push({\n                    row: rowIndex,\n                    col: colIndex\n                });\n            }));\n        const randomLocations = $27af28d7e434b74b$export$f3448602f079b6d0(possibleLocations);\n        let location = randomLocations[0];\n        this.#dungeon[location.row][location.col] = this.#getDoorInChr();\n        location = randomLocations[1];\n        this.#dungeon[location.row][location.col] = this.#getDoorOutChr();\n    }\n}\n\n\n\n\n/** @type {module:players/actors~Actor} */ let $5cdb299a40f2118a$var$heroActor;\nconst $5cdb299a40f2118a$export$baa1f113a47bd01a = {\n    EASY: 0.125,\n    MEDIUM: 0.25,\n    HARD: 0.5\n};\n/**\n * Create a pool of enemies based on the dungeon rating.\n * @param {DungeonChallengeValue} dungeonRating\n * @returns {module:almanacs/almanacs~Almanac}\n */ function $5cdb299a40f2118a$var$createEnemyPoolAlmanac(dungeonRating) {\n    const level = $5cdb299a40f2118a$var$heroActor?.traits.getCharacterLevel() ?? 1;\n    const maxMonsterChallenge = dungeonRating * level + 0.001; // prevent float issues.\n    return (0, $4d7b11e4136f6d93$export$62947dea9802b3b0).getAlmanac(\"ENEMIES\").filter((entry)=>entry.challengeRating <= maxMonsterChallenge);\n}\n/**\n * @implements {module:gameManagement/sceneManager~SceneList}\n */ class $5cdb299a40f2118a$var$AutoSceneList {\n    /** @type {number} */ #index;\n    /** @type {SceneDefinition} */ #sceneDefn;\n    /**\n   */ constructor(){\n        this.reset();\n    }\n    /**\n   * @returns {number}\n   */ getIndex() {\n        return this.#index;\n    }\n    /**\n   * Get the next scene.\n   * @returns {SceneDefinition}\n   */ getNext() {\n        this.#index++;\n        if (this.#index === 0) $5cdb299a40f2118a$var$heroActor = null; // always a new actor at level 0\n        this.#buildScene();\n        return this.#sceneDefn;\n    }\n    /**\n   * Test to see if there is another scene.\n   * @returns {boolean}\n   */ hasNext() {\n        return true;\n    }\n    /**\n   * Reset\n   */ reset() {\n        this.#index = -1;\n    }\n    /**\n   * Restore a saved game. Game are saved when a dungeon is exited so the call should\n   * be to the next scene.\n   * @param {number} index\n   * @param {Actor} hero\n   */ restore(index, hero) {\n        $5cdb299a40f2118a$var$heroActor = hero;\n        this.#index = index;\n    }\n    /** Build a scene */ #buildScene() {\n        this.#sceneDefn = new (0, $6664788cb4fc34b5$export$2a8e6ebcf5b5c91)();\n        this.#setHero();\n        this.#addIntro();\n        this.#addEnemies();\n        this.#addTraders();\n        this.#addArtefacts();\n        this.#addMap();\n    }\n    /**\n   * Add scene introduction.\n   */ #addIntro() {\n        this.#sceneDefn.intro = (0, $2a5626561236b7e1$export$a7357cdd1f0b0168)`MESSAGE ENTER LEVEL ${this.#index}`;\n    }\n    /**\n   * Add hero to scene.\n   */ #setHero() {\n        if (!$5cdb299a40f2118a$var$heroActor) {\n            const almanacEntry = (0, $4d7b11e4136f6d93$export$62947dea9802b3b0).findById(\"hero\", [\n                \"HEROES\"\n            ]);\n            if (!almanacEntry) throw new Error(`Could not find hero in almanacs.`);\n            $5cdb299a40f2118a$var$heroActor = (0, $ba30ae746a7f0f6d$export$260a0189ba712b47)(almanacEntry);\n        }\n        this.#sceneDefn.hero = $5cdb299a40f2118a$var$heroActor;\n    }\n    /**\n   * Add enemies to scene.\n   * @param {DungeonChallengeValue} [challenge = DungeonChallenge.MEDIUM]\n   */ #addEnemies(challenge = $5cdb299a40f2118a$export$baa1f113a47bd01a.MEDIUM) {\n        const maxEnemies = 8;\n        const enemyPoolAlmanac = $5cdb299a40f2118a$var$createEnemyPoolAlmanac(challenge);\n        let totalCr = 0;\n        let totalEnemies = 0;\n        while(totalCr < challenge && totalEnemies < maxEnemies){\n            const enemy = enemyPoolAlmanac.getRandomEntry();\n            totalCr += enemy.challengeRating;\n            totalEnemies++;\n            this.#sceneDefn.enemies.push(enemy);\n        }\n    }\n    /**\n   * Add enemies to scene.\n   */ #addTraders() {\n        const totalTraders = 1;\n        for(let traderIndex = 0; traderIndex < totalTraders; traderIndex++){\n            const almanacEntry = (0, $4d7b11e4136f6d93$export$62947dea9802b3b0).getRandomEntry(\"TRADERS\", (entry)=>entry.minLevel <= this.#index);\n            this.#sceneDefn.enemies.push(almanacEntry);\n        }\n    }\n    /**\n   * Add artefacts to scene.\n   */ #addArtefacts() {\n        const pooledAlmanac = (0, $4d7b11e4136f6d93$export$62947dea9802b3b0).getPooledAlmanac([\n            \"ARTEFACTS\",\n            \"MAGIC\",\n            \"MONEY\",\n            \"WEAPONS\"\n        ], (entry)=>entry.minLevel <= this.#index);\n        let totalArtefacts = $05d58a132d6b5767$export$75c671db1a13cf5f(10, 10);\n        while(totalArtefacts-- > 0){\n            const almanacEntry = pooledAlmanac.getRandomEntry();\n            if (almanacEntry) this.#sceneDefn.artefacts.push(almanacEntry);\n        }\n    }\n    /** Add a random map */ #addMap() {\n        const creator = new (0, $ff98e45c12875199$export$46f5471185d8bc9e)({\n            minCols: 12,\n            maxCols: 40,\n            maxRoomCols: 10,\n            minRows: 12,\n            maxRows: 40,\n            maxRoomRows: 6\n        });\n        this.#sceneDefn.mapDesign = creator.generate();\n        (0, $2d5b4e7cb639ebe1$export$2e2bcd8739ae039).debug(\"Random map\");\n        this.#sceneDefn.mapDesign.forEach((line)=>(0, $2d5b4e7cb639ebe1$export$2e2bcd8739ae039).debug(line));\n    }\n}\nfunction $5cdb299a40f2118a$export$e41f9be9fd588ed(scriptUnused) {\n    return new $5cdb299a40f2118a$var$AutoSceneList();\n}\n\n\n\n\n\n/**\n * @file Functions to allow touch and mouse handling.\n *\n * @module utils/dom/pointerActions\n */ /**\n * License {@link https://opensource.org/license/mit/|MIT}\n *\n * Copyright 2024 Steve Butler\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the “Software”), to deal in\n * the Software without restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n * Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */ \n\nconst $f6529945ae220c94$export$90ded0e426ce21 = \"custom-pointer-down-event\";\nconst $f6529945ae220c94$export$3853e404217e8f25 = \"custom-pointer-up-event\";\nconst $f6529945ae220c94$export$f1ed6970fd95c8d6 = \"custom-pointer-cancel-event\";\nconst $f6529945ae220c94$export$a5ec1de9afad15ae = \"custom-click-event\";\nconst $f6529945ae220c94$export$fc5c5be4a666ab48 = \"custom-conext-click-event\";\nconst $f6529945ae220c94$export$d69198a72de4964d = \"custom-pointer-drag-event\";\nconst $f6529945ae220c94$export$3ddad254732bb8a8 = \"custom-pointer-drag-end-event\";\n/** Minimum movement that constitutes a drag. */ const $f6529945ae220c94$var$MIN_DRAG_MOVEMENT = 10;\n/** @enum {number} */ const $f6529945ae220c94$var$EventSource = {\n    MOUSE: 0,\n    TOUCH: 1\n};\n/**\n * @typedef {Object} CustomEventDetail\n * @property {number} x\n * @property {number} y\n * @property {number} dx\n * @property {number} dy\n */ /**\n * @typedef {Object} DragData\n * @param {ELement} element\n * @property {boolean} actionStarted\n * @property {boolean} dragging\n * @property {number} lastX\n * @property {number} lastY\n * @property {number} startX\n * @property {number} startY\n * @property {number} x\n * @property {number} y\n * @property {Point} lastTouchStartPoint\n * @property {boolean} suppressClickEvent\n */ /**\n * Dispatch an event. Detail is dispatched in the event detail.\n * @param {Element} element\n * @param {string} eventName\n * @param {Object} detail\n */ function $f6529945ae220c94$var$dispatchEvent(element, eventName, detail) {\n    const event = new CustomEvent(eventName, {\n        detail: detail\n    });\n    element.dispatchEvent(event);\n}\n/**\n * Gets offsetX and offsetY equivalent to a MouseEvent\n * @param {TouchEvent} event\n * @returns {Object}\n */ function $f6529945ae220c94$var$getOffsetFromTouch(event) {\n    const rect = event.target.getBoundingClientRect();\n    return {\n        x: event.touches[0].pageX - rect.left,\n        y: event.touches[0].pageY - rect.top\n    };\n}\n/**\n * Process the start of the action.\n * @param {number} eventSource\n * @param {number} x - x coordinate relative to target\n * @param {number} y - y coordinate relative to target\n * @param {DragData} data\n */ function $f6529945ae220c94$var$processStartAction(eventSource, x, y, data) {\n    data.actionStarted = true;\n    data.dragging = false;\n    data.distance = 0;\n    data.lastX = x;\n    data.lastY = y;\n    data.startX = x;\n    data.startY = y;\n    $f6529945ae220c94$var$dispatchEvent(data.element, $f6529945ae220c94$export$90ded0e426ce21, {\n        x: x,\n        y: y\n    });\n}\n/**\n * Process the start of the action.\n * @param {number} eventSource\n * @param {number} x - x coordinate relative to target\n * @param {number} y - y coordinate relative to target\n * @param {DragData} data\n */ function $f6529945ae220c94$var$processEndAction(eventSource, x, y, data) {\n    const eventName = data.dragging ? $f6529945ae220c94$export$3ddad254732bb8a8 : $f6529945ae220c94$export$3853e404217e8f25;\n    data.actionStarted = false;\n    data.dragging = false;\n    data.distance = 0;\n    data.lastX = x;\n    data.lastY = y;\n    data.startX = x;\n    data.startY = y;\n    $f6529945ae220c94$var$dispatchEvent(data.element, eventName, {\n        x: x,\n        y: y\n    });\n}\n/**\n * Process the start of the action.\n * @param {number} eventSource\n * @param {number} x - x coordinate relative to target\n * @param {number} y - y coordinate relative to target\n * @param {DragData} data\n */ function $f6529945ae220c94$var$processCancelAction(eventSource, x, y, data) {\n    const eventName = $f6529945ae220c94$export$f1ed6970fd95c8d6;\n    data.actionStarted = false;\n    data.dragging = false;\n    data.distance = 0;\n    data.lastX = x;\n    data.lastY = y;\n    data.startX = x;\n    data.startY = y;\n    $f6529945ae220c94$var$dispatchEvent(data.element, eventName, {\n        x: x,\n        y: y\n    });\n}\n/**\n * Process the start of the action.\n * @param {number} eventSource\n * @param {number} x - x coordinate relative to target\n * @param {number} y - y coordinate relative to target\n * @param {DragData} data\n * @return {CustomEvent} null if no event should be dispatched.\n */ function $f6529945ae220c94$var$processMoveAction(eventSource, x, y, data) {\n    const eventName = $f6529945ae220c94$export$d69198a72de4964d;\n    let dx = x - data.lastX;\n    let dy = y - data.lastY;\n    data.lastX = x;\n    data.lastY = y;\n    if (data.dragging) {\n        const event = new CustomEvent(eventName, {\n            detail: {\n                x: x,\n                y: y,\n                dx: dx,\n                dy: dy\n            }\n        });\n        data.element.dispatchEvent(event);\n    } else if (Math.abs(x - data.startX) > $f6529945ae220c94$var$MIN_DRAG_MOVEMENT || Math.abs(y - data.startY) > $f6529945ae220c94$var$MIN_DRAG_MOVEMENT) {\n        data.dragging = true;\n        data.suppressClickEvent = true;\n    }\n}\nfunction $f6529945ae220c94$export$2b4524682ad19724(element) {\n    let dragData = {\n        element: element,\n        actionStarted: false,\n        dragging: false,\n        x: 0,\n        y: 0,\n        lastTouchStartPoint: null,\n        suppressClickEvent: false\n    };\n    element.addEventListener(\"mousedown\", (event)=>{\n        return $f6529945ae220c94$var$processStartAction($f6529945ae220c94$var$EventSource.MOUSE, event.offsetX, event.offsetY, dragData);\n    }, {\n        passive: true\n    });\n    element.addEventListener(\"mouseup\", (event)=>{\n        return $f6529945ae220c94$var$processEndAction($f6529945ae220c94$var$EventSource.MOUSE, event.offsetX, event.offsetY, dragData);\n    }, {\n        passive: true\n    });\n    element.addEventListener(\"mousemove\", (event)=>{\n        if (event.buttons & 1) $f6529945ae220c94$var$processMoveAction($f6529945ae220c94$var$EventSource.MOUSE, event.offsetX, event.offsetY, dragData);\n    }, {\n        passive: true\n    });\n    element.addEventListener(\"touchstart\", (event)=>{\n        if (event.changedTouches.length === 1) {\n            const offset = $f6529945ae220c94$var$getOffsetFromTouch(event);\n            dragData.lastTouchStartPoint = new (0, $90999bd6b14cd690$export$baf26146a414f24a)(offset.x, offset.y);\n            $f6529945ae220c94$var$processStartAction($f6529945ae220c94$var$EventSource.TOUCH, offset.x, offset.y, dragData);\n        }\n    }, {\n        passive: true\n    });\n    element.addEventListener(\"touchend\", (event)=>{\n        if (event.changedTouches.length === 1) $f6529945ae220c94$var$processEndAction($f6529945ae220c94$var$EventSource.TOUCH, dragData.lastTouchStartPoint?.x, dragData.lastTouchStartPoint?.y, dragData);\n        dragData.lastTouchStartPoint = null;\n        dragData.suppressClickEvent = false;\n    }, {\n        passive: true\n    });\n    element.addEventListener(\"touchmove\", (event)=>{\n        if (event.changedTouches.length === 1) {\n            const offset = $f6529945ae220c94$var$getOffsetFromTouch(event);\n            $f6529945ae220c94$var$processMoveAction($f6529945ae220c94$var$EventSource.TOUCH, offset.x, offset.y, dragData);\n            dragData.suppressClickEvent = true;\n        }\n    }, {\n        passive: true\n    });\n    element.addEventListener(\"touchcancel\", (event)=>{\n        $f6529945ae220c94$var$processCancelAction($f6529945ae220c94$var$EventSource.TOUCH, dragData.lastTouchStartPoint?.x, dragData.lastTouchStartPoint?.y, dragData);\n        dragData.lastTouchStartPoint = null;\n    }, {\n        passive: true\n    });\n    element.addEventListener(\"click\", (event)=>{\n        (0, $2d5b4e7cb639ebe1$export$2e2bcd8739ae039).debug(\"click\");\n        if (!dragData.suppressClickEvent) $f6529945ae220c94$var$dispatchEvent(element, $f6529945ae220c94$export$a5ec1de9afad15ae, {\n            x: event.offsetX,\n            y: event.offsetY\n        });\n        dragData.suppressClickEvent = false;\n    });\n    element.addEventListener(\"contextmenu\", (event)=>{\n        event.preventDefault();\n        $f6529945ae220c94$var$dispatchEvent(element, $f6529945ae220c94$export$fc5c5be4a666ab48, {\n            x: event.offsetX,\n            y: event.offsetY\n        });\n    });\n}\n\n\n\n\n\n\n/**\n * @file Messages used in the application.\n *\n * @module constants/messages\n */ /**\n * license {@link https://opensource.org/license/mit/|MIT}\n * Copyright 2024 Steve Butler (henspace.com).\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the “Software”), to deal in\n * the Software without restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n * Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */ const $54f62aa0a0ac50b7$var$MESSAGE_MAP = new Map([\n    [\n        \"BUTTON ABOUT\",\n        \"About\"\n    ],\n    [\n        \"BUTTON BUY FOR GP\",\n        \"Buy for ${0}\\xa0GP\"\n    ],\n    [\n        \"BUTTON CANCEL\",\n        \"Cancel\"\n    ],\n    [\n        \"BUTTON CAST SPELL\",\n        \"Cast spell\"\n    ],\n    [\n        \"BUTTON CONSUME\",\n        \"Consume\"\n    ],\n    [\n        \"BUTTON CONTINUE\",\n        \"Continue\"\n    ],\n    [\n        \"BUTTON CLIMB OVER\",\n        \"Climb over\"\n    ],\n    [\n        \"BUTTON BARGE\",\n        \"Barge past\"\n    ],\n    [\n        \"BUTTON BEST ADVENTURE\",\n        \"Best adventure\"\n    ],\n    [\n        \"BUTTON DISCARD\",\n        \"Discard\"\n    ],\n    [\n        \"BUTTON ENTER DUNGEON\",\n        \"Enter if you dare\"\n    ],\n    [\n        \"BUTTON EQUIP\",\n        \"Equip\"\n    ],\n    [\n        \"BUTTON FORGET\",\n        \"Forget\"\n    ],\n    [\n        \"BUTTON GUIDES\",\n        \"About and Help\"\n    ],\n    [\n        \"BUTTON HELP\",\n        \"Help\"\n    ],\n    [\n        \"BUTTON INVENTORY\",\n        \"Inventory\"\n    ],\n    [\n        \"BUTTON LEARN SPELL\",\n        \"Learn spell\"\n    ],\n    [\n        \"BUTTON LEAVE ARTEFACT\",\n        \"Leave\"\n    ],\n    [\n        \"BUTTON MAGIC\",\n        \"Magic\"\n    ],\n    [\n        \"BUTTON MOVE\",\n        \"Move\"\n    ],\n    [\n        \"BUTTON OK\",\n        \"OK\"\n    ],\n    [\n        \"BUTTON PILLAGE\",\n        \"Pillage\"\n    ],\n    [\n        \"BUTTON PLAY ADVENTURE\",\n        \"Play adventure\"\n    ],\n    [\n        \"BUTTON PLAY CASUAL\",\n        \"Play casual\"\n    ],\n    [\n        \"BUTTON PRIVACY\",\n        \"Privacy\"\n    ],\n    [\n        \"BUTTON PREPARE SPELL\",\n        \"Prepare\"\n    ],\n    [\n        \"BUTTON REST\",\n        \"Rest\"\n    ],\n    [\n        \"BUTTON REST LONG\",\n        \"Long rest\"\n    ],\n    [\n        \"BUTTON READY MAGIC\",\n        \"Ready Magic\"\n    ],\n    [\n        \"BUTTON REST SHORT\",\n        \"Short rest\"\n    ],\n    [\n        \"BUTTON SEARCH\",\n        \"Search\"\n    ],\n    [\n        \"BUTTON SELL FOR GP\",\n        \"Sell for ${0}\\xa0GP\"\n    ],\n    [\n        \"BUTTON SETTINGS\",\n        \"Settings\"\n    ],\n    [\n        \"BUTTON START\",\n        \"Let's get started.\"\n    ],\n    [\n        \"BUTTON STASH\",\n        \"Stash\"\n    ],\n    [\n        \"BUTTON TAKE ARTEFACT\",\n        \"Take\"\n    ],\n    [\n        \"BUTTON TRADE\",\n        \"Trade\"\n    ],\n    [\n        \"BUTTON TRAITS\",\n        \"Traits\"\n    ],\n    [\n        \"BUTTON TRY AGAIN\",\n        \"Try again\"\n    ],\n    [\n        \"BUTTON TO NEXT ROOM\",\n        \"To the next room\"\n    ],\n    [\n        \"BUTTON USE\",\n        \"Use\"\n    ],\n    [\n        \"CONTROL EFFECTS VOLUME\",\n        \"Effect volume\"\n    ],\n    [\n        \"CONTROL MUSIC VOLUME\",\n        \"Music volume\"\n    ],\n    [\n        \"DESCRIPTION ACID_SPLASH\",\n        \"Casting this spell hurls acid over your enemies.\"\n    ],\n    [\n        \"DESCRIPTION CHAIN_MAIL_ARMOUR\",\n        \"Armour comprising interlocking steel rings over a soft cushioning fabric. The suit includes gauntlets.\"\n    ],\n    [\n        \"DESCRIPTION HALF_PLATE_ARMOUR\",\n        \"Shaped metal plates covering most of the body. Simple greaves protect the legs.\"\n    ],\n    [\n        \"DESCRIPTION LEATHER_ARMOUR\",\n        \"Simple armour comprising stiffened leather boiled in oil along with some more flexible sections.\"\n    ],\n    [\n        \"DESCRIPTION PADDED_ARMOUR\",\n        \"Simple quilted layers of cloth and batting.\"\n    ],\n    [\n        \"DESCRIPTION PLATE_ARMOUR\",\n        \"Full plate armour with interlocking steel plates covering the entire body. A visored helmet, gauntlets, boots, and padding are included.\"\n    ],\n    [\n        \"DESCRIPTION RING_MAIL_ARMOUR\",\n        \"Leather armour reinforced with heavy steel rings sown into the material.\"\n    ],\n    [\n        \"DESCRIPTION SCALE_MAIL_ARMOUR\",\n        \"Leather coat and legging covered with overlapping steel scales.\"\n    ],\n    [\n        \"DESCRIPTION STUDDED_LEATHER_ARMOUR\",\n        \"Tough and flexible leather armour with the addition of steel spikes and rivets.\"\n    ],\n    [\n        \"DESCRIPTION BURNING_HANDS\",\n        \"Casting this spell with your thumbs touching and fingers spread creates a thin sheet of flames enveloping your enemies.\"\n    ],\n    [\n        \"DESCRIPTION CLUB\",\n        \"A simple wooden club that's seen a lot of action.\"\n    ],\n    [\n        \"DESCRIPTION COINS\",\n        \"Various coins stamped with the image of latter day kings and queens.\"\n    ],\n    [\n        \"DESCRIPTION COPPER_COINS\",\n        \"Old copper coins of low value.\"\n    ],\n    [\n        \"DESCRIPTION DAGGER\",\n        \"A short and very sharp piercing weapon.\"\n    ],\n    [\n        \"DESCRIPTION ENGRAVED_PILLAR\",\n        \"A large stone pillar covered with mystical engravings.\"\n    ],\n    [\n        \"DESCRIPTION BLACK_FLASK\",\n        \"A black flask containing a clear, pungent liquid.\"\n    ],\n    [\n        \"DESCRIPTION GOBLIN\",\n        \"Small humanoid creature.Treat with caution. They're small but vicious.\"\n    ],\n    [\n        \"DESCRIPTION GOLD_COINS\",\n        \"Gold coins stamped with the image of latter day kings and queens.\"\n    ],\n    [\n        \"DESCRIPTION HERO\",\n        \"You are a warrior whose family have fallen out of favour. You have been sent on a quest to recover the Chalice of Dark Sight. If found, your family's good name will be restored.\"\n    ],\n    [\n        \"DESCRIPTION HIDDEN_ARTEFACT\",\n        \"There might be something hidden here.\"\n    ],\n    [\n        \"DESCRIPTION IRON_RATIONS\",\n        \"Simple emergency rations. Crucial for resting between rooms.\"\n    ],\n    [\n        \"DESCRIPTION ORC\",\n        \"A monstrous creature with an intense hatred of humans.\"\n    ],\n    [\n        \"DESCRIPTION PLATINUM_COINS\",\n        \"Highly valued large platinum.\"\n    ],\n    [\n        \"DESCRIPTION RAT\",\n        \"A giant rat, diseased and vicious.\"\n    ],\n    [\n        \"DESCRIPTION SHIELD\",\n        \"A wooden shield, carried in one hand and offering some protection.\"\n    ],\n    [\n        \"DESCRIPTION SHORTSWORD\",\n        \"A light and highly versatile sword.\"\n    ],\n    [\n        \"DESCRIPTION SILVER_COINS\",\n        \"Silver coins, worn and tarnished but still of value.\"\n    ],\n    [\n        \"DESCRIPTION SLIME\",\n        \"A green sticky substance that seems to be growing.\"\n    ],\n    [\n        \"DESCRIPTION SPIDER\",\n        \"A giant spider with fangs dripping green venom.\"\n    ],\n    [\n        \"DESCRIPTION TRADER\",\n        \"A wandering trader selling all manner of things gathered during many months in the dungeon.\"\n    ],\n    [\n        \"DESCRIPTION WATERSKIN\",\n        \"A leather drinking flask with fresh water. Crucial for resting between rooms.\"\n    ],\n    [\n        \"DIALOG TITLE BEST ADVENTURE\",\n        \"The most lucrative adventure so far\"\n    ],\n    [\n        \"DIALOG TITLE CHOICES\",\n        \"Decisions, decisions\"\n    ],\n    [\n        \"DIALOG TITLE PICK SPELL TO CAST\",\n        \"Pick spell to cast\"\n    ],\n    [\n        \"DIALOG TITLE PREPARE SPELLS\",\n        \"Prepare spells\"\n    ],\n    [\n        \"DIALOG TITLE SETTINGS\",\n        \"Adjust settings\"\n    ],\n    [\n        \"DIALOG TITLE TRADE\",\n        \"Buy and sell with trader\"\n    ],\n    [\n        \"DIALOG TITLE PILLAGE\",\n        \"Pillage corpse\"\n    ],\n    [\n        \"MENU TITLE MAIN\",\n        \"Click and Crawl\"\n    ],\n    [\n        \"MENU TITLE GUIDES\",\n        \"Guides and information\"\n    ],\n    [\n        \"MESSAGE CANNOT LOAD URL\",\n        \"Cannot load data from ${0}\"\n    ],\n    [\n        \"MESSAGE CANNOT STORE\",\n        \"You're carrying too much stuff to pick up what you've found.\"\n    ],\n    [\n        \"MESSAGE CANNOT REST\",\n        \"You try to rest, but you don't have enough resources to restore your health.\"\n    ],\n    [\n        \"MESSAGE CANNOT REST LONG\",\n        \"You have enough resource for a short rest, but not a long one.\"\n    ],\n    [\n        \"MESSAGE CONSUME BUT ALREADY FULL HP\",\n        \"Tastes good, but you're already in prime health. Perhaps you should've waited.\"\n    ],\n    [\n        \"MESSAGE CONSUME BUT NO HP GAIN\",\n        \"Tastes nice, but your health hasn`t improved.\"\n    ],\n    [\n        \"MESSAGE ENTER LEVEL\",\n        \"You enter level ${0}. The door slams shut behind you. There's no way back.\"\n    ],\n    [\n        \"MESSAGE EXPLAIN REST\",\n        \"Trying to use the safety of the corridor to rest and eat?\"\n    ],\n    [\n        \"MESSAGE DUNGEON INTRO\",\n        \"Welcome, ${0}. You enter a dark and dingy dungeon. Water runs down the wall and the smell of rotting corpses fills the air\"\n    ],\n    [\n        \"MESSAGE DUNGEON INTRO CONTINUE\",\n        \"Welcome back, ${0}. The adventure continues, and you enter a dark and dingy dungeon. Water runs down the wall and the smell of rotting corpses fills the air.\"\n    ],\n    [\n        \"MESSAGE DUNGEON INTRO CASUAL\",\n        \"Welcome, ${0}. You enter a dark and dingy dungeon. Explore as far as you can but remember your progress will not be saved.\"\n    ],\n    [\n        \"MESSAGE DEFEAT\",\n        \"Despite your valiant efforts, you died. Your legend will live on.\"\n    ],\n    [\n        \"MESSAGE INSUFFICIENT FUNDS\",\n        \"You don't have enough funds to purchase this item. The item costs ${0}\\xa0GP but you only have ${1}\\xa0GP.\"\n    ],\n    [\n        \"MESSAGE IT'S A HEALTHY DRINK\",\n        \"That tastes good. +${0}HP\"\n    ],\n    [\n        \"MESSAGE IT'S HEALTHY\",\n        \"A bit chewy, but tastes good. +${0}HP\"\n    ],\n    [\n        \"MESSAGE KILLED BY POISON\",\n        \"Yuk! Poison! You start to burn up, cough and vomit, before falling to the floor and dying.\"\n    ],\n    [\n        \"MESSAGE IT'S POISON\",\n        \"Yuk! It's poison. -${0}HP\"\n    ],\n    [\n        \"MESSAGE MAKE SPACE IN BACKPACK\",\n        \"You need to make space in your backpack by discarding or using something.\"\n    ],\n    [\n        \"MESSAGE MAKE SPACE IN EQUIP\",\n        \"This is too big to store. Sell or discard what you're wearing so you can wear this.\"\n    ],\n    [\n        \"MESSAGE NOTHING MORE TO DISCOVER\",\n        \"There's nothing more for you to learn or discover here.\"\n    ],\n    [\n        \"MESSAGE RESISTED POISON\",\n        \"Yuk! It's poisonous, but you resist its toxic effects.\"\n    ],\n    [\n        \"MESSAGE REST DIALOG\",\n        \"You are on a dark staircase leading deeper into the dungeon, but safe for now. If you have enough food or drink, you can rest to restore some health. If you don't need to recover, save your rations. These are the requirements:\"\n    ],\n    [\n        \"MESSAGE SEARCH CORPSE OR MOVE\",\n        [\n            \"You have a choice. Do you want to search the body or climb on top?\",\n            \"You've found a corpse, but what should you do? Search for weapons and treasure or climb on top of the body?\"\n        ]\n    ],\n    [\n        \"MESSAGE SEARCH HOLE OR MOVE\",\n        [\n            \"You have a choice. Do you want to search this hole or move into it?\",\n            \"You've been here before. Do you want to search again or climb into the hole you dug?\"\n        ]\n    ],\n    [\n        \"MESSAGE SEARCH OR MOVE\",\n        \"You have a choice. Do you want to search this tile or move onto it?\"\n    ],\n    [\n        \"MESSAGE SPELL ALREADY KNOWN\",\n        \"You've found a spell, but you already know this incantation.\"\n    ],\n    [\n        \"MESSAGE TRADE OR BARGE\",\n        \"Do you want to trade or barge past this guy?\"\n    ],\n    [\n        \"MESSAGE ENTRANCE STUCK\",\n        [\n            \"The entrance is locked or jammed. You can't tell. Either way, you can't escape in that direction.\",\n            \"You can't open the door. It seems locked or jammed. There's no way back.\"\n        ]\n    ],\n    [\n        \"MESSAGE EXIT STUCK\",\n        [\n            \"The exit is locked. You will need to find the key if you are ever to leave this dungeon.\",\n            \"The door will not move. It appears to be locked. There must be a key here somewhere.\"\n        ]\n    ],\n    [\n        \"MESSAGE EXPLAIN SPELL PREP\",\n        \"After a long rest, you can prepare spells ready for use.\"\n    ],\n    [\n        \"MESSAGE FOUND HIDDEN ARTEFACT\",\n        [\n            \"Good fortune smiles upon you. You found something.\",\n            \"You find something hidden in the ground.\",\n            \"Buried beneath the surface, you find something.\"\n        ]\n    ],\n    [\n        \"MESSAGE FOUND ENGRAVING\",\n        \"You find strange word engraved on the cold stone surface.\"\n    ],\n    [\n        \"MESSAGE FOUND GENERIC\",\n        \"It 's your lucky day. You' found something.\"\n    ],\n    [\n        \"MESSAGE GROUND DISTURBED\",\n        [\n            \"The ground appears to have been disturbed.\",\n            \"There's been some recent digging here.\"\n        ]\n    ],\n    [\n        \"MESSAGE NO SAVED ADVENTURE\",\n        \"No adventure has been saved yet.\"\n    ],\n    [\n        \"MESSAGE OPEN EXIT\",\n        [\n            \"The door opens and you slip away.\",\n            \"You decide that's enough exploring this dungeon and slip away into the darkness.\"\n        ]\n    ],\n    [\n        \"MESSAGE OPEN EXIT WHILE FIGHTING\",\n        [\n            \"A dangerous move, but despite the fighting, you manage to escape.\",\n            \"Dodging a blow, you manage to open the door and make your escape.\"\n        ]\n    ],\n    [\n        \"MESSAGE WELCOME\",\n        \"Welcome to the Click and Crawl old-school dungeon crawler. How far will you get?\"\n    ],\n    [\n        \"MESSAGE VICTORY\",\n        \"You have conquered the dungeon. Your name will live on forever and generations will sing of your great achievements.\"\n    ],\n    [\n        \"LONG REST REQ\",\n        \"Long rest: drinks: ${0}; meals: ${1}\"\n    ],\n    [\n        \"SHORT REST REQ\",\n        \"Short rest: drinks: ${0}; meals: ${1}; hit dice: 1\"\n    ],\n    // Miscellaneous words and phrases.\n    [\n        \"AC (including armour)\",\n        \"AC (+armour): ${0}\"\n    ],\n    [\n        \"Backpack\",\n        \"Backpack\"\n    ],\n    [\n        \"Body\",\n        \"Body\"\n    ],\n    [\n        \"Cantrips\",\n        \"Cantrips\"\n    ],\n    [\n        \"Consumables\",\n        \"Consumables\"\n    ],\n    [\n        \"Character level:\",\n        \"Character level: ${0}\"\n    ],\n    [\n        \"CHARACTER LEVEL:\",\n        \"level: ${0}\"\n    ],\n    [\n        \"(DEAD)\",\n        \"(DEAD!)\"\n    ],\n    [\n        \"Dungeon level:\",\n        \"Dungeon level: ${0}\"\n    ],\n    [\n        \"Experience:\",\n        \"Experience: ${0}\"\n    ],\n    [\n        \"Feet\",\n        \"Feet\"\n    ],\n    [\n        \"Gold:\",\n        \"Gold: ${0}\\xa0GP\"\n    ],\n    [\n        \"GOLD PIECES\",\n        \" gold pieces\"\n    ],\n    [\n        \"Hands\",\n        \"Hands\"\n    ],\n    [\n        \"Head\",\n        \"Head\"\n    ],\n    [\n        \"(HP OUT OF VALUE)\",\n        \"(HP:\\xa0${0}/${1})\"\n    ],\n    [\n        \"(HP VALUE)\",\n        \"(HP:\\xa0${0})\"\n    ],\n    [\n        \"Known spells\",\n        \"Known spells\"\n    ],\n    [\n        \"LEVEL UP\",\n        \"Level up to ${0}\"\n    ],\n    [\n        \"Name:\",\n        \"Name: ${0}\"\n    ],\n    [\n        \"Prepared spells\",\n        \"Prepared spells\"\n    ],\n    [\n        \"Ready magic\",\n        \"Ready magic\"\n    ],\n    [\n        \"Unknown\",\n        \"Unknown\"\n    ],\n    [\n        \"Wagon\",\n        \"Wagon\"\n    ]\n]);\nvar $54f62aa0a0ac50b7$export$2e2bcd8739ae039 = $54f62aa0a0ac50b7$var$MESSAGE_MAP;\n\n\n\n\n\n/**\n * Tile size to use throughout the game\n */ const $63854ed0e7987df1$var$TILE_SIZE = 48;\n/** @type {DOMHighResTimeStamp} */ let $63854ed0e7987df1$var$lastTimeStamp;\n/** @type {boolean} */ let $63854ed0e7987df1$var$animationState = true;\n/** Used by blur and focus events to restore state @type {boolean} */ let $63854ed0e7987df1$var$savedAnimationState = true;\n/**\n * Set the animation state.\n */ function $63854ed0e7987df1$var$setAnimationState(state) {\n    if (state !== $63854ed0e7987df1$var$animationState) {\n        $63854ed0e7987df1$var$animationState = state;\n        (0, $2d5b4e7cb639ebe1$export$2e2bcd8739ae039).info(`Set animation state to ${$63854ed0e7987df1$var$animationState}`);\n        if ($63854ed0e7987df1$var$animationState) $63854ed0e7987df1$var$startAnimation();\n    }\n}\n/**\n * Initialise the game engine.\n * @param {Object} screenOptions - @see {@link module:game/screen~setScreen} for\n * details of options.\n */ async function $63854ed0e7987df1$var$initialise(screenOptions) {\n    (0, $a1820c190f7a8b2e$export$2e2bcd8739ae039).setOptions(screenOptions);\n    (0, $2a5626561236b7e1$export$af7faffe10421f14).setMap((0, $54f62aa0a0ac50b7$export$2e2bcd8739ae039));\n    (0, $2b83232840d61fcb$export$9d534e3026b35ff)((0, $a1820c190f7a8b2e$export$2e2bcd8739ae039).getContext2D());\n    $63854ed0e7987df1$var$setupListeners();\n    (0, $81dd6b24526c5347$export$2e2bcd8739ae039).setPreDialogFunction(()=>$63854ed0e7987df1$var$setAnimationState(false));\n    (0, $81dd6b24526c5347$export$2e2bcd8739ae039).setPostDialogFunction(()=>$63854ed0e7987df1$var$setAnimationState(true));\n    (0, $76f86892cf60c694$export$ef0c17c6967bb348)();\n    (0, $81dd6b24526c5347$export$2e2bcd8739ae039).showOkDialog((0, $2a5626561236b7e1$export$a7357cdd1f0b0168)`MESSAGE WELCOME`, {\n        okButtonLabel: (0, $2a5626561236b7e1$export$a7357cdd1f0b0168)`BUTTON START`,\n        className: \"door\"\n    }).then(()=>(0, $4d3fcc3866f168b9$export$2e2bcd8739ae039).loadAndPlayMusic((0, $3c63fcd0cf599322$export$54b43579d6cb0cf2).MUSIC)).then(()=>(0, $4d3fcc3866f168b9$export$2e2bcd8739ae039).loadEffects((0, $3c63fcd0cf599322$export$54b43579d6cb0cf2).SOUND_EFFECTS_MAP)).then(()=>(0, $5840285c35321464$export$2e2bcd8739ae039).loadSpriteMap((0, $3c63fcd0cf599322$export$bd73ddfe5f8475d8).data, (0, $3c63fcd0cf599322$export$bd73ddfe5f8475d8).textureUrl)).then(()=>$5114bd1ce9a158d7$export$fa2f0f26e19d189b((0, $3c63fcd0cf599322$export$54b43579d6cb0cf2).DUNGEON_SCRIPT)).then((script)=>(0, $6664788cb4fc34b5$export$2e2bcd8739ae039).setSceneList((0, $5cdb299a40f2118a$export$e41f9be9fd588ed)(script))).then(()=>(0, $4d7b11e4136f6d93$export$8775ef33499e3a00)((0, $3c63fcd0cf599322$export$54b43579d6cb0cf2).ALMANAC_MAP)).then(()=>(0, $f37d71a6f3b25578$export$2e2bcd8739ae039).triggerEvent((0, $f37d71a6f3b25578$export$2e2bcd8739ae039).EventId.MAIN_MENU)).then(()=>$63854ed0e7987df1$var$startAnimation()).then(()=>{\n        window.addEventListener(\"blur\", ()=>{\n            $63854ed0e7987df1$var$savedAnimationState = $63854ed0e7987df1$var$animationState;\n            $63854ed0e7987df1$var$setAnimationState(false);\n        });\n        window.addEventListener(\"focus\", ()=>{\n            $63854ed0e7987df1$var$setAnimationState($63854ed0e7987df1$var$savedAnimationState ?? true);\n        });\n    }).catch((error)=>{\n        (0, $2d5b4e7cb639ebe1$export$2e2bcd8739ae039).error(error);\n        alert(`Fatal error in main game. ${error.message}`);\n        return;\n    });\n}\n/**\n * Set up the listeners.\n */ function $63854ed0e7987df1$var$setupListeners() {\n    const canvas = (0, $a1820c190f7a8b2e$export$2e2bcd8739ae039).getCanvas();\n    $f6529945ae220c94$export$2b4524682ad19724(canvas);\n    canvas.addEventListener($f6529945ae220c94$export$a5ec1de9afad15ae, (event)=>{\n        const x = event.detail.x;\n        const y = event.detail.y;\n        const mappedPositions = (0, $a1820c190f7a8b2e$export$2e2bcd8739ae039).uiCoordsToMappedPositions(x, y);\n        if (!(0, $e3583859a0cae8b2$export$2e2bcd8739ae039).resolveClick(mappedPositions)) (0, $f8633d94d0c88c58$export$2e2bcd8739ae039).resolveClick(mappedPositions);\n    });\n    canvas.addEventListener($f6529945ae220c94$export$90ded0e426ce21, (event)=>{\n        const x = event.detail.x;\n        const y = event.detail.y;\n        const mappedPositions = (0, $a1820c190f7a8b2e$export$2e2bcd8739ae039).uiCoordsToMappedPositions(x, y);\n        (0, $e3583859a0cae8b2$export$2e2bcd8739ae039).resolvePointerDown(mappedPositions);\n    });\n    canvas.addEventListener($f6529945ae220c94$export$3853e404217e8f25, (event)=>{\n        const x = event.detail.x;\n        const y = event.detail.y;\n        const mappedPositions = (0, $a1820c190f7a8b2e$export$2e2bcd8739ae039).uiCoordsToMappedPositions(x, y);\n        (0, $e3583859a0cae8b2$export$2e2bcd8739ae039).resolvePointerUp(mappedPositions);\n    });\n    canvas.addEventListener($f6529945ae220c94$export$f1ed6970fd95c8d6, (event)=>{\n        const x = event.detail.x;\n        const y = event.detail.y;\n        const mappedPositions = (0, $a1820c190f7a8b2e$export$2e2bcd8739ae039).uiCoordsToMappedPositions(x, y);\n        (0, $e3583859a0cae8b2$export$2e2bcd8739ae039).resolvePointerCancel(mappedPositions);\n    });\n    canvas.addEventListener($f6529945ae220c94$export$d69198a72de4964d, (event)=>{\n        (0, $6664788cb4fc34b5$export$2e2bcd8739ae039).panCameraBy(-event.detail.dx, -event.detail.dy);\n    });\n    canvas.addEventListener($f6529945ae220c94$export$fc5c5be4a666ab48, (event)=>{\n        const x = event.detail.x;\n        const y = event.detail.y;\n        const mappedPositions = (0, $a1820c190f7a8b2e$export$2e2bcd8739ae039).uiCoordsToMappedPositions(x, y);\n        if (!(0, $e3583859a0cae8b2$export$2e2bcd8739ae039).resolveContextMenu(mappedPositions)) (0, $f8633d94d0c88c58$export$2e2bcd8739ae039).resolveContextMenu(mappedPositions);\n        event.preventDefault();\n    });\n}\n/**\n * Start the game.\n */ function $63854ed0e7987df1$var$startAnimation() {\n    (0, $2d5b4e7cb639ebe1$export$2e2bcd8739ae039).info(\"Start animations\");\n    window.requestAnimationFrame($63854ed0e7987df1$var$gameLoop);\n}\n/**\n * Main animation loop.\n * @param {DOMHighResTimeStamp} timeStamp\n */ function $63854ed0e7987df1$var$gameLoop(timeStamp) {\n    (0, $92e1ec0ff12c1fbf$export$2e2bcd8739ae039).updateTimeNow(timeStamp);\n    if ($63854ed0e7987df1$var$lastTimeStamp) {\n        const deltaSeconds = (timeStamp - $63854ed0e7987df1$var$lastTimeStamp) / 1000;\n        (0, $6664788cb4fc34b5$export$2e2bcd8739ae039).update(deltaSeconds);\n        (0, $e3583859a0cae8b2$export$2e2bcd8739ae039).update(deltaSeconds);\n        if ($f92f169e79f1c193$export$8eb3892b442747bd.showFps) $63854ed0e7987df1$var$showFps(1 / deltaSeconds);\n    }\n    $63854ed0e7987df1$var$lastTimeStamp = timeStamp;\n    if ($63854ed0e7987df1$var$animationState) window.requestAnimationFrame($63854ed0e7987df1$var$gameLoop);\n    else (0, $2d5b4e7cb639ebe1$export$2e2bcd8739ae039).info(\"Animation paused\");\n}\n/**\n * Show frames per second on screen.\n * @param {number} fps - frames per second\n */ function $63854ed0e7987df1$var$showFps(fps) {\n    $335738a0ba898678$export$bec150f75a9b8f11((0, $a1820c190f7a8b2e$export$2e2bcd8739ae039).getContext2D(), `FPS: ${Math.round(fps)}`, {\n        x: 0,\n        y: (0, $a1820c190f7a8b2e$export$2e2bcd8739ae039).getCanvasDimensions().height\n    }, {\n        color: \"green\"\n    });\n}\n/**\n * The game singleton\n */ const $63854ed0e7987df1$var$GAME = {\n    TILE_SIZE: $63854ed0e7987df1$var$TILE_SIZE,\n    initialise: $63854ed0e7987df1$var$initialise,\n    setAnimationState: $63854ed0e7987df1$var$setAnimationState\n};\nvar $63854ed0e7987df1$export$2e2bcd8739ae039 = $63854ed0e7987df1$var$GAME;\n\n\nwindow.addEventListener(\"load\", ()=>{\n    const DESIGN_WIDTH = 800;\n    const DESIGN_HEIGHT = 600;\n    try {\n        (0, $63854ed0e7987df1$export$2e2bcd8739ae039).initialise({\n            width: DESIGN_WIDTH,\n            height: DESIGN_HEIGHT,\n            maxScale: 2.4,\n            minScale: 1,\n            sizingMethod: \"COVER\",\n            alpha: false\n        });\n    } catch (error) {\n        (0, $2d5b4e7cb639ebe1$export$2e2bcd8739ae039).fatal(error);\n    }\n});\n\n\n//# sourceMappingURL=index.757df880.js.map\n","/**\n * @file Main entry point\n *\n * @module index\n */\n/**\n * @license See {@link https://opensource.org/license/mit/|MIT}\n *\n * Copyright 2024 Steve Butler\n */\n/**\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the “Software”), to deal in\n * the Software without restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n * Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */\nimport './utils/polyfills/string.js';\nimport LOG from './utils/logging.js';\nimport GAME from './gameManagement/game.js';\n\nwindow.addEventListener('load', () => {\n  const DESIGN_WIDTH = 800;\n  const DESIGN_HEIGHT = 600;\n  try {\n    GAME.initialise({\n      width: DESIGN_WIDTH,\n      height: DESIGN_HEIGHT,\n      maxScale: 2.4,\n      minScale: 1,\n      sizingMethod: 'COVER',\n      alpha: false,\n    });\n  } catch (error) {\n    LOG.fatal(error);\n  }\n});\n","/**\n * @file Polyfills\n *\n * @module utils/polyfills/string\n */\n/**\n * license {@link https://opensource.org/license/mit/|MIT}\n * Copyright 2024 Steve Butler (henspace.com).\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the “Software”), to deal in\n * the Software without restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n * Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */\n/**\n * @file Polyfills and shims for String\n *\n * @module utils/polyfills/string\n *\n * @license GPL-3.0-or-later\n * Create quizzes and lessons from plain text files.\n * Copyright 2023 Steve Butler (henspace.com)\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program.  If not, see <https://www.gnu.org/licenses/>.\n *\n */\n\n/**\n * Implement replaceAll function if not already implemented.\n * @see {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/replaceAll}\n *\n * @param {string} str - the source string\n * @param {string | RegExp} pattern - the pattern to look for in the source string\n * @param {string} replacement - the replacement\n */\n\nif (!String.prototype.replaceAll) {\n  String.prototype.replaceAll = function stringReplaceAll(\n    pattern,\n    replacement\n  ) {\n    if (pattern instanceof RegExp) {\n      if (pattern.flags.indexOf('g') < 0) {\n        throw new TypeError(\n          'String.prototype.replaceAll called with a non-global RegExp argument'\n        );\n      }\n      return this.replace(pattern, replacement);\n    } else {\n      return this.replace(new RegExp(pattern, 'g'), replacement);\n    }\n  };\n}\n\nfunction isLeadingSurrogate(codePoint) {\n  return codePoint >= 0xd800 && codePoint <= 0xdbff;\n}\n\nfunction isTrailingSurrogate(codePoint) {\n  return codePoint >= 0xdc00 && codePoint <= 0xdfff;\n}\n\nconst UNICODE_REPLACEMENT = '\\uFFFD';\n\n/**\n * Replace lone surrogates with UNICODE_REPLACEMENT\n * @see {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/toWellFormed}\n * @param {string} str\n * @returns {string}\n */\nexport function toWellFormed(str) {\n  if (!str) {\n    return str;\n  }\n  let result = '';\n  for (const chr of str) {\n    const codePoint = chr.codePointAt(0);\n    if (isLeadingSurrogate(codePoint) || isTrailingSurrogate(codePoint)) {\n      result += UNICODE_REPLACEMENT; // next character is not a trailing surrogate\n    } else {\n      result += chr;\n    }\n  }\n  return result;\n}\n\n/**\n * Shim toWellFormed\n */\nif (!String.prototype.toWellFormed) {\n  String.prototype.toWellFormed = function toWellFormed() {\n    const str = this;\n    if (!str) {\n      return str;\n    }\n    let result = '';\n    for (const chr of str) {\n      const codePoint = chr.codePointAt(0);\n      if (isLeadingSurrogate(codePoint) || isTrailingSurrogate(codePoint)) {\n        result += UNICODE_REPLACEMENT; // next character is not a trailing surrogate\n      } else {\n        result += chr;\n      }\n    }\n    return result;\n  };\n}\n","/**\n * @file Handle logging. This allows easier access to logs on mobile devices.\n *\n * @module utils/logging\n */\n/**\n * License {@link https://opensource.org/license/mit/|MIT}\n *\n * Copyright 2024 Steve Butler (henspace.com).\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the “Software”), to deal in\n * the Software without restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n * Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */\n\nlet messages = [];\n\n/** Add listener for syntax errors. */\nwindow.addEventListener('error', (event) => {\n  alert(\n    `ERROR: ${event.filename}; line ${event.lineno}\\n${event.message}\\n:Stack:\\n${event.error.stack}`\n  );\n});\n\n/**\n * Log information.\n * @param  {...any} data\n */\nfunction logGeneral(...data) {\n  console.log(...data);\n}\n\n/**\n * Log information.\n * @param  {...any} data\n */\nfunction logInfo(...data) {\n  console.debug(...data);\n}\n\n/**\n * Log information.\n * @param  {...any} data\n */\nfunction logDebug(...data) {\n  console.debug(...data);\n}\n\n/**\n * Log error information.\n * @param  {...any} data\n */\nfunction logError(...data) {\n  console.error(...data);\n  messages = messages.concat(data);\n}\n\n/**\n * Log error information.\n * @param  {Error}} data\n */\nfunction logFatal(error) {\n  console.error(error);\n  let message;\n  if (error.message) {\n    message = `${error.message}\\nStack:\\n${error.stack}`;\n  } else {\n    message = error;\n  }\n  alert(`Fatal error: ${message}\\nPrevious errors:\\n${messages.join('\\n')}`);\n  messages.push(message);\n}\n\n/**\n * Object to access logging routines.\n */\nconst LOG = {\n  log: logGeneral,\n  info: logInfo,\n  debug: logDebug,\n  error: logError,\n  fatal: logFatal,\n};\n\nexport default LOG;\n","/**\n * @file The main game. This is a singleton as there can only be a single game.\n *\n * @module gameManagement/game\n */\n/**\n * License {@link https://opensource.org/license/mit/|MIT}\n *\n * Copyright 2024 Steve Butler\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the “Software”), to deal in\n * the Software without restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n * Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */\nimport SCREEN from '../utils/game/screen.js';\nimport WORLD from '../utils/game/world.js';\nimport HUD from '../hud/hud.js';\nimport { checkEmojis } from '../utils/text/emojis.js';\nimport GAME_CLOCK from '../utils/time/clock.js';\nimport * as debug from '../utils/debug.js';\nimport * as text from '../utils/text/text.js';\nimport * as assetLoaders from '../utils/assetLoaders.js';\nimport { createAutoSceneList } from '../scriptReaders/autoSceneList.js';\nimport SCENE_MANAGER from './sceneManager.js';\nimport UI from '../utils/dom/ui.js';\nimport LOG from '../utils/logging.js';\n\nimport * as pointerActions from '../utils/dom/pointerActions.js';\nimport TURN_MANAGER from './turnManager.js';\n\nimport IMAGE_MANAGER from '../utils/sprites/imageManager.js';\nimport SOUND_MANAGER from '../utils/soundManager.js';\nimport { initialiseSettings } from '../dialogs/settingsDialog.js';\n\nimport MESSAGE_MAP from '../constants/messageMap.js';\nimport { i18n, MESSAGES } from '../utils/messageManager.js';\nimport { loadAlmanacs } from '../dnd/almanacs/almanacs.js';\nimport { AssetUrls, SpriteSheet } from '../../assets/assets.js';\n\n/**\n * Tile size to use throughout the game\n */\nconst TILE_SIZE = 48;\n\n/** @type {DOMHighResTimeStamp} */\nlet lastTimeStamp;\n\n/** @type {boolean} */\nlet animationState = true;\n\n/** Used by blur and focus events to restore state @type {boolean} */\nlet savedAnimationState = true;\n\n/**\n * Set the animation state.\n */\nfunction setAnimationState(state) {\n  if (state !== animationState) {\n    animationState = state;\n    LOG.info(`Set animation state to ${animationState}`);\n    if (animationState) {\n      startAnimation();\n    }\n  }\n}\n\n/**\n * Initialise the game engine.\n * @param {Object} screenOptions - @see {@link module:game/screen~setScreen} for\n * details of options.\n */\nasync function initialise(screenOptions) {\n  SCREEN.setOptions(screenOptions);\n  MESSAGES.setMap(MESSAGE_MAP);\n  checkEmojis(SCREEN.getContext2D());\n  setupListeners();\n  UI.setPreDialogFunction(() => setAnimationState(false));\n  UI.setPostDialogFunction(() => setAnimationState(true));\n  initialiseSettings();\n  UI.showOkDialog(i18n`MESSAGE WELCOME`, {\n    okButtonLabel: i18n`BUTTON START`,\n    className: 'door',\n  })\n    .then(() => SOUND_MANAGER.loadAndPlayMusic(AssetUrls.MUSIC))\n    .then(() => SOUND_MANAGER.loadEffects(AssetUrls.SOUND_EFFECTS_MAP))\n\n    .then(() =>\n      IMAGE_MANAGER.loadSpriteMap(SpriteSheet.data, SpriteSheet.textureUrl)\n    )\n    .then(() => assetLoaders.loadTextFromUrl(AssetUrls.DUNGEON_SCRIPT))\n    .then((script) => SCENE_MANAGER.setSceneList(createAutoSceneList(script)))\n    .then(() => loadAlmanacs(AssetUrls.ALMANAC_MAP))\n    .then(() => TURN_MANAGER.triggerEvent(TURN_MANAGER.EventId.MAIN_MENU))\n    .then(() => startAnimation())\n    .then(() => {\n      window.addEventListener('blur', () => {\n        savedAnimationState = animationState;\n        setAnimationState(false);\n      });\n      window.addEventListener('focus', () => {\n        setAnimationState(savedAnimationState ?? true);\n      });\n    })\n    .catch((error) => {\n      LOG.error(error);\n      alert(`Fatal error in main game. ${error.message}`);\n      return;\n    });\n}\n\n/**\n * Set up the listeners.\n */\nfunction setupListeners() {\n  const canvas = SCREEN.getCanvas();\n  pointerActions.addPointerListeners(canvas);\n\n  canvas.addEventListener(pointerActions.CUSTOM_CLICK_EVENT_NAME, (event) => {\n    const x = event.detail.x;\n    const y = event.detail.y;\n    const mappedPositions = SCREEN.uiCoordsToMappedPositions(x, y);\n    if (!HUD.resolveClick(mappedPositions)) {\n      WORLD.resolveClick(mappedPositions);\n    }\n  });\n\n  canvas.addEventListener(\n    pointerActions.CUSTOM_POINTER_DOWN_EVENT_NAME,\n    (event) => {\n      const x = event.detail.x;\n      const y = event.detail.y;\n      const mappedPositions = SCREEN.uiCoordsToMappedPositions(x, y);\n      HUD.resolvePointerDown(mappedPositions);\n    }\n  );\n\n  canvas.addEventListener(\n    pointerActions.CUSTOM_POINTER_UP_EVENT_NAME,\n    (event) => {\n      const x = event.detail.x;\n      const y = event.detail.y;\n      const mappedPositions = SCREEN.uiCoordsToMappedPositions(x, y);\n      HUD.resolvePointerUp(mappedPositions);\n    }\n  );\n\n  canvas.addEventListener(\n    pointerActions.CUSTOM_POINTER_CANCEL_EVENT_NAME,\n    (event) => {\n      const x = event.detail.x;\n      const y = event.detail.y;\n      const mappedPositions = SCREEN.uiCoordsToMappedPositions(x, y);\n      HUD.resolvePointerCancel(mappedPositions);\n    }\n  );\n\n  canvas.addEventListener(\n    pointerActions.CUSTOM_POINTER_DRAG_EVENT_NAME,\n    (event) => {\n      SCENE_MANAGER.panCameraBy(-event.detail.dx, -event.detail.dy);\n    }\n  );\n\n  canvas.addEventListener(\n    pointerActions.CUSTOM_CONTEXT_MENU_EVENT_NAME,\n    (event) => {\n      const x = event.detail.x;\n      const y = event.detail.y;\n      const mappedPositions = SCREEN.uiCoordsToMappedPositions(x, y);\n      if (!HUD.resolveContextMenu(mappedPositions)) {\n        WORLD.resolveContextMenu(mappedPositions);\n      }\n      event.preventDefault();\n    }\n  );\n}\n\n/**\n * Start the game.\n */\nfunction startAnimation() {\n  LOG.info('Start animations');\n  window.requestAnimationFrame(gameLoop);\n}\n\n/**\n * Main animation loop.\n * @param {DOMHighResTimeStamp} timeStamp\n */\nfunction gameLoop(timeStamp) {\n  GAME_CLOCK.updateTimeNow(timeStamp);\n  if (lastTimeStamp) {\n    const deltaSeconds = (timeStamp - lastTimeStamp) / 1000;\n    SCENE_MANAGER.update(deltaSeconds);\n    HUD.update(deltaSeconds);\n    if (debug.OPTIONS.showFps) {\n      showFps(1 / deltaSeconds);\n    }\n  }\n\n  lastTimeStamp = timeStamp;\n  if (animationState) {\n    window.requestAnimationFrame(gameLoop);\n  } else {\n    LOG.info('Animation paused');\n  }\n}\n\n/**\n * Show frames per second on screen.\n * @param {number} fps - frames per second\n */\nfunction showFps(fps) {\n  text.writeText(\n    SCREEN.getContext2D(),\n    `FPS: ${Math.round(fps)}`,\n    {\n      x: 0,\n      y: SCREEN.getCanvasDimensions().height,\n    },\n    { color: 'green' }\n  );\n}\n\n/**\n * The game singleton\n */\nconst GAME = {\n  TILE_SIZE: TILE_SIZE,\n  initialise: initialise,\n  setAnimationState: setAnimationState,\n};\n\nexport default GAME;\n","/**\n * @file Utilities for handling the screen size. The screen is implemented as\n * a singleton.\n * The game is configured as a world and a screen. The screen is the area that is\n * rendered with a canvas. The world is the total space in which objects can\n * exist. The world is potentially unbounded.\n *\n * The canvas is set to the same size as the screen and then the canvas is\n * resized to fit the display using CSS.\n *\n * The canvas is centred on the camera, so although the canvas rect and screen\n * rect are the same size, the screen always has its top left at 0, 0 in the world\n * whereas the canvas rect may effectively move around the world.\n *\n * @module utils/screen\n */\n/**\n * License {@link https://opensource.org/license/mit/|MIT}\n *\n * Copyright 2024 Steve Butler\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the “Software”), to deal in\n * the Software without restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n * Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */\n\nimport * as fonts from '../text/fonts.js';\nimport { Position, Rectangle } from '../geometry.js';\nimport LOG from '../logging.js';\n\n/**\n * @typedef {Object} ScreenDetails\n * @property {HTMLCanvasElement} canvas\n * @property {number} width\n * @property {number} height\n * @property {number} x\n * @property {number} y\n */\nlet throttleTimer = null;\n\nlet canvas = null;\nlet canvasRect = null;\nlet canvasHalfWidth = 0;\nlet canvasHalfHeight = 0;\nlet canvasAlpha = true;\nlet visibleCanvasRect = null;\nlet gameElement = null;\n\nlet left = 0;\nlet top = 0;\n//let screenRect;\nlet scale = 1;\nlet maxScale = 1;\nlet minScale = 0.1;\nlet sizingMethod = 'COVER';\nlet cameraPosition = new Position(0, 0, 0);\n\n/**\n * Add event listener to handle resizing of the window.\n */\nwindow.addEventListener('resize', () => {\n  if (throttleTimer !== null) {\n    return; // it will get handled.\n  }\n  throttleTimer = window.setTimeout(() => {\n    resize();\n    throttleTimer = null;\n  }, 200);\n});\n\n/**\n * Get dimensions of the working area for the game.\n * @returns {module:utils/geometry~Dims2D}\n */\nfunction getDisplayDims() {\n  return { width: window.innerWidth, height: window.innerHeight };\n}\n/**\n * @param {Object} options - config options.\n * @param {number} options.width - the design width for the screen.\n * @param {number} options.height - the design height for the page.\n * @param {number} options.maxScale - maximum scaling allowed\n * @param {string} options.sizingMethod  - 'FIT' or 'COVER'. Defaults to 'FIT'\n * @param {boolean} options.alpha - Should canvas have an alpha channel\n */\nfunction setOptions(options) {\n  if (canvas) {\n    LOG.error('Multiple calls to setScreen ignored.');\n    return;\n  }\n  gameElement = document.getElementById('game-content');\n  fonts.initialise(options.width);\n  canvas = document.createElement('canvas');\n  canvas.id = 'game-canvas';\n  canvas.setAttribute('width', options.width);\n  canvas.setAttribute('height', options.height);\n  canvas.innerText = 'Loading the app.';\n  canvasRect = new Rectangle(0, 0, options.width, options.height);\n  canvasHalfWidth = options.width / 2;\n  canvasHalfHeight = options.height / 2;\n\n  gameElement.appendChild(canvas);\n\n  maxScale = options.maxScale;\n  minScale = options.minScale;\n  sizingMethod = options.sizingMethod;\n  canvasAlpha = options.alpha;\n  sizeScreen();\n  syncDomFonts();\n}\n\n/**\n * Size the screen\n * @param {number} aspectRatio - aspect ratio (width / height) of the screen\n * @param {number} windowAspectRatio - aspect ratio (width / height) of the screen\n * @param {string} method - FIT or COVER. Defaults to FIT\n */\nfunction shouldFitHeight(aspectRatio, windowAspectRatio, sizingMethod) {\n  if (sizingMethod === 'COVER') {\n    return aspectRatio > windowAspectRatio;\n  } else {\n    return aspectRatio < windowAspectRatio;\n  }\n}\n/**\n * Resize the screen according to the current inner window dimensions.\n */\nfunction sizeScreen() {\n  const dims = getDisplayDims();\n  let aspectRatio = canvasRect.width / canvasRect.height;\n  let displayedHeight = 0;\n  let displayedWidth = 0;\n  const windowAspectRatio = dims.width / dims.height;\n  const fitHeight = shouldFitHeight(\n    aspectRatio,\n    windowAspectRatio,\n    sizingMethod\n  );\n  if (fitHeight) {\n    displayedHeight = dims.height;\n    displayedWidth = displayedHeight * aspectRatio;\n  } else {\n    displayedWidth = dims.width;\n    displayedHeight = displayedWidth / aspectRatio;\n  }\n\n  scale = displayedWidth / canvasRect.width;\n  if (scale > maxScale) {\n    scale = maxScale;\n    displayedWidth = scale * canvasRect.width;\n    displayedHeight = scale * canvasRect.height;\n  } else if (scale < minScale) {\n    scale = minScale;\n    displayedWidth = scale * canvasRect.width;\n    displayedHeight = scale * canvasRect.height;\n  }\n\n  left = (dims.width - displayedWidth) / 2;\n  top = (dims.height - displayedHeight) / 2;\n\n  canvas.style.left = `${left}px`;\n  canvas.style.top = `${top}px`;\n  canvas.style.width = `${displayedWidth}px`;\n  canvas.style.height = `${displayedHeight}px`;\n\n  let visibleCanvasWidth;\n  let visibleCanvasHeight;\n  let visibleCanvasOffsetX;\n  let visibleCanvasOffsetY;\n  if (left < 0) {\n    visibleCanvasOffsetX = -left / scale;\n    visibleCanvasWidth = dims.width / scale;\n  } else {\n    visibleCanvasOffsetX = 0;\n    visibleCanvasWidth = canvasRect.width;\n  }\n  if (top < 0) {\n    visibleCanvasOffsetY = -top / scale;\n    visibleCanvasHeight = dims.height / scale;\n  } else {\n    visibleCanvasOffsetY = 0;\n    visibleCanvasHeight = canvasRect.height;\n  }\n\n  visibleCanvasRect = new Rectangle(\n    visibleCanvasOffsetX,\n    visibleCanvasOffsetY,\n    visibleCanvasWidth,\n    visibleCanvasHeight\n  );\n  LOG.debug(`Scale: ${scale}`);\n  LOG.debug(`Window: width: ${dims.width}, height: ${dims.height}`);\n  LOG.debug(\n    `Display: left: ${left}, top: ${top}, width: ${displayedWidth}, height: ${displayedHeight}`\n  );\n  LOG.debug(\n    `Visible canvas: left: ${visibleCanvasOffsetX}, top: ${visibleCanvasOffsetY}, width: ${visibleCanvasWidth}, height: ${visibleCanvasHeight}`\n  );\n}\n\n/**\n * Adjust the font sizes to ensure glass in sync with canvas.\n */\nfunction syncDomFonts() {\n  const rootFontSize = fonts.getRootFontSize() * scale;\n  document.documentElement.style.fontSize = `${rootFontSize}px`;\n}\n\n/**\n * Resize the screen.\n */\nfunction resize() {\n  sizeScreen();\n  syncDomFonts();\n}\n/**\n * @typedef {Object} screenDetails\n * @property {HTMLCanvasElement} canvas\n * @property {number} width - design width\n * @property {number} height - design height\n */\n\n/**\n * Clear the canvas.\n */\nfunction clearCanvas() {\n  getContext2D().clearRect(0, 0, canvasRect.width, canvasRect.height);\n}\n\n/**\n * Get the bounds of the world that are plotted in the canvas.\n * @returns {Rectangle}\n */\nfunction getWorldInCanvasBounds() {\n  return new Rectangle(\n    cameraPosition.x,\n    cameraPosition.y,\n    canvasRect.width,\n    canvasRect.height\n  );\n}\n\n/**\n * Get canvas dimensions.\n * @returns {Dims2D}\n */\nfunction getCanvasDimensions() {\n  return { width: canvasRect.width, height: canvasRect.height };\n}\n\n/**\n * Get the canvas context.\n * @returns {CanvasRenderingContext2D}\n */\nfunction getContext2D() {\n  return canvas.getContext('2d', { alpha: canvasAlpha });\n}\n\n/**\n * @typedef {Object} Closers\n * @property {Element} element - when clicked, this should close a display.\n * @property {number} response - the response returned if this element closed a display.\n */\n/**\n * Set the content of the glass layer. OnClick events are added automatically to the\n * closers.\n * @param {HTMLElement} element\n * @param {Object} options\n * @param {Closers[]} options.closers - array of Closers. If not provided then the entire display\n * is used.\n * @param {string} options.className\n * @param {boolean} options.replace - replace current glass\n * @returns {Promise} fulfils to closers.closes value\n */\nfunction displayOnGlass(element, options) {\n  let glass;\n  if (options.replace) {\n    glass = document.getElementsByClassName('glass')[0];\n    glass?.replaceChildren();\n  }\n  if (!glass) {\n    glass = document.createElement('div');\n    document.body.appendChild(glass);\n    glass.className = 'glass';\n  }\n  const glassContent = document.createElement('div');\n  glass.appendChild(glassContent);\n  glassContent.className = 'glass-content';\n  glassContent.appendChild(element);\n  if (options.className) {\n    glass.classList.add(options.className);\n  }\n  glass.style.display = 'block';\n  glass.style.opacity = 1;\n  // calculate if content overflows. This is used because of lack of CSS support\n  // for safe in Safari.\n  const contentHeight = glassContent.getBoundingClientRect().height;\n  if (glassContent.scrollHeight > contentHeight) {\n    glassContent.classList.add('overflow');\n  }\n  const promises = [];\n  if (options.closers && options.closers.length > 0) {\n    options.closers.forEach((closer) => {\n      const promise = new Promise((resolve) => {\n        closer.element.addEventListener('click', async () => {\n          resolve(closer.closes);\n        });\n      });\n      promises.push(promise);\n    });\n  } else {\n    const promise = new Promise((resolve) =>\n      glassContent.addEventListener('click', () => resolve())\n    );\n    promises.push(promise);\n  }\n  let closingResponse;\n  return Promise.race(promises)\n    .then((response) => {\n      closingResponse = response;\n      return wipeGlass(glass);\n    })\n    .then(() => closingResponse);\n}\n\n/**\n * Clear and close the glass layer. The layer is hidden and it's content removed.\n * @param {Element} glass\n * @returns {Promise} fulfils to undefined. This is to allow opacity transition.\n */\nfunction wipeGlass(glass) {\n  glass.style.opacity = 0;\n  window.setTimeout(() => {\n    glass.remove();\n  }, 500);\n  return Promise.resolve();\n}\n\n/**\n * Pan the camera.\n * @param {number} dx - movement in world units\n * @param {number} dy - movement in world units\n */\nfunction panCamera(dx, dy) {\n  cameraPosition.x += dx;\n  cameraPosition.y += dy;\n}\n\n/**\n * Centre the canvas on a point\n * @param {Point} point\n */\nfunction centreCanvasOn(point) {\n  cameraPosition.x = point.x - canvasHalfWidth;\n  cameraPosition.y = point.y - canvasHalfHeight;\n}\n\n/**\n * Convert a distance from ui units to world units.\n * @param {number} dist\n * @returns {number}\n */\nfunction uiToWorld(dist) {\n  return dist / scale;\n}\n\n/**\n * Convert a distance from world units to ui units.\n * @param {number} dist\n * @returns {number}\n */\nfunction worldToUi(dist) {\n  return dist * scale;\n}\n\n/**\n * @typedef {Object} MappedPositions\n * @property {Position} canvas - position on the canvas\n * @property {Position} world - position in the world\n */\n/**\n * Convert ui Coordinates to world Position\n * @param {number} x  -position in the ui\n * @param {number} y  -position in the ui\n * @returns {MappedPositions} position on the canvas\n */\nfunction uiCoordsToMappedPositions(x, y) {\n  x = uiToWorld(x);\n  y = uiToWorld(y);\n  const canvasPosition = new Position(Math.round(x), Math.round(y));\n  const worldPosition = new Position(\n    Math.round(x + cameraPosition.x),\n    Math.round(y + cameraPosition.y),\n    -cameraPosition.rotation\n  );\n  return { canvas: canvasPosition, world: worldPosition };\n}\n\n/**\n * Convert world Position to canvas Position\n * @param {Position} position  -position in the world\n * @returns {Position} position on the canvas\n */\nfunction worldPositionToCanvas(position) {\n  return new Position(\n    position.x - cameraPosition.x,\n    position.y - cameraPosition.y,\n    position.rotation\n  );\n}\n\n/**\n * Convert canvas Position to world Position\n * @param {Position} position  -position on the canvas\n * @returns {Position} position in the world\n */\nfunction canvasPositionToWorld(position) {\n  return new Position(\n    position.x + cameraPosition.x,\n    position.y + cameraPosition.y,\n    position.rotation\n  );\n}\n\n/**\n * Convert glass position to world position. Negative positions are calculated as\n * offsets from the right and bottom of the glass dimensions. Otherwise they are\n * calculated as offsets from the left and top.\n * @returns {Position}\n */\nfunction glassPositionToWorld(position) {\n  const xOrigin =\n    position.x < 0\n      ? visibleCanvasRect.x + visibleCanvasRect.width\n      : visibleCanvasRect.x;\n  const yOrigin =\n    position.y < 0\n      ? visibleCanvasRect.y + visibleCanvasRect.height\n      : visibleCanvasRect.y;\n\n  let x = xOrigin + position.x;\n  let y = yOrigin + position.y;\n\n  return canvasPositionToWorld(new Position(x, y, position.rotation));\n}\n\n/**\n * Test if rectangle on screen.\n * @param {Rectangle} rect\n * @return {boolean} true if on screen\n */\nfunction isOnScreen(rect) {\n  return rect.overlaps(canvasRect);\n}\n\n/**\n * Test if rectangle is visible on the canvas.\n * @param {Rectangle} rect - this should have been converted to canvas coordinates\n * @return {boolean} true if on screen\n */\nfunction isOnCanvas(rect) {\n  return rect.overlaps(canvasRect);\n}\n\n/**\n * Get the dimensions of the visible canvas.\n * @returns {Rectangle}\n */\nfunction getVisibleCanvasRect() {\n  return visibleCanvasRect;\n}\n\n/**\n * Set the global opacity.\n * @param {number} opacity\n */\nfunction setOpacity(opacity) {\n  getContext2D().globalAlpha = opacity;\n}\n/**\n * Screen object\n */\nconst SCREEN = {\n  canvasPositionToWorld: canvasPositionToWorld,\n  centreCanvasOn: centreCanvasOn,\n  clearCanvas: clearCanvas,\n  displayOnGlass: displayOnGlass,\n  getCanvas: () => canvas,\n  getContext2D: getContext2D,\n  getCanvasDimensions: getCanvasDimensions,\n  getWorldInCanvasBounds: getWorldInCanvasBounds,\n  getVisibleCanvasRect: getVisibleCanvasRect,\n  glassPositionToWorld: glassPositionToWorld,\n  isOnCanvas: isOnCanvas,\n  isOnScreen: isOnScreen,\n  panCamera: panCamera,\n  resize: resize,\n  setOpacity: setOpacity,\n  setOptions: setOptions,\n  wipeGlass: wipeGlass,\n  worldPositionToCanvas: worldPositionToCanvas,\n  worldToUi: worldToUi,\n  uiCoordsToMappedPositions: uiCoordsToMappedPositions,\n  uiToWorld: uiToWorld,\n};\n\nexport default SCREEN;\n","/**\n * @file Font data\n *\n * @module utils/text/fonts\n */\n/**\n * License {@link https://opensource.org/license/mit/|MIT}\n *\n * Copyright 2024 Steve Butler\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the “Software”), to deal in\n * the Software without restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n * Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */\n\nconst baseSize = 15; // minimum pixel size\n\n/*\n * These should be replicated in the CSS.\n */\nconst H1_FONT_SCALE = 2.0;\nconst H2_FONT_SCALE = 1.5;\nconst H3_FONT_SCALE = 1.2;\n\nconst NORMAL_FONT = \"'UnifrakturCook', cursive\";\nconst HEADING_FONT = \"'UnifrakturCook', cursive\"; // cspell:disable-line\nconst EMOJI_SPRITE_FONT = \"'UnifrakturCook', cursive\"; // cspell:disable-line\n\n/**\n * @typedef {Object} TextInfo\n * @property {number} size\n * @property {string} fontName\n */\n/**\n * Named styles.\n * @type {Object.<String, TextInfo>}\n */\nconst textInfo = {\n  normal: { size: 15, fontName: NORMAL_FONT },\n  h1: { size: 30, fontName: HEADING_FONT },\n  h2: { size: 22, fontName: HEADING_FONT },\n  h3: { size: 18, fontName: HEADING_FONT },\n  emojiSprite: { size: 18, fontName: EMOJI_SPRITE_FONT },\n};\n\n/**\n * Sets up font sizes based on the design display width.\n * The actual normal font size is worked out using the CSS formula normally\n * based on the display width.\n * @param {number} designWidth\n */\nexport function initialise(designWidth) {\n  textInfo.normal.size = baseSize + 0.390625 * (designWidth / 100);\n  textInfo.h1.size = textInfo.normal.size * H1_FONT_SCALE;\n  textInfo.h2.size = textInfo.normal.size * H2_FONT_SCALE;\n  textInfo.h3.size = textInfo.normal.size * H3_FONT_SCALE;\n  textInfo.emojiSprite.size = designWidth / 10;\n}\n\n/**\n * Get font CSS for styleName.\n * @param {string} styleName - default, h1, h2, or h3. Defaults to default.\n * @returns {string}\n */\nexport function getCss(styleName) {\n  const info = textInfo[styleName] ?? textInfo['normal'];\n  return `${info.size}px ${info.fontName}`;\n}\n\n/**\n * Get the root font size. This is the size base on the design dimensions and is\n * the size as written to the canvas. It does not allow for any scaling of the\n * canvas by CSS.\n */\nexport function getRootFontSize() {\n  return textInfo.normal.size;\n}\n","/**\n * @file Functions for dealing with geometry\n *\n * @module utils/geometry\n */\n/**\n * License {@link https://opensource.org/license/mit/|MIT}\n *\n * Copyright 2024 Steve Butler\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the “Software”), to deal in\n * the Software without restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n * Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */\n\nimport * as maths from './maths.js';\n\n/**\n * Simple 2D dimension\n * @typedef {Object} Dims2D\n * @property {number} width\n * @property {number} height\n */\n\n/**\n * Simple encapsulation of a Point\n */\nexport class Point {\n  /** @type {number}*/\n  x;\n  /** @type {number}*/\n  y;\n\n  /**\n   * Create point\n   * @param {number} x\n   * @param {number} y\n   */\n  constructor(x, y) {\n    this.x = x;\n    this.y = y;\n  }\n\n  /**\n   * Create a copy of a point.\n   * @param {Point} point\n   * @returns {Point}\n   */\n  static copy(point) {\n    return new Point(point.x, point.y);\n  }\n\n  /**\n   * Check if points are coincident.\n   * @returns {boolean}\n   */\n  coincident(point) {\n    return this.x === point.x && this.y === point.y;\n  }\n\n  /**\n   * Get angle to target using normal cartesian coordinates; i.e up is +ve y.\n   * @param {Point} targetPos\n   * @returns {number} angle in radians.\n   */\n  getCartesianAngleTo(targetPos) {\n    return Math.atan2(targetPos.y - this.y, targetPos.x - this.x);\n  }\n\n  /**\n   * Get angle to target using normal screen coordinates; i.e down is +ve y.\n   * @param {Point} targetPos\n   * @returns {number} angle in radians.\n   */\n  getScreenAngleTo(targetPos) {\n    return Math.atan2(this.y - targetPos.y, targetPos.x - this.x);\n  }\n\n  /**\n   * String representation which can be used as key in maps.\n   * @returns {string}\n   */\n  toString() {\n    return `(${this.x},${this.y})`;\n  }\n\n  /**\n   * Test if the position is at the same point, rounded to integer as this.\n   * Rotation is ignored.\n   * @param {Position} position\n   * @returns {boolean}\n   */\n  isCoincident(position) {\n    return (\n      Math.round(this.x) === Math.round(position.x) &&\n      Math.round(this.y) === Math.round(position.y)\n    );\n  }\n\n  /**\n   * Test if points are adjacent, i.e within one\n   * @param {Point} other\n   * @param {number} distance\n   * @returns {boolean}\n   */\n  isOtherClose(other, distance) {\n    const dx = this.x - other.x;\n    const dy = this.y - other.y;\n    return Math.pow(dx, 2) + Math.pow(dy, 2) <= Math.pow(distance, 2);\n  }\n  /**\n   * Get the absolute orthogonal separation between this and the other point.\n   * The separation is calculated by move in the x direction followed by the\n   * y direction. I.e. no diagonal movement.\n   * @param {Point} other\n   * @returns {number}\n   */\n  getOrthoSeparation(other) {\n    return Math.abs(this.x - other.x) + Math.abs(this.y - other.y);\n  }\n}\n/**\n * Velocity class\n */\nexport class Velocity {\n  /** x velocity @type {number} */\n  x;\n  /** y velocity @type {number} */\n  y;\n  /** rotational velocity @type {number} */\n  rotation;\n\n  /**\n   *\n   * @param {number} velX\n   * @param {number} velY\n   * @param {number} velRot\n   */\n  constructor(velX, velY, velRot) {\n    this.x = velX;\n    this.y = velY;\n    this.rotation = velRot;\n  }\n\n  /**\n   * Get the angle in radians counterclockwise from x axis. This uses cartesian\n   * coordinates where the y axis is positive upwards.\n   * @returns {number}\n   */\n  getCartesianDirection() {\n    return Math.atan2(this.y, this.x);\n  }\n  /**\n   * Get the angle in radians counterclockwise from x axis. This uses screen\n   * coordinates where the y axis is positive downwards..\n   * @returns {number}\n   */\n  getScreenDirection() {\n    return Math.atan2(-this.y, this.x);\n  }\n\n  /**\n   * Test if velocity effectively zero.\n   * @param {number} tolerance\n   * @returns {boolean}\n   */\n  isZero(tolerance) {\n    return (\n      maths.floatIsZero(this.x, tolerance) &&\n      maths.floatIsZero(this.y, tolerance)\n    );\n  }\n}\n\n/**\n * Acceleration class\n */\nexport class Acceleration {\n  /** x velocity @type {number} */\n  x;\n  /** y velocity @type {number} */\n  y;\n  /** rotational velocity @type {number} */\n  rotation;\n\n  /**\n   *\n   * @param {number} velX\n   * @param {number} velY\n   * @param {number} velRot\n   */\n  constructor(velX, velY, velRot) {\n    this.x = velX;\n    this.y = velY;\n    this.rotation = velRot;\n  }\n}\n\n/**\n * Simple 2D position. Similar to point but including rotation.\n * @implements {Point}\n */\nexport class Position extends Point {\n  /** type {number} */\n  rotation;\n\n  /**\n   *\n   * @param {number} x\n   * @param {number} y\n   * @param {number} rotation\n   */\n  constructor(x, y, rotation) {\n    super(x, y);\n    this.y = y;\n    this.rotation = rotation;\n  }\n\n  /**\n   * Create a Position from a Point.\n   * @param {Point} point\n   * @returns {Position}\n   */\n  static fromPoint(point) {\n    return new Position(point.x, point.y, 0);\n  }\n\n  /**\n   * Create copy\n   * @param {Position} position\n   */\n  static copy(position) {\n    return new Position(position.x, position.y, position.rotation);\n  }\n\n  /** Get a new position representing this position relative to a new origin.\n   * @param {Position} origin\n   * @returns {Position}\n   */\n  getRelativeTo(origin) {\n    return new Position(\n      this.x - origin.x,\n      this.y - origin.y,\n      this.rotation - origin.rotation\n    );\n  }\n\n  /**\n   * Test that both x and y coordinates are within the length.\n   * @param {Position} targetPos\n   * @param {number} length\n   * @returns {boolean}\n   */\n  withinSquare(targetPos, length) {\n    return (\n      Math.abs(targetPos.x - this.x) < length &&\n      Math.abs(targetPos.y - this.y) < length\n    );\n  }\n}\n\n/**\n * @typedef {Object} RectangleBounds\n * @property {number} x;\n * @property {number} y;\n * @property {number} right;\n * @property {number} bottom;\n * @property {number} width;\n * @property {number} height;\n */\n\n/**\n * Simple rectangle.\n */\nexport class Rectangle {\n  /** @type {number} */\n  x;\n  /** @type {number} */\n  y;\n  /** @type {number} */\n  width;\n  /** @type {number} */\n  height;\n\n  /**\n   *\n   * @param {number} x\n   * @param {number} y\n   * @param {number} width\n   * @param {number} height\n   */\n  constructor(x, y, width, height) {\n    this.x = x;\n    this.y = y;\n    this.width = width;\n    this.height = height;\n  }\n\n  /** Get the bottom right\n   * @returns {Point}\n   */\n  getBottomRight() {\n    return new Point(this.x + this.width, this.y + this.height);\n  }\n\n  /** Get the top left\n   * @returns {Point}\n   */\n  getTopLeft() {\n    return new Point(this.x, this.y);\n  }\n  /**\n   * Test if this overlaps another rectangle\n   * @param {Rectangle} otherRect\n   * @returns {boolean} true if overlapping.\n   */\n  overlaps(otherRect) {\n    const myBR = this.getBottomRight();\n    const otherRectBR = otherRect.getBottomRight();\n    const noOverlap =\n      otherRect.x > myBR.x ||\n      otherRect.y > myBR.y ||\n      otherRectBR.x < this.x ||\n      otherRectBR.y < this.y;\n    return !noOverlap;\n  }\n\n  /**\n   * Test if this rectangle contains a point\n   * @param {Point | Position} point\n   * @returns {boolean} - true if point contained\n   */\n  containsPoint(point) {\n    return (\n      point.x >= this.x &&\n      point.x <= this.x + this.width &&\n      point.y >= this.y &&\n      point.y <= this.y + this.height\n    );\n  }\n  /**\n   * Test if this rectangle contains a coordinate\n   * @param {number} x\n   * @param {number} y\n   * @returns {boolean} - true if point contained\n   */\n  containsCoordinate(x, y) {\n    return (\n      x >= this.x &&\n      x <= this.x + this.width &&\n      y >= this.y &&\n      y <= this.y + this.height\n    );\n  }\n  /**\n   * Test if this rectangle equals another.\n   * @param {Rectangle} otherRect\n   * @returns {boolean}\n   */\n  equals(other) {\n    return (\n      this.x === other.x &&\n      this.y === other.y &&\n      this.width === other.width &&\n      this.height === other.height\n    );\n  }\n}\n\n/** Min point */\nexport const MIN_POINT = new Point(Number.MIN_VALUE, Number.MIN_VALUE);\n/** Max point */\nexport const MAX_POINT = new Point(Number.MAX_VALUE, Number.MAX_VALUE);\n","/**\n * @file Maths utilities\n *\n * @module utils/maths\n */\n/**\n * License {@link https://opensource.org/license/mit/|MIT}\n *\n * Copyright 2024 Steve Butler\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the “Software”), to deal in\n * the Software without restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n * Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */\n\n/**\n * Common angles\n */\nconst Radians = {\n  DEG_22_5: (1 / 8) * Math.PI,\n  DEG_45: (2 / 8) * Math.PI,\n  DEG_67_5: (3 / 8) * Math.PI,\n  DEG_90: (4 / 8) * Math.PI,\n  DEG_112_5: (5 / 8) * Math.PI,\n  DEG_135: (6 / 8) * Math.PI,\n  DEG_157_7: (7 / 8) * Math.PI,\n  DEG_180: Math.PI,\n};\n\n/**\n * Clip a value between min and max inclusive.\n * @param {number} value\n * @param {number} min\n * @param {number} max\n * @returns {number}\n */\nexport function clip(value, min, max) {\n  if (value < min) {\n    return min;\n  } else if (value > max) {\n    return max;\n  }\n  return value;\n}\n\n/** Enumeration of travel directions\n * @enum {number}\n */\nexport const CompassEightPoint = {\n  NONE: -1,\n  N: 0,\n  NE: 1,\n  E: 2,\n  SE: 3,\n  S: 4,\n  SW: 5,\n  W: 6,\n  NW: 7,\n};\n\n/**\n * Convert an angle to an eight point compass direction.\n * Converts the angle to a compass direction.\n * @param {number} angle - -PI/2 to +PI/2. This is the same range as values returned\n * from the standard Math trigonometric functions. Note that this expects the\n * angle to be based on cartesian coordinates, +y upwards. For angles calculated\n * using screen coordinates, +y downwards, you should negate the angle before\n * calling.\n * @param {number} angle - -PI/2 to +PI/2\n * @returns {number} compass point. From CompassEightPoint enum.\n */\nexport function angleToFourPointCompass(angle) {\n  const absAngle = Math.abs(angle);\n  if (absAngle <= Radians.DEG_45) {\n    return CompassEightPoint.E;\n  }\n  if (absAngle <= Radians.DEG_135) {\n    return Math.sign(angle) > 0 ? CompassEightPoint.N : CompassEightPoint.S;\n  }\n  return CompassEightPoint.W;\n}\n/**\n * Convert an angle to an eight point compass direction.\n * Converts the angle to a compass direction.\n * @param {number} angle - -PI/2 to +PI/2. This is the same range as values returned\n * from the standard Math trigonometric functions. Note that this expects the\n * angle to be based on cartesian coordinates, +y upwards. For angles calculated\n * using screen coordinates, +y downwards, you should negate the angle before\n * calling.\n * @param {number} angle - -PI/2 to +PI/2\n * @returns {number} compass point. From CompassEightPoint enum.\n */\nexport function angleToEightPointCompass(angle) {\n  const absAngle = Math.abs(angle);\n  if (absAngle <= Radians.DEG_22_5) {\n    return CompassEightPoint.E;\n  }\n  if (absAngle <= Radians.DEG_67_5) {\n    return Math.sign(angle) > 0 ? CompassEightPoint.NE : CompassEightPoint.SE;\n  }\n  if (absAngle <= Radians.DEG_112_5) {\n    return Math.sign(angle) > 0 ? CompassEightPoint.N : CompassEightPoint.S;\n  }\n  if (absAngle <= Radians.DEG_157_7) {\n    return Math.sign(angle) > 0 ? CompassEightPoint.NW : CompassEightPoint.SW;\n  }\n  return CompassEightPoint.W;\n}\n\n/**\n * Get random number between min and max, inclusive\n * @param {number} min - inclusive minimum\n * @param {number} max - exclusive maximum\n * @returns {number}\n */\nexport function getRandomInt(min, max) {\n  const minCeiled = Math.ceil(min);\n  const maxFloored = Math.floor(max);\n  return Math.floor(Math.random() * (maxFloored - minCeiled) + minCeiled);\n}\n\n/**\n * Get a random array entry.\n * @param {*[]} array\n * @returns {*}\n */\nexport function getRandomMember(array) {\n  const index = getRandomInt(0, array.length);\n  return array[index];\n}\n\n/**\n * Get random number between min and max, inclusive\n * @param {number} min - inclusive minimum\n * @param {number} max -inclusive maximum\n * @returns {number}\n */\nexport function getRandomIntInclusive(min, max) {\n  const minCeiled = Math.ceil(min);\n  const maxFloored = Math.floor(max);\n  return Math.floor(Math.random() * (maxFloored - minCeiled + 1) + minCeiled);\n}\n\n/**\n * Test if float equals another float.\n * @param {number} valueA\n * @param {number} valueB\n * @param {number} tolerance\n * @returns {boolean}\n */\nexport function floatsAreEqual(valueA, valueB, tolerance) {\n  return valueA - valueB < tolerance;\n}\n\n/**\n * Test if float is almost zero.\n * @param {number} value\n * @param {number} tolerance\n * @returns {boolean}\n */\nexport function floatIsZero(value, tolerance) {\n  return Math.abs(value) < tolerance;\n}\n\n/**\n * Safe version of parseInt which never returns NaN\n * @param {number} value\n * @param {number} [defValue = 0]\n * @param {number} [radix]\n * @returns {number} result of parseInt or defValue if NaN\n */\nexport function safeParseInt(value, defValue = 0, radix) {\n  const result = parseInt(value, radix);\n  return Number.isNaN(result) ? defValue : result;\n}\n\n/**\n * Safe version of parseIntFloat which never returns NaN\n * @param {number} value\n * @param {number} [defValue = 0]\n * @returns {number} result of parseFloat or defValue if NaN\n */\nexport function safeParseFloat(value, defValue = 0) {\n  const result = parseFloat(value);\n  return Number.isNaN(result) ? defValue : result;\n}\n","/**\n * @file World limitations\n *\n * @module game/world\n */\n/**\n * License {@link https://opensource.org/license/mit/|MIT}\n *\n * Copyright 2024 Steve Butler\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the “Software”), to deal in\n * the Software without restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n * Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */\n\nimport SCREEN from './screen.js';\nimport LOG from '../logging.js';\n\n/**\n * @type {TileMap}\n */\nlet worldTileMap;\n\n/**\n * @type {Map<string, Sprite>}\n */\nconst actors = new Map();\n\n/**\n * @type {Map<string, Sprite>}\n */\nconst artefacts = new Map();\n\n/**\n * Sprites that do not interact\n * @type {Map<string, Sprite>}\n */\nconst passiveSprites = new Map();\n\n/**\n * Sprites that grow or spawn. These are drawn first.\n * @type {Map<string, Sprite>}\n */\nconst organicActors = new Map();\n\n/**\n * Get the world dimensions. The dimensions are based on the worldTileMap size.\n * It defaults to the screen dimensions if no map has been set.\n * @returns {{number, number}} width and height\n */\nfunction getWorldDims() {\n  return worldTileMap\n    ? worldTileMap.getDimensions()\n    : SCREEN.getCanvasDimensions();\n}\n\n/**\n * Add a actor to the world.\n * @param {module:players/actors~Actor}\n */\nfunction addActor(target) {\n  if (target.isOrganic()) {\n    organicActors.set(target, target);\n  } else {\n    actors.set(target, target);\n  }\n  worldTileMap.moveTileOccupancyGridPoint(\n    target,\n    null,\n    worldTileMap.worldPointToGrid(target.position)\n  );\n}\n\n/**\n * Remove actor from the world.\n * @param {module:players/actors~Actor}\n */\nfunction removeActor(target) {\n  const gridPoint = worldTileMap.worldPointToGrid(target.position);\n  worldTileMap.deleteOccupancyOfGridPoint(target, gridPoint);\n  if (target.isOrganic()) {\n    organicActors.delete(target);\n  } else {\n    actors.delete(target);\n  }\n}\n\n/**\n * Add a artefact to the world.\n * @param {module:players/actors~Actor}\n */\nfunction addArtefact(target) {\n  artefacts.set(target, target);\n  worldTileMap.moveTileOccupancyGridPoint(\n    target,\n    null,\n    worldTileMap.worldPointToGrid(target.position)\n  );\n}\n/**\n * Remove artefact from the world.\n * @param {module:players/actors~Actor}\n */\nfunction removeArtefact(target) {\n  const gridPoint = worldTileMap.worldPointToGrid(target.position);\n  worldTileMap.deleteOccupancyOfGridPoint(target, gridPoint);\n  artefacts.delete(target);\n}\n\n/**\n * Add effect sprite\n * @param {Sprite} sprite\n */\nfunction addPassiveSprite(sprite) {\n  passiveSprites.set(sprite, sprite);\n}\n\n/**\n * Add effect sprite\n * @param {Sprite} sprite\n */\nfunction removePassiveSprite(sprite) {\n  passiveSprites.delete(sprite);\n}\n\n/**\n * Set the tile map for the world.\n * @param {TileMap}\n */\nfunction setTileMap(tileMap) {\n  worldTileMap = tileMap;\n}\n\n/**\n * Get the tile map for the world.\n * @returns {TileMap}\n */\nfunction getTileMap() {\n  return worldTileMap;\n}\n\n/**\n * Remove the tile map from the world.\n * @param {TileMap}\n */\nfunction removeTileMap() {\n  worldTileMap = null;\n}\n\n/**\n * Clear the map and all actors.\n */\nfunction clearAll() {\n  organicActors.forEach((actor) => removeActor(actor));\n  actors.forEach((actor) => removeActor(actor));\n  artefacts.forEach((actor) => removeArtefact(actor));\n  passiveSprites.forEach((sprite) => removePassiveSprite(sprite));\n  removeTileMap();\n}\n\n/**\n * Update the world. This calls the update methods of the tile map and all sprites/\n * @param {number} deltaSeconds\n */\nfunction update(deltaSeconds) {\n  worldTileMap?.update(deltaSeconds);\n  organicActors.forEach((actor) => {\n    const oldGridPoint = worldTileMap.worldPointToGrid(actor.position);\n    actor.visible = worldTileMap.canHeroSeeGridPoint(oldGridPoint);\n    actor.update(deltaSeconds);\n    const newGridPoint = worldTileMap.worldPointToGrid(actor.position);\n    worldTileMap.moveTileOccupancyGridPoint(actor, oldGridPoint, newGridPoint);\n  });\n  artefacts.forEach((artefact) => {\n    const oldGridPoint = worldTileMap.worldPointToGrid(artefact.position);\n    artefact.visible = worldTileMap.canHeroSeeGridPoint(oldGridPoint);\n    artefact.update(deltaSeconds);\n    const newGridPoint = worldTileMap.worldPointToGrid(artefact.position);\n    worldTileMap.moveTileOccupancyGridPoint(\n      artefact,\n      oldGridPoint,\n      newGridPoint\n    );\n  });\n  actors.forEach((actor) => {\n    const oldGridPoint = worldTileMap.worldPointToGrid(actor.position);\n    actor.visible = worldTileMap.canHeroSeeGridPoint(oldGridPoint);\n    actor.update(deltaSeconds);\n    const newGridPoint = worldTileMap.worldPointToGrid(actor.position);\n    worldTileMap.moveTileOccupancyGridPoint(actor, oldGridPoint, newGridPoint);\n  });\n\n  passiveSprites.forEach((sprite) => sprite.update(deltaSeconds));\n}\n\n/**\n * Resolve a ui click\n * @param {module:ui/interactions~MappedPositions} positions - click coordinates in canvas and world coordinates.\n * @returns {boolean} true if resolved.\n */\nfunction resolveClick(positions) {\n  const tile = worldTileMap?.getTileAtWorldPoint(positions.world);\n  if (tile) {\n    tile.actionClick(positions.world);\n    return true;\n  }\n  return false;\n}\n\n/**\n * Resolve a context menu event\n * @param {module:ui/interactions~MappedPositions} positions - click coordinates in canvas and world coordinates.\n * @returns {boolean} true if resolved.\n */\nfunction resolveContextMenu(positions) {\n  const tile = worldTileMap.getTileAtWorldPoint(positions.world);\n  if (tile) {\n    tile.actionContextClick(positions.world);\n    return true;\n  }\n  return false;\n}\n\n/**\n * Resolve a cancel event\n * @param {module:ui/interactions~MappedPositions} positions - click coordinates in canvas and world coordinates.\n * @returns {boolean} true if resolved.\n */\nfunction resolveCancel(positionsUnused) {\n  return false;\n}\n\n/**\n * Get the actors\n * @returns {Map<Actor, Actor>}\n */\nfunction getActors() {\n  return actors;\n}\n\n/**\n * Get the organic actors\n * @returns {Map<Actor, Actor>}\n */\nfunction getOrganicActors() {\n  return organicActors;\n}\n\n/**\n * Get the artefacts\n * @returns {Map<Actor, Actor>}\n */\nfunction getArtefacts() {\n  return actors;\n}\n\n/**\n * World object singleton.\n */\nconst WORLD = {\n  addActor: addActor,\n  addArtefact: addArtefact,\n  addPassiveSprite: addPassiveSprite,\n  clearAll: clearAll,\n  getActors: getActors,\n  getOrganicActors: getOrganicActors,\n  getArtefacts: getArtefacts,\n  getTileMap: getTileMap,\n  getWorldDims: getWorldDims,\n  removeTileMap: removeTileMap,\n  resolveCancel: resolveCancel,\n  resolveClick: resolveClick,\n  resolveContextMenu: resolveContextMenu,\n  removeActor: removeActor,\n  removeArtefact: removeArtefact,\n  removePassiveSprite: removePassiveSprite,\n  setTileMap: setTileMap,\n  update: update,\n};\n\nexport default WORLD;\n","/**\n * @file Heads-up display. Unlike the world, this never pans and so positions are\n * locked to the canvas coordinates.\n *\n * @module hud/hud\n */\n/**\n * License {@link https://opensource.org/license/mit/|MIT}\n *\n * Copyright 2024 Steve Butler\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the “Software”), to deal in\n * the Software without restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n * Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */\n\nimport { Actor } from '../players/actors.js';\nimport { ImageSpriteCanvasRenderer } from '../utils/sprites/spriteRenderers.js';\nimport SCREEN from '../utils/game/screen.js';\nimport { Sprite } from '../utils/sprites/sprite.js';\nimport { Position } from '../utils/geometry.js';\nimport { Rectangle } from '../utils/geometry.js';\nimport { NavigationButtons } from './hudNavSet.js';\n\n/**\n * @type {Map<string, Sprite>}\n */\nconst actors = new Map();\n\n/** @type {boolean} */\nlet visible = false;\n\n/**\n * Add a button to the hud. If two callbacks are provided, an AnimatedImage\n * is required with two frames.\n * @param {SpriteBitmap | AnimatedImage} image\n * @param {module:ui/interactions~UiClickCallback} callbackOn\n * @param {module:ui/interactions~UiClickCallback} callbackOff\n * @returns {Actor}\n */\nfunction addButton(image, callbackOn, callbackOff) {\n  const actor = new Actor(\n    new Sprite({\n      renderer: new ImageSpriteCanvasRenderer(SCREEN.getContext2D(), image),\n    })\n  );\n\n  actors.set(actor, actor);\n  actor.setOnClick(() => {\n    if (!callbackOff) {\n      callbackOn();\n    } else if (image.getCurrentIndex() === 0) {\n      image.setCurrentIndex(1);\n      callbackOn();\n    } else {\n      image.setCurrentIndex(0);\n      callbackOff();\n    }\n  });\n  image.setCurrentIndex(0);\n  return actor;\n}\n\n/**\n * Add a momentary button to the hud. If two callbacks are provided, an AnimatedImage\n * is required with two frames.\n * @param {SpriteBitmap | AnimatedImage} image\n * @param {module:ui/interactions~UiClickCallback} callbackOn\n * @param {module:ui/interactions~UiClickCallback} callbackOff\n * @returns {Actor}\n */\nfunction addMomentaryButton(image, callbackOn, callbackOff) {\n  const actor = new Actor(\n    new Sprite({\n      renderer: new ImageSpriteCanvasRenderer(SCREEN.getContext2D(), image),\n    })\n  );\n\n  actors.set(actor, actor);\n  actor.setOnPointerDown(() => {\n    image.setCurrentIndex(1);\n    callbackOn?.();\n  });\n  actor.setOnPointerUp(() => {\n    image.setCurrentIndex(0);\n    callbackOff?.();\n  });\n  return actor;\n}\n\n/**\n * Remove sprite from the hud.\n * @param {module:utils/sprites/sprite~Sprite}\n */\nfunction removeButton(target) {\n  actors.delete(target);\n}\n\n/**\n * Clear the HUD\n */\nfunction clear() {\n  actors.clear();\n}\n\n/**\n * Update the world. This calls the update methods of the tile map and all sprites/\n * @param {number} deltaSeconds\n */\nfunction update(deltaSeconds) {\n  if (!visible) {\n    return;\n  }\n  actors.forEach((sprite) => {\n    const uiPos = Position.copy(sprite.position);\n    sprite.position = SCREEN.glassPositionToWorld(sprite.position);\n    sprite.update(deltaSeconds);\n    sprite.position = uiPos;\n  });\n}\n\n/** Debug function. */\nfunction borderHUD() {\n  const rect = SCREEN.getVisibleCanvasRect();\n  const context = SCREEN.getContext2D();\n  context.strokeStyle = 'green';\n  context.lineWidth = 4;\n  SCREEN.getContext2D().strokeRect(\n    rect.x + 5,\n    rect.y + 5,\n    rect.width - 10,\n    rect.height - 10\n  );\n}\n\n/**\n * Check if the click is in a actor.\n * @param {module:ui/interactions~MappedPositions} positions - canvas and world positions\n * @param {Actor} actor\n */\nfunction isHittingActor(positions, actor) {\n  const actorCanvasPos = SCREEN.glassPositionToWorld(actor.position);\n  let boundingBox = actor.sprite.getBoundingBox();\n  const canvasBox = new Rectangle(\n    actorCanvasPos.x - boundingBox.width / 2,\n    actorCanvasPos.y - boundingBox.height / 2,\n    boundingBox.width,\n    boundingBox.height\n  );\n\n  return canvasBox.containsCoordinate(positions.world.x, positions.world.y);\n}\n\n/**\n * Resolve a ui click\n * @param {module:ui/interactions~MappedPositions} positions - click in canvas and world coordinates.\n * @returns {boolean} true if resolved.\n */\nfunction resolveClick(positions) {\n  if (!visible) {\n    return false;\n  }\n  for (const [keyUnused, actor] of actors) {\n    if (isHittingActor(positions, actor)) {\n      actor.actionClick(actor, positions.canvas);\n      return true;\n    }\n  }\n  return false;\n}\n\n/**\n * Resolve a pointer down\n * @param {module:ui/interactions~MappedPositions} positions - click in canvas and world coordinates.\n * @returns {boolean} true if resolved.\n */\nfunction resolvePointerDown(positions) {\n  if (!visible) {\n    return false;\n  }\n  if (!visible) {\n    return false;\n  }\n  for (const [keyUnused, actor] of actors) {\n    if (isHittingActor(positions, actor)) {\n      actor.actionPointerDown(actor, positions.canvas);\n      return true;\n    }\n  }\n  return false;\n}\n\n/**\n * Resolve a ui pointer up event\n * @param {module:ui/interactions~MappedPositions} positions - click in canvas and world coordinates.\n * @returns {boolean} true if resolved.\n */\nfunction resolvePointerUp(positions) {\n  if (!visible) {\n    return false;\n  }\n  if (!visible) {\n    return false;\n  }\n  for (const [keyUnused, actor] of actors) {\n    if (isHittingActor(positions, actor)) {\n      actor.actionPointerUp(actor, positions.canvas);\n      return true;\n    }\n  }\n  return false;\n}\n\n/**\n * Resolve a context menu event.\n * @param {module:ui/interactions~MappedPositions} positions - click in canvas and world coordinates.\n * @returns {boolean} true if resolved.\n */\nfunction resolveContextMenu(positionsUnused) {\n  return false;\n}\n\n/**\n * Resolve a cancel event. For the HUD, a cancel event is treated the same as a pointer\n * up event.\n * @param {module:ui/interactions~MappedPositions} positions - click in canvas and world coordinates.\n * @returns {boolean} true if resolved.\n */\nfunction resolvePointerCancel(positions) {\n  return resolvePointerUp(positions);\n}\n\n/**\n * Set the visibility of the HUD.\n * @param {boolean} visibility - true to show.\n */\nfunction setVisible(visibility) {\n  visible = visibility;\n}\n\n/**\n * HUD object\n */\nconst HUD = {\n  addButton: addButton,\n  addMomentaryButton: addMomentaryButton,\n  clear: clear,\n  removeButton: removeButton,\n  update: update,\n  resolvePointerCancel: resolvePointerCancel,\n  resolveClick: resolveClick,\n  resolveContextMenu: resolveContextMenu,\n  resolvePointerDown: resolvePointerDown,\n  resolvePointerUp: resolvePointerUp,\n  setVisible: setVisible,\n};\n\nexport default HUD;\n","/**\n * @file Actor classes. Actors encapsulate a Sprite and represent moving objects\n * that can interact with the game.\n *\n * @module players/actors\n */\n/**\n * License {@link https://opensource.org/license/mit/|MIT}\n *\n * Copyright 2024 Steve Butler\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the “Software”), to deal in\n * the Software without restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n * Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */\n\nimport { AbstractInteraction } from '../dnd/interact.js';\nimport { UiClickHandler } from '../utils/ui/interactions.js';\nimport { ArtefactStoreManager, ArtefactType } from './artefacts.js';\nimport * as dice from '../utils/dice.js';\nimport LOG from '../utils/logging.js';\n\n/**\n * @typedef {Map<string, *>} Traits\n */\n\n/**\n * @typedef {Object} TraitsHolder\n * @property {Traits} traits\n */\n\nexport const ActorType = {\n  HERO: 0,\n  ENEMY: 1,\n  ARTEFACT: 2,\n  HIDDEN_ARTEFACT: 3,\n  TRADER: 4,\n  PROP: 5,\n};\n\n/**\n * @typedef {string} MoveTypeValue\n */\n/**\n * @enum {MoveTypeValue}\n */\nexport const MoveType = {\n  WANDER: 'WANDER',\n  HUNT: 'HUNT',\n  ORGANIC: 'ORGANIC',\n};\n\n/**\n * Convert a string to an ActorType\n * @param {string} str - actor type as string but excluding the ActorType.\n * E.g. HERO.\n * @returns {ActorType} null if invalid.\n */\nexport function strToActorType(str) {\n  const type = ActorType[str];\n  if (type === null || type === undefined) {\n    LOG.error(`Unrecognised actor type: ${str}`);\n  }\n  return type;\n}\n\n/**\n * Actor class. An actor is a sprite that exists in the world and can interact\n * with other actors.\n * @implements {TraitsHolder}\n */\nexport class Actor extends UiClickHandler {\n  /** @type {module:dnd/almanacs/almanacs~AlmanacEntry} almanacEntry */\n  almanacEntry;\n  /** @type {number} */\n  maxTilesPerMove;\n  /** @type {module:utils/sprites/sprite~Sprite} */\n  sprite;\n  /** @type {Traits} */\n  traits;\n  /** @type {AbstractInteraction} */\n  interaction;\n  /** @type {boolean} */\n  alive;\n  /** True if actor is disengaging from a fight. @type {boolean} */\n  disengaging;\n  /** @type {string} */\n  description;\n  /** @type {string} */\n  iconImageName;\n  /** @type {ArtefactStoreManager} */\n  storeManager;\n  /** @type {ActorType} */\n  type;\n\n  /**\n   * Create the actor.\n   * @param {module:utils/sprites/sprite~Sprite} sprite\n   * @param {number} [type = ActorType.ENEMY] type of actor. See @link {ActorType}\n   */\n  constructor(sprite, type = ActorType.ENEMY) {\n    super();\n    this.interaction = new AbstractInteraction();\n    this.sprite = sprite;\n    this.sprite.obstacle = true;\n    this.maxTilesPerMove = 1;\n    this.alive = true;\n    this.disengaging = false;\n    this.type = type;\n    this.storeManager = new ArtefactStoreManager(\n      type === ActorType.TRADER || type === ActorType.HIDDEN_ARTEFACT,\n      () => this.#updateTraitsFromStore()\n    );\n  }\n\n  /**\n   * Refresh DnD properties.\n   */\n  #updateTraitsFromStore() {\n    const items = this.storeManager.getAllEquippedArtefacts();\n    this.traits.utiliseArtefacts(items);\n  }\n\n  /**\n   * Test if this actor is the hero.\n   * @returns {boolean}\n   */\n  isHero() {\n    return this.type === ActorType.HERO;\n  }\n\n  /**\n   * Test if this actor is an enemy.\n   * @returns {boolean}\n   */\n  isEnemy() {\n    return this.type === ActorType.ENEMY;\n  }\n\n  /**\n   * Test if this actor is a trader.\n   * @returns {boolean}\n   */\n  isTrader() {\n    return this.type === ActorType.TRADER;\n  }\n\n  /**\n   * Test if this actor is a hidden artefact.\n   * @returns {boolean}\n   */\n  isHiddenArtefact() {\n    return this.type === ActorType.HIDDEN_ARTEFACT;\n  }\n\n  /** Set the underlying sprite visibility.\n   * @param {boolean}\n   */\n  set visible(value) {\n    this.sprite.visible = value;\n  }\n\n  /** Get the underlying sprite visibility.\n   * @returns {boolean}\n   */\n  get visible() {\n    return this.sprite.visible;\n  }\n  /**\n   * Get obstacle property. This comes from the underlying sprite.\n   * @param {boolean} value\n   */\n  get obstacle() {\n    return this.sprite.obstacle;\n  }\n\n  /**\n   * Set as obstacle. This sets the underlying sprite's property.\n   * @param {boolean} value\n   */\n  set obstacle(value) {\n    this.sprite.obstacle = value;\n  }\n\n  /**\n   * Get the actor's position.\n   * @returns {module:utils/geometry~Position}\n   */\n  get position() {\n    return this.sprite.position;\n  }\n\n  /**\n   * Set the actor's position.\n   * @param {module:utils/geometry~Position} value\n   */\n  set position(value) {\n    this.sprite.position = value;\n  }\n\n  /**\n   * Get the current motion.\n   * @returns {Velocity}\n   */\n\n  get velocity() {\n    return this.sprite.velocity;\n  }\n\n  /**\n   * Set the current Velocity. Invalid values become 0.\n   * @param {Velocity} nextVelocity\n   */\n  set velocity(nextVelocity) {\n    this.sprite.velocity = nextVelocity;\n  }\n\n  /**\n   * Get the sprite's image name.\n   * @returns {string} null if none.\n   */\n  getImageFilename() {\n    return this.sprite.getImageFilename();\n  }\n\n  /**\n   * Is this a wandering actor.\n   * @returns {boolean}\n   */\n  isWandering() {\n    return this?.traits.get('MOVE') === MoveType.WANDER;\n  }\n\n  /**\n   * Is this an organic actor.\n   * @returns {boolean}\n   */\n  isOrganic() {\n    return this?.traits.get('MOVE') === MoveType.ORGANIC;\n  }\n\n  /**\n   * Is this a prop.\n   * @returns {boolean}\n   */\n  isProp() {\n    return this?.type === ActorType.PROP;\n  }\n\n  /**\n   * Get the move type\n   * @returns {MoveTypeValue}\n   */\n  get moveType() {\n    return this?.traits.get('MOVE');\n  }\n\n  /**\n   * Test if the actor will interact.\n   * @returns {boolean}\n   */\n  willInteract() {\n    if (!this.interaction) {\n      return false;\n    }\n    if (this.isWandering()) {\n      return dice.rollDice(6) > 3;\n    }\n    return true;\n  }\n\n  /**\n   * Is the actor passable?\n   * @param {Actor} otherActor\n   * @returns {boolean}\n   */\n  isPassableByActor(otherActor) {\n    if (otherActor.isHero() && this.isHiddenArtefact()) {\n      return true;\n    } else {\n      return (!this.alive && !this.isProp()) || !this.obstacle;\n    }\n  }\n\n  /**\n   * Can it share a tile location with another actor?\n   * @param {Actor} otherActor\n   * @returns {boolean}\n   */\n  canShareLocationWithActor(otherActor) {\n    if (this.isOrganic()) {\n      return !otherActor.isOrganic() && !otherActor.isTrader(); // don't kill off traders.\n    } else if (this.isHiddenArtefact()) {\n      return otherActor.isHero();\n    } else if (!this.alive && otherActor.isHero()) {\n      return true;\n    } else {\n      return !this.obstacle;\n    }\n  }\n\n  /**\n   * Call update on the underlying sprite\n   * @param {number} deltaSeconds\n   */\n  update(deltaSeconds) {\n    this.sprite.update(deltaSeconds);\n  }\n\n  /**\n   * Handle the click but change the point to the sprite's position\n   */\n  actionClick(pointUnused) {\n    super.actionClick(this.sprite.position);\n  }\n  /**\n   * Handle the click but change the point to the sprite's position\n   */\n  actionContextClick(pointUnused) {\n    super.actionContextClick(this.sprite.position);\n  }\n\n  /**\n   * Handle the pointer up event but change the point to the sprite's position\n   */\n  actionPointerUp(pointUnused) {\n    super.actionPointerUp(this.sprite.position);\n  }\n  /**\n   * Handle the pointer down event but change the point to the sprite's position\n   */\n  actionPointerDown(pointUnused) {\n    super.actionPointerDown(this.sprite.position);\n  }\n}\n","/**\n * @file Handle fights and other interactions.\n *\n * @module dnd/interact\n */\n/**\n * License {@link https://opensource.org/license/mit/|MIT}\n *\n * Copyright 2024 Steve Butler (henspace.com).\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the “Software”), to deal in\n * the Software without restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n * Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */\nimport LOG from '../utils/logging.js';\nimport {\n  addFadingAnimatedImage,\n  addFadingImage,\n  addFadingText,\n} from '../utils/effects/transient.js';\nimport { Acceleration, Velocity } from '../utils/geometry.js';\nimport IMAGE_MANAGER from '../utils/sprites/imageManager.js';\nimport { PathFollower, moveActorToPosition } from '../utils/sprites/movers.js';\nimport { Point } from '../utils/geometry.js';\nimport UI from '../utils/dom/ui.js';\nimport SOUND_MANAGER from '../utils/soundManager.js';\nimport * as actorDialogs from '../dialogs/actorDialogs.js';\nimport { i18n } from '../utils/messageManager.js';\nimport * as dndAction from './dndAction.js';\nimport { ActorType } from '../players/actors.js';\nimport { ArtefactType } from '../players/artefacts.js';\nimport WORLD from '../utils/game/world.js';\nimport { Colours } from '../constants/canvasStyles.js';\n\n/**\n * Display rising text that fades.\n * @param {string} text\n * @param {module:utils/geometry~Position} position\n * @param {string} [color = 'white']\n */\nfunction displayRisingText(text, position, color = 'white') {\n  addFadingText(text, {\n    color: color,\n    delaySecs: 2,\n    lifetimeSecs: 3,\n    position: new Point(position.x, position.y),\n    velocity: new Velocity(0, -48, 0),\n    acceleration: new Acceleration(0, -96, 0),\n  });\n}\n/**\n * Apply poison damage to defender\n * @param {Artefact} poison\n * @param {Actor} victim\n * @param {number} damage\n * @returns {number} resulting HP of defender\n */\nfunction applyPoisonDamage(poison, victim, damage) {\n  SOUND_MANAGER.playEffect('POISONED');\n  if (damage >= 0) {\n    addFadingImage(IMAGE_MANAGER.getSpriteBitmap('skull.png'), {\n      delaySecs: 0,\n      lifetimeSecs: 1,\n      position: victim.position,\n      velocity: new Velocity(0, 0, 0),\n    });\n    return applyDamage(poison, victim, damage);\n  }\n}\n/**\n * Apply damage to defender\n * @param {Artefact | Actor} attacker\n * @param {Actor} defender\n * @param {number} damage\n * @returns {number} resulting HP of defender\n */\nfunction applyDamage(attacker, defender, damage) {\n  if (\n    !damage ||\n    !defender.alive ||\n    defender.isProp() ||\n    defender.isHiddenArtefact()\n  ) {\n    return 0;\n  }\n  let defenderHP = defender.traits.get('HP', 0);\n  defenderHP = Math.max(0, defenderHP - damage);\n  defender.traits.set('HP', defenderHP);\n  if (defenderHP === 0) {\n    SOUND_MANAGER.playEffect('DIE');\n    LOG.info('Killed actor.');\n    defender.interaction = new InteractWithCorpse(defender);\n    defender.alive = false;\n    if (attacker.isHero?.()) {\n      const change = attacker.traits.adjustForDefeatOfActor(defender);\n      let text;\n      if (change.level.now > change.level.was) {\n        text = i18n`LEVEL UP ${change.level.now}`;\n      } else if (change.exp.now > change.exp.was) {\n        text = `+${change.exp.now - change.exp.was} EXP`;\n      }\n      if (text) {\n        displayRisingText(\n          text,\n          attacker.position,\n          Colours.HP_TRANSIENT_TEXT_HERO\n        );\n      }\n    }\n  } else {\n    const textColor = defender.isHero()\n      ? Colours.HP_TRANSIENT_TEXT_HERO\n      : Colours.HP_TRANSIENT_TEXT_ENEMY;\n    displayRisingText(`-${damage} HP`, defender.position, textColor);\n  }\n  return defenderHP;\n}\n/** Dummy interaction that does nothing\n */\nexport class AbstractInteraction {\n  /** Actor owning the interaction @type {Actor} */\n  owner;\n\n  /**\n   *\n   * @param {Actor|Artefact} owner\n   */\n  constructor(owner) {\n    this.owner = owner;\n  }\n  /**\n   * @param {module:players/actors~Actor} reactor\n   * @returns {Promise}\n   */\n  enact(reactorUnused) {\n    return Promise.resolve();\n  }\n\n  /**\n   * @param {module:players/actors~Actor} enactor\n   * @returns {Promise}\n   */\n  react(enactorUnused) {\n    return Promise.resolve();\n  }\n\n  /**\n   * Test to see if the interaction can react.\n   * This should be overridden.\n   * @returns {boolean}\n   */\n  canReact() {\n    return false;\n  }\n\n  /**\n   * Test to see if the interaction can enact.\n   * This should be overridden.\n   * @returns {boolean}\n   */\n  canEnact() {\n    return false;\n  }\n\n  /**\n   * Test to see if actor can disengage from an interaction. Actors can\n   * always move away from an interaction. Disengaging is different in that\n   * following actions can be affected. The interaction will not do anything\n   * about the disengaging. This flag merely indicates whether callers should\n   * respect an attempt to disengage.\n   * @param {Actor} escaper\n   * @returns {boolean} true if can run\n   */\n  respectDisengage(escaperUnused) {\n    return false;\n  }\n}\n\n/**\n * Class to handle fights.\n * @implements {ActorInteraction}\n */\nexport class Fight extends AbstractInteraction {\n  /**\n   * Construct the interaction.\n   * @param {Actor} owner - parent actor.\n   */\n  constructor(owner) {\n    super(owner);\n  }\n  /**\n   * @override\n   * @returns {boolean}\n   */\n  canEnact() {\n    return true;\n  }\n  /**\n   * @override\n   * @returns {boolean}\n   */\n  canReact() {\n    return true;\n  }\n  /**\n   * @param {module:players/actors~Actor} reactor\n   * @returns {Promise}\n   */\n  enact(reactor) {\n    return this.#resolveAttackerDefender(this.owner, reactor);\n  }\n\n  /**\n   * @param {module:players/actors~Actor} enactor\n   * @returns {Promise}\n   */\n  react(enactor) {\n    return this.#resolveAttackerDefender(enactor, this.owner);\n  }\n\n  /**\n   * Test to see if actor can run away from an interaction. If the actor cannot,\n   * a failed message appears. The actual move is not undertaken\n   * @param {Actor} escaper\n   * @returns {boolean} true if can run\n   */\n  respectDisengage(escaperUnused) {\n    return true;\n  }\n\n  /**\n   * Display an attack\n   * @param {Actor} attacker\n   * @param {Actor} defender\n   * @returns {Promise}\n   */\n  #displayAttack(attacker, defender) {\n    const startPoint = Point.copy(attacker.position);\n    const attackPoint = new Point(\n      attacker.position.x + 0.2 * (defender.position.x - attacker.position.x),\n      attacker.position.y + 0.2 * (defender.position.y - attacker.position.y)\n    );\n    const pathModifier = new PathFollower({\n      path: [attackPoint, startPoint],\n      speed: 100,\n    });\n    return pathModifier.applyAsTransientToSprite(attacker.sprite);\n  }\n\n  /**\n   * Undertake attack. Note that the defender is not removed if its hit points\n   * hit zero.\n   * @param {Actor} attacker\n   * @param {Actor} defender\n   * @returns {Promise} fulfils to the defender's HP.\n   */\n  #undertakeAllAttacks(attacker, defender) {\n    let totalDamage = 0;\n    let successfulAttacks = 0;\n    attacker.traits.getAttacks().forEach((attack) => {\n      const damage = dndAction.getMeleeDamage(attack, defender);\n      if (damage > 0) {\n        successfulAttacks++;\n        totalDamage += damage;\n      }\n    });\n    return new Promise((resolve) => {\n      if (totalDamage <= 0) {\n        SOUND_MANAGER.playEffect('MISS');\n        addFadingImage(IMAGE_MANAGER.getSpriteBitmap('miss.png'), {\n          delaySecs: 0,\n          lifetimeSecs: 1,\n          position: defender.position,\n          velocity: new Velocity(0, 0, 0),\n        });\n        resolve();\n        return;\n      }\n      let hitSound = successfulAttacks > 1 ? 'DOUBLE PUNCH' : 'PUNCH';\n      let hitImage =\n        successfulAttacks > 1 ? 'blood-splat-twice.png' : 'blood-splat.png';\n\n      SOUND_MANAGER.playEffect(hitSound);\n      addFadingImage(IMAGE_MANAGER.getSpriteBitmap(hitImage), {\n        delaySecs: 0,\n        lifetimeSecs: 1,\n        position: defender.position,\n        velocity: new Velocity(0, 0, 0),\n      });\n      const defenderHP = applyDamage(attacker, defender, totalDamage);\n      resolve(defenderHP);\n    });\n  }\n\n  /**\n   * Resolve a fight.\n   * @param {Actor} attacker\n   * @param {Actor} defender\n   * @returns {Promise}\n   */\n  #resolveAttackerDefender(attacker, defender) {\n    return this.#displayAttack(attacker, defender).then(() =>\n      this.#undertakeAllAttacks(attacker, defender)\n    );\n  }\n}\n\n/**\n * Class to handle searching a corpse.\n * @implements {ActorInteraction}\n */\nexport class InteractWithCorpse extends AbstractInteraction {\n  /**\n   * Construct the interaction.\n   * @param {Actor} owner - parent actor.\n   */\n  constructor(owner) {\n    super(owner);\n  }\n\n  /**\n   * @override\n   * @returns {boolean}\n   */\n  canEnact() {\n    return false;\n  }\n  /**\n   * @override\n   * @returns {boolean}\n   */\n  canReact() {\n    return true;\n  }\n  /**\n   * Respond to a search\n   * @param {module:players/actors~Actor} reactor\n   * @returns {Promise}\n   */\n  async react(enactor) {\n    return actorDialogs.showPillageDialog(enactor, this.owner);\n  }\n}\n\n/**\n * Class to handle trading.\n */\nexport class Trade extends AbstractInteraction {\n  /**\n   * Construct the interaction.\n   * @param {Actor} owner - parent actor.\n   */\n  constructor(owner) {\n    super(owner);\n  }\n  /**\n   * @override\n   * @returns {boolean}\n   */\n  canEnact() {\n    return false;\n  }\n  /**\n   * @override\n   * @returns {boolean}\n   */\n  canReact() {\n    return true;\n  }\n  /**\n   * Trades are passive. Only the hero can initiate a trade.\n   * Note there is possibility for traders to block the exit, so\n   * the option to barge past is provided.\n   * @param {module:players/actors~Actor} enactor\n   * @returns {Promise}\n   */\n  react(enactor) {\n    return UI.showChoiceDialog(\n      i18n`DIALOG TITLE CHOICES`,\n      i18n`MESSAGE TRADE OR BARGE`,\n      [i18n`BUTTON TRADE`, i18n`BUTTON BARGE`]\n    ).then((choice) => {\n      if (choice === 0) {\n        return actorDialogs.showTradeDialog(enactor, this.owner);\n      } else {\n        return this.#swapPositions(enactor);\n      }\n    });\n  }\n\n  /**\n   * Swap position with another actor\n   * @param {Actor} them\n   * @returns {Promise} fulfils to undefined when complete.\n   */\n  #swapPositions(them) {\n    const myPosition = Point.copy(this.owner.position);\n    const theirPosition = Point.copy(them.position);\n    return Promise.all([\n      moveActorToPosition(them, myPosition),\n      moveActorToPosition(this.owner, theirPosition),\n    ]);\n  }\n}\n\n/**\n * Class to handle finding artefact\n */\nexport class FindArtefact extends AbstractInteraction {\n  /**\n   * Construct the interaction.\n   * @param {Actor} actor - parent actor.\n   */\n  constructor(actor) {\n    super(actor);\n  }\n  /**\n   * @override\n   * @returns {boolean}\n   */\n  canEnact() {\n    return false;\n  }\n  /**\n   * @override\n   * @returns {boolean}\n   */\n  canReact() {\n    return true;\n  }\n  /**\n   * Finding an artefact is a passive action and can only be initiated by another\n   * actor.\n   * @param {module:players/actors~Actor} enactor\n   * @returns {Promise}\n   */\n  async react(enactor) {\n    this.owner.alive = false;\n    const storageDetails = this.owner.storeManager.getFirstStorageDetails();\n    if (storageDetails) {\n      const artefact = storageDetails.artefact;\n      return actorDialogs.showArtefactDialog({\n        preamble: this.#createDiscoveryMessage(artefact),\n        currentOwner: this.owner,\n        prospectiveOwner: enactor,\n        storeType: storageDetails.store.storeType,\n        artefact: artefact,\n        actionType: actorDialogs.ArtefactActionType.FIND,\n      });\n    } else {\n      return UI.showOkDialog(i18n`MESSAGE NOTHING MORE TO DISCOVER`);\n    }\n  }\n\n  /**\n   * Create a message describing the action of discovery rather\n   * than the artefact itself.\n   * @param {*} foundArtefact\n   * @returns {string}\n   */\n  #createDiscoveryMessage(foundArtefact) {\n    if (this.owner.type === ActorType.HIDDEN_ARTEFACT) {\n      return i18n`MESSAGE FOUND HIDDEN ARTEFACT`;\n    } else if (foundArtefact.artefactType === ArtefactType.SPELL) {\n      // must be a prop and only engraved pillars currently supported.\n      return i18n`MESSAGE FOUND ENGRAVING`;\n    }\n    return i18n`MESSAGE FOUND GENERIC`;\n  }\n}\n\n/**\n * Class to handle poisoning\n */\nexport class Poison extends AbstractInteraction {\n  /**\n   * Construct the interaction.\n   * @param {Actor} owner - parent actor.\n   */\n  constructor(owner) {\n    super(owner);\n  }\n  /**\n   * @override\n   * @returns {boolean}\n   */\n  canEnact() {\n    return true;\n  }\n  /**\n   * @override\n   * @returns {boolean}\n   */\n  canReact() {\n    return false;\n  }\n  /**\n   * @param {module:players/actors~Actor} reactor\n   * @returns {Promise}\n   */\n  enact(reactor) {\n    const damage = dndAction.getPoisonDamage(this.owner, reactor);\n    applyPoisonDamage(this.owner, reactor, damage);\n\n    return Promise.resolve();\n  }\n}\n\n/**\n * Class to handle casting a spell.\n * @implements {ActorInteraction}\n */\nexport class CastSpell extends AbstractInteraction {\n  /**\n   * Construct the interaction.\n   * @param {Artefact} owner - parent spell.\n   */\n  constructor(owner) {\n    super(owner);\n  }\n\n  /**\n   * @override\n   * @returns {boolean}\n   */\n  canEnact() {\n    return false;\n  }\n  /**\n   * @override\n   * @returns {boolean}\n   */\n  canReact() {\n    return true;\n  }\n  /**\n   * Respond to a spell cast\n   * @param {module:players/actors~Actor} enactor\n   * @returns {Promise}\n   */\n  async react(enactor) {\n    const tileMap = WORLD.getTileMap();\n    const gridPoint = tileMap.worldPointToGrid(enactor.position);\n    const range = this.owner.traits.getValueInFeetInTiles('RANGE', 1);\n    const maxTargets = this.owner.traits.getInt('MAX_TARGETS', 999);\n    let hitTargets = 0;\n    const affectedTiles = tileMap.getRadiatingUpAndDown(gridPoint, range);\n\n    for (const tile of affectedTiles) {\n      if (hitTargets > maxTargets) {\n        break;\n      }\n      this.#displaySpell(tile.worldPoint);\n      tile.getOccupants().forEach((occupant) => {\n        if (occupant.isEnemy() || occupant.isTrader()) {\n          hitTargets++;\n          const damage = dndAction.getSpellDamage(\n            enactor,\n            occupant,\n            this.owner\n          );\n          applyDamage(enactor, occupant, damage);\n        }\n      });\n    }\n    if (this.owner.artefactType === ArtefactType.SPELL) {\n      enactor.storeManager.stash(this.owner); // spells have to be prepared again once used.\n    }\n    return Promise.resolve();\n  }\n\n  /**\n   * Display a spell attack at a point.\n   * @param {Point} worldPoint\n   */\n  #displaySpell(worldPoint) {\n    const spellType = this.owner.traits.get('EFFECT');\n    addFadingAnimatedImage(spellType.toLowerCase(), {\n      position: worldPoint,\n      delaySecs: 0,\n      lifetimeSecs: 1,\n    });\n  }\n}\n\n/**\n * Class to handle consuming food, which in this context includes drinks.\n * @implements {ActorInteraction}\n */\nexport class ConsumeFood extends AbstractInteraction {\n  /**\n   * Construct the interaction.\n   * @param {Artefact} owner - parent actor.\n   */\n  constructor(owner) {\n    super(owner);\n  }\n\n  /**\n   * @override\n   * @returns {boolean}\n   */\n  canEnact() {\n    return false;\n  }\n  /**\n   * @override\n   * @returns {boolean}\n   */\n  canReact() {\n    return true;\n  }\n  /**\n   * Respond to a consume instruction\n   * @param {module:players/actors~Actor} enactor\n   * @returns {Promise}\n   */\n  async react(enactor) {\n    const traits = this.owner.traits;\n    const foodType = traits.get('TYPE');\n    if (foodType === 'POISON') {\n      const damage = dndAction.getPoisonDamage(this.owner, enactor);\n      if (damage === 0) {\n        return UI.showOkDialog(i18n`MESSAGE RESISTED POISON`);\n      } else if (applyPoisonDamage(this.owner, enactor, damage) <= 0) {\n        return UI.showOkDialog(i18n`MESSAGE KILLED BY POISON`);\n      } else {\n        return UI.showOkDialog(i18n`MESSAGE IT'S POISON ${damage}`);\n      }\n    } else {\n      let gainHp = this.owner.traits.getInt('HP', 0);\n      if (gainHp === 0) {\n        return UI.showOkDialog(i18n`MESSAGE CONSUME BUT NO HP GAIN`);\n      }\n      const enactorHp = enactor.traits.getInt('HP');\n      const enactorHpMax = enactor.traits.getInt('HP_MAX');\n      if (!enactorHpMax) {\n        LOG.error(`Actor ${enactor.traits.get('NAME')} has no HP_MAX set`);\n        return Promise.resolve();\n      }\n      const shortfall = enactorHpMax - enactorHp;\n      if (shortfall < 0) {\n        LOG.error(\n          `Actor ${enactor.traits.get('NAME')} has HP higher than HP_MAX`\n        );\n        return Promise.resolve();\n      }\n      gainHp = Math.min(shortfall, gainHp);\n      if (gainHp === 0) {\n        return UI.showOkDialog(i18n`MESSAGE CONSUME BUT ALREADY FULL HP`);\n      }\n      const finalHp = enactorHp + gainHp;\n      const message =\n        foodType === 'POTION'\n          ? i18n`MESSAGE IT'S A HEALTHY DRINK ${gainHp}`\n          : i18n`MESSAGE IT'S HEALTHY ${gainHp}`;\n      return UI.showOkDialog(message).then(() =>\n        enactor.traits.set('HP', finalHp)\n      );\n    }\n  }\n}\n","/**\n * @file Create transient effects.\n *\n * @module utils/effects/transient\n */\n/**\n * License {@link https://opensource.org/license/mit/|MIT}\n *\n * Copyright 2024 Steve Butler (henspace.com).\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the “Software”), to deal in\n * the Software without restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n * Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */\n\nimport { Sprite } from '../sprites/sprite.js';\nimport {\n  ImageSpriteCanvasRenderer,\n  TextSpriteCanvasRenderer,\n} from '../sprites/spriteRenderers.js';\nimport SCREEN from '../game/screen.js';\nimport { TimeFader } from '../sprites/faders.js';\nimport WORLD from '../game/world.js';\nimport { VelocityMover } from '../sprites/movers.js';\nimport { AnimatedImage } from '../sprites/animation.js';\nimport { LoopMethod } from '../arrays/indexer.js';\nimport { Acceleration, Velocity } from '../geometry.js';\n\n/**\n * Create a transient sprite\n * @param {module:utils/sprites/spriteRenderers~SpriteCanvasRenderer} renderer\n * @param {Object} options\n * @param {Point} options.position\n * @param {Velocity} options.velocity\n * @param {number} options.delaySecs\n * @param {number} options.lifetimeSecs\n */\nfunction createFadingSprite(renderer, options) {\n  const sprite = new Sprite({\n    renderer: renderer,\n  });\n  sprite.position = options.position;\n  sprite.velocity = options.velocity ?? new Velocity(0, 0, 0);\n  sprite.acceleration = options.acceleration ?? new Acceleration(0, 0, 0);\n  WORLD.addPassiveSprite(sprite);\n  new TimeFader(options.delaySecs, options.lifetimeSecs, new VelocityMover())\n    .applyAsTransientToSprite(sprite, 20)\n    .then(() => WORLD.removePassiveSprite(sprite));\n}\n\n/**\n * Create a transient image\n * @param {module:utils/sprites/imageManager~SpriteBitmap} imageName\n * @param {Object} options\n * @param {Point} options.position\n * @param {Velocity} options.velocity\n * @param {Acceleration} options.acceleration\n * @param {number} options.delaySecs\n * @param {number} options.lifetimeSecs\n */\nexport function addFadingImage(image, options) {\n  createFadingSprite(\n    new ImageSpriteCanvasRenderer(SCREEN.getContext2D(), image),\n    options\n  );\n}\n\n/**\n * Create a transient Animated image. Images are assumed to be of the form\n * imageRootName00.png, imageRootName01.png etc.\n * @param {module:utils/sprites/imageManager~SpriteBitmap} imageRootName - no extension. png will be used.\n * @param {Object} options\n * @param {Point} options.position\n * @param {Velocity} options.velocity\n * @param {Acceleration} options.acceleration\n * @param {number} options.delaySecs\n * @param {number} options.lifetimeSecs\n */\nexport function addFadingAnimatedImage(imageRootName, options) {\n  const image = new AnimatedImage(\n    {\n      prefix: imageRootName,\n      suffix: '.png',\n      startIndex: 0,\n      padding: 2,\n    },\n    { framePeriodMs: 300, loopMethod: LoopMethod.REVERSE }\n  );\n  createFadingSprite(\n    new ImageSpriteCanvasRenderer(SCREEN.getContext2D(), image),\n    options\n  );\n}\n\n/**\n * Create transient text\n * @param {string} text\n * @param {Object} options\n * @param {string} options.color\n * @param {Point} options.position\n * @param {Velocity} options.velocity\n * @param {Acceleration} options.acceleration\n * @param {number} options.delaySecs\n * @param {number} options.lifetimeSecs\n */\nexport function addFadingText(text, options) {\n  createFadingSprite(\n    new TextSpriteCanvasRenderer(SCREEN.getContext2D(), text, {\n      color: options.color,\n    }),\n    options\n  );\n}\n","/**\n * @file Basic sprite control\n *\n * @module utils/sprites/sprite\n */\n/**\n * License {@link https://opensource.org/license/mit/|MIT}\n *\n * Copyright 2024 Steve Butler\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the “Software”), to deal in\n * the Software without restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n * Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */\nimport { Position, Rectangle, Velocity, Acceleration } from '../geometry.js';\nimport { SpriteCanvasRenderer } from './spriteRenderers.js'; //eslint-disable-line no-unused-vars\n\n/**\n * @typedef {function} SpriteClickHandler\n * @param {Sprite} target - the sprite that was clicked. This prevents the need\n * to use 'this' which may not be correct in the context.\n * @param {Point} relativePoint - the position in the Sprite relative to its top left corner\n * @param {Object} detail - extended event information.\n */\n\n/**\n * Encapsulated sprite.\n */\nexport class Sprite {\n  /** @type {Position}*/\n  #position = new Position(0, 0, 0);\n  /** @type {Velocity} */\n  #velocity = new Velocity(0, 0, 0);\n  /** @type {Acceleration} */\n  #acceleration = new Acceleration(0, 0, 0);\n  /** @type {SpriteCanvasRenderer[]} */\n  #renderer;\n  /** @type {AbstractModifier} */\n  modifier;\n  /** @type {boolean} */\n  visible;\n  /** @type {number} */\n  opacity;\n\n  /**\n   * @param {Object} options\n   * @param {SpriteCanvasRenderer } options.renderer - the renderer or renderers that render the sprite\n   * rather than the world.\n   */\n  constructor(options) {\n    this.#renderer = options?.renderer;\n    this.visible = true;\n    this.opacity = 1;\n  }\n  /**\n   * Get the current position.\n   * @returns {Position}\n   */\n  get position() {\n    return this.#position;\n  }\n\n  /**\n   * Set the current position. Invalid values become 0.\n   * @param {Position} nextPosition\n   */\n  set position(nextPosition) {\n    this.#position.x = this.valueOrZero(nextPosition.x);\n    this.#position.y = this.valueOrZero(nextPosition.y);\n    this.#position.rotation = this.valueOrZero(nextPosition.rotation);\n  }\n\n  /**\n   * Get the current motion.\n   * @returns {Velocity}\n   */\n\n  get velocity() {\n    return this.#velocity;\n  }\n\n  /**\n   * Get the current motion.\n   * @returns {Acceleration}\n   */\n\n  get acceleration() {\n    return this.#acceleration;\n  }\n\n  /**\n   * Set the current motion.\n   * @param {Acceleration} acceleration\n   */\n\n  set acceleration(acceleration) {\n    this.#acceleration = acceleration;\n  }\n\n  /**\n   * Set the current Velocity. Invalid values become 0.\n   * @param {Velocity} nextVelocity\n   */\n  set velocity(nextVelocity) {\n    this.#velocity.x = this.valueOrZero(nextVelocity.x);\n    this.#velocity.y = this.valueOrZero(nextVelocity.y);\n    this.#velocity.rotation = this.valueOrZero(nextVelocity.rotation);\n  }\n\n  /**\n   * Returns the value but converts non-numeric values to 0.\n   * @param {number} value\n   * @returns {number}\n   */\n  valueOrZero(value) {\n    return typeof value === 'number' ? value : 0;\n  }\n\n  /**\n   * Update the sprite. Calls the sprite's modifier and then renderer.\n   * @param {number} deltaSeconds - elapsed time.\n   */\n  update(deltaSeconds) {\n    if (this.modifier) {\n      this.modifier = this.modifier.update(this, deltaSeconds);\n    }\n    if (this.visible) {\n      this.#render();\n    }\n  }\n  /**\n   * Render the sprite by calling the sprite's renderer\n   */\n  #render() {\n    if (!this.#renderer) {\n      return;\n    }\n    if (!this.#renderer.forEach) {\n      this.#renderer.render(this.#position, this.opacity);\n    } else {\n      this.#renderer.forEach((renderer) =>\n        renderer.render(this.#position, this.opacity)\n      );\n    }\n  }\n\n  /** Get the bounding box for the sprite.\n   * @returns {geometry.Rectangle}\n   */\n  getBoundingBox() {\n    const boundsCanvas = this.#renderer.getBoundingBoxCanvas();\n    return new Rectangle(\n      this.position.x - boundsCanvas.width / 2,\n      this.position.y - boundsCanvas.height / 2,\n      boundsCanvas.width,\n      boundsCanvas.height\n    );\n  }\n\n  /**\n   * Get image file name used for passive renderers. If this is a multirenderer,\n   * the first one with a bitmap is returned.\n   * @returns {module:utils/sprites/imageManager~SpriteBitmap}\n   */\n  getImageFilename() {\n    if (!this.#renderer.forEach) {\n      return this.#renderer.getImageFilename();\n    } else {\n      for (const renderer of this.#renderer) {\n        const bitmap = renderer.getImageFilename();\n        if (bitmap) {\n          return bitmap;\n        }\n      }\n    }\n    return null;\n  }\n}\n","/**\n * @file Handle sprite rendering on the canvas\n *\n * @module utils/sprites/spriteRenderers\n */\n/**\n * License {@link https://opensource.org/license/mit/|MIT}\n *\n * Copyright 2024 Steve Butler\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the “Software”), to deal in\n * the Software without restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n * Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */\nimport LOG from '../logging.js';\nimport * as canvasText from '../text/text.js';\nimport * as fonts from '../text/fonts.js';\nimport * as debug from '../debug.js';\nimport SCREEN from '../game/screen.js';\nimport { MIN_POINT, MAX_POINT, Rectangle } from '../geometry.js';\nimport * as animation from './animation.js'; //eslint-disable-line no-unused-vars\n\n/**\n * @typedef {Object} RenderGeometry\n * @property {number} width\n * @property {number} height\n * @property {module:utils/geometry~Point} origin - origin relative to the centre\n */\n\n/**\n * Convert RenderGeometry to Rectangle\n * @param {module:utils/geometry~Position} position\n * @param {RenderGeometry} renderGeom\n * @returns {module:utils/geometry~Rectangle}\n */\nfunction renderGeometryToRect(position, renderGeom) {\n  return new Rectangle(\n    position.x - renderGeom.width / 2,\n    position.y - renderGeom.height / 2,\n    renderGeom.width,\n    renderGeom.height\n  );\n}\n\n/**\n * Base class for all sprite renderers.\n * @abstract\n */\nexport class SpriteCanvasRenderer {\n  /** @type {CanvasRenderingContext2D} */\n  _context;\n\n  /** @type {module:utils/geometry~Rectangle} */\n  _boundingBoxCanvas;\n\n  /**\n   * Construct base renderer\n   * @param {CanvasRenderingContext2D} context\n   */\n  constructor(context) {\n    this._context = context;\n    this._boundingBoxCanvas = new Rectangle(0, 0, 0, 0);\n  }\n\n  /**\n   * Return the name of image use to represent the sprite in passive situations\n   * such as dialogs. If there is no image, it returns null;\n   * @returns {string}\n   */\n  getImageFilename() {\n    return null;\n  }\n\n  /**\n   * Get the context. This is just provided to allow classes other than children\n   * to read the context. _context could be used but that is not the intent.\n   */\n  getContext() {\n    return this._context;\n  }\n\n  /**\n   * Get the axis aligned bounding box\n   * @returns {module:utils/geometry~Rectangle}\n   */\n  getBoundingBoxCanvas() {\n    return this._boundingBoxCanvas;\n  }\n  /**\n   * Render the sprite.\n   * @param {module:utils/geometry~Position} position in the world\n   * @param {number} opacity\n   */\n  render(position, opacity) {\n    position = SCREEN.worldPositionToCanvas(position);\n    if (!this.isOnCanvas(position)) {\n      return;\n    }\n    const currentAlpha = this._context.globalAlpha;\n    this._context.globalAlpha = currentAlpha * opacity;\n    const rotated = position.rotation;\n    if (rotated) {\n      this._context.save();\n      this._context.translate(position.x, position.y);\n      this._context.rotate(-position.rotation);\n      this._context.translate(-position.x, -position.y);\n    }\n    this._doRender(position);\n    if (rotated) {\n      this._context.restore();\n    }\n    if (debug.OPTIONS.spriteBoxes) {\n      this._context.strokeStyle = 'green';\n      this._context.strokeRect(\n        this._boundingBoxCanvas.x,\n        this._boundingBoxCanvas.y,\n        this._boundingBoxCanvas.width,\n        this._boundingBoxCanvas.height\n      );\n    }\n    this._context.globalAlpha = currentAlpha;\n  }\n  /**\n   * Render the sprite\n   * @param {module:utils/geometry~Position} position\n   */\n  _doRender(positionUnused) {\n    LOG.error('_doRender method should be overridden.');\n  }\n\n  /**\n   * Check if it will be on screen\n   * @param {module:utils/geometry~Position} position\n   * @returns {boolean} true if on screen.\n   */\n  isOnScreen(position) {\n    const rect = new Rectangle(\n      position.x - this._boundingBoxCanvas.width / 2,\n      position.y - this._boundingBoxCanvas.height / 2,\n      this._boundingBoxCanvas.width,\n      this._boundingBoxCanvas.height\n    );\n    return SCREEN.isOnScreen(rect);\n  }\n\n  /**\n   * Check if it will be on screen\n   * @param {module:utils/geometry~Position} position - this should be in canvas coordinates.\n   * @returns {boolean} true if on screen.\n   */\n  isOnCanvas(position) {\n    const rect = new Rectangle(\n      position.x - this._boundingBoxCanvas.width / 2,\n      position.y - this._boundingBoxCanvas.height / 2,\n      this._boundingBoxCanvas.width,\n      this._boundingBoxCanvas.height\n    );\n    return SCREEN.isOnCanvas(rect);\n  }\n}\n\n/**\n * Renderer for TextSprites.\n */\nexport class TextSpriteCanvasRenderer extends SpriteCanvasRenderer {\n  /** Name used to access font styles from the fonts.\n   * @type {string}\n   */\n  #styleName;\n\n  /** @type {string} */\n  #lastCalculatedText;\n  /** @type {RenderGeometry} */\n  #renderGeometry;\n\n  /** @type {string} */\n  text;\n  /** @type {string} */\n  color;\n\n  /**\n   * @param {CanvasRenderingContext2D} context\n   * @param {string} text\n   * @param {Object} options\n   * @param {string} [options.styleName = 'normal']\n   * @param {string} [options.color = 'white']\n   */\n  constructor(\n    context,\n    text,\n    options = { styleName: 'normal', color: 'white' }\n  ) {\n    super(context);\n    this.text = text;\n    this.color = options.color;\n    this.#styleName = options.styleName;\n  }\n\n  /**\n   * Calculate the renderGeometry of the text.\n   * @param {string} text\n   */\n  #calculateRenderGeometry(text) {\n    this._context.font = fonts.getCss(this.#styleName);\n    const metrics = this._context.measureText(text);\n    this.#renderGeometry = {\n      width: metrics.width,\n      height: metrics.fontBoundingBoxAscent + metrics.fontBoundingBoxDescent,\n      origin: {\n        x: -0.5 * metrics.width,\n        y:\n          0.5 *\n          (metrics.fontBoundingBoxAscent - metrics.fontBoundingBoxDescent),\n      },\n    };\n    this.#lastCalculatedText = text;\n  }\n\n  /**\n   * Render the sprite\n   * @param {module:utils/geometry~Position} position - this will have been adjusted to the screen.\n   */\n  _doRender(position) {\n    if (this.text !== this.#lastCalculatedText) {\n      this.#calculateRenderGeometry(this.text);\n    }\n    const renderPosition = {\n      x: position.x + this.#renderGeometry.origin.x,\n      y: position.y + this.#renderGeometry.origin.y,\n      rotation: position.rotation,\n    };\n\n    canvasText.writeText(\n      this._context,\n      this.#lastCalculatedText,\n      renderPosition,\n      { color: this.color, styleName: this.#styleName }\n    );\n\n    this._boundingBoxCanvas = renderGeometryToRect(\n      position,\n      this.#renderGeometry\n    );\n  }\n}\n\n/**\n * Renderer for rectangle sprites\n */\nexport class RectSpriteCanvasRenderer extends SpriteCanvasRenderer {\n  #width;\n  #height;\n  #halfWidth;\n  #halfHeight;\n  #fillStyle;\n  #strokeStyle;\n  #lineWidth;\n  /**\n   *\n   * @param {CanvasRenderingContext2D} context\n   * @param {Object} options\n   * @param {number} options.width\n   * @param {number} options.height\n   * @param {string} options.fillStyle\n   * @param {string} options.strokeStyle\n   */\n  constructor(context, options) {\n    super(context);\n    this.#width = options.width ?? 10;\n    this.#height = options.height ?? 10;\n    this.#halfWidth = this.#width / 2;\n    this.#halfHeight = this.#height / 2;\n    this.#fillStyle = options.fillStyle;\n    this.#strokeStyle = options.strokeStyle;\n    this.#lineWidth = options.lineWidth ?? 2;\n  }\n\n  /**\n   * Render the sprite.\n   * @param {module:utils/geometry~Position} position - this will have been adjusted to the screen.\n   */\n  _doRender(position) {\n    this._context.lineWidth = this.#lineWidth;\n    const x = position.x - this.#halfWidth;\n    const y = position.y - this.#halfHeight;\n    if (this.#fillStyle) {\n      this._context.fillStyle = this.#fillStyle;\n      this._context.fillRect(x, y, this.#width, this.#height);\n    }\n    if (this.#strokeStyle) {\n      this._context.strokeStyle = this.#strokeStyle;\n      this._context.strokeRect(x, y, this.#width, this.#height);\n    }\n\n    this._boundingBoxCanvas = new Rectangle(x, y, this.#width, this.#height);\n  }\n}\n\n/**\n * Renderer for percentage properties.\n */\nexport class GaugeSpriteCanvasRenderer extends SpriteCanvasRenderer {\n  #height;\n  #halfHeight;\n  #width;\n  #halfWidth;\n  #fillStyle;\n  #strokeStyle;\n  #offsetX;\n  #offsetY;\n  #fillHeight;\n  #halfFillHeight;\n\n  /**\n   *\n   * @param {CanvasRenderingContext2D} context\n   * @param {Object} options\n   * @param {number} options.width\n   * @param {number} options.height\n   * @param {string} options.fillStyle\n   * @param {string} options.strokeStyle\n   * @param {number} options.offsetX - sprite is offset from the normal sprite position.\n   * @param {number} options.offsetY - sprite is offset from the normal sprite position.\n   */\n  constructor(context, options) {\n    super(context);\n    this.#height = options.height;\n    this.#halfHeight = this.#height / 2;\n    this.#width = options.width;\n    this.#halfWidth = this.#width / 2;\n    this.#fillStyle = options.fillStyle;\n    this.#strokeStyle = options.strokeStyle;\n    this.#offsetX = options.offsetX ?? 0;\n    this.#offsetY = options.offsetY ?? 0;\n    this.setLevel(0);\n  }\n\n  /** Set the level of the gauge.\n   * @param {number} proportion - 0 to 1\n   */\n  setLevel(proportion) {\n    this.#fillHeight = Math.min(proportion, 1) * this.#height;\n    this.#halfFillHeight = 0.5 * this.#fillHeight;\n  }\n\n  /**\n   * Render the sprite.\n   * @param {module:utils/geometry~Position} position - this will have been adjusted to the screen.\n   */\n  _doRender(position) {\n    const topStroke = position.y - this.#halfHeight + this.#offsetY;\n    const topFill =\n      position.y + this.#halfHeight - this.#fillHeight + this.#offsetY;\n\n    const x = position.x - this.#halfWidth + this.#offsetX;\n    if (this.#fillStyle) {\n      this._context.fillStyle = this.#fillStyle;\n      this._context.fillRect(x, topFill, this.#width, this.#fillHeight);\n    }\n    if (this.#strokeStyle) {\n      this._context.strokeStyle = this.#strokeStyle;\n      this._context.strokeRect(x, topStroke, this.#width, this.#height);\n    }\n\n    this._boundingBoxCanvas = new Rectangle(\n      x,\n      topStroke,\n      this.#width,\n      this.#height\n    );\n  }\n}\n\n/** Special renderer for multiple gauges applied over a square tile */\nexport class MultiGaugeTileRenderer extends SpriteCanvasRenderer {\n  #gaugeRenderers;\n\n  /**\n   * The number of gauges is determined by the maximum length of the fill styles and\n   * stroke styles\n   * @param {CanvasRenderingContext2D} context\n   * @param {Object} options\n   * @param {number} options.tileSize\n   * @param {string[]} options.fillStyles\n   * @param {string[]} options.strokeStyles\n   */\n  constructor(context, options) {\n    super(context);\n    const nGauges = Math.max(\n      options.fillStyles.length ?? 0,\n      options.strokeStyles.length ?? 0\n    );\n    if (nGauges === 0) {\n      LOG.error('Attempt to create MultiGaugeTileRenderer with no gauges.');\n      return;\n    }\n    this.#gaugeRenderers = [];\n    const gaugeWidth = options.tileSize / nGauges;\n    let gaugePosX = -options.tileSize / 2 + gaugeWidth / 2;\n\n    for (let index = 0; index < nGauges; index++) {\n      this.#gaugeRenderers.push(\n        new GaugeSpriteCanvasRenderer(context, {\n          width: gaugeWidth,\n          height: options.tileSize,\n          fillStyle: options.fillStyles?.[index],\n          strokeStyle: options.strokeStyles?.[index],\n          offsetX: gaugePosX + gaugeWidth * index,\n          offsetY: 0,\n        })\n      );\n    }\n  }\n\n  /**\n   * Set the level of a gauge.\n   * @param {number} gaugeIndex\n   * @param {number} proportion - 0 to 1\n   */\n  setLevel(gaugeIndex, proportion) {\n    this.#gaugeRenderers[gaugeIndex]?.setLevel(proportion);\n  }\n\n  /**\n   * Render the sprite.\n   * @param {module:utils/geometry~Position} position - this will have been adjusted to the screen.\n   */\n  render(position) {\n    this.#gaugeRenderers?.forEach((renderer) => renderer.render(position));\n  }\n}\n\n/**\n * Renderer for Path Sprites.\n */\nexport class PathSpriteCanvasRenderer extends SpriteCanvasRenderer {\n  /** @type {RenderGeometry} */\n  #renderGeometry;\n\n  /** @type {Point[]} */\n  path;\n\n  /**\n   * Create a path renderer.\n   * @param {CanvasRenderingContext2D} context\n   * @param {Point[]} path\n   */\n  constructor(context, path) {\n    super(context);\n    this.path = path;\n  }\n\n  /** Calculate the rendering geometry.\n   * @param {Point[]} path\n   * @param {module:utils/geometry~Position} position\n   */\n  #calculateGeometry(path, positionUnused) {\n    let minPoint = MAX_POINT;\n    let maxPoint = MIN_POINT;\n    path.forEach((point) => {\n      minPoint.x = Math.min(minPoint.x, point.x);\n      minPoint.y = Math.min(minPoint.y, point.y);\n      maxPoint.x = Math.max(maxPoint.x, point.x);\n      maxPoint.y = Math.max(maxPoint.y, point.y);\n    });\n\n    this.#renderGeometry = {\n      width: maxPoint.x - minPoint.x,\n      height: maxPoint.y - minPoint.y,\n      origin: {\n        x: 0.5 * (minPoint.x + maxPoint.x),\n        y: 0.5 * (minPoint.y + maxPoint.y),\n      },\n    };\n  }\n  /**\n   * Render the sprite.\n   * @param {module:utils/geometry~Position} position - this will have been adjusted to the screen.\n   */\n  _doRender(position) {\n    if (this.path.length < 2) {\n      LOG.error('Path sprite needs at least 2 points.');\n      return;\n    }\n    if (!this.#renderGeometry) {\n      this.#calculateGeometry(this.path, position);\n    }\n\n    this._context.beginPath();\n    this._context.strokeStyle = 'blue';\n    this._context.moveTo(\n      this.path[0].x + position.x,\n      this.path[0].y + position.y\n    );\n    for (let n = 1; n < this.path.length; n++) {\n      this._context.lineTo(\n        this.path[n].x + position.x,\n        this.path[n].y + position.y\n      );\n    }\n    this._context.closePath();\n    this._context.stroke();\n\n    this._boundingBoxCanvas = renderGeometryToRect(\n      position,\n      this.#renderGeometry\n    );\n  }\n}\n\n/**\n * Renderer for Image Sprites.\n */\nexport class ImageSpriteCanvasRenderer extends SpriteCanvasRenderer {\n  /** @type {module:utils/sprites/imageManager~SpriteBitmap} */\n  #spriteBitmap;\n  /** @type {animation.KeyedAnimatedImages} */\n  #animation;\n\n  /**\n   * Create an image renderer.\n   * @param {CanvasRenderingContext2D} context\n   * @param {SpriteBitmap | animation.AnimatedImage | animation.KeyAnimatedImages} imageDefinition\n   */\n  constructor(context, imageDefinition) {\n    super(context);\n    if (imageDefinition?.getCurrentFrame) {\n      this.#animation = imageDefinition;\n      this.#spriteBitmap = this.#animation.getCurrentFrame();\n    } else {\n      this.#spriteBitmap = imageDefinition;\n    }\n    if (this.#spriteBitmap) {\n      this._boundingBoxCanvas.width = this.#spriteBitmap?.width ?? 0;\n      this._boundingBoxCanvas.height = this.#spriteBitmap?.height ?? 0;\n    } else {\n      LOG.error(`No image frame available for sprite.`, imageDefinition);\n    }\n  }\n\n  /**\n   * @override\n   */\n  getImageFilename() {\n    return this.#spriteBitmap.filename;\n  }\n\n  /**\n   * Render the sprite.\n   * @param {module:utils/geometry~Position} position - this will have been adjusted to the screen.\n   */\n  _doRender(position) {\n    if (!this.#spriteBitmap) {\n      return;\n    }\n    const frame = this.#animation\n      ? this.#animation.getCurrentFrame()\n      : this.#spriteBitmap;\n\n    this._boundingBoxCanvas.x = position.x - this._boundingBoxCanvas.width / 2;\n    this._boundingBoxCanvas.y = position.y - this._boundingBoxCanvas.height / 2;\n\n    this._context.drawImage(\n      frame.image,\n      position.x - frame.centreX,\n      position.y - frame.centreY\n    );\n  }\n}\n","/**\n * @file Canvas functions for handling text.\n *\n * @module utils/text/text\n */\n/**\n * License {@link https://opensource.org/license/mit/|MIT}\n *\n * Copyright 2024 Steve Butler\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the “Software”), to deal in\n * the Software without restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n * Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */\n\nimport * as fonts from './fonts.js';\n\n/**\n * @typedef {Object} TextBounds\n * @property {number} width - width of text\n * @property {number} width - height of text\n * @property {number} offsetTop - offset from text y position to top. This is negative.\n * @property {number} offsetCentreY - offset from text y position to centre. This is negative.\n */\n\n/**\n * Calculate the text bounds. Note that the box surrounds the entire text including\n * descenders.\n * @param {CanvasRenderingContext2D} context\n * @param {string} text\n * @returns {TextBounds}\n */\nexport function getTextBounds(context, text) {\n  const metrics = context.measureText(text);\n  return {\n    width: metrics.width,\n    height: metrics.fontBoundingBoxAscent + metrics.fontBoundingBoxDescent,\n    offsetTop: -metrics.fontBoundingBoxAscent,\n    offsetCentreY:\n      0.5 * (metrics.fontBoundingBoxDescent - metrics.fontBoundingBoxAscent),\n  };\n}\n\n/**\n * Wrap text based on https://codepen.io/nishiohirokazu/pen/jjNyye\n * @param {CanvasRenderingContext2D} context\n * @param {string} paragraph\n * @param {module:utils/geometry~Position} position\n * @param {Object} options\n * @param {number} options.xWrapPosition - position to wrap text.\n * @param {number} [options.lineSpacing = 1] - multiplier for line height. 1 shifts lines by the total font height.\n * @returns {number} the next line y position.\n */\nfunction wrapParagraph(context, paragraph, position, options) {\n  const words = paragraph.split(' ');\n  let x = position.x ?? 0;\n  let y = position.y ?? 0;\n  let maxLineLength = options.xWrapPosition - x;\n  let lineSpacing = options.lineSpacing ?? 1;\n  let line = '';\n  let lineHeight;\n\n  for (let n = 0; n < words.length; n++) {\n    let testLine = line + words[n] + ' ';\n    const bounds = getTextBounds(context);\n    if (!lineHeight) {\n      lineHeight = lineSpacing * bounds.height;\n    }\n    if (bounds.width > maxLineLength && n > 0) {\n      context.fillText(line, x, y);\n      line = words[n] + ' ';\n      y += lineHeight;\n    } else {\n      line = testLine;\n    }\n  }\n  context.fillText(line, x, y);\n  return y + lineHeight;\n}\n/**\n * Write text to the canvas. Text can be wrapped if required.\n * @param {CanvasRenderingContext2D} context\n * @param {*} text\n * @param {module:utils/geometry~Position} position\n * @param {Object} options\n * @param {number} [options.wrapAtX] - if null, undefined or zero, no wrapping occurs.\n * @param {number} [options.lineSpacing = 1] - multiplier for line height. 1 shifts lines by the total font height.\n * @param {string} [options.styleName] - named style. Picks up settings from module:utils/fonts\n * @param {string} [options.color] - color\n */\nexport function writeText(context, text, position, options) {\n  context.font = fonts.getCss(options?.styleName);\n  context.fillStyle = options?.color ?? 'white';\n  if (!options?.wrapAtX) {\n    context.fillText(text, position.x ?? 0, position.y ?? 0);\n  } else {\n    var paragraphs = text.split('\\n');\n    for (let n = 0; n < paragraphs.length; n++) {\n      options.y = wrapParagraph(context, paragraphs[n], position, options);\n    }\n  }\n}\n","/**\n * @file Debug utilities\n *\n * @module utils/debug\n */\n/**\n * License {@link https://opensource.org/license/mit/|MIT}\n *\n * Copyright 2024 Steve Butler\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the “Software”), to deal in\n * the Software without restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n * Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */\nexport const OPTIONS = {\n  /**\n   * Should sprite boxes be drawn.@type {boolean}\n   */\n  spriteBoxes: false,\n  /**\n   * Show framerate\n   */\n  showFps: true,\n};\n","/**\n * @file Animation support\n *\n * @module utils/sprites/animation\n */\n/**\n * License {@link https://opensource.org/license/mit/|MIT}\n *\n * Copyright 2024 Steve Butler\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the “Software”), to deal in\n * the Software without restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n * Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */\n\nimport IMAGE_MANAGER from './imageManager.js';\nimport GAME_CLOCK from '../time/clock.js';\nimport { Indexer } from '../arrays/indexer.js';\nimport LOG from '../logging.js';\nimport * as maths from '../maths.js';\n\n/**\n * Collection of SpriteBitmap objects\n */\nexport class AnimatedImage {\n  /** @type {boolean} */\n  playing;\n  /** @type {module:utils/sprites/imageManager~SpriteBitmap[]} */\n  #frames;\n  /** @type {Indexer} */\n  #indexer;\n  /** @type {number} */\n  #lastFrameCount;\n  /** offset used to randomise animations. @type {number} */\n  #timeOffset;\n\n  /** Period in ms for frame animations @type {number}*/\n  #framePeriodMs;\n  /**\n   * Construct animation.\n   * @param {Object | string} filenamePattern - if a string is parsed then the image is a single frame.\n   * @param {string} filenamePattern.prefix\n   * @param {number} filenamePattern.startIndex - starting index.\n   * @param {number} filePattern.padding - index is padded with leading zeros to padding length\n   * @param {string} filenamePattern.suffix\n   * @param {Object} options\n   * @param {number} options.framePeriodMs - period in ms for frame animations.\n   * @param {LoopMethod} options.loopMethod - method of looping animation.\n   */\n  constructor(filenamePattern, options) {\n    this.#frames = [];\n    this.#lastFrameCount = 0;\n    this.#timeOffset = maths.getRandomInt(0, 1000);\n    if (typeof filenamePattern === 'string') {\n      this.#frames.push(IMAGE_MANAGER.getSpriteBitmap(filenamePattern));\n      return;\n    }\n\n    this.#framePeriodMs = Math.max(1, options.framePeriodMs);\n\n    let index = filenamePattern.startIndex ?? 0;\n    let padding = filenamePattern.padding ?? 0;\n    let textureFrame;\n    let firstFrame = true;\n    do {\n      const fileName = `${filenamePattern.prefix}${index\n        .toString()\n        .padStart(padding, '0')}${filenamePattern.suffix}`;\n      if (firstFrame) {\n        textureFrame = IMAGE_MANAGER.getSpriteBitmap(fileName);\n        firstFrame = false;\n      } else {\n        textureFrame = IMAGE_MANAGER.getSpriteBitmap(fileName, { quiet: true });\n      }\n\n      if (textureFrame) {\n        this.#frames.push(textureFrame);\n      }\n      index++;\n    } while (textureFrame);\n    this.#indexer = new Indexer(this.#frames.length, options.loopMethod);\n    this.playing = true;\n  }\n\n  /**\n   * Get current frame\n   * @returns {module:utils/sprites/imageManager~SpriteBitmap}\n   */\n  getCurrentFrame() {\n    if (this.#frames.length > 1) {\n      if (this.playing) {\n        const frameCount = GAME_CLOCK.getFrameCount(\n          this.#framePeriodMs,\n          this.#timeOffset\n        );\n        if (frameCount !== this.#lastFrameCount) {\n          this.#indexer.advanceBy(frameCount - this.#lastFrameCount);\n          this.#lastFrameCount = frameCount;\n        }\n      }\n      return this.#frames[this.#indexer.index];\n    } else {\n      return this.#frames[0];\n    }\n  }\n\n  /**\n   * Manual movement of frames. Note this automatically switches off playing.\n   * @param {number} index - frame index. This will be clipped to the ends of the\n   * array.\n   */\n\n  setCurrentIndex(index) {\n    if (this.#frames.length > 1) {\n      this.playing = false;\n      this.#indexer.index = index;\n    }\n  }\n\n  /**\n   * Get the current index.\n   * @returns {number}\n   */\n  getCurrentIndex() {\n    if (this.#frames.length > 1) {\n      return this.#indexer.index;\n    } else {\n      return 0;\n    }\n  }\n}\n\n/**\n * Create keyed animated images.\n */\nexport class KeyedAnimatedImages {\n  /** @type {Object.<string, AnimatedImage>} */\n  #animatedImages;\n  /** @type {string} */\n  #currentImage;\n\n  /**\n   * Create the keyed animated image\n   * @param {string} key\n   * @param {AnimatedImage} animatedImage\n   */\n  constructor(key, animatedImage) {\n    this.#animatedImages = {};\n    this.#animatedImages[key] = animatedImage;\n    this.#currentImage = animatedImage;\n  }\n\n  /**\n   * Get the current image.\n   */\n  get image() {\n    return this.#currentImage;\n  }\n  /**\n   * Add image to available images.\n   * @param {string} key\n   * @param {AnimatedImage} animatedImage\n   */\n\n  addAnimatedImage(key, animatedImage) {\n    this.#animatedImages[key] = animatedImage;\n  }\n\n  /**\n   * Set the current animation key. Ignored if it does not exist.\n   * @param {string} key\n   */\n  setCurrentKey(key) {\n    //eslint-disable-next-line no-prototype-builtins\n    if (this.#animatedImages.hasOwnProperty(key)) {\n      this.#currentImage = this.#animatedImages[key];\n    } else {\n      LOG.error(`Attempt to set current key to nonexistent value of ${key}`);\n    }\n  }\n\n  /**\n   * Get current frame\n   * @returns {module:utils/sprites/imageManager~SpriteBitmap}\n   */\n  getCurrentFrame() {\n    return this.#currentImage.getCurrentFrame();\n  }\n}\n","/**\n * @file Load and manage images. The image manager is implemented as a singleton.\n *\n * @module utils/sprites/imageManager\n */\n/**\n * License {@link https://opensource.org/license/mit/|MIT}\n *\n * Copyright 2024 Steve Butler\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the “Software”), to deal in\n * the Software without restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n * Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */\n\nimport LOG from '../logging.js';\n\n/**\n * @typedef {Object} SpriteBitmap\n * @property {string} filename\n * @property {Image} image\n * @property {number} width\n * @property {number} height\n * @property {number} centreX\n * @property {number} centreY\n */\n\n/** @type {Map<string, SpriteBitmap>} */\nlet spriteMap = new Map();\n\n/**\n * Load an image\n * @param {URL} srcUrl - source URL\n * @returns {Promise} fulfils to @type {Image}.\n */\nfunction loadImage(srcUrl) {\n  return new Promise((resolve) => {\n    const image = new Image();\n    image.addEventListener('load', () => {\n      LOG.debug(`Image ${srcUrl} loaded.`);\n      resolve(image);\n    });\n    image.src = srcUrl;\n  });\n}\n\n/**\n * Load a number of images\n * @param {URL[]} srcUrls - array of source URLs\n * @returns {Promise} fulfils to @type {Image[]}.\n */\nfunction loadImages(srcUrls) {\n  const promises = [];\n  srcUrls.forEach((url) => promises.push(loadImage(url)));\n  return Promise.all(promises);\n}\n\n/**\n * Load sprite map.\n * @param {Object} spriteMapDef Sprite map definition from TexturePacker Array JSON file without multipack\n * @param {URL} textureUrl\n * @returns {Promise} fulfils to array of sprite map keys\n */\nfunction loadSpriteMap(spriteMapDef, textureUrl) {\n  return loadImage(textureUrl).then((image) =>\n    buildSpriteMap(spriteMapDef, image)\n  );\n}\n\n/**\n * Build the sprite map\n * @param {Object} spriteMapDef - map definition from texture mapper. Array JSON no multi pack.\n * @param {Image} texture - images providing texture for sprite map.\n * @returns {Promise} fulfils to array of sprite map keys.\n */\nfunction buildSpriteMap(spriteMapDef, texture) {\n  const promises = [];\n  spriteMapDef.frames.forEach((frame) => {\n    promises.push(\n      createImageBitmap(\n        texture,\n        frame.frame.x,\n        frame.frame.y,\n        frame.frame.w,\n        frame.frame.h\n      ).then((spriteImage) => {\n        const spriteBitmap = {\n          filename: frame.filename,\n          image: spriteImage,\n          width: frame.frame.w,\n          height: frame.frame.h,\n          centreX: frame.sourceSize.w / 2 - frame.spriteSourceSize.x,\n          centreY: frame.sourceSize.h / 2 - frame.spriteSourceSize.y,\n        };\n        spriteMap.set(frame.filename, spriteBitmap);\n        return frame.filename;\n      })\n    );\n  });\n\n  return Promise.all(promises);\n}\n\n/**\n * @param {string} filename\n * @param {Object} options\n * @param {string} options.fallback - image name to use if not found.\n * @param {boolean} options.quiet - if true, no message is logged if image not found.\n * @returns {SpriteBitmap} null if filename not found.\n */\nfunction getSpriteBitmap(filename, options) {\n  let result = spriteMap.get(filename);\n  if (!result && !options?.quiet) {\n    LOG.debug(`Failed to find image ${filename}.`);\n  }\n  if (!result && options?.fallback) {\n    result = spriteMap.get(options.fallback);\n    if (!result) {\n      LOG.debug(`Failed to find fallback image ${options.fallback}.`);\n    }\n  }\n  return result;\n}\n\n/**\n * Get image for an undefined bitmap\n * @returns {SpriteBitmap} null if filename not found.\n */\nfunction getUndefinedBitmap() {\n  return spriteMap.get('undefined.png');\n}\n\n/**\n * Singleton image manager.\n */\nconst IMAGE_MANAGER = {\n  getSpriteBitmap: getSpriteBitmap,\n  getUndefinedBitmap: getUndefinedBitmap,\n  loadImage: loadImage,\n  loadImages: loadImages,\n  loadSpriteMap: loadSpriteMap,\n};\n\nexport default IMAGE_MANAGER;\n","/**\n * @file Time utilities. Two clocks exist in the games: real and turn based.\n *\n * @module utils/time/clock\n */\n/**\n * License {@link https://opensource.org/license/mit/|MIT}\n *\n * Copyright 2024 Steve Butler\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the “Software”), to deal in\n * the Software without restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n * Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */\n\n/**\n * @type {DOMHighResTimeStamp}\n */\nlet currentTimeMs = 0;\n\n/**\n * @param {DOMHighResTimeStamp} timeNowMs\n */\nfunction updateTimeNow(timeNowMs) {\n  currentTimeMs = timeNowMs;\n}\n\n/**\n * Get a frame counter.\n * @param {number} framePeriodMs - time between frames\n * @param {number} [timeOffsetMs = 0] - offset to allow some randomisation\n * @returns {number}\n */\nfunction getFrameCount(framePeriodMs, timeOffsetMs = 0) {\n  return Math.floor((currentTimeMs + timeOffsetMs) / framePeriodMs);\n}\n\n/**\n *  Game clock as singleton.\n */\nconst GAME_CLOCK = {\n  updateTimeNow: updateTimeNow,\n  getFrameCount: getFrameCount,\n};\n\nexport default GAME_CLOCK;\n","/**\n * @file Simple indexer for arrays.\n *\n * @module utils/arrays/indexer\n */\n/**\n * License {@link https://opensource.org/license/mit/|MIT}\n *\n * Copyright 2024 Steve Butler\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the “Software”), to deal in\n * the Software without restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n * Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */\n\nimport * as maths from '../maths.js';\n\n/**\n * Looping methods\n * @enum {number}\n */\nexport const LoopMethod = {\n  WRAP: 0,\n  REVERSE: 1,\n  STOP: 2,\n};\n\n/**\n * Class to handle indexing through arrays. This allows an index to be incremented\n * so that it wraps at the end for a circular buffer, reverses for an oscillating\n * index or just stops at the end.\n */\nexport class Indexer {\n  /** @type {number} */\n  #length;\n  /** @type {number} */\n  #maxIndex;\n  /** @type {number} */\n  #loopMethod;\n  /** @type {number} */\n  #direction;\n  /** @type {number} */\n  #index;\n\n  /**\n   * @param {number} length\n   * @param {LoopMethod} loopMethod\n   */\n  constructor(length, loopMethod) {\n    this.#length = length;\n    this.#maxIndex = length - 1;\n    this.#loopMethod = loopMethod;\n    this.#direction = 1;\n    this.#index = 0;\n  }\n\n  /**\n   * Get current index.\n   */\n  get index() {\n    return this.#index;\n  }\n\n  /**\n   * Set current index. This will be clipped to a valid value.\n   */\n  set index(value) {\n    this.#index = maths.clip(value, 0, this.#length - 1);\n  }\n\n  /** Advance to the index.\n   * @param {number} distance - amount to move. This should be positive.\n   * @returns {number} the new index\n   */\n  advanceBy(distance) {\n    if (this.#length < 1) {\n      return this.#index;\n    }\n    switch (this.#loopMethod) {\n      case LoopMethod.WRAP:\n        return this.#advanceByWrap(distance);\n      case LoopMethod.REVERSE:\n        return this.#advanceByReverse(distance);\n      case LoopMethod.NONE:\n      default:\n        return this.#advanceByStop(distance);\n    }\n  }\n\n  /** Advance the index by distance. The direction is maintained by the indexer\n   * itself. Wrap at ends.\n   * @param {number} distance - amount to move. This should be positive.\n   * @returns {number} the new index\n   */\n  #advanceByWrap(distance) {\n    distance = distance % this.#length;\n    this.#index += distance % this.#length;\n    if (this.#index >= this.#length) {\n      this.#index = this.#index - this.#length;\n    }\n    return this.#index;\n  }\n\n  /** Advance the index by distance. The direction is maintained by the indexer\n   * itself. Reverse at ends.\n   * @param {number} distance - amount to move. This should be positive.\n   * @returns {number} the new index\n   */\n  #advanceByReverse(distance) {\n    const nFullTraversals = Math.floor(distance / this.#length);\n    if (nFullTraversals % 2) {\n      this.#direction = -this.#direction; // odd so reversing\n    }\n    distance = distance % this.#length;\n    if (this.#direction > 0) {\n      this.#index += distance;\n      const overshoot = this.#index - this.#maxIndex;\n      if (overshoot > 0) {\n        this.#index = this.#maxIndex - overshoot;\n        this.#direction = -1;\n      }\n    } else if (this.#direction < 0) {\n      this.#index -= distance;\n      if (this.#index < 0) {\n        this.#index = -this.#index;\n        this.#direction = 1;\n      }\n    }\n    return this.#index;\n  }\n\n  /** Advance the index by distance. The direction is maintained by the indexer\n   * itself. Stop at ends.\n   * @param {number} distance - amount to move. This should be positive.\n   * @returns {number} the new index\n   */\n  #advanceByStop(distance) {\n    if (this.#direction > 0) {\n      this.#index = Math.min(this.#maxIndex, this.#index + distance);\n    } else if (this.#direction < 0) {\n      this.#index = Math.max(0, this.#index - distance);\n    }\n    return this.#index;\n  }\n}\n","/**\n * @file Faders which adjust opacity\n *\n * @module utils/sprites/faders\n */\n/**\n * License {@link https://opensource.org/license/mit/|MIT}\n *\n * Copyright 2024 Steve Butler (henspace.com).\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the “Software”), to deal in\n * the Software without restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n * Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */\n\nimport { AbstractModifier } from './modifiers.js';\n\n/**\n * Sprite fader\n */\nexport class TimeFader extends AbstractModifier {\n  /** @type {number} */\n  #deltaOpacityPerSec;\n  /** @type {number} */\n  #delaySecs;\n  /** @type {number} */\n  #elapsedSecs;\n\n  /**\n   * Create fader.\n   * @param {number} delaySecs - default alignment.\n   * @param {number} lifetimeSecs - default alignment.\n   * @param {AbstractModifier} decoratedModifier\n   */\n  constructor(delaySecs, lifetimeSecs, decoratedModifier) {\n    super(decoratedModifier);\n    this.#delaySecs = delaySecs;\n    this.#deltaOpacityPerSec = 1 / Math.max(lifetimeSecs - delaySecs, 0.5);\n    this.#elapsedSecs = 0;\n  }\n\n  /**\n   * Adjust sprite opacity depending on time. When the time is complete, this\n   * modify returns null to indicate completion.\n   * @param {module:utils/sprites/sprite~Sprite} sprite\n   * @param {number} deltaSeconds - elapsed time\n   * @returns {AbstractModifier}\n   */\n  doUpdate(sprite, deltaSeconds) {\n    this.#elapsedSecs += deltaSeconds;\n    if (this.#elapsedSecs > this.#delaySecs) {\n      sprite.opacity = Math.max(\n        0,\n        1 - (this.#elapsedSecs - this.#delaySecs) * this.#deltaOpacityPerSec\n      );\n    } else {\n      sprite.opacity = 1;\n    }\n    return sprite.opacity > 0 ? this : null;\n  }\n}\n","/**\n * @file Modifiers for updates\n *\n * @module utils/sprites/modifiers\n */\n/**\n * License {@link https://opensource.org/license/mit/|MIT}\n *\n * Copyright 2024 Steve Butler\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the “Software”), to deal in\n * the Software without restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n * Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */\n\nimport LOG from '../logging.js';\n\n/** Default timeout for transient modifiers. @type {number} */\nconst DEFAULT_TIMEOUT_SECS = 10;\n\n/**\n * Base for all modifiers\n */\nexport class AbstractModifier {\n  /** @type {AbstractModifier} */\n  decoratedModifier;\n  /** The resolve function for transient modifiers @type {function(*)} */\n  #resolveFunc;\n  /** Total active time in seconds */\n  #activeSeconds;\n  /** Timeout duration */\n  #timeoutSeconds;\n\n  /**\n   *\n   * @param {AbstractModifier} [decoratedModifier]\n   */\n  constructor(decoratedModifier) {\n    this.#activeSeconds = 0;\n    this.#timeoutSeconds = 0;\n    this.decoratedModifier = decoratedModifier;\n  }\n\n  /**\n   * Apply the modifier as transient to a sprite.\n   * @param {AbstractModifier} modifier\n   * @param {Sprite} sprite\n   * @param {number} [timeoutSeconds =\n   * @returns {Promise} fulfils to null on completion;\n   */\n  applyAsTransientToSprite(sprite, timeoutSeconds = DEFAULT_TIMEOUT_SECS) {\n    this.#timeoutSeconds = timeoutSeconds;\n    return new Promise((resolve) => {\n      this.#resolveFunc = resolve;\n      sprite.modifier = this;\n    });\n  }\n\n  /**\n   * Apply the modifier as continuous to a sprite.\n   * @param {Sprite} sprite\n   */\n  applyAsContinuousToSprite(sprite) {\n    sprite.modifier = this;\n  }\n\n  /** Do the update modification. If a decoratedModifier has been set, this is then\n   * called. If after calling update, the modifier is removed, it is removed from\n   * the owning decoratedModifier. Its children are retained.\n   * @param {Sprite} sprite\n   * @param {number} deltaSeconds - elapsed time since last update.\n   * @returns {AbstractModifier} - the modifier required for the next update. This\n   * normally returns itself. If null is return, this indicates that the modifier\n   * has completed its action and can be removed from the chain of decorated\n   * modifiers. This method handles removal of its own decoratedModifier, but removal\n   * of the root, if appropriate, is the responsibility of the Sprite.\n   */\n  update(sprite, deltaSeconds) {\n    if (this.#resolveFunc) {\n      this.#activeSeconds += deltaSeconds;\n    }\n    if (this.decoratedModifier) {\n      this.decoratedModifier = this.decoratedModifier?.update(\n        sprite,\n        deltaSeconds\n      );\n    }\n\n    const nextModifier = this.doUpdate(sprite, deltaSeconds);\n    if (!nextModifier || this.#activeSeconds > this.#timeoutSeconds) {\n      this.#resolveFunc?.(null);\n      return null;\n    }\n    return nextModifier;\n  }\n\n  /** Do the update modification for this modifier.\n   * @param {Sprite} sprite\n   * @param {number} deltaSeconds - elapsed time since last update.\n   * @returns {AbstractModifier} - the modifier for the next update.\n   */\n  doUpdate(spriteUnused, deltaSecondsUnused) {\n    LOG.error('doUpdate should be overridden.');\n    return this;\n  }\n}\n","/**\n * @file Movers for sprites\n *\n * @module utils/sprites/movers\n */\n/**\n * License {@link https://opensource.org/license/mit/|MIT}\n *\n * Copyright 2024 Steve Butler\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the “Software”), to deal in\n * the Software without restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n * Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */\n\nimport { AbstractModifier } from './modifiers.js';\n\nclass VariableSpeed {\n  /** @type {number} */\n  #speed;\n  /** @type {boolean} */\n  #linear;\n\n  /** Create variable speed.\n   * @param {number} speed - base speed.\n   * @param {boolean} linear - true if speed constant, otherwise speed faster if\n   * further away.\n   */\n  constructor(speed, linear) {\n    this.#speed = speed;\n    this.#linear = linear;\n  }\n\n  /**\n   * Get speed to move between points.\n   * @param {Point} pointA\n   * @param {Point} pointB\n   * @returns {number}\n   */\n  getSpeedBetweenPoints(pointA, pointB) {\n    if (this.#linear) {\n      return this.#speed;\n    } else {\n      const separation =\n        Math.abs(pointA.x - pointB.x) + Math.abs(pointA.y - pointB.y);\n      return (1 + 0.1 * separation) * this.#speed;\n    }\n  }\n}\n/**\n * Simple unbounded velocity mover\n */\nexport class VelocityMover extends AbstractModifier {\n  /** @type {module:utils/geometry~Point} */\n  #topLeft;\n  /** @type {module:utils/geometry~Point} */\n  #bottomRight;\n\n  /**\n   * @param {AbstractModifier} decoratedModifier\n   */\n  constructor(decoratedModifier) {\n    super(decoratedModifier);\n  }\n\n  /**\n   * Move sprite using its velocity and acceleration\n   * @param {module:utils/sprites/sprite~Sprite} sprite\n   * @param {number} deltaSeconds - elapsed time\n   * @returns {AbstractModifier}\n   */\n  doUpdate(sprite, deltaSeconds) {\n    sprite.position.x += sprite.velocity.x * deltaSeconds;\n    sprite.position.y += sprite.velocity.y * deltaSeconds;\n    if (sprite.acceleration) {\n      sprite.velocity.x += sprite.acceleration.x * deltaSeconds;\n      sprite.velocity.y += sprite.acceleration.y * deltaSeconds;\n    }\n    return this;\n  }\n}\n\n/**\n * Velocity aligner\n */\nexport class VelocityAligner extends AbstractModifier {\n  /** @type {number} */\n  #baseDirection;\n\n  /**\n   * Construct aligner. Rotations are worked out counter clockwise from the positive\n   * x axis direction. However, sprites are normally drawn vertically as you look at them;\n   * i.e they are pointing downwards or at -90 degrees from the horizontal axis. You can\n   * set this using the baseDirection parameter.\n   * @param {number} baseDirection - default alignment.\n   * @param {AbstractModifier} decoratedModifier\n   */\n  constructor(baseDirection = -Math.PI / 2, decoratedModifier) {\n    super(decoratedModifier);\n    this.#baseDirection = baseDirection;\n  }\n\n  /**\n   * Create a VelocityAligner. This is a convenience factory method that automatically\n   * sets the base direction to -90 degrees which is how sprites are normally drawn; i.e. upright\n   * instead of horizontally.\n   * @param {AbstractModifier} decoratedModifier\n   * @returns {VelocityAligner}\n   */\n  static createUprightAligner(decoratedModifier) {\n    return new VelocityAligner(-Math.PI / 2, decoratedModifier);\n  }\n\n  /**\n   * Align sprite using its velocity.\n   * @param {module:utils/sprites/sprite~Sprite} sprite\n   * @param {number} deltaSeconds - elapsed time\n   * @returns {AbstractModifier}\n   */\n  doUpdate(sprite, deltaSecondsIgnored) {\n    sprite.position.rotation =\n      sprite.velocity.getScreenDirection() - this.#baseDirection;\n    return this;\n  }\n}\n/**\n * Bouncer mover\n */\nexport class Bouncer extends AbstractModifier {\n  /** @type {module:utils/geometry~Point} */\n  #topLeft;\n  /** @type {module:utils/geometry~Point} */\n  #bottomRight;\n\n  /**\n   * @param {module:utils/geometry~Rectangle} bounds\n   * @param {AbstractModifier} decoratedModifier\n   */\n  constructor(bounds, decoratedModifier) {\n    super(decoratedModifier);\n    this.#topLeft = bounds.getTopLeft();\n    this.#bottomRight = bounds.getBottomRight();\n  }\n\n  /**\n   * Move sprite using its velocity and bouncing on screen.\n   * @param {module:utils/sprites/sprite~Sprite} sprite\n   * @param {number} deltaSeconds - elapsed time\n   * @returns {AbstractModifier}\n   */\n  doUpdate(sprite, deltaSeconds) {\n    const position = sprite.position;\n    const velocity = sprite.velocity;\n\n    position.x += velocity.x * deltaSeconds;\n    position.y += velocity.y * deltaSeconds;\n    position.rotation += velocity.rotation * deltaSeconds;\n    if (position.x < this.#topLeft.x || position.x > this.#bottomRight.x) {\n      velocity.x *= -1;\n    }\n    if (position.y < this.#topLeft.y || position.y > this.#bottomRight.y) {\n      velocity.y *= -1;\n    }\n\n    sprite.position = position;\n    sprite.velocity = velocity;\n    return this;\n  }\n}\n\n/**\n * Tracker mover.\n */\nexport class Tracker extends AbstractModifier {\n  /** @type {module:utils/sprites/sprite~Sprite} */\n  #prey;\n  /** @type {number} */\n  #maxSeparation;\n  /** @type {number} */\n  #variableSpeed;\n\n  /**\n   *\n   * @param {Object} options\n   * @param {module:utils/sprites/sprite~Sprite} options.prey\n   * @param {number} options.maxSeparation - allowable distance between hunter and prey\n   * @param {number} options.speed - pixels / second\n   * @param {boolean} options.linear - if linear the speed is constant, otherwise it speeds up if further away\n   * @param {AbstractModifier} decoratedModifier\n   */\n  constructor(options, decoratedModifier) {\n    super(decoratedModifier);\n    this.#prey = options.prey;\n    this.#maxSeparation = options.maxSeparation;\n    this.#variableSpeed = new VariableSpeed(options.speed, options.linear);\n  }\n\n  /**\n   * Update the sprite to track the hunter.\n   * @param {module:utils/sprites/sprite~Sprite} hunter\n   * @param {*} deltaSeconds\n   * @returns {AbstractModifier}\n   */\n  doUpdate(hunter, deltaSeconds) {\n    const preyPos = this.#prey.position;\n    const hunterPos = hunter.position;\n    const approachSpeed = this.#variableSpeed.getSpeedBetweenPoints(\n      preyPos,\n      hunterPos\n    );\n\n    if (!hunterPos.withinSquare(preyPos, this.#maxSeparation)) {\n      const angle = hunterPos.getCartesianAngleTo(preyPos);\n      hunter.velocity.x = approachSpeed * Math.cos(angle);\n      hunter.velocity.y = approachSpeed * Math.sin(angle);\n      const dx = hunter.velocity.x * deltaSeconds;\n      const dy = hunter.velocity.y * deltaSeconds;\n      hunter.position.x += this.getMinMove(dx, preyPos.x, hunterPos.x);\n      hunter.position.y += this.getMinMove(dy, preyPos.y, hunterPos.y);\n    }\n    return this;\n  }\n\n  /**\n   * Get the minimum movement to go from targetValue to currentValue.\n   * @param {number} maxMovement - maximum movement. NB. In this context, max ignores sign.\n   * @param {number} targetValue\n   * @param {number} currentValue\n   */\n  getMinMove(maxMovement, targetValue, currentValue) {\n    const requiredMovement = targetValue - currentValue;\n    if (Math.sign(maxMovement) < 0) {\n      return Math.max(maxMovement, requiredMovement);\n    } else {\n      return Math.min(maxMovement, requiredMovement);\n    }\n  }\n}\n\n/**\n * PathFollower. Provides a one-off movement.\n * Once it hits its target, it removes itself from the chain.\n */\nexport class PathFollower extends AbstractModifier {\n  /** @type {Point[]} */\n  #path;\n  /** @type {number} */\n  #index;\n  /** @type {module:utils/geometry~Point} */\n  #targetPoint;\n  /** @type {VariableSpeed} */\n  #variableSpeed;\n  /**\n   *\n   * @param {Object} options\n   * @param {Point[]} options.path\n   * @param {number} options.speed - pixels / second\n   * @param {boolean} options.linear - if linear the speed is constant, otherwise it speeds up if further away\n   * @param {AbstractModifier} decoratedModifier\n   */\n  constructor(options, decoratedModifier) {\n    super(decoratedModifier);\n    this.#path = options.path;\n    this.#index = 0;\n    this.#targetPoint = options.path[0];\n    this.#variableSpeed = new VariableSpeed(options.speed, options.linear);\n  }\n\n  /**\n   * Update the sprite to track the hunter.\n   * @param {module:utils/sprites/sprite~Sprite} subject\n   * @param {*} deltaSeconds\n   * @returns {AbstractModifier}\n   */\n  doUpdate(subject, deltaSeconds) {\n    const subjectPos = subject.position;\n    const approachSpeed = this.#variableSpeed.getSpeedBetweenPoints(\n      this.#targetPoint,\n      subjectPos\n    );\n    const angle = subjectPos.getCartesianAngleTo(this.#targetPoint);\n    subject.velocity.x = approachSpeed * Math.cos(angle);\n    subject.velocity.y = approachSpeed * Math.sin(angle);\n    const dx = subject.velocity.x * deltaSeconds;\n    const dy = subject.velocity.y * deltaSeconds;\n    subjectPos.x += this.getMinMove(dx, this.#targetPoint.x, subjectPos.x);\n    subjectPos.y += this.getMinMove(dy, this.#targetPoint.y, subjectPos.y);\n    if (subjectPos.isCoincident(this.#targetPoint)) {\n      if (++this.#index >= this.#path.length) {\n        subject.velocity.x = 0;\n        subject.velocity.y = 0;\n        return this.decoratedModifier; // Remove itself from chain\n      } else {\n        this.#targetPoint = this.#path[this.#index];\n      }\n    }\n    return this;\n  }\n\n  /**\n   * Get the minimum movement to go from targetValue to currentValue.\n   * @param {number} maxMovement - maximum movement. NB. In this context, max ignores sign.\n   * @param {number} targetValue\n   * @param {number} currentValue\n   */\n  getMinMove(maxMovement, targetValue, currentValue) {\n    const requiredMovement = targetValue - currentValue;\n    if (Math.sign(maxMovement) < 0) {\n      return Math.max(maxMovement, requiredMovement);\n    } else {\n      return Math.min(maxMovement, requiredMovement);\n    }\n  }\n}\n\n/**\n * Move the actor to the position. This ignores any restriction and moves in\n * a straight line.\n * @param {Actor} actor\n * @param {module:utils/geometry~Position} position\n * @returns {Promise} fulfils to undefined on completion of move.\n */\nexport function moveActorToPosition(actor, position) {\n  const pathModifier = new PathFollower(\n    {\n      path: [position],\n      speed: 100,\n    },\n    actor.sprite.modifier\n  );\n  return pathModifier.applyAsTransientToSprite(actor.sprite);\n}\n","/**\n * @file Dialogs for use in the game\n *\n * @module utils/dom/ui\n */\n/**\n * License {@link https://opensource.org/license/mit/|MIT}\n *\n * Copyright 2024 Steve Butler (henspace.com).\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the “Software”), to deal in\n * the Software without restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n * Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */\n\nimport SCREEN from '../game/screen.js';\nimport * as components from './components.js';\nimport { i18n } from '../messageManager.js';\n\n/** @type {function} */\nlet preDialogFunction;\n/** @type {function} */\nlet postDialogFunction;\n\n/**\n * Dialog response codes.\n */\nexport const DialogResponse = {\n  OK: 0,\n  CANCEL: 1,\n  YES: 2,\n  NO: 3,\n};\n\n/**\n * Called when a dialog is opened.\n */\nfunction prepareDialog() {\n  if (preDialogFunction) {\n    preDialogFunction();\n  }\n}\n\n/**\n * Called when a dialog is closed.\n */\nfunction tearDownDialog() {\n  if (postDialogFunction) {\n    postDialogFunction();\n  }\n}\n\n/**\n * Set up function to be called whenever dialog is opened.\n * @param {function} fn\n */\nfunction setPreDialogFunction(fn) {\n  preDialogFunction = fn;\n}\n\n/**\n * Set up function to be called whenever dialog is opened.\n * @param {function} fn\n */\nfunction setPostDialogFunction(fn) {\n  postDialogFunction = fn;\n}\n\n/**\n * Wrapper for SCREEN.displayOnGlass but calling tearDownDialog at end.\n * @param {HTMLElement} element\n * @param {Object} options\n * @param {Closers[]} options.closers - array of Closers. If not provided then the entire display\n * is used.\n * @param {string} options.className\n * @param {boolean} options.replace - replace current glass\n * @returns {Promise} fulfils to closers.closes value\n */\nfunction displayOnGlass(element, options) {\n  return SCREEN.displayOnGlass(element, options).then((response) => {\n    tearDownDialog();\n    return response;\n  });\n}\n/**\n * Get a message element. This returns a div which contains the message text.\n * @param {string} message\n */\nfunction createMessageElement(message) {\n  const element = components.createElement('div', {\n    className: 'dialog-scroll-content',\n  });\n  element.innerText = message;\n  element.classList.add(['scrollable']);\n  return element;\n}\n\n/** Create a message that is removed on any click. This sits above everything\n * as a self contained popup.\n * @param {string} message - message for the message manager.\n */\nfunction showMessage(message) {\n  const popup = document.createElement('div');\n  popup.appendChild(document.createTextNode(message));\n  popup.className = 'popup';\n  popup.style.opacity = 1;\n  document.body.appendChild(popup);\n  popup.addEventListener('click', () => popup.remove());\n}\n\n/** Create an okDialog.\n * @param {string} message\n * @param {Object} options\n * @param {string} [options.okButtonLabel = 'BUTTON OK']\n * @param {string} options.className\n * @returns {Promise} fulfils to DialogResponse.OK\n */\nfunction showOkDialog(message, options) {\n  prepareDialog();\n  const container = document.createElement('div');\n  container.appendChild(createMessageElement(message));\n  const buttonEl = document.createElement('button');\n  buttonEl.appendChild(\n    document.createTextNode(options?.okButtonLabel ?? i18n`BUTTON OK`)\n  );\n  container.appendChild(buttonEl);\n  return displayOnGlass(container, {\n    className: options?.className,\n    closers: [\n      {\n        element: buttonEl,\n        closes: DialogResponse.OK,\n      },\n    ],\n  });\n}\n\n/**\n * Create a choice dialog.\n * @param {string} title\n * @param {string | Element} message\n * @param {string[]} choices - labels for buttons.\n * @returns {number} index of selected button.\n */\nfunction showChoiceDialog(title, message, choices) {\n  const container = document.createElement('div');\n  if (title) {\n    container.appendChild(\n      components.createElement('p', { className: 'dialog-title', text: title })\n    );\n  }\n  container.appendChild(components.createElement('p', { text: message }));\n  const actionButtons = [];\n  choices?.forEach((choice, index) => {\n    const button = new components.TextButtonControl({\n      label: choice,\n      closes: index,\n    });\n    actionButtons.push(button);\n  });\n  return showControlsDialog(message, {\n    preamble: title,\n    actionButtons: actionButtons,\n    row: true,\n  });\n}\n\n/** Create an ok Dialog but just showing raw html.\n * @param {string} title\n * @param {Element} element\n * @param {string} [okButtonLabel = 'BUTTON OK']\n * @param {string} className\n * @returns {Promise} fulfils to DialogResponse.OK\n */\nfunction showElementOkDialog(\n  title,\n  element,\n  okButtonLabel = i18n`BUTTON OK`,\n  className\n) {\n  prepareDialog();\n  const container = document.createElement('div');\n  const scrollContainer = components.createElement('div', {\n    className: 'dialog-scroll-content',\n  });\n  container.appendChild(scrollContainer);\n  if (title) {\n    scrollContainer.appendChild(\n      components.createElement('p', { className: 'dialog-title', text: title })\n    );\n  }\n  scrollContainer.appendChild(element);\n  const buttonEl = document.createElement('button');\n  buttonEl.appendChild(document.createTextNode(okButtonLabel));\n  container.appendChild(buttonEl);\n\n  return displayOnGlass(container, {\n    closers: [\n      {\n        element: buttonEl,\n        closes: DialogResponse.OK,\n      },\n    ],\n    className: className,\n  });\n}\n\n/** Create a controls dialog.\n * @param {string | Element} mainContent -message or element to show..\n * @param {Object} options\n * @param {Object} options.title\n * @param {string} options.preamble - text placed before content..\n * @param {BaseControl[]} options.actionButtons\n * @param {boolean} options.row - if true, controls are in a row rather than the\n * default column.\n * @param {string} options.className\n * @param {string} options.okButtonLabel\n * @returns {Promise} fulfils to closures response value or DialogResponse.OK if\n * no closers.\n */\nfunction showControlsDialog(mainContent, options = {}) {\n  prepareDialog();\n  const container = document.createElement('div');\n  const scrollContainer = components.createElement('div', {\n    className: 'dialog-scroll-content',\n  });\n  container.appendChild(scrollContainer);\n  if (options.title) {\n    scrollContainer.appendChild(\n      components.createElement('p', {\n        className: 'dialog-title',\n        text: options.title,\n      })\n    );\n  }\n  if (options.preamble) {\n    scrollContainer.appendChild(\n      components.createElement('p', { text: options.preamble })\n    );\n  }\n  if (mainContent instanceof Element) {\n    scrollContainer.appendChild(mainContent);\n  } else {\n    scrollContainer.appendChild(createMessageElement(mainContent));\n  }\n  const actionButtons = components.createElement('div', {\n    className: options.row ? 'action-buttons-row' : 'action-buttons-col',\n  });\n  container.appendChild(actionButtons);\n  const closers = [];\n  options?.actionButtons?.forEach((button) => {\n    if (!button.element.parentElement) {\n      actionButtons.appendChild(button.element);\n    }\n    if (button.closes !== null && button.closes !== undefined) {\n      closers.push({\n        element: button.element,\n        closes: button.closes,\n      });\n    }\n  });\n  if (closers.length === 0) {\n    const okButton = new components.TextButtonControl({\n      id: DialogResponse.OK,\n      label: options.okButtonLabel ?? i18n`BUTTON OK`,\n    });\n    actionButtons.appendChild(okButton.element);\n    closers.push(okButton);\n  }\n  return displayOnGlass(container, {\n    closers: closers,\n    className: options?.className,\n  });\n}\n\n/**\n * The UI singleton.\n */\nconst UI = {\n  setPreDialogFunction: setPreDialogFunction,\n  setPostDialogFunction: setPostDialogFunction,\n  showChoiceDialog: showChoiceDialog,\n  showMessage: showMessage,\n  showOkDialog: showOkDialog,\n  showElementOkDialog: showElementOkDialog,\n  showControlsDialog: showControlsDialog,\n};\n\nexport default UI;\n","/**\n * @file Classes for managing menus.\n *\n * @module utils/dom/menu\n */\n/**\n * License {@link https://opensource.org/license/mit/|MIT}\n *\n * Copyright 2024 Steve Butler (henspace.com).\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the “Software”), to deal in\n * the Software without restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n * Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */\n\nimport IMAGE_MANAGER from '../sprites/imageManager.js';\nimport GameConstants from '../game/gameConstants.js';\nimport PERSISTENT_DATA from '../persistentData.js';\n\n/**\n * Base control\n */\nclass BaseControl {\n  /**\n   * @type {string}\n   */\n  #id;\n  /**\n   * @type {Element}\n   */\n  _element;\n\n  /** @type {*} */\n  #value;\n\n  /** @type {boolean} */\n  #persistent;\n\n  /** @type {boolean} */\n  closes;\n\n  /**\n   * Create base control\n   * @param {Object} options\n   * @param {boolean} options.persistent - is data stored in persistent storage.\n   * @param {*} options.defValue - default value\n   * @param {boolean} options.closes - flag to indicate whether this control should be used\n   * to close a dialog or form when clicked.\n   */\n  constructor(options) {\n    if (options.closes && options.action) {\n      throw new Error(\n        `Attempt made to create control that is set to close forms and perform and action. These are mutually exclusive.`\n      );\n    }\n    if (options.persistent && !options.id) {\n      throw new Error(\n        'Persistent controls must have an ID set in the options.'\n      );\n    }\n    this.#id = options.id;\n    this.#persistent = options.persistent;\n    if (options.persistent) {\n      this.#value = PERSISTENT_DATA.get(this.#id, options.defValue);\n    } else {\n      this.#value = options.defValue;\n    }\n    this.closes = options.closes;\n    this.listeners = 0;\n  }\n\n  /**\n   * Get the underlying element\n   * @returns {Element}\n   */\n  get element() {\n    return this._element;\n  }\n\n  /**\n   *\n   * @returns {*}\n   */\n  get value() {\n    return this.#value;\n  }\n\n  /**\n   * Set the value.\n   * @param {*} value\n   */\n  set value(value) {\n    if (value === this.#value) {\n      return;\n    }\n    if (this.#persistent) {\n      PERSISTENT_DATA.set(this.#id, value);\n    }\n    this.#value = value;\n  }\n}\n\n/**\n * Text button\n */\nexport class TextButtonControl extends BaseControl {\n  /** Create the button.\n   * @param {Object} options - see BaseControl plus\n   * @param {string} options.label\n   * @param {function():Promise} options.action - function called on click.\n   */\n  constructor(options) {\n    super(options);\n    this._element = this.buildElement(options);\n    if (options.action) {\n      this._element.addEventListener('click', () => options.action());\n    }\n  }\n\n  /**\n   * @param {Object} options - see Constructor.\n   * @returns {Element}\n   */\n  buildElement(options) {\n    const element = document.createElement('button');\n    element.appendChild(document.createTextNode(options.label));\n    element.className = 'text-button';\n    return element;\n  }\n}\n\n/**\n * Text button\n */\nexport class BitmapButtonControl extends BaseControl {\n  /** Create the button.\n   * @param {Object} options - see BaseControl. Plus\n   * @param {string} options.leftLabel\n   * @param {string} options.rightLabel\n   * @param {function():Promise} options.action - function called on click.\n   * @param {string} imageName\n   */\n  constructor(options) {\n    super(options);\n    this._element = this.buildElement(options);\n    if (options.action) {\n      this._element.addEventListener('click', () => options.action());\n    }\n  }\n\n  /**\n   * @param {Object} options - see Constructor.\n   * @returns {Element}\n   */\n  buildElement(options) {\n    const element = document.createElement('button');\n    if (options.leftLabel) {\n      element.appendChild(document.createTextNode(options.leftLabel));\n    }\n    element.appendChild(createBitmapElement(options.imageName, 'button-icon'));\n    if (options.rightLabel) {\n      element.appendChild(document.createTextNode(options.rightLabel));\n    }\n    element.className = 'icon-button';\n    return element;\n  }\n}\n\n/**\n * Create a bitmap element\n * @param {string} imageName\n * @param {string} className\n * @returns {Element}\n */\n\nexport function createBitmapElement(imageName, className) {\n  const bitmapImage = IMAGE_MANAGER.getSpriteBitmap(\n    imageName ?? 'undefined.png',\n    { fallback: 'undefined.png' }\n  );\n  const canvas = document.createElement('canvas');\n  canvas.setAttribute('width', GameConstants.TILE_SIZE);\n  canvas.setAttribute('height', GameConstants.TILE_SIZE);\n  const context = canvas.getContext('2d');\n  context.clearRect(0, 0, GameConstants.TILE_SIZE, GameConstants.TILE_SIZE);\n  context.drawImage(\n    bitmapImage.image,\n    0.5 * (GameConstants.TILE_SIZE - bitmapImage.width),\n    0.5 * (GameConstants.TILE_SIZE - bitmapImage.height)\n  );\n  canvas.className = className;\n  return canvas;\n}\n\n/**\n * Create a checkbox control\n */\nclass CheckboxControl extends BaseControl {\n  /** @type {Element} */\n  #checkbox;\n\n  /**\n   * Create the CheckboxControl\n   * @param {ControlDefinition} options - see Base control plus\n   * @param {string} options.label\n   */\n  constructor(options) {\n    super(options);\n    this._element = this.buildElement(options.label);\n    this.#checkbox.checked = this.value;\n    this._element.addEventListener('change', (event) => {\n      this.value = this.#checkbox.checked;\n      if (options.onChange) {\n        options.onChange(this.value);\n      }\n    });\n  }\n\n  /**\n   * Build the element\n   * @param {string} label\n   * @returns {Element}\n   */\n  buildElement(label) {\n    const checkboxContainer = document.createElement('span');\n    checkboxContainer.className = 'styled-checkbox';\n    this.#checkbox = document.createElement('input');\n    this.#checkbox.setAttribute('type', 'checkbox');\n    checkboxContainer.appendChild(this.#checkbox);\n    checkboxContainer.appendChild(\n      createBitmapElement('ui-checkbox00.png', 'unchecked')\n    );\n    checkboxContainer.appendChild(\n      createBitmapElement('ui-checkbox01.png', 'checked')\n    );\n    const element = document.createElement('label');\n    element.appendChild(document.createTextNode(label));\n    element.appendChild(checkboxContainer);\n    return element;\n  }\n}\n\n/**\n * Range control\n */\nexport class RangeControl extends BaseControl {\n  /** @type {Element} */\n  #rangeInput;\n\n  /**\n   * Create the RangeControl\n   * @param {ControlDefinition} options - see BaseControl plus\n   * @param {string} options.label\n   */\n  constructor(options) {\n    super(options);\n    this._element = this.buildElement(options.label);\n    this.#rangeInput.value = this.value;\n    this._element.addEventListener('change', (event) => {\n      this.value = this.#rangeInput.value;\n      if (options.onChange) {\n        options.onChange(this.value);\n      }\n    });\n  }\n\n  /**\n   * Build the element\n   * @param {string} label\n   * @returns {Element}\n   */\n  buildElement(label) {\n    const rangeContainer = document.createElement('span');\n    rangeContainer.className = 'styled-range';\n    this.#rangeInput = document.createElement('input');\n    this.#rangeInput.setAttribute('type', 'range');\n    rangeContainer.appendChild(this.#rangeInput);\n    const element = document.createElement('label');\n    element.appendChild(document.createTextNode(label));\n    element.appendChild(rangeContainer);\n    return element;\n  }\n}\n/**\n * Control UI types.\n * @enum {string}\n */\nexport const ControlType = {\n  TEXT_BUTTON: 'text button',\n  CHECKBOX: 'checkbox',\n  RANGE: 'range',\n};\n\n/**\n * @typedef {Object} ControlDefinition\n * @param {string} key - identification for the control. Used as a key for storage.\n * @param {string} label - text displayed on control\n * @param {*}   defValue - default value,\n * @param {ControlType} controlType - type of control required,\n * @param {boolean} persistent - whether the value is stored in persistent data.\n * @param {function(): Promise} action - action to perform when clicked.\n * @param {function()} onChange - action to perform when value changes.\n */\n\n/**\n * Create a control type.\n * @param {ControlDefinition} definition\n * @returns {BaseControl}\n */\nexport function createControl(definition) {\n  let control;\n  switch (definition.controlType) {\n    case ControlType.CHECKBOX:\n      control = new CheckboxControl(definition);\n      break;\n    case ControlType.RANGE:\n      control = new RangeControl(definition);\n      break;\n    case ControlType.TEXT_BUTTON:\n      control = new TextButtonControl(definition);\n      break;\n    default:\n      throw new Error(\n        `Attempt to create unrecognised control type ${definition.controlType}`\n      );\n  }\n  return control;\n}\n\n/**\n * Create an element.\n * @param {string} tagName\n * @param {Object} options\n * @param {string} options.className\n * @param {string} options.text\n * @param {string} options.html - has precedence over options.text.\n * @param {Element} options.child - appended after text or html.\n * @returns {Element}\n */\nexport function createElement(tagName, options = {}) {\n  const element = document.createElement(tagName);\n  if (options.className) {\n    element.className = options.className;\n  }\n  if (options.html) {\n    element.innerHTML = options.html;\n  } else if (options.text) {\n    element.innerText = options.text;\n  }\n  if (options.child) {\n    element.appendChild(options.child);\n  }\n  return element;\n}\n\n/**\n * Create a button bar.\n * @param {string[]} labels\n */\nexport function createButtonBar(labels) {\n  const bar = createElement('div', { className: 'button-bar' });\n  labels.forEach((label) => {\n    const button = createElement('button', { text: label });\n  });\n  return bar;\n}\n","/**\n * @file Game constants\n *\n * @module gameutils/gameConstants\n */\n/**\n * License {@link https://opensource.org/license/mit/|MIT}\n *\n * Copyright 2024 Steve Butler (henspace.com).\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the “Software”), to deal in\n * the Software without restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n * Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */\n\nconst GameConstants = {\n  TILE_SIZE: 48,\n};\n\nexport default GameConstants;\n","/**\n * @file Settings\n *\n * @module utils/settings\n */\n/**\n * License {@link https://opensource.org/license/mit/|MIT}\n *\n * Copyright 2024 Steve Butler (henspace.com).\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the “Software”), to deal in\n * the Software without restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n * Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */\nimport LOG from './logging.js';\n\n/** Encapsulate storage. */\nclass PersistentData {\n  /**\n   * Cached objects so they don't need to be reparsed.\n   * @type {Map<string, *>}\n   */\n  #cache;\n\n  /**\n   * Create persistent data object.\n   */\n  constructor() {\n    this.#cache = new Map();\n  }\n  /**\n   * Set value\n   * @param {string} key\n   * @param {*} value\n   */\n  set(key, value) {\n    this.#cache.set(key, value);\n    try {\n      localStorage.setItem(key, JSON.stringify(value));\n    } catch (error) {\n      LOG.error(`Cannot save setting. ${error.message}`);\n    }\n  }\n\n  /**\n   * Get a value. Uses the cache if already set.\n   * @param {string} key\n   * @param {*} defaultValue\n   * @returns {*} stored data or default value if not present or unparsable.\n   */\n  get(key, defaultValue) {\n    if (this.#cache.has(key)) {\n      return this.#cache.get(key);\n    }\n    let value = defaultValue;\n    try {\n      const encodedValue = localStorage.getItem(key);\n      if (encodedValue !== null) {\n        value = JSON.parse(encodedValue);\n      }\n    } catch (error) {\n      LOG.error(`Cannot parse value from local storage. ${error.message}`);\n    }\n    this.#cache.set(key, value);\n    return value;\n  }\n}\n\nconst PERSISTENT_DATA = new PersistentData();\n\nexport default PERSISTENT_DATA;\n","/**\n * @file Message manager. Wrapper for all ui messages.\n *\n * @module utils/messageManager\n */\n/**\n * license {@link https://opensource.org/license/mit/|MIT}\n * Copyright 2024 Steve Butler (henspace.com).\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the “Software”), to deal in\n * the Software without restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n * Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */\n\nimport * as maths from './maths.js';\n/**\n * @type{Map<string, string}\n */\nlet messages;\n\n/**\n * Add text to the messages.\n * @param {Map<string, string>} messageMap\n */\nfunction setMap(messageMap) {\n  messages = messageMap;\n}\n\n/**\n * Get a message based on the key.\n * If the value is an array, a random element from the array is chosen.\n * This is to allow variable messages.\n * @param {string} key\n */\nfunction getText(key) {\n  const value = messages.get(key);\n  if (value === undefined || value === null) {\n    return key;\n  }\n  if (Array.isArray(value)) {\n    return value[maths.getRandomInt(0, value.length)];\n  }\n  return value;\n}\n\n/**\n * Template function for string literals. If there are embedded expressions,\n * the first non empty string is used as a replacement. Other strings\n * are ignored. This is primarily to allow keys to appear\n * before or after the replacement expressions.\n * Then placeholders of ${n} are replaced by the\n * replacement values at the appropriate index.\n * Spaces around the key are replaced.\n * @param {string[]} strs\n * @param  {...string} values - replacement values\n */\nexport function i18n(strs, ...values) {\n  let result = '';\n  let key;\n  for (const str of strs) {\n    const trimmed = str.trim();\n    if (trimmed !== '') {\n      key = trimmed;\n      break;\n    }\n  }\n  if (!key) {\n    return values ? values.join(' ') : '';\n  }\n\n  result = getText(key);\n  values.forEach((value, index) => {\n    const placeHolder = `\\${${index}}`;\n    result = result.replace(placeHolder, value);\n  });\n  return result;\n}\n/**\n * Object to access messages.\n */\nexport const MESSAGES = {\n  setMap: setMap,\n  getText: getText,\n};\n","/**\n * @file Sound manager\n *\n * @module utils/soundManager\n */\n/**\n * license {@link https://opensource.org/license/mit/|MIT}\n * Copyright 2024 Steve Butler (henspace.com).\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the “Software”), to deal in\n * the Software without restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n * Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */\nimport LOG from './logging.js';\n\n/**\n * Sound manager\n */\nclass SoundManager {\n  /** @type {Map<string, Audio>} */\n  #effects;\n  /** @type {Audio} */\n  #music;\n  /** @type {number} */\n  #musicVolume;\n  /** @type {number} */\n  #effectsVolume;\n\n  /**\n   * Construct.\n   */\n  constructor() {\n    this.#musicVolume = 0.5;\n    this.#effectsVolume = 0.5;\n    this.#effects = new Map();\n  }\n\n  /**\n   * Load and play music.\n   * @param {string} path - path to music\n   */\n  loadAndPlayMusic(path) {\n    if (this.#music) {\n      throw new Error('Only one music track currently supported.');\n    }\n    this.#music = this.#createAudioIfNotNull(path);\n    if (this.#music) {\n      this.#music.addEventListener('canplay', (event) => {\n        this.#music.volume = this.#musicVolume;\n        this.#music.loop = true;\n        this.#music.play();\n        window.addEventListener('blur', () => {\n          this.#music.pause();\n        });\n        window.addEventListener('focus', () => {\n          this.#music.play();\n        });\n      });\n    }\n  }\n  /**\n   * Load the audio sounds.\n   * @param {Map<string, string>} audioPaths\n   * @returns {Promise} fulfils to undefined when all sounds are ready.\n   */\n  loadEffects(audioPaths) {\n    const promises = [];\n    audioPaths.forEach((path, key) => {\n      const promise = new Promise((resolve) => {\n        const audio = this.#createAudioIfNotNull(path);\n        if (audio) {\n          audio.addEventListener('canplay', (event) => {\n            this.#effects.set(key, audio);\n            resolve();\n          });\n        }\n      });\n      promises.push(promise);\n    });\n    return Promise.all(promises);\n  }\n\n  /**\n   * Load the audio if not null\n   * @param {string} url\n   * @returns {Audio} new audio object or null if url is null.\n   */\n  #createAudioIfNotNull(url) {\n    return url ? new Audio(url) : null;\n  }\n\n  /**\n   * Play an effect.\n   */\n  playEffect(key) {\n    const effect = this.#effects.get(key);\n    if (effect) {\n      effect.volume = this.#effectsVolume;\n      effect.play();\n    }\n  }\n\n  /**\n   * Set the music volume.\n   * @param {number} percent\n   */\n  setMusicVolumePercent(percent) {\n    this.#musicVolume = percent / 100;\n    if (this.#music) {\n      this.#music.volume = this.#musicVolume;\n    }\n  }\n\n  /**\n   * Set the music volume.\n   * @param {number} percent\n   */\n  setEffectsVolumePercent(percent) {\n    this.#effectsVolume = percent / 100;\n  }\n}\n\nconst SOUND_MANAGER = new SoundManager();\n\nexport default SOUND_MANAGER;\n","/**\n * @file Dialogs to show details of actors.\n *\n * @module dialogs/actorDialogs\n */\n/**\n * license {@link https://opensource.org/license/mit/|MIT}\n * Copyright 2024 Steve Butler (henspace.com).\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the “Software”), to deal in\n * the Software without restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n * Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */\nimport UI, { DialogResponse } from '../utils/dom/ui.js';\nimport * as components from '../utils/dom/components.js';\n\nimport { i18n } from '../utils/messageManager.js';\nimport { ArtefactType, StoreType } from '../players/artefacts.js';\nimport SCENE_MANAGER from '../gameManagement/sceneManager.js';\nimport { gpAsString } from '../utils/game/coins.js';\nimport * as dndAction from '../dnd/dndAction.js';\nimport LOG from '../utils/logging.js';\n/**\n * @typedef {number} ArtefactActionTypeValue\n */\n/**\n * @enum {ArtefactActionTypeValue}\n */\nexport const ArtefactActionType = {\n  VIEW: 0,\n  SELL: 1,\n  PILLAGE: 2,\n  FIND: 3,\n};\n\n/**\n * ArtefactActions\n * @enum {string}\n */\nconst ArtefactAction = {\n  CONTINUE: 'continue',\n  CONSUME: 'consume',\n  LEAVE: 'leave',\n  LEARN_SPELL: 'learn',\n  DISCARD: 'discard',\n  EQUIP: 'equip',\n  PREPARE_SPELL: 'prepare',\n  STASH: 'stash',\n  TAKE: 'take',\n  SELL: 'sell',\n  PILLAGE: 'pillage',\n  USE: 'use',\n};\n\n/**\n * @typedef {Object} ArtefactDialogOptions\n * @property {Actor} currentOwner - who currently owns the artefact.\n * @property {Actor} prospectiveOwner - who currently owns the artefact.\n * @property {boolean} allowMagicUse - allow an item to be used.\n * @property {boolean} allowConsumption - allow an item to be consumed.\n * @property {boolean} allowSpellPrep - allow a spell to be prepared.\n * @property {Artefact} artefact - the item .\n * @property {StoreType} storeType\n * @property {ArtefactActionTypeValue} actionType\n * @param {function(noChain:boolean):Promise} refresh - function to call if storage changed.\n * if noChain is set, linkedInventories are not called. This is used to prevent\n * circular loops.\n * @param {boolean} showPrice\n * @param {boolean} showDamage - add damage detail to button labels.\n * @param {function(actor: Actor, artefact: Artefact):Promise} customAction - custom action on artefact click.\n */\n\n/**\n * @typedef {string} InventoryLimitationValue\n */\n\n/**\n * @enum {InventoryLimitationValue}\n */\nconst InventoryLimitation = {\n  STANDARD: 'standard', // stash and equipment\n  STASH_ONLY: 'stash', // just the stash\n  SPELLS: 'spells', // all spells.\n  MAGIC: 'magic', // all magic. Cantrips and spells, prepared or not.\n  READY_MAGIC: 'ready magic',\n  CANTRIPS: 'cantrips',\n};\n/**\n * @typedef {Object} InventoryOptions\n * @property {InventoryLimitationValue} limitation\n * @property {InventoryOptions} linkedInventory - this will be refreshed at the same\n * time as the inventory.\n * @property {function()} onRefresh - function to call on an inventory refresh.\n **/\n\n/**\n * Container for an inventory.\n */\nclass InventoryContainerElement {\n  /** @type {ArtefactDialogOptions} */\n  #options;\n  /** @type {InventoryOptions} */\n  #inventoryOptions;\n  /** @type {Element} */\n  #content;\n  /** This will be refresh when this is refreshed. @type {InventoryContainerElement} */\n  linkedInventory;\n  /** Action buttons @type {BaseControl[]} */\n  #actionButtons;\n\n  /**\n   * Construct\n   * @param {ArtefactDialogOptions} options;\n   * @param {InventoryOptions} inventoryOptions\n   */\n  constructor(options, inventoryOptions = {}) {\n    this.#options = options;\n    this.#inventoryOptions = inventoryOptions;\n    this.#content = components.createElement('div', { className: 'stores' });\n\n    this.refresh();\n  }\n\n  /**\n   * Get the container element\n   * @returns {Element}\n   */\n  get element() {\n    return this.#content;\n  }\n\n  /**\n   * Get the container action buttons.\n   * @returns {BaseControl[]}\n   */\n  get actionButtons() {\n    return this.#actionButtons;\n  }\n\n  /**\n   * Rebuild the list.\n   * @param {boolean} noChain - prevent calls to linkedInventories.\n   */\n  refresh(noChain) {\n    this.#actionButtons = [];\n    if (!noChain && this.linkedInventory) {\n      this.linkedInventory.refresh(true); // suppress linking\n    }\n    this.#content.replaceChildren();\n    if (\n      !this.#options.currentOwner.isHero() ||\n      this.#options.currentOwner.alive\n    ) {\n      let storesToShow = this.#getStoresToShow();\n\n      storesToShow.forEach((storeInfo) => {\n        const contents =\n          this.#options.currentOwner.storeManager.getStoreContents(\n            storeInfo.storeType\n          );\n        if (contents) {\n          const storeContentsElement = this.#createStoreContents(\n            storeInfo.label,\n            storeInfo.storeType,\n            contents\n          );\n          this.#content.appendChild(storeContentsElement);\n        }\n      });\n    }\n\n    if (this.#inventoryOptions.onRefresh) {\n      this.#inventoryOptions.onRefresh();\n    }\n  }\n\n  /**\n   * Get array of stores to show.\n   * @return {{label: string, storeType: StoreType}}\n   */\n  #getStoresToShow() {\n    let storesToShow;\n    switch (this.#inventoryOptions.limitation) {\n      case InventoryLimitation.SPELLS:\n        storesToShow = [\n          {\n            label: i18n`Prepared spells`,\n            storeType: StoreType.PREPARED_SPELLS,\n          },\n          { label: i18n`Known spells`, storeType: StoreType.SPELLS },\n        ];\n        break;\n      case InventoryLimitation.MAGIC:\n        storesToShow = [\n          { label: i18n`Cantrips`, storeType: StoreType.CANTRIPS },\n          {\n            label: i18n`Prepared spells`,\n            storeType: StoreType.PREPARED_SPELLS,\n          },\n          { label: i18n`Known spells`, storeType: StoreType.SPELLS },\n        ];\n        break;\n      case InventoryLimitation.READY_MAGIC:\n        storesToShow = [\n          { label: i18n`Ready magic`, storeType: StoreType.PREPARED_SPELLS },\n          { label: i18n`Cantrips`, storeType: StoreType.CANTRIPS },\n        ];\n        break;\n      case InventoryLimitation.CANTRIPS:\n        [{ label: i18n`Cantrips`, storeType: StoreType.CANTRIPS }];\n        break;\n      case InventoryLimitation.STASH_ONLY:\n        storesToShow = [this.#getStashStoreInfo()];\n        break;\n      case InventoryLimitation.STANDARD:\n      default:\n        storesToShow = [\n          { label: i18n`Purse`, storeType: StoreType.PURSE },\n          { label: i18n`Head`, storeType: StoreType.HEAD },\n          { label: i18n`Body`, storeType: StoreType.BODY },\n          { label: i18n`Hands`, storeType: StoreType.HANDS },\n          { label: i18n`Feet`, storeType: StoreType.FEET },\n          this.#getStashStoreInfo(),\n        ];\n        break;\n    }\n    return storesToShow;\n  }\n\n  /** Get the stash store for the actor.\n   * This gets the WAGON for a trader\n   * @returns {label: string, storeType: StoreType}\n   */\n  #getStashStoreInfo() {\n    if (this.#options.currentOwner.isTrader()) {\n      return { label: i18n`Wagon`, storeType: StoreType.WAGON };\n    } else {\n      return {\n        label: i18n`Backpack`,\n        storeType: StoreType.BACKPACK,\n      };\n    }\n  }\n  /**\n   * Create element showing store contents. Buttons created are pushed to\n   * this.#actionButtons.\n   * @param {string} label\n   * @param {StoreTypeValue} storeType\n   * @param {Iterator<Artefact>} contents\n   * @returns {Element}\n   */\n  #createStoreContents(label, storeType, contents) {\n    const container = components.createElement('div', {\n      className: 'store',\n    });\n\n    container.appendChild(\n      components.createElement('span', {\n        className: 'store-label',\n        text: label,\n      })\n    );\n\n    const contentsElement = components.createElement('div', {\n      className: 'store-contents',\n    });\n    container.appendChild(contentsElement);\n\n    [...contents]\n      .sort((a, b) => a.id < b.id)\n      .forEach((artefact) => {\n        const options = { ...this.#options };\n        options.refresh = this.refresh.bind(this);\n        options.storeType = storeType;\n        options.artefact = artefact;\n        const button = this.#createArtefactButtonControl(options);\n        if (button.closes !== null && button.closes !== undefined) {\n          this.#actionButtons.push(button);\n        }\n        contentsElement.appendChild(button.element);\n      });\n    return container;\n  }\n  /**\n   * Create an artefact button. If a custom action is set, the button is a closer.\n   * Otherwise it just pops up a dialog giving details about the artefact.\n   * @param {ArtefactDialogOptions} options\n   * @returns {components.BitmapButtonControl}\n   */\n  #createArtefactButtonControl(options) {\n    const label = createArtefactButtonLabel(options);\n    let action;\n    let closes;\n    if (options.customAction) {\n      action = () =>\n        options.customAction(options.currentOwner, options.artefact);\n      closes = DialogResponse.OK;\n    } else {\n      action = async () => {\n        await showArtefactDialog(options).then(() => options.refresh?.());\n      };\n    }\n    return new components.BitmapButtonControl({\n      rightLabel: label,\n      imageName: options.artefact.iconImageName,\n      action: action,\n      closes: closes,\n    });\n  }\n}\n\n/**\n * Show the actor's traits.\n * @param {Actor} actor\n * @returns {Promise}\n */\nfunction showTraits(actor) {\n  const container = document.createElement('div');\n  container.appendChild(createActorElement(actor, { hideDescription: true }));\n  return UI.showControlsDialog(container);\n}\n\n/**\n * Show a rest action dialog.\n * @param {module:players/actors~Actor} actor\n * @returns {Promise} fulfils to undefined.\n */\nfunction showRestActionDialog(actor) {\n  const store = actor.storeManager.getStore(StoreType.BACKPACK);\n\n  const meals = [];\n  const drinks = [];\n  store.values().forEach((item) => {\n    if (item.artefactType === ArtefactType.CONSUMABLE) {\n      const type = item.traits.get('TYPE');\n      if (type === 'MEAL') {\n        meals.push(item);\n      } else if (type === 'DRINK') {\n        drinks.push(item);\n      }\n    }\n  });\n\n  const messageContainer = document.createElement('div');\n  messageContainer.appendChild(createIdCard(actor));\n\n  const longRestPossible = dndAction.canRest(\n    'LONG',\n    meals.length,\n    drinks.length\n  );\n  const shortRestPossible = dndAction.canRest(\n    'SHORT',\n    meals.length,\n    drinks.length\n  );\n  const choices = [];\n\n  messageContainer.appendChild(\n    components.createElement('p', { text: i18n`MESSAGE EXPLAIN REST` })\n  );\n  let message;\n  if (!longRestPossible && !shortRestPossible) {\n    message = i18n`MESSAGE CANNOT REST`;\n  } else if (!longRestPossible) {\n    message = i18n`MESSAGE CANNOT REST LONG`;\n  }\n  messageContainer.appendChild(\n    components.createElement('p', { text: message })\n  );\n  let shortIndex = -1;\n  let longIndex = -1;\n  if (shortRestPossible) {\n    shortIndex = choices.length;\n    choices.push(i18n`BUTTON REST SHORT`);\n  }\n  if (longRestPossible) {\n    longIndex = choices.length;\n    choices.push(i18n`BUTTON REST LONG`);\n  }\n  choices.push(i18n`BUTTON CONTINUE`);\n\n  return UI.showChoiceDialog(\n    i18n`DIALOG TITLE CHOICES`,\n    messageContainer,\n    choices\n  ).then((choice) => {\n    if (choice === shortIndex) {\n      discardItemsFromStore(store, meals, dndAction.MEALS_FOR_SHORT_REST);\n      discardItemsFromStore(store, drinks, dndAction.DRINKS_FOR_SHORT_REST);\n      dndAction.takeRest(actor, 'SHORT');\n    } else if (choice === longIndex) {\n      discardItemsFromStore(store, meals, dndAction.MEALS_FOR_LONG_REST);\n      discardItemsFromStore(store, drinks, dndAction.DRINKS_FOR_LONG_REST);\n      dndAction.takeRest(actor, 'LONG');\n      return showPrepareSpellsDialog(actor);\n    }\n    return;\n  });\n}\n\n/**\n * Show dialog allowing the player to prepare their spells.\n * @param {module:players/actors~Actor} actor\n */\nfunction showPrepareSpellsDialog(actor) {\n  const container = components.createElement('div', { className: 'inventory' });\n\n  container.appendChild(\n    createActorElement(actor, { hideDescription: true, hideTraits: true })\n  );\n  const inventoryContainer = new InventoryContainerElement(\n    {\n      currentOwner: actor,\n      prospectiveOwner: actor,\n      allowSpellPrep: true,\n    },\n    {\n      limitation: InventoryLimitation.SPELLS,\n    }\n  );\n  container.appendChild(inventoryContainer.element);\n  return UI.showControlsDialog(container, {\n    title: i18n`DIALOG TITLE PREPARE SPELLS`,\n    preamble: i18n`MESSAGE EXPLAIN SPELL PREP`,\n  });\n}\n\n/**\n * @param {module:players/artefacts~StoreInterface}\n * @param {module:players/artefacts~Artefact[]} items\n * @param {number} qty\n */\nfunction discardItemsFromStore(store, items, qty) {\n  if (qty > items.length) {\n    LOG.error(\n      'Attempt being made to discard more items than provided in array.'\n    );\n  }\n  for (let index = 0; index < qty && index < items.length; index++) {\n    const taken = store.take(items[index]);\n    if (!taken) {\n      LOG.error(`Trying to take artefact ${items[index]}, but none found.`);\n    }\n  }\n}\n\n/**\n * Show actor's inventory.\n * @param {Actor} actor\n * @param {{allowConsumption: boolean, allowMagicUse: boolean, limitation:InventoryLimitation}} [options = {}]\n */\nfunction showInventory(actor, options = {}) {\n  const container = components.createElement('div', { className: 'inventory' });\n  const actorContainer = components.createElement('div', {\n    className: 'actor-container',\n  });\n  container.appendChild(actorContainer);\n  actorContainer.appendChild(\n    createActorElement(actor, { hideDescription: true, hideTraits: true })\n  );\n  const inventoryContainer = new InventoryContainerElement(\n    {\n      currentOwner: actor,\n      prospectiveOwner: actor,\n      allowMagicUse: options.allowMagicUse,\n      allowConsumption: options.allowConsumption,\n    },\n    {\n      limitation: options.limitation,\n      onRefresh: () =>\n        actorContainer.replaceChildren(\n          createActorElement(actor, { hideDescription: true, hideTraits: true })\n        ),\n    }\n  );\n  container.appendChild(inventoryContainer.element);\n  return UI.showControlsDialog(container);\n}\n\n/**\n * Show actor's inventory and allow casting of spells.\n * @param {Actor} actor\n * @param {{allowMagicUse: boolean, limitation:InventoryLimitation}} [options = {}]\n * @returns {Promise}\n */\nfunction showCastSpells(actor) {\n  const container = components.createElement('div', { className: 'inventory' });\n\n  const inventoryContainer = new InventoryContainerElement(\n    {\n      currentOwner: actor,\n      prospectiveOwner: actor,\n      allowMagicUse: true,\n      showDamage: true,\n      customAction: (enactor, artefact) => artefact.interaction.react(enactor),\n    },\n    {\n      limitation: InventoryLimitation.READY_MAGIC,\n    }\n  );\n  container.appendChild(inventoryContainer.element);\n  const cancelButton = new components.TextButtonControl({\n    label: i18n`BUTTON CONTINUE`,\n    closes: DialogResponse.CANCEL,\n  });\n\n  return UI.showControlsDialog(container, {\n    title: i18n`DIALOG TITLE PICK SPELL TO CAST`,\n    actionButtons: [...inventoryContainer.actionButtons, cancelButton],\n  });\n}\n\n/**\n * Create buttons for dialog. The buttons are added to the container.\n * @param {Element} container - container for the action buttons.\n * @param {ArtefactDialogOptions} options\n * @returns {module:utils/dom/components~BaseControlElement}\n */\nfunction createArtefactDialogButtons(container, options) {\n  const selfAction =\n    options.currentOwner === options.prospectiveOwner ||\n    !options.prospectiveOwner;\n  if (selfAction) {\n    return createSelfActionArtefactDialogButtons(container, options);\n  }\n  switch (options.actionType) {\n    case ArtefactActionType.FIND:\n      return createFindArtefactDialogButtons(container, options);\n    case ArtefactActionType.SELL:\n      return createSellArtefactDialogButtons(container, options);\n    case ArtefactActionType.PILLAGE:\n      return createPillageArtefactDialogButtons(container, options);\n    case ArtefactActionType.VIEW:\n    default:\n      return [];\n  }\n}\n/**\n * Create buttons for dialog. The buttons are added to the container.\n * @param {Element} container - container for the action buttons.\n * @param {ArtefactDialogOptions} options\n * @returns {module:utils/dom/components~BaseControlElement[]}\n */\nfunction createFindArtefactDialogButtons(container, options) {\n  const actionButtons = [];\n  const possibleStore = options.prospectiveOwner.storeManager.findSuitableStore(\n    options.artefact\n  );\n  let button;\n  if (!possibleStore) {\n    container.appendChild(createFailedStorageGuidance(options));\n  } else {\n    let label;\n    let action;\n    if (\n      possibleStore.storeType === StoreType.CANTRIPS ||\n      possibleStore.storeType === StoreType.SPELLS ||\n      possibleStore.storeType === StoreType.READY_SPELLS\n    ) {\n      label = i18n`BUTTON LEARN SPELL`;\n      action = ArtefactAction.LEARN_SPELL;\n    } else {\n      label = i18n`BUTTON TAKE ARTEFACT`;\n      action = ArtefactAction.TAKE;\n    }\n    button = new components.TextButtonControl({\n      label: label,\n      closes: action,\n    });\n    actionButtons.push(button);\n  }\n\n  button = new components.TextButtonControl({\n    label: i18n`BUTTON LEAVE ARTEFACT`,\n    closes: ArtefactAction.LEAVE,\n  });\n  actionButtons.push(button);\n\n  return actionButtons;\n}\n/**\n * Create buttons for dialog. The buttons are added to the container.\n * @param {Element} container - container for the action buttons.\n * @param {ArtefactDialogOptions} options\n * @returns {module:utils/dom/components~BaseControlElement}\n */\nfunction createSelfActionArtefactDialogButtons(container, options) {\n  if (options.artefact.artefactType === ArtefactType.COINS) {\n    return;\n  }\n  let actionButtons = [];\n\n  switch (options.artefact.artefactType) {\n    case ArtefactType.SPELL:\n      actionButtons = createSpellButtons(options);\n      break;\n    case ArtefactType.CANTRIP:\n      actionButtons = createCantripButtons(options);\n      break;\n    case ArtefactType.CONSUMABLE:\n      actionButtons = createConsumeButtons(options);\n      break;\n    default:\n      actionButtons = createStandardArtefactButtons(options);\n  }\n\n  //actionButtons.forEach((button) => container.appendChild(button.element));\n  actionButtons.push(\n    new components.TextButtonControl({\n      label: i18n`BUTTON CONTINUE`,\n      closes: ArtefactAction.CONTINUE,\n    })\n  );\n  return actionButtons;\n}\n\n/**\n * Create cantrip artefact buttons.\n * @param {ArtefactDialogOptions} options\n * @returns {module:utils/dom/components~BaseControlElement[]}\n */\nfunction createCantripButtons(options) {\n  const buttons = [];\n  if (options.allowMagicUse) {\n    buttons.push(\n      new components.TextButtonControl({\n        label: getLabelForUse(options.artefact),\n        closes: ArtefactAction.USE,\n      })\n    );\n  }\n\n  buttons.push(\n    new components.TextButtonControl({\n      label: i18n`Forget`,\n      closes: ArtefactAction.DISCARD,\n    })\n  );\n  return buttons;\n}\n\n/**\n * Create spell artefact buttons.\n * @param {ArtefactDialogOptions} options\n * @returns {module:utils/dom/components~BaseControlElement[]}\n */\nfunction createSpellButtons(options) {\n  const buttons = [];\n  const artefact = options.artefact;\n  if (options.allowMagicUse) {\n    buttons.push(\n      new components.TextButtonControl({\n        label: getLabelForUse(options.artefact),\n        closes: ArtefactAction.USE,\n      })\n    );\n  } else if (\n    options.storeType === artefact.stashStoreType &&\n    options.allowSpellPrep\n  ) {\n    buttons.push(\n      new components.TextButtonControl({\n        label: i18n`BUTTON PREPARE SPELL`,\n        closes: ArtefactAction.PREPARE_SPELL,\n      })\n    );\n  }\n\n  if (options.allowSpellPrep) {\n    buttons.push(\n      new components.TextButtonControl({\n        label: i18n`BUTTON FORGET`,\n        closes: ArtefactAction.DISCARD,\n      })\n    );\n  }\n\n  return buttons;\n}\n\n/**\n * Create consume artefact buttons.\n * @param {ArtefactDialogOptions} options\n * @returns {module:utils/dom/components~BaseControlElement[]}\n */\nfunction createConsumeButtons(options) {\n  const buttons = [];\n\n  if (isArtefactUsable(options)) {\n    buttons.push(\n      new components.TextButtonControl({\n        label: getLabelForUse(options.artefact),\n        closes: ArtefactAction.CONSUME,\n      })\n    );\n  }\n  buttons.push(\n    new components.TextButtonControl({\n      label: i18n`BUTTON DISCARD`,\n      closes: ArtefactAction.DISCARD,\n    })\n  );\n  return buttons;\n}\n/**\n * Check to see if the artefact is allowed to be used.\n * @param {ArtefactDialogOptions} options\n * @returns {boolean}\n */\nfunction isArtefactUsable(options) {\n  const artefact = options.artefact;\n  if (!artefact.isUsable()) {\n    return false;\n  }\n  if (artefact.isMagic()) {\n    return options.allowMagicUse;\n  }\n  if (artefact.isConsumable()) {\n    return options.allowConsumption;\n  }\n}\n/**\n * Create standard artefact buttons.\n * @param {ArtefactDialogOptions} options\n * @returns {module:utils/dom/components~BaseControlElement[]}\n */\nfunction createStandardArtefactButtons(options) {\n  const buttons = [];\n\n  if (isArtefactUsable(options)) {\n    buttons.push(\n      new components.TextButtonControl({\n        label: getLabelForUse(options.artefact),\n        closes: ArtefactAction.USE,\n      })\n    );\n  } else if (\n    options.storeType === options.artefact.stashStoreType &&\n    options.artefact.equipStoreType\n  ) {\n    buttons.push(\n      new components.TextButtonControl({\n        label: i18n`BUTTON EQUIP`,\n        closes: ArtefactAction.EQUIP,\n      })\n    );\n  } else if (\n    options.storeType === options.artefact.equipStoreType &&\n    (!options.artefact.stashInWagon ||\n      options.currentOwner.storeManager.hasWagon)\n  ) {\n    buttons.push(\n      new components.TextButtonControl({\n        label: i18n`BUTTON STASH`,\n        closes: ArtefactAction.STASH,\n      })\n    );\n  }\n\n  buttons.push(\n    new components.TextButtonControl({\n      label: options.artefact.isMagic() ? i18n`Forget` : i18n`BUTTON DISCARD`,\n      closes: ArtefactAction.DISCARD,\n    })\n  );\n  return buttons;\n}\n\n/**\n * Get a suitable label for a button to use an artefact.\n * @param {module:players/artefacts~Artefact} artefact\n * @returns {string}\n */\nfunction getLabelForUse(artefact) {\n  switch (artefact.artefactType) {\n    case ArtefactType.CONSUMABLE:\n      return i18n`BUTTON CONSUME`;\n    case ArtefactType.SPELL:\n    case ArtefactType.CANTRIP:\n      return i18n`BUTTON CAST SPELL`;\n    default:\n      return i18n`BUTTON USE`;\n  }\n}\n/**\n * Create buttons for dialog. The buttons are added to the container.\n * @param {Element} container - container for the action buttons.\n * @param {ArtefactDialogOptions} options\n * @returns {module:utils/dom/components~BaseControlElement}\n */\nfunction createSellArtefactDialogButtons(container, options) {\n  if (options.artefact.artefactType === ArtefactType.COINS) {\n    return;\n  }\n  const actionButtons = [];\n  const artefactCostInGp = options.artefact.costInGp;\n  let buyersFundsInGp;\n  if (options.prospectiveOwner.isTrader()) {\n    buyersFundsInGp = Number.MAX_SAFE_INTEGER; // traders have unlimited funds.\n  } else {\n    buyersFundsInGp = options.prospectiveOwner.storeManager.getPurseValue();\n  }\n\n  // button labels shows action relative to the hero.\n  // i.e. although the action may be the trader selling\n  // an item, to the player this is viewed as buying.\n  let button;\n\n  const prospectiveStore =\n    options.prospectiveOwner.storeManager.findSuitableStore(options.artefact);\n  if (!prospectiveStore) {\n    container.appendChild(createFailedStorageGuidance(options));\n    if (!options.currentOwner.isTrader()) {\n      createSelfActionArtefactDialogButtons(container, options);\n    }\n    return;\n  }\n  if (buyersFundsInGp < options.artefact.costInGp) {\n    container.appendChild(\n      createNoFundsGuidance(buyersFundsInGp, artefactCostInGp)\n    );\n    if (!options.currentOwner.isTrader()) {\n      createSelfActionArtefactDialogButtons(container, options);\n    }\n    return;\n  }\n  button = new components.TextButtonControl({\n    label: options.currentOwner.isTrader()\n      ? i18n`BUTTON BUY FOR GP ${options.artefact.costInGp.toFixed(2)}`\n      : i18n`BUTTON SELL FOR GP ${options.artefact.sellBackPriceInGp.toFixed(\n          2\n        )}`,\n    closes: ArtefactAction.SELL,\n  });\n  actionButtons.push(button);\n\n  button = new components.TextButtonControl({\n    label: i18n`BUTTON CONTINUE`,\n    closes: ArtefactAction.CONTINUE,\n  });\n  actionButtons.push(button);\n  return actionButtons;\n}\n\n/**\n * Create buttons for dialog. The buttons are added to the container.\n * @param {Element} container - container for the action buttons.\n * @param {ArtefactDialogOptions} options\n * @returns {module:utils/dom/components~BaseControlElement}\n */\nfunction createPillageArtefactDialogButtons(container, options) {\n  if (options.currentOwner.alive) {\n    return createSelfActionArtefactDialogButtons(container, options);\n  }\n  const actionButtons = [];\n\n  const prospectiveStore =\n    options.prospectiveOwner.storeManager.findSuitableStore(options.artefact);\n  if (!prospectiveStore) {\n    container.appendChild(createFailedStorageGuidance(options));\n    if (options.currentOwner.alive) {\n      createSelfActionArtefactDialogButtons(container, options);\n    }\n    return;\n  }\n\n  let button = new components.TextButtonControl({\n    label: i18n`BUTTON PILLAGE`,\n    closes: ArtefactAction.PILLAGE,\n  });\n  actionButtons.push(button);\n\n  button = new components.TextButtonControl({\n    label: i18n`BUTTON LEAVE ARTEFACT`,\n    closes: ArtefactAction.CONTINUE,\n  });\n  actionButtons.push(button);\n\n  return actionButtons;\n}\n\n/**\n * Create an element advising that insufficient funds are available.\n * @param {number} availableGp\n * @param {number} requiredGp\n * @returns {Element}\n */\nfunction createNoFundsGuidance(availableGp, requiredGp) {\n  let text;\n  text = i18n`MESSAGE INSUFFICIENT FUNDS ${requiredGp} ${availableGp}`;\n\n  return components.createElement('p', { className: 'guidance', text: text });\n}\n/**\n * Create an element that provides guidance about why something cannot be stored.\n * @param {ArtefactDialogOptions} options\n * @returns {Element}\n */\nfunction createFailedStorageGuidance(options) {\n  let text;\n  if (options.artefact.stashInWagon) {\n    text = i18n`MESSAGE MAKE SPACE IN EQUIP`;\n  } else {\n    text = i18n`MESSAGE MAKE SPACE IN BACKPACK`;\n  }\n  return components.createElement('p', { className: 'guidance', text: text });\n}\n\n/**\n * Show equipment dialog.\n * @param {ArtefactDialogOptions} options\n * @return {Promise} fulfils to response from the dialog.\n */\nfunction showEquipDialog(options) {\n  const artefact = options.artefact;\n  const container = components.createElement('div', {\n    className: 'use-weapon-dialog',\n  });\n  container.appendChild(createActorElement(artefact));\n\n  const actionButtons = createArtefactDialogButtons(container, options);\n\n  return UI.showControlsDialog(container, {\n    preamble: options.preamble,\n    actionButtons: actionButtons,\n    row: true,\n  });\n}\n\n/**\n * Create an id card element for an actor.\n * @param {module:players/actors~Actor|module:game/artefact~Artefacts} actor\n * @returns {Element}\n */\nfunction createIdCard(actor) {\n  const idCard = components.createElement('div', {\n    className: 'actor-id-card',\n  });\n  idCard.appendChild(components.createBitmapElement(actor.iconImageName));\n  idCard.appendChild(\n    components.createElement('span', {\n      text: actor.traits?.get('NAME') ?? i18n`Unknown`,\n    })\n  );\n\n  const hp = actor.traits.getInt('HP');\n  if (hp) {\n    const hpMax = actor.traits.getInt('HP_MAX');\n    let hpText;\n    if (hp === 0) {\n      hpText = i18n`(DEAD)`;\n    } else if (hpMax) {\n      hpText = i18n`(HP OUT OF VALUE) ${hp} ${hpMax}`;\n    } else {\n      hpText = i18n`(HP VALUE) ${hp}`;\n    }\n    idCard.appendChild(\n      components.createElement('span', {\n        text: hpText,\n      })\n    );\n  }\n  if (actor.traits.getCharacterLevel) {\n    idCard.appendChild(\n      components.createElement('span', {\n        text: i18n`CHARACTER LEVEL: ${actor.traits.getCharacterLevel()}`,\n      })\n    );\n  }\n\n  return idCard;\n}\n/**\n * Create an element describing an actor.\n * @param {module:players/actors~Actor} actor\n * @param {Object} options\n * @param {boolean} options.hideDescription\n * @param {boolean} options.hideTraits\n * @param {string | Element} options.description - override the normal\n * description of the actor.\n * @returns {Element}\n */\nfunction createActorElement(actor, options = {}) {\n  const container = components.createElement('div', {\n    className: 'actor-detail',\n  });\n  const idCard = createIdCard(actor);\n  container.appendChild(idCard);\n\n  let descriptionElement;\n  if (!options.hideDescription) {\n    if (options.description) {\n      descriptionElement =\n        options.description instanceof Element\n          ? options.description\n          : components.createElement('p', { text: options.description });\n    } else if (actor.description) {\n      descriptionElement = components.createElement('p', {\n        text: actor.description,\n      });\n    }\n  }\n  if (descriptionElement) {\n    container.appendChild(descriptionElement);\n  }\n  if (!options.hideTraits) {\n    container.appendChild(createTraitsList(actor, ['NAME'], true));\n  }\n  return container;\n}\n\n/**\n * Create an element showing an actor's traits. Gold coins contained in the actor's\n * purse are included as a trait if includeGold flag is set.\n * @param {module:players/actors~Actor|module:players/artefacts~Artefact} actor\n * @param {string[]} excludedKeys - Keys to ignore. Elements starting with an\n * underscore are automatically hidden.\n * @param {boolean} includeGold - flag to determine if gold pieces are included.\n * @returns {Element}\n */\nfunction createTraitsList(actor, excludedKeys, includeGold) {\n  const traitsList = document.createElement('ul');\n  if (actor.traits.getEffectiveAc) {\n    traitsList.appendChild(\n      components.createElement('li', {\n        text: i18n`AC (including armour)${actor.traits.getEffectiveAc()}`,\n      })\n    );\n  }\n\n  if (includeGold) {\n    const goldPieces = actor.storeManager?.getPurseValue();\n    if (goldPieces) {\n      traitsList.appendChild(\n        components.createElement('li', {\n          text: gpAsString(goldPieces),\n        })\n      );\n    }\n  }\n\n  actor.traits?.getAllTraitsSorted().forEach((value, key) => {\n    if (value && value !== '0') {\n      const displayedValue = Array.isArray(value) ? value.join(', ') : value;\n      if (!excludedKeys.includes(key) && !key.startsWith('_')) {\n        const displayedKey = key?.replace('_', ' ');\n        const item = document.createElement('li');\n        const label = components.createElement('span', {\n          text: `${displayedKey}: `,\n        });\n        const content = components.createElement('span', {\n          text: displayedValue,\n        });\n        traitsList.appendChild(item);\n        item.appendChild(label);\n        item.appendChild(content);\n      }\n    }\n  });\n  return traitsList;\n}\n\n/**\n * Create a label for an artefact button.\n * @param {ArtefactDialogOptions} options\n * @return {string}\n */\nfunction createArtefactButtonLabel(options) {\n  const traits = options.artefact.traits;\n  let label = traits.get('NAME');\n  if (options.showDamage) {\n    const damage = traits.getDamageDiceWhenCastBy\n      ? traits.getDamageDiceWhenCastBy(options.currentOwner)\n      : traits.get('DMG');\n    const range = traits.get('RANGE');\n    if (damage) {\n      label = `${label} DMG: ${damage}`;\n    }\n    if (range) {\n      label = `${label} RANGE: ${range}`;\n    }\n  }\n  if (\n    options.showPrice ||\n    options.artefact.artefactType === ArtefactType.COINS\n  ) {\n    const price = options.currentOwner.isTrader()\n      ? options.artefact.costInGp\n      : options.artefact.sellBackPriceInGp;\n    label = `${label} ${price.toFixed(2)} GP`;\n  }\n  return label;\n}\n\n/**\n * Show a dialog where one actor can take artefacts from another.\n * @param {Actor} buyer\n * @param {Actor} seller\n * @param {boolean} pillage\n * @returns {Promise} fulfils to undefined on completion.\n */\nexport function showTradeOrPillageDialog(buyer, seller, pillage) {\n  const container = components.createElement('div', {\n    className: 'trade',\n  });\n  const sideBySide = components.createElement('div', {\n    className: 'side-by-side',\n  });\n  container.appendChild(sideBySide);\n  const buyerSide = components.createElement('div', {});\n  const sellerSide = components.createElement('div', {});\n  sideBySide.appendChild(buyerSide);\n  sideBySide.appendChild(sellerSide);\n  buyerSide.appendChild(createIdCard(buyer));\n  sellerSide.appendChild(createIdCard(seller));\n\n  const actionType = pillage\n    ? ArtefactActionType.PILLAGE\n    : ArtefactActionType.SELL;\n  const buyerInventory = new InventoryContainerElement({\n    currentOwner: buyer,\n    prospectiveOwner: seller,\n    actionType: actionType,\n    showPrice: true,\n  });\n  const sellerInventory = new InventoryContainerElement(\n    {\n      currentOwner: seller,\n      prospectiveOwner: buyer,\n      actionType: actionType,\n      showPrice: true,\n    },\n    {\n      limitation: pillage\n        ? InventoryLimitation.STANDARD\n        : InventoryLimitation.STASH_ONLY,\n    }\n  );\n  buyerInventory.linkedInventory = sellerInventory;\n  sellerInventory.linkedInventory = buyerInventory;\n\n  buyerSide.appendChild(buyerInventory.element);\n  sellerSide.appendChild(sellerInventory.element);\n  const button = new components.TextButtonControl({\n    label: i18n`BUTTON CONTINUE`,\n  });\n  button.closes = DialogResponse.CANCEL;\n  const actionButtons = [];\n  actionButtons.push(button);\n  return UI.showControlsDialog(container, {\n    preamble: pillage ? i18n`DIALOG TITLE PILLAGE` : i18n`DIALOG TITLE TRADE`,\n    actionButtons: actionButtons,\n  });\n}\n\n/**\n * Show a dialog where one actor can take artefacts from another.\n * @param {Actor} buyer\n * @param {Actor} seller\n * @returns {Promise} fulfils to undefined on completion.\n */\nexport function showTradeDialog(buyer, seller) {\n  return showTradeOrPillageDialog(buyer, seller, false);\n}\n\n/**\n * Show a dialog where one actor can take artefacts from another.\n * @param {Actor} pillager\n * @param {Actor} victim\n * @returns {Promise} fulfils to undefined on completion.\n */\nexport function showPillageDialog(pillager, victim) {\n  return showTradeOrPillageDialog(pillager, victim, true);\n}\n\n// Export dialogs\n/**\n * Display details about the actor.\n * @param {module:players/actors~Actor} actor\n * @param {Object} [options = {}]\n * @param {boolean} options.allowRest\n * @param {boolean} options.allowMagicUse - can magic artefacts be used.\n * @param {boolean} options.allowConsumption - can artefacts be consumed.\n * @param {string} options.description - override the actor description\n * @param {string} options.okButtonLabel\n */\nexport function showActorDetailsDialog(actor, options = {}) {\n  const container = document.createElement('div');\n  container.appendChild(\n    components.createElement('span', {\n      text: i18n`Dungeon level: ${SCENE_MANAGER.getCurrentSceneLevel()}`,\n    })\n  );\n  const actorContainer = components.createElement('div', {\n    className: 'actor-container',\n  });\n  container.appendChild(actorContainer);\n  const actorElement = createActorElement(actor, {\n    hideTraits: true,\n    description: options.description,\n  });\n  actorContainer.appendChild(actorElement);\n  let button;\n  let actionButtons;\n  if (!actor.isProp()) {\n    button = new components.TextButtonControl({\n      label: i18n`BUTTON INVENTORY`,\n      action: () =>\n        showInventory(actor, {\n          allowConsumption: options.allowConsumption,\n          allowMagicUse: options.allowMagicUse,\n        }).then(() =>\n          actorContainer.replaceChildren(\n            createActorElement(actor, {\n              hideTraits: true,\n              description: options.description,\n            })\n          )\n        ),\n    });\n    container.appendChild(button.element);\n    button = new components.TextButtonControl({\n      label: i18n`BUTTON TRAITS`,\n      action: () => showTraits(actor),\n    });\n    container.appendChild(button.element);\n\n    button = new components.TextButtonControl({\n      label: i18n`BUTTON MAGIC`,\n      action: () =>\n        showInventory(actor, {\n          allowMagicUse: false,\n          limitation: InventoryLimitation.MAGIC,\n        }),\n    });\n    container.appendChild(button.element);\n\n    if (options.allowRest) {\n      button = new components.TextButtonControl({\n        label: i18n`BUTTON REST`,\n        action: () => {\n          return showRestActionDialog(actor).then(() =>\n            actorElement.replaceWith(\n              createActorElement(actor, { hideTraits: true })\n            )\n          );\n        },\n      });\n      container.appendChild(button.element);\n    }\n\n    if (options.allowMagicUse) {\n      actionButtons = actionButtons ?? [];\n      button = new components.TextButtonControl({\n        label: i18n`BUTTON CAST SPELL`,\n      });\n      button.closes = 'CAST SPELL';\n      actionButtons.push(button);\n    }\n  }\n  if (actionButtons) {\n    button = new components.TextButtonControl({\n      label: i18n`BUTTON CONTINUE`,\n    });\n    button.closes = DialogResponse.CANCEL;\n    actionButtons.push(button);\n  }\n\n  return UI.showControlsDialog(container, {\n    okButtonLabel: options.okButtonLabel,\n    actionButtons: actionButtons,\n  }).then((closes) => {\n    switch (closes) {\n      case 'CAST SPELL':\n        return showCastSpells(actor);\n      default:\n        return Promise.resolve();\n    }\n  });\n}\n\n/**\n * Show artefact dialog.\n * @param {ArtefactDialogOptions} options\n * @return {Promise} fulfils to undefined on completion.\n */\nexport function showArtefactDialog(options) {\n  if (!options.prospectiveOwner) {\n    options.prospectiveOwner = options.currentOwner; // self action\n  }\n  const sourceStoreManager = options.currentOwner.storeManager;\n  const destStoreManager = options.prospectiveOwner.storeManager;\n  const artefact = options.artefact;\n\n  let dialogFn;\n  switch (options.artefact.artefactType) {\n    case ArtefactType.WEAPON:\n    case ArtefactType.TWO_HANDED_WEAPON:\n    case ArtefactType.HEAD_GEAR:\n    case ArtefactType.ARMOUR:\n    case ArtefactType.SHIELD:\n    case ArtefactType.COINS:\n    case ArtefactType.CONSUMABLE:\n    case ArtefactType.SPELL:\n    case ArtefactType.CANTRIP:\n      dialogFn = showEquipDialog;\n      break;\n  }\n  return dialogFn(options).then((response) => {\n    switch (response) {\n      case ArtefactAction.CONSUME:\n        sourceStoreManager.discard(artefact);\n        return artefact.interaction.react(options.currentOwner);\n      case ArtefactAction.DISCARD:\n        sourceStoreManager.discard(artefact);\n        break;\n      case ArtefactAction.PREPARE_SPELL:\n      case ArtefactAction.EQUIP:\n        destStoreManager.equip(artefact);\n        break;\n      case ArtefactAction.LEARN_SPELL:\n        if (\n          artefact.isMagic() &&\n          destStoreManager.hasArtefactWithSameId(artefact)\n        ) {\n          return UI.showOkDialog(i18n`MESSAGE SPELL ALREADY KNOWN`);\n        } else {\n          sourceStoreManager.discard(artefact);\n          const store = destStoreManager.findSuitableStore(artefact);\n          store.add(artefact);\n        }\n        break;\n      case ArtefactAction.PILLAGE:\n        {\n          sourceStoreManager.discard(artefact);\n          const store = destStoreManager.findSuitableStore(artefact);\n          store.add(artefact);\n        }\n        break;\n      case ArtefactAction.SELL:\n        {\n          const money = options.currentOwner.isTrader()\n            ? artefact.costInGp\n            : artefact.sellBackPriceInGp;\n          sourceStoreManager.addToPurse(money);\n          if (!options.prospectiveOwner.isTrader()) {\n            destStoreManager.takeFromPurse(money); // traders have unlimited funds\n          }\n          sourceStoreManager.discard(artefact);\n          if (artefact.stashInWagon && !destStoreManager.hasWagon) {\n            destStoreManager.equip(artefact, { direct: true });\n          } else {\n            destStoreManager.stash(artefact, { direct: true });\n          }\n        }\n        break;\n      case ArtefactAction.STASH:\n        destStoreManager.stash(artefact);\n        break;\n      case ArtefactAction.TAKE:\n        sourceStoreManager.discard(artefact);\n        if (artefact.stashInWagon && !destStoreManager.hasWagon) {\n          destStoreManager.equip(artefact, { direct: true });\n        } else {\n          destStoreManager.stash(artefact, { direct: true });\n        }\n\n        break;\n      case ArtefactAction.USE:\n        return artefact.interaction.react(options.currentOwner);\n    }\n    return Promise.resolve();\n  });\n}\n\n/**\n * Show the rest dialog for the hero\n * @param {module:players/actors~Actor} actor} heroActor\n * @returns {Promise} fulfils to null;\n */\nexport function showRestDialog(heroActor) {\n  const messageContainer = components.createElement('div');\n  messageContainer.appendChild(\n    components.createElement('p', {\n      text: i18n`MESSAGE REST DIALOG`,\n    })\n  );\n  const restReqs = components.createElement('ul');\n  messageContainer.appendChild(restReqs);\n  restReqs.appendChild(\n    components.createElement('li', {\n      text: i18n`SHORT REST REQ ${dndAction.DRINKS_FOR_SHORT_REST} ${dndAction.MEALS_FOR_SHORT_REST}`,\n    })\n  );\n  restReqs.appendChild(\n    components.createElement('li', {\n      text: i18n`LONG REST REQ ${dndAction.DRINKS_FOR_LONG_REST} ${dndAction.MEALS_FOR_LONG_REST}`,\n    })\n  );\n  return showActorDetailsDialog(heroActor, {\n    allowConsumption: true,\n    allowRest: true,\n    description: messageContainer,\n    okButtonLabel: i18n`BUTTON TO NEXT ROOM`,\n  });\n}\n","/**\n * @file Artefacts\n * Artefacts are items that exist in the game but are never rendered in the\n * tile map. They can be stored, or worn. Examples are money and weapons. They can\n * be held by actors, typically a trader or hiddenArtefact.\n * @module players/artefacts\n */\n/**\n * license {@link https://opensource.org/license/mit/|MIT}\n * Copyright 2024 Steve Butler (henspace.com).\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the “Software”), to deal in\n * the Software without restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n * Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */\n\nimport LOG from '../utils/logging.js';\nimport { ActorType } from './actors.js';\nimport * as coins from '../utils/game/coins.js';\nimport { i18n } from '../utils/messageManager.js';\nimport { Traits } from '../dnd/traits.js';\nimport { buildArtefact } from '../dnd/almanacs/artefactBuilder.js';\nimport { parseAlmanacLine } from '../dnd/almanacs/almanacs.js';\n\n/**\n * @typedef {Object} StoreTypeValue\n * @property {number} space - amount of space in store.\n * @property {boolean} money - if true, a MoneyStore is used.\n * @property {boolean} spacesExpand - if true every artefact takes one space.\n */\n\n/**\n * Enumeration of store types.\n * @enum {StoreTypeValue}\n */\nexport const StoreType = {\n  HEAD: { id: 'HEAD', space: 1, money: false, spacesExpand: false },\n  BODY: { id: 'BODY', space: 1, money: false, spacesExpand: false },\n  HANDS: { id: 'HANDS', space: 2, money: false, spacesExpand: false },\n  FEET: { id: 'FEET', space: 2, money: false, spacesExpand: false },\n  BACKPACK: { id: 'BACKPACK', space: 8, money: false, spacesExpand: true },\n  WAGON: { id: 'WAGON', space: 8, money: false, spacesExpand: true },\n  CANTRIPS: { id: 'CANTRIPS', space: 999, money: false, spacesExpand: true },\n  SPELLS: {\n    id: 'SPELLS',\n    space: 9,\n    money: false,\n    spacesExpand: true,\n  },\n  PREPARED_SPELLS: {\n    id: 'PREPARED SPELLS',\n    space: 9,\n    money: false,\n    spacesExpand: true,\n  },\n  PURSE: {\n    id: 'PURSE',\n    space: Number.MAX_SAFE_INTEGER,\n    money: true,\n    spacesExpand: false,\n  },\n};\n\n/**\n * @typedef {Object} ArtefactTypeValue\n * @property {number} storageSpace - how much storage is used.\n * @property {{stash: StoreTypeValue, equip: StoreTypeValue}} storeType - storage locations\n */\n/**\n * Enumeration of artefact types\n * @enum {ArtefactTypeValue}\n */\nexport const ArtefactType = {\n  ARMOUR: {\n    storageSpace: 1,\n    storeType: { stash: StoreType.WAGON, equip: StoreType.BODY },\n  },\n  CONSUMABLE: {\n    storageSpace: 1,\n    storeType: { stash: StoreType.BACKPACK },\n  },\n  CANTRIP: {\n    storageSpace: 1,\n    storeType: { stash: null, equip: StoreType.CANTRIPS },\n  },\n  SPELL: {\n    storageSpace: 1,\n    storeType: { stash: StoreType.SPELLS, equip: StoreType.PREPARED_SPELLS },\n  },\n  WEAPON: {\n    storageSpace: 1,\n    storeType: { stash: StoreType.BACKPACK, equip: StoreType.HANDS },\n  },\n  SHIELD: {\n    storageSpace: 1,\n    storeType: { stash: StoreType.BACKPACK, equip: StoreType.HANDS },\n  },\n  TWO_HANDED_WEAPON: {\n    storageSpace: 2,\n    storeType: { stash: StoreType.BACKPACK, equip: StoreType.HANDS },\n  },\n  HEAD_GEAR: {\n    storageSpace: 1,\n    storeType: { stash: StoreType.BACKPACK, equip: StoreType.HEAD },\n  },\n  COINS: { storageSpace: 0, storeType: { stash: StoreType.PURSE } },\n};\n\n/**\n * Convert a string to an ArtefactType\n * @param {string} str - artefact type as string but excluding the ArtefactType.\n * E.g. COIN.\n * @returns {ArtefactType} null if invalid.\n */\nexport function strToArtefactType(str) {\n  const type = ArtefactType[str];\n  if (type === null || type === undefined) {\n    LOG.error(`Unrecognised artefact type: ${str}`);\n  }\n  return type;\n}\n\n/**\n * @interface StoreInterface\n */\n/**\n * @function StoreInterface.store\n * @param {Artefact} artefact\n * @returns {boolean} true if stored, else false.\n */\n/**\n * @function StoreInterface.retrieve\n * @param {Artefact} artefact\n * @returns {Artefact} the retrieved artefact which is removed from the store.\n */\n/**\n * @function StoreInterface.canAdd\n * @param {Artefact} artefact\n * @returns {boolean} true if it can be added.\n */\n/**\n * @function StoreInterface.has\n * @param {Artefact} artefact\n * @returns {boolean} true if it has the artefact.\n */\n/**\n * @property {StoreType} StoreInterface.storeType\n */\n/**\n * @property {string} StoreInterface.storeTypeId\n */\n\n/**\n * Store for artefacts\n * @implements {StoreInterface}\n */\nclass ArtefactStore {\n  /** @type {number} */\n  #maxSize;\n  /** @type {Map<Artefact, Artefact>} */\n  #artefacts;\n  /** @type {number} */\n  #usedSpace;\n  /** @type {boolean} */\n  #spacesExpand;\n  /** @type {StoreType} */\n  #storeType;\n\n  /** Create store.\n   * @param {number} maxSize;\n   * @param {boolean} spacesExpand - if true, each space can take an artefact of\n   * any size.\n   */\n  constructor(maxSize, spacesExpand, storeType) {\n    this.#maxSize = maxSize;\n    this.#usedSpace = 0;\n    this.#artefacts = new Map();\n    this.#spacesExpand = spacesExpand;\n    this.#storeType = storeType;\n  }\n\n  /**\n   * Get store type ID\n   * @returns {string}\n   */\n  get storeTypeId() {\n    return this.#storeType.id;\n  }\n  /**\n   * Get the store type\n   * @returns {StoreType}\n   */\n  get storeType() {\n    return this.#storeType;\n  }\n  /**\n   * Get free space\n   * @returns {number}\n   */\n  get freeSpace() {\n    return this.#maxSize - this.#usedSpace;\n  }\n\n  /**\n   * Get maximum space\n   * @returns {number}\n   */\n  get maxSpace() {\n    return this.#maxSize;\n  }\n\n  /**\n   * Test if empty\n   * @returns {boolean}\n   */\n  isEmpty() {\n    return this.#usedSpace === 0;\n  }\n\n  /** Get the space required by an artefact. If #spacesExpand\n   * this is always 1.\n   * @param {Artefact}\n   * @returns {number}\n   */\n  getRequiredSpace(artefact) {\n    return this.#spacesExpand ? 1 : artefact.storageSpace;\n  }\n\n  /**\n   * Test if store has artefact.\n   * @param {Artefact} artefact\n   * @returns {boolean}\n   */\n  has(artefact) {\n    return this.#artefacts.has(artefact);\n  }\n\n  /**\n   *\n   * @param {Artefact} artefact\n   * @returns {boolean} true if stored; false if no room.\n   */\n  add(artefact) {\n    const space = this.#maxSize - this.#usedSpace;\n    const requiredSpace = this.getRequiredSpace(artefact);\n    if (space >= requiredSpace) {\n      this.#artefacts.set(artefact, artefact);\n      this.#usedSpace += requiredSpace;\n      return true;\n    }\n    return false;\n  }\n  /**\n   * Retrieve artefact. This removes it from the store.\n   * @param {Artefact} artefact - to retrieve.\n   * @returns {Artefact} null if not found.\n   */\n  take(artefact) {\n    const storedArtefact = this.#artefacts.get(artefact);\n    const requiredSpace = this.getRequiredSpace(artefact);\n    if (storedArtefact) {\n      this.#usedSpace -= requiredSpace;\n      this.#artefacts.delete(storedArtefact);\n    }\n    return storedArtefact;\n  }\n\n  /**\n   * Take the first element.\n   * @returns {Artefact} null if empty.\n   */\n  takeFirst() {\n    if (this.isEmpty()) {\n      return null;\n    }\n    const firstArtefact = this.#artefacts.values().next().value;\n    return this.take(firstArtefact);\n  }\n\n  /**\n   * Iterable values in the store.\n   * @returns {Iterable<Artefacts>}\n   */\n  values() {\n    return this.#artefacts.values();\n  }\n\n  /**\n   * Test if an artefact can be stored.\n   * @param {Artefact} artefact\n   * @returns {boolean}\n   */\n  canAdd(artefact) {\n    const requiredSpace = this.getRequiredSpace(artefact);\n    return this.#maxSize - this.#usedSpace >= requiredSpace;\n  }\n}\n\n/**\n * Gold storage. This effectively merges artifacts into one combining the VALUE trait.\n * Note that if only one artefact is added, it is returned. Once more than one has been\n * added a composite money artefact is returne.\n * @implements {StoreInterface}\n */\nclass MoneyStore {\n  /** @type {Artefact} */\n  #artefact;\n  /** @type {boolean} */\n  #multipleArtefacts;\n\n  /** Create store.\n   * @param {number} maxSize;\n   */\n  constructor() {\n    this.#multipleArtefacts = false;\n  }\n\n  /**\n   * Get store type\n   * @returns {StoreType}\n   */\n  get storeType() {\n    return StoreType.PURSE;\n  }\n\n  /**\n   * Get store type Id\n   * @returns {StoreType}\n   */\n  get storeTypeId() {\n    return StoreType.PURSE.id;\n  }\n  /**\n   * Test if empty\n   * @override\n   * @returns {boolean}\n   */\n  isEmpty() {\n    return !this.#artefact || this.#artefact.costInGp === 0;\n  }\n\n  /**\n   * Test if store has any money.\n   * @override\n   * @param {Artefact} artefact\n   * @returns {boolean}\n   */\n  has(artefactUnused) {\n    return this.#artefact.costInGp > 0;\n  }\n  /**\n   * The artefact is just used as a carrier for the cost.\n   * @override\n   */\n  add(artefact) {\n    const costDetails = artefact.costDetails;\n    if (!this.#artefact) {\n      this.#artefact = artefact.clone();\n      return true;\n    }\n    const currentCostDetails = this.#artefact.costDetails;\n    if (!this.#multipleArtefacts) {\n      this.#artefact = MoneyStore.createGoldCoinArtefact(\n        currentCostDetails.valueGp\n      );\n      this.#multipleArtefacts = true;\n    }\n\n    this.#artefact.costInGp = currentCostDetails.valueGp + costDetails.valueGp;\n    return true;\n  }\n\n  /**\n   * Retrieve an artefact.\n   * @param {Artefact} artefact\n   * @returns {Artefact} value set to value of gold taken which may be less\n   * than the requested amount..\n   */\n  take(artefact) {\n    const taken = Math.min(this.#artefact.costInGp, artefact.costInGp);\n    this.#artefact.costInGp = this.#artefact.costInGp - taken;\n    artefact.costInGp = taken; //may be less than requested.\n    return artefact;\n  }\n\n  /**\n   * Test if artefact can be added.\n   * @param {Artefact} artefact\n   * @returns {boolean}\n   */\n  canAdd(artefactUnused) {\n    return true;\n  }\n\n  /**\n   * Get iterable of values. For the gold store there is only one.\n   * @returns {Iterable<Artefacts>}\n   */\n  values() {\n    if (!this.#artefact || this.#artefact.costInGp === 0) {\n      return [].values();\n    } else {\n      return [this.#artefact.clone()].values();\n    }\n  }\n\n  /**\n   * Create a gold coin artefact.\n   * @param {number} gp\n   * @returns {Artefact}\n   */\n  static createGoldCoinArtefact(gp) {\n    const almanacEntry = parseAlmanacLine(\n      `0,COMMON,COINS,gold_coins * VALUE:${gp}GP`\n    );\n    const artefact = buildArtefact(almanacEntry);\n    artefact.costInGp = gp;\n    return artefact;\n  }\n}\n\n/**\n * Basic artefact.\n * @implements {module:players/actors~TraitsHolder}\n */\nexport class Artefact {\n  /** @type {string} */\n  id;\n  /** @type {string} */\n  iconImageName;\n  /** @type {string} */\n  description;\n  /** @type {ArtefactTypeValue} */\n  artefactType;\n  /** @type {module:dnd/traits/~ArtefactTraits} */\n  traits;\n  /** @type {AbstractInteraction} */\n  interaction;\n  /** @type {module:dnd/almanacs/almanacs~AlmanacEntry} */\n  almanacEntry;\n  /**\n   * Create artefact.\n   * @param {AlmanacEntry} almanacEntry\n   * @param {string} description\n   * @param {string} iconImageName\n   * @param {number} artefactType - artefact enumeration\n   */\n  constructor(almanacEntry, description, iconImageName) {\n    this.id = almanacEntry.id;\n    this.description = description;\n    this.iconImageName = iconImageName;\n    this.artefactType = almanacEntry.type;\n    this.almanacEntry = almanacEntry;\n  }\n\n  /** Get the cost details.\n   * @returns {module:game/coins~CoinDetails}\n   */\n  get costDetails() {\n    const coinDefn = this.traits?.get('VALUE');\n    return coins.getCoinDetails(coinDefn);\n  }\n  /**\n   * Get the artefact cost in GP;\n   * @returns {number}\n   */\n  get costInGp() {\n    const coinDefn = this.traits?.get('VALUE');\n    return coins.getValueInGp(coinDefn);\n  }\n\n  /**\n   * Get the artefact sell back price in GP. Coins are sold back at normal cost.\n   * @returns {number}\n   */\n  get sellBackPriceInGp() {\n    if (this.artefactType === ArtefactType.COINS) {\n      return this.costInGp;\n    } else {\n      return Math.round(75 * this.costInGp) / 100;\n    }\n  }\n\n  /**\n   * Set the artefact cost in GP;\n   * @param {number} gp\n   */\n  set costInGp(gp) {\n    if (!this.traits) {\n      throw new Error('Artefact has no traits so cannot set cost.');\n    }\n    this.traits.set('VALUE', coins.getCoinDefinition(gp));\n  }\n\n  /** Get the storage space used by this artefact.\n   * @returns {number}\n   */\n  get storageSpace() {\n    return this.artefactType.storageSpace;\n  }\n\n  /**\n   * Get stash store type\n   * @returns {StoreTypeValue}\n   */\n  get stashStoreType() {\n    return this.artefactType.storeType.stash;\n  }\n\n  /**\n   * Get equip store type\n   * @returns {StoreTypeValue}\n   */\n  get equipStoreType() {\n    return this.artefactType.storeType.equip;\n  }\n\n  /** Convenience method to test if the stash store is a wagon.\n   * @returns {boolean}\n   */\n  get stashInWagon() {\n    return this.stashStoreType === StoreType.WAGON;\n  }\n\n  /**\n   * @returns {StoreTypeValue}\n   */\n  getDefaultStoreType() {\n    return (\n      this.artefactType.storeType.stash ?? this.artefactType.storeType.equip\n    );\n  }\n\n  /**\n   * Get all store types\n   * @returns {StoreTypeValue[]}\n   */\n  getStoreTypes() {\n    const storeTypes = [];\n    if (this.artefactType.storeType.stash) {\n      storeTypes.push(this.artefactType.storeType.stash);\n    }\n    if (this.artefactType.storeType.equip) {\n      storeTypes.push(this.artefactType.storeType.equip);\n    }\n    return storeTypes;\n  }\n\n  /**\n   * Clone the artefact\n   */\n  clone() {\n    const clone = new Artefact(\n      this.almanacEntry,\n      this.description,\n      this.iconImageName\n    );\n    clone.traits = this.traits.clone();\n    clone.value = this.value;\n    return clone;\n  }\n\n  /**\n   * Test if this is a magical item.\n   * @returns {boolean}\n   */\n  isMagic() {\n    return (\n      this.artefactType === ArtefactType.SPELL ||\n      this.artefactType === ArtefactType.CANTRIP\n    );\n  }\n\n  /**\n   * Test if this is a useable item.\n   * @returns {boolean}\n   */\n  isUsable() {\n    return !!this.interaction?.canReact();\n  }\n\n  /** Test if this is consumable.\n   * @returns {boolean}\n   */\n  isConsumable() {\n    return this.artefactType === ArtefactType.CONSUMABLE;\n  }\n}\n\n/**\n * Storage for artefacts.\n */\nexport class ArtefactStoreManager {\n  /** @type {Map<StoreLocation, Artefact[]} */\n  #stores;\n\n  /** @type {boolean} */\n  #hasWagon;\n\n  /** @type {function} */\n  #onChange;\n\n  /**\n   * Construct artefact storage.\n   * @param {boolean} hasWagon\n   * @param {function()} onChange - called when there is an inventory change.\n   */\n  constructor(hasWagon, onChange) {\n    this.#stores = new Map();\n    this.#hasWagon = hasWagon;\n    for (const storeTypeName in StoreType) {\n      const storeType = StoreType[storeTypeName];\n      this.#addStore(storeType);\n    }\n    this.#onChange = onChange;\n  }\n\n  /**\n   * Test if this has a wagon\n   */\n  get hasWagon() {\n    return this.#hasWagon;\n  }\n\n  /**\n   * Notify change.\n   */\n  #notifyChange() {\n    if (this.#onChange) {\n      this.#onChange();\n    }\n  }\n  /**\n   *\n   * @param {StoreType} storeType\n   */\n  #addStore(storeType) {\n    if (storeType.money) {\n      return this.#stores.set(\n        storeType,\n        new MoneyStore(storeType.space, storeType.spacesExpand)\n      );\n    }\n    let storeValid = true;\n    if (this.#hasWagon && storeType === StoreType.BACKPACK) {\n      storeValid = false;\n    } else if (!this.#hasWagon && storeType === StoreType.WAGON) {\n      storeValid = false;\n    }\n    if (storeValid) {\n      this.#stores.set(\n        storeType,\n        new ArtefactStore(storeType.space, storeType.spacesExpand, storeType)\n      );\n    }\n  }\n\n  /** Get a store from the store type. Note that a trader's wagon serves\n   * both as a backpack and a wagon.\n   * @param {StoreTypeValue} storeType\n   * @returns {ArtefactStore}\n   */\n  getStore(storeType) {\n    if (this.#hasWagon && storeType === StoreType.BACKPACK) {\n      storeType = StoreType.WAGON;\n    }\n    return this.#stores.get(storeType);\n  }\n\n  /** Get a store from the store type. Note that a trader's wagon serves\n   * both as a backpack and a wagon.\n   * @param {string} storeId\n   * @returns {ArtefactStore} null if not found\n   */\n  getStoreByTypeId(storeTypeId) {\n    for (const store of this.#stores.values()) {\n      if (store.storeTypeId === storeTypeId) {\n        return store;\n      }\n    }\n    return null;\n  }\n  /**\n   * Get the store where an item should be stored. This is normally\n   * the stash store. If a suitable stash store is not available, the equip store is\n   * returned. This is because armour cannot be carried, just worn. The exception is\n   * traders, who can store anything in their packs.\n   * @param {Artefact}\n   * @returns {ArtefactStore} null if it cannot be stored\n   */\n  findSuitableStore(artefact) {\n    let storeType = artefact.stashStoreType;\n    if (!this.#stores.has(storeType)) {\n      storeType = artefact.equipStoreType;\n    }\n    const store = this.getStore(storeType);\n    if (store?.canAdd(artefact)) {\n      return store;\n    }\n    return null;\n  }\n\n  /**\n   * @param {Artefact} artefact\n   * @returns {boolean} true if successful; false if no space.\n   */\n  addArtefact(artefact) {\n    const store = this.getStore(artefact.getDefaultStoreType());\n    const result = store?.add(artefact);\n    this.#notifyChange();\n    return result;\n  }\n\n  /**\n   * @typedef {Object} StorageDetails\n   * @property {ArtefactStore} store\n   * @property {Artefact} artefact\n   */\n\n  /**\n   * Get the first stored artefact.\n   * @returns {StorageDetails} null if nothing found\n   */\n  getFirstStorageDetails() {\n    for (const store of this.#stores.values()) {\n      const artefacts = store.values();\n      const value = artefacts.next()?.value;\n      if (value) {\n        return { store: store, artefact: value };\n      }\n    }\n    return null;\n  }\n\n  /** Test whether a similar artefact is stored. This is done by\n   * testing the id.\n   * @param {Artefact} artefact\n   * @returns {boolean}\n   */\n  hasArtefactWithSameId(artefact) {\n    const storageDetails = this.getAllStorageDetails();\n    for (const details of storageDetails) {\n      if (details.artefact.id === artefact.id) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Get all equipped artefacts. This excludes magic\n   * @returns {Artefact[]}\n   */\n  getAllEquippedArtefacts() {\n    const result = [];\n    const stores = [\n      this.#stores.get(StoreType.HEAD),\n      this.#stores.get(StoreType.BODY),\n      this.#stores.get(StoreType.HANDS),\n      this.#stores.get(StoreType.FEET),\n      this.#stores.get(StoreType.CANTRIPS),\n      this.#stores.get(StoreType.PREPARED_SPELLS),\n    ];\n    for (const store of stores) {\n      store.values().forEach((item) => result.push(item));\n    }\n    return result;\n  }\n  /**\n   * Get all stored artefacts.\n   * @returns {StorageDetails[]}\n   */\n  getAllStorageDetails() {\n    const storageDetails = [];\n    this.#stores.values().forEach((store) => {\n      store.values().forEach((artefact) => {\n        storageDetails.push({ store: store, artefact: artefact });\n      });\n    });\n    return storageDetails;\n  }\n\n  /**\n   * Get current gold. A convenience method to access the PURSE\n   * @returns {number}\n   */\n  getPurseValue() {\n    const content = this.getStore(StoreType.PURSE).values();\n    const artefact = content.next()?.value;\n    return artefact ? artefact.costInGp : 0;\n  }\n\n  /** Add gold to purse.\n   * @param {number} gp\n   */\n  addToPurse(gp) {\n    const artefact = MoneyStore.createGoldCoinArtefact(gp);\n    this.#stores.get(StoreType.PURSE).add(artefact);\n    this.#notifyChange();\n  }\n\n  /**\n   * Take gold from purse.\n   * @param {number} gp - amount to take.\n   * @returns {number} amount taken.\n   */\n  takeFromPurse(gp) {\n    const artefact = MoneyStore.createGoldCoinArtefact(gp);\n    const taken = this.#stores.get(StoreType.PURSE).take(artefact);\n    this.#notifyChange();\n    return taken.costInGp;\n  }\n\n  /**\n   * Convenience method to get contents of a store.\n   *\n   * @param {StoreTypeValue} storeType\n   * @returns {Iterable<Artefact>} null if empty\n   */\n  getStoreContents(storeType) {\n    const store = this.getStore(storeType);\n    return !store || store.isEmpty() ? null : store.values();\n  }\n\n  /**\n   * Discard an artefact that has been equipped or stashed.\n   * @param {Artefact} artefact\n   * @returns {boolean} true on success.\n   */\n  discard(artefact) {\n    if (this.discardStashed(artefact, true)) {\n      return true;\n    } else {\n      return this.discardEquipped(artefact);\n    }\n  }\n  /**\n   * Discard an artefact that has been equipped.\n   * @param {Artefact} artefact\n   * @param {boolean} quiet\n   * @returns {boolean} true on success.\n   */\n  discardEquipped(artefact, quiet) {\n    const equipStore = this.getStore(artefact.equipStoreType);\n    if (!equipStore) {\n      if (!quiet) {\n        LOG.error(\"Cannot discard artefact as there isn't an equip store.\");\n      }\n      return false;\n    }\n    if (!equipStore.take(artefact)) {\n      if (!quiet) {\n        LOG.error('Artefact could not be found so not discarded.');\n      }\n      return false;\n    }\n    this.#notifyChange();\n    return true;\n  }\n  /**\n   * Discard an artefact that has been stashed.\n   * @param {Artefact} artefact\n   * @param {boolean} quiet\n   * @returns {boolean} true on success.\n   */\n  discardStashed(artefact, quiet) {\n    const stashStore = this.getStore(artefact.stashStoreType);\n    if (!stashStore) {\n      if (!quiet) {\n        LOG.error(\"Cannot discard artefact as there isn't a stash store.\");\n      }\n      return false;\n    }\n    if (!stashStore.take(artefact)) {\n      if (!quiet) {\n        LOG.error('Artefact could not be found so not discarded.');\n      }\n      return false;\n    }\n    this.#notifyChange();\n    return true;\n  }\n\n  /**\n   * Equip artefact. The artefact should normally exist in the stash unless\n   * the options.direct flag is set.\n   * If space is required, artefacts will be unequipped to make space.\n   * @param {Artefact} artefact\n   * @param {Object} options\n   * @param {boolean} direct - if true, this can be a new object that does not\n   * exist in the stash.\n   * @returns {boolean} true on success.\n   */\n  equip(artefact, options = {}) {\n    const stashStore = this.getStore(artefact.stashStoreType);\n    const equipStore = this.getStore(artefact.equipStoreType);\n    if (!stashStore && !options.direct) {\n      LOG.error(\n        'Cannot equip artefact as there isn`t a stash store to take it from.'\n      );\n      return false;\n    }\n    if (!equipStore) {\n      LOG.error(\"Cannot equip artefact as there isn't an equip store.\");\n      return false;\n    }\n    const spaceRequired = artefact.storageSpace;\n    if (spaceRequired > equipStore.maxSpace) {\n      LOG.error('The equip store cannot hold this item.');\n      return false;\n    }\n\n    const takenArtefact = stashStore?.take(artefact);\n    if (!takenArtefact && !options.direct) {\n      LOG.error('Could not find artefact in the stash.');\n      return false;\n    }\n\n    while (equipStore.freeSpace < spaceRequired) {\n      const unequiped = equipStore.takeFirst();\n      stashStore?.add(unequiped);\n    }\n\n    const result = equipStore.add(artefact);\n    this.#notifyChange();\n    return result;\n  }\n\n  /**\n   * Unequip and stash artefact. The artefact should normally exist in the equip store unless\n   * the options.direct flag is set.\n   * If space is required in the stash, the attempt fails.\n   * @param {Artefact} artefact\n   * @param {Object} options\n   * @param {boolean} direct - if true, this can be a new object that does not\n   * exist in the stash.\n   * @returns {boolean} true on success.\n   */\n  stash(artefact, options = {}) {\n    const stashStore = this.getStore(artefact.stashStoreType);\n    const equipStore = this.getStore(artefact.equipStoreType);\n    if (!stashStore) {\n      LOG.info(\n        'Cannot stash artefact as there isn`t a suitable stash store to put it in.'\n      );\n      return false;\n    }\n    if (!equipStore && !options.direct) {\n      LOG.error(\n        'No suitable equip store found. If stashing a new artefact, the direct option should be set.'\n      );\n      return false;\n    }\n    const spaceRequired = artefact.storageSpace;\n    if (spaceRequired > stashStore.freeSpace) {\n      LOG.error('The stash store cannot hold this item.');\n      return false;\n    }\n    const takenArtefact = equipStore?.take(artefact);\n    if (!takenArtefact && !options.direct) {\n      LOG.error(\"The artefact hasn't been equipped so can't unequip it.\");\n      return false;\n    }\n    const result = stashStore.add(artefact);\n    this.#notifyChange();\n    return result;\n  }\n}\n","/**\n * @file Coins\n *\n * @module game/coins\n */\n/**\n * license {@link https://opensource.org/license/mit/|MIT}\n * Copyright 2024 Steve Butler (henspace.com).\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the “Software”), to deal in\n * the Software without restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n * Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */\nimport LOG from '../logging.js';\nconst COIN_REGEX = /^ *(\\d+(?:\\.\\d*)?) *([a-zA-Z]+) *$/;\n\nconst EXCHANGE_RATE_TO_GOLD = new Map([\n  ['PP', 10],\n  ['GP', 1],\n  ['SP', 0.1],\n  ['CP', 0.01],\n]);\n\n/**\n * @typedef {Object} CoinDetails\n * @property {number} valueFace - face value of coin\n * @property {number} valueGp - value in gold coins.\n * @property {string} type - type of coin\n */\n\n/**\n * Get coin detail.\n * @param {string} coinDefn - e,g 1GP or 10SP. Spaces allowed between number\n * and type.\n * @returns {CoinDetails} value and type.\n */\nexport function getCoinDetails(coinDefn) {\n  let valueFace = 0;\n  let valueGp = 0;\n  const parts = coinDefn.match(COIN_REGEX);\n  if (!parts) {\n    LOG.error(`Unrecognised coin \"${coinDefn}\". Value set to zero.`);\n    return { valueFace: 0, valueGp: 0, type: 'GP' };\n  } else {\n    valueFace = parts[1];\n    const exchangeRate = EXCHANGE_RATE_TO_GOLD.get(parts[2]) ?? 0;\n    valueGp = parseFloat(parts[1]) * exchangeRate;\n  }\n  return { valueFace: valueFace, valueGp: valueGp, type: parts[2] };\n}\n/** Get the value of a coin in GP.\n * @param {string} coinDefn - e.g. 1GP or 10SP. Spaces allowed between number and type.\n * @returns {number} 0 if unrecognised.\n */\nexport function getValueInGp(coinDefn) {\n  return getCoinDetails(coinDefn).valueGp;\n}\n\n/**\n * Get value as a coin definition. I.e. with it's suffix.\n * @param {string} coinDefn - current definition.\n * @param {string} [coinType = 'GP'] Get value as a type.\n * @returns {string} if coinType is unrecognised, the value is zero.\n */\nexport function convertToType(coinDefn, coinType) {\n  const gp = getValueInGp(coinDefn);\n  const exchangeRate = EXCHANGE_RATE_TO_GOLD.get(coinType);\n  if (exchangeRate) {\n    const value = gp / exchangeRate;\n    return `${value.toFixed(2)} ${coinType}`;\n  }\n  return `0 ${coinType}`; // worthless in this currency\n}\n\n/**\n * Convert a number of gold pieces to its definition\n * @param {number} gp\n * @return {string} coin definition\n */\nexport function getCoinDefinition(gp) {\n  return `${gp.toFixed(2)} GP`;\n}\n\n/** Convert gold pieces value to string.\n * Note this is similar to the coin definition but\n * includes a non breaking space.\n * @param {number} gp\n * @returns {string}\n */\nexport function gpAsString(gp) {\n  return `${gp.toFixed(2)}\\u{00A0}GP`;\n}\n","/**\n * @file Dungeon and dragons properties\n *\n * @module dnd/traits\n */\n/**\n * License {@link https://opensource.org/license/mit/|MIT}\n *\n * Copyright 2024 Steve Butler (henspace.com).\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the “Software”), to deal in\n * the Software without restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n * Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */\n\nimport * as maths from '../utils/maths.js';\nimport { ArtefactType } from '../players/artefacts.js';\nimport * as dice from '../utils/dice.js';\nimport * as tables from './tables.js';\nimport * as arrayManip from '../utils/arrays/arrayManip.js';\n\nimport LOG from '../utils/logging.js';\n\n/** Basic ability keys @type {string[]}*/\nconst ABILITY_KEYS = ['STR', 'DEX', 'CON', 'INT', 'WIS', 'CHA'];\n\nconst FEET_PER_TILE = 7.5;\n/**\n * Convert a value to a modifier.\n * @param {number} value\n * @returns {number}\n */\nexport function characteristicToModifier(value) {\n  return Math.floor((value - 10) / 2);\n}\n\n/** Apply dexterity modifier to an item to get its AC value */\nfunction getAcUsingDexterity(item, dexterity) {\n  const modifier = characteristicToModifier(dexterity);\n  const armourType = item.traits.get('TYPE', '').toLowerCase();\n  const armourClass = item.traits.getInt('AC', 0);\n  if (armourType.includes('HEAVY')) {\n    return armourClass;\n  } else if (armourType.includes('MEDIUM')) {\n    return armourClass + Math.min(2, modifier);\n  } else {\n    return armourClass + modifier;\n  }\n}\n\n/**\n * Class that represents attack characteristics.\n */\nexport class AttackDetail {\n  /** @type {string} */\n  damageDice;\n  /** @type {number} */\n  proficiencyBonus;\n  /** @type {number} */\n  abilityModifier;\n  /** @type {boolean} */\n  twoWeaponFighting;\n  /** @type {boolean} */\n  isSecondAttack;\n  /** @type {boolean} */\n  unarmed;\n\n  /**\n   *\n   * @param {Artefact} weapon\n   * @param {Object} options\n   * @param {string} options.damageDice\n   * @param {string} options.weaponType - UNARMED makes this an unarmed strike.\n   * @param {number} options.proficiencyBonus\n   * @param {number} options.abilityModifier\n   * @param {boolean} options.secondAttack - true if this is a second attack\n   */\n  constructor(options) {\n    this.damageDice = options.damageDice ?? '1D1';\n    const subType = options.weaponType ?? '';\n    if (subType === 'UNARMED') {\n      this.unarmed = true;\n      this.twoWeaponFighting = false;\n    } else if (subType.includes('SIMPLE') && subType.includes('LIGHT')) {\n      this.twoWeaponFighting = true;\n    } else {\n      this.twoWeaponFighting = false;\n    }\n    this.proficiencyBonus = options?.proficiencyBonus ?? 0;\n    this.abilityModifier = options?.abilityModifier ?? 0;\n    this.isSecondAttack = options.secondAttack;\n  }\n\n  /**\n   * Get unarmed damage.\n   * @returns {number}\n   */\n  #getUnarmedDamage() {\n    return 1 + this.abilityModifier; // ability modifier is the same as strength for melee\n  }\n  /**\n   * Get maximum possible damage from this weapon ignoring the ability modifier\n   * which applies to all weapons equally.\n   * @returns {number}\n   */\n  getMaxDamage() {\n    if (this.unarmed) {\n      return this.#getUnarmedDamage();\n    } else {\n      return dice.maxRoll(this.damageDice) + this.proficiencyBonus;\n    }\n  }\n\n  /**\n   * Roll for attack.\n   * @returns {number}\n   */\n  rollForAttack() {\n    return dice.rollDice(20) + this.abilityModifier + this.proficiencyBonus;\n  }\n  /**\n   * Roll for damage.\n   * @returns {number}\n   */\n  rollForDamage() {\n    if (this.unarmed) {\n      return this.#getUnarmedDamage();\n    }\n    let modifier;\n    if (this.isSecondAttack && this.abilityModifier > 0) {\n      modifier = 0;\n    } else {\n      modifier = this.abilityModifier;\n    }\n    return dice.rollMultiDice(this.damageDice) + modifier;\n  }\n\n  /**\n   * Clone\n   * @returns {AttackDetail}\n   */\n  clone() {\n    const attackDetail = new AttackDetail({});\n    attackDetail.abilityModifier = this.abilityModifier;\n    attackDetail.damageDice = this.damageDice;\n    attackDetail.isSecondAttack = this.isSecondAttack;\n    attackDetail.proficiencyBonus = this.proficiencyBonus;\n    attackDetail.twoWeaponFighting = this.twoWeaponFighting;\n    attackDetail.unarmed = this.unarmed;\n    return attackDetail;\n  }\n}\n\n/**\n * This is basically a Map with some special derived characteristics.\n */\nexport class Traits {\n  /** Characteristics @type {Map<string, *>} */\n  _traits;\n\n  /**\n   * Initialise the traits.\n   * @param {Map<string, *> | string} initialValues\n   */\n  constructor(initialValues) {\n    if (typeof initialValues === 'string') {\n      this._traits = new Map();\n      this.#setFromString(initialValues);\n    } else {\n      this._traits = new Map(initialValues);\n    }\n  }\n\n  /**\n   * Populate the traits from a string definition. The definition comprises a\n   * comma separated list of characteristics with each characteristic comprising\n   * a keyword followed by a space or equals sign and then its value.\n   * Keywords are converted to uppercase.\n   * @param {string} definition\n   * @returns {Traits} returns this to allow chaining.\n   * @throws {Error} if definition invalid.\n   */\n  #setFromString(definition) {\n    definition.split(',').forEach((item) => {\n      const match = item.match(/^\\s*(\\w+)\\s*[=: ]\\s*(.+?)\\s*$/);\n      if (!match) {\n        return;\n      }\n      const [key, value] = this.#imposeCase(match[1], match[2]);\n      if (match) {\n        this.#setValueFromString(key, value.trim());\n      } else {\n        throw new Error(`Invalid property definition'${item}'`);\n      }\n    });\n    this._compositeAc = this.getInt('AC', 0);\n    return this;\n  }\n\n  /**\n   * @param {string} key\n   * @param {*} value\n   * @throws {Error} thrown if key invalid.\n   */\n  set(key, value) {\n    this._traits.set(key, value);\n    this._refreshDerivedValues(key);\n  }\n\n  /**\n   * Get the trait value. This will look first for the key and then the key\n   * preceded by an underscore.\n   * @param {string} key\n   * @param {*} defValue - default value;\n   * @returns {*}\n   */\n  get(key, defValue) {\n    return this._traits.get(key) ?? this._traits.get('_' + key) ?? defValue;\n  }\n\n  /**\n   * Refresh derived values.\n   * This is expected to be overridden.\n   * @param {string} key - key that was updated and triggered refresh.\n   */\n  _refreshDerivedValues(updatedKeyUnused) {}\n\n  /**\n   * Get the trait value as an int. This will look first for the key and then the key\n   * preceded by an underscore.\n   * @param {string} key\n   * @param {*} defValue - default value;\n   * @returns {number}\n   */\n  getInt(key, defValue) {\n    const result = this.get(key, defValue);\n    return maths.safeParseInt(result, defValue);\n  }\n\n  /**\n   * Take a value normally entered in feet and convert to tiles.\n   * @param {string} key\n   * @param {number} defValue - default if not found.\n   * @returns {number} results rounded to nearest int.\n   */\n  getValueInFeetInTiles(key, defValue) {\n    const valueInFeet = this.getInt(key);\n    if (valueInFeet === null || valueInFeet === undefined) {\n      return defValue;\n    }\n    return Math.round(valueInFeet / FEET_PER_TILE);\n  }\n\n  /**\n   * Get the trait value as an float. This will look first for the key and then the key\n   * preceded by an underscore.\n   * @param {string} key\n   * @param {*} defValue - default value;\n   * @returns {number}\n   */\n  getFloat(key, defValue) {\n    const result = this.get(key, defValue);\n    return maths.safeParseFloat(result, defValue);\n  }\n  /**\n   * Get the trait value as a modifier int. This will look first for the key and then the key\n   * preceded by an underscore.\n   * @param {string} key\n   * @param {*} defValue - default value;\n   * @returns {number}\n   */\n  getAsModifier(key, defValue) {\n    const value = this.getInt(key);\n    if (value === null || value === undefined) {\n      return defValue;\n    }\n    return characteristicToModifier(value);\n  }\n\n  /**\n   * Adjust case to uppercase unless an excluded characteristic. Most values are\n   * converted to uppercase with a few exceptions.\n   * @param {string} key\n   * @param {string} value\n   * @returns {string[]]} first element has the adjusted key and the second the value.\n   */\n  #imposeCase(key, value) {\n    key = key.toUpperCase();\n    if (key !== 'NAME') {\n      value = value.toUpperCase();\n    }\n    return [key, value];\n  }\n\n  /**\n   * Set the trait for key to value. This is for a value passed in by the\n   * #setValueFromString method.\n   * + If the value comprises two numbers separated by\n   * a /, the value for the key is set to the numerator and a new key key_MAX is created,\n   * set to the denominator.\n   * + If the value comprises two numbers separated by a >, the value for the key\n   * is set to a random value between (inclusive) the two values, and a new key key_MAX is created,set to the second number.\n   * @param {string} key\n   * @param {string} value\n   */\n  #setValueFromString(key, value) {\n    switch (key) {\n      case 'PROF':\n        return this.#setProficienciesFromString(key, value);\n      case 'VALUE':\n        return this.#setCostValueFromString(key, value);\n      case 'DMG':\n        return this.#setIntOrDiceValueFromString(key, value);\n      case 'HIT_DICE':\n        return this.#setDiceValueFromString(key, value);\n      default:\n        return this.#setGenericValueFromString(key, value);\n    }\n  }\n\n  /**\n   * Set the trait for key to value. This is for a value passed in by the\n   * #setValueFromString method.\n   * + If the value comprises two numbers separated by\n   * a /, the value for the key is set to the numerator and a new key key_MAX is created,\n   * set to the denominator.\n   * + If the value comprises two numbers separated by a >, the value for the key\n   * is set to a random value between (inclusive) the two values, and a new key key_MAX is created,set to the second number.\n   * @param {string} key\n   * @param {string} value\n   */\n  #setCostValueFromString(key, value) {\n    const match = value.match(/^(.*)([a-zA-Z]{2})$/);\n    if (!match) {\n      LOG.error(`Invalid value for VALUE trait: ${value}`);\n      value = '0 GP';\n    } else {\n      const diceDefn = match[1].trim();\n      let faceValue;\n      if (dice.isMultiDice(diceDefn)) {\n        faceValue = dice.rollMultiDice(diceDefn);\n      } else {\n        faceValue = maths.safeParseInt(match[1], 0);\n      }\n      value = `${faceValue} ${match[2]}`;\n    }\n    this.set(key, value);\n  }\n  /**\n   * Set the trait for key to value. This is for a value passed in by the\n   * #setValueFromString method. The dice is not rolled but stored as is.\n   * @param {string} key\n   * @param {string} value\n   */\n  #setDiceValueFromString(key, value) {\n    if (!dice.isMultiDice(value)) {\n      LOG.error(\n        `Invalid trait value ${value} for ${key}. Dice definition required.`\n      );\n      value = '1D6';\n    }\n    this.set(key, value);\n  }\n  /**\n   * Set the trait for key to value. This is for a value passed in by the\n   * #setValueFromString method.\n   * If the value is a multidice, it is rolled and the resulting value used.\n   * @param {string} key\n   * @param {string} value\n   */\n  #setIntOrDiceValueFromString(key, value) {\n    if (!dice.isMultiDice(value) && isNaN(parseInt(value))) {\n      LOG.error(\n        `Invalid trait value ${value} for ${key}. Integer or dice definition required.`\n      );\n      value = '0';\n    }\n    this.set(key, value);\n  }\n  /**\n   * Set the trait for key to value. This is for a value passed in by the\n   * #setValueFromString method.\n   * If the value is a multidice, it is rolled and the resulting value used.\n   * @param {string} key\n   * @param {string} value\n   */\n  #setGenericValueFromString(key, value) {\n    if (dice.isMultiDice(value) && key !== 'DMG') {\n      value = dice.rollMultiDice(value); // Note DMG is stored as dice definition as it is rolled on demand.\n    }\n    this.set(key, value);\n  }\n\n  /**\n   * Set proficiencies.\n   * @param {string} key\n   * @param {string} value - ids of items in which the user is proficient. Items\n   * are separated by &.\n   */\n  #setProficienciesFromString(key, value) {\n    const items = value.split(/\\s*&\\s*/);\n    const proficiencies = [];\n    items.forEach((item) => proficiencies.push(item.toUpperCase()));\n    this._traits.set('PROF', proficiencies);\n  }\n\n  /**\n   * Clone traits.\n   * @return {Traits}\n   */\n  clone() {\n    return new Traits(this._traits);\n  }\n  /**\n   * Get all traits. This is a copy of the underlying traits.\n   * @returns {Map<string, *>}\n   */\n  getAllTraits() {\n    return new Map([...this._traits.entries()]);\n  }\n\n  /**\n   * Get all traits. This is a copy of the underlying traits sorted by key name.\n   * @returns {Map<string, *>}\n   */\n  getAllTraitsSorted() {\n    return new Map([...this._traits.entries()].sort());\n  }\n\n  /**\n   * Get all trait values as a string\n   */\n  valuesToString() {\n    let result = '';\n    this._traits.forEach((value, key) => {\n      if (result !== '') {\n        result += ',';\n      }\n      result += `${key}:${value}`;\n    });\n    return result;\n  }\n}\n\n/**\n * DnD magic traits\n */\nexport class MagicTraits extends Traits {\n  /**\n   *\n   * @param {Map<string, *>} initialTraits\n   */\n  constructor(initialTraits) {\n    super(initialTraits ?? new Map());\n  }\n\n  /**\n   * Get the damage dice when cast by an actor.\n   * @param {module:players/actors~Actor} actor\n   * @returns {string}\n   */\n  getDamageDiceWhenCastBy(actor) {\n    let damageDice = this._traits.get('DMG');\n    let adjustedDice = dice.changeQtyOfDice(\n      damageDice,\n      actor.traits.getCharacterLevel() - 1\n    );\n    LOG.info(\n      `Spell cast: base damage dice = ${damageDice} raised to ${adjustedDice} for level.`\n    );\n    return adjustedDice;\n  }\n}\n\n/**\n * DnD character traits\n */\nexport class CharacterTraits extends Traits {\n  // Derived traits.\n  /** @type {number} */\n  _compositeAc;\n  /** @type {number} */\n  _proficiencyBonus;\n  /** @type {number} */\n  _level;\n\n  /** @type {AttackDetail[]} */\n  _attacks;\n\n  /** @type {Artefact[]} */\n  _equippedWeapons;\n\n  /** @type {Artefact[]} */\n  _equippedArmour;\n\n  /**\n   *\n   * @param {Map<string, *>} initialTraits\n   */\n  constructor(initialTraits) {\n    super(initialTraits ?? new Map([['NAME', 'mystery']]));\n    this._proficiencyBonus = 0;\n    this.#setInitialAbilityScores(ABILITY_KEYS);\n    this.#initialiseHitPoints();\n    this._refreshDerivedValues();\n  }\n\n  /**\n   * Clone traits.\n   * @return {Traits}\n   */\n  clone() {\n    const actorTraits = super.clone();\n    actorTraits._compositeAc = this._compositeAc;\n    actorTraits._proficiencyBonus = this._proficiencyBonus;\n    actorTraits._level = this._level;\n    actorTraits._attacks = this._attacks.map((attack) => attack.clone());\n    actorTraits._equippedWeapons = this._equippedWeapons; // reference okay\n    actorTraits._equippedArmour = this._equippedArmour; // reference okay\n    return actorTraits;\n  }\n\n  /**\n   * Calculate the ability scores unless already set.\n   * @param {string[]} keys\n   */\n  #setInitialAbilityScores(keys) {\n    const values = arrayManip.randomise([15, 14, 13, 12, 10, 8]);\n    let valueIndex = 0;\n    keys.forEach((key) => {\n      if (!this.get(key)) {\n        const value = values[valueIndex++] ?? 8;\n        this.set(key, value);\n      }\n    });\n  }\n\n  /**\n   * Initialise the hit points unless already set.\n   * This is calculated as the maximum hit dice roll + the constitution modifier.\n   */\n  #initialiseHitPoints() {\n    const alreadyHasHp = this._traits.has('HP');\n    const alreadyHasHpMax = this._traits.has('HP_MAX');\n    if (alreadyHasHp && alreadyHasHpMax) {\n      return;\n    }\n    const hitDice = this.get('HIT_DICE');\n    if (hitDice) {\n      const con = this.getInt('CON', 0);\n      const conMod = characteristicToModifier(con);\n      if (!alreadyHasHpMax) {\n        this.set('HP_MAX', dice.maxRoll(hitDice) + conMod);\n      }\n      if (!alreadyHasHp) {\n        this.set('HP', dice.maxRoll(hitDice) + conMod);\n      }\n    } else if (alreadyHasHp) {\n      this.set('HP_MAX', this.get('HP'));\n    }\n  }\n\n  /**\n   * Get the effective armour class;\n   * @returns {number}\n   */\n  getEffectiveAc() {\n    return this._compositeAc;\n  }\n\n  /**\n   * Get the effective armour class;\n   * @returns {number}\n   */\n  getCharacterLevel() {\n    return this._level;\n  }\n\n  /** Get the save ability modifier for an attack by the attacker.\n   * This is not applicable to melee attacks.\n   *\n   */\n  getNonMeleeSaveAbilityModifier(attacker) {\n    const saveAbility = attacker.traits.get('SAVE_ABILITY');\n    if (!saveAbility) {\n      LOG.error(`Non-melee ${attacker.id} has no SAVE_ABILITY set.`);\n      return 0;\n    }\n    const ability = this.getInt(saveAbility);\n    return characteristicToModifier(ability ?? 0);\n  }\n\n  /**\n   * Get the proficiency bonus;\n   * @param {module:players/Artefact} artefact\n   * @returns {number}\n   */\n  getCharacterPb(artefact) {\n    return this.isProficient(artefact) ? this._proficiencyBonus : 0;\n  }\n\n  /**\n   * Get attacks.\n   * @returns {AttackDetail[]}\n   */\n  getAttacks() {\n    return this._attacks;\n  }\n\n  /**\n   * Update derived values for new artefacts.\n   * @param {Artefact[]} artefacts\n   */\n  utiliseArtefacts(artefacts) {\n    this._equippedWeapons = artefacts.filter(\n      (artefact) => artefact.artefactType === ArtefactType.WEAPON\n    );\n    this._equippedArmour = artefacts.filter(\n      (artefact) => artefact.artefactType === ArtefactType.ARMOUR\n    );\n    this._refreshDerivedValues();\n  }\n\n  /**\n   * @override\n   * Refresh all derived values.\n   * @param {string} updatedKey\n   */\n  _refreshDerivedValues(updatedKey) {\n    if (!updatedKey || ABILITY_KEYS.includes(updatedKey)) {\n      this._setLevelAndProfBonusFromExp();\n      this._utiliseWeapons(this._equippedWeapons);\n      this._utiliseArmour(this._equippedArmour);\n    }\n  }\n  /**\n   * Armour weapons. The armour classes are combined.\n   * @param {Artefact[]} armour\n   */\n  _utiliseArmour(armour) {\n    let armourClass = this.getInt('AC', 0); // character's base AC\n    if (!armour || armour.length === 0) {\n      this._compositeAc = armourClass;\n      return;\n    }\n    let dexterity = this.getInt('DEX', 1);\n    let additionalArmourClass = 0;\n    let shieldArmourClass = 0;\n    for (const item of armour) {\n      switch (item.artefactType) {\n        case ArtefactType.ARMOUR:\n          {\n            const acTrait = item.traits.get('AC', 0);\n            const acValue = getAcUsingDexterity(item, dexterity);\n            if (acTrait.startsWith('+')) {\n              additionalArmourClass += acValue;\n            } else if (acValue > armourClass) {\n              armourClass = acValue;\n            }\n          }\n          break;\n        case ArtefactType.SHIELD:\n          // only one shield ever used.\n          shieldArmourClass = Math.max(\n            shieldArmourClass,\n            item.traits.getInt('AC', 0)\n          );\n          break;\n      }\n    }\n    this._compositeAc = armourClass + additionalArmourClass + shieldArmourClass;\n  }\n\n  /**  */\n  /**\n   * Utilise weapons. The best option for equipped weapons is automatically selected\n   * to give the maximum chance of damage. Up to two weapons are supported.\n   * @param {Artefact[]} [weapons = []]\n   */\n  _utiliseWeapons(weapons = []) {\n    this._attacks = [];\n\n    const strength = this.getInt('STR', 1);\n    const abilityModifier = characteristicToModifier(strength);\n    if (weapons.length > 2) {\n      LOG.error(\n        `Unexpected number of equipped weapons. Expected 2; received ${weapons.length}`\n      );\n    }\n    let firstAttack;\n    let weaponType;\n    let damageDice;\n    let proficient;\n    if (weapons.length === 0) {\n      damageDice = '';\n      weaponType = 'UNARMED';\n      proficient = true;\n    } else {\n      damageDice = weapons[0].traits.get('DMG', '1D1') ?? '1D1';\n      weaponType = weapons[0].traits.get('TYPE') ?? '';\n      proficient = this.isProficient(weapons[0]);\n    }\n\n    firstAttack = new AttackDetail({\n      damageDice: damageDice,\n      weaponType: weaponType,\n      proficiencyBonus: proficient ? this._proficiencyBonus : 0,\n      abilityModifier: abilityModifier,\n      secondAttack: false,\n    });\n\n    let secondAttack;\n    if (weapons.length > 1) {\n      secondAttack = new AttackDetail({\n        damageDice: weapons[1].traits.get('DMG', '1D1') ?? '1D1',\n        weaponType: weapons[1].traits.get('TYPE') ?? '',\n        proficiencyBonus: this.isProficient(weapons[1])\n          ? this._proficiencyBonus\n          : 0,\n        abilityModifier: strength,\n        secondAttack: true,\n      });\n    }\n    if (secondAttack?.twoWeaponFighting && firstAttack.twoWeaponFighting) {\n      this._attacks.push(firstAttack);\n      this._attacks.push(secondAttack);\n    } else if (\n      secondAttack &&\n      secondAttack.getMaxDamage() > firstAttack.getMaxDamage()\n    ) {\n      secondAttack.isSecondAttack = false;\n      this._attacks.push(secondAttack);\n    } else {\n      this._attacks.push(firstAttack);\n    }\n  }\n\n  /**\n   * Set the level and prof bonus. These are calculated from the experience.\n   */\n  _setLevelAndProfBonusFromExp() {\n    const values = tables.getLevelAndProfBonusFromExp(this._traits.get('EXP'));\n    this._level = values.level;\n    this._proficiencyBonus = values.profBonus;\n  }\n\n  /**\n   * @typedef {Object} ValueChangeInfo\n   * @property {*} was\n   * @property {*} now\n   */\n  /**\n   * Increase experience based on challenge rating.\n   * @param {string|number} cr\n   * @returns {{exp: ValueChangeInfo, level: ValueChangeInfo}}\n   */\n  adjustForDefeatOfActor(defeated) {\n    const challengeRating = defeated.traits.get('CR');\n    const gainedExp = tables.getXpFromCr(challengeRating);\n    const currentExp = this.getInt('EXP', 0);\n    const newExp = currentExp + gainedExp;\n    LOG.info(`Experience increased from ${currentExp} to ${newExp}.`);\n    this.set('EXP', newExp);\n    const currentLevel = this._level;\n    this._setLevelAndProfBonusFromExp();\n    const newLevel = this._level;\n    return {\n      exp: { was: currentExp, now: newExp },\n      level: { was: currentLevel, now: newLevel },\n    };\n  }\n\n  /**\n   * Test if proficient with an item.\n   * The test looks at the artefact's TYPE trait. If it includes one of this trait's\n   * PROF entries, the result is true. This means that a PROF entry of 'melee' would\n   * match 'simple melee' and 'martial melee'.\n   * @param {Artefact} item\n   * @returns {boolean}\n   */\n  isProficient(artefact) {\n    const proficiencies = this._traits.get('PROF');\n    const artefactSubtype = artefact.traits.get('TYPE');\n    if (!proficiencies || !artefactSubtype) {\n      return false;\n    }\n    for (const prof of proficiencies) {\n      const words = prof.split(' ');\n      let allWordsIncluded = true;\n      for (const word of words) {\n        if (!artefactSubtype.includes(word)) {\n          allWordsIncluded = false;\n          break;\n        }\n      }\n      if (allWordsIncluded) {\n        return true;\n      }\n    }\n    return false;\n  }\n}\n\n/**\n * DnD artefact traits\n */\nexport class ArtefactTraits extends Traits {\n  /**\n   *\n   * @param {Map<string, *>} initialTraits\n   */\n  constructor(initialTraits) {\n    super(initialTraits ?? new Map([['NAME', 'mystery']]));\n  }\n}\n","/**\n * @file Simulation of dice\n *\n * @module utils/dice\n */\n/**\n * License {@link https://opensource.org/license/mit/|MIT}\n *\n * Copyright 2024 Steve Butler (henspace.com).\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the “Software”), to deal in\n * the Software without restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n * Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */\n\nimport LOG from './logging.js';\nimport * as maths from './maths.js';\n\nconst MULTIDICE_REGEX = /(\\d+)[dD](\\d+)(?: *\\+ *(\\d+))?/;\n/**\n * Roll a dice\n * @param {number} [sides = 6] - number of sides on the dice\n * @returns {number}\n */\nexport function rollDice(sides = 6) {\n  return maths.getRandomIntInclusive(1, sides);\n}\n\n/** Test to see if string is a multidice.\n * @param {string} str\n * @returns {boolean}\n */\nexport function isMultiDice(str) {\n  return MULTIDICE_REGEX.test(str);\n}\n/**\n * Roll multiple dice.\n * @param {string} dice - in format nDs. E.g. 1D6. If dice is falsy or incorrectly\n * formatted the dice is taken as a 1D1. If it is an integer it is just taken as\n * that many sided dice.\n * @returns {number} result\n */\nexport function rollMultiDice(dice) {\n  if (!dice) {\n    return 1;\n  }\n  if (Number.isInteger(dice)) {\n    return rollDice(dice);\n  }\n  const details = getDiceDetails(dice);\n  if (!details) {\n    LOG.error(\n      `String ${dice} not recognised as a dice roll. Defaulting to 1D1.`\n    );\n    return 1;\n  }\n  let result = 0;\n  for (let roll = 0; roll < details.qty; roll++) {\n    result += rollDice(parseInt(details.sides)) + details.offset;\n  }\n  return result;\n}\n\n/**\n * Get the maximum throw possible from a multidice.\n * @param {string} dice - dice in format nDs. If dice is falsy,\n * the dice is taken as a 1D1. The dice specifier can be followed by an positive\n * offset. E.g. 2d6 + 8\n * @returns {number}\n */\nexport function maxRoll(dice) {\n  const details = getDiceDetails(dice);\n  if (!details) {\n    return 1;\n  }\n  return details.qty * (details.sides + details.offset);\n}\n\n/**\n * Compare two multidice definitions and return the largest.\n * @param {string} diceA\n * @param {string} diceB\n * @returns {string}\n */\nexport function biggestMultiDice(diceA, diceB) {\n  return maxRoll(diceA) > maxRoll(diceB) ? diceA : diceB;\n}\n\n/**\n * Take a multidice definition of the form nDS + offset and change\n * the n part.\n * @param {string} multidice - multidice definition\n * @param {number} delta - can be negative\n * @returns {string} multidice definition.\n */\nexport function changeQtyOfDice(dice, delta) {\n  const details = getDiceDetails(dice);\n  if (!details) {\n    return dice;\n  }\n  details.qty = Math.max(details.qty + delta, 0);\n  return getDiceDetailsAsString(details);\n}\n\n/**\n * @typedef {Object} DiceDetails\n * @property {number} qty\n * @property {sides} sides\n * @property {offset} offset\n */\n/**\n * Take a multidice definition of the form nDS + offset get the number of dice.\n * @param {string} multidice - multidice definition\n * @returns {DiceDetails} null if invalid\n */\nexport function getDiceDetails(dice) {\n  const match = dice.match(MULTIDICE_REGEX);\n  if (!match) {\n    LOG.error(`Invalid dice format: ${dice}`);\n    return null;\n  }\n  const qty = parseInt(match[1]);\n  const sides = parseInt(match[2]);\n  const offset = match[3] ? parseInt(match[3]) : 0;\n\n  return {\n    qty: qty,\n    sides: sides,\n    offset: offset,\n  };\n}\n\n/**\n * Convert dice details to a string.\n * @param {DiceDetails} details\n * @returns {string}\n */\nexport function getDiceDetailsAsString(details) {\n  if (details.offset) {\n    return `${details.qty}D${details.sides}+${details.offset}`;\n  } else {\n    return `${details.qty}D${details.sides}`;\n  }\n}\n","/**\n * @file Tables for DND\n *\n * @module dnd/tables\n */\n/**\n * license {@link https://opensource.org/license/mit/|MIT}\n * Copyright 2024 Steve Butler (henspace.com).\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the “Software”), to deal in\n * the Software without restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n * Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */\nimport * as maths from '../utils/maths.js';\n\nconst CHALLENGE_XP_TABLE = [\n  10, 200, 450, 700, 1100, 1800, 2300, 2900, 3900, 5000, 5900, 7200, 8400,\n  10000, 11500, 13000, 15000, 18000, 20000, 22000, 25000, 33000, 41000, 50000,\n  62000, 75000, 90000, 105000, 120000, 135000, 155000,\n];\n\n/** advancement table. NB. this is zero based whereas level is 1 based. */\nconst ADVANCEMENT_TABLE = [\n  { exp: 0, profBonus: 2 }, // level 1\n  { exp: 300, profBonus: 2 }, // level 2\n  { exp: 900, profBonus: 2 }, // level 3\n  { exp: 2700, profBonus: 2 }, // level 4\n\n  { exp: 6500, profBonus: 3 }, // level 5\n  { exp: 14000, profBonus: 3 }, // level 6\n  { exp: 23000, profBonus: 3 }, // level 7\n  { exp: 34000, profBonus: 3 }, // level 8\n\n  { exp: 48000, profBonus: 4 }, // level 9\n  { exp: 64000, profBonus: 4 }, // level 10\n  { exp: 85000, profBonus: 4 }, // level 11\n  { exp: 100000, profBonus: 4 }, // level 12\n\n  { exp: 120000, profBonus: 5 }, // level 13\n  { exp: 140000, profBonus: 5 }, // level 14\n  { exp: 165000, profBonus: 5 }, // level 15\n  { exp: 195000, profBonus: 5 }, // level 16\n\n  { exp: 225000, profBonus: 6 }, // level 17\n  { exp: 265000, profBonus: 6 }, // level 18\n  { exp: 305000, profBonus: 6 }, // level 18\n  { exp: 355000, profBonus: 6 }, // level 20\n];\n\n/**\n * Get experience points based on challenge rating\n * @param {number|string} crValue - challenge rating.\n * @returns {number}\n */\nexport function getXpFromCr(cr) {\n  let crValue = maths.safeParseFloat(cr);\n\n  if (crValue < 0.124) {\n    return 10;\n  } else if (crValue < 0.249) {\n    return 25;\n  } else if (crValue < 0.499) {\n    return 50;\n  } else if (crValue < 0.999) {\n    return 100;\n  }\n\n  crValue = Math.min(CHALLENGE_XP_TABLE.length - 1, parseInt(crValue));\n  return CHALLENGE_XP_TABLE[crValue];\n}\n\n/**\n * Get level and proficiency bonus from experience.\n * @param {string|number} exp - experience points.\n * @returns {{level:number, profBonus: number}}\n */\nexport function getLevelAndProfBonusFromExp(exp) {\n  const expValue = maths.safeParseInt(exp, 0);\n  let level = 0;\n  let index = 0;\n  do {\n    const next = ADVANCEMENT_TABLE[index++];\n    if (expValue >= next.exp) {\n      level = index;\n    } else {\n      break;\n    }\n  } while (index < ADVANCEMENT_TABLE.length);\n\n  return { level: level, profBonus: ADVANCEMENT_TABLE[level - 1].profBonus };\n}\n\n/**\n * Get min experience points for level.\n * @param {number} level\n */\nexport function getMinExpPointsForLevel(level) {\n  level = Math.min(level, ADVANCEMENT_TABLE.length);\n  level--; // array is zero based.\n  if (level < 0) {\n    return ADVANCEMENT_TABLE[0].exp;\n  }\n  return ADVANCEMENT_TABLE[level].exp;\n}\n","/**\n * @file Various utilities for handling arrays\n *\n * @module utils/arrays/arrayManip\n */\n/**\n * License {@link https://opensource.org/license/mit/|MIT}\n *\n * Copyright 2024 Steve Butler\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the “Software”), to deal in\n * the Software without restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n * Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */\n\n/**\n * @typedef Surrounds\n * @property {*} centre - value at centre\n * @property {*} tl - value to top left\n * @property {*} above - value above\n * @property {*} tr - value to top right\n * @property {*} right - value to right\n * @property {*} br - value to bottom right\n * @property {*} below - value below\n * @property {*} bl - value to bottom\n * @property {*} left - value to left\n */\n\n/**\n * Get the surround values from a 2D matrix\n * @param {Array.<Array.<*>>} matrix\n * @param {number} rowIndex\n * @param {number} columnIndex\n * @returns {Surrounds}\n */\nexport function getSurrounds(matrix, rowIndex, columnIndex) {\n  return {\n    centre: matrix[rowIndex]?.[columnIndex],\n    tl: matrix[rowIndex - 1]?.[columnIndex - 1],\n    above: matrix[rowIndex - 1]?.[columnIndex],\n    tr: matrix[rowIndex - 1]?.[columnIndex + 1],\n    right: matrix[rowIndex]?.[columnIndex + 1],\n    br: matrix[rowIndex + 1]?.[columnIndex + 1],\n    below: matrix[rowIndex + 1]?.[columnIndex],\n    bl: matrix[rowIndex + 1]?.[columnIndex - 1],\n    left: matrix[rowIndex]?.[columnIndex - 1],\n  };\n}\n\n/**\n * Get radiating cross from centre. Takes a 2D matrix and finds all cells\n * that radiate horizontally and vertically from a point.\n * @param {Array.<Array.<*>>} matrix\n * @param {Object} options\n * @param {number} options.rowIndex\n * @param {number} options.columnIndex\n * @param {number} [options.distance = 1] - distance from centre\n * @param {function(member:*):boolean} options.filter - if provided, must be true otherwise\n * radiation stops.\n * @returns {Surrounds}\n */\nexport function radiateUpAndDown(matrix, options) {\n  const centreX = options.columnIndex;\n  const centreY = options.rowIndex;\n  const result = [];\n  let lookNorth = true;\n  let lookEast = true;\n  let lookSouth = true;\n  let lookWest = true;\n  let offset = 1;\n  let member;\n  let distance = options.distance ?? 1;\n  while (distance-- > 0) {\n    if (lookWest) {\n      member = matrix[centreY][centreX - offset];\n      if (options.filter && !options.filter(member)) {\n        lookWest = false;\n      } else {\n        result.push(member);\n      }\n    }\n    if (lookEast) {\n      member = matrix[centreY][centreX + offset];\n      if (options.filter && !options.filter(member)) {\n        lookEast = false;\n      } else {\n        result.push(member);\n      }\n    }\n    if (lookNorth) {\n      member = matrix[centreY - offset][centreX];\n      if (options.filter && !options.filter(member)) {\n        lookNorth = false;\n      } else {\n        result.push(member);\n      }\n    }\n    if (lookSouth) {\n      member = matrix[centreY + offset][centreX];\n      if (options.filter && !options.filter(member)) {\n        lookSouth = false;\n      } else {\n        result.push(member);\n      }\n    }\n    offset++;\n  }\n  return result;\n}\n\n/**\n * Randomise an array.\n * @param {Object[]} source - array to randomise. The original will be modified.\n * @returns {Object[]} The source array which will have been randomised.\n */\nexport function randomise(source) {\n  let currentIndex = source.length;\n  let randomIndex;\n\n  // While there remain elements to shuffle.\n  while (currentIndex > 0) {\n    randomIndex = Math.floor(Math.random() * currentIndex);\n    currentIndex--;\n    // swap\n    [source[currentIndex], source[randomIndex]] = [\n      source[randomIndex],\n      source[currentIndex],\n    ];\n  }\n\n  return source;\n}\n","/**\n * @file Build artefact\n *\n * @module dnd/almanacs/artefactBuilder\n */\n/**\n * license {@link https://opensource.org/license/mit/|MIT}\n * Copyright 2024 Steve Butler (henspace.com).\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the “Software”), to deal in\n * the Software without restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n * Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */\n\nimport { Artefact, ArtefactType } from '../../players/artefacts.js';\nimport { CastSpell, ConsumeFood } from '../interact.js';\nimport { Traits, MagicTraits } from '../traits.js';\n\n/**\n * Create an artefact.\n * @param {module:dnd/almanacs/almanacActors~AlmanacEntry} almanacEntry\n * @param {string} imageName\n * @param {module:dnd/traits~Traits} traits\n */\nfunction createArtefact(almanacEntry, imageName, traits) {\n  const artefact = new Artefact(almanacEntry, '', `${imageName}.png`);\n  artefact.traits = traits;\n  return artefact;\n}\n\n/**\n * Create an artefact from an almanac entry.\n * @param {module:dnd/almanacs/almanacActors~AlmanacEntry} almanacEntry\n * @param {string} [traitsString] - map of values to override the default\n * almanac entry. Normally only required if restoring an artefact from saved values.\n * @returns {Artefact}\n */\nexport function buildArtefact(almanacEntry, traitsString) {\n  const traitsInitialValues = traitsString ?? almanacEntry.traitsString;\n  let traits;\n  let imageName;\n  if (almanacEntry.type === ArtefactType.SPELL) {\n    traits = new MagicTraits(traitsInitialValues);\n    imageName = 'spell';\n  } else if (almanacEntry.type === ArtefactType.CANTRIP) {\n    traits = new MagicTraits(traitsInitialValues);\n    imageName = 'cantrip';\n  } else {\n    traits = new Traits(traitsInitialValues);\n    imageName = almanacEntry.imageName;\n  }\n\n  traits.set('NAME', almanacEntry.name);\n  const artefact = createArtefact(almanacEntry, imageName, traits);\n  artefact.description = almanacEntry.description;\n  if (artefact.isMagic()) {\n    artefact.interaction = new CastSpell(artefact);\n  } else if (artefact.isConsumable()) {\n    artefact.interaction = new ConsumeFood(artefact);\n  }\n  return artefact;\n}\n","/**\n * @file Almanacs\n *\n * @module dnd/almanacs/almanacs\n */\n/**\n * license {@link https://opensource.org/license/mit/|MIT}\n * Copyright 2024 Steve Butler (henspace.com).\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the “Software”), to deal in\n * the Software without restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n * Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */\nimport LOG from '../../utils/logging.js';\nimport * as almanacUtils from './almanacUtils.js';\nimport * as assetLoaders from '../../utils/assetLoaders.js';\nimport { strToActorType } from '../../players/actors.js';\nimport { strToArtefactType } from '../../players/artefacts.js';\nimport * as maths from '../../utils/maths.js';\n\n/** Likelihoods of finding items */\nconst COMMON_PERCENT = 80;\nconst UNCOMMON_PERCENT = 25;\nconst RARE_PERCENT = 5;\nconst VERY_RARE_PERCENT = 1;\n\n/** @typedef {string} AlmanacRarityValue */\n/**\n * @enum {AlmanacRarityValue}\n */\nconst AlmanacRarity = {\n  COMMON: 'COMMON',\n  UNCOMMON: 'UNCOMMON',\n  RARE: 'RARE',\n  VERY_RARE: 'VERY RARE',\n};\n\n/**\n * @typedef {Object} AlmanacEntry\n * @property {number} minLevel\n * @property {string} id\n * @property {string} rarity - COMMON, UNCOMMON, RARE, VERY RARE\n * @property {string} imageName\n * @property {string} description\n * @property {string} typeId\n * @property {ArtefactType | ActorType} type\n * @property {string} equipmentIds - comma separated equipment list\n * @property {string} traitsString\n * @property {number} challengeRating - just used for searching the almanac\n */\n\nclass Almanac {\n  /** @type {number} */\n  static COMMON_CUTOFF =\n    COMMON_PERCENT /\n    (COMMON_PERCENT + UNCOMMON_PERCENT + RARE_PERCENT + VERY_RARE_PERCENT);\n  /** @type {number} */\n  static UNCOMMON_CUTOFF =\n    (COMMON_PERCENT + UNCOMMON_PERCENT) /\n    (COMMON_PERCENT + UNCOMMON_PERCENT + RARE_PERCENT + VERY_RARE_PERCENT);\n  /** @type {number} */\n  static RARE_CUTOFF =\n    (COMMON_PERCENT + UNCOMMON_PERCENT + RARE_PERCENT) /\n    (COMMON_PERCENT + UNCOMMON_PERCENT + RARE_PERCENT + VERY_RARE_PERCENT);\n  /** @type {number} */\n  static VERY_RARE_CUTOFF = 1;\n  /** @type {AlmanacEntry[]} */\n  common;\n  /** @type {AlmanacEntry[]} */\n  uncommon;\n  /** @type {AlmanacEntry[]} */\n  rare;\n  /** @type {AlmanacEntry[]} */\n  veryRare;\n\n  /**\n   * Create the almanac\n   */\n  constructor() {\n    this.common = [];\n    this.uncommon = [];\n    this.rare = [];\n    this.veryRare = [];\n  }\n\n  /**\n   * Merge almanac with this.\n   * @param {Almanac} almanac\n   */\n  mergeAlmanac(almanac) {\n    this.common.push(...almanac.common);\n    this.uncommon.push(...almanac.uncommon);\n    this.rare.push(...almanac.rare);\n    this.veryRare.push(...almanac.veryRare);\n  }\n\n  /** Find first element matching the callback. The search starts with common entries and moves on to\n   * rare.\n   * @param {function(element:AlmanacEntry, index:number, AlmanacEntry[]):truthy} callback\n   * @returns {AlmanacEntry} undefined if not found.\n   */\n  find(callback) {\n    let result = this.common.find(callback);\n    if (result) {\n      return result;\n    }\n    result = this.uncommon.find(callback);\n    if (result) {\n      return result;\n    }\n    result = this.rare.find(callback);\n    if (result) {\n      return result;\n    }\n    return this.veryRare.find(callback);\n  }\n\n  /** Create a new almanac filtering the values.\n   * @param {function(element:AlmanacEntry, index:number, AlmanacEntry[]):truthy} filterFn\n   * @returns {Almanac} undefined if not found.\n   */\n  filter(filterFn) {\n    const almanac = new Almanac();\n    almanac.common = filterFn ? this.common.filter(filterFn) : [...this.common];\n    almanac.uncommon = filterFn\n      ? this.uncommon.filter(filterFn)\n      : [...this.uncommon];\n    almanac.rare = filterFn ? this.rare.filter(filterFn) : [...this.rare];\n    almanac.veryRare = filterFn\n      ? this.veryRare.filter(filterFn)\n      : [...this.veryRare];\n    return almanac;\n  }\n\n  /**\n   * Get a random entry from the almanac.\n   * @returns {AlmanacEntry}\n   */\n  getRandomEntry() {\n    const cutoff = Math.random();\n    if (cutoff < Almanac.COMMON_CUTOFF) {\n      return this.getRandomCommonEntry();\n    } else if (cutoff < Almanac.UNCOMMON_CUTOFF) {\n      return this.getRandomUncommonEntry();\n    } else if (cutoff < Almanac.RARE_CUTOFF) {\n      return this.getRandomRareEntry();\n    } else {\n      return this.getRandomVeryRareEntry();\n    }\n  }\n\n  /**\n   * Get a random entry from the almanac's common elements.\n   * @returns {AlmanacEntry}\n   */\n  getRandomCommonEntry() {\n    return maths.getRandomMember(this.common);\n  }\n  /**\n   * Get a random entry from the almanac's uncommon elements. If there are no\n   * uncommon entries, it falls back to common.\n   * @returns {AlmanacEntry}\n   */\n  getRandomUncommonEntry() {\n    if (this.uncommon.length === 0) {\n      return this.getRandomCommonEntry();\n    } else {\n      return maths.getRandomMember(this.uncommon);\n    }\n  }\n\n  /**\n   * Get a random entry from the almanac's rare elements. If there are no\n   * rare entries, it falls back to uncommon.\n   * @returns {AlmanacEntry}\n   */\n  getRandomRareEntry() {\n    if (this.rare.length === 0) {\n      return this.getRandomUncommonEntry();\n    } else {\n      return maths.getRandomMember(this.rare);\n    }\n  }\n  /**\n   * Get a random entry from the almanac's very rare elements. If there are no\n   * very rare entries, it falls back to rare.\n   * @returns {AlmanacEntry}\n   */\n  getRandomVeryRareEntry() {\n    if (this.veryRare.length === 0) {\n      return this.getRandomRareEntry();\n    } else {\n      return maths.getRandomMember(this.veryRare);\n    }\n  }\n}\n\nclass AlmanacLibrary {\n  /** @type {Map<string, Almanac>} */\n  #almanacs;\n\n  constructor() {\n    this.#almanacs = new Map();\n  }\n\n  /**\n   * Add Almanac\n   * @param {string} key\n   * @param {Almanac} almanac\n   */\n  addAlmanac(key, almanac) {\n    this.#almanacs.set(key, almanac);\n  }\n\n  /**\n   * Get Almanac\n   * @param {string} key\n   * @returns {Almanac}\n   */\n  getAlmanac(key) {\n    const result = this.#almanacs.get(key);\n    if (!result) {\n      LOG`Attempt to get non-existent almanac ${key}`;\n    }\n    return result;\n  }\n  /**\n   * Get a random entry from the key\n   * @param {string | string[]} keyOrKeys - almanac\n   * @param {function(entry:AlmanacEntry):boolean} filterFn\n   * @returns {AlmanacEntry} null if none found.\n   */\n  getRandomEntry(keyOrKeys, filterFn) {\n    let key;\n    if (Array.isArray(keyOrKeys)) {\n      key = maths.getRandomMember(keyOrKeys);\n    } else {\n      key = keyOrKeys;\n    }\n    let almanac = this.getAlmanac(key).filter(filterFn);\n    if (almanac) {\n      return almanac.getRandomEntry();\n    }\n    LOG.error(`Failed to find almanac with key ${key}`);\n    return;\n  }\n\n  /** Find an entry by its id.\n   * @param {string} id\n   * @param {string[]} keys - the almanacs to search\n   * @returns {AlmanacEntry}\n   */\n  findById(id, keys) {\n    if (!keys) {\n      keys = this.#almanacs.keys();\n    }\n    for (const key of keys) {\n      const result = this.#almanacs.get(key)?.find((entry) => entry.id === id);\n      if (result) {\n        return result;\n      }\n    }\n    LOG.error(`Failed to find almanac entry for '${id}' in ${keys.join(', ')}`);\n    return;\n  }\n\n  /** Create a pool of almanacs as one new almanac.\n   * Only entries who pass the filterFn test, if provided, are returned.\n   * @param {string[]} keys - almanacs to search\n   * @param {function(entry:AlmanacEntry):boolean} filterFn\n   * @returns {Almanac}\n   */\n  getPooledAlmanac(almanacKeys, filterFn) {\n    const pooledAlmanac = new Almanac();\n    almanacKeys.forEach((key) => {\n      const almanac = this.getAlmanac(key).filter(filterFn);\n      pooledAlmanac.mergeAlmanac(almanac);\n    });\n    return pooledAlmanac;\n  }\n\n  /**\n   *\n   * @param {string} key - almanac key\n   * @param {*} type - entry type\n   * @returns {module:players/artefacts~ArtefactTypeValue | module:players/artefacts~ActorTypeValue }\n   */\n  getItemType(key, type) {\n    switch (key) {\n      case 'HEROES':\n      case 'ENEMIES':\n      case 'TRADERS':\n        return strToActorType(type);\n      default:\n        return strToArtefactType(type);\n    }\n  }\n}\n\n/**\n * Parse almanac line almanac entry\n * @param {string} line\n * @param {string} almanacKey\n * @returns {AlmanacEntry}\n */\nexport function parseAlmanacLine(line, almanacKey) {\n  const parts = line.match(\n    /^ *(\\d+) *, *(\\w+ ?\\w+) *, *(\\w*) *, *([\\w+]*) *(?:\\[ *([\\w, ]*?)])? *\\*(.*)$/\n  );\n  if (!parts) {\n    LOG.error(`Invalid almanac entry ${line}`);\n    return null;\n  }\n  const entry = {};\n  entry.minLevel = parseInt(parts[1]);\n  entry.rarity = parts[2].toUpperCase();\n  entry.typeId = parts[3];\n  entry.type = ALMANAC_LIBRARY.getItemType(almanacKey, entry.typeId);\n  entry.id = parts[4];\n  const derivedParts = almanacUtils.derivePartsFromId(entry.id);\n  entry.name = derivedParts.name;\n  entry.imageName = derivedParts.imageName;\n  entry.description = derivedParts.description;\n  entry.equipmentIds = csvToArray(parts[5]);\n  entry.traitsString = parts[6];\n  entry.challengeRating = extractCrValue(entry.traitsString);\n  return entry;\n}\n\n/**\n * Extract the CR rating as this is used as a filter.\n * @param {string} traits\n */\nfunction extractCrValue(traits) {\n  const match = traits?.match(/CR *[:=] *([\\d.]+)/);\n  return match ? maths.safeParseFloat(match[1], 0) : 0;\n}\n\n/**\n * Parse comma separated list of equipment ids into array.\n * @param {string} list\n * @returns {string[]}\n */\nfunction csvToArray(list) {\n  return list ? list.trim().split(/\\s*,\\s*/) : list;\n}\n\n/**\n * Parse text file into almanac\n * @param {string} text\n * @param {string} key - Almanac key\n * @returns {Almanac}\n */\nfunction parseAlmanacText(text, key) {\n  const almanac = new Almanac();\n  const lines = text.split(/[\\r\\n]+/);\n  lines.forEach((line) => {\n    line = line.trim();\n    if (line !== '' && !line.startsWith('#')) {\n      const entry = parseAlmanacLine(line, key);\n      if (entry) {\n        switch (entry.rarity) {\n          case AlmanacRarity.VERY_RARE:\n            almanac.veryRare.push(entry);\n            break;\n          case AlmanacRarity.RARE:\n            almanac.rare.push(entry);\n            break;\n          case AlmanacRarity.UNCOMMON:\n            almanac.uncommon.push(entry);\n            break;\n          case AlmanacRarity.COMMON:\n          default:\n            almanac.common.push(entry);\n            break;\n        }\n      }\n    }\n  });\n  return almanac;\n}\n\n/**\n * Create the actor almanac\n * @param {Map<string, URL>} urls\n * @returns {Promise} fulfils to undefined when complete\n */\nexport function loadAlmanacs(urlMap) {\n  const promises = [];\n  urlMap.forEach((url, key) => {\n    const promise = assetLoaders.loadTextFromUrl(url).then((text) => {\n      ALMANAC_LIBRARY.addAlmanac(key, parseAlmanacText(text, key));\n    });\n    promises.push(promise);\n  });\n  return Promise.all(promises);\n}\n\n/**\n * @type {Map<string, Almanac>}\n */\nexport const ALMANAC_LIBRARY = new AlmanacLibrary();\n","/**\n * @file Utilities for working with almanacs\n *\n * @module dnd/almanacs/almanacUtils\n */\n/**\n * license {@link https://opensource.org/license/mit/|MIT}\n * Copyright 2024 Steve Butler (henspace.com).\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the “Software”), to deal in\n * the Software without restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n * Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */\n\nimport { MESSAGES } from '../../utils/messageManager.js';\nimport LOG from '../../utils/logging.js';\n\n/**\n * Takes an ID and creates name.\n * @param {string} [idMain = '?'] - id stripped of its suffix\n * @returns {string}\n */\nexport function createNameFromId(idMain = '?') {\n  if (idMain.len < 2) {\n    return idMain;\n  }\n  const name = idMain.replace(/_/g, ' ');\n  const capitalisedName = name.charAt(0).toUpperCase() + name.substring(1);\n  return MESSAGES.getText(capitalisedName);\n}\n\n/**\n * Takes an ID and creates a description.\n * If no description an empty string is returned.\n * @param {string} id  - id stripped of its suffix\n * @returns {string}\n */\nexport function createDescriptionFromId(id) {\n  const messageKey = `DESCRIPTION ${id.toUpperCase()}`;\n  const result = MESSAGES.getText(messageKey);\n  if (messageKey === result) {\n    LOG.error(`No description set for ${messageKey}.`);\n    return '';\n  }\n  return result;\n}\n\n/**\n * Takes an ID including its extension and creates name, imageName and description.\n * @param {string} [id = '?']\n * @returns {{name:string, imageName:string, description:string}}\n */\nexport function derivePartsFromId(id = '?') {\n  const parts = id.split('+');\n  if (id.len < 2) {\n    return id;\n  }\n  return {\n    name: createNameFromId(parts[0]),\n    imageName: parts[0].toLowerCase(),\n    description: createDescriptionFromId(parts[0]),\n  };\n}\n","/**\n * @file Load assets. This module is placed in the assets folder to simplify\n * dynamic imports using Parcel's import.meta.url property.\n *\n * @module utils/assetLoaders.js\n */\n/**\n * License {@link https://opensource.org/license/mit/|MIT}\n *\n * Copyright 2024 Steve Butler (henspace.com).\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the “Software”), to deal in\n * the Software without restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n * Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */\nimport LOG from './logging.js';\n\n/**\n * Load text file from URL.\n * @param {URL} url\n * @return {Promise} fulfils to text or null.\n */\nexport function loadTextFromUrl(url) {\n  return fetch(url)\n    .then((response) => response.text())\n    .then((text) => text)\n    .catch((reason) => {\n      LOG.error(`Error fetching ${url}: ${reason}`);\n      return null;\n    });\n}\n\n/**\n * Load json from URL.\n * @param {URL} url\n * @return {Promise} fulfils to json object or null.\n */\nexport function loadJsonFromUrl(url) {\n  return fetch(url)\n    .then((response) => response.text())\n    .then((text) => text)\n    .catch((reason) => {\n      LOG.error(`Error fetching ${url}: ${reason}`);\n      return null;\n    });\n}\n","/**\n * @file Scene manager\n *\n * @module gameManagement/sceneManager\n */\n/**\n * License {@link https://opensource.org/license/mit/|MIT}\n *\n * Copyright 2024 Steve Butler (henspace.com).\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the “Software”), to deal in\n * the Software without restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n * Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */\n\nimport { parseSceneDefinition } from '../scriptReaders/sceneDefinitionParser.js';\nimport HUD from '../hud/hud.js';\nimport { NavigationButtons, NavigationLocation } from '../hud/hudNavSet.js';\nimport WORLD from '../utils/game/world.js';\nimport { CameraDolly, CameraTracking } from '../utils/game/camera.js';\nimport LOG from '../utils/logging.js';\n\n/**\n * @interface SceneList\n */\n/**\n * Get the next scene.\n * @function SceneList.getNext\n * @param{number} index\n * @returns {SceneDefinition}\n *\n */\n/**\n * Has another scene.\n * @function SceneList.hasNext\n * @returns {boolean}\n *\n */\n/**\n * Reset to the first scene.\n * @function SceneList.reset\n */\n\n/**\n * Get the scene index. This will be the index of the last scene retrieved by\n * a call to getNext.\n * @function SceneList.getIndex\n * @returns {number}\n */\n\n/**\n * Restore a saved game\n * @function SceneList.restore\n * @param {number} index\n * @param {Actor} hero\n */\n\n/** @type {module:utils/sprites/sprite~Sprite}  */\nlet cameraDolly;\n\n/** @type {SceneList} */\nlet sceneDefnList;\n\nlet currentScene;\n\nlet navigationButtons;\n\n/**\n * Definition of a scene\n */\nexport class SceneDefinition {\n  /** @type {string} */\n  intro;\n  /** @type {Actor || ActorDefn} */\n  hero;\n  /** @type {ActorDefn[]} */\n  enemies;\n  /** @type {ActorDefn[]} */\n  artefacts;\n  /** @type {string[]} */\n  mapDesign;\n  /**\n   * Construct an empty scene\n   */\n  constructor() {\n    this.hero = null;\n    this.enemies = [];\n    this.artefacts = [];\n    this.mapDesign = [];\n  }\n}\n\n/**\n * Set camera dolly\n * @param {module:utils/sprites/sprite~Sprite} sprite\n * @param {number} speed - See {@link module:game/camera.createCameraDolly}\n * @param {number} proportionSeparated - See {@link module:game/camera.createCameraDolly}\n */\nfunction setCameraToTrack(sprite, speed, proportionSeparated) {\n  cameraDolly = new CameraDolly(sprite, speed, proportionSeparated);\n}\n\n/**\n * Create the HUD\n */\nfunction createHud() {\n  navigationButtons = new NavigationButtons(\n    cameraDolly,\n    48,\n    NavigationLocation.BR,\n    NavigationLocation.BL\n  );\n  HUD.setVisible(true);\n}\n\n/**\n * Clear the HUD.\n */\nfunction clearHud() {\n  navigationButtons = null;\n  HUD.clear();\n  HUD.setVisible(false);\n}\n/** Set the current scene, unloading any existing scene\n * @param {module:game/scene~Scene} scene\n * @returns {Promise} fulfils to undefined.\n * Rejects if scene is undefined or null.\n */\nfunction setScene(scene) {\n  if (!scene) {\n    LOG.error(\n      'Attempt made to switch to the next scene when there are no more.'\n    );\n    return Promise.reject();\n  }\n  return unloadScene(currentScene)\n    .then(() => loadScene(scene))\n    .then(() => scene);\n}\n\n/**\n * Load scene\n * @param {module:game/scene~Scene} scene\n * @returns {Promise} fulfills to null\n */\nfunction loadScene(scene) {\n  return scene\n    .load()\n    .then(() => scene.initialise())\n    .then(() => {\n      createHud();\n      currentScene = scene;\n    });\n}\n\n/**\n * Unload scene. This can be safely called even if the\n * current scene has already been unloaded.\n * @param {module:game/scene~Scene} scene\n * @returns {Promise} fulfills to null\n */\nfunction unloadScene(scene) {\n  if (scene) {\n    return scene.unload().then(() => {\n      WORLD.clearAll();\n      currentScene = null;\n      clearHud();\n      return Promise.resolve();\n    });\n  } else {\n    return Promise.resolve(null);\n  }\n}\n\n/**\n * Unload current scene\n * @returns {Promise} fulfills to null\n */\nfunction unloadCurrentScene() {\n  return unloadScene(currentScene);\n}\n/**\n * Configure the scenes from the script.\n * @param {module:gameManagement/sceneManager~SceneDefinition} listOfScenes\n */\nfunction setSceneList(listOfScenes) {\n  sceneDefnList = listOfScenes;\n  sceneDefnList.reset();\n}\n\n/**\n * Test to see if there are more scenes.\n * @returns {boolean}\n */\nfunction areThereMoreScenes() {\n  return sceneDefnList.hasNext();\n}\n\n/**\n * Continue from a saved scene.\n * @param {number} savedSceneLevel\n * @param {Actor} savedHero\n * @returns {Promise} fulfils to the loaded scene.\n * Rejects if no scenes.\n */\nfunction continueFromSavedScene(savedSceneLevel, savedHero) {\n  sceneDefnList.restore(savedSceneLevel, savedHero);\n  return setScene(getNextSceneFromList());\n}\n/**\n * Switch to the first scene.\n * @returns {Promise} fulfils to the loaded scene.\n * Rejects if no scenes.\n */\nfunction switchToFirstScene() {\n  sceneDefnList.reset();\n  return setScene(getNextSceneFromList());\n}\n\n/**\n * Switch to the next scene.\n * @returns {Promise} fulfils to the loaded scene.\n * Rejects if there are no more.\n */\nfunction switchToNextScene() {\n  return setScene(getNextSceneFromList());\n}\n\n/**\n * Gets the next scene from the scene definition list.\n * @returns {Scene}\n */\nfunction getNextSceneFromList() {\n  return parseSceneDefinition(sceneDefnList.getNext());\n}\n\n/**\n * UPdate the scene\n * @param {number} deltaSeconds\n */\nfunction update(deltaSeconds) {\n  currentScene?.update(deltaSeconds);\n  cameraDolly?.update(deltaSeconds);\n}\n\n/**\n * Pan the camera.\n * @param {number} dx\n * @param {number} dy\n */\nfunction panCameraBy(dx, dy) {\n  cameraDolly.panBy(dx, dy);\n  cameraDolly.setTrackingMethod(CameraTracking.OFF);\n  navigationButtons.setTrackingState(false);\n}\n\n/**\n * Get the current scene level.\n * @returns {number}\n */\nfunction getCurrentSceneLevel() {\n  return sceneDefnList.getIndex();\n}\n\n/**\n * SCENE_MANAGER Singleton.\n */\nconst SCENE_MANAGER = {\n  areThereMoreScenes: areThereMoreScenes,\n  continueFromSavedScene: continueFromSavedScene,\n  getCurrentSceneLevel: getCurrentSceneLevel,\n  panCameraBy: panCameraBy,\n  setCameraToTrack: setCameraToTrack,\n  setSceneList: setSceneList,\n  switchToFirstScene: switchToFirstScene,\n  switchToNextScene: switchToNextScene,\n  unloadCurrentScene: unloadCurrentScene,\n  update: update,\n};\n\nexport default SCENE_MANAGER;\n","/**\n * @file Convert a screen definition into a scene.\n *\n * @module scriptReaders/sceneDefinitionParser\n */\n/**\n * License {@link https://opensource.org/license/mit/|MIT}\n *\n * Copyright 2024 Steve Butler (henspace.com).\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the “Software”), to deal in\n * the Software without restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n * Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */\n\nimport { TilePlan } from '../utils/tileMaps/tilePlan.js';\nimport { TileMap } from '../utils/tileMaps/tileMap.js';\nimport TURN_MANAGER from '../gameManagement/turnManager.js';\nimport WORLD from '../utils/game/world.js';\nimport SCREEN from '../utils/game/screen.js';\nimport { TILE_MAP_KEYS } from './symbolMapping.js';\nimport { AbstractScene } from '../utils/game/scene.js';\nimport SCENE_MANAGER from '../gameManagement/sceneManager.js';\nimport GameConstants from '../utils/game/gameConstants.js';\nimport { Actor, ActorType } from '../players/actors.js';\n\nimport { buildActor } from '../dnd/almanacs/actorBuilder.js';\nimport { buildArtefact } from '../dnd/almanacs/artefactBuilder.js';\nimport * as maths from '../utils/maths.js';\nimport { ALMANAC_LIBRARY } from '../dnd/almanacs/almanacs.js';\nimport { rollDice } from '../utils/dice.js';\nimport { ArtefactType } from '../players/artefacts.js';\nimport * as almanacUtils from '../dnd/almanacs/almanacUtils.js';\n\nconst GRID_SIZE = GameConstants.TILE_SIZE;\n\n/** @type {Actor} */\nlet lastHero;\n\n/**\n * @typedef {Object} ActorDefn\n * @property {string} id\n * @property {module:dnd/traits~CharacterTraits} traits\n * @property {string} description\n */\n\n/**\n * Create the hero. If the scene definition doesn't have a hero definition, the\n * lastHero is used.\n * @param {SceneDefinition} sceneDefn\n * @returns {Actor}\n */\nfunction createHero(sceneDefn) {\n  if (sceneDefn.hero instanceof Actor) {\n    lastHero = sceneDefn.hero;\n  } else if (sceneDefn.hero) {\n    const actor = buildActor(sceneDefn.hero);\n    lastHero = actor;\n  } else if (!lastHero) {\n    throw new Error('No hero has been defined.');\n  }\n\n  return lastHero;\n}\n/**\n * Create the enemies.\n * @param {SceneDefinition} sceneDefn\n * @returns {Actor[]}\n */\nfunction createEnemies(sceneDefn) {\n  const enemies = [];\n  sceneDefn.enemies.forEach((almanacEntry) => {\n    const actor = buildActor(almanacEntry);\n    enemies.push(actor);\n  });\n  return enemies;\n}\n\n/**\n * Create the artefacts.\n * @param {SceneDefinition} sceneDefn\n * @returns {Actor[]}\n */\nfunction createArtefacts(sceneDefn) {\n  const artefacts = [];\n  sceneDefn.artefacts.forEach((almanacEntry) => {\n    let id;\n    let type;\n\n    if (\n      almanacEntry.type === ArtefactType.SPELL ||\n      almanacEntry.type === ArtefactType.CANTRIP\n    ) {\n      id = 'engraved_pillar';\n      type = ActorType.PROP;\n    } else {\n      id = 'hidden_artefact';\n      type = ActorType.HIDDEN_ARTEFACT;\n    }\n\n    const actor = buildActor({\n      id: id,\n      name: almanacUtils.createNameFromId(id),\n      description: almanacUtils.createDescriptionFromId(id),\n      imageName: id,\n      type: type,\n      traitsString: '',\n    });\n    const artefact = buildArtefact(almanacEntry);\n    actor.storeManager.addArtefact(artefact);\n    artefacts.push(actor);\n  });\n  return artefacts;\n}\n\n/**\n * Add an artefact from the almanac.\n * @param {Actor[]} actors\n * @param {AlmanacEntry} almanacEntry\n * @param {Object} options\n * @param {boolean} options.equip - if true, try to equip rather than stash.\n */\nfunction addArtefactToActor(actor, almanacEntry, options) {\n  if (almanacEntry) {\n    const artefact = buildArtefact(almanacEntry);\n    if (options.equip && artefact.equipStoreType) {\n      actor.storeManager?.equip(artefact, { direct: true });\n    } else {\n      actor.storeManager?.stash(artefact, { direct: true });\n    }\n  }\n}\n\n/**\n * Add an artefact from the almanac.\n * @param {Actor[]} actors\n * @param {Almanac} almanac\n * @param {Object} options\n * @param {number} options.qty - number to add.\n * @param {boolean} options.equip - if true, try to equip rather than stash.\n */\nfunction addRandomArtefactsToActor(actor, almanac, options) {\n  while (options.qty-- > 0) {\n    const almanacEntry = almanac.getRandomEntry();\n    addArtefactToActor(actor, almanacEntry, options);\n  }\n}\n\n/**\n * Scene created from a scene definition.\n */\nclass ParsedScene extends AbstractScene {\n  /** @type {SceneDefinition} */\n  #sceneDefn;\n\n  /** Construct the scene from a definition. */\n  constructor(sceneDefn) {\n    super();\n    this.#sceneDefn = sceneDefn;\n    this.intro = sceneDefn.intro;\n  }\n\n  /** @override */\n  doLoad() {\n    return Promise.resolve();\n  }\n\n  doInitialise() {\n    const tilePlan = TilePlan.generateTileMapPlan(\n      this.#sceneDefn.mapDesign,\n      TILE_MAP_KEYS\n    );\n    this.heroActor = createHero(this.#sceneDefn);\n    const tileMap = new TileMap(\n      SCREEN.getContext2D(),\n      tilePlan,\n      GRID_SIZE,\n      this.heroActor\n    );\n    WORLD.setTileMap(tileMap);\n\n    const pooledArtefactAlmanac = ALMANAC_LIBRARY.getPooledAlmanac(\n      ['ARTEFACTS', 'ARMOUR', 'WEAPONS'],\n      (entry) => entry.minLevel <= SCENE_MANAGER.getCurrentSceneLevel()\n    );\n\n    const water = pooledArtefactAlmanac.find(\n      (entry) => entry.id === 'waterskin'\n    );\n    const rations = pooledArtefactAlmanac.find(\n      (entry) => entry.id === 'iron_rations'\n    );\n\n    createEnemies(this.#sceneDefn).forEach((enemy) => {\n      enemy.position = tileMap.getRandomFreeGroundTile().worldPoint;\n      WORLD.addActor(enemy);\n      if (enemy.isTrader()) {\n        let qtyOfItems = 7;\n        if (rollDice(6) > 3) {\n          addArtefactToActor(enemy, water, { equip: false });\n          qtyOfItems--;\n        }\n        if (rollDice(6) > 3) {\n          addArtefactToActor(enemy, rations, { equip: false });\n          qtyOfItems--;\n        }\n        addRandomArtefactsToActor(enemy, pooledArtefactAlmanac, {\n          qty: qtyOfItems,\n          equip: false,\n        });\n      }\n    });\n    createArtefacts(this.#sceneDefn).forEach((artefact) => {\n      artefact.position = tileMap.getRandomFreeGroundTile().worldPoint;\n      WORLD.addArtefact(artefact);\n    });\n    SCENE_MANAGER.setCameraToTrack(this.heroActor.sprite, 200, 0);\n    WORLD.addActor(this.heroActor);\n    TURN_MANAGER.setHero(this.heroActor);\n    return Promise.resolve();\n  }\n\n  /**\n   * @override\n   */\n  doUpdate(deltaSecondsUnused) {\n    return;\n  }\n\n  /**\n   * @override\n   */\n  doUnload() {\n    return Promise.resolve(null);\n  }\n}\n\n/**\n * Parse the scene definition to create a Scene\n * @param {SceneDefinition} sceneDefn\n * @returns {Scene}\n */\nexport function parseSceneDefinition(sceneDefn) {\n  return new ParsedScene(sceneDefn);\n}\n","/**\n * @file Tile map support\n *\n * @module utils/tileMaps/tilePlan\n */\n/**\n * License {@link https://opensource.org/license/mit/|MIT}\n *\n * Copyright 2024 Steve Butler\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the “Software”), to deal in\n * the Software without restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n * Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */\nimport LOG from '../logging.js';\nimport { getSurrounds } from '../arrays/arrayManip.js';\nimport { Point } from '../geometry.js';\n\n/** Symbol used to mark void tiles @type {string} */\nconst VOID_SYMBOL = ' ';\n\n/** Special symbols for constructing the dungeon.\n * The first character in each array is used as the default, so there should be\n * an image for that. Note that the symbols in the arrays must be single characters.\n * @type {Object<string, string[]>}\n */\nexport const SpecialSymbols = {\n  WALL: ['#', '*', '|'],\n  DOOR_IN: ['-'],\n  DOOR_OUT: ['='],\n  GROUND: ['.', ':', ',', ';'],\n  VOID: [' '],\n};\n\n/**\n * Clarifiers appended to ambiguous design symbols.\n */\nconst Clarifiers = {\n  TOP_LEFT: '-TL',\n  TOP_LEFT_INTERNAL: '-TLI',\n  TOP: '-T',\n  TOP_RIGHT: '-TR',\n  TOP_RIGHT_INTERNAL: '-TRI',\n  RIGHT: '-R',\n  BOTTOM_RIGHT: '-BR',\n  BOTTOM_RIGHT_INTERNAL: '-BRI',\n  BOTTOM: '-B',\n  BOTTOM_LEFT: '-BL',\n  BOTTOM_LEFT_INTERNAL: '-BLI',\n  LEFT: '-L',\n  TOP_TEE: '-TTEE',\n  RIGHT_TEE: '-RTEE',\n  BOTTOM_TEE: '-BTEE',\n  LEFT_TEE: '-LTEE',\n  INTERNAL_CROSS: '-XI',\n  INTERNAL_VERTICAL: '-VI',\n  INTERNAL_HORIZONTAL: '-HI',\n};\n\n/**\n * Shadow clarifiers. Added to some symbols to mark it as being below a top wall.\n */\nconst ShadowClarifier = {\n  BELOW_WALL: '-SBW',\n  BELOW_END_WALL: '-SBE',\n};\n\n/**\n * Design created by users for a tile map.\n * The design comprises an array of strings. Each string is row in the tile map.\n * A single character is used for each tile. Users can use any character they want\n * except for the {@link SpecialSymbols} characters which have predefined meanings.\n * These predefined symbols can be ambiguous. E.g. the CORNER could be any of four possible\n * corners. These are clarified automatically and have a suffix added to clarify\n * its position.\n *  @typedef {string[]}TileMapDesign\n */\n\n/**\n * Two dimensional array of tile design information. This is different from the\n * design information as the design now exists as a two dimensional array of\n * TileDefinition.\n *\n * @typedef {Array.TileDefinition[]} TilePlan\n */\n\n/**\n * Tile Design Information.\n * @typedef {Object} TileDefinition\n * @property {string} name\n * @property {string} image\n */\n\n/**\n * Map of symbols to names and image names. The name just allows different tile\n * types to use the same image.\n * @typedef {Map<string, TileDesignInfo>} SymbolMap\n */\n\n/**\n * Encapsulated tile plan.\n */\nexport class TilePlan {\n  /** @type {Array.<Array.<*>>} */\n  matrix;\n  /** @type {Point} */\n  entryPointByDoor;\n  /** @type {Point} */\n  exitPointByDoor;\n\n  constructor() {\n    this.entryPointByDoor = new Point(0, 0);\n    this.exitPointByDoor = new Point(0, 0);\n  }\n\n  /**\n   * Converts a tile map design into a tile map plan\n   * @param {TileMapDesign} design\n   * @param {SymbolMap}} symbolMap\n   * @returns {TilePlan}\n   */\n  static generateTileMapPlan(design, symbolMap) {\n    const tilePlan = new TilePlan();\n    let matrix = tilePlan.convertToMatrix(design);\n    matrix = tilePlan.clarifyMatrix(matrix);\n    tilePlan.createPlan(matrix, symbolMap);\n    return tilePlan;\n  }\n  /**\n   * Convert the user's design from array of strings into a 2D array.\n   * @returns {Array.string[]}\n   */\n  convertToMatrix(design) {\n    const matrix = [];\n    let nColumns = 0;\n    design.forEach((row) => {\n      nColumns = Math.max(nColumns, row.length);\n    });\n    design.forEach((row) => {\n      if (row.length < nColumns) {\n        row = row + ' '.repeat(nColumns - length);\n      }\n      matrix.push(row.split(''));\n    });\n    return matrix;\n  }\n\n  /**\n   * Go through the design matrix and convert any ambiguous symbols to more specific\n   * ones. Note the tilePlan matrix is not adjusted. The entry and exit tiles are discovered though.\n   * @param {Array.string[]} matrix\n   */\n  clarifyMatrix(matrix) {\n    const unambiguousMatrix = [];\n    matrix.forEach((rowValue, rowIndex) => {\n      const correctedRow = [];\n      unambiguousMatrix.push(correctedRow);\n      rowValue.forEach((colValue, colIndex) => {\n        const surrounds = getSurrounds(matrix, rowIndex, colIndex);\n        if (isVoid(colValue)) {\n          colValue = VOID_SYMBOL;\n        } else if (isGround(colValue)) {\n          colValue = clarifyGround(colValue, surrounds);\n          if (isEntryTile(colValue, surrounds)) {\n            this.entryPointByDoor = new Point(colIndex, rowIndex);\n          } else if (isExitTile(colValue, surrounds)) {\n            this.exitPointByDoor = new Point(colIndex, rowIndex);\n          }\n        } else if (isPartOfWall(colValue)) {\n          colValue = clarifyWallPart(colValue, surrounds);\n        }\n        correctedRow.push(colValue);\n      });\n    });\n    return unambiguousMatrix;\n  }\n  /**\n   * Convert a clarified design plan matrix into a tile plan.\n   * @param {string[][]} matrix\n   * @param {Map<string, *>} symbolMap\n   * @returns {Array.<Array.<*>>}\n   */\n  createPlan(matrix, symbolMap) {\n    const planMatrix = [];\n    matrix.forEach((rowValue) => {\n      const planRow = [];\n      planMatrix.push(planRow);\n      rowValue.forEach((columnValue) => {\n        planRow.push(getDesignInfo(columnValue, symbolMap));\n      });\n    });\n    this.matrix = planMatrix;\n  }\n}\n\n/**\n * Test if symbol is a void.\n * @returns {boolean}\n */\nfunction isVoid(symbol) {\n  return SpecialSymbols.VOID.includes(symbol);\n}\n\n/**\n * Test if symbol is an entrance.\n * @returns {boolean}\n */\nfunction isEntrance(symbol) {\n  return SpecialSymbols.DOOR_IN.includes(symbol);\n}\n\n/**\n * Test if symbol is an exit.\n * @returns {boolean}\n */\nfunction isExit(symbol) {\n  return SpecialSymbols.DOOR_OUT.includes(symbol);\n}\n\n/**\n * Test if symbol is a door.\n * @returns {boolean}\n */\nfunction isDoor(symbol) {\n  return isEntrance(symbol) || isExit(symbol);\n}\n\n/**\n * Test if symbol is a wall.\n * @returns {boolean}\n */\nfunction isWall(symbol) {\n  return SpecialSymbols.WALL.includes(symbol);\n}\n\n/**\n * Test if symbol is ground.\n * @returns {boolean}\n */\nfunction isGround(symbol) {\n  return SpecialSymbols.GROUND.includes(symbol);\n}\n/**\n * Test if the symbol, unclarified, is part of a wall.\n * @param {string} symbol\n * @returns {boolean}\n */\nfunction isPartOfWall(symbol) {\n  return isWall(symbol) || isDoor(symbol);\n}\n\n/**\n * Clarify the ground.\n * @param {string} value\n * @param {module:utils/arrays/arrayManip~Surrounds} surrounds\n * @return {string}\n */\nfunction clarifyGround(value, surrounds) {\n  if (isPartOfWall(surrounds.above)) {\n    if (isPartOfWall(surrounds.tl)) {\n      value += ShadowClarifier.BELOW_WALL;\n    } else {\n      value += ShadowClarifier.BELOW_END_WALL;\n    }\n  }\n  return value;\n}\n\n/**\n * Check if this floor tile is the entry tile. This is the tile the hero will\n * appear on when entering the map. The tests are made in the order of where\n * the doors is most likely to be placed assuming a left to right, top to bottom\n * design.\n * @param {string} value\n * @param {module:utils/arrays/arrayManip~Surrounds} surrounds\n * @returns {boolean}\n */\nfunction isEntryTile(value, surrounds) {\n  return (\n    isEntrance(surrounds.left) ||\n    isEntrance(surrounds.above) ||\n    isEntrance(surrounds.right) ||\n    isEntrance(surrounds.below)\n  );\n}\n\n/**\n * Check if this floor tile is the exit tile. This is the tile the hero will\n * appear on when entering the map. The tests are made in the order of where\n * the doors is most likely to be placed assuming a left to right, top to bottom\n * design.\n * @param {string} value\n * @param {module:utils/arrays/arrayManip~Surrounds} surrounds\n * @returns {boolean}\n */\nfunction isExitTile(value, surrounds) {\n  return (\n    isExit(surrounds.right) ||\n    isExit(surrounds.below) ||\n    isExit(surrounds.left) ||\n    isExit(surrounds.above)\n  );\n}\n/**\n * Distinguish the type of tile based on its surroundings.\n * This function does not handle corners.\n * @param {string} value\n * @param {module:utils/arrays/arrayManip~Surrounds} surrounds\n * @return {string}\n */\nfunction clarifyWallPart(value, surrounds) {\n  let result = value;\n  // internals centre cross\n  if (\n    isPartOfWall(surrounds.above) &&\n    isPartOfWall(surrounds.right) &&\n    isPartOfWall(surrounds.below) &&\n    isPartOfWall(surrounds.left)\n  ) {\n    result += Clarifiers.INTERNAL_CROSS;\n  } else if (isGround(surrounds.left) && isGround(surrounds.right)) {\n    result += Clarifiers.INTERNAL_VERTICAL;\n  } else if (isGround(surrounds.above) && isGround(surrounds.below)) {\n    result += Clarifiers.INTERNAL_HORIZONTAL;\n  }\n\n  // Tees\n  else if (\n    isPartOfWall(surrounds.left) &&\n    isPartOfWall(surrounds.right) &&\n    isPartOfWall(surrounds.below)\n  ) {\n    result += Clarifiers.TOP_TEE;\n  } else if (\n    isPartOfWall(surrounds.above) &&\n    isPartOfWall(surrounds.below) &&\n    isPartOfWall(surrounds.left)\n  ) {\n    result += Clarifiers.RIGHT_TEE;\n  } else if (\n    isPartOfWall(surrounds.left) &&\n    isPartOfWall(surrounds.right) &&\n    isPartOfWall(surrounds.above)\n  ) {\n    result += Clarifiers.BOTTOM_TEE;\n  } else if (\n    isPartOfWall(surrounds.above) &&\n    isPartOfWall(surrounds.below) &&\n    isPartOfWall(surrounds.right)\n  ) {\n    result += Clarifiers.LEFT_TEE;\n  }\n  // corners\n  else if (isPartOfWall(surrounds.right) && isPartOfWall(surrounds.below)) {\n    result += isGround(surrounds.br)\n      ? Clarifiers.TOP_LEFT\n      : Clarifiers.TOP_LEFT_INTERNAL;\n  } else if (isPartOfWall(surrounds.left) && isPartOfWall(surrounds.below)) {\n    result += isGround(surrounds.bl)\n      ? Clarifiers.TOP_RIGHT\n      : Clarifiers.TOP_RIGHT_INTERNAL;\n  } else if (isPartOfWall(surrounds.left) && isPartOfWall(surrounds.above)) {\n    result += isGround(surrounds.tl)\n      ? Clarifiers.BOTTOM_RIGHT\n      : Clarifiers.BOTTOM_RIGHT_INTERNAL;\n  } else if (isPartOfWall(surrounds.right) && isPartOfWall(surrounds.above)) {\n    result += isGround(surrounds.tr)\n      ? Clarifiers.BOTTOM_LEFT\n      : Clarifiers.BOTTOM_LEFT_INTERNAL;\n  }\n  // straights\n  else if (isPartOfWall(surrounds.above) && isPartOfWall(surrounds.below)) {\n    // vertical\n    result += isGround(surrounds.right) ? Clarifiers.LEFT : Clarifiers.RIGHT;\n  } else if (isPartOfWall(surrounds.right) && isPartOfWall(surrounds.left)) {\n    // horizontal\n    result += isGround(surrounds.below) ? Clarifiers.TOP : Clarifiers.BOTTOM;\n  }\n\n  if (isPartOfWall(surrounds.above)) {\n    return (result += ShadowClarifier.BELOW_WALL);\n  }\n  return result;\n}\n\n/** Get the design info from the symbol map. The function reduces the specialism\n * of the symbol if it cannot find it. I.e it removes any shadow clarifiers and\n * then all other clarifiers when hunting for the symbol in the symbol map.\n * @param {string} symbol - clarified symbol.\n * @param {Map<string, *>} symbolMap\n * @returns {TileDesignInfo}\n */\nfunction getDesignInfo(symbol, symbolMap) {\n  if (symbol === VOID_SYMBOL) {\n    return null;\n  }\n  const match = symbol.match(/(.)(-[^-]*)?(-[^-]*)?/);\n  let info = symbolMap.get(symbol);\n  if (!info && match[2] && match[3]) {\n    info = symbolMap.get(`${match[1]}${match[2]}`); // no shadow clarifier\n  }\n  if (!info && match[2]) {\n    info = symbolMap.get(match[1]); // no clarifiers at all\n  }\n\n  if (!info) {\n    const fallbackSymbol = getFirstOfCohort(match[1]);\n    if (fallbackSymbol && fallbackSymbol !== match[1]) {\n      return getDesignInfo(\n        formClarifiedSymbol(fallbackSymbol, match[2], match[3]),\n        symbolMap\n      );\n    } else {\n      LOG.error(`Failed to find symbol for ${symbol}`);\n    }\n  }\n  return info;\n}\n\n/**\n * Searches the SpecialSymbols and finds the first entry in the array that matches\n * the unclarified symbol.\n * @param {string} unclarifiedSymbol\n * @returns {string} null if not found\n */\nfunction getFirstOfCohort(unclarifiedSymbol) {\n  for (const prop in SpecialSymbols) {\n    if (SpecialSymbols[prop].includes(unclarifiedSymbol)) {\n      return SpecialSymbols[prop][0];\n    }\n  }\n  return null;\n}\n\n/**\n * Add clarifiers onto symbol.\n * @param {string} unclarifiedSymbol\n * @param {string} clarifier\n * @param {string} shadowClarifier\n */\nfunction formClarifiedSymbol(unclarifiedSymbol, clarifier, shadowClarifier) {\n  let result = unclarifiedSymbol;\n  if (clarifier) {\n    result += clarifier;\n  }\n  if (shadowClarifier) {\n    result += shadowClarifier;\n  }\n  return result;\n}\n","/**\n * @file Tile map\n *\n * @module utils/tileMaps/tileMap\n */\n/**\n * License {@link https://opensource.org/license/mit/|MIT}\n *\n * Copyright 2024 Steve Butler\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the “Software”), to deal in\n * the Software without restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n * Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */\nimport LOG from '../logging.js';\nimport { Sprite } from '../sprites/sprite.js';\nimport IMAGE_MANAGER from '../sprites/imageManager.js';\nimport {\n  ImageSpriteCanvasRenderer,\n  RectSpriteCanvasRenderer,\n} from '../sprites/spriteRenderers.js';\nimport { Point, Rectangle } from '../geometry.js';\nimport { UiClickHandler } from '../ui/interactions.js';\nimport { randomise } from '../arrays/arrayManip.js';\nimport { getSurrounds, radiateUpAndDown } from '../arrays/arrayManip.js';\nimport SCREEN from '../game/screen.js';\nimport { RayTracer } from './pathFinder.js';\nimport { Colours } from '../../constants/canvasStyles.js';\n\n/**\n * Detail for click events.\n * @enum {number}\n */\nexport const ClickEventFilter = {\n  MOVEMENT_TILE: 0,\n  INTERACT_TILE: 1,\n  OCCUPIED_TILE: 2,\n  HERO_TILE: 3,\n  MOVE_OR_INTERACT_TILE: 4,\n};\n\n/**\n * Roles that tiles adopt.\n * @enum {number}\n */\nexport const TileRole = {\n  OBSTACLE: -1,\n  GROUND: 0,\n  ENTRANCE: 1,\n  EXIT: 2,\n  STAIRS_UP: 3,\n  STAIRS_DOWN: 4,\n};\n/**\n * @typedef {Object} TileDefinition\n * @property {TileRole} role\n * @property {module:utils/sprites/sprite~SpriteClickHandler} onClick\n * @property {module:utils/sprites/sprite~SpriteClickHandler} onContextClick\n * @property {string} image - used to create the sprite.\n */\n\n/**\n * Tile class\n */\nexport class Tile extends UiClickHandler {\n  /** @type {Sprite} */\n  sprite;\n  /** @type {boolean} */\n  obstacle;\n  /** @type {module:players/actors~Actor} */\n  #occupants;\n  /** @type {Point} */\n  #gridPoint;\n  /** @type {Point} */\n  #worldPoint;\n  /** @type {TileRole} */\n  #role;\n\n  /** Construct tile\n   * @param {Sprite} tileSprite;\n   * @param {Object} options;\n   * @param {boolean} options.obstacle;\n   * @param {!Point} options.gridPoint;\n   * @param {!Point} options.worldPoint;\n   * @param {TileRole} options.role;\n   */\n  constructor(tileSprite, options) {\n    super();\n    this.sprite = tileSprite;\n    this.#occupants = new Map();\n    this.obstacle = options.obstacle;\n    this.#gridPoint = options.gridPoint;\n    this.#worldPoint = options.worldPoint;\n    this.#role = options.role;\n  }\n\n  /**\n   * Get the role.\n   */\n  get role() {\n    return this.#role;\n  }\n\n  /**\n   * Get the grid point.\n   * @returns {Point}\n   */\n  get gridPoint() {\n    return this.#gridPoint;\n  }\n  /**\n   * Get the world point.\n   * @returns {Point}\n   */\n  get worldPoint() {\n    return this.#worldPoint;\n  }\n\n  /** Add occupant.\n   * @param {import('..utils/game/actors.js').Actor\n   */\n  addOccupant(occupant) {\n    this.#occupants.set(occupant, occupant);\n  }\n\n  /** Remove occupant.\n   * @param {module:players/actors~Actor}\n   */\n  deleteOccupant(occupant) {\n    this.#occupants.delete(occupant);\n  }\n\n  /** get occupants.\n   * @returns {module:players/actors~Actor[]}\n   */\n  getOccupants() {\n    return this.#occupants;\n  }\n\n  /**\n   * Handle the click but change the point to the sprites' position\n   */\n  actionClick(pointUnused) {\n    super.actionClick(this.sprite.position);\n  }\n  /**\n   * Handle the click but change the point to the sprites' position\n   */\n  actionContextClick(pointUnused) {\n    super.actionClick(this.sprite.position);\n  }\n\n  /**\n   * Test if occupied\n   * @returns {boolean}\n   */\n  isOccupied() {\n    return this.#occupants.size > 0;\n  }\n\n  /**\n   * Test if tile can be passed by the actor\n   * @param {Object} actor\n   * @returns {boolean}\n   */\n  isPassableByActor(actor) {\n    if (this.#role === TileRole.ENTRANCE || this.#role === TileRole.EXIT) {\n      return false;\n    }\n    if (this.obstacle) {\n      return false;\n    }\n    for (const occupant of this.#occupants.values()) {\n      if (occupant !== actor && !occupant.isPassableByActor(actor)) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  /**\n   * Test if tile can be occupied by the actor\n   * @param {Object} actor\n   * @returns {boolean}\n   */\n  canBeOccupiedByActor(actor) {\n    if (\n      (this.#role === TileRole.ENTRANCE || this.#role === TileRole.EXIT) &&\n      !actor.isHero()\n    ) {\n      return false;\n    }\n    if (this.obstacle) {\n      return false;\n    }\n    for (const occupant of this.#occupants.values()) {\n      if (occupant !== actor && !occupant.canShareLocationWithActor(actor)) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  /**\n   * Test if tile can be seen through by the actor\n   * @param {Object} actor\n   * @returns {boolean}\n   */\n  isSeeThrough(actorUnused) {\n    if (\n      this.obstacle ||\n      this.#role === TileRole.ENTRANCE ||\n      this.#role === TileRole.EXIT\n    ) {\n      return false;\n    }\n    return true;\n  }\n}\n\n/**\n * Tile map\n */\nexport class TileMap {\n  /** @type {CanvasRenderingContext2D} */\n  #context;\n  /** @type {Tile[]} */\n  #tiles;\n  #tilesX;\n  #tilesY;\n  #gridSize;\n  #width;\n  #height;\n  /** @type {module:utils/tileMaps/pathFinder~Routes} */\n  #movementRoutes;\n  /** @type {Point[]} */\n  #movementGridPoints;\n  /** @type {Sprite} */\n  #movementTileHighlighter;\n  /** @type {Sprite} */\n  #reachableDoorTileHighlighter;\n  /** @type {Tile[]} */\n  #reachableDoorTileGridPoints;\n  /** @type {Tile} */\n  #entranceTile;\n  /** @type {Tile} */\n  #exitTile;\n  /** @type {Point} */\n  #entryGridPointByDoor;\n  /** @type {Point} */\n  #exitGridPointByDoor;\n  /** @type {Tile[]} */\n  #randomGround;\n  /** @type {RayTracer} */\n  #heroRayTracer;\n  /** @type {Point[]} */\n  #interactTileGridPoints;\n  /** @type {Sprite} */\n  #interactTileHighlighter;\n  /** @type {Actor} */\n  #heroActor;\n\n  /**\n   * Create tile map from 2D matrix\n   * @param {CanvasRenderingContext2D} context\n   * @param {TilePlan} plan\n   * @param {number} gridSize - in world coordinates\n   */\n  constructor(context, plan, gridSize, heroActor) {\n    this.#heroActor = heroActor;\n    const matrix = plan.matrix;\n    this.#entryGridPointByDoor = plan.entryPointByDoor;\n    this.#exitGridPointByDoor = plan.exitPointByDoor;\n    this.#context = context;\n    this.#movementTileHighlighter = new Sprite({\n      renderer: new RectSpriteCanvasRenderer(context, {\n        width: gridSize,\n        height: gridSize,\n        fillStyle: Colours.MOVE_HIGHLIGHT_FILL,\n        strokeStyle: Colours.MOVE_HIGHLIGHT_STROKE,\n      }),\n    });\n    this.#reachableDoorTileHighlighter = new Sprite({\n      renderer: new RectSpriteCanvasRenderer(context, {\n        width: gridSize,\n        height: gridSize,\n        fillStyle: Colours.DOOR_HIGHLIGHT_FILL,\n        strokeStyle: 'green',\n      }),\n    });\n    this.#interactTileHighlighter = new Sprite({\n      renderer: new RectSpriteCanvasRenderer(context, {\n        width: gridSize,\n        height: gridSize,\n        fillStyle: Colours.INTERACT_HIGHLIGHT_FILL,\n        strokeStyle: Colours.INTERACT_HIGHLIGHT_STROKE,\n      }),\n    });\n    this.#gridSize = gridSize;\n    this.#tiles = [];\n    this.#tilesY = matrix.length;\n    this.#tilesX = matrix[0].length;\n    this.#width = gridSize * this.tilesX;\n    this.#height = gridSize * this.tilesY;\n    this.#randomGround = [];\n    matrix.forEach((row, rowIndex) => {\n      const tileRow = [];\n      this.#tiles.push(tileRow);\n      row.forEach((tileDefn, columnIndex) => {\n        if (tileDefn) {\n          const sprite = new Sprite({\n            renderer: new ImageSpriteCanvasRenderer(\n              context,\n              IMAGE_MANAGER.getSpriteBitmap(tileDefn.image)\n            ),\n          });\n          const gridPoint = new Point(columnIndex, rowIndex);\n          const worldPoint = this.gridPointToWorldPoint(gridPoint);\n          let tile = new Tile(sprite, {\n            obstacle: tileDefn.role === TileRole.OBSTACLE,\n            gridPoint: gridPoint,\n            worldPoint: worldPoint,\n            role: tileDefn.role,\n          });\n          if (tileDefn.onClick) {\n            tile.setOnClick((target, point) =>\n              this.#filterClick(target, point, tileDefn.onClick)\n            );\n          }\n          this.processTileRole(tile);\n          tileRow.push(tile);\n          sprite.position.x = columnIndex * this.#gridSize + this.#gridSize / 2;\n          sprite.position.y = rowIndex * this.#gridSize + this.#gridSize / 2;\n        } else {\n          tileRow.push(null);\n        }\n      });\n    });\n    if (!this.#entranceTile) {\n      LOG.error('No entrance has been set. Setting to the first ground tile');\n      this.#entranceTile = this.#randomGround[0];\n    }\n  }\n\n  /**\n   * Get tilemap dimensions in terms of number of tiles.\n   * @returns {module:utils/geometry~Dims2D}\n   */\n  getDimsInTiles() {\n    return { width: this.#tilesX, height: this.#tilesY };\n  }\n  /**\n   * Process a tile's specific role.\n   * @param {Tile} tile\n   */\n  processTileRole(tile) {\n    switch (tile.role) {\n      case TileRole.ENTRANCE:\n        if (this.#entranceTile) {\n          const gp = tile.gridPoint;\n          LOG.error(`Duplicate entrance found at (${gp.x}, ${gp.y}). Ignored.`);\n        } else {\n          this.#entranceTile = tile;\n        }\n        break;\n      case TileRole.EXIT:\n        if (this.#exitTile) {\n          const gp = tile.gridPoint;\n          LOG.error(`Duplicate exit found at (${gp.x}, ${gp.y}). Ignored.`);\n        } else {\n          this.#exitTile = tile;\n        }\n        break;\n      case TileRole.GROUND:\n        if (!tile.gridPoint.coincident(this.#entryGridPointByDoor)) {\n          this.#randomGround.push(tile);\n        }\n        break;\n    }\n  }\n\n  /**\n   * Update method to render tiles.\n   * @param {number} deltaSeconds - elapsed time.\n   */\n  update(deltaSeconds) {\n    this.#setRayTracer();\n    const visibleGridPoints = this.getVisibleGridPointRect();\n    for (\n      let row = visibleGridPoints.y;\n      row <= visibleGridPoints.y + visibleGridPoints.height;\n      row++\n    ) {\n      for (\n        let col = visibleGridPoints.x;\n        col <= visibleGridPoints.x + visibleGridPoints.width;\n        col++\n      ) {\n        if (this.#heroRayTracer?.isGridPointInRays(new Point(col, row))) {\n          const tile = this.#tiles[row][col];\n          tile?.sprite.update(deltaSeconds);\n        }\n      }\n    }\n    this.#highlightTiles(deltaSeconds);\n  }\n\n  /**\n   * Set up the ray tracer if not already set.\n   */\n  #setRayTracer() {\n    if (this.#heroActor) {\n      if (!this.#heroRayTracer) {\n        this.#heroRayTracer = new RayTracer(this, this.#heroActor);\n      }\n      const heroTile = this.getTileAtWorldPoint(this.#heroActor.position);\n      if (heroTile) {\n        const heroTileRole = heroTile.role;\n        if (\n          heroTileRole != TileRole.ENTRANCE &&\n          heroTileRole != TileRole.EXIT\n        ) {\n          this.#heroRayTracer.findReachedTiles();\n        }\n      }\n    }\n  }\n\n  /**\n   * Get the tilemap bounds as a rectangle in gridpoints.\n   * @returns {Rectangle}\n   */\n  getMapGridPointRect() {\n    return new Rectangle(0, 0, this.#tilesX, this.#tilesY);\n  }\n\n  /**\n   * Get the visible bounds as a rectangle in gridpoints.\n   * @returns {Rectangle}\n   */\n  getVisibleGridPointRect() {\n    const visibleBounds = SCREEN.getWorldInCanvasBounds();\n    const gridPointTL = this.worldPointToGrid(\n      new Point(visibleBounds.x, visibleBounds.y)\n    );\n    const gridPointBR = this.worldPointToGrid(\n      new Point(\n        visibleBounds.x + visibleBounds.width,\n        visibleBounds.y + visibleBounds.height\n      )\n    );\n    const minCol = Math.max(0, gridPointTL.x);\n    const maxCol = Math.min(this.#tilesX - 1, gridPointBR.x);\n    const minRow = Math.max(0, gridPointTL.y);\n    const maxRow = Math.min(this.#tilesY - 1, gridPointBR.y);\n    return new Rectangle(minCol, minRow, maxCol - minCol, maxRow - minRow);\n  }\n\n  /**\n   * Get the gridsize\n   * @returns {number}\n   */\n  getGridSize() {\n    return this.#gridSize;\n  }\n\n  /** Get world dimensions.\n   * @returns {module:utils/geometry~Dims2D}\n   */\n  getDimensions() {\n    return { width: this.#width, height: this.#height };\n  }\n\n  /**\n   * Get sprite at position.\n   * @param {Point} point - in world coordinates.\n   * @returns {Tile} null if no tile.\n   */\n  getTileAtWorldPoint(point) {\n    const gridPoint = this.worldPointToGrid(point);\n    return this.getTileAtGridPoint(gridPoint);\n  }\n\n  /**\n   * Get sprite at position.\n   * @param {Point} point - in grid coordinates.\n   * @returns {Tile} null if no tile.\n   */\n  getTileAtGridPoint(gridPoint) {\n    if (!gridPoint) {\n      return null;\n    }\n    const row = gridPoint.y;\n    const col = gridPoint.x;\n    if (col >= 0 && row >= 0 && col < this.#tilesX && row < this.#tilesY) {\n      return this.#tiles[row][col];\n    }\n    return null;\n  }\n\n  /**\n   * Convert world coordinate to mad grid reference.\n   * @param {Point} point\n   * @returns {Point}\n   */\n  worldPointToGrid(point) {\n    return new Point(\n      Math.floor(point.x / this.#gridSize),\n      Math.floor(point.y / this.#gridSize)\n    );\n  }\n\n  /**\n   * Get a world point aligned to the centre of a tile\n   * @param {Point} point\n   */\n  gridAlignedWorldPoint(point) {\n    const gridPoint = this.worldPointToGrid(point);\n    return this.gridPointToWorldPoint(gridPoint);\n  }\n\n  /** Convert a point in tile coordinates to world coordinates.\n   * @param {Point}\n   * @returns {Point}\n   */\n  gridPointToWorldPoint(point) {\n    const halfGrid = 0.5 * this.#gridSize;\n    return new Point(\n      point.x * this.#gridSize + halfGrid,\n      point.y * this.#gridSize + halfGrid\n    );\n  }\n\n  /** Get the world position of the entrance. The default is the first tile if there\n   * is no door\n   * @returns {Point}\n   */\n  getWorldPositionOfTileByEntry() {\n    return this.gridPointToWorldPoint(this.#entryGridPointByDoor);\n  }\n  /** Get the grid position of the door at index. If there are no doors, then\n   * the entrance is the first ground tile\n   * @returns {Point}\n   */\n  getGridPositionOfEntrance() {\n    return this.#entranceTile.gridPoint;\n  }\n\n  /**\n   * Set the highlighted routes.\n   * @param {*} routes\n   */\n  setMovementRoutes(routes) {\n    this.#movementRoutes = routes;\n    if (routes) {\n      this.#movementGridPoints = new Map();\n      this.#movementRoutes.forEach((gridPoints) =>\n        gridPoints.forEach((gridPoint) => {\n          this.#movementGridPoints.set(gridPoint, gridPoint);\n        })\n      );\n    } else {\n      this.#movementGridPoints = null;\n    }\n  }\n\n  /**\n   * Set interaction tiles\n   * @param {Actor[]} actors - actors where a reaction can take place.\n   */\n  setInteractActors(actors) {\n    this.#interactTileGridPoints = [];\n    actors?.forEach((actor) => {\n      if (actor.interaction.canReact()) {\n        this.#interactTileGridPoints.push(\n          this.worldPointToGrid(actor.position)\n        );\n      }\n    });\n  }\n\n  /**\n   * Recalculate the reachable doors.\n   */\n  calcReachableDoors(heroPosition) {\n    this.#reachableDoorTileGridPoints = [];\n    const surrounds = this.getSurroundingTiles(\n      this.worldPointToGrid(heroPosition)\n    );\n    [surrounds.above, surrounds.right, surrounds.below, surrounds.left].forEach(\n      (tile) => {\n        if (tile.gridPoint.coincident(this.#exitTile.gridPoint)) {\n          this.#reachableDoorTileGridPoints.push(tile.gridPoint);\n        } else if (tile.gridPoint.coincident(this.#entranceTile.gridPoint)) {\n          this.#reachableDoorTileGridPoints.push(tile.gridPoint);\n        }\n      }\n    );\n  }\n\n  /**\n   * Highlight routes marked by the highlighters. There are three possible highlights:\n   * movement, interaction and event tiles.\n   * @param {number} deltaSeconds\n   */\n  #highlightTiles(deltaSeconds) {\n    this.#highlightMovementTiles(deltaSeconds);\n    this.#highlightInteractTiles(deltaSeconds);\n    this.#highlightReachableDoorTiles(deltaSeconds);\n  }\n\n  /**\n   * Highlight movement routes.\n   * @param {number} deltaSeconds\n   */\n  #highlightMovementTiles(deltaSeconds) {\n    this.#movementGridPoints?.forEach((gridPoint) => {\n      this.#movementTileHighlighter.position =\n        this.gridPointToWorldPoint(gridPoint);\n      this.#movementTileHighlighter.update(deltaSeconds);\n    });\n  }\n\n  /**\n   * Highlight movement routes.\n   * @param {number} deltaSeconds\n   */\n  #highlightInteractTiles(deltaSeconds) {\n    this.#interactTileGridPoints?.forEach((gp) => {\n      this.#interactTileHighlighter.position = this.gridPointToWorldPoint(gp);\n      this.#interactTileHighlighter.update(deltaSeconds);\n    });\n  }\n\n  /**\n   * Highlight reachable door tiles.\n   * @param {number} deltaSeconds\n   */\n  #highlightReachableDoorTiles(deltaSeconds) {\n    this.#reachableDoorTileGridPoints?.forEach((gp) => {\n      this.#reachableDoorTileHighlighter.position =\n        this.gridPointToWorldPoint(gp);\n      this.#reachableDoorTileHighlighter.update(deltaSeconds);\n    });\n  }\n\n  /**\n   * Handle a tile click.\n   * To be actioned a tile must be in the highlightedRoutes\n   * @param {Sprite} target - the sprite that was clicked. This prevents the need\n   * to use 'this' which may not be correct in the context.\n   * @param {Point} point - the position in the world that was clicked\n   * @param {module:utils/sprites/sprite~SpriteClickHandler} clickHandler\n   */\n  #filterClick(target, point, clickHandler) {\n    const gridPoint = this.worldPointToGrid(point);\n    let occupant;\n    const occupants = target.getOccupants();\n    if (occupants.size > 0) {\n      occupant = occupants.values().next().value;\n    }\n\n    const movement = this.#movementRoutes?.containsGridPoint(gridPoint);\n    let interaction = false;\n    if (this.#interactTileGridPoints) {\n      for (const point of this.#interactTileGridPoints) {\n        if (point.isCoincident(gridPoint)) {\n          interaction = true;\n          break;\n        }\n      }\n    }\n    const isDeadProp = !occupant?.alive && occupant?.isProp();\n    if ((movement && interaction) || isDeadProp) {\n      clickHandler(target, point, {\n        filter: ClickEventFilter.MOVE_OR_INTERACT_TILE,\n        occupant: occupant,\n      });\n      return;\n    } else if (movement) {\n      clickHandler(target, point, {\n        filter: ClickEventFilter.MOVEMENT_TILE,\n        occupant: occupant,\n      });\n      return;\n    } else if (interaction) {\n      clickHandler(target, point, {\n        filter: ClickEventFilter.INTERACT_TILE,\n        occupant: occupant,\n      });\n      return;\n    }\n\n    if (this.#reachableDoorTileGridPoints) {\n      for (const gp of this.#reachableDoorTileGridPoints) {\n        if (gp.isCoincident(gridPoint)) {\n          clickHandler(target, point, {\n            filter: ClickEventFilter.INTERACT_TILE,\n          });\n          return;\n        }\n      }\n    }\n\n    const heroGridPoint = this.worldPointToGrid(this.#heroActor.position);\n    if (gridPoint.coincident(heroGridPoint)) {\n      clickHandler(target, point, {\n        occupant: this.#heroActor,\n        filter: ClickEventFilter.OCCUPIED_TILE,\n      });\n      return;\n    }\n\n    if (occupant) {\n      clickHandler(target, point, {\n        occupant: occupant,\n        filter: ClickEventFilter.OCCUPIED_TILE,\n      });\n    }\n    LOG.debug('Ignore click outside of highlighted area');\n  }\n\n  /**\n   * Get waypoints to reach destination grid point\n   * @param {Point} worldPoint - destination\n   * @returns {Point[]} null if no route currently found.\n   */\n  getWaypointsToWorldPoint(worldPoint) {\n    const destination = this.worldPointToGrid(worldPoint);\n    return this.#movementRoutes?.getWaypointsAsWorldPoints(destination);\n  }\n\n  /**\n   * Get a random unoccupied ground tile.\n   * @returns {Tile} null if no free ground tile.\n   */\n  getRandomFreeGroundTile() {\n    randomise(this.#randomGround);\n    for (const tile of this.#randomGround) {\n      if (!tile.isOccupied()) {\n        return tile;\n      }\n    }\n    return null;\n  }\n\n  /**\n   * Test if point is passable.\n   * @param {Point} gridPoint - row and col coordinates.\n   * @param {module:players/actors~Actor} actor - actor trying to pass\n   * @returns {boolean}\n   */\n  isGridPointPassableByActor(gridPoint, actor) {\n    const tile = this.getTileAtGridPoint(gridPoint);\n    if (!tile) {\n      return false;\n    }\n\n    return tile.isPassableByActor(actor);\n  }\n\n  /**\n   * Test if tile can be occupied by the actor\n   * @param {Point} gridPoint - row and col coordinates.\n   * @param {module:players/actors~Actor} actor - actor trying to occupy location\n   * @returns {boolean}\n   */\n  canGridPointBeOccupiedByActor(gridPoint, actor) {\n    const tile = this.getTileAtGridPoint(gridPoint);\n    if (!tile) {\n      return false;\n    }\n    return tile.canBeOccupiedByActor(actor);\n  }\n\n  /**\n   * Is the grid point visible by the hero.\n   * @param {Point} gridPoint\n   * @returns {boolean}\n   */\n  canHeroSeeGridPoint(gridPoint) {\n    return this.#heroRayTracer?.isGridPointInRays(gridPoint) ?? true;\n  }\n\n  /**\n   * Test if point can be seen through.\n   * @param {Point} gridPoint - row and col coordinates.\n   * @param {module:players/actors~Actor} actor - actor trying to see\n   * @returns {boolean}\n   */\n  isSeeThrough(gridPoint, actor) {\n    const tile = this.getTileAtGridPoint(gridPoint);\n    if (!tile) {\n      return true;\n    }\n\n    return tile.isSeeThrough(actor);\n  }\n\n  /**\n   * Get the tiles surrounding a reference.\n   * @param {Point} gridPoint\n   * @returns {module:utils/arrays/arrayManip~Surrounds}\n   */\n  getSurroundingTiles(gridPoint) {\n    return getSurrounds(this.#tiles, gridPoint.y, gridPoint.x);\n  }\n\n  /**\n   * Get tiles radiating up and down.\n   * @param {Point} gridPoint\n   * @param {number} [distance = 1] - in tiles.\n   * @returns {Tiles[]}\n   */\n  getRadiatingUpAndDown(gridPoint, distance = 1) {\n    return radiateUpAndDown(this.#tiles, {\n      rowIndex: gridPoint.y,\n      columnIndex: gridPoint.x,\n      distance: distance,\n      filter: (tile) => tile.role === TileRole.GROUND,\n    });\n  }\n\n  /**\n   * Removed occupant from the list of occupants\n   * of the tile at the grid point.\n   * @param {Object} occupant\n   * @param {Point} gridPoint\n   */\n  deleteOccupancyOfGridPoint(occupant, gridPoint) {\n    this.getTileAtGridPoint(gridPoint)?.deleteOccupant(occupant);\n  }\n\n  /**\n   * Set the object's tile occupancy. It is removed from the list of occupants\n   * of the tile at the previous point and added to those of the next.\n   * @param {Object} occupant\n   * @param {Point} oldGridPoint\n   * @param {Point} newGridPoint\n   */\n  moveTileOccupancyGridPoint(occupant, oldGridPoint, newGridPoint) {\n    if (newGridPoint !== oldGridPoint) {\n      this.getTileAtGridPoint(oldGridPoint)?.deleteOccupant(occupant);\n      this.getTileAtGridPoint(newGridPoint)?.addOccupant(occupant);\n    }\n  }\n\n  /**\n   * Get coincident actors.\n   * @param {Actor} actor\n   * @returns {Actor[]}\n   */\n  getCoincidentActors(actor) {\n    const tile = this.getTileAtWorldPoint(actor.position);\n    return tile.getOccupants();\n  }\n  /**\n   * Get all the participants around an actor. Diagonals are not included in\n   * potential participants.\n   * @param {Actor} actor\n   * @returns {Actor[]}\n   */\n  getParticipants(actor) {\n    const participants = [];\n    const surrounds = this.getSurroundingTiles(\n      this.worldPointToGrid(actor.position)\n    );\n    const tiles = [\n      surrounds.above,\n      surrounds.right,\n      surrounds.below,\n      surrounds.left,\n    ];\n    tiles.forEach((tile) => {\n      let tileOccupants = tile?.getOccupants();\n      tileOccupants?.forEach((occupant) => {\n        participants.push(occupant);\n      });\n    });\n    return participants;\n  }\n}\n","/**\n * @file Interactions with the ui\n *\n * @module utils/ui/interactions\n */\n/**\n * License {@link https://opensource.org/license/mit/|MIT}\n *\n * Copyright 2024 Steve Butler\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the “Software”), to deal in\n * the Software without restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n * Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */\n\n/**\n * @typedef {function} UiClickCallback\n * @param {Object} target - initial object that triggered the handler\n * @param {module:utils/geometry~Point} point - the position that was clicked in world coordinates\n */\n\n/**\n * BAse for all UiClickHandlers\n */\nexport class UiClickHandler {\n  /** @type {UiClickCallback} */\n  #onClick;\n  /** @type {UiClickCallback} */\n  #onContextClick;\n  /** @type {UiClickCallback} */\n  #onPointerDown;\n  /** @type {UiClickCallback} */\n  #onPointerUp;\n\n  /** Set click handler. Note that this does not add a listener for the event.\n   * @param {UiClickCallback} handler\n   */\n  setOnClick(handler) {\n    this.#onClick = handler;\n  }\n\n  /** Set on context Click handler.\n   * @param {UiClickCallback} handler\n   */\n  setOnContextClick(handler) {\n    this.#onContextClick = handler;\n  }\n\n  /** Set pointer down handler. Note that this does not add a listener for the event.\n   * @param {UiClickCallback} handler\n   */\n  setOnPointerDown(handler) {\n    this.#onPointerDown = handler;\n  }\n\n  /** Set pointer up handler. Note that this does not add a listener for the event.\n   * @param {UiClickCallback} handler\n   */\n  setOnPointerUp(handler) {\n    this.#onPointerUp = handler;\n  }\n  /**\n   * Handle click\n   * @param {module:utils/geometry~Point} point\n   */\n  actionClick(point) {\n    this.#onClick?.(this, point);\n  }\n\n  /**\n   * Handle context click\n   * @param {module:utils/geometry~Point} point\n   */\n  actionContextClick(point) {\n    this.#onContextClick?.(this, point);\n  }\n\n  /**\n   * Handle pointer down\n   * @param {module:utils/geometry~Point} point\n   */\n  actionPointerDown(point) {\n    this.#onPointerDown?.(this, point);\n  }\n\n  /**\n   * Handle pointer up\n   * @param {module:utils/geometry~Point} point\n   */\n  actionPointerUp(point) {\n    this.#onPointerUp?.(this, point);\n  }\n}\n","/**\n * @file Path finders within a tile map\n *\n * @module utils/tileMaps/pathFinder\n */\n/**\n * License {@link https://opensource.org/license/mit/|MIT}\n *\n * Copyright 2024 Steve Butler\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the “Software”), to deal in\n * the Software without restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n * Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */\n\nimport { Point } from '../geometry.js';\nimport * as maths from '../maths.js';\n\n/**\n * Map of located routes.\n * Note that all points are grid references NOT WORLD POINTS.\n */\nexport class Routes {\n  /** @type {Map<string, Point[]>} */\n  #routes;\n  /** @type {module:utils/tileMaps/tileMap~TileMap} */\n  #tileMap;\n\n  /**\n   * Create routes.\n   * @param {module:utils/tileMaps/tileMap~TileMap} tileMap\n   */\n  constructor(tileMap) {\n    this.#tileMap = tileMap;\n    this.#routes = new Map();\n  }\n\n  /**\n   * Set route to reach coordinates\n   * @param {Point[]} route\n   * @param {*} x\n   * @param {*} y\n   */\n  setRouteToCoords(route, x, y) {\n    this.#routes.set(this.coordsToKey(x, y), route);\n  }\n\n  /**\n   * Get route to reach coordinates\n   * @param {*} x\n   * @param {*} y\n   * @returns {Point[]} route}\n   */\n  getRouteToCoords(x, y) {\n    return this.#routes.get(this.coordsToKey(x, y));\n  }\n\n  /** Test if routes has route to coords.\n   * @param {number} x - grid position\n   * @param {number} y - grid position\n   * @returns {boolean}\n   */\n  hasRouteToCoords(x, y) {\n    return this.#routes.has(this.coordsToKey(x, y));\n  }\n  /**\n   * Create a key for the routes map from a row and column.\n   * @param {number} x\n   * @param {number} y\n   * @returns {string}\n   */\n  coordsToKey(x, y) {\n    return `${x}|${y}`;\n  }\n\n  /**\n   * Convert a map key to a grid reference.\n   * @param {string} key\n   * @returns {Point} Point giving the tile map grid reference.\n   */\n  keyToGridPoint(key) {\n    const reference = key.split('|');\n    return new Point(parseInt(reference[0]), parseInt(reference[1]));\n  }\n\n  /**\n   * Get the entries\n   * @returns {Iterator}\n   */\n  forEach(callback) {\n    this.#routes.forEach((value, key, map) => callback(value, key, map));\n  }\n\n  /**\n   * Check if any routes contains the coordinates\n   * @param {Point} point\n   * @returns {boolean}\n   */\n  containsGridPoint(point) {\n    return this.#routes.has(this.coordsToKey(point.x, point.y));\n  }\n\n  /**\n   * Get wayPoints to get to destination of x, y. The starting point is stripped\n   * off. Points are returned as grid references\n   * @param {Point} destination\n   * @returns {Point[]} array of points to reach grid reference x, y. Null if no route.\n   */\n  getWaypointsAsGridPoints(destination) {\n    const points = this.getRouteToCoords(destination.x, destination.y);\n    if (points && points.length > 1) {\n      return points.slice(1);\n    } else {\n      return null;\n    }\n  }\n\n  /**\n   * Get wayPoints to get to destination of x, y. The starting point is stripped\n   * off.\n   * @param {Point} destination\n   * @returns {Point[]} array of points to reach grid reference x, y\n   */\n  getWaypointsAsWorldPoints(destination) {\n    const waypoints = this.getWaypointsAsGridPoints(destination);\n    if (waypoints) {\n      return waypoints.map((gridPoint) =>\n        this.#tileMap.gridPointToWorldPoint(gridPoint)\n      );\n    } else {\n      return waypoints;\n    }\n  }\n}\n/**\n * Encapsulation of route finder for finding paths through routes.\n */\nexport class RouteFinder {\n  /** Actor trying to find routes. @type {module:players/actors~Actor} */\n  actor;\n  /** @type {Route[]} */\n  #routes;\n  /** @type {module:utils/tileMaps/tileMap~TileMap} */\n  #tileMap;\n  /** @type {Point} */\n  #startPoint;\n\n  /** Create the route finder.\n   * @param {module:utils/tileMaps/tileMap~TileMap} tileMap\n   * @param {module:players/actors~Actor} actor\n   */\n  constructor(tileMap, actor) {\n    this.#tileMap = tileMap;\n    this.actor = actor;\n  }\n  /**\n   * Find a route to the destination gridPoint. Note that it tries to find a route\n   * adjacent to the target grid point, not actually on the grid point. The resulting\n   * route is dumb, in that it does not try all options to maximise movement.\n   * @param {Point} startingGridPoint - starting point\n   * @param {Point} targetGridPoint - starting point\n   * @param {*} maxMove - maximum number of moves allowed.\n   * @returns {Map<string, Point[]>} null if no path available or necessary.\n   */\n  getDumbRouteNextTo(startingGridPoint, targetGridPoint, maxMove) {\n    let destination = this.#getAdjacentTarget(\n      startingGridPoint,\n      targetGridPoint\n    );\n    if (destination.coincident(startingGridPoint)) {\n      return [];\n    }\n    if (!this.#tileMap.canGridPointBeOccupiedByActor(destination, this.actor)) {\n      destination = this.#rotateGridPointAbout(destination, targetGridPoint);\n    }\n    let path = [];\n    let dX = Math.sign(destination.x - startingGridPoint.x);\n    let dY = Math.sign(destination.y - startingGridPoint.y);\n    let waypoint = Point.copy(startingGridPoint);\n    let movingX = Math.random() < 0.5;\n    let consecutiveFails = 0;\n    while (maxMove > 0) {\n      let nextPoint = Point.copy(waypoint);\n      let moved = false;\n      if (movingX && dX !== 0 && waypoint.x != destination.x) {\n        nextPoint.x += dX;\n        moved = true;\n      } else if (!movingX && dY !== 0 && waypoint.y != destination.y) {\n        nextPoint.y += dY;\n        moved = true;\n      }\n      moved =\n        moved &&\n        this.#tileMap.canGridPointBeOccupiedByActor(nextPoint, this.actor);\n\n      if (moved) {\n        consecutiveFails = 0;\n        waypoint = nextPoint;\n        maxMove--;\n      } else {\n        if (++consecutiveFails >= 2) {\n          break;\n        }\n        if (!waypoint.coincident(startingGridPoint)) {\n          path.push(this.#tileMap.gridPointToWorldPoint(waypoint));\n        }\n        startingGridPoint = waypoint;\n        movingX = !movingX; //flip axi\n      }\n    }\n    if (!waypoint.coincident(startingGridPoint)) {\n      path.push(this.#tileMap.gridPointToWorldPoint(waypoint));\n    }\n\n    return path;\n  }\n\n  /**\n   * Get all available routes as a Map of paths.\n   * @param {Point} startingGridPoint - starting point\n   * @param {*} maxMove - maximum number of moves allowed.\n   * @returns {Map<string, Point[]>}\n   */\n  getAllRoutesFrom(startingGridPoint, maxMove) {\n    this.#routes = new Routes(this.#tileMap);\n    this.#startPoint = startingGridPoint;\n    this.#findRoutes(startingGridPoint.x, startingGridPoint.y, maxMove, null);\n    return this.#routes;\n  }\n\n  /**\n   * @param {number} x - tile x index of current tile\n   * @param {number} y - tile y index of current tile\n   * @param {number} maxTiles - the maximum number of tiles that can be moved.\n   * @param {Point[]} [routePoints] - array of points that\n   * represent current path taken to get here. If null, this is the start of the\n   * route.\n   */\n  #findRoutes(x, y, movesLeft, routePoints) {\n    if (!routePoints) {\n      /* Initialise route. Don't check if it's clear as it may well be occupied\n       * by the sprite seeking a route.\n       */\n      routePoints = [new Point(x, y)];\n    } else {\n      if (x === this.#startPoint.x && y === this.#startPoint.y) {\n        return;\n      } else if (!this.#isTilePassable(x, y)) {\n        return;\n      }\n      const existingRoute = this.#routes.getRouteToCoords(x, y);\n      if (!existingRoute || routePoints.length < existingRoute.length - 1) {\n        routePoints.push(new Point(x, y)); // we have a route to this point\n        if (this.#canTileBeOccupied(x, y)) {\n          // only save route if we are actually allowed to occupy its end point.\n          this.#routes.setRouteToCoords(routePoints, x, y);\n        }\n        movesLeft--;\n      } else {\n        return;\n      }\n    }\n\n    if (movesLeft > 0) {\n      // try all 4 directions\n      this.#findRoutes(x, y - 1, movesLeft, [...routePoints]); // up\n      this.#findRoutes(x + 1, y, movesLeft, [...routePoints]); // right\n      this.#findRoutes(x, y + 1, movesLeft, [...routePoints]); // down\n      this.#findRoutes(x - 1, y, movesLeft, [...routePoints]); // left\n    }\n  }\n\n  /** Check if tile is passable.\n   * @param {number} x\n   * @param {number} y\n   * @returns {boolean}\n   *\n   */\n  #isTilePassable(x, y) {\n    return this.#tileMap.isGridPointPassableByActor(\n      new Point(x, y),\n      this.actor\n    );\n  }\n\n  /** Check if tile can be occupied.\n   * @param {number} x\n   * @param {number} y\n   * @returns {boolean}\n   *\n   */\n  #canTileBeOccupied(x, y) {\n    return this.#tileMap.canGridPointBeOccupiedByActor(\n      new Point(x, y),\n      this.actor\n    );\n  }\n\n  #getAdjacentTarget(current, target) {\n    const deltaX = target.x - current.x;\n    const deltaY = target.y - current.y;\n    let adjX = target.x;\n    let adjY = target.y;\n    if (Math.abs(deltaX) > Math.abs(deltaY)) {\n      adjX -= Math.sign(deltaX);\n    } else {\n      adjY -= Math.sign(deltaY);\n    }\n    return new Point(adjX, adjY);\n  }\n\n  /**\n   * Rotate a grid point about a target grid point. This does not rotate to\n   * diagonals.\n   */\n  #rotateGridPointAbout(gridPoint, originPoint) {\n    if (gridPoint.x === originPoint.x && gridPoint.y < originPoint.y) {\n      return new Point(gridPoint.x + 1, gridPoint.y + 1);\n    } else if (gridPoint.x > originPoint.x && gridPoint.y === originPoint.y) {\n      return new Point(gridPoint.x - 1, gridPoint.y + 1);\n    }\n    if (gridPoint.x === originPoint.x && gridPoint.y > originPoint.y) {\n      return new Point(gridPoint.x - 1, gridPoint.y - 1);\n    }\n    if (gridPoint.x < originPoint.x && gridPoint.y === originPoint.y) {\n      return new Point(gridPoint.x + 1, gridPoint.y - 1);\n    }\n    return gridPoint;\n  }\n}\n\n/**\n * Ray tracer from a starting point\n */\nexport class RayTracer {\n  /** Actor tracing rays. @type {module:players/actors~Actor} */\n  #actor;\n  /** Start point of the ray. @type {Point} */\n  #rayStartPoint;\n  /** @type {module:utils/tileMaps/tileMap~TileMap} */\n  #tileMap;\n  /** @type {Map<string, Point>} */\n  #reachedPoints;\n  /** @type {Point}   */\n  #lastStartPoint;\n  /** @type {Rectangle} */\n  #bounds;\n  /** @type {Rectangle} */\n  #lastBounds;\n\n  /** Create the ray tracer.\n   * @param {module:utils/tileMaps/tileMap~TileMap} tileMap\n   * @param {module:players/actors~Actor} actor\n   */\n  constructor(tileMap, actor) {\n    this.#tileMap = tileMap;\n    this.#actor = actor;\n  }\n\n  /**\n   * Find all the tiles that are reached from the actor.\n   * @returns {Map<Point>} grid points of reached tiles.\n   */\n  findReachedTiles() {\n    this.#rayStartPoint = this.#tileMap.worldPointToGrid(this.#actor.position);\n    // this.#bounds = this.#tileMap.getVisibleGridPointRect();\n    this.#bounds = this.#tileMap.getMapGridPointRect();\n    if (\n      this.#lastStartPoint &&\n      this.#lastStartPoint.coincident(this.#rayStartPoint) &&\n      this.#bounds &&\n      this.#bounds.equals(this.#lastBounds)\n    ) {\n      return this.#reachedPoints;\n    }\n\n    this.#reachedPoints = new Map();\n    this.#reachedPoints.set(\n      this.#rayStartPoint.toString(),\n      this.#rayStartPoint\n    );\n    this.#getRayEnds().forEach((endPoint) => {\n      this.#traceRayToEnd(endPoint);\n    });\n    this.#lastStartPoint = this.#rayStartPoint;\n    this.#lastBounds = this.#bounds;\n    return this.#reachedPoints;\n  }\n\n  /**\n   * Test if grid point in rays.\n   * @param {Point} gridPoint\n   * @returns {boolean}\n   */\n  isGridPointInRays(gridPoint) {\n    return this.#reachedPoints\n      ? this.#reachedPoints.has(gridPoint.toString())\n      : false;\n  }\n\n  /**\n   * Get the end point of the rays.\n   * @returns {Point[]} array of the end grid points for each ray.\n   */\n  #getRayEnds() {\n    const rayEnds = [];\n    for (\n      let col = this.#bounds.x;\n      col <= this.#bounds.x + this.#bounds.width;\n      col++\n    ) {\n      rayEnds.push(new Point(col, this.#bounds.y));\n      rayEnds.push(new Point(col, this.#bounds.y + this.#bounds.height));\n    }\n\n    for (\n      let row = this.#bounds.y + 1;\n      row <= this.#bounds.y + this.#bounds.height - 1;\n      row++\n    ) {\n      rayEnds.push(new Point(this.#bounds.x, row));\n      rayEnds.push(new Point(this.#bounds.x + this.#bounds.width, row));\n    }\n    return rayEnds;\n  }\n\n  /**\n   * Trace the ray to its end. Note that calculations are done in cartesian coordinates\n   * and so Y values need to be negated during calculations.\n   * @param {Point} endPoint\n   */\n  #traceRayToEnd(endPoint) {\n    let dx;\n    let dy;\n    let steps;\n    const angle = this.#rayStartPoint.getScreenAngleTo(endPoint);\n    const compassDirection = maths.angleToEightPointCompass(angle);\n    if (\n      Math.abs(endPoint.x - this.#rayStartPoint.x) >=\n      Math.abs(endPoint.y - this.#rayStartPoint.y)\n    ) {\n      dx = Math.sign(endPoint.x - this.#rayStartPoint.x);\n      steps = Math.abs(endPoint.x - this.#rayStartPoint.x);\n      dy = steps < 1 ? 0 : (endPoint.y - this.#rayStartPoint.y) / steps;\n    } else {\n      dy = Math.sign(endPoint.y - this.#rayStartPoint.y);\n      steps = Math.abs(endPoint.y - this.#rayStartPoint.y);\n      dx = steps < 1 ? 0 : (endPoint.x - this.#rayStartPoint.x) / steps;\n    }\n    let x = this.#rayStartPoint.x;\n    let y = this.#rayStartPoint.y;\n\n    let firstPoint = true;\n    while (steps >= 0) {\n      const gridPoint = new Point(Math.round(x), Math.round(y));\n      if (firstPoint || this.#tileMap.isSeeThrough(gridPoint, this.#actor)) {\n        this.#markReachedPoint(gridPoint, compassDirection);\n      } else {\n        break; // ray ends.\n      }\n      firstPoint = false;\n      x += dx;\n      y += dy;\n      steps--;\n    }\n  }\n\n  /**\n   * Mark the point as reached. Note that surrounding obstacle tiles need to be\n   * shown as well otherwise wall will not appear.\n   * @param {Point} point\n   * @param {number} compassDir - eight point compass direction of ray\n   */\n  #markReachedPoint(point, compassDir) {\n    this.#reachedPoints.set(point.toString(), point);\n    switch (compassDir) {\n      case maths.CompassEightPoint.N:\n        this.#markReachedIfNotSeeThrough(new Point(point.x - 1, point.y - 1));\n        this.#markReachedIfNotSeeThrough(new Point(point.x, point.y - 1));\n        this.#markReachedIfNotSeeThrough(new Point(point.x + 1, point.y - 1));\n        break;\n      case maths.CompassEightPoint.NE:\n        this.#markReachedIfNotSeeThrough(new Point(point.x, point.y - 1));\n        this.#markReachedIfNotSeeThrough(new Point(point.x + 1, point.y - 1));\n        this.#markReachedIfNotSeeThrough(new Point(point.x + 1, point.y));\n        break;\n      case maths.CompassEightPoint.E:\n        this.#markReachedIfNotSeeThrough(new Point(point.x + 1, point.y - 1));\n        this.#markReachedIfNotSeeThrough(new Point(point.x + 1, point.y));\n        this.#markReachedIfNotSeeThrough(new Point(point.x + 1, point.y + 1));\n        break;\n      case maths.CompassEightPoint.SE:\n        this.#markReachedIfNotSeeThrough(new Point(point.x + 1, point.y));\n        this.#markReachedIfNotSeeThrough(new Point(point.x + 1, point.y + 1));\n        this.#markReachedIfNotSeeThrough(new Point(point.x, point.y + 1));\n        break;\n      case maths.CompassEightPoint.S:\n        this.#markReachedIfNotSeeThrough(new Point(point.x - 1, point.y + 1));\n        this.#markReachedIfNotSeeThrough(new Point(point.x, point.y + 1));\n        this.#markReachedIfNotSeeThrough(new Point(point.x + 1, point.y + 1));\n        break;\n      case maths.CompassEightPoint.SW:\n        this.#markReachedIfNotSeeThrough(new Point(point.x - 1, point.y));\n        this.#markReachedIfNotSeeThrough(new Point(point.x - 1, point.y + 1));\n        this.#markReachedIfNotSeeThrough(new Point(point.x, point.y + 1));\n        break;\n      case maths.CompassEightPoint.W:\n        this.#markReachedIfNotSeeThrough(new Point(point.x - 1, point.y - 1));\n        this.#markReachedIfNotSeeThrough(new Point(point.x - 1, point.y));\n        this.#markReachedIfNotSeeThrough(new Point(point.x - 1, point.y + 1));\n        break;\n      case maths.CompassEightPoint.NW:\n        this.#markReachedIfNotSeeThrough(new Point(point.x - 1, point.y));\n        this.#markReachedIfNotSeeThrough(new Point(point.x - 1, point.y - 1));\n        this.#markReachedIfNotSeeThrough(new Point(point.x, point.y - 1));\n        break;\n    }\n  }\n  /**\n   * Mark a tile as Reached if not see through\n   * @param {Point} point\n   */\n  #markReachedIfNotSeeThrough(point) {\n    if (!this.#tileMap.isSeeThrough(point)) {\n      this.#reachedPoints.set(point.toString(), point);\n    }\n  }\n}\n","/**\n * @file Colours used in the game.\n *\n * @module constants/colours\n */\n/**\n * License {@link https://opensource.org/license/mit/|MIT}\n *\n * Copyright 2024 Steve Butler (henspace.com).\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the “Software”), to deal in\n * the Software without restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n * Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */\n\n/**\n * Colours used in the game.\n * @enum {string}\n */\nexport const Colours = {\n  DOOR_HIGHLIGHT_FILL: 'rgba(0, 255, 0, 0.2)',\n  DOOR_HIGHLIGHT_STROKE: 'green',\n  HP_GAUGE: 'rgba(204, 51, 0, 0.4)',\n  HP_TRANSIENT_TEXT_HERO: 'white',\n  HP_TRANSIENT_TEXT_ENEMY: 'black',\n  INTERACT_HIGHLIGHT_FILL: 'transparent',\n  INTERACT_HIGHLIGHT_STROKE: 'black',\n  MORALE_GAUGE: 'rgba(0, 0, 255, 0.4)',\n\n  MOVE_HIGHLIGHT_FILL: 'rgba(255, 255, 255, 0.2)',\n  MOVE_HIGHLIGHT_STROKE: 'white',\n};\n","/**\n * @file Manage the game turns. The turnManager is a state machine and implemented\n * as a singleton.\n *\n * @module gameManagement/turnManager\n */\n/**\n * License {@link https://opensource.org/license/mit/|MIT}\n *\n * Copyright 2024 Steve Butler\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the “Software”), to deal in\n * the Software without restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n * Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */\nimport { RouteFinder } from '../utils/tileMaps/pathFinder.js';\nimport { PathFollower } from '../utils/sprites/movers.js';\nimport { ClickEventFilter } from '../utils/tileMaps/tileMap.js';\n\nimport WORLD from '../utils/game/world.js';\n\nimport UI from '../utils/dom/ui.js';\nimport SCENE_MANAGER from './sceneManager.js';\n\nimport { addFadingText } from '../utils/effects/transient.js';\nimport { pause } from '../utils/timers.js';\nimport { Point, Position, Velocity } from '../utils/geometry.js';\nimport LOG from '../utils/logging.js';\nimport * as maths from '../utils/maths.js';\nimport { showMainMenu } from '../dialogs/mainMenu.js';\nimport { MoveType } from '../players/actors.js';\nimport * as actorDialogs from '../dialogs/actorDialogs.js';\nimport { i18n } from '../utils/messageManager.js';\nimport * as dice from '../utils/dice.js';\nimport { buildActor } from '../dnd/almanacs/actorBuilder.js';\nimport { restoreGameState, saveGameState } from './gameSaver.js';\nimport GAME from './game.js';\n\n/**\n * Factor that is multiplied by the maxMovesPerTurn property of an actor to determine\n * if it will bother trying to reach the hero.\n */\nconst TOO_MANY_TURNS_TO_REACH = 1.5;\n/**\n * Max number of tiles that the hero can move for it to be allowed as disengagement.\n */\nconst MAX_TILES_FOR_DISENGAGEMENT = 2;\n/**\n * Enumeration of supported events\n * @enum {number}\n */\nconst EventId = {\n  MAIN_MENU: 0,\n  CLICKED_FREE_GROUND: 1,\n  CLICKED_ENTRANCE: 2,\n  CLICKED_EXIT: 3,\n};\n\n/** Should the game be saved and restored @type {boolean} */\nlet persistentGame = true;\n\n/**\n * Class that allows a simulated movement of an actor. The movement using\n * the route finder takes place immediately, so that the effect of the actor's\n * final position can be used to affect other actors without waiting for the normal\n * duration of the move. The actual motion can then be actioned by a subsequent call to reenact.\n *\n */\nclass ReplayableActorMover {\n  /** @type {Actor} */\n  #actor;\n  /** @type {AbstractModifier} */\n  #modifier;\n  /** @type {Position} */\n  #originalPosition;\n  /** @type {TileMap} */\n  #tileMap;\n  /** @type {RouteFinder} */\n  #routeFinder;\n  /** @type {boolean} */\n  #heroDisengaging;\n\n  /**\n   *\n   * @param {Actor} actor\n   * @param {TileMap} tileMap\n   * @param {RouteFinder} routeFinder\n   * @param {boolean} heroDisengaging\n   */\n  constructor(actor, tileMap, routeFinder, heroDisengaging) {\n    this.#actor = actor;\n    this.#tileMap = tileMap;\n    this.#routeFinder = routeFinder;\n    this.#heroDisengaging = heroDisengaging;\n  }\n\n  /**\n   * Get a target grid position based on actor type\n   * @param {Point} actorGridPos\n   * @returns {Point}\n   */\n  #getTargetGridPoint(actorGridPos) {\n    if (this.#actor.moveType === MoveType.HUNT) {\n      if (this.#heroDisengaging) {\n        return actorGridPos; // frozen\n      } else {\n        const heroGridPos = this.#tileMap.worldPointToGrid(heroActor.position);\n        const orthoSeparation =\n          actorGridPos.getOrthoSeparation(heroGridPos) - 1;\n        const maxHuntSeparation =\n          this.#actor.maxTilesPerMove * TOO_MANY_TURNS_TO_REACH;\n        if (orthoSeparation <= maxHuntSeparation) {\n          return this.#tileMap.worldPointToGrid(heroActor.position);\n        }\n      }\n    }\n    // everything else falls back to random walk.\n    return this.#getRandomGridPosition(\n      actorGridPos,\n      this.#actor.maxTilesPerMove\n    );\n  }\n  /**\n   * Move actor to new position using the route finder. The move takes place instantly\n   * but can be replayed using the replay method.\n   */\n  moveInstantly() {\n    this.#originalPosition = Position.copy(this.#actor.position);\n    const actorGridPos = this.#tileMap.worldPointToGrid(this.#actor.position);\n    const targetGridPos = this.#getTargetGridPoint(actorGridPos);\n\n    if (\n      !targetGridPos.coincident(actorGridPos) &&\n      this.#tileMap.canHeroSeeGridPoint(actorGridPos)\n    ) {\n      this.#routeFinder.actor = this.#actor;\n      let waypoints = this.#routeFinder.getDumbRouteNextTo(\n        actorGridPos,\n        targetGridPos,\n        this.#actor.maxTilesPerMove\n      );\n      if (waypoints.length > 0) {\n        this.#modifier = new PathFollower(\n          { path: waypoints, speed: 100 },\n          this.#actor.sprite.modifier\n        );\n        this.#setActorsPosition(waypoints[waypoints.length - 1]);\n      }\n    }\n  }\n\n  /**\n   * Get a random target point.\n   * @param {Point} currentGrid\n   * @param {number} maxDistance - max movement in any direction\n   * @returns {Point}\n   */\n  #getRandomGridPosition(currentGrid, maxDistance) {\n    const x = maths.getRandomIntInclusive(\n      currentGrid.x - maxDistance,\n      currentGrid.x + maxDistance\n    );\n    const y = maths.getRandomIntInclusive(\n      currentGrid.y - maxDistance,\n      currentGrid.y + maxDistance\n    );\n    const dims = this.#tileMap.getDimsInTiles();\n    return new Point(\n      maths.clip(x, 0, dims.width - 1),\n      maths.clip(y, 0, dims.height - 1)\n    );\n  }\n\n  /**\n   * Set the actors position, updating the tile map occupancy as required.\n   * @param {Position} position\n   */\n  #setActorsPosition(position) {\n    const oldGridPoint = this.#tileMap.worldPointToGrid(this.#actor.position);\n    this.#actor.position = position;\n    const newGridPoint = this.#tileMap.worldPointToGrid(this.#actor.position);\n    this.#tileMap.moveTileOccupancyGridPoint(\n      this.#actor,\n      oldGridPoint,\n      newGridPoint\n    );\n  }\n  /**\n   * Restore the actor's original position.\n   */\n  #restorePosition() {\n    this.#setActorsPosition(this.#originalPosition);\n  }\n\n  /**\n   * Undertake the move defined by the modifier.\n   * @returns {Promise} fulfils to undefined.\n   */\n  replay() {\n    this.#restorePosition();\n    this.#cloneIfOrganic();\n    if (this.#modifier) {\n      return this.#modifier.applyAsTransientToSprite(this.#actor.sprite);\n    }\n    return Promise.resolve();\n  }\n\n  /**\n   * Clone the actor if currently spawning.\n   */\n  #cloneIfOrganic() {\n    if (this.#actor.isOrganic()) {\n      const clonedActor = buildActor(this.#actor.almanacEntry);\n      clonedActor.position = this.#originalPosition;\n      clonedActor.maxTilesPerMove = 0;\n      WORLD.addActor(clonedActor);\n    }\n  }\n}\n\n/**\n * Class used to handle multiple ReplayableActorMovers.\n */\nclass MovementReplayer {\n  /** @type {TileMap} */\n  #tileMap;\n  /** @type {RouteFinder} */\n  #routeFinder;\n  /** @type {ReplayableActorMover[]} */\n  #movers;\n  /** @type {boolean} */\n  #heroDisengaging;\n  /**\n   *\n   * @param {TileMap} tileMap\n   * @param {RouteFinder} routeFinder\n   * @param {boolean} heroDisengaging\n   */\n  constructor(tileMap, routeFinder, heroDisengaging) {\n    this.#movers = [];\n    this.#tileMap = tileMap;\n    this.#routeFinder = routeFinder;\n    this.#heroDisengaging = heroDisengaging;\n  }\n\n  /**\n   * Add the actor and move immediately to hero. Note if the actor's movement\n   * is zero, the function does nothing.\n   * @param {Actor} actor\n   */\n  addAndMoveActor(actor) {\n    if (actor.maxTilesPerMove === 0) {\n      return;\n    }\n    const replayableMover = new ReplayableActorMover(\n      actor,\n      this.#tileMap,\n      this.#routeFinder,\n      this.#heroDisengaging\n    );\n    replayableMover.moveInstantly();\n    this.#movers.push(replayableMover);\n  }\n\n  /**\n   * Replay all movements in parallel.\n   * @returns {Promise} fulfils to undefined when all movements complete.\n   */\n  replay() {\n    const promises = [];\n    this.#movers.forEach((mover) => promises.push(mover.replay()));\n    return Promise.all(promises);\n  }\n}\n\n/**\n * Basic State class\n */\nclass State {\n  constructor() {}\n\n  /**\n   * Transition to a new state\n   * @returns {Promise} fulfills to null\n   */\n  async transitionTo(state) {\n    await this.onExit().then(() => {\n      currentState = state;\n      return state.onEntry();\n    });\n  }\n\n  /**\n   * Perform actions on entering the state.\n   * @returns {Promise} fulfills to null\n   */\n  onEntry() {\n    return Promise.resolve();\n  }\n  /**\n   * Handle event.\n   * @param {number} eventId\n   * @param  {module:utils/sprites/sprite~Sprite} sprite - the sprite initiating the event\n   * @param {Object} detail - object will depend on the eventId\n   * @returns {Promise} fulfills to null\n   */\n  onEvent(eventIdUnused) {\n    return Promise.resolve(null);\n  }\n  /**\n   * Actions when the state exits\n   * @returns {Promise} fulfills to null\n   */\n  onExit() {\n    return Promise.resolve(null);\n  }\n}\n\n/**\n * At WaitingToStart\n */\nclass WaitingToStart extends State {\n  onEntry() {\n    LOG.log('WaitingToStart state');\n  }\n  /**\n   * @override\n   * @param {number} eventId\n   * @param  {module:utils/sprites/sprite~Sprite} point - the point initiating the event\n   * @param {Object} detail - object will depend on the eventId\n   */\n  async onEvent(eventId, pointUnused, detailUnused) {\n    if (eventId === EventId.MAIN_MENU) {\n      this.transitionTo(new AtMainMenu());\n    }\n  }\n}\n\n/**\n * At main Menu\n */\nclass AtMainMenu extends State {\n  onEntry() {\n    return showMainMenu().then((response) => {\n      persistentGame = response !== 'PLAY CASUAL';\n      return this.transitionTo(new AtStart());\n    });\n  }\n}\n/**\n * At start state\n */\nclass AtStart extends State {\n  onEntry() {\n    LOG.log('Enter AtStart');\n\n    return this.#loadFirstOrContinuationScene()\n      .then((continuation) => {\n        const name = heroActor.traits.get('NAME');\n        let message;\n        if (!persistentGame) {\n          message = i18n`MESSAGE DUNGEON INTRO CASUAL ${name}')}`;\n        } else if (continuation) {\n          message = i18n`MESSAGE DUNGEON INTRO CONTINUE ${name}`;\n        } else {\n          message = i18n`MESSAGE DUNGEON INTRO ${name}`;\n        }\n        return UI.showOkDialog(message, {\n          okButtonLabel: i18n`BUTTON ENTER DUNGEON`,\n          className: 'wall',\n        });\n      })\n      .then((scene) => {\n        heroActor.sprite.position =\n          WORLD.getTileMap().getWorldPositionOfTileByEntry();\n        return scene;\n      })\n      .then((scene) => {\n        if (scene.intro) {\n          return UI.showOkDialog(scene.intro, { className: 'mask' });\n        } else {\n          return;\n        }\n      })\n      .then(() => currentState.transitionTo(new HeroTurnIdle()));\n  }\n\n  /**\n   * Load the first scene or if using saved games and there\n   * is one in progress, load that.\n   * @returns {Promise<boolean>} fulfils to true if continuation\n   */\n  #loadFirstOrContinuationScene() {\n    const savedGame = persistentGame ? restoreGameState() : null;\n    if (savedGame) {\n      return SCENE_MANAGER.continueFromSavedScene(\n        savedGame.sceneLevel,\n        savedGame.hero\n      ).then(() => true);\n    } else {\n      return SCENE_MANAGER.switchToFirstScene().then(() => false);\n    }\n  }\n}\n\n/**\n * At Game Over\n */\nclass AtGameOver extends State {\n  async onEntry() {\n    LOG.log('Enter AtGameOver');\n    if (persistentGame) {\n      saveGameState(heroActor);\n    }\n    addFadingText('YOU DIED!', {\n      delaySecs: 1,\n      lifetimeSecs: 2,\n      position: heroActor.position,\n      velocity: new Velocity(0, -100, 0),\n    });\n    await pause(2)\n      .then(() =>\n        UI.showOkDialog(i18n`MESSAGE DEFEAT`, {\n          okButtonLabel: i18n`BUTTON TRY AGAIN`,\n        })\n      )\n      .then(() => SCENE_MANAGER.unloadCurrentScene())\n      .then(() => this.transitionTo(new AtMainMenu()));\n  }\n}\n\n/**\n * At Game Completed\n */\nclass AtGameCompleted extends State {\n  async onEntry() {\n    LOG.log('Enter AtGameCompleted');\n    if (persistentGame) {\n      saveGameState(heroActor);\n    }\n    await UI.showOkDialog(i18n`MESSAGE VICTORY`, {\n      okButtonLabel: i18n`BUTTON TRY AGAIN`,\n    })\n      .then(() => SCENE_MANAGER.unloadCurrentScene())\n      .then(() => this.transitionTo(new AtMainMenu()));\n  }\n}\n\n/**\n * State where the hero is in the map.\n */\nclass HeroTurnIdle extends State {\n  constructor() {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  async onEntry() {\n    await super.onEntry();\n    LOG.log('Enter HeroTurnIdle');\n    await prepareHeroTurn();\n  }\n  /**\n   * @override\n   * @param {number} eventId\n   * @param  {module:utils/sprites/sprite~Sprite} point - the point initiating the event\n   * @param {Object} [detail = {}] - object will depend on the eventId\n   */\n  async onEvent(eventId, point, detail = {}) {\n    switch (eventId) {\n      case EventId.CLICKED_FREE_GROUND:\n        {\n          const filter = await disambiguateFilter(\n            detail.filter,\n            detail.occupant\n          );\n          if (filter === ClickEventFilter.INTERACT_TILE) {\n            await interact(point);\n          } else if (filter === ClickEventFilter.OCCUPIED_TILE) {\n            await showOccupantDetails(detail.occupant);\n          } else {\n            await moveHeroToPoint(point, {\n              usePathFinder:\n                detail.filter !== ClickEventFilter.MOVE_OR_INTERACT_TILE,\n            });\n          }\n          if (heroActor.traits.get('HP', 0) === 0) {\n            this.transitionTo(new AtGameOver());\n          } else {\n            this.transitionTo(new ComputerTurnIdle());\n          }\n        }\n\n        break;\n      case EventId.CLICKED_ENTRANCE:\n        await UI.showOkDialog(i18n`MESSAGE ENTRANCE STUCK`);\n        break;\n      case EventId.CLICKED_EXIT:\n        LOG.log('Escaping');\n        await moveHeroToPoint(point, { usePathFinder: false })\n          .then(() => UI.showOkDialog(i18n`MESSAGE OPEN EXIT`))\n          .then(() => startNextScene(this));\n        break;\n    }\n    return Promise.resolve(null);\n  }\n}\n\n/**\n * State where the hero is in the map.\n */\nclass HeroTurnInteracting extends State {\n  constructor() {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  async onEntry() {\n    await super.onEntry();\n    LOG.log('Enter HeroTurnInteracting');\n    await prepareHeroTurn();\n  }\n  /**\n   * @override\n   * @param {number} eventId\n   * @param  {module:utils/sprites/sprite~Sprite} point - the point initiating the event\n   * @param {Object} [detail = {}] - object will depend on the eventId\n   */\n  async onEvent(eventId, point, detail = {}) {\n    switch (eventId) {\n      case EventId.CLICKED_FREE_GROUND:\n        {\n          const filter = await disambiguateFilter(\n            detail.filter,\n            detail.occupant\n          );\n          if (filter === ClickEventFilter.INTERACT_TILE) {\n            await interact(point);\n          } else if (filter === ClickEventFilter.OCCUPIED_TILE) {\n            await showOccupantDetails(detail.occupant);\n          } else {\n            await this.#tryToDisengage(point, {\n              usePathFinder:\n                detail.filter !== ClickEventFilter.MOVE_OR_INTERACT_TILE,\n            });\n          }\n          if (heroActor.traits.get('HP', 0) === 0) {\n            this.transitionTo(new AtGameOver());\n          } else if (\n            WORLD.getTileMap().getParticipants(heroActor).length === 0\n          ) {\n            this.transitionTo(new ComputerTurnIdle());\n          } else {\n            this.transitionTo(new ComputerTurnInteracting());\n          }\n        }\n\n        break;\n      case EventId.CLICKED_ENTRANCE:\n        UI.showOkDialog(i18n`MESSAGE ENTRANCE STUCK`);\n        break;\n      case EventId.CLICKED_EXIT:\n        await this.#tryToDisengage(point, { usePathFinder: false }).then(\n          (success) => {\n            if (success) {\n              return UI.showOkDialog(\n                i18n`MESSAGE OPEN EXIT WHILE FIGHTING`\n              ).then(() => startNextScene(this));\n            } else {\n              return Promise.resolve();\n            }\n          }\n        );\n        break;\n    }\n    return Promise.resolve(null);\n  }\n\n  /**\n   * Try to run\n   * @param {Point} point - position in world.\n   * @param {Object} [options = {usePathFinder: true}]\n   * @param {boolean} options.usePathFinder - should path finder be used.\n   * @returns {Promise} fulfils to true if successful else false.\n   */\n  #tryToDisengage(point, options = { usePathFinder: true }) {\n    const tileMap = WORLD.getTileMap();\n    const opponents = tileMap.getParticipants(heroActor);\n    let respectDisengage = false;\n    for (const opponent of opponents) {\n      if (opponent.alive && opponent.interaction.respectDisengage(heroActor)) {\n        respectDisengage = true;\n        break;\n      }\n    }\n    const currentGridPoint = tileMap.worldPointToGrid(heroActor.position);\n    const targetGridPoint = tileMap.worldPointToGrid(point);\n    const movement = currentGridPoint.getOrthoSeparation(targetGridPoint);\n    if (respectDisengage && movement <= MAX_TILES_FOR_DISENGAGEMENT) {\n      heroActor.disengaging = true;\n    }\n    return moveHeroToPoint(point, options).then(() => true);\n  }\n}\n\nclass ComputerTurnIdle extends State {\n  constructor() {\n    super();\n  }\n  async onEntry() {\n    await super.onEntry();\n    LOG.log('Enter ComputerTurnIdle');\n    await applyOrganicToActors();\n    const tileMap = WORLD.getTileMap();\n\n    const routeFinder = new RouteFinder(tileMap);\n    const replayer = new MovementReplayer(\n      tileMap,\n      routeFinder,\n      heroActor.disengaging\n    );\n    for (const actor of WORLD.getActors().values()) {\n      if (actor !== heroActor && actor.alive) {\n        if (!actor.isWandering() || dice.rollDice(6) > 3) {\n          replayer.addAndMoveActor(actor);\n        }\n      }\n    }\n    for (const actor of WORLD.getOrganicActors().values()) {\n      if (actor.alive) {\n        replayer.addAndMoveActor(actor);\n      }\n    }\n    await replayer.replay();\n\n    const participants = tileMap.getParticipants(heroActor);\n    for (const actor of participants) {\n      if (actor.isEnemy()) {\n        this.transitionTo(new HeroTurnInteracting());\n        return Promise.resolve(null);\n      }\n    }\n\n    this.transitionTo(new HeroTurnIdle());\n  }\n}\n\nclass ComputerTurnInteracting extends State {\n  constructor() {\n    super();\n  }\n  async onEntry() {\n    await super.onEntry();\n    LOG.log('Enter ComputerTurnInteracting');\n    await applyOrganicToActors();\n    const tileMap = WORLD.getTileMap();\n\n    const routeFinder = new RouteFinder(tileMap);\n    const replayer = new MovementReplayer(\n      tileMap,\n      routeFinder,\n      heroActor.disengaging\n    );\n    const participants = tileMap.getParticipants(heroActor);\n    for (const actor of WORLD.getActors().values()) {\n      if (actor !== heroActor && actor.alive && actor.interaction) {\n        if (participants.includes(actor) && actor.willInteract()) {\n          await actor.interaction.enact(heroActor);\n        } else {\n          replayer.addAndMoveActor(actor);\n        }\n      }\n    }\n    for (const actor of WORLD.getOrganicActors().values()) {\n      if (actor.alive) {\n        replayer.addAndMoveActor(actor);\n      }\n    }\n    await replayer.replay();\n\n    if (heroActor.traits.get('HP', 0) === 0) {\n      this.transitionTo(new AtGameOver());\n    } else if (participants.length === 0) {\n      this.transitionTo(new HeroTurnIdle());\n    } else {\n      this.transitionTo(new HeroTurnInteracting());\n    }\n\n    return Promise.resolve(null);\n  }\n}\n\n/**\n * Prepare hero turn\n * @returns {Promise}\n */\nfunction prepareHeroTurn() {\n  heroActor.disengaging = false;\n  const tileMap = WORLD.getTileMap();\n  const routes = new RouteFinder(tileMap, heroActor).getAllRoutesFrom(\n    tileMap.worldPointToGrid(heroActor.sprite.position),\n    heroActor.maxTilesPerMove\n  );\n  tileMap.setMovementRoutes(routes);\n  tileMap.setInteractActors(tileMap.getParticipants(heroActor));\n  tileMap.calcReachableDoors(heroActor.position);\n  return Promise.resolve(null);\n}\n\n/**\n * Move to point\n * @param {Point} point\n * @param {Object} [options = {usePathFinder:true}]\n * @param {boolean} options.usePathFinder\n * @returns {Promise}\n */\nfunction moveHeroToPoint(point, options = { usePathFinder: true }) {\n  const tileMap = WORLD.getTileMap();\n  let waypoints;\n  if (options.usePathFinder) {\n    waypoints = tileMap.getWaypointsToWorldPoint(point);\n  } else {\n    waypoints = [heroActor.position, point];\n  }\n  tileMap.setMovementRoutes(null);\n  tileMap.setInteractActors(null);\n  if (waypoints) {\n    const modifier = new PathFollower(\n      { path: waypoints, speed: 100 },\n      heroActor.sprite.modifier\n    );\n    return modifier.applyAsTransientToSprite(heroActor.sprite);\n  } else {\n    return Promise.resolve();\n  }\n}\n\n/**\n * Apply organic actions to all actors.\n * @returns {Promise} fulfils to undefined on completion.\n */\nfunction applyOrganicToActors() {\n  const tileMap = WORLD.getTileMap();\n  const promises = [];\n  WORLD.getOrganicActors().forEach((organic) => {\n    const participants = tileMap.getCoincidentActors(organic);\n    participants.forEach((actor) => {\n      if (actor.alive && !actor.isOrganic() && organic.interaction) {\n        promises.push(organic.interaction.enact(actor));\n      }\n    });\n  });\n\n  return Promise.all(promises);\n}\n/**\n * Interact with point\n * @param {Point} point - position in world.\n * @returns {Promise}\n */\nfunction interact(point) {\n  /** @type {module:utils/tileMaps/tileMap~TileMap} */\n  const tileMap = WORLD.getTileMap();\n  const tile = tileMap.getTileAtWorldPoint(point);\n  const targets = tile.getOccupants();\n  const promises = [];\n  for (const target of targets.values()) {\n    if (target.interaction) {\n      promises.push(target.interaction.react(heroActor));\n    }\n  }\n  return Promise.all(promises);\n}\n\n/**\n * Start next scene.\n * @param {State} currentState\n * @returns {Promise} fulfils to undefined.\n */\nfunction startNextScene(currentState) {\n  if (persistentGame) {\n    saveGameState(heroActor);\n  }\n  if (!SCENE_MANAGER.areThereMoreScenes()) {\n    return currentState.transitionTo(new AtGameCompleted());\n  }\n  return SCENE_MANAGER.unloadCurrentScene()\n    .then(() => actorDialogs.showRestDialog(heroActor))\n    .then(() => SCENE_MANAGER.switchToNextScene())\n    .then((scene) => {\n      heroActor.sprite.position =\n        WORLD.getTileMap().getWorldPositionOfTileByEntry();\n      return scene;\n    })\n    .then((scene) => {\n      if (scene.intro) {\n        return UI.showOkDialog(scene.intro, { className: 'mask' });\n      } else {\n        return;\n      }\n    })\n    .then(() => currentState.transitionTo(new HeroTurnIdle()));\n}\n\n/**\n * Show occupant details.\n * @param {Actor} occupant\n * @returns {Promise} fulfils to undefined.\n */\nfunction showOccupantDetails(occupant) {\n  if (!occupant) {\n    LOG.error('Clicked on tile but no occupant to view.');\n    return Promise.resolve();\n  }\n  if (occupant.isHiddenArtefact()) {\n    return UI.showOkDialog(i18n`MESSAGE GROUND DISTURBED`);\n  }\n\n  return actorDialogs.showActorDetailsDialog(occupant, {\n    allowConsumption: occupant.isHero(),\n    allowMagicUse: occupant.isHero(),\n  });\n}\n\n/**\n * Trigger an event. This will then be passed to the current State to handle.\n * @param {number} eventId\n * @param  {module:utils/sprites/sprite~Sprite} sprite - the sprite initiating the event\n * @param {Object} detail - object will depend on the eventId\n */\nfunction triggerEvent(eventId, sprite, detail) {\n  if (ignoreEvents) {\n    LOG.debug(`Ignoring event ${eventId} as still processing earlier event.`);\n    return;\n  }\n  ignoreEvents = true;\n  currentState.onEvent(eventId, sprite, detail).then(() => {\n    ignoreEvents = false;\n  });\n}\n\n/**\n * @param {ClickEventFilter} filter\n * @param {Actor} occupant\n * @returns {Promise<ClickEventFilter>}\n */\nfunction disambiguateFilter(filter, occupant) {\n  if (filter === ClickEventFilter.MOVE_OR_INTERACT_TILE) {\n    if (occupant?.isHiddenArtefact()) {\n      const storageDetails = occupant.storeManager.getFirstStorageDetails();\n      const artefact = storageDetails?.artefact;\n      return artefact\n        ? ClickEventFilter.INTERACT_TILE\n        : ClickEventFilter.MOVEMENT_TILE;\n    }\n\n    return UI.showChoiceDialog(\n      i18n`DIALOG TITLE CHOICES`,\n      i18n`MESSAGE SEARCH OR MOVE`,\n      [i18n`BUTTON CLIMB OVER`, i18n`BUTTON SEARCH`]\n    ).then((choice) => {\n      if (choice === 0) {\n        return ClickEventFilter.MOVEMENT_TILE;\n      } else {\n        return ClickEventFilter.INTERACT_TILE;\n      }\n    });\n  }\n  return filter;\n}\n/**\n * Set the current hero sprite.\n * @returns {module:players/actors~Actor}\n */\nfunction getHeroActor() {\n  return heroActor;\n}\n\n/**\n * Start\n * @param {module:players/actors~Actor} actor - the hero actor\n */\nfunction setHero(actor) {\n  heroActor = actor;\n}\n\n/**\n * @type {module:players/actors~Actor}\n */\nlet heroActor;\n\n/**\n * @type {State}\n */\nlet currentState = new WaitingToStart();\n\n/**\n * Flag to determine whether events are accepted.\n */\nlet ignoreEvents = false;\n\n/**\n * Single instance of the turn manager.\n */\nconst TURN_MANAGER = {\n  EventId: EventId,\n  getHeroActor: getHeroActor,\n  setHero: setHero,\n  triggerEvent: triggerEvent,\n};\n\nexport default TURN_MANAGER;\n","/**\n * @file Timers\n *\n * @module utils/timers\n */\n/**\n * License {@link https://opensource.org/license/mit/|MIT}\n *\n * Copyright 2024 Steve Butler (henspace.com).\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the “Software”), to deal in\n * the Software without restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n * Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */\n\n/**\n *\n * @param {number} secs\n * @returns {Promise} fulfils to null\n */\nexport function pause(secs) {\n  return new Promise((resolve) => {\n    setTimeout(() => resolve(), secs * 1000);\n  });\n}\n","/**\n * @file Main menu\n *\n * @module menus/mainMenu\n */\n/**\n * License {@link https://opensource.org/license/mit/|MIT}\n *\n * Copyright 2024 Steve Butler (henspace.com).\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the “Software”), to deal in\n * the Software without restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n * Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */\n\nimport UI from '../utils/dom/ui.js';\nimport { BitmapButtonControl } from '../utils/dom/components.js';\nimport { showSettingsDialog } from './settingsDialog.js';\nimport { i18n } from '../utils/messageManager.js';\nimport { showBestAdventureDialog } from './bestAdventureDialog.js';\nimport { showGuideDialog } from './guideDialogs.js';\n\n/**\n * Display the main menu. All actions are controlled by the main menu except play\n * which results in the menu resolving.\n * @returns {Promise} fulfils to undefined if play selected.\n */\nexport function showMainMenu() {\n  const playAdventure = new BitmapButtonControl({\n    leftLabel: i18n`BUTTON PLAY ADVENTURE`,\n    imageName: 'ui-play00.png',\n    internalLabel: true,\n    closes: 'PLAY ADVENTURE',\n  });\n  const playCasual = new BitmapButtonControl({\n    leftLabel: i18n`BUTTON PLAY CASUAL`,\n    imageName: 'ui-play00.png',\n    internalLabel: true,\n    closes: 'PLAY CASUAL',\n  });\n  const settings = new BitmapButtonControl({\n    leftLabel: i18n`BUTTON SETTINGS`,\n    imageName: 'ui-settings00.png',\n    internalLabel: true,\n    action: () => showSettingsDialog(),\n  });\n  const bestAdventure = new BitmapButtonControl({\n    leftLabel: i18n`BUTTON BEST ADVENTURE`,\n    imageName: 'ui-best-adventure00.png',\n    internalLabel: true,\n    action: () => showBestAdventureDialog(),\n  });\n  const guides = new BitmapButtonControl({\n    leftLabel: i18n`BUTTON GUIDES`,\n    imageName: 'ui-guides00.png',\n    internalLabel: true,\n    action: () => showGuideDialog(),\n  });\n  return UI.showControlsDialog(i18n`MENU TITLE MAIN`, {\n    actionButtons: [guides, settings, bestAdventure, playAdventure, playCasual],\n    className: 'door',\n  });\n}\n","/**\n * @file Settings dialog\n *\n * @module dialogs/settingsDialog\n */\n/**\n * License {@link https://opensource.org/license/mit/|MIT}\n *\n * Copyright 2024 Steve Butler (henspace.com).\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the “Software”), to deal in\n * the Software without restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n * Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */\n\nimport { createControl, ControlType } from '../utils/dom/components.js';\nimport UI from '../utils/dom/ui.js';\nimport PERSISTENT_DATA from '../utils/persistentData.js';\nimport SOUND_MANAGER from '../utils/soundManager.js';\nimport { i18n, MESSAGES } from '../utils/messageManager.js';\nimport TURN_MANAGER from '../gameManagement/turnManager.js';\n\n/** Settings */\nconst SETTINGS = [\n  {\n    id: 'MUSIC_VOLUME',\n    labelKey: 'CONTROL MUSIC VOLUME',\n    defValue: 50,\n    controlType: ControlType.RANGE,\n    persistent: true,\n    action: null,\n    onChange: (value) => SOUND_MANAGER.setMusicVolumePercent(value),\n  },\n  {\n    id: 'EFFECTS_VOLUME',\n    labelKey: 'CONTROL EFFECTS VOLUME',\n    defValue: 50,\n    controlType: ControlType.RANGE,\n    persistent: true,\n    action: null,\n    onChange: (value) => {\n      SOUND_MANAGER.setEffectsVolumePercent(value);\n      SOUND_MANAGER.playEffect('PUNCH');\n    },\n  },\n];\n\n/**\n * Display the settings dialog. This retrieves the current settings from local\n * storage and allows modifications. Changes are saved immediately.\n */\nexport function showSettingsDialog() {\n  const controls = [];\n  SETTINGS.forEach((setting) => {\n    controls.push(createControl(setting));\n  });\n  return UI.showControlsDialog(i18n`DIALOG TITLE SETTINGS`, {\n    actionButtons: controls,\n    className: 'door',\n  });\n}\n\n/**\n * Loads persistent settings from stored memory and calls their onChange method.\n */\nexport function initialiseSettings() {\n  SETTINGS.forEach((setting) => {\n    setting.label = MESSAGES.getText(setting.labelKey);\n    if (setting.persistent & setting.onChange) {\n      const value = PERSISTENT_DATA.get(setting.id, setting.defValue);\n      setting.onChange(value);\n    }\n  });\n}\n","/**\n * @file Dialog to show the best adventure\n *\n * @module dialogs\\bestAdventureDialog\n */\n/**\n * license {@link https://opensource.org/license/mit/|MIT}\n * Copyright 2024 Steve Butler (henspace.com).\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the “Software”), to deal in\n * the Software without restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n * Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */\n\nimport UI from '../utils/dom/ui.js';\nimport { i18n } from '../utils/messageManager.js';\nimport * as components from '../utils/dom/components.js';\n\nimport { getBestAdventure } from '../gameManagement/gameSaver.js';\n\n/**\n * Show a dialog with the best adventure results which are picked\n * up from persistent storage.\n * @returns {Promise}\n */\nexport function showBestAdventureDialog() {\n  const bestAdventure = getBestAdventure();\n  const container = components.createElement('div', {\n    className: 'best-adventure',\n  });\n  if (bestAdventure) {\n    const list = document.createElement('ul');\n    container.appendChild(list);\n    list.appendChild(\n      components.createElement('li', {\n        text: i18n`Name:${bestAdventure.name}`,\n      })\n    );\n    list.appendChild(\n      components.createElement('li', {\n        text: i18n`Gold:${bestAdventure.gold.toFixed(2)}`,\n      })\n    );\n    list.appendChild(\n      components.createElement('li', {\n        text: i18n`Character level:${bestAdventure.characterLevel}`,\n      })\n    );\n    list.appendChild(\n      components.createElement('li', {\n        text: i18n`Experience:${bestAdventure.exp}`,\n      })\n    );\n    list.appendChild(\n      components.createElement('li', {\n        text: i18n`Dungeon level:${bestAdventure.dungeonLevel}`,\n      })\n    );\n  } else {\n    container.appendChild(\n      components.createElement('p', {\n        text: i18n`MESSAGE NO SAVED ADVENTURE`,\n      })\n    );\n  }\n\n  return UI.showElementOkDialog(i18n`DIALOG TITLE BEST ADVENTURE`, container);\n}\n","/**\n * @file Saver for games\n *\n * @module gameManagement\\gameSaver\n */\n/**\n * license {@link https://opensource.org/license/mit/|MIT}\n * Copyright 2024 Steve Butler (henspace.com).\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the “Software”), to deal in\n * the Software without restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n * Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */\n\nimport SCENE_MANAGER from './sceneManager.js';\nimport PERSISTENT_DATA from '../utils/persistentData.js';\nimport LOG from '../utils/logging.js';\nimport { buildActor } from '../dnd/almanacs/actorBuilder.js';\nimport { buildArtefact } from '../dnd/almanacs/artefactBuilder.js';\nimport { strToActorType } from '../players/actors.js';\nimport { strToArtefactType } from '../players/artefacts.js';\n\n/** @typedef {Object} AdventureResult\n * @property {string} name\n * @property {number} gold\n * @property {number} exp\n * @property {number} characterLevel\n * @property {number} dungeonLevel\n */\n\n/**\n * Create an adventure result\n * @param {module:players/actors~Actor} hero\n * @returns {AdventureResult}\n */\nfunction createAdventureResult(hero) {\n  const result = {\n    name: 'unknown',\n    gold: 0,\n    exp: 0,\n    characterLevel: 0,\n    dungeonLevel: 0,\n  };\n  if (hero) {\n    result.name = hero.traits.get('NAME');\n    result.gold = hero.storeManager.getPurseValue();\n    result.exp = hero.traits.getInt('EXP', 0);\n    result.characterLevel = hero.traits.getCharacterLevel();\n    result.dungeonLevel = SCENE_MANAGER.getCurrentSceneLevel();\n  }\n  return result;\n}\n\n/**\n * Get the best stored adventure result.\n * @returns {AdventureResult}\n */\nexport function getBestAdventure() {\n  return PERSISTENT_DATA.get('BEST_ADVENTURE');\n}\n\n/**\n * Get the best stored adventure result.\n * @param {AdventureResult} adventureResult\n */\nfunction saveBestAdventure(adventureResult) {\n  return PERSISTENT_DATA.set('BEST_ADVENTURE', adventureResult);\n}\n\n/**\n * Save the hero's adventure if better than the last.\n * @param {module:players/actors~Actor} hero\n */\nfunction saveAdventureIfBest(hero) {\n  const adventureResult = createAdventureResult(hero);\n  const currentBest = getBestAdventure();\n  const lastGold = currentBest ? currentBest.gold : 0;\n  if (adventureResult.gold > lastGold) {\n    saveBestAdventure(adventureResult);\n  }\n}\n/**\n * Save the current game. The adventure is also saved if better than previous\n * attempts.\n * @param {module:players/actors~Actor} hero\n */\nexport function saveGameState(hero) {\n  saveAdventureIfBest(hero);\n  const storageDetails = hero.storeManager.getAllStorageDetails();\n  const artefactDetails = [];\n  storageDetails.forEach((detail) =>\n    artefactDetails.push({\n      storeTypeId: detail.store.storeTypeId,\n      almanacEntry: detail.artefact.almanacEntry,\n      traitsString: detail.artefact.traits.valuesToString(),\n    })\n  );\n\n  const gameState = {\n    sceneLevel: SCENE_MANAGER.getCurrentSceneLevel(),\n    hero: {\n      alive: hero.alive,\n      almanacEntry: hero.almanacEntry,\n      traitsString: hero.traits.valuesToString(),\n      artefactDetails: artefactDetails,\n    },\n  };\n  PERSISTENT_DATA.set('GAME_STATE', gameState);\n}\n\n/** Restore the game state.\n * The state is only restored if the hero is alive.\n *\n * @returns {{hero: Actor, sceneLevel: number}} - undefined if failure\n */\nexport function restoreGameState() {\n  const gameState = PERSISTENT_DATA.get('GAME_STATE');\n  if (!gameState) {\n    LOG.info('No saved game state to restore.');\n    return;\n  }\n  if (!gameState.hero.alive) {\n    LOG.info('Last hero state was dead, so not restoring.');\n    return;\n  }\n  gameState.hero.almanacEntry.equipmentIds = []; // these are intial arefacts which may have been dropped.\n  gameState.hero.almanacEntry.type = strToActorType(\n    gameState.hero.almanacEntry.typeId\n  );\n  const heroActor = buildActor(\n    gameState.hero.almanacEntry,\n    gameState.hero.traitsString\n  );\n  gameState.hero.artefactDetails.forEach((details) => {\n    details.almanacEntry.type = strToArtefactType(details.almanacEntry.typeId);\n    const artefact = buildArtefact(details.almanacEntry, details.traitsString);\n    const store = heroActor.storeManager.getStoreByTypeId(details.storeTypeId);\n    if (!store) {\n      LOG.error(\n        `Unable to find store matching ${details.storeTypeId}. Game restore abandoned.`\n      );\n      return;\n    }\n    store.add(artefact);\n  });\n  return { hero: heroActor, sceneLevel: gameState.sceneLevel };\n}\n","/**\n * @file Actor and artefact builder\n *\n * @module dnd/almanacs/actorBuilder\n */\n/**\n * license {@link https://opensource.org/license/mit/|MIT}\n * Copyright 2024 Steve Butler (henspace.com).\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the “Software”), to deal in\n * the Software without restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n * Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */\n\nimport { Sprite } from '../../utils/sprites/sprite.js';\nimport { Actor, ActorType, MoveType } from '../../players/actors.js';\nimport * as spriteRenderers from '../../utils/sprites/spriteRenderers.js';\nimport * as animation from '../../utils/sprites/animation.js';\nimport { Position } from '../../utils/geometry.js';\nimport SCREEN from '../../utils/game/screen.js';\nimport { Colours } from '../../constants/canvasStyles.js';\nimport { Fight, Trade, FindArtefact, Poison } from '../interact.js';\nimport StdAnimations from '../../scriptReaders/actorAnimationKeys.js';\nimport * as maths from '../../utils/maths.js';\nimport GameConstants from '../../utils/game/gameConstants.js';\nimport { CharacterTraits } from '../traits.js';\nimport { ALMANAC_LIBRARY } from './almanacs.js';\nimport { buildArtefact } from './artefactBuilder.js';\nimport LOG from '../../utils/logging.js';\nimport IMAGE_MANAGER from '../../utils/sprites/imageManager.js';\nimport { getRandomFullName } from '../../utils/nameGenerator.js';\n\n/**\n * Specialist traits renderer\n */\nclass TraitsRenderer extends spriteRenderers.MultiGaugeTileRenderer {\n  /** @type {Actor} */\n  actor;\n  /**\n   * The number of gauges is determined by the maximum length of the fill styles and\n   * stroke styles\n   * @param {CanvasRenderingContext2D} context\n   * @param {Object} options\n   * @param {number} options.tileSize\n   * @param {string[]} options.fillStyles\n   * @param {string[]} options.strokeStyles\n   */\n  constructor(context, options) {\n    super(context, options);\n  }\n  /**\n   * Render the sprite.\n   * @param {module:utils/geometry~Position} position - this will have been adjusted to the screen.\n   */\n  render(position) {\n    if (this.actor && this.actor.traits) {\n      const hp = this.actor.traits.getInt('HP', 0);\n      const hpMax = this.actor.traits.getInt('HP_MAX', 1);\n      this.setLevel(0, hp / hpMax);\n    }\n    super.render(position);\n  }\n}\n\n/**\n * Animation that automatically adjusts the animation based on the actor's velocity\n * and alive property.\n */\nclass ActorStateAnimator extends animation.KeyedAnimatedImages {\n  /** @type {Actor} */\n  #actor;\n\n  /** Number from eight point compass. */\n  #compassDir;\n\n  /** @type{boolean}*/\n  #aliveStatus;\n\n  /** @type {animation.AnimatedImage} */\n  #fallbackImage;\n\n  /**\n   * Create the keyed animated image\n   * @param {string} key\n   * @param {AnimatedImage} animatedImage\n   */\n  constructor(key, animatedImage) {\n    super(key, animatedImage);\n    this.#compassDir = maths.CompassEightPoint.NONE;\n    this.#fallbackImage = animatedImage;\n  }\n\n  /**\n   * Set the actor who's velocity will be monitored.\n   * @param {Actor} actor\n   */\n  setActor(actor) {\n    this.#actor = actor;\n    this.#aliveStatus = this.#actor.alive;\n  }\n\n  /** override */\n  getCurrentFrame() {\n    const dir = this.#getCurrentDirection();\n    if (dir !== this.#compassDir || this.#aliveStatus != this.#actor?.alive) {\n      this.#compassDir = dir;\n      this.#aliveStatus = this.#actor?.alive;\n      this.#setAnimationForState();\n    }\n    const frame = super.getCurrentFrame();\n    return (\n      frame ??\n      this.#fallbackImage.getCurrentFrame() ??\n      IMAGE_MANAGER.getUndefinedBitmap()\n    );\n  }\n\n  #getCurrentDirection() {\n    if (!this.#actor || this.#actor.velocity.isZero(0.1)) {\n      return maths.CompassEightPoint.NONE;\n    } else {\n      const dir = this.#actor.velocity.getScreenDirection();\n      return maths.angleToFourPointCompass(dir);\n    }\n  }\n\n  /**\n   * Set the appropriate animation based on the the current compass direction.\n   * Only four points supported.\n   */\n  #setAnimationForState() {\n    const reverse = this.#actor.disengaging;\n    if (!this.#actor.alive) {\n      return this.setCurrentKey(StdAnimations.peripatetic.getKeyName('DEAD'));\n    }\n    switch (this.#compassDir) {\n      case maths.CompassEightPoint.NONE:\n        this.setCurrentKey(StdAnimations.peripatetic.getKeyName('IDLE'));\n        break;\n      case maths.CompassEightPoint.E:\n        this.setCurrentKey(\n          StdAnimations.peripatetic.getKeyName(\n            reverse ? 'WALK_WEST' : 'WALK_EAST'\n          )\n        );\n        break;\n      case maths.CompassEightPoint.N:\n      case maths.CompassEightPoint.NW:\n      case maths.CompassEightPoint.NE:\n        this.setCurrentKey(\n          StdAnimations.peripatetic.getKeyName(\n            reverse ? 'WALK_SOUTH' : 'WALK_NORTH'\n          )\n        );\n        break;\n      case maths.CompassEightPoint.W:\n        this.setCurrentKey(\n          StdAnimations.peripatetic.getKeyName(\n            reverse ? 'WALK_EAST' : 'WALK_WEST'\n          )\n        );\n        break;\n      default:\n        this.setCurrentKey(\n          StdAnimations.peripatetic.getKeyName(\n            reverse ? 'WALK_NORTH' : 'WALK_SOUTH'\n          )\n        );\n        break;\n    }\n  }\n}\n\n/**\n * Create set of standard animations.\n * @param {string} imageName - root name for images.\n * @returns {animation.KeyedAnimatedImages}\n */\nfunction createStandardKeyFrames(imageName) {\n  const keyedAnimations = new ActorStateAnimator(\n    'still',\n    new animation.AnimatedImage(`${imageName}.png`)\n  );\n  StdAnimations.peripatetic.addAllToKeyedAnimation(keyedAnimations, imageName);\n  return keyedAnimations;\n}\n\n/**\n * Create set of standard artefact animations.\n * @returns {animation.KeyedAnimatedImages}\n */\nfunction createArtefactKeyFrames(imageName) {\n  const keyedAnimations = new ActorStateAnimator(\n    'still',\n    new animation.AnimatedImage(`${imageName}.png`)\n  );\n  StdAnimations.artefact.addAllToKeyedAnimation(keyedAnimations, imageName);\n  return keyedAnimations;\n}\n\n/**\n * Create the actor.\n * @param {string} imageName - no extension\n * @param {string} iconImageName - alternative image used for dialogs. Falls back to imageName. png extension automatically added.\n * @param {module:dnd/traits~Traits} traits\n * @param {module:dnd/almanacs/almanacs~AlmanacEntry} almanacEntry\n * @returns {Actor}\n */\nfunction createActor(imageName, iconImageName, traits, almanacEntry) {\n  const keyedAnimation = createStandardKeyFrames(imageName);\n  const imageRenderer = new spriteRenderers.ImageSpriteCanvasRenderer(\n    SCREEN.getContext2D(),\n    keyedAnimation\n  );\n  let renderers;\n  let traitsRenderer;\n  if (traits.get('MOVE') !== MoveType.ORGANIC) {\n    traitsRenderer = new TraitsRenderer(SCREEN.getContext2D(), {\n      tileSize: GameConstants.TILE_SIZE - 2,\n      fillStyles: [Colours.HP_GAUGE],\n      strokeStyles: [],\n    });\n    renderers = [traitsRenderer, imageRenderer];\n  } else {\n    renderers = [imageRenderer];\n  }\n\n  const actor = new Actor(\n    new Sprite({\n      renderer: renderers,\n    }),\n    almanacEntry.type\n  );\n  keyedAnimation.setActor(actor);\n\n  if (traitsRenderer) {\n    traitsRenderer.actor = actor;\n  }\n  actor.position = new Position(\n    GameConstants.TILE_SIZE,\n    GameConstants.TILE_SIZE,\n    0\n  );\n  actor.almanacEntry = almanacEntry;\n  actor.traits = traits;\n  actor.maxTilesPerMove = traits.getValueInFeetInTiles('SPEED', 1);\n  actor.velocity = { x: 0, y: 0, rotation: 0 };\n  actor.iconImageName = iconImageName\n    ? `${iconImageName}.png`\n    : `${imageName}.png`;\n  return actor;\n}\n\n/**\n * Create the artefact holder.\n * @param {string} imageName - no extension\n * @param {module:dnd/traits~Traits} traits\n * @param {module:dnd/almanacs/almanacs~AlmanacEntry} almanacEntry\n * @returns {Actor}\n */\nfunction createArtefactHolder(imageName, traits, almanacEntry) {\n  const keyedAnimation = createArtefactKeyFrames(imageName);\n  const imageRenderer = new spriteRenderers.ImageSpriteCanvasRenderer(\n    SCREEN.getContext2D(),\n    keyedAnimation\n  );\n\n  const actor = new Actor(\n    new Sprite({\n      renderer: [imageRenderer],\n    }),\n    almanacEntry.type === 'SPELL' ? ActorType.PROP : ActorType.HIDDEN_ARTEFACT\n  );\n  keyedAnimation.setActor(actor);\n  actor.position = new Position(\n    GameConstants.TILE_SIZE,\n    GameConstants.TILE_SIZE,\n    0\n  );\n  actor.velocity = { x: 0, y: 0, rotation: 0 };\n  actor.interaction = new FindArtefact(actor);\n  actor.iconImageName = `${imageName}.png`;\n  actor.traits = traits ?? new CharacterTraits();\n  return actor;\n}\n\n/**\n * Create animated enemy\n * @param {string} imageName - without extension\n * @param {string} iconImageName - without extension. Name of icon for dialogs.\n * @param {module:dnd/traits~Traits} traits\n * @param {module:dnd/almanacs/almanacs~AlmanacEntry} almanacEntry\n * @returns {Actor}\n */\nfunction createEnemy(imageName, iconImageName, traits, almanacEntry) {\n  const actor = createActor(imageName, iconImageName, traits, almanacEntry);\n  if (actor.isOrganic()) {\n    actor.interaction = new Poison(actor);\n    actor.obstacle = false;\n  } else {\n    actor.interaction = new Fight(actor);\n  }\n  return actor;\n}\n\n/**\n * Create animated prop\n * @param {string} imageName - without extension\n * @param {string} iconImageName - without extension. Name of icon for dialogs.\n * @param {module:dnd/traits~Traits} traits\n * @param {module:dnd/almanacs/almanacs~AlmanacEntry} almanacEntry\n * @returns {Actor}\n */\nfunction createProp(imageName, iconImageName, traits, almanacEntry) {\n  const actor = createActor(imageName, iconImageName, traits, almanacEntry);\n  actor.interaction = new FindArtefact(actor);\n  return actor;\n}\n\n/**\n * Create animated trader\n * @param {string} imageName - without extension\n * @param {string} iconImageName - alternative image used for dialogs. Fallsback to imageName. png extension automatically added.\n * @param {module:dnd/traits~Traits} traits\n * @param {module:dnd/almanacs/almanacs~AlmanacEntry} almanacEntry\n * @returns {Actor}\n */\nfunction createTrader(imageName, iconImageName, traits, actorType) {\n  const actor = createActor(imageName, iconImageName, traits, actorType);\n  actor.interaction = new Trade(actor);\n  return actor;\n}\n\n/**\n * @param {Actor} actor\n * @param {string[]} equipmentIds - ids of artefacts in the artefacts almanac.\n */\nfunction equipActor(actor, equipmentIds) {\n  if (!equipmentIds) {\n    return;\n  }\n\n  for (const id of equipmentIds) {\n    const artefactEntry = ALMANAC_LIBRARY.findById(id, [\n      'MONEY',\n      'WEAPONS',\n      'ARMOUR',\n    ]);\n    if (artefactEntry) {\n      const artefact = buildArtefact(artefactEntry);\n      if (artefact.equipStoreType) {\n        actor.storeManager.equip(artefact, { direct: true });\n      } else {\n        actor.storeManager.stash(artefact, { direct: true });\n      }\n    } else {\n      LOG.error(`Cannot find ${id} artefact in almanac to equip actor.`);\n    }\n  }\n}\n/**\n * Create an actor from an almanac entry.\n * @param {module:dnd/almanacs/almanacActors~AlmanacEntry} almanacEntry\n * @param {Map<string, *>} [traitsString] - map of values to override the default\n * almanacEntry. This is normally only used if rebuilding from saved values.\n */\nexport function buildActor(almanacEntry, traitsString) {\n  const traits = new CharacterTraits(traitsString ?? almanacEntry.traitsString);\n  if (!traits.get('NAME')) {\n    traits.set('NAME', almanacEntry.name);\n  }\n  let actor;\n  switch (almanacEntry.type) {\n    case ActorType.HERO:\n      actor = createActor('hero', null, traits, almanacEntry);\n      actor.type = ActorType.HERO;\n      if (!traitsString) {\n        traits.set('NAME', getRandomFullName());\n      }\n      break;\n    case ActorType.TRADER:\n      actor = createTrader('trader', null, traits, almanacEntry);\n      break;\n    case ActorType.HIDDEN_ARTEFACT:\n      actor = createArtefactHolder(\n        'hidden-artefact',\n        null,\n        traits,\n        almanacEntry\n      );\n      break;\n    case ActorType.PROP:\n      actor = createProp(almanacEntry.imageName, null, traits, almanacEntry);\n      break;\n    default:\n      actor = createEnemy(almanacEntry.imageName, null, traits, almanacEntry);\n      break;\n  }\n\n  actor.description = almanacEntry.description;\n  if (almanacEntry.equipmentIds) {\n    equipActor(actor, almanacEntry.equipmentIds);\n  }\n  return actor;\n}\n","/**\n * @file Standard animation keys.\n *\n * @module scriptReaders/actorAnimationKeys\n */\n/**\n * License {@link https://opensource.org/license/mit/|MIT}\n *\n * Copyright 2024 Steve Butler (henspace.com).\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the “Software”), to deal in\n * the Software without restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n * Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */\n\nimport { LoopMethod } from '../utils/arrays/indexer.js';\nimport {\n  KeyedAnimatedImages,\n  AnimatedImage,\n} from '../utils/sprites/animation.js';\n\n/**\n * @typedef {Object} AnimationDefinition\n * @property {string} keyName - animation key name.\n * @property {string} suffix - appended to the image name for this animation\n * @property {Object} options - passed to AnimatedImage constructor\n */\n/**\n * @typedef {Object<string, AnimationDefinition>} AnimationDefinitions\n */\n/**\n * Standard animation definitions for an actor.\n * It is assumed that animation images are formed from a root name.\n * @type {AnimationDefinitions}\n */\nconst PeripateticAnimationDefns = {\n  DEAD: {\n    keyName: 'DEAD',\n    suffix: 'dead',\n    options: {\n      framePeriodMs: 100,\n      loopMethod: LoopMethod.STOP,\n    },\n  },\n  IDLE: {\n    keyName: 'IDLE',\n    suffix: 'idle',\n    options: {\n      framePeriodMs: 300,\n      loopMethod: LoopMethod.REVERSE,\n    },\n  },\n  WALK_NORTH: {\n    keyName: 'WALK_N',\n    suffix: 'walk-n',\n    options: {\n      framePeriodMs: 100,\n      loopMethod: LoopMethod.REVERSE,\n    },\n  },\n  WALK_EAST: {\n    keyName: 'WALK_E',\n    suffix: 'walk-e',\n    options: {\n      framePeriodMs: 100,\n      loopMethod: LoopMethod.REVERSE,\n    },\n  },\n  WALK_SOUTH: {\n    keyName: 'WALK_S',\n    suffix: 'walk-s',\n    options: {\n      framePeriodMs: 100,\n      loopMethod: LoopMethod.REVERSE,\n    },\n  },\n  WALK_WEST: {\n    keyName: 'WALK_W',\n    suffix: 'walk-w',\n    options: {\n      framePeriodMs: 100,\n      loopMethod: LoopMethod.REVERSE,\n    },\n  },\n};\n\n/**\n * Standard animation definitions for an actor.\n * It is assumed that animation images are formed from a root nam\n */\nconst ArtefactAnimationDefns = {\n  DEAD: {\n    keyName: 'DEAD',\n    suffix: 'dead',\n    options: {\n      framePeriodMs: 100,\n      loopMethod: LoopMethod.STOP,\n    },\n  },\n  IDLE: {\n    keyName: 'IDLE',\n    suffix: 'idle',\n    options: {\n      framePeriodMs: 300,\n      loopMethod: LoopMethod.REVERSE,\n    },\n  },\n};\n\n/**\n *\n */\nclass AnimationKeys {\n  /** @type {AnimationDefinitions} */\n  #definitions;\n  /**\n   * @param {AnimationDefinitions[]} definitions\n   */\n  constructor(definitions) {\n    this.#definitions = definitions;\n  }\n  /**\n   * Form the frame name for an image\n   * @param {string} key - the key name for the animation.\n   * @param {string} imageName\n   */\n  #formFrameNameRoot(key, imageName) {\n    const suffix = this.#definitions[key]?.suffix;\n    if (!suffix) {\n      throw new Error(\n        `Attempt made to use invalid standard animation key of '${key}'`\n      );\n    }\n    return `${imageName}-${suffix}`;\n  }\n\n  /**\n   * Get the key name.\n   * @param {string} key\n   * @return {string}\n   */\n  getKeyName(key) {\n    return this.#definitions[key].keyName;\n  }\n  /**\n   * Add all animations to the keyed animation.\n   * @param {KeyedAnimatedImages} keyedAnimations\n   * @param {string} imageName - root name for the animation image.\n   */\n  addAllToKeyedAnimation(keyedAnimations, imageName) {\n    for (const key in this.#definitions) {\n      const anim = this.#definitions[key];\n      keyedAnimations.addAnimatedImage(\n        this.#definitions[key].keyName,\n        new AnimatedImage(\n          {\n            prefix: this.#formFrameNameRoot(key, imageName),\n            suffix: '.png',\n            startIndex: 0,\n            padding: 2,\n          },\n          anim.options\n        )\n      );\n    }\n    keyedAnimations.setCurrentKey(this.#definitions.IDLE.keyName);\n  }\n}\n\n/** Object to access standard animations. */\nconst StdAnimations = {\n  peripatetic: new AnimationKeys(PeripateticAnimationDefns),\n  artefact: new AnimationKeys(ArtefactAnimationDefns),\n};\n\nexport default StdAnimations;\n","/**\n * @file Name generator\n *\n * @module utils\\nameGenerator\n */\n/**\n * license {@link https://opensource.org/license/mit/|MIT}\n * Copyright 2024 Steve Butler (henspace.com).\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the “Software”), to deal in\n * the Software without restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n * Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */\nimport * as maths from './maths.js';\n\nconst VOWEL_SOUNDS = ['a', 'e', 'i', 'o', 'u', 'ee', 'oo'];\nconst START_SOUNDS = [\n  'b',\n  'br',\n  'c',\n  'ch',\n  'chr',\n  'cr',\n  'd',\n  'dr',\n  'f',\n  'fl',\n  'fr',\n  'g',\n  'gl',\n  'gr',\n  'h',\n  'j',\n  'k',\n  'kr',\n  'kl',\n  'l',\n  'm',\n  'n',\n  'p',\n  'pl',\n  'pr',\n  'qu',\n  'r',\n  's',\n  'sch',\n  'sh',\n  'st',\n  't',\n  'th',\n  'tr',\n  'v',\n  'w',\n  'y',\n  'z',\n];\n\nconst END_SOUNDS = [\n  'b',\n  'bbey',\n  'bble',\n  'bboy',\n  'bby',\n  'c',\n  'ch',\n  'ck',\n  'cky',\n  'ct',\n  'd',\n  'f',\n  'ff',\n  'ffle',\n  'ffy',\n  'ffey',\n  'g',\n  'ge',\n  'gey',\n  'gle',\n  'k',\n  'l',\n  'll',\n  'lly',\n  'lley',\n  'm',\n  'n',\n  'ngle',\n  'nny',\n  'p',\n  'r',\n  's',\n  'sk',\n  'ss',\n  'ssy',\n  'st',\n  'sty',\n  't',\n  'th',\n  'thy',\n  'v',\n  'w',\n  'y',\n  'z',\n  'zzle',\n  'zzy',\n];\n\n/**\n * Get a random single word name.\n * @returns {string}\n */\nexport function getRandomName() {\n  let name =\n    maths.getRandomMember(START_SOUNDS) +\n    maths.getRandomMember(VOWEL_SOUNDS) +\n    maths.getRandomMember(START_SOUNDS) +\n    maths.getRandomMember(VOWEL_SOUNDS) +\n    maths.getRandomMember(END_SOUNDS);\n\n  return name.charAt(0).toUpperCase() + name.substring(1);\n}\n\n/**\n * Get a random single word name.\n * @returns {string}\n */\nexport function getRandomFullName() {\n  return `${getRandomName()} ${getRandomName()}`;\n}\n","/**\n * @file Dialogs showing guides which are in Markdown.\n *\n * @module dialogs/guideDialogs\n */\n/**\n * license {@link https://opensource.org/license/mit/|MIT}\n * Copyright 2024 Steve Butler (henspace.com).\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the “Software”), to deal in\n * the Software without restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n * Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */\n\nimport { loadTextFromUrl } from '../utils/assetLoaders.js';\nimport { parseMarkdown } from '../utils/text/markdown/markdown.js';\nimport { createElement, TextButtonControl } from '../utils/dom/components.js';\nimport { i18n } from '../utils/messageManager.js';\nimport UI from '../utils/dom/ui.js';\nimport { AssetUrls } from '../../assets/assets.js';\n\n/**\n * Show the guide dialog. This is the portal to all help information.\n * It starts by showing the quick start.\n */\nexport function showGuideDialog() {\n  const about = new TextButtonControl({\n    label: i18n`BUTTON ABOUT`,\n    action: () => showMarkdownDialog(AssetUrls.ABOUT_MD),\n  });\n\n  const help = new TextButtonControl({\n    label: i18n`BUTTON HELP`,\n    action: () => showMarkdownDialog(AssetUrls.HELP_MD),\n  });\n\n  const privacy = new TextButtonControl({\n    label: i18n`BUTTON PRIVACY`,\n    action: () => showMarkdownDialog(AssetUrls.PRIVACY_MD),\n  });\n  return showMarkdownDialog(AssetUrls.QUICK_START_MD, [help, about, privacy]);\n}\n\n/**\n * Load markdown, parse and display in dialog.\n * @param {URL} url\n * @param {BaseControl[]} actionButtons\n * @returns {Promise}\n */\nexport function showMarkdownDialog(url, actionButtons) {\n  return loadTextFromUrl(url).then((markdown) => {\n    let html;\n    let text;\n    if (markdown) {\n      html = parseMarkdown(markdown);\n    } else {\n      text = i18n`MESSAGE CANNOT LOAD URL ${url.toString()}`;\n    }\n\n    const container = createElement('div', {\n      className: 'parsed-markdown',\n      text: text,\n      html: html,\n    });\n    return UI.showControlsDialog(container, {\n      actionButtons: actionButtons,\n      row: true,\n    });\n  });\n}\n","/**\n * @file Light markdown parser\n *\n * @module utils\\text\\markdown\\markdown\n */\n/**\n * license {@link https://opensource.org/license/mit/|MIT}\n * Copyright 2024 Steve Butler (henspace.com).\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the “Software”), to deal in\n * the Software without restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n * Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */\n\nimport { ParsingWarden } from './parsingWarden.js';\n\n/**\n * @typedef {Object} Replacement\n * @property {RegExp} re - the expression to match.\n * @property {string | function(match, ...captures): string} rep - replacement. If a function is\n * passed, it is provided with the string that matched followed by the captured\n * groups.\n */\n\n/**\n * @type {ParsingWarden}\n */\nconst parsingWarden = new ParsingWarden();\n\n/**\n * Get a printable link. This is a span with the classes printable-link and\n * for-print-only. CSS should hide it from screens.\n * @param {string} href\n * @param {boolean} parentheses - if true the result is wrapped in parentheses.\n */\nexport function getPrintableLink(href, parentheses) {\n  return `<span class=\"printable-link for-print-only\">${\n    parentheses ? '(' : ''\n  }${href}${parentheses ? ')' : ''}</span>`;\n}\n\n/**\n * Applies an appropriate icon to the label text of a link. Applies none if no icon.\n * @param {string} href\n * @param {string} label\n * @returns {string}\n */\nfunction addIconToLink(href, label) {\n  let iconHtml = '';\n  if (/^https:\\/\\/vimeo.com\\//.test(href)) {\n    iconHtml = '<i class=\"fa-brands fa-vimeo\"></i>';\n  } else if (/^https:\\/\\/(www\\.)?youtube.com\\//.test(href)) {\n    iconHtml = '<i class=\"fa-brands fa-youtube\"></i>';\n  }\n  if (iconHtml) {\n    iconHtml = `<span class='link-icon'>${iconHtml}</span>`;\n  }\n  return `${label}${iconHtml}`;\n}\n\n/**\n * Block replacements (flow) {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Content_categories}\n * When processing the Markdown, blocks are created. These are defined as blocks\n * of text separated by at least one blank line. The following replacements\n * are used for code which should be treated as independent blocks. To ensure\n * post processing is correct, they should insert two newlines at the end to\n * create an independent block.\n * @type {Replacement[]}\n */\nconst blockReps = [\n  /** Setext heading 1 */\n  {\n    re: /(?:(.+)\\n=+\\n)/g,\n    rep: '\\n\\n<h1>$1</h1>\\n\\n',\n  },\n  /** Setext heading 2 */\n  {\n    re: /(?:(.+)\\n-+\\n)/g,\n    rep: '\\n\\n<h2>$1</h2>\\n\\n',\n  },\n  /** ATX heading. Any level. */\n  {\n    re: /^(#+)(?: *)(.+?)(?:#*)[ \\t]*$/gm,\n    rep: (matched, hashes, txt) => {\n      const level = Math.min(hashes.length, 6);\n      return `\\n\\n<h${level}>${txt.trim()}</h${level}>\\n`;\n    },\n  },\n  /** block quote */\n  reAllLinesStartWith('>[ \\t]*', {\n    blockPrefix: '<blockquote>',\n    blockSuffix: '</blockquote>',\n  }),\n  /** code block */\n  reAllLinesStartWith('(?: {4}|\\t)', {\n    blockPrefix: '<pre><code>',\n    blockSuffix: '</code></pre>',\n    trimContents: true,\n    useWarden: true,\n  }),\n  /** horizontal rule. This must come before unordered lists to prevent interpretation of - as bullet */\n  {\n    re: /^(?:[*_-] *){3,}\\s*$/gm,\n    rep: '\\n\\n<hr>\\n\\n',\n  },\n  /** unordered list */\n  reAllLinesStartWith(' {0,3}[*+-][ \\t]+', {\n    blockPrefix: '<ul>',\n    blockSuffix: '</ul>',\n    linePrefix: '<li>',\n    lineSuffix: '</li>',\n  }),\n  /** ordered list */\n  reAllLinesStartWith(' {0,3}\\\\d+\\\\.[ \\t]+', {\n    blockPrefix: '<ol>',\n    blockSuffix: '</ol>',\n    linePrefix: '<li>',\n    lineSuffix: '</li>',\n  }),\n];\n\n/**\n * Block replacements used for creating paragraphs.\n * @type {Replacement[]}\n */\nconst paragraphReps = [\n  /** paragraphs of elements not in blocks */\n  {\n    re: /(?:(?:^|\\n{2,})(?!<\\w+>))((?:.(?:\\n(?!\\n))?)+)/g,\n    rep: '\\n\\n<p>$1</p>\\n\\n',\n  },\n  /** tidy up */\n  {\n    re: /\\n{2,}/g,\n    rep: '\\n\\n',\n  },\n];\n\n/**\n * Span replacements used for Markdown.\n * @type {Replacement[]}\n */\nconst spanReps = [\n  /** image */\n  {\n    re: /!(&lt;)?\\[(.*?)\\]\\((https?:\\/\\/[-\\w@:%.+~#=/]+?)(?: +\"(.*?)\")?\\)/gm,\n    rep: (match, floatLeft, altText, src, title) => {\n      const additionalClass = floatLeft ? 'floatable' : '';\n      const html = `<img alt=\"${\n        altText ?? ''\n      }\" class=\"${additionalClass}\" src=\"${src}\" title=\"${title ?? ''}\"/>`;\n      return parsingWarden.protect(html);\n    },\n  },\n  /** link */\n  {\n    re: /\\[(.*?)\\]\\((https?:\\/\\/[-\\w@:%.+~#=/]+?)(?: +\"(.*?)\")?\\)/gm,\n    rep: (match, label, href, title) => {\n      label = addIconToLink(href, label);\n      const html = `<a target=\"_blank\" href=\"${href}\" title=\"${title ?? ''}\">${\n        label ?? ''\n      }</a>${getPrintableLink(href, true)}`;\n      return parsingWarden.protect(html);\n    },\n  },\n  /** automatic link */\n  {\n    re: /(?:&lt;|<)(https?:\\/\\/[-\\w@:%.+~#=/]+?)>/gm,\n    rep: (match, href) => {\n      const html = `<a target=\"_blank\" href=\"${href}\">${href}</a>${getPrintableLink(\n        href,\n        true\n      )}`;\n      return parsingWarden.protect(html);\n    },\n  },\n  /** automatic email */\n  {\n    re: /(?:&lt;|<)([\\w.-]+@(?:[\\w-]+\\.)+[\\w-]+)/gm,\n    rep: (match, address) => {\n      const encoded = encodeToEntities(address);\n      const html = `<a href=\"${encoded}\">${encoded}</a>`;\n      return parsingWarden.protect(html);\n    },\n  },\n  /** code */\n  {\n    re: /(?:`{2,}(.*?)`{2,}|`(.*?)`)/gm,\n    rep: (match, codeA, codeB) => {\n      const html = `<code>${codeA ?? codeB}</code>`;\n      return parsingWarden.protect(html);\n    },\n  },\n  /** emphasis single letters*/\n  {\n    re: /\\*\\*([^\\s])\\*\\*/gm,\n    rep: '<strong>$1</strong>',\n  },\n  {\n    re: /__([^\\s])__/gm,\n    rep: '<strong>$1</strong>',\n  },\n  {\n    re: /\\*([^\\s])\\*/gm,\n    rep: '<em>$1</em>',\n  },\n  {\n    re: /_([^\\s])_/gm,\n    rep: '<em>$1</em>',\n  },\n  /** emphasis words */\n  {\n    re: /\\*\\*([^\\s])(.*?)([^\\s])\\*\\*/gm,\n    rep: '<strong>$1$2$3</strong>',\n  },\n  {\n    re: /__([^\\s])(.*?)([^\\s])__/gm,\n    rep: '<strong>$1$2$3</strong>',\n  },\n  {\n    re: /\\*([^\\s])(.*?)([^\\s])\\*/gm,\n    rep: '<em>$1$2$3</em>',\n  },\n  {\n    re: /_([^\\s])(.*?)([^\\s])_/gm,\n    rep: '<em>$1$2$3</em>',\n  },\n];\n\n/**\n * Escape replacements used for Markdown\n * @type {Replacement[]}\n */\nconst markdownEscReps = [\n  {\n    re: /\\\\([\\\\`*_{}[\\]()#+.!-])/g,\n    rep: (match, chr) => encodeCharToEntity(chr),\n  },\n];\n\n/**\n * Replacements for security reasons.\n */\nconst securityReps = [\n  {\n    re: '\\0',\n    rep: '\\ufffd',\n  },\n];\n\n/**\n * Escape HTML\n * @type {Replacement}\n */\nconst htmlEscIgnoringBrReps = [\n  {\n    re: /&(?![\\w#]+?;)/gm,\n    rep: '&amp;',\n  },\n  {\n    re: /<(?!\\/?(?:br|sub|sup)>)/gim,\n    rep: '&lt;',\n  },\n];\n\n/**\n * Escape HTML\n * @type {Replacement}\n */\nconst htmlEscAllReps = [\n  {\n    re: /&(?![\\w#]+?;)/gm,\n    rep: '&amp;',\n  },\n  {\n    re: /</gim,\n    rep: '&lt;',\n  },\n];\n\n/**\n * Clean up HTML\n */\nconst htmlCleanUpReps = [\n  {\n    re: /^\\s*$/gm,\n    rep: '',\n  },\n  {\n    re: /<(?:p|div)>\\s*?<\\/(?:p|div)>/gim,\n    rep: '',\n  },\n];\n\n/**\n * Parse data using replacements.\n * @param {string} data - text to be parsed.\n * @param {Replacement} replacements - replacements to apply.\n * @returns {string}\n */\nfunction processReplacements(data, replacements) {\n  if (!data) {\n    return data;\n  }\n  replacements.forEach((sub) => {\n    data = data.replaceAll(sub.re, sub.rep);\n  });\n  return data;\n}\n\n/**\n * Create Replacement for consecutive block of lines that all begin with the\n * specified character. This will form part of a regular expression so should be\n * escaped if special characters are to be matched.\n * @param {string} reStart - expression to match at start of each line. NB. if this\n * is a group, it must be non-capturing.\n * @param {Object} [options] - options for the block formation.\n * @param {string} options.blockPrefix - characters placed at the beginning of the resulting block.\n * @param {string} options.blockSuffix - characters placed at the end of the resulting block.\n * @param {string} options.linePrefix - characters placed at the beginning of each resulting line.\n * @param {string} options.lineSuffix - characters placed at the end of each resulting line.\n * @param {boolean} options.trimContents - if true, leading and trailing newlines and carriage returns are stripped\n * @param {boolean} options.useWarden - if true, the result is protected from further parsing.\n * from the block's contents\n * @returns {Replacement}\n */\nfunction reAllLinesStartWith(reStart, options) {\n  const reBlockSearchRe = new RegExp(\n    `(?:^|\\\\n)${reStart}(?:.|\\\\n)*?(?:(\\\\n(?!${reStart}))|$)`,\n    'g'\n  );\n  const lineReplacementRe = new RegExp(`^${reStart}([ \\\\t]*.*)$`, 'gm');\n  const lineReplacement = `${options?.linePrefix ?? ''}$1${\n    options?.lineSuffix ?? ''\n  }`;\n  return {\n    re: reBlockSearchRe,\n    rep: (match) => {\n      let blockContents = match.replaceAll(lineReplacementRe, lineReplacement);\n      if (options.trimContents) {\n        blockContents = blockContents.replace(/^[\\n\\r]*/, '').trimEnd();\n      }\n      if (options.useWarden) {\n        blockContents = parsingWarden.protect(blockContents);\n      }\n      let html = `\\n\\n${options?.blockPrefix ?? ''}${blockContents}${\n        options?.blockSuffix ?? ''\n      }\\n\\n`;\n      return html;\n    },\n  };\n}\n\n/**\n * Encode character to HTML entity\n * @param {string} chr - character to encode. Although accepting a string, only the first\n * character is encoded.\n * @returns{string} HTML entity for first character.\n */\nfunction encodeCharToEntity(chr) {\n  return `&#${chr.charCodeAt(0).toString()};`;\n}\n/**\n * Encode a string to html entities.\n * @param {string} data\n * @returns {string}\n */\nexport function encodeToEntities(data) {\n  let result = '';\n  for (const chr of data) {\n    result += encodeCharToEntity(chr);\n  }\n  return result;\n}\n\n/**\n * Decode html hex entities to string. Note the entity is followed by a soft hyphen\n * character to prevent a character such as a < disrupting any html.\n * @param {string} data\n * @returns {string}\n */\nexport function decodeFromEntities(data) {\n  let decoded = data.replaceAll(\n    /&#([0-9]{1,4});/g,\n    (match, value) => String.fromCharCode(parseInt(value)) + '\\xAD'\n  );\n\n  decoded = decoded.replace(/&lt;/gi, '<');\n  decoded = decoded.replace(/&gt;/gi, '>');\n  decoded = decoded.replace(/&nbsp;/gi, ' ');\n  decoded = decoded.replace(/&amp;/gi, '&');\n  decoded = decoded.replace(/</gi, '<\\xAD');\n  decoded = decoded.replace(/&/gi, '&\\xAD');\n\n  return decoded;\n}\n\n/**\n * Convert the Markdown data into HTML.\n * Before parsing the Markdown, any HTML special characters are escaped.\n * Note that note all Markdown is supported and there are some limitations.\n *\n * + Blockquotes: Lazy blockquotes are not supported. Each line must be preceded\n * by >. Also nested blockquotes are not supported.\n * + lists: only simple lists are supported. Blockquotes, code blocks and other\n * block elements cannot be included.\n * + Html: Inline HTML is not supported. This is not safe when merging HTML\n * generated from Markdown into existing elements and so, with the exception of\n * HTML entities and <br>, all HTML is escaped.\n * Entities such as &amp;copy; and line breaks <br> will not be escaped.\n * + Reference links: These are not supported.\n * + Automatic links: Markdown uses less than and greater than characters to\n * surround automatic links. However, the greater than character is converted to\n * an HTML entity before parsing the Markdown. This means that <...> or &lt;...>\n * will be interpreted as automatic links. If you want to prevent the contents\n * being interpreted as an automatic link, use the &gt; entity for the closing\n * tag.\n *\n *\n * @param {string} data\n * @param {Object} options - additional processing options.\n * @param {Replacement[]} options.pre - an array of Replacement objects which\n * are applied before any other processing is applied\n * @param {Replacement[]} options.post - an array of Replacement objects\n * which are applied after the markdown replacements have been made.\n * @returns Resulting html.\n */\nexport function parseMarkdown(data, options) {\n  parsingWarden.clear(); // this shouldn't be necessary as the warden automatically clears on retrieval.\n  var result = data.replaceAll(/\\r/g, ''); // normalise line endings\n\n  result = processReplacements(result, securityReps);\n  if (options?.pre) {\n    result = processReplacements(result, options.pre);\n  }\n\n  result = processReplacements(result, htmlEscIgnoringBrReps);\n  result = processReplacements(result, markdownEscReps);\n  result = processReplacements(result, blockReps);\n  result = processReplacements(result, paragraphReps);\n  result = processReplacements(result, spanReps);\n  result = processReplacements(result, htmlCleanUpReps);\n\n  if (options?.post) {\n    result = processReplacements(result, options.post);\n  }\n  return parsingWarden.reinstate(result);\n}\n\n/**\n * Convert the Markdown data into HTML.\n * This is a stripped down version of parseMarkdown.\n *\n * Escaping takes place, but then only span replacements are processed.\n * @param {string} data\n */\nexport function parseMarkdownSpanOnly(data) {\n  parsingWarden.clear(); // this shouldn't be necessary as the warden automatically clears on retrieval.\n  var result = data.replaceAll(/\\r/g, ''); // normalise line endings\n  result = processReplacements(result, securityReps);\n  result = processReplacements(result, htmlEscIgnoringBrReps);\n  result = processReplacements(result, markdownEscReps);\n  result = processReplacements(result, spanReps);\n  result = processReplacements(result, htmlCleanUpReps);\n  return parsingWarden.reinstate(result);\n}\n\n/**\n * Escapes html. No markdown is processed.\n * @param {string} data\n * @returns {string}\n */\nexport function escapeHtml(data) {\n  data = processReplacements(data, securityReps);\n  return processReplacements(data, htmlEscAllReps);\n}\n\n/**\n * Convert html into plain text.\n * This is not used for sanitizing purposes. It is just used\n * @param {string} html\n * @returns {string} the plain text\n */\nexport function getPlainTextFromHtml(html) {\n  let plain = html.replace(/<[^>]*>/g, '').replace(/\\s+/g, ' ');\n  return decodeFromEntities(plain);\n}\n","/**\n * @file Simple protection from future parsing.\n *\n * @module utils\\text\\markdown\\parsingWarden\n */\n/**\n * license {@link https://opensource.org/license/mit/|MIT}\n * Copyright 2024 Steve Butler (henspace.com).\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the “Software”), to deal in\n * the Software without restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n * Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */\nimport { stringToBase64 } from './base64.js';\n\n/**\n * Class to protect values from future parsing.\n */\nexport class ParsingWarden {\n  #wards = new Map();\n  constructor() {}\n\n  /** Clear all the entries */\n  clear() {\n    this.#wards.clear();\n  }\n\n  /**\n   * Create a key code from the data.\n   * @param {string} data\n   * @returns {string} a unique key.\n   */\n  #createKeyCode(data) {\n    return stringToBase64(data).replace(/=/g, ':'); // == is markdown\n  }\n  /**\n   *\n   * @param {string} data - the data to guard\n   * @returns {string} the key. This can be used as the protected data. If data\n   * is empty, it is returned untouched.\n   */\n  protect(data) {\n    if (!data) {\n      return data; // nothing to protect\n    }\n    const key = `???${this.#wards.size}${this.#createKeyCode(data)}???`;\n    this.#wards.set(key, data);\n    return key;\n  }\n\n  /**\n   * Get the originally protected string. The protected value is removed.\n   * @returns {string} the originally protected value. If not found, the key is returned.\n   */\n  retrieve(key) {\n    const value = this.#wards.get(key);\n    this.#wards.delete(key);\n    if (!value) {\n      console.error(`Could not find ${key} in protected data.`);\n      return key;\n    } else {\n      return value;\n    }\n  }\n\n  /**\n   * Search for keys in the data and reinstate. Any retrieved values are removed.\n   * @param {string} data\n   * @returns {string}\n   */\n  reinstate(data) {\n    return data.replace(/[?]{3}\\d+[a-zA-Z0-9+/]+:{0,2}[?]{3}/g, (match) =>\n      this.retrieve(match)\n    );\n  }\n}\n","/**\n * @file Base64 routines\n *\n * @module utils\\text\\markdown\\base64\n */\n/**\n * license {@link https://opensource.org/license/mit/|MIT}\n * Copyright 2024 Steve Butler (henspace.com).\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the “Software”), to deal in\n * the Software without restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n * Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */\nimport { safeEncodeURIComponent } from '../safeEncoder.js';\n\n/**\n * Converts string to base64 representation. Note that the string is first encoded\n * so the base64 result represents the encoded version and not the original string.\n * @param {string} str - string to encode.\n * @returns {string}\n */\nexport function stringToBase64(str) {\n  return window.btoa(safeEncodeURIComponent(str));\n}\n\n/**\n * converts base64 string to a string.\n * It is assumed that the original string used to create the base64 version\n * was first encoded using safeEncodeURIComponent.\n * As such the resulting base64 conversion is decoded using\n * decodeURIComponent before returning.\n * @param {string} base64\n * @returns {string}\n */\nexport function base64ToString(base64) {\n  return decodeURIComponent(window.atob(base64));\n}\n","/**\n * @file Safe version of encode functions.\n *\n * @module utils\\text\\safeEncoder\n */\n/**\n * license {@link https://opensource.org/license/mit/|MIT}\n * Copyright 2024 Steve Butler (henspace.com).\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the “Software”), to deal in\n * the Software without restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n * Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */\n\n/**\n * Encode the uri. This just calls encodeURIComponent. If it fails, the string\n * will be converted using `toWellFormed()` to remove any lone surrogates.\n * The function `toWellFormed` is not called by default as it is expensive and\n * lone surrogates are unlikely to be encountered.\n * @param {string} uri\n * @returns {string}\n * @throws {URIError}\n */\nexport function safeEncodeURIComponent(uri) {\n  try {\n    return encodeURIComponent(uri);\n  } catch (error) {\n    console.error(error);\n    return encodeURIComponent(uri.toWellFormed());\n  }\n}\n","/**\n * @file Urls\n *\n * @module src/assets/urls.js\n */\n/**\n * license {@link https://opensource.org/license/mit/|MIT}\n * Copyright 2024 Steve Butler (henspace.com).\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the “Software”), to deal in\n * the Software without restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n * Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */\nimport textureMap from './images/dungeon.json';\n\n/**\n * Urls for dynamically loading resources @type {Object<string, URL>}\n */\nexport const AssetUrls = {\n  ABOUT_MD: new URL('./guides/about.md', import.meta.url),\n  ALMANAC_MAP: new Map([\n    ['ARMOUR', new URL('./almanacs/armour.txt', import.meta.url)],\n    ['ARTEFACTS', new URL('./almanacs/artefacts.txt', import.meta.url)],\n    ['MAGIC', new URL('./almanacs/magic.txt', import.meta.url)],\n    ['ENEMIES', new URL('./almanacs/monsters.txt', import.meta.url)],\n    ['HEROES', new URL('./almanacs/heroes.txt', import.meta.url)],\n    ['MONEY', new URL('./almanacs/money.txt', import.meta.url)],\n    ['TRADERS', new URL('./almanacs/traders.txt', import.meta.url)],\n    ['WEAPONS', new URL('./almanacs/weapons.txt', import.meta.url)],\n  ]),\n  DUNGEON_SCRIPT: new URL('./stories/dungeon_script.txt', import.meta.url),\n  HELP_MD: new URL('./guides/help.md', import.meta.url),\n  MUSIC: new URL(\n    './audio/do-alto-do-trono-da-desolacao-trimmed.mp3',\n    import.meta.url\n  ),\n  PRIVACY_MD: new URL('./guides/privacy.md', import.meta.url),\n  QUICK_START_MD: new URL('./guides/quickStart.md', import.meta.url),\n  SOUND_EFFECTS_MAP: new Map([\n    ['PUNCH', new URL('./audio/punch-trimmed.mp3', import.meta.url)],\n    [\n      'DOUBLE PUNCH',\n      new URL('./audio/punch-trimmed-double.mp3', import.meta.url),\n    ],\n    ['MISS', new URL('./audio/long-medium-swish-trimmed.mp3', import.meta.url)],\n    ['POISONED', new URL('./audio/bubbling-trimmed.mp3', import.meta.url)],\n    ['DIE', new URL('./audio/male-hurt-sound-trimmed.mp3', import.meta.url)],\n  ]),\n};\n\n/**\n * @type {{data: Object, textureUrl: URL}}\n */\nexport const SpriteSheet = {\n  data: textureMap,\n  textureUrl: new URL('./images/dungeon.png', import.meta.url),\n};\n","{\"frames\": [\r\n\r\n{\r\n\t\"filename\": \"acid00.png\",\r\n\t\"frame\": {\"x\":99,\"y\":1,\"w\":49,\"h\":48},\r\n\t\"rotated\": false,\r\n\t\"trimmed\": false,\r\n\t\"spriteSourceSize\": {\"x\":0,\"y\":0,\"w\":49,\"h\":48},\r\n\t\"sourceSize\": {\"w\":49,\"h\":48}\r\n},\r\n{\r\n\t\"filename\": \"axe.png\",\r\n\t\"frame\": {\"x\":100,\"y\":191,\"w\":42,\"h\":49},\r\n\t\"rotated\": false,\r\n\t\"trimmed\": true,\r\n\t\"spriteSourceSize\": {\"x\":3,\"y\":0,\"w\":42,\"h\":49},\r\n\t\"sourceSize\": {\"w\":48,\"h\":49}\r\n},\r\n{\r\n\t\"filename\": \"black_flask.png\",\r\n\t\"frame\": {\"x\":623,\"y\":202,\"w\":28,\"h\":46},\r\n\t\"rotated\": false,\r\n\t\"trimmed\": true,\r\n\t\"spriteSourceSize\": {\"x\":10,\"y\":1,\"w\":28,\"h\":46},\r\n\t\"sourceSize\": {\"w\":48,\"h\":48}\r\n},\r\n{\r\n\t\"filename\": \"blank.png\",\r\n\t\"frame\": {\"x\":96,\"y\":362,\"w\":3,\"h\":3},\r\n\t\"rotated\": false,\r\n\t\"trimmed\": true,\r\n\t\"spriteSourceSize\": {\"x\":0,\"y\":0,\"w\":3,\"h\":3},\r\n\t\"sourceSize\": {\"w\":48,\"h\":48}\r\n},\r\n{\r\n\t\"filename\": \"block.png\",\r\n\t\"frame\": {\"x\":1,\"y\":293,\"w\":48,\"h\":48},\r\n\t\"rotated\": false,\r\n\t\"trimmed\": false,\r\n\t\"spriteSourceSize\": {\"x\":0,\"y\":0,\"w\":48,\"h\":48},\r\n\t\"sourceSize\": {\"w\":48,\"h\":48}\r\n},\r\n{\r\n\t\"filename\": \"blood-splat-twice.png\",\r\n\t\"frame\": {\"x\":1,\"y\":1,\"w\":96,\"h\":94},\r\n\t\"rotated\": false,\r\n\t\"trimmed\": true,\r\n\t\"spriteSourceSize\": {\"x\":0,\"y\":1,\"w\":96,\"h\":94},\r\n\t\"sourceSize\": {\"w\":96,\"h\":96}\r\n},\r\n{\r\n\t\"filename\": \"blood-splat.png\",\r\n\t\"frame\": {\"x\":1,\"y\":97,\"w\":94,\"h\":92},\r\n\t\"rotated\": false,\r\n\t\"trimmed\": true,\r\n\t\"spriteSourceSize\": {\"x\":1,\"y\":4,\"w\":94,\"h\":92},\r\n\t\"sourceSize\": {\"w\":96,\"h\":96}\r\n},\r\n{\r\n\t\"filename\": \"blue_crystal.png\",\r\n\t\"frame\": {\"x\":429,\"y\":298,\"w\":42,\"h\":46},\r\n\t\"rotated\": false,\r\n\t\"trimmed\": true,\r\n\t\"spriteSourceSize\": {\"x\":3,\"y\":1,\"w\":42,\"h\":46},\r\n\t\"sourceSize\": {\"w\":48,\"h\":48}\r\n},\r\n{\r\n\t\"filename\": \"blue_flask.png\",\r\n\t\"frame\": {\"x\":186,\"y\":388,\"w\":28,\"h\":46},\r\n\t\"rotated\": false,\r\n\t\"trimmed\": true,\r\n\t\"spriteSourceSize\": {\"x\":10,\"y\":1,\"w\":28,\"h\":46},\r\n\t\"sourceSize\": {\"w\":48,\"h\":48}\r\n},\r\n{\r\n\t\"filename\": \"cantrip.png\",\r\n\t\"frame\": {\"x\":289,\"y\":201,\"w\":44,\"h\":46},\r\n\t\"rotated\": false,\r\n\t\"trimmed\": true,\r\n\t\"spriteSourceSize\": {\"x\":2,\"y\":1,\"w\":44,\"h\":46},\r\n\t\"sourceSize\": {\"w\":48,\"h\":48}\r\n},\r\n{\r\n\t\"filename\": \"coins.png\",\r\n\t\"frame\": {\"x\":1,\"y\":343,\"w\":47,\"h\":49},\r\n\t\"rotated\": false,\r\n\t\"trimmed\": true,\r\n\t\"spriteSourceSize\": {\"x\":1,\"y\":0,\"w\":47,\"h\":49},\r\n\t\"sourceSize\": {\"w\":48,\"h\":49}\r\n},\r\n{\r\n\t\"filename\": \"copper_coins.png\",\r\n\t\"frame\": {\"x\":383,\"y\":297,\"w\":44,\"h\":46},\r\n\t\"rotated\": false,\r\n\t\"trimmed\": true,\r\n\t\"spriteSourceSize\": {\"x\":2,\"y\":1,\"w\":44,\"h\":46},\r\n\t\"sourceSize\": {\"w\":48,\"h\":49}\r\n},\r\n{\r\n\t\"filename\": \"door-B.png\",\r\n\t\"frame\": {\"x\":303,\"y\":1,\"w\":48,\"h\":48},\r\n\t\"rotated\": false,\r\n\t\"trimmed\": false,\r\n\t\"spriteSourceSize\": {\"x\":0,\"y\":0,\"w\":48,\"h\":48},\r\n\t\"sourceSize\": {\"w\":48,\"h\":48}\r\n},\r\n{\r\n\t\"filename\": \"door-L.png\",\r\n\t\"frame\": {\"x\":831,\"y\":251,\"w\":33,\"h\":48},\r\n\t\"rotated\": false,\r\n\t\"trimmed\": true,\r\n\t\"spriteSourceSize\": {\"x\":15,\"y\":0,\"w\":33,\"h\":48},\r\n\t\"sourceSize\": {\"w\":48,\"h\":48}\r\n},\r\n{\r\n\t\"filename\": \"door-R.png\",\r\n\t\"frame\": {\"x\":429,\"y\":248,\"w\":33,\"h\":48},\r\n\t\"rotated\": false,\r\n\t\"trimmed\": true,\r\n\t\"spriteSourceSize\": {\"x\":0,\"y\":0,\"w\":33,\"h\":48},\r\n\t\"sourceSize\": {\"w\":48,\"h\":48}\r\n},\r\n{\r\n\t\"filename\": \"door-T.png\",\r\n\t\"frame\": {\"x\":353,\"y\":1,\"w\":48,\"h\":48},\r\n\t\"rotated\": false,\r\n\t\"trimmed\": false,\r\n\t\"spriteSourceSize\": {\"x\":0,\"y\":0,\"w\":48,\"h\":48},\r\n\t\"sourceSize\": {\"w\":48,\"h\":48}\r\n},\r\n{\r\n\t\"filename\": \"engraved_pillar.png\",\r\n\t\"frame\": {\"x\":703,\"y\":246,\"w\":44,\"h\":42},\r\n\t\"rotated\": false,\r\n\t\"trimmed\": true,\r\n\t\"spriteSourceSize\": {\"x\":2,\"y\":3,\"w\":44,\"h\":42},\r\n\t\"sourceSize\": {\"w\":48,\"h\":48}\r\n},\r\n{\r\n\t\"filename\": \"fire00.png\",\r\n\t\"frame\": {\"x\":403,\"y\":1,\"w\":48,\"h\":48},\r\n\t\"rotated\": false,\r\n\t\"trimmed\": false,\r\n\t\"spriteSourceSize\": {\"x\":0,\"y\":0,\"w\":48,\"h\":48},\r\n\t\"sourceSize\": {\"w\":48,\"h\":48}\r\n},\r\n{\r\n\t\"filename\": \"fire01.png\",\r\n\t\"frame\": {\"x\":1,\"y\":191,\"w\":48,\"h\":49},\r\n\t\"rotated\": false,\r\n\t\"trimmed\": false,\r\n\t\"spriteSourceSize\": {\"x\":0,\"y\":0,\"w\":48,\"h\":49},\r\n\t\"sourceSize\": {\"w\":48,\"h\":49}\r\n},\r\n{\r\n\t\"filename\": \"floor-SBE.png\",\r\n\t\"frame\": {\"x\":453,\"y\":1,\"w\":48,\"h\":48},\r\n\t\"rotated\": false,\r\n\t\"trimmed\": false,\r\n\t\"spriteSourceSize\": {\"x\":0,\"y\":0,\"w\":48,\"h\":48},\r\n\t\"sourceSize\": {\"w\":48,\"h\":48}\r\n},\r\n{\r\n\t\"filename\": \"floor-SBW.png\",\r\n\t\"frame\": {\"x\":503,\"y\":1,\"w\":48,\"h\":48},\r\n\t\"rotated\": false,\r\n\t\"trimmed\": false,\r\n\t\"spriteSourceSize\": {\"x\":0,\"y\":0,\"w\":48,\"h\":48},\r\n\t\"sourceSize\": {\"w\":48,\"h\":48}\r\n},\r\n{\r\n\t\"filename\": \"floor.png\",\r\n\t\"frame\": {\"x\":553,\"y\":1,\"w\":48,\"h\":48},\r\n\t\"rotated\": false,\r\n\t\"trimmed\": false,\r\n\t\"spriteSourceSize\": {\"x\":0,\"y\":0,\"w\":48,\"h\":48},\r\n\t\"sourceSize\": {\"w\":48,\"h\":48}\r\n},\r\n{\r\n\t\"filename\": \"floor2-SBE.png\",\r\n\t\"frame\": {\"x\":603,\"y\":1,\"w\":48,\"h\":48},\r\n\t\"rotated\": false,\r\n\t\"trimmed\": false,\r\n\t\"spriteSourceSize\": {\"x\":0,\"y\":0,\"w\":48,\"h\":48},\r\n\t\"sourceSize\": {\"w\":48,\"h\":48}\r\n},\r\n{\r\n\t\"filename\": \"floor2-SBW.png\",\r\n\t\"frame\": {\"x\":653,\"y\":1,\"w\":48,\"h\":48},\r\n\t\"rotated\": false,\r\n\t\"trimmed\": false,\r\n\t\"spriteSourceSize\": {\"x\":0,\"y\":0,\"w\":48,\"h\":48},\r\n\t\"sourceSize\": {\"w\":48,\"h\":48}\r\n},\r\n{\r\n\t\"filename\": \"floor2.png\",\r\n\t\"frame\": {\"x\":703,\"y\":1,\"w\":48,\"h\":48},\r\n\t\"rotated\": false,\r\n\t\"trimmed\": false,\r\n\t\"spriteSourceSize\": {\"x\":0,\"y\":0,\"w\":48,\"h\":48},\r\n\t\"sourceSize\": {\"w\":48,\"h\":48}\r\n},\r\n{\r\n\t\"filename\": \"goblin-dead00.png\",\r\n\t\"frame\": {\"x\":96,\"y\":467,\"w\":42,\"h\":30},\r\n\t\"rotated\": false,\r\n\t\"trimmed\": true,\r\n\t\"spriteSourceSize\": {\"x\":3,\"y\":9,\"w\":42,\"h\":30},\r\n\t\"sourceSize\": {\"w\":48,\"h\":48}\r\n},\r\n{\r\n\t\"filename\": \"goblin-idle00.png\",\r\n\t\"frame\": {\"x\":216,\"y\":394,\"w\":39,\"h\":40},\r\n\t\"rotated\": false,\r\n\t\"trimmed\": true,\r\n\t\"spriteSourceSize\": {\"x\":4,\"y\":4,\"w\":39,\"h\":40},\r\n\t\"sourceSize\": {\"w\":48,\"h\":48}\r\n},\r\n{\r\n\t\"filename\": \"goblin-idle01.png\",\r\n\t\"frame\": {\"x\":504,\"y\":387,\"w\":40,\"h\":41},\r\n\t\"rotated\": false,\r\n\t\"trimmed\": true,\r\n\t\"spriteSourceSize\": {\"x\":4,\"y\":4,\"w\":40,\"h\":41},\r\n\t\"sourceSize\": {\"w\":48,\"h\":48}\r\n},\r\n{\r\n\t\"filename\": \"goblin-idle02.png\",\r\n\t\"frame\": {\"x\":652,\"y\":403,\"w\":39,\"h\":40},\r\n\t\"rotated\": false,\r\n\t\"trimmed\": true,\r\n\t\"spriteSourceSize\": {\"x\":4,\"y\":4,\"w\":39,\"h\":40},\r\n\t\"sourceSize\": {\"w\":48,\"h\":48}\r\n},\r\n{\r\n\t\"filename\": \"goblin-idle03.png\",\r\n\t\"frame\": {\"x\":693,\"y\":413,\"w\":37,\"h\":40},\r\n\t\"rotated\": false,\r\n\t\"trimmed\": true,\r\n\t\"spriteSourceSize\": {\"x\":5,\"y\":4,\"w\":37,\"h\":40},\r\n\t\"sourceSize\": {\"w\":48,\"h\":48}\r\n},\r\n{\r\n\t\"filename\": \"goblin-walk-e00.png\",\r\n\t\"frame\": {\"x\":726,\"y\":455,\"w\":31,\"h\":41},\r\n\t\"rotated\": false,\r\n\t\"trimmed\": true,\r\n\t\"spriteSourceSize\": {\"x\":8,\"y\":4,\"w\":31,\"h\":41},\r\n\t\"sourceSize\": {\"w\":48,\"h\":48}\r\n},\r\n{\r\n\t\"filename\": \"goblin-walk-n00.png\",\r\n\t\"frame\": {\"x\":748,\"y\":297,\"w\":35,\"h\":40},\r\n\t\"rotated\": false,\r\n\t\"trimmed\": true,\r\n\t\"spriteSourceSize\": {\"x\":7,\"y\":4,\"w\":35,\"h\":40},\r\n\t\"sourceSize\": {\"w\":48,\"h\":48}\r\n},\r\n{\r\n\t\"filename\": \"goblin-walk-s00.png\",\r\n\t\"frame\": {\"x\":648,\"y\":445,\"w\":37,\"h\":42},\r\n\t\"rotated\": false,\r\n\t\"trimmed\": true,\r\n\t\"spriteSourceSize\": {\"x\":5,\"y\":3,\"w\":37,\"h\":42},\r\n\t\"sourceSize\": {\"w\":48,\"h\":48}\r\n},\r\n{\r\n\t\"filename\": \"goblin-walk-w00.png\",\r\n\t\"frame\": {\"x\":687,\"y\":455,\"w\":37,\"h\":42},\r\n\t\"rotated\": false,\r\n\t\"trimmed\": true,\r\n\t\"spriteSourceSize\": {\"x\":5,\"y\":3,\"w\":37,\"h\":42},\r\n\t\"sourceSize\": {\"w\":48,\"h\":48}\r\n},\r\n{\r\n\t\"filename\": \"goblin.png\",\r\n\t\"frame\": {\"x\":1,\"y\":445,\"w\":47,\"h\":48},\r\n\t\"rotated\": false,\r\n\t\"trimmed\": true,\r\n\t\"spriteSourceSize\": {\"x\":1,\"y\":0,\"w\":47,\"h\":48},\r\n\t\"sourceSize\": {\"w\":48,\"h\":48}\r\n},\r\n{\r\n\t\"filename\": \"gold_coins.png\",\r\n\t\"frame\": {\"x\":1,\"y\":394,\"w\":47,\"h\":49},\r\n\t\"rotated\": false,\r\n\t\"trimmed\": true,\r\n\t\"spriteSourceSize\": {\"x\":1,\"y\":0,\"w\":47,\"h\":49},\r\n\t\"sourceSize\": {\"w\":48,\"h\":49}\r\n},\r\n{\r\n\t\"filename\": \"helmet.png\",\r\n\t\"frame\": {\"x\":192,\"y\":341,\"w\":38,\"h\":45},\r\n\t\"rotated\": false,\r\n\t\"trimmed\": true,\r\n\t\"spriteSourceSize\": {\"x\":5,\"y\":1,\"w\":38,\"h\":45},\r\n\t\"sourceSize\": {\"w\":48,\"h\":49}\r\n},\r\n{\r\n\t\"filename\": \"hero-dead00.png\",\r\n\t\"frame\": {\"x\":653,\"y\":246,\"w\":48,\"h\":33},\r\n\t\"rotated\": false,\r\n\t\"trimmed\": true,\r\n\t\"spriteSourceSize\": {\"x\":0,\"y\":7,\"w\":48,\"h\":33},\r\n\t\"sourceSize\": {\"w\":48,\"h\":48}\r\n},\r\n{\r\n\t\"filename\": \"hero-idle00.png\",\r\n\t\"frame\": {\"x\":735,\"y\":101,\"w\":46,\"h\":47},\r\n\t\"rotated\": false,\r\n\t\"trimmed\": true,\r\n\t\"spriteSourceSize\": {\"x\":1,\"y\":1,\"w\":46,\"h\":47},\r\n\t\"sourceSize\": {\"w\":48,\"h\":48}\r\n},\r\n{\r\n\t\"filename\": \"hero-idle01.png\",\r\n\t\"frame\": {\"x\":753,\"y\":1,\"w\":48,\"h\":48},\r\n\t\"rotated\": false,\r\n\t\"trimmed\": false,\r\n\t\"spriteSourceSize\": {\"x\":0,\"y\":0,\"w\":48,\"h\":48},\r\n\t\"sourceSize\": {\"w\":48,\"h\":48}\r\n},\r\n{\r\n\t\"filename\": \"hero-idle02.png\",\r\n\t\"frame\": {\"x\":783,\"y\":101,\"w\":46,\"h\":47},\r\n\t\"rotated\": false,\r\n\t\"trimmed\": true,\r\n\t\"spriteSourceSize\": {\"x\":1,\"y\":1,\"w\":46,\"h\":47},\r\n\t\"sourceSize\": {\"w\":48,\"h\":48}\r\n},\r\n{\r\n\t\"filename\": \"hero-idle03.png\",\r\n\t\"frame\": {\"x\":51,\"y\":191,\"w\":47,\"h\":48},\r\n\t\"rotated\": false,\r\n\t\"trimmed\": true,\r\n\t\"spriteSourceSize\": {\"x\":1,\"y\":0,\"w\":47,\"h\":48},\r\n\t\"sourceSize\": {\"w\":48,\"h\":48}\r\n},\r\n{\r\n\t\"filename\": \"hero-walk-e00.png\",\r\n\t\"frame\": {\"x\":749,\"y\":198,\"w\":34,\"h\":47},\r\n\t\"rotated\": false,\r\n\t\"trimmed\": true,\r\n\t\"spriteSourceSize\": {\"x\":10,\"y\":1,\"w\":34,\"h\":47},\r\n\t\"sourceSize\": {\"w\":48,\"h\":48}\r\n},\r\n{\r\n\t\"filename\": \"hero-walk-e01.png\",\r\n\t\"frame\": {\"x\":831,\"y\":152,\"w\":35,\"h\":47},\r\n\t\"rotated\": false,\r\n\t\"trimmed\": true,\r\n\t\"spriteSourceSize\": {\"x\":10,\"y\":1,\"w\":35,\"h\":47},\r\n\t\"sourceSize\": {\"w\":48,\"h\":48}\r\n},\r\n{\r\n\t\"filename\": \"hero-walk-e02.png\",\r\n\t\"frame\": {\"x\":184,\"y\":436,\"w\":39,\"h\":48},\r\n\t\"rotated\": false,\r\n\t\"trimmed\": true,\r\n\t\"spriteSourceSize\": {\"x\":9,\"y\":0,\"w\":39,\"h\":48},\r\n\t\"sourceSize\": {\"w\":48,\"h\":48}\r\n},\r\n{\r\n\t\"filename\": \"hero-walk-e03.png\",\r\n\t\"frame\": {\"x\":225,\"y\":436,\"w\":30,\"h\":48},\r\n\t\"rotated\": false,\r\n\t\"trimmed\": true,\r\n\t\"spriteSourceSize\": {\"x\":10,\"y\":0,\"w\":30,\"h\":48},\r\n\t\"sourceSize\": {\"w\":48,\"h\":48}\r\n},\r\n{\r\n\t\"filename\": \"hero-walk-n00.png\",\r\n\t\"frame\": {\"x\":100,\"y\":292,\"w\":46,\"h\":47},\r\n\t\"rotated\": false,\r\n\t\"trimmed\": true,\r\n\t\"spriteSourceSize\": {\"x\":2,\"y\":1,\"w\":46,\"h\":47},\r\n\t\"sourceSize\": {\"w\":48,\"h\":48}\r\n},\r\n{\r\n\t\"filename\": \"hero-walk-n01.png\",\r\n\t\"frame\": {\"x\":51,\"y\":241,\"w\":47,\"h\":48},\r\n\t\"rotated\": false,\r\n\t\"trimmed\": true,\r\n\t\"spriteSourceSize\": {\"x\":1,\"y\":0,\"w\":47,\"h\":48},\r\n\t\"sourceSize\": {\"w\":48,\"h\":48}\r\n},\r\n{\r\n\t\"filename\": \"hero-walk-n02.png\",\r\n\t\"frame\": {\"x\":100,\"y\":292,\"w\":46,\"h\":47},\r\n\t\"rotated\": false,\r\n\t\"trimmed\": true,\r\n\t\"spriteSourceSize\": {\"x\":2,\"y\":1,\"w\":46,\"h\":47},\r\n\t\"sourceSize\": {\"w\":48,\"h\":48}\r\n},\r\n{\r\n\t\"filename\": \"hero-walk-n03.png\",\r\n\t\"frame\": {\"x\":363,\"y\":345,\"w\":40,\"h\":48},\r\n\t\"rotated\": false,\r\n\t\"trimmed\": true,\r\n\t\"spriteSourceSize\": {\"x\":8,\"y\":0,\"w\":40,\"h\":48},\r\n\t\"sourceSize\": {\"w\":48,\"h\":48}\r\n},\r\n{\r\n\t\"filename\": \"hero-walk-s00.png\",\r\n\t\"frame\": {\"x\":335,\"y\":151,\"w\":46,\"h\":47},\r\n\t\"rotated\": false,\r\n\t\"trimmed\": true,\r\n\t\"spriteSourceSize\": {\"x\":1,\"y\":1,\"w\":46,\"h\":47},\r\n\t\"sourceSize\": {\"w\":48,\"h\":48}\r\n},\r\n{\r\n\t\"filename\": \"hero-walk-s01.png\",\r\n\t\"frame\": {\"x\":803,\"y\":1,\"w\":48,\"h\":48},\r\n\t\"rotated\": false,\r\n\t\"trimmed\": false,\r\n\t\"spriteSourceSize\": {\"x\":0,\"y\":0,\"w\":48,\"h\":48},\r\n\t\"sourceSize\": {\"w\":48,\"h\":48}\r\n},\r\n{\r\n\t\"filename\": \"hero-walk-s02.png\",\r\n\t\"frame\": {\"x\":335,\"y\":151,\"w\":46,\"h\":47},\r\n\t\"rotated\": false,\r\n\t\"trimmed\": true,\r\n\t\"spriteSourceSize\": {\"x\":1,\"y\":1,\"w\":46,\"h\":47},\r\n\t\"sourceSize\": {\"w\":48,\"h\":48}\r\n},\r\n{\r\n\t\"filename\": \"hero-walk-s03.png\",\r\n\t\"frame\": {\"x\":100,\"y\":242,\"w\":45,\"h\":48},\r\n\t\"rotated\": false,\r\n\t\"trimmed\": true,\r\n\t\"spriteSourceSize\": {\"x\":3,\"y\":0,\"w\":45,\"h\":48},\r\n\t\"sourceSize\": {\"w\":48,\"h\":48}\r\n},\r\n{\r\n\t\"filename\": \"hero-walk-w00.png\",\r\n\t\"frame\": {\"x\":343,\"y\":395,\"w\":39,\"h\":48},\r\n\t\"rotated\": false,\r\n\t\"trimmed\": true,\r\n\t\"spriteSourceSize\": {\"x\":1,\"y\":0,\"w\":39,\"h\":48},\r\n\t\"sourceSize\": {\"w\":48,\"h\":48}\r\n},\r\n{\r\n\t\"filename\": \"hero-walk-w01.png\",\r\n\t\"frame\": {\"x\":147,\"y\":241,\"w\":43,\"h\":48},\r\n\t\"rotated\": false,\r\n\t\"trimmed\": true,\r\n\t\"spriteSourceSize\": {\"x\":0,\"y\":0,\"w\":43,\"h\":48},\r\n\t\"sourceSize\": {\"w\":48,\"h\":48}\r\n},\r\n{\r\n\t\"filename\": \"hero-walk-w02.png\",\r\n\t\"frame\": {\"x\":299,\"y\":444,\"w\":39,\"h\":47},\r\n\t\"rotated\": false,\r\n\t\"trimmed\": true,\r\n\t\"spriteSourceSize\": {\"x\":1,\"y\":1,\"w\":39,\"h\":47},\r\n\t\"sourceSize\": {\"w\":48,\"h\":48}\r\n},\r\n{\r\n\t\"filename\": \"hero-walk-w03.png\",\r\n\t\"frame\": {\"x\":569,\"y\":295,\"w\":37,\"h\":48},\r\n\t\"rotated\": false,\r\n\t\"trimmed\": true,\r\n\t\"spriteSourceSize\": {\"x\":3,\"y\":0,\"w\":37,\"h\":48},\r\n\t\"sourceSize\": {\"w\":48,\"h\":48}\r\n},\r\n{\r\n\t\"filename\": \"hero.png\",\r\n\t\"frame\": {\"x\":383,\"y\":151,\"w\":46,\"h\":47},\r\n\t\"rotated\": false,\r\n\t\"trimmed\": true,\r\n\t\"spriteSourceSize\": {\"x\":1,\"y\":1,\"w\":46,\"h\":47},\r\n\t\"sourceSize\": {\"w\":48,\"h\":48}\r\n},\r\n{\r\n\t\"filename\": \"hidden-artefact-dead00.png\",\r\n\t\"frame\": {\"x\":148,\"y\":341,\"w\":42,\"h\":45},\r\n\t\"rotated\": false,\r\n\t\"trimmed\": true,\r\n\t\"spriteSourceSize\": {\"x\":1,\"y\":0,\"w\":42,\"h\":45},\r\n\t\"sourceSize\": {\"w\":48,\"h\":48}\r\n},\r\n{\r\n\t\"filename\": \"hidden-artefact-idle00.png\",\r\n\t\"frame\": {\"x\":142,\"y\":388,\"w\":42,\"h\":44},\r\n\t\"rotated\": false,\r\n\t\"trimmed\": true,\r\n\t\"spriteSourceSize\": {\"x\":3,\"y\":2,\"w\":42,\"h\":44},\r\n\t\"sourceSize\": {\"w\":48,\"h\":48}\r\n},\r\n{\r\n\t\"filename\": \"hidden-artefact.png\",\r\n\t\"frame\": {\"x\":142,\"y\":388,\"w\":42,\"h\":44},\r\n\t\"rotated\": false,\r\n\t\"trimmed\": true,\r\n\t\"spriteSourceSize\": {\"x\":3,\"y\":2,\"w\":42,\"h\":44},\r\n\t\"sourceSize\": {\"w\":48,\"h\":48}\r\n},\r\n{\r\n\t\"filename\": \"hud-arrow-down00.png\",\r\n\t\"frame\": {\"x\":431,\"y\":151,\"w\":46,\"h\":46},\r\n\t\"rotated\": false,\r\n\t\"trimmed\": true,\r\n\t\"spriteSourceSize\": {\"x\":1,\"y\":1,\"w\":46,\"h\":46},\r\n\t\"sourceSize\": {\"w\":48,\"h\":48}\r\n},\r\n{\r\n\t\"filename\": \"hud-arrow-down01.png\",\r\n\t\"frame\": {\"x\":479,\"y\":151,\"w\":46,\"h\":46},\r\n\t\"rotated\": false,\r\n\t\"trimmed\": true,\r\n\t\"spriteSourceSize\": {\"x\":1,\"y\":1,\"w\":46,\"h\":46},\r\n\t\"sourceSize\": {\"w\":48,\"h\":48}\r\n},\r\n{\r\n\t\"filename\": \"hud-arrow-left00.png\",\r\n\t\"frame\": {\"x\":527,\"y\":151,\"w\":46,\"h\":46},\r\n\t\"rotated\": false,\r\n\t\"trimmed\": true,\r\n\t\"spriteSourceSize\": {\"x\":1,\"y\":1,\"w\":46,\"h\":46},\r\n\t\"sourceSize\": {\"w\":48,\"h\":48}\r\n},\r\n{\r\n\t\"filename\": \"hud-arrow-left01.png\",\r\n\t\"frame\": {\"x\":575,\"y\":151,\"w\":46,\"h\":46},\r\n\t\"rotated\": false,\r\n\t\"trimmed\": true,\r\n\t\"spriteSourceSize\": {\"x\":1,\"y\":1,\"w\":46,\"h\":46},\r\n\t\"sourceSize\": {\"w\":48,\"h\":48}\r\n},\r\n{\r\n\t\"filename\": \"hud-arrow-right00.png\",\r\n\t\"frame\": {\"x\":241,\"y\":201,\"w\":46,\"h\":46},\r\n\t\"rotated\": false,\r\n\t\"trimmed\": true,\r\n\t\"spriteSourceSize\": {\"x\":1,\"y\":1,\"w\":46,\"h\":46},\r\n\t\"sourceSize\": {\"w\":48,\"h\":48}\r\n},\r\n{\r\n\t\"filename\": \"hud-arrow-right01.png\",\r\n\t\"frame\": {\"x\":335,\"y\":200,\"w\":46,\"h\":46},\r\n\t\"rotated\": false,\r\n\t\"trimmed\": true,\r\n\t\"spriteSourceSize\": {\"x\":1,\"y\":1,\"w\":46,\"h\":46},\r\n\t\"sourceSize\": {\"w\":48,\"h\":48}\r\n},\r\n{\r\n\t\"filename\": \"hud-arrow-up00.png\",\r\n\t\"frame\": {\"x\":383,\"y\":200,\"w\":46,\"h\":46},\r\n\t\"rotated\": false,\r\n\t\"trimmed\": true,\r\n\t\"spriteSourceSize\": {\"x\":1,\"y\":1,\"w\":46,\"h\":46},\r\n\t\"sourceSize\": {\"w\":48,\"h\":48}\r\n},\r\n{\r\n\t\"filename\": \"hud-arrow-up01.png\",\r\n\t\"frame\": {\"x\":431,\"y\":199,\"w\":46,\"h\":46},\r\n\t\"rotated\": false,\r\n\t\"trimmed\": true,\r\n\t\"spriteSourceSize\": {\"x\":1,\"y\":1,\"w\":46,\"h\":46},\r\n\t\"sourceSize\": {\"w\":48,\"h\":48}\r\n},\r\n{\r\n\t\"filename\": \"hud-auto-centre00.png\",\r\n\t\"frame\": {\"x\":479,\"y\":199,\"w\":46,\"h\":46},\r\n\t\"rotated\": false,\r\n\t\"trimmed\": true,\r\n\t\"spriteSourceSize\": {\"x\":1,\"y\":1,\"w\":46,\"h\":46},\r\n\t\"sourceSize\": {\"w\":48,\"h\":48}\r\n},\r\n{\r\n\t\"filename\": \"hud-auto-centre01.png\",\r\n\t\"frame\": {\"x\":527,\"y\":199,\"w\":46,\"h\":46},\r\n\t\"rotated\": false,\r\n\t\"trimmed\": true,\r\n\t\"spriteSourceSize\": {\"x\":1,\"y\":1,\"w\":46,\"h\":46},\r\n\t\"sourceSize\": {\"w\":48,\"h\":48}\r\n},\r\n{\r\n\t\"filename\": \"hud-fullscreen00.png\",\r\n\t\"frame\": {\"x\":97,\"y\":99,\"w\":48,\"h\":48},\r\n\t\"rotated\": false,\r\n\t\"trimmed\": false,\r\n\t\"spriteSourceSize\": {\"x\":0,\"y\":0,\"w\":48,\"h\":48},\r\n\t\"sourceSize\": {\"w\":48,\"h\":48}\r\n},\r\n{\r\n\t\"filename\": \"hud-fullscreen01.png\",\r\n\t\"frame\": {\"x\":575,\"y\":199,\"w\":46,\"h\":46},\r\n\t\"rotated\": false,\r\n\t\"trimmed\": true,\r\n\t\"spriteSourceSize\": {\"x\":1,\"y\":1,\"w\":46,\"h\":46},\r\n\t\"sourceSize\": {\"w\":48,\"h\":48}\r\n},\r\n{\r\n\t\"filename\": \"iron_rations.png\",\r\n\t\"frame\": {\"x\":702,\"y\":333,\"w\":44,\"h\":36},\r\n\t\"rotated\": false,\r\n\t\"trimmed\": true,\r\n\t\"spriteSourceSize\": {\"x\":2,\"y\":7,\"w\":44,\"h\":36},\r\n\t\"sourceSize\": {\"w\":49,\"h\":49}\r\n},\r\n{\r\n\t\"filename\": \"miss.png\",\r\n\t\"frame\": {\"x\":608,\"y\":299,\"w\":44,\"h\":44},\r\n\t\"rotated\": false,\r\n\t\"trimmed\": true,\r\n\t\"spriteSourceSize\": {\"x\":2,\"y\":2,\"w\":44,\"h\":44},\r\n\t\"sourceSize\": {\"w\":48,\"h\":48}\r\n},\r\n{\r\n\t\"filename\": \"orc-dead00.png\",\r\n\t\"frame\": {\"x\":473,\"y\":343,\"w\":48,\"h\":34},\r\n\t\"rotated\": false,\r\n\t\"trimmed\": true,\r\n\t\"spriteSourceSize\": {\"x\":0,\"y\":11,\"w\":48,\"h\":34},\r\n\t\"sourceSize\": {\"w\":48,\"h\":48}\r\n},\r\n{\r\n\t\"filename\": \"orc-idle00.png\",\r\n\t\"frame\": {\"x\":51,\"y\":291,\"w\":47,\"h\":48},\r\n\t\"rotated\": false,\r\n\t\"trimmed\": true,\r\n\t\"spriteSourceSize\": {\"x\":1,\"y\":0,\"w\":47,\"h\":48},\r\n\t\"sourceSize\": {\"w\":48,\"h\":48}\r\n},\r\n{\r\n\t\"filename\": \"orc-idle01.png\",\r\n\t\"frame\": {\"x\":197,\"y\":101,\"w\":47,\"h\":48},\r\n\t\"rotated\": false,\r\n\t\"trimmed\": true,\r\n\t\"spriteSourceSize\": {\"x\":0,\"y\":0,\"w\":47,\"h\":48},\r\n\t\"sourceSize\": {\"w\":48,\"h\":48}\r\n},\r\n{\r\n\t\"filename\": \"orc-idle02.png\",\r\n\t\"frame\": {\"x\":246,\"y\":101,\"w\":47,\"h\":48},\r\n\t\"rotated\": false,\r\n\t\"trimmed\": true,\r\n\t\"spriteSourceSize\": {\"x\":1,\"y\":0,\"w\":47,\"h\":48},\r\n\t\"sourceSize\": {\"w\":48,\"h\":48}\r\n},\r\n{\r\n\t\"filename\": \"orc-idle03.png\",\r\n\t\"frame\": {\"x\":295,\"y\":101,\"w\":47,\"h\":48},\r\n\t\"rotated\": false,\r\n\t\"trimmed\": true,\r\n\t\"spriteSourceSize\": {\"x\":1,\"y\":0,\"w\":47,\"h\":48},\r\n\t\"sourceSize\": {\"w\":48,\"h\":48}\r\n},\r\n{\r\n\t\"filename\": \"orc-walk-e00.png\",\r\n\t\"frame\": {\"x\":384,\"y\":395,\"w\":38,\"h\":48},\r\n\t\"rotated\": false,\r\n\t\"trimmed\": true,\r\n\t\"spriteSourceSize\": {\"x\":9,\"y\":0,\"w\":38,\"h\":48},\r\n\t\"sourceSize\": {\"w\":48,\"h\":48}\r\n},\r\n{\r\n\t\"filename\": \"orc-walk-e01.png\",\r\n\t\"frame\": {\"x\":831,\"y\":102,\"w\":36,\"h\":48},\r\n\t\"rotated\": false,\r\n\t\"trimmed\": true,\r\n\t\"spriteSourceSize\": {\"x\":9,\"y\":0,\"w\":36,\"h\":48},\r\n\t\"sourceSize\": {\"w\":48,\"h\":48}\r\n},\r\n{\r\n\t\"filename\": \"orc-walk-e02.png\",\r\n\t\"frame\": {\"x\":831,\"y\":301,\"w\":33,\"h\":48},\r\n\t\"rotated\": false,\r\n\t\"trimmed\": true,\r\n\t\"spriteSourceSize\": {\"x\":9,\"y\":0,\"w\":33,\"h\":48},\r\n\t\"sourceSize\": {\"w\":48,\"h\":48}\r\n},\r\n{\r\n\t\"filename\": \"orc-walk-e03.png\",\r\n\t\"frame\": {\"x\":340,\"y\":445,\"w\":39,\"h\":48},\r\n\t\"rotated\": false,\r\n\t\"trimmed\": true,\r\n\t\"spriteSourceSize\": {\"x\":9,\"y\":0,\"w\":39,\"h\":48},\r\n\t\"sourceSize\": {\"w\":48,\"h\":48}\r\n},\r\n{\r\n\t\"filename\": \"orc-walk-n00.png\",\r\n\t\"frame\": {\"x\":144,\"y\":191,\"w\":45,\"h\":48},\r\n\t\"rotated\": false,\r\n\t\"trimmed\": true,\r\n\t\"spriteSourceSize\": {\"x\":2,\"y\":0,\"w\":45,\"h\":48},\r\n\t\"sourceSize\": {\"w\":48,\"h\":48}\r\n},\r\n{\r\n\t\"filename\": \"orc-walk-n01.png\",\r\n\t\"frame\": {\"x\":344,\"y\":101,\"w\":47,\"h\":48},\r\n\t\"rotated\": false,\r\n\t\"trimmed\": true,\r\n\t\"spriteSourceSize\": {\"x\":1,\"y\":0,\"w\":47,\"h\":48},\r\n\t\"sourceSize\": {\"w\":48,\"h\":48}\r\n},\r\n{\r\n\t\"filename\": \"orc-walk-n02.png\",\r\n\t\"frame\": {\"x\":589,\"y\":101,\"w\":46,\"h\":48},\r\n\t\"rotated\": false,\r\n\t\"trimmed\": true,\r\n\t\"spriteSourceSize\": {\"x\":2,\"y\":0,\"w\":46,\"h\":48},\r\n\t\"sourceSize\": {\"w\":48,\"h\":48}\r\n},\r\n{\r\n\t\"filename\": \"orc-walk-n03.png\",\r\n\t\"frame\": {\"x\":257,\"y\":442,\"w\":40,\"h\":48},\r\n\t\"rotated\": false,\r\n\t\"trimmed\": true,\r\n\t\"spriteSourceSize\": {\"x\":8,\"y\":0,\"w\":40,\"h\":48},\r\n\t\"sourceSize\": {\"w\":48,\"h\":48}\r\n},\r\n{\r\n\t\"filename\": \"orc-walk-s00.png\",\r\n\t\"frame\": {\"x\":637,\"y\":101,\"w\":47,\"h\":47},\r\n\t\"rotated\": false,\r\n\t\"trimmed\": true,\r\n\t\"spriteSourceSize\": {\"x\":1,\"y\":1,\"w\":47,\"h\":47},\r\n\t\"sourceSize\": {\"w\":48,\"h\":48}\r\n},\r\n{\r\n\t\"filename\": \"orc-walk-s01.png\",\r\n\t\"frame\": {\"x\":393,\"y\":101,\"w\":47,\"h\":48},\r\n\t\"rotated\": false,\r\n\t\"trimmed\": true,\r\n\t\"spriteSourceSize\": {\"x\":0,\"y\":0,\"w\":47,\"h\":48},\r\n\t\"sourceSize\": {\"w\":48,\"h\":48}\r\n},\r\n{\r\n\t\"filename\": \"orc-walk-s02.png\",\r\n\t\"frame\": {\"x\":637,\"y\":101,\"w\":47,\"h\":47},\r\n\t\"rotated\": false,\r\n\t\"trimmed\": true,\r\n\t\"spriteSourceSize\": {\"x\":1,\"y\":1,\"w\":47,\"h\":47},\r\n\t\"sourceSize\": {\"w\":48,\"h\":48}\r\n},\r\n{\r\n\t\"filename\": \"orc-walk-s03.png\",\r\n\t\"frame\": {\"x\":148,\"y\":291,\"w\":45,\"h\":48},\r\n\t\"rotated\": false,\r\n\t\"trimmed\": true,\r\n\t\"spriteSourceSize\": {\"x\":3,\"y\":0,\"w\":45,\"h\":48},\r\n\t\"sourceSize\": {\"w\":48,\"h\":48}\r\n},\r\n{\r\n\t\"filename\": \"orc-walk-w00.png\",\r\n\t\"frame\": {\"x\":320,\"y\":345,\"w\":41,\"h\":48},\r\n\t\"rotated\": false,\r\n\t\"trimmed\": true,\r\n\t\"spriteSourceSize\": {\"x\":1,\"y\":0,\"w\":41,\"h\":48},\r\n\t\"sourceSize\": {\"w\":48,\"h\":48}\r\n},\r\n{\r\n\t\"filename\": \"orc-walk-w01.png\",\r\n\t\"frame\": {\"x\":195,\"y\":290,\"w\":42,\"h\":48},\r\n\t\"rotated\": false,\r\n\t\"trimmed\": true,\r\n\t\"spriteSourceSize\": {\"x\":0,\"y\":0,\"w\":42,\"h\":48},\r\n\t\"sourceSize\": {\"w\":48,\"h\":48}\r\n},\r\n{\r\n\t\"filename\": \"orc-walk-w02.png\",\r\n\t\"frame\": {\"x\":442,\"y\":101,\"w\":47,\"h\":48},\r\n\t\"rotated\": false,\r\n\t\"trimmed\": true,\r\n\t\"spriteSourceSize\": {\"x\":1,\"y\":0,\"w\":47,\"h\":48},\r\n\t\"sourceSize\": {\"w\":48,\"h\":48}\r\n},\r\n{\r\n\t\"filename\": \"orc-walk-w03.png\",\r\n\t\"frame\": {\"x\":96,\"y\":417,\"w\":42,\"h\":48},\r\n\t\"rotated\": false,\r\n\t\"trimmed\": true,\r\n\t\"spriteSourceSize\": {\"x\":3,\"y\":0,\"w\":42,\"h\":48},\r\n\t\"sourceSize\": {\"w\":48,\"h\":48}\r\n},\r\n{\r\n\t\"filename\": \"orc.png\",\r\n\t\"frame\": {\"x\":491,\"y\":101,\"w\":47,\"h\":48},\r\n\t\"rotated\": false,\r\n\t\"trimmed\": true,\r\n\t\"spriteSourceSize\": {\"x\":1,\"y\":0,\"w\":47,\"h\":48},\r\n\t\"sourceSize\": {\"w\":48,\"h\":48}\r\n},\r\n{\r\n\t\"filename\": \"platinum_coins.png\",\r\n\t\"frame\": {\"x\":540,\"y\":101,\"w\":47,\"h\":48},\r\n\t\"rotated\": false,\r\n\t\"trimmed\": true,\r\n\t\"spriteSourceSize\": {\"x\":1,\"y\":1,\"w\":47,\"h\":48},\r\n\t\"sourceSize\": {\"w\":48,\"h\":49}\r\n},\r\n{\r\n\t\"filename\": \"poleaxe.png\",\r\n\t\"frame\": {\"x\":1,\"y\":242,\"w\":48,\"h\":49},\r\n\t\"rotated\": false,\r\n\t\"trimmed\": false,\r\n\t\"spriteSourceSize\": {\"x\":0,\"y\":0,\"w\":48,\"h\":49},\r\n\t\"sourceSize\": {\"w\":48,\"h\":49}\r\n},\r\n{\r\n\t\"filename\": \"rat-dead00.png\",\r\n\t\"frame\": {\"x\":652,\"y\":356,\"w\":48,\"h\":24},\r\n\t\"rotated\": false,\r\n\t\"trimmed\": true,\r\n\t\"spriteSourceSize\": {\"x\":0,\"y\":12,\"w\":48,\"h\":24},\r\n\t\"sourceSize\": {\"w\":48,\"h\":48}\r\n},\r\n{\r\n\t\"filename\": \"rat-idle00.png\",\r\n\t\"frame\": {\"x\":502,\"y\":476,\"w\":37,\"h\":24},\r\n\t\"rotated\": false,\r\n\t\"trimmed\": true,\r\n\t\"spriteSourceSize\": {\"x\":3,\"y\":12,\"w\":37,\"h\":24},\r\n\t\"sourceSize\": {\"w\":48,\"h\":48}\r\n},\r\n{\r\n\t\"filename\": \"rat-idle01.png\",\r\n\t\"frame\": {\"x\":541,\"y\":476,\"w\":37,\"h\":24},\r\n\t\"rotated\": false,\r\n\t\"trimmed\": true,\r\n\t\"spriteSourceSize\": {\"x\":4,\"y\":12,\"w\":37,\"h\":24},\r\n\t\"sourceSize\": {\"w\":49,\"h\":48}\r\n},\r\n{\r\n\t\"filename\": \"rat-idle02.png\",\r\n\t\"frame\": {\"x\":546,\"y\":403,\"w\":37,\"h\":25},\r\n\t\"rotated\": false,\r\n\t\"trimmed\": true,\r\n\t\"spriteSourceSize\": {\"x\":4,\"y\":12,\"w\":37,\"h\":25},\r\n\t\"sourceSize\": {\"w\":49,\"h\":49}\r\n},\r\n{\r\n\t\"filename\": \"rat-walk-e00.png\",\r\n\t\"frame\": {\"x\":101,\"y\":341,\"w\":45,\"h\":25},\r\n\t\"rotated\": false,\r\n\t\"trimmed\": true,\r\n\t\"spriteSourceSize\": {\"x\":3,\"y\":12,\"w\":45,\"h\":25},\r\n\t\"sourceSize\": {\"w\":48,\"h\":48}\r\n},\r\n{\r\n\t\"filename\": \"rat-walk-n00.png\",\r\n\t\"frame\": {\"x\":616,\"y\":445,\"w\":30,\"h\":28},\r\n\t\"rotated\": false,\r\n\t\"trimmed\": true,\r\n\t\"spriteSourceSize\": {\"x\":9,\"y\":8,\"w\":30,\"h\":28},\r\n\t\"sourceSize\": {\"w\":48,\"h\":48}\r\n},\r\n{\r\n\t\"filename\": \"rat-walk-s00.png\",\r\n\t\"frame\": {\"x\":585,\"y\":393,\"w\":30,\"h\":34},\r\n\t\"rotated\": false,\r\n\t\"trimmed\": true,\r\n\t\"spriteSourceSize\": {\"x\":10,\"y\":2,\"w\":30,\"h\":34},\r\n\t\"sourceSize\": {\"w\":48,\"h\":48}\r\n},\r\n{\r\n\t\"filename\": \"rat-walk-w00.png\",\r\n\t\"frame\": {\"x\":654,\"y\":329,\"w\":46,\"h\":25},\r\n\t\"rotated\": false,\r\n\t\"trimmed\": true,\r\n\t\"spriteSourceSize\": {\"x\":0,\"y\":12,\"w\":46,\"h\":25},\r\n\t\"sourceSize\": {\"w\":49,\"h\":49}\r\n},\r\n{\r\n\t\"filename\": \"rat.png\",\r\n\t\"frame\": {\"x\":580,\"y\":476,\"w\":37,\"h\":24},\r\n\t\"rotated\": false,\r\n\t\"trimmed\": true,\r\n\t\"spriteSourceSize\": {\"x\":3,\"y\":12,\"w\":37,\"h\":24},\r\n\t\"sourceSize\": {\"w\":48,\"h\":48}\r\n},\r\n{\r\n\t\"filename\": \"red_crystal.png\",\r\n\t\"frame\": {\"x\":232,\"y\":345,\"w\":42,\"h\":47},\r\n\t\"rotated\": false,\r\n\t\"trimmed\": true,\r\n\t\"spriteSourceSize\": {\"x\":3,\"y\":1,\"w\":42,\"h\":47},\r\n\t\"sourceSize\": {\"w\":48,\"h\":49}\r\n},\r\n{\r\n\t\"filename\": \"RIP.png\",\r\n\t\"frame\": {\"x\":99,\"y\":51,\"w\":48,\"h\":46},\r\n\t\"rotated\": false,\r\n\t\"trimmed\": true,\r\n\t\"spriteSourceSize\": {\"x\":0,\"y\":2,\"w\":48,\"h\":46},\r\n\t\"sourceSize\": {\"w\":48,\"h\":48}\r\n},\r\n{\r\n\t\"filename\": \"silver_coins.png\",\r\n\t\"frame\": {\"x\":191,\"y\":151,\"w\":46,\"h\":48},\r\n\t\"rotated\": false,\r\n\t\"trimmed\": true,\r\n\t\"spriteSourceSize\": {\"x\":2,\"y\":1,\"w\":46,\"h\":48},\r\n\t\"sourceSize\": {\"w\":48,\"h\":49}\r\n},\r\n{\r\n\t\"filename\": \"skull.png\",\r\n\t\"frame\": {\"x\":686,\"y\":101,\"w\":47,\"h\":47},\r\n\t\"rotated\": false,\r\n\t\"trimmed\": true,\r\n\t\"spriteSourceSize\": {\"x\":0,\"y\":1,\"w\":47,\"h\":47},\r\n\t\"sourceSize\": {\"w\":48,\"h\":48}\r\n},\r\n{\r\n\t\"filename\": \"slime-dead00.png\",\r\n\t\"frame\": {\"x\":149,\"y\":51,\"w\":48,\"h\":48},\r\n\t\"rotated\": false,\r\n\t\"trimmed\": false,\r\n\t\"spriteSourceSize\": {\"x\":0,\"y\":0,\"w\":48,\"h\":48},\r\n\t\"sourceSize\": {\"w\":48,\"h\":48}\r\n},\r\n{\r\n\t\"filename\": \"slime-idle00.png\",\r\n\t\"frame\": {\"x\":150,\"y\":1,\"w\":49,\"h\":48},\r\n\t\"rotated\": false,\r\n\t\"trimmed\": false,\r\n\t\"spriteSourceSize\": {\"x\":0,\"y\":0,\"w\":49,\"h\":48},\r\n\t\"sourceSize\": {\"w\":49,\"h\":48}\r\n},\r\n{\r\n\t\"filename\": \"slime-idle01.png\",\r\n\t\"frame\": {\"x\":201,\"y\":1,\"w\":49,\"h\":48},\r\n\t\"rotated\": false,\r\n\t\"trimmed\": false,\r\n\t\"spriteSourceSize\": {\"x\":0,\"y\":0,\"w\":49,\"h\":48},\r\n\t\"sourceSize\": {\"w\":49,\"h\":48}\r\n},\r\n{\r\n\t\"filename\": \"slime-idle02.png\",\r\n\t\"frame\": {\"x\":252,\"y\":1,\"w\":49,\"h\":48},\r\n\t\"rotated\": false,\r\n\t\"trimmed\": false,\r\n\t\"spriteSourceSize\": {\"x\":0,\"y\":0,\"w\":49,\"h\":48},\r\n\t\"sourceSize\": {\"w\":49,\"h\":48}\r\n},\r\n{\r\n\t\"filename\": \"slime-walk-e00.png\",\r\n\t\"frame\": {\"x\":652,\"y\":382,\"w\":48,\"h\":19},\r\n\t\"rotated\": false,\r\n\t\"trimmed\": true,\r\n\t\"spriteSourceSize\": {\"x\":0,\"y\":13,\"w\":48,\"h\":19},\r\n\t\"sourceSize\": {\"w\":48,\"h\":49}\r\n},\r\n{\r\n\t\"filename\": \"slime-walk-n00.png\",\r\n\t\"frame\": {\"x\":849,\"y\":51,\"w\":18,\"h\":49},\r\n\t\"rotated\": false,\r\n\t\"trimmed\": true,\r\n\t\"spriteSourceSize\": {\"x\":14,\"y\":0,\"w\":18,\"h\":49},\r\n\t\"sourceSize\": {\"w\":48,\"h\":49}\r\n},\r\n{\r\n\t\"filename\": \"slime-walk-s00.png\",\r\n\t\"frame\": {\"x\":623,\"y\":151,\"w\":17,\"h\":49},\r\n\t\"rotated\": false,\r\n\t\"trimmed\": true,\r\n\t\"spriteSourceSize\": {\"x\":14,\"y\":0,\"w\":17,\"h\":49},\r\n\t\"sourceSize\": {\"w\":48,\"h\":49}\r\n},\r\n{\r\n\t\"filename\": \"slime-walk-w00.png\",\r\n\t\"frame\": {\"x\":51,\"y\":341,\"w\":48,\"h\":19},\r\n\t\"rotated\": false,\r\n\t\"trimmed\": true,\r\n\t\"spriteSourceSize\": {\"x\":0,\"y\":13,\"w\":48,\"h\":19},\r\n\t\"sourceSize\": {\"w\":48,\"h\":49}\r\n},\r\n{\r\n\t\"filename\": \"slime.png\",\r\n\t\"frame\": {\"x\":239,\"y\":249,\"w\":46,\"h\":46},\r\n\t\"rotated\": false,\r\n\t\"trimmed\": true,\r\n\t\"spriteSourceSize\": {\"x\":2,\"y\":0,\"w\":46,\"h\":46},\r\n\t\"sourceSize\": {\"w\":48,\"h\":48}\r\n},\r\n{\r\n\t\"filename\": \"spell.png\",\r\n\t\"frame\": {\"x\":257,\"y\":394,\"w\":42,\"h\":46},\r\n\t\"rotated\": false,\r\n\t\"trimmed\": true,\r\n\t\"spriteSourceSize\": {\"x\":3,\"y\":1,\"w\":42,\"h\":46},\r\n\t\"sourceSize\": {\"w\":48,\"h\":48}\r\n},\r\n{\r\n\t\"filename\": \"spider-dead00.png\",\r\n\t\"frame\": {\"x\":143,\"y\":151,\"w\":46,\"h\":38},\r\n\t\"rotated\": false,\r\n\t\"trimmed\": true,\r\n\t\"spriteSourceSize\": {\"x\":1,\"y\":5,\"w\":46,\"h\":38},\r\n\t\"sourceSize\": {\"w\":48,\"h\":48}\r\n},\r\n{\r\n\t\"filename\": \"spider-idle00.png\",\r\n\t\"frame\": {\"x\":97,\"y\":149,\"w\":44,\"h\":40},\r\n\t\"rotated\": false,\r\n\t\"trimmed\": true,\r\n\t\"spriteSourceSize\": {\"x\":2,\"y\":4,\"w\":44,\"h\":40},\r\n\t\"sourceSize\": {\"w\":48,\"h\":48}\r\n},\r\n{\r\n\t\"filename\": \"spider-idle01.png\",\r\n\t\"frame\": {\"x\":702,\"y\":290,\"w\":44,\"h\":41},\r\n\t\"rotated\": false,\r\n\t\"trimmed\": true,\r\n\t\"spriteSourceSize\": {\"x\":2,\"y\":4,\"w\":44,\"h\":41},\r\n\t\"sourceSize\": {\"w\":48,\"h\":48}\r\n},\r\n{\r\n\t\"filename\": \"spider-idle02.png\",\r\n\t\"frame\": {\"x\":785,\"y\":298,\"w\":44,\"h\":41},\r\n\t\"rotated\": false,\r\n\t\"trimmed\": true,\r\n\t\"spriteSourceSize\": {\"x\":2,\"y\":4,\"w\":44,\"h\":41},\r\n\t\"sourceSize\": {\"w\":48,\"h\":48}\r\n},\r\n{\r\n\t\"filename\": \"spider-idle03.png\",\r\n\t\"frame\": {\"x\":523,\"y\":343,\"w\":44,\"h\":42},\r\n\t\"rotated\": false,\r\n\t\"trimmed\": true,\r\n\t\"spriteSourceSize\": {\"x\":2,\"y\":4,\"w\":44,\"h\":42},\r\n\t\"sourceSize\": {\"w\":48,\"h\":48}\r\n},\r\n{\r\n\t\"filename\": \"spider-walk-e00.png\",\r\n\t\"frame\": {\"x\":502,\"y\":430,\"w\":40,\"h\":44},\r\n\t\"rotated\": false,\r\n\t\"trimmed\": true,\r\n\t\"spriteSourceSize\": {\"x\":4,\"y\":2,\"w\":40,\"h\":44},\r\n\t\"sourceSize\": {\"w\":48,\"h\":48}\r\n},\r\n{\r\n\t\"filename\": \"spider-walk-n00.png\",\r\n\t\"frame\": {\"x\":702,\"y\":371,\"w\":44,\"h\":40},\r\n\t\"rotated\": false,\r\n\t\"trimmed\": true,\r\n\t\"spriteSourceSize\": {\"x\":2,\"y\":4,\"w\":44,\"h\":40},\r\n\t\"sourceSize\": {\"w\":48,\"h\":48}\r\n},\r\n{\r\n\t\"filename\": \"spider-walk-s00.png\",\r\n\t\"frame\": {\"x\":50,\"y\":460,\"w\":44,\"h\":40},\r\n\t\"rotated\": false,\r\n\t\"trimmed\": true,\r\n\t\"spriteSourceSize\": {\"x\":2,\"y\":4,\"w\":44,\"h\":40},\r\n\t\"sourceSize\": {\"w\":48,\"h\":48}\r\n},\r\n{\r\n\t\"filename\": \"spider-walk-w00.png\",\r\n\t\"frame\": {\"x\":544,\"y\":430,\"w\":40,\"h\":44},\r\n\t\"rotated\": false,\r\n\t\"trimmed\": true,\r\n\t\"spriteSourceSize\": {\"x\":4,\"y\":2,\"w\":40,\"h\":44},\r\n\t\"sourceSize\": {\"w\":48,\"h\":48}\r\n},\r\n{\r\n\t\"filename\": \"spider.png\",\r\n\t\"frame\": {\"x\":97,\"y\":149,\"w\":44,\"h\":40},\r\n\t\"rotated\": false,\r\n\t\"trimmed\": true,\r\n\t\"spriteSourceSize\": {\"x\":2,\"y\":4,\"w\":44,\"h\":40},\r\n\t\"sourceSize\": {\"w\":48,\"h\":48}\r\n},\r\n{\r\n\t\"filename\": \"trader-dead00.png\",\r\n\t\"frame\": {\"x\":191,\"y\":201,\"w\":48,\"h\":37},\r\n\t\"rotated\": false,\r\n\t\"trimmed\": true,\r\n\t\"spriteSourceSize\": {\"x\":0,\"y\":5,\"w\":48,\"h\":37},\r\n\t\"sourceSize\": {\"w\":48,\"h\":48}\r\n},\r\n{\r\n\t\"filename\": \"trader-idle-s03.png\",\r\n\t\"frame\": {\"x\":239,\"y\":151,\"w\":46,\"h\":48},\r\n\t\"rotated\": false,\r\n\t\"trimmed\": true,\r\n\t\"spriteSourceSize\": {\"x\":2,\"y\":0,\"w\":46,\"h\":48},\r\n\t\"sourceSize\": {\"w\":48,\"h\":48}\r\n},\r\n{\r\n\t\"filename\": \"trader-idle00.png\",\r\n\t\"frame\": {\"x\":785,\"y\":200,\"w\":44,\"h\":47},\r\n\t\"rotated\": false,\r\n\t\"trimmed\": true,\r\n\t\"spriteSourceSize\": {\"x\":2,\"y\":1,\"w\":44,\"h\":47},\r\n\t\"sourceSize\": {\"w\":48,\"h\":48}\r\n},\r\n{\r\n\t\"filename\": \"trader-idle01.png\",\r\n\t\"frame\": {\"x\":786,\"y\":150,\"w\":43,\"h\":48},\r\n\t\"rotated\": false,\r\n\t\"trimmed\": true,\r\n\t\"spriteSourceSize\": {\"x\":3,\"y\":0,\"w\":43,\"h\":48},\r\n\t\"sourceSize\": {\"w\":48,\"h\":48}\r\n},\r\n{\r\n\t\"filename\": \"trader-idle02.png\",\r\n\t\"frame\": {\"x\":785,\"y\":249,\"w\":44,\"h\":47},\r\n\t\"rotated\": false,\r\n\t\"trimmed\": true,\r\n\t\"spriteSourceSize\": {\"x\":2,\"y\":1,\"w\":44,\"h\":47},\r\n\t\"sourceSize\": {\"w\":48,\"h\":48}\r\n},\r\n{\r\n\t\"filename\": \"trader-walk-e00.png\",\r\n\t\"frame\": {\"x\":463,\"y\":428,\"w\":37,\"h\":47},\r\n\t\"rotated\": false,\r\n\t\"trimmed\": true,\r\n\t\"spriteSourceSize\": {\"x\":0,\"y\":1,\"w\":37,\"h\":47},\r\n\t\"sourceSize\": {\"w\":48,\"h\":48}\r\n},\r\n{\r\n\t\"filename\": \"trader-walk-e01.png\",\r\n\t\"frame\": {\"x\":301,\"y\":395,\"w\":40,\"h\":47},\r\n\t\"rotated\": false,\r\n\t\"trimmed\": true,\r\n\t\"spriteSourceSize\": {\"x\":0,\"y\":1,\"w\":40,\"h\":47},\r\n\t\"sourceSize\": {\"w\":48,\"h\":48}\r\n},\r\n{\r\n\t\"filename\": \"trader-walk-e02.png\",\r\n\t\"frame\": {\"x\":831,\"y\":201,\"w\":34,\"h\":48},\r\n\t\"rotated\": false,\r\n\t\"trimmed\": true,\r\n\t\"spriteSourceSize\": {\"x\":1,\"y\":0,\"w\":34,\"h\":48},\r\n\t\"sourceSize\": {\"w\":48,\"h\":48}\r\n},\r\n{\r\n\t\"filename\": \"trader-walk-e03.png\",\r\n\t\"frame\": {\"x\":424,\"y\":395,\"w\":37,\"h\":48},\r\n\t\"rotated\": false,\r\n\t\"trimmed\": true,\r\n\t\"spriteSourceSize\": {\"x\":0,\"y\":0,\"w\":37,\"h\":48},\r\n\t\"sourceSize\": {\"w\":48,\"h\":48}\r\n},\r\n{\r\n\t\"filename\": \"trader-walk-n00.png\",\r\n\t\"frame\": {\"x\":50,\"y\":362,\"w\":44,\"h\":47},\r\n\t\"rotated\": false,\r\n\t\"trimmed\": true,\r\n\t\"spriteSourceSize\": {\"x\":2,\"y\":1,\"w\":44,\"h\":47},\r\n\t\"sourceSize\": {\"w\":48,\"h\":48}\r\n},\r\n{\r\n\t\"filename\": \"trader-walk-n01.png\",\r\n\t\"frame\": {\"x\":140,\"y\":434,\"w\":42,\"h\":48},\r\n\t\"rotated\": false,\r\n\t\"trimmed\": true,\r\n\t\"spriteSourceSize\": {\"x\":4,\"y\":0,\"w\":42,\"h\":48},\r\n\t\"sourceSize\": {\"w\":48,\"h\":48}\r\n},\r\n{\r\n\t\"filename\": \"trader-walk-n02.png\",\r\n\t\"frame\": {\"x\":50,\"y\":411,\"w\":44,\"h\":47},\r\n\t\"rotated\": false,\r\n\t\"trimmed\": true,\r\n\t\"spriteSourceSize\": {\"x\":2,\"y\":1,\"w\":44,\"h\":47},\r\n\t\"sourceSize\": {\"w\":48,\"h\":48}\r\n},\r\n{\r\n\t\"filename\": \"trader-walk-n03.png\",\r\n\t\"frame\": {\"x\":381,\"y\":445,\"w\":39,\"h\":48},\r\n\t\"rotated\": false,\r\n\t\"trimmed\": true,\r\n\t\"spriteSourceSize\": {\"x\":8,\"y\":0,\"w\":39,\"h\":48},\r\n\t\"sourceSize\": {\"w\":48,\"h\":48}\r\n},\r\n{\r\n\t\"filename\": \"trader-walk-s00.png\",\r\n\t\"frame\": {\"x\":335,\"y\":248,\"w\":45,\"h\":47},\r\n\t\"rotated\": false,\r\n\t\"trimmed\": true,\r\n\t\"spriteSourceSize\": {\"x\":2,\"y\":1,\"w\":45,\"h\":47},\r\n\t\"sourceSize\": {\"w\":48,\"h\":48}\r\n},\r\n{\r\n\t\"filename\": \"trader-walk-s01.png\",\r\n\t\"frame\": {\"x\":192,\"y\":240,\"w\":45,\"h\":48},\r\n\t\"rotated\": false,\r\n\t\"trimmed\": true,\r\n\t\"spriteSourceSize\": {\"x\":3,\"y\":0,\"w\":45,\"h\":48},\r\n\t\"sourceSize\": {\"w\":48,\"h\":48}\r\n},\r\n{\r\n\t\"filename\": \"trader-walk-s02.png\",\r\n\t\"frame\": {\"x\":382,\"y\":248,\"w\":45,\"h\":47},\r\n\t\"rotated\": false,\r\n\t\"trimmed\": true,\r\n\t\"spriteSourceSize\": {\"x\":2,\"y\":1,\"w\":45,\"h\":47},\r\n\t\"sourceSize\": {\"w\":48,\"h\":48}\r\n},\r\n{\r\n\t\"filename\": \"trader-walk-s03.png\",\r\n\t\"frame\": {\"x\":287,\"y\":151,\"w\":46,\"h\":48},\r\n\t\"rotated\": false,\r\n\t\"trimmed\": true,\r\n\t\"spriteSourceSize\": {\"x\":2,\"y\":0,\"w\":46,\"h\":48},\r\n\t\"sourceSize\": {\"w\":48,\"h\":48}\r\n},\r\n{\r\n\t\"filename\": \"trader-walk-w00.png\",\r\n\t\"frame\": {\"x\":422,\"y\":445,\"w\":39,\"h\":48},\r\n\t\"rotated\": false,\r\n\t\"trimmed\": true,\r\n\t\"spriteSourceSize\": {\"x\":8,\"y\":0,\"w\":39,\"h\":48},\r\n\t\"sourceSize\": {\"w\":48,\"h\":48}\r\n},\r\n{\r\n\t\"filename\": \"trader-walk-w01.png\",\r\n\t\"frame\": {\"x\":608,\"y\":250,\"w\":43,\"h\":47},\r\n\t\"rotated\": false,\r\n\t\"trimmed\": true,\r\n\t\"spriteSourceSize\": {\"x\":5,\"y\":1,\"w\":43,\"h\":47},\r\n\t\"sourceSize\": {\"w\":48,\"h\":48}\r\n},\r\n{\r\n\t\"filename\": \"trader-walk-w02.png\",\r\n\t\"frame\": {\"x\":405,\"y\":346,\"w\":39,\"h\":47},\r\n\t\"rotated\": false,\r\n\t\"trimmed\": true,\r\n\t\"spriteSourceSize\": {\"x\":9,\"y\":1,\"w\":39,\"h\":47},\r\n\t\"sourceSize\": {\"w\":48,\"h\":48}\r\n},\r\n{\r\n\t\"filename\": \"trader-walk-w03.png\",\r\n\t\"frame\": {\"x\":463,\"y\":379,\"w\":39,\"h\":47},\r\n\t\"rotated\": false,\r\n\t\"trimmed\": true,\r\n\t\"spriteSourceSize\": {\"x\":9,\"y\":1,\"w\":39,\"h\":47},\r\n\t\"sourceSize\": {\"w\":48,\"h\":48}\r\n},\r\n{\r\n\t\"filename\": \"trader.png\",\r\n\t\"frame\": {\"x\":96,\"y\":368,\"w\":44,\"h\":47},\r\n\t\"rotated\": false,\r\n\t\"trimmed\": true,\r\n\t\"spriteSourceSize\": {\"x\":2,\"y\":1,\"w\":44,\"h\":47},\r\n\t\"sourceSize\": {\"w\":48,\"h\":48}\r\n},\r\n{\r\n\t\"filename\": \"ui-best-adventure00.png\",\r\n\t\"frame\": {\"x\":287,\"y\":249,\"w\":46,\"h\":46},\r\n\t\"rotated\": false,\r\n\t\"trimmed\": true,\r\n\t\"spriteSourceSize\": {\"x\":1,\"y\":1,\"w\":46,\"h\":46},\r\n\t\"sourceSize\": {\"w\":48,\"h\":48}\r\n},\r\n{\r\n\t\"filename\": \"ui-best-adventure01.png\",\r\n\t\"frame\": {\"x\":239,\"y\":297,\"w\":46,\"h\":46},\r\n\t\"rotated\": false,\r\n\t\"trimmed\": true,\r\n\t\"spriteSourceSize\": {\"x\":1,\"y\":1,\"w\":46,\"h\":46},\r\n\t\"sourceSize\": {\"w\":48,\"h\":48}\r\n},\r\n{\r\n\t\"filename\": \"ui-checkbox00.png\",\r\n\t\"frame\": {\"x\":287,\"y\":297,\"w\":46,\"h\":46},\r\n\t\"rotated\": false,\r\n\t\"trimmed\": true,\r\n\t\"spriteSourceSize\": {\"x\":1,\"y\":1,\"w\":46,\"h\":46},\r\n\t\"sourceSize\": {\"w\":48,\"h\":48}\r\n},\r\n{\r\n\t\"filename\": \"ui-checkbox01.png\",\r\n\t\"frame\": {\"x\":335,\"y\":297,\"w\":46,\"h\":46},\r\n\t\"rotated\": false,\r\n\t\"trimmed\": true,\r\n\t\"spriteSourceSize\": {\"x\":1,\"y\":1,\"w\":46,\"h\":46},\r\n\t\"sourceSize\": {\"w\":48,\"h\":48}\r\n},\r\n{\r\n\t\"filename\": \"ui-guides00.png\",\r\n\t\"frame\": {\"x\":642,\"y\":150,\"w\":46,\"h\":46},\r\n\t\"rotated\": false,\r\n\t\"trimmed\": true,\r\n\t\"spriteSourceSize\": {\"x\":1,\"y\":1,\"w\":46,\"h\":46},\r\n\t\"sourceSize\": {\"w\":48,\"h\":48}\r\n},\r\n{\r\n\t\"filename\": \"ui-guides01.png\",\r\n\t\"frame\": {\"x\":690,\"y\":150,\"w\":46,\"h\":46},\r\n\t\"rotated\": false,\r\n\t\"trimmed\": true,\r\n\t\"spriteSourceSize\": {\"x\":1,\"y\":1,\"w\":46,\"h\":46},\r\n\t\"sourceSize\": {\"w\":48,\"h\":48}\r\n},\r\n{\r\n\t\"filename\": \"ui-play00.png\",\r\n\t\"frame\": {\"x\":738,\"y\":150,\"w\":46,\"h\":46},\r\n\t\"rotated\": false,\r\n\t\"trimmed\": true,\r\n\t\"spriteSourceSize\": {\"x\":1,\"y\":1,\"w\":46,\"h\":46},\r\n\t\"sourceSize\": {\"w\":48,\"h\":48}\r\n},\r\n{\r\n\t\"filename\": \"ui-play01.png\",\r\n\t\"frame\": {\"x\":653,\"y\":198,\"w\":46,\"h\":46},\r\n\t\"rotated\": false,\r\n\t\"trimmed\": true,\r\n\t\"spriteSourceSize\": {\"x\":1,\"y\":1,\"w\":46,\"h\":46},\r\n\t\"sourceSize\": {\"w\":48,\"h\":48}\r\n},\r\n{\r\n\t\"filename\": \"ui-settings00.png\",\r\n\t\"frame\": {\"x\":701,\"y\":198,\"w\":46,\"h\":46},\r\n\t\"rotated\": false,\r\n\t\"trimmed\": true,\r\n\t\"spriteSourceSize\": {\"x\":1,\"y\":1,\"w\":46,\"h\":46},\r\n\t\"sourceSize\": {\"w\":48,\"h\":48}\r\n},\r\n{\r\n\t\"filename\": \"ui-settings01.png\",\r\n\t\"frame\": {\"x\":464,\"y\":247,\"w\":46,\"h\":46},\r\n\t\"rotated\": false,\r\n\t\"trimmed\": true,\r\n\t\"spriteSourceSize\": {\"x\":1,\"y\":1,\"w\":46,\"h\":46},\r\n\t\"sourceSize\": {\"w\":48,\"h\":48}\r\n},\r\n{\r\n\t\"filename\": \"ui-spinner-down00.png\",\r\n\t\"frame\": {\"x\":512,\"y\":247,\"w\":46,\"h\":46},\r\n\t\"rotated\": false,\r\n\t\"trimmed\": true,\r\n\t\"spriteSourceSize\": {\"x\":1,\"y\":1,\"w\":46,\"h\":46},\r\n\t\"sourceSize\": {\"w\":48,\"h\":48}\r\n},\r\n{\r\n\t\"filename\": \"ui-spinner-down01.png\",\r\n\t\"frame\": {\"x\":560,\"y\":247,\"w\":46,\"h\":46},\r\n\t\"rotated\": false,\r\n\t\"trimmed\": true,\r\n\t\"spriteSourceSize\": {\"x\":1,\"y\":1,\"w\":46,\"h\":46},\r\n\t\"sourceSize\": {\"w\":48,\"h\":48}\r\n},\r\n{\r\n\t\"filename\": \"ui-spinner-left00.png\",\r\n\t\"frame\": {\"x\":473,\"y\":295,\"w\":46,\"h\":46},\r\n\t\"rotated\": false,\r\n\t\"trimmed\": true,\r\n\t\"spriteSourceSize\": {\"x\":1,\"y\":1,\"w\":46,\"h\":46},\r\n\t\"sourceSize\": {\"w\":48,\"h\":48}\r\n},\r\n{\r\n\t\"filename\": \"ui-spinner-left01.png\",\r\n\t\"frame\": {\"x\":521,\"y\":295,\"w\":46,\"h\":46},\r\n\t\"rotated\": false,\r\n\t\"trimmed\": true,\r\n\t\"spriteSourceSize\": {\"x\":1,\"y\":1,\"w\":46,\"h\":46},\r\n\t\"sourceSize\": {\"w\":48,\"h\":48}\r\n},\r\n{\r\n\t\"filename\": \"ui-spinner-right00.png\",\r\n\t\"frame\": {\"x\":654,\"y\":281,\"w\":46,\"h\":46},\r\n\t\"rotated\": false,\r\n\t\"trimmed\": true,\r\n\t\"spriteSourceSize\": {\"x\":1,\"y\":1,\"w\":46,\"h\":46},\r\n\t\"sourceSize\": {\"w\":48,\"h\":48}\r\n},\r\n{\r\n\t\"filename\": \"ui-spinner-right01.png\",\r\n\t\"frame\": {\"x\":783,\"y\":341,\"w\":46,\"h\":46},\r\n\t\"rotated\": false,\r\n\t\"trimmed\": true,\r\n\t\"spriteSourceSize\": {\"x\":1,\"y\":1,\"w\":46,\"h\":46},\r\n\t\"sourceSize\": {\"w\":48,\"h\":48}\r\n},\r\n{\r\n\t\"filename\": \"ui-spinner-up00.png\",\r\n\t\"frame\": {\"x\":569,\"y\":345,\"w\":46,\"h\":46},\r\n\t\"rotated\": false,\r\n\t\"trimmed\": true,\r\n\t\"spriteSourceSize\": {\"x\":1,\"y\":1,\"w\":46,\"h\":46},\r\n\t\"sourceSize\": {\"w\":48,\"h\":48}\r\n},\r\n{\r\n\t\"filename\": \"ui-spinner-up01.png\",\r\n\t\"frame\": {\"x\":748,\"y\":389,\"w\":46,\"h\":46},\r\n\t\"rotated\": false,\r\n\t\"trimmed\": true,\r\n\t\"spriteSourceSize\": {\"x\":1,\"y\":1,\"w\":46,\"h\":46},\r\n\t\"sourceSize\": {\"w\":48,\"h\":48}\r\n},\r\n{\r\n\t\"filename\": \"undefined.png\",\r\n\t\"frame\": {\"x\":586,\"y\":429,\"w\":28,\"h\":43},\r\n\t\"rotated\": false,\r\n\t\"trimmed\": true,\r\n\t\"spriteSourceSize\": {\"x\":10,\"y\":3,\"w\":28,\"h\":43},\r\n\t\"sourceSize\": {\"w\":48,\"h\":49}\r\n},\r\n{\r\n\t\"filename\": \"wall-B.png\",\r\n\t\"frame\": {\"x\":199,\"y\":51,\"w\":48,\"h\":48},\r\n\t\"rotated\": false,\r\n\t\"trimmed\": false,\r\n\t\"spriteSourceSize\": {\"x\":0,\"y\":0,\"w\":48,\"h\":48},\r\n\t\"sourceSize\": {\"w\":48,\"h\":48}\r\n},\r\n{\r\n\t\"filename\": \"wall-BL.png\",\r\n\t\"frame\": {\"x\":748,\"y\":339,\"w\":33,\"h\":48},\r\n\t\"rotated\": false,\r\n\t\"trimmed\": true,\r\n\t\"spriteSourceSize\": {\"x\":15,\"y\":0,\"w\":33,\"h\":48},\r\n\t\"sourceSize\": {\"w\":48,\"h\":48}\r\n},\r\n{\r\n\t\"filename\": \"wall-BLI.png\",\r\n\t\"frame\": {\"x\":249,\"y\":51,\"w\":48,\"h\":48},\r\n\t\"rotated\": false,\r\n\t\"trimmed\": false,\r\n\t\"spriteSourceSize\": {\"x\":0,\"y\":0,\"w\":48,\"h\":48},\r\n\t\"sourceSize\": {\"w\":48,\"h\":48}\r\n},\r\n{\r\n\t\"filename\": \"wall-BR.png\",\r\n\t\"frame\": {\"x\":749,\"y\":247,\"w\":34,\"h\":48},\r\n\t\"rotated\": false,\r\n\t\"trimmed\": true,\r\n\t\"spriteSourceSize\": {\"x\":0,\"y\":0,\"w\":34,\"h\":48},\r\n\t\"sourceSize\": {\"w\":48,\"h\":48}\r\n},\r\n{\r\n\t\"filename\": \"wall-BRI.png\",\r\n\t\"frame\": {\"x\":299,\"y\":51,\"w\":48,\"h\":48},\r\n\t\"rotated\": false,\r\n\t\"trimmed\": false,\r\n\t\"spriteSourceSize\": {\"x\":0,\"y\":0,\"w\":48,\"h\":48},\r\n\t\"sourceSize\": {\"w\":48,\"h\":48}\r\n},\r\n{\r\n\t\"filename\": \"wall-BTEE.png\",\r\n\t\"frame\": {\"x\":349,\"y\":51,\"w\":48,\"h\":48},\r\n\t\"rotated\": false,\r\n\t\"trimmed\": false,\r\n\t\"spriteSourceSize\": {\"x\":0,\"y\":0,\"w\":48,\"h\":48},\r\n\t\"sourceSize\": {\"w\":48,\"h\":48}\r\n},\r\n{\r\n\t\"filename\": \"wall-HI.png\",\r\n\t\"frame\": {\"x\":399,\"y\":51,\"w\":48,\"h\":48},\r\n\t\"rotated\": false,\r\n\t\"trimmed\": false,\r\n\t\"spriteSourceSize\": {\"x\":0,\"y\":0,\"w\":48,\"h\":48},\r\n\t\"sourceSize\": {\"w\":48,\"h\":48}\r\n},\r\n{\r\n\t\"filename\": \"wall-L.png\",\r\n\t\"frame\": {\"x\":831,\"y\":351,\"w\":33,\"h\":48},\r\n\t\"rotated\": false,\r\n\t\"trimmed\": true,\r\n\t\"spriteSourceSize\": {\"x\":15,\"y\":0,\"w\":33,\"h\":48},\r\n\t\"sourceSize\": {\"w\":48,\"h\":48}\r\n},\r\n{\r\n\t\"filename\": \"wall-LTEE.png\",\r\n\t\"frame\": {\"x\":617,\"y\":345,\"w\":33,\"h\":48},\r\n\t\"rotated\": false,\r\n\t\"trimmed\": true,\r\n\t\"spriteSourceSize\": {\"x\":15,\"y\":0,\"w\":33,\"h\":48},\r\n\t\"sourceSize\": {\"w\":48,\"h\":48}\r\n},\r\n{\r\n\t\"filename\": \"wall-R.png\",\r\n\t\"frame\": {\"x\":796,\"y\":389,\"w\":33,\"h\":48},\r\n\t\"rotated\": false,\r\n\t\"trimmed\": true,\r\n\t\"spriteSourceSize\": {\"x\":0,\"y\":0,\"w\":33,\"h\":48},\r\n\t\"sourceSize\": {\"w\":48,\"h\":48}\r\n},\r\n{\r\n\t\"filename\": \"wall-RTEE.png\",\r\n\t\"frame\": {\"x\":831,\"y\":401,\"w\":33,\"h\":48},\r\n\t\"rotated\": false,\r\n\t\"trimmed\": true,\r\n\t\"spriteSourceSize\": {\"x\":0,\"y\":0,\"w\":33,\"h\":48},\r\n\t\"sourceSize\": {\"w\":48,\"h\":48}\r\n},\r\n{\r\n\t\"filename\": \"wall-T.png\",\r\n\t\"frame\": {\"x\":449,\"y\":51,\"w\":48,\"h\":48},\r\n\t\"rotated\": false,\r\n\t\"trimmed\": false,\r\n\t\"spriteSourceSize\": {\"x\":0,\"y\":0,\"w\":48,\"h\":48},\r\n\t\"sourceSize\": {\"w\":48,\"h\":48}\r\n},\r\n{\r\n\t\"filename\": \"wall-TL.png\",\r\n\t\"frame\": {\"x\":617,\"y\":395,\"w\":33,\"h\":48},\r\n\t\"rotated\": false,\r\n\t\"trimmed\": true,\r\n\t\"spriteSourceSize\": {\"x\":15,\"y\":0,\"w\":33,\"h\":48},\r\n\t\"sourceSize\": {\"w\":48,\"h\":48}\r\n},\r\n{\r\n\t\"filename\": \"wall-TLI.png\",\r\n\t\"frame\": {\"x\":499,\"y\":51,\"w\":48,\"h\":48},\r\n\t\"rotated\": false,\r\n\t\"trimmed\": false,\r\n\t\"spriteSourceSize\": {\"x\":0,\"y\":0,\"w\":48,\"h\":48},\r\n\t\"sourceSize\": {\"w\":48,\"h\":48}\r\n},\r\n{\r\n\t\"filename\": \"wall-TR.png\",\r\n\t\"frame\": {\"x\":759,\"y\":437,\"w\":33,\"h\":48},\r\n\t\"rotated\": false,\r\n\t\"trimmed\": true,\r\n\t\"spriteSourceSize\": {\"x\":0,\"y\":0,\"w\":33,\"h\":48},\r\n\t\"sourceSize\": {\"w\":48,\"h\":48}\r\n},\r\n{\r\n\t\"filename\": \"wall-TRI.png\",\r\n\t\"frame\": {\"x\":549,\"y\":51,\"w\":48,\"h\":48},\r\n\t\"rotated\": false,\r\n\t\"trimmed\": false,\r\n\t\"spriteSourceSize\": {\"x\":0,\"y\":0,\"w\":48,\"h\":48},\r\n\t\"sourceSize\": {\"w\":48,\"h\":48}\r\n},\r\n{\r\n\t\"filename\": \"wall-TTEE.png\",\r\n\t\"frame\": {\"x\":599,\"y\":51,\"w\":48,\"h\":48},\r\n\t\"rotated\": false,\r\n\t\"trimmed\": false,\r\n\t\"spriteSourceSize\": {\"x\":0,\"y\":0,\"w\":48,\"h\":48},\r\n\t\"sourceSize\": {\"w\":48,\"h\":48}\r\n},\r\n{\r\n\t\"filename\": \"wall-VI.png\",\r\n\t\"frame\": {\"x\":649,\"y\":51,\"w\":48,\"h\":48},\r\n\t\"rotated\": false,\r\n\t\"trimmed\": false,\r\n\t\"spriteSourceSize\": {\"x\":0,\"y\":0,\"w\":48,\"h\":48},\r\n\t\"sourceSize\": {\"w\":48,\"h\":48}\r\n},\r\n{\r\n\t\"filename\": \"wall-XI.png\",\r\n\t\"frame\": {\"x\":699,\"y\":51,\"w\":48,\"h\":48},\r\n\t\"rotated\": false,\r\n\t\"trimmed\": false,\r\n\t\"spriteSourceSize\": {\"x\":0,\"y\":0,\"w\":48,\"h\":48},\r\n\t\"sourceSize\": {\"w\":48,\"h\":48}\r\n},\r\n{\r\n\t\"filename\": \"wall2-B.png\",\r\n\t\"frame\": {\"x\":749,\"y\":51,\"w\":48,\"h\":48},\r\n\t\"rotated\": false,\r\n\t\"trimmed\": false,\r\n\t\"spriteSourceSize\": {\"x\":0,\"y\":0,\"w\":48,\"h\":48},\r\n\t\"sourceSize\": {\"w\":48,\"h\":48}\r\n},\r\n{\r\n\t\"filename\": \"wall2-HI.png\",\r\n\t\"frame\": {\"x\":799,\"y\":51,\"w\":48,\"h\":48},\r\n\t\"rotated\": false,\r\n\t\"trimmed\": false,\r\n\t\"spriteSourceSize\": {\"x\":0,\"y\":0,\"w\":48,\"h\":48},\r\n\t\"sourceSize\": {\"w\":48,\"h\":48}\r\n},\r\n{\r\n\t\"filename\": \"wall2-T.png\",\r\n\t\"frame\": {\"x\":147,\"y\":101,\"w\":48,\"h\":48},\r\n\t\"rotated\": false,\r\n\t\"trimmed\": false,\r\n\t\"spriteSourceSize\": {\"x\":0,\"y\":0,\"w\":48,\"h\":48},\r\n\t\"sourceSize\": {\"w\":48,\"h\":48}\r\n},\r\n{\r\n\t\"filename\": \"waterskin.png\",\r\n\t\"frame\": {\"x\":276,\"y\":345,\"w\":42,\"h\":47},\r\n\t\"rotated\": false,\r\n\t\"trimmed\": true,\r\n\t\"spriteSourceSize\": {\"x\":5,\"y\":2,\"w\":42,\"h\":47},\r\n\t\"sourceSize\": {\"w\":49,\"h\":49}\r\n}],\r\n\"meta\": {\r\n\t\"app\": \"https://www.codeandweb.com/texturepacker\",\r\n\t\"version\": \"1.0\",\r\n\t\"image\": \"dungeon.png\",\r\n\t\"format\": \"RGBA8888\",\r\n\t\"size\": {\"w\":868,\"h\":501},\r\n\t\"scale\": \"1\",\r\n\t\"smartupdate\": \"$TexturePacker:SmartUpdate:94658cd81a5aeb0ba4c4b81be5cebb39:deac94a193445edcf54606c9a41efa30:9c0fba27a8a0c106083a8713f6c67b32$\"\r\n}\r\n}\r\n","module.exports = new __parcel__URL__(\"about.167275cc.md\").toString();","module.exports = new __parcel__URL__(\"armour.698e2b94.txt\").toString();","module.exports = new __parcel__URL__(\"artefacts.07825358.txt\").toString();","module.exports = new __parcel__URL__(\"magic.d01e3398.txt\").toString();","module.exports = new __parcel__URL__(\"monsters.36f9886e.txt\").toString();","module.exports = new __parcel__URL__(\"heroes.6da9b27a.txt\").toString();","module.exports = new __parcel__URL__(\"money.8a4afea3.txt\").toString();","module.exports = new __parcel__URL__(\"traders.5b2d56dc.txt\").toString();","module.exports = new __parcel__URL__(\"weapons.470aeefb.txt\").toString();","module.exports = new __parcel__URL__(\"dungeon_script.34f994bb.txt\").toString();","module.exports = new __parcel__URL__(\"help.29d4aacb.md\").toString();","module.exports = new __parcel__URL__(\"do-alto-do-trono-da-desolacao-trimmed.18cbfbbb.mp3\").toString();","module.exports = new __parcel__URL__(\"privacy.9596e717.md\").toString();","module.exports = new __parcel__URL__(\"quickStart.76062113.md\").toString();","module.exports = new __parcel__URL__(\"punch-trimmed.d5ee82fe.mp3\").toString();","module.exports = new __parcel__URL__(\"punch-trimmed-double.7756f095.mp3\").toString();","module.exports = new __parcel__URL__(\"long-medium-swish-trimmed.69cad07b.mp3\").toString();","module.exports = new __parcel__URL__(\"bubbling-trimmed.361718fa.mp3\").toString();","module.exports = new __parcel__URL__(\"male-hurt-sound-trimmed.76fa38ed.mp3\").toString();","module.exports = new __parcel__URL__(\"dungeon.8eed0f9b.png\").toString();","/**\n * @file Conversion of map plan keys to images and tile definitions.\n *\n * @module scriptReaders/symbolMapping\n */\n/**\n * License {@link https://opensource.org/license/mit/|MIT}\n *\n * Copyright 2024 Steve Butler (henspace.com).\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the “Software”), to deal in\n * the Software without restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n * Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */\nimport { TileRole } from '../utils/tileMaps/tileMap.js';\nimport TURN_MANAGER from '../gameManagement/turnManager.js';\n\n/**\n * @typedef {module:scriptReaders/sceneDefinitionParser~TileDefinition} TileDefinition\n */\n\n/**\n * @param {string} imageName\n * @returns {TileDefinition}\n */\nfunction createGroundDefn(imageName) {\n  return {\n    role: TileRole.GROUND,\n    onClick: (target, point, detail) =>\n      TURN_MANAGER.triggerEvent(\n        TURN_MANAGER.EventId.CLICKED_FREE_GROUND,\n        point,\n        detail\n      ),\n    image: imageName,\n  };\n}\n\n/**\n * @param {string} imageName\n * @returns {TileDefinition}\n */\nfunction createEntranceDefn(imageName) {\n  return {\n    role: TileRole.ENTRANCE,\n    onClick: (target, point, detail) =>\n      TURN_MANAGER.triggerEvent(\n        TURN_MANAGER.EventId.CLICKED_ENTRANCE,\n        point,\n        detail\n      ),\n    image: imageName,\n  };\n}\n\n/**\n * @param {string} imageName\n * @returns {TileDefinition}\n */\nfunction createExitDefn(imageName) {\n  return {\n    role: TileRole.EXIT,\n    onClick: (target, point, detail) =>\n      TURN_MANAGER.triggerEvent(\n        TURN_MANAGER.EventId.CLICKED_EXIT,\n        point,\n        detail\n      ),\n    image: imageName,\n  };\n}\n\nexport const TILE_MAP_KEYS = new Map([\n  ['x', { role: TileRole.OBSTACLE, image: 'block.png' }],\n  // wall parts\n  ['#-TL', { role: TileRole.OBSTACLE, image: 'wall-TL.png' }],\n  ['#-TLI', { role: TileRole.OBSTACLE, image: 'wall-TLI.png' }],\n  ['#-T', { role: TileRole.OBSTACLE, image: 'wall-T.png' }],\n  ['#-TR', { role: TileRole.OBSTACLE, image: 'wall-TR.png' }],\n  ['#-TRI', { role: TileRole.OBSTACLE, image: 'wall-TRI.png' }],\n  ['#-R', { role: TileRole.OBSTACLE, image: 'wall-R.png' }],\n  ['#-BR', { role: TileRole.OBSTACLE, image: 'wall-BR.png' }],\n  ['#-BRI', { role: TileRole.OBSTACLE, image: 'wall-BRI.png' }],\n  ['#-B', { role: TileRole.OBSTACLE, image: 'wall-B.png' }],\n  ['#-BL', { role: TileRole.OBSTACLE, image: 'wall-BL.png' }],\n  ['#-BLI', { role: TileRole.OBSTACLE, image: 'wall-BLI.png' }],\n  ['#-L', { role: TileRole.OBSTACLE, image: 'wall-L.png' }],\n  ['#-XI', { role: TileRole.OBSTACLE, image: 'wall-XI.png' }],\n  ['#-VI', { role: TileRole.OBSTACLE, image: 'wall-VI.png' }],\n  ['#-HI', { role: TileRole.OBSTACLE, image: 'wall-HI.png' }],\n  ['#-TTEE', { role: TileRole.OBSTACLE, image: 'wall-TTEE.png' }],\n  ['#-RTEE', { role: TileRole.OBSTACLE, image: 'wall-RTEE.png' }],\n  ['#-BTEE', { role: TileRole.OBSTACLE, image: 'wall-BTEE.png' }],\n  ['#-LTEE', { role: TileRole.OBSTACLE, image: 'wall-LTEE.png' }],\n  ['#', { role: TileRole.OBSTACLE, image: 'block.png' }],\n  // doors\n  ['=-T', createExitDefn('door-T.png')],\n  ['=-R', createExitDefn('door-R.png')],\n  ['=-B', createExitDefn('door-B.png')],\n  ['=-L', createExitDefn('door-L.png')],\n  ['--T', createEntranceDefn('door-T.png')],\n  ['--R', createEntranceDefn('door-R.png')],\n  ['--B', createEntranceDefn('door-B.png')],\n  ['--L', createEntranceDefn('door-L.png')],\n  ['=', { role: TileRole.OBSTACLE, image: 'block.png' }],\n  ['-', { role: TileRole.OBSTACLE, image: 'block.png' }],\n  // ground\n  ['.', createGroundDefn('floor.png')],\n  ['.-SBW', createGroundDefn('floor-SBW.png')],\n  ['.-SBE', createGroundDefn('floor-SBE.png')],\n\n  [',-SBE', createGroundDefn('floor2-SBE.png')],\n  [',-SBW', createGroundDefn('floor2-SBW.png')],\n  [',', createGroundDefn('floor2.png')],\n]);\n","/**\n * @file Encapsulation of a Scene. A scene equates normally to a level in a\n * dungeon.\n *\n * @module game/scene\n */\n/**\n * License {@link https://opensource.org/license/mit/|MIT}\n *\n * Copyright 2024 Steve Butler\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the “Software”), to deal in\n * the Software without restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n * Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */\n\nimport WORLD from './world.js';\nimport SCREEN from './screen.js';\n\n/**\n * The base scene\n */\nexport class AbstractScene {\n  /** @type {number} */\n  #globalOpacity;\n  /** @type {number} */\n  #deltaOpacityPerSec;\n\n  /** @type {number} */\n  #fadeInSecs;\n  /** @type {number} */\n  #fadeOutSecs;\n\n  /** Fade out promise resolution @type {function}  */\n  #fadeOutResolve;\n\n  /** @type {module:players/actors~Actor} */\n  heroActor;\n\n  /** @type {string} */\n  intro;\n\n  /**\n   * Create the scene.\n   * @param {number} [fadeInSecs = 2]\n   * @param {number} [fadeOutSecs = 2]\n   */\n  constructor(fadeInSecs = 2, fadeOutSecs = 2) {\n    if (fadeInSecs > 0) {\n      this.#globalOpacity = 0;\n      this.#deltaOpacityPerSec = 1 / fadeInSecs;\n    } else {\n      this.#deltaOpacityPerSec = 1;\n    }\n    this.#fadeInSecs = fadeInSecs;\n    this.#fadeOutSecs = fadeOutSecs;\n  }\n\n  /**\n   * Get the global opacity.\n   * @returns {number}\n   */\n  getOpacity() {\n    return this.#globalOpacity;\n  }\n  /**\n   * Called at start. Game waits for preload before calling initialise.\n   * @function Scene#load\n   * @returns {Promise} fulfills to null\n   */\n  load() {\n    return this.doLoad();\n  }\n\n  /**\n   * Called after load. Game waits for initialise before starting the loop.\n   * @function Scene#initialise\n   * @returns {Promise} fulfills to null\n   */\n  initialise() {\n    return this.doInitialise();\n  }\n\n  /**\n   * Called in animation phase\n   * @function Scene#update\n   * @param {number} deltaSeconds\n   */\n  update(deltaSeconds) {\n    SCREEN.clearCanvas();\n    SCREEN.setOpacity(this.#globalOpacity);\n    WORLD.update(deltaSeconds);\n    this.doUpdate(deltaSeconds);\n    SCREEN.setOpacity(1);\n    if (this.#deltaOpacityPerSec !== 0) {\n      this.#globalOpacity += deltaSeconds * this.#deltaOpacityPerSec;\n      if (this.#globalOpacity > 1) {\n        this.#deltaOpacityPerSec = 0;\n        this.#globalOpacity = 1;\n      } else if (this.#globalOpacity < 0) {\n        this.#deltaOpacityPerSec = 0;\n        this.#globalOpacity = 0;\n      }\n    }\n    if (this.#fadeOutResolve && this.#globalOpacity === 0) {\n      this.#fadeOutResolve();\n      this.#fadeOutResolve = null;\n    }\n  }\n\n  /**\n   * Called when scene swapped out\n   * @function Scene#unload\n   * @returns {Promise} fulfills to null\n   */\n  unload() {\n    return this.#fadeOut().then(() => this.doUnload());\n  }\n\n  /**\n   * Fade out the scene\n   * @returns {Promise} fulfils to undefined when fade complete.\n   */\n  #fadeOut() {\n    if (this.#fadeOutSecs > 0) {\n      this.#deltaOpacityPerSec = -1 / this.#fadeOutSecs;\n      return new Promise((resolve) => {\n        this.#fadeOutResolve = resolve;\n      });\n    } else {\n      return Promise.resolve();\n    }\n  }\n\n  /**\n   * Called at start. Game waits for preload before calling initialise.\n   * This should be overridden.\n   * @returns {Promise} fulfills to null\n   */\n  doLoad() {\n    return Promise.resolve();\n  }\n\n  /**\n   * Called after load. Game waits for initialise before starting the loop.\n   * This should be overridden\n   * @returns {Promise} fulfills to null\n   */\n  doInitialise() {\n    return Promise.resolve();\n  }\n\n  /**\n   * Called in animation phase\n   * This should be overridden\n   * @param {number} deltaSeconds\n   */\n  doUpdate(deltaSecondsUnused) {\n    return Promise.resolve();\n  }\n\n  /**\n   * Called when scene swapped out\n   * This should be overridden\n   * @returns {Promise} fulfills to null\n   */\n  doUnload() {\n    return Promise.resolve();\n  }\n}\n","/**\n * @file Navigation button set for the HUD\n *\n * @module hud/hudNavSet\n */\n/**\n * License {@link https://opensource.org/license/mit/|MIT}\n *\n * Copyright 2024 Steve Butler (henspace.com).\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the “Software”), to deal in\n * the Software without restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n * Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */\n\nimport HUD from './hud.js';\nimport { AnimatedImage } from '../utils/sprites/animation.js';\nimport { LoopMethod } from '../utils/arrays/indexer.js';\nimport { CameraTracking } from '../utils/game/camera.js';\nimport { Point } from '../utils/geometry.js';\n/**\n * @type {number}\n */\nconst SCROLL_TILES_PER_SEC = 3;\n\n/**\n * Location of the navigation buttons\n * @enum {number}\n */\nexport const NavigationLocation = {\n  TR: 0,\n  BR: 1,\n  BL: 2,\n  TL: 3,\n};\n\n/** Encapsulation of navigation buttons. */\nexport class NavigationButtons {\n  /** @type {CameraDolly} */\n  #cameraDolly;\n\n  /** @type {Actor} */\n  #trackingButton;\n\n  /** @type {module:utils/sprites/imageManager~SpriteBitmap} */\n  #trackingButtonImage;\n\n  /** @type {Actor} */\n  #fullscreenButton;\n  /** @type {AnimatedImage} */\n  #fullscreenButtonImage;\n\n  /**\n   *\n   * @param {CameraDolly} cameraDolly\n   * @param {number} gridSize\n   * @param {NavigationLocation} locationNav\n   * @param {NavigationLocation} locationFullscreen\n   */\n  constructor(cameraDolly, gridSize, locationNav, locationFullscreen) {\n    this.#cameraDolly = cameraDolly;\n    this.#createButtonSet(gridSize, locationNav, false);\n    this.#createFullscreenButton(gridSize, locationFullscreen);\n  }\n\n  /**\n   * Create the button to handle fullscreen mode\n   */\n  #createFullscreenButton(gridSize, location) {\n    this.#fullscreenButtonImage = new AnimatedImage(\n      {\n        prefix: 'hud-fullscreen',\n        startIndex: 0,\n        padding: 2,\n        suffix: '.png',\n      },\n      { framePeriodMs: 1, loopMethod: LoopMethod.STOP }\n    );\n\n    this.#setFullscreenButtonImage();\n    this.#fullscreenButton = HUD.addButton(\n      this.#fullscreenButtonImage,\n      () => {\n        this.#requestFullscreen(document.body, { navigationUI: 'hide' });\n      },\n      () => {\n        document.exitFullscreen();\n      }\n    );\n    const centre = this.#getLocationPoint(gridSize, location, 1);\n    this.#fullscreenButton.position.x = centre.x;\n    this.#fullscreenButton.position.y = centre.y;\n    addEventListener('fullscreenchange', () => {\n      this.#setFullscreenButtonImage();\n    });\n  }\n  /**\n   * Set the image for the full screen button. It is assumed that\n   * index 0 is shown when not in fullscreen and image 1 when it it.\n   * @param {AnimatedI} fullscreenButtonImage\n   */\n  #setFullscreenButtonImage() {\n    if (!document.fullscreenElement) {\n      this.#fullscreenButtonImage.setCurrentIndex(0);\n    } else {\n      this.#fullscreenButtonImage.setCurrentIndex(1);\n    }\n  }\n  /**\n   * Request full screen mode.\n   * @param {Element} element - what should go full screen.\n   * @param {Object} options - see {@link https://developer.mozilla.org/en-US/docs/Web/API/Element/requestFullscreen}\n   * @returns {Promise}\n   */\n  #requestFullscreen(element, options) {\n    if (element.requestFullscreen) {\n      return element.requestFullscreen(options);\n    }\n    return Promise.reject(\n      new Error('Fullscreen requests not supported by browser')\n    );\n  }\n\n  /** Get centre point information\n   * @param {number} gridSize - tile size\n   * @param {NavigationLocation} location\n   * @param {number} offset - offset applied to location.\n   * This grid units (i.e. tiles).\n   * @returns {Point}\n   */\n  #getLocationPoint(gridSize, location, offset) {\n    const point = new Point(0, 0);\n    switch (location) {\n      case NavigationLocation.TL:\n        point.x = offset * gridSize;\n        point.y = offset * gridSize;\n        break;\n      case NavigationLocation.TR:\n        point.x = -offset * gridSize;\n        point.y = offset * gridSize;\n        break;\n      case NavigationLocation.BR:\n        point.x = -offset * gridSize;\n        point.y = -offset * gridSize;\n        break;\n      case NavigationLocation.BL:\n        point.x = offset * gridSize;\n        point.y = -offset * gridSize;\n        break;\n    }\n    return point;\n  }\n  /**\n   * Create the buttons.\n   * @param {number} gridSize\n   * @param {NavigationLocation} location\n   * @param {boolean} showArrows\n   */\n  #createButtonSet(gridSize, location, showArrows) {\n    const offset = showArrows ? 2 : 1;\n    const centre = this.#getLocationPoint(gridSize, location, offset);\n\n    this.#createCentreButton(centre.x, centre.y);\n    if (showArrows) {\n      this.#createArrowButtons(centre.x, centre.y, gridSize);\n    }\n  }\n\n  /** Create the centre button.\n   * @param {number} centreX\n   * @param {number} centreY\n   */\n  #createCentreButton(centreX, centreY) {\n    this.#trackingButtonImage = new AnimatedImage(\n      {\n        prefix: 'hud-auto-centre',\n        startIndex: 0,\n        padding: 2,\n        suffix: '.png',\n      },\n      { framePeriodMs: 1, loopMethod: LoopMethod.STOP }\n    );\n    this.#trackingButton = HUD.addButton(\n      this.#trackingButtonImage,\n      () => {\n        this.setTrackingState(true);\n      },\n      () => {\n        this.setTrackingState(false);\n      }\n    );\n    this.#trackingButton.position.x = centreX;\n    this.#trackingButton.position.y = centreY;\n    this.#trackingButton.actionClick(null); // defaulting to selected.\n  }\n\n  /**\n   * Set the tracking state.\n   * @param {boolean} on\n   */\n  setTrackingState(on) {\n    if (on) {\n      this.#trackingButtonImage.setCurrentIndex(1);\n      this.#cameraDolly.setTrackingMethod(CameraTracking.HERO);\n    } else {\n      this.#trackingButtonImage.setCurrentIndex(0);\n      this.#cameraDolly.setTrackingMethod(CameraTracking.OFF);\n    }\n  }\n\n  /**\n   * Create the arrow buttons\n   * @param {number} centreX\n   * @param {number} centreY\n   * @param {number} gridSize\n   */\n  #createArrowButtons(centreX, centreY, gridSize) {\n    const scrollSpeed = SCROLL_TILES_PER_SEC * gridSize;\n    this.#createMomentaryButton(\n      'hud-arrow-up',\n      centreX,\n      centreY - gridSize,\n      () => {\n        this.setTrackingState(false);\n        this.#cameraDolly.setVelocity(0, -scrollSpeed);\n      },\n      () => this.#cameraDolly.setTrackingMethod(CameraTracking.OFF)\n    );\n\n    this.#createMomentaryButton(\n      'hud-arrow-right',\n      centreX + gridSize,\n      centreY,\n      () => {\n        this.setTrackingState(false);\n        this.#cameraDolly.setVelocity(scrollSpeed, 0);\n      },\n      () => this.#cameraDolly.setTrackingMethod(CameraTracking.OFF)\n    );\n\n    this.#createMomentaryButton(\n      'hud-arrow-down',\n      centreX,\n      centreY + gridSize,\n      () => {\n        this.setTrackingState(false);\n        this.#cameraDolly.setVelocity(0, scrollSpeed);\n      },\n      () => this.#cameraDolly.setTrackingMethod(CameraTracking.OFF)\n    );\n\n    this.#createMomentaryButton(\n      'hud-arrow-left',\n      centreX - gridSize,\n      centreY,\n      () => {\n        this.setTrackingState(false);\n        this.#cameraDolly.setVelocity(-scrollSpeed, 0);\n      },\n      () => this.#cameraDolly.setTrackingMethod(CameraTracking.OFF)\n    );\n  }\n\n  /**\n   * Create a momentary button.\n   * @param {string} imageNamePrefix - images are assumed to be imageNamePrefixNNN.png\n   * @param {number} x - x position\n   * @param {number} y - y position\n   * @param {function} callbackDown\n   * @param {function} callbackUp\n   */\n  #createMomentaryButton(imageNamePrefix, x, y, callbackDown, callbackUp) {\n    const animatedImage = new AnimatedImage(\n      {\n        prefix: imageNamePrefix,\n        startIndex: 0,\n        padding: 2,\n        suffix: '.png',\n      },\n      { framePeriodMs: 1, loopMethod: LoopMethod.STOP }\n    );\n    let button = HUD.addMomentaryButton(\n      animatedImage,\n      callbackDown,\n      callbackUp\n    );\n    button.position.x = x;\n    button.position.y = y;\n    animatedImage.setCurrentIndex(0);\n  }\n}\n","/**\n * @file Camera dolly class. This provides a mechanism to allow the canvas to\n * track a specified Sprite.\n *\n * @module game/camera\n */\n/**\n * License {@link https://opensource.org/license/mit/|MIT}\n *\n * Copyright 2024 Steve Butler\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the “Software”), to deal in\n * the Software without restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n * Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */\n\nimport SCREEN from './screen.js';\nimport { Sprite } from '../sprites/sprite.js';\nimport { Tracker, VelocityMover } from '../sprites/movers.js';\nimport LOG from '../logging.js';\n\n/**\n * Set the methods of tracking\n * @enum {number}\n */\nexport const CameraTracking = {\n  OFF: 0,\n  HERO: 1,\n  VELOCITY: 2,\n};\n\n/**\n * Camera dolly class\n */\nexport class CameraDolly {\n  /** @type {module:utils/sprites/sprite~Sprite} */\n  #sprite;\n  /** @type {module:utils/sprites/modifiers~AbstractModifier} */\n  #heroTracker;\n  /** @type {module:utils/sprites/modifiers~AbstractModifier} */\n  #velocityTracker;\n  /** @type {number} */\n  #trackingMethod;\n\n  /**\n   * Create a camera dolly. This is a sprite that is designed to track a target.\n   * @param {Sprite} target\n   * @param {number} speed\n   * @param {number} proportionSeparated - max space between camera and target as proportion of minimum screen dimension.\n   */\n  constructor(target, speed, proportionSeparated = 0) {\n    const canvasDims = SCREEN.getCanvasDimensions();\n    const separation =\n      proportionSeparated * Math.min(canvasDims.width, canvasDims.height);\n    this.#sprite = new Sprite();\n\n    this.#heroTracker = new Tracker({\n      prey: target,\n      speed: speed,\n      maxSeparation: separation,\n    });\n\n    this.#velocityTracker = new VelocityMover();\n    this.#heroTracker.applyAsContinuousToSprite(this.#sprite);\n  }\n\n  /**\n   * Update the camera position.\n   * @param {number} deltaSeconds - elapsed time since last update.\n   */\n  update(deltaSeconds) {\n    if (this.#trackingMethod !== CameraTracking.OFF) {\n      this.#sprite.update(deltaSeconds);\n      SCREEN.centreCanvasOn(this.#sprite.position);\n    }\n  }\n  /**\n   * Set the velocity to dX, dY. This will automatically set tracking to velocity.\n   * @param {number} dX\n   * @param {number} dY\n   */\n  setVelocity(vX, vY) {\n    this.setTrackingMethod(CameraTracking.VELOCITY);\n    this.#sprite.velocity.x = vX;\n    this.#sprite.velocity.y = vY;\n  }\n\n  /**\n   * Pan the camera by dx, dy. Automatic tracking is switched off.\n   * @param {number} dx\n   * @param {number} dy\n   */\n  panBy(dx, dy) {\n    this.#sprite.position.x += dx;\n    this.#sprite.position.y += dy;\n    SCREEN.centreCanvasOn(this.#sprite.position);\n  }\n\n  /**\n   * Set the trackingMethod\n   * @param {number} method - CameraTracking enum\n   */\n  setTrackingMethod(method) {\n    if (method === this.#trackingMethod) {\n      return;\n    }\n    this.#trackingMethod = method;\n    switch (method) {\n      case CameraTracking.HERO:\n        this.#heroTracker.applyAsContinuousToSprite(this.#sprite);\n        break;\n      case CameraTracking.VELOCITY:\n        this.#velocityTracker.applyAsContinuousToSprite(this.#sprite);\n        break;\n      case CameraTracking.OFF:\n        break;\n      default:\n        LOG.error(\n          `Attempt to set invalid tracking method of ${method} ignored.`\n        );\n    }\n  }\n}\n","/**\n * @file DnD dice rolls.\n *\n * @module dnd/dndAction\n */\n/**\n * license {@link https://opensource.org/license/mit/|MIT}\n * Copyright 2024 Steve Butler (henspace.com).\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the “Software”), to deal in\n * the Software without restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n * Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */\n\nimport * as dice from '../utils/dice.js';\nimport LOG from '../utils/logging.js';\nimport { characteristicToModifier } from './traits.js';\n\n/** @type number */\nexport const MEALS_FOR_LONG_REST = 3;\nexport const MEALS_FOR_SHORT_REST = 1;\nexport const DRINKS_FOR_LONG_REST = 1;\nexport const DRINKS_FOR_SHORT_REST = 1;\n\n/**\n * Roll an attack and damage dice.\n * @param {module:dnd/traits~AttackDetail} attack\n * @param {module:players/actors~Actor} target\n * @returns {number} amount of damage\n */\nexport function getMeleeDamage(attack, target) {\n  const diceRoll = dice.rollDice(20);\n  // handle fate and curses.\n  if (diceRoll === 1) {\n    LOG.debug('Attack dice rolled 0: cursed.');\n    return 0; // cursed.\n  } else if (diceRoll === 20) {\n    LOG.debug('Attack dice rolled 20: critical hit.');\n    return 2 * attack.rollForDamage(); // critical hit\n  }\n\n  const attackRoll =\n    diceRoll + attack.abilityModifier + attack.proficiencyBonus;\n  const targetAc = target.traits.getEffectiveAc();\n  LOG.debug(\n    `Attack: dice: ${diceRoll}, ability modifier: ${attack.abilityModifier}, proficiency bonus: ${attack.proficiencyBonus}, target AC: ${targetAc}`\n  );\n  if (attackRoll >= targetAc) {\n    return attack.rollForDamage();\n  }\n  return 0;\n}\n\n/**\n * poison with saving throw.\n * @param {module:players/actors~TraitsHolder} attack\n * @param {module:players/actors~Actor} target\n * @returns {number}\n */\nexport function getPoisonDamage(attacker, target) {\n  const damage = dice.rollMultiDice(attacker.traits.get('DMG', '1D4'));\n  const saveModifier = target.traits.getNonMeleeSaveAbilityModifier(attacker);\n  const difficulty = attacker.traits.getInt('DC');\n  if (!difficulty) {\n    LOG.error(`Poisoner ${attacker.traits.get('NAME')} has no DC set.`);\n    return damage;\n  }\n  if (dice.rollDice(20) + saveModifier >= difficulty) {\n    return 0;\n  } else {\n    return damage;\n  }\n}\n\n/**\n * Get consumption benefit in HP, clipped to HP max.\n * @param {module:players/actors~TraitsHolder} attack\n * @param {module:players/actors~Actor} target\n * @returns {number}\n */\nexport function getConsumptionBenefit(consumable, consumer) {\n  const gain = dice.rollMultiDice(consumable.traits.get('HP', '1D4'));\n  const currentHp = consumer.traits.get('HP', 0);\n  const maxHp = consumer.traits.get('HP_MAX', currentHp);\n  const shortFall = maxHp - currentHp;\n  return Math.min(shortFall, gain);\n}\n\n/**\n * Magic with saving throw.\n * @param {module:dnd/traits~AttackDetail} attack\n * @param {module:players/actors~Actor} target\n * @param {module:players/actors~Artefact} spell\n * @returns {number}\n */\nexport function getSpellDamage(attacker, target, spell) {\n  const attackerIntelligence = attacker.traits.get('INT', 1);\n  const saveModifier = target.traits.getNonMeleeSaveAbilityModifier(spell);\n  let difficulty = spell.traits.getInt('DC');\n  if (difficulty === null || difficulty === undefined) {\n    LOG.error(`Magic ${attacker.id} has no DC set.`);\n    difficulty = 0;\n  }\n\n  const spellModifier =\n    attacker.traits.getCharacterPb(spell) +\n    characteristicToModifier(attackerIntelligence);\n  const fullDifficulty = difficulty + spellModifier;\n  let savingThrow = dice.rollDice(20) + saveModifier;\n  const damage = dice.rollMultiDice(\n    spell.traits.getDamageDiceWhenCastBy(attacker)\n  );\n  if (savingThrow >= fullDifficulty) {\n    const factor = spell.traits.getFloat('DMG_SAVED', 0);\n    return Math.round(factor * damage);\n  } else {\n    return damage;\n  }\n}\n\n/**\n * Test if a rest can be taken.\n * A long rest takes 8 hours and cannot occur more than once.\n * So in this game we require three meals and a drink to mimic a full day.\n * For a short rest, we require 1 meal and a drink is all that is required.\n * @param {string} length - LONG or SHORT\n * @param {number} nMeals - number of meals available\n * @param {number} nDrinks - number of drinks available\n *\n * @returns {boolean}\n */\nexport function canRest(length, nMeals, nDrinks) {\n  switch (length) {\n    case 'SHORT':\n      return nMeals >= MEALS_FOR_SHORT_REST && nDrinks >= DRINKS_FOR_SHORT_REST;\n    case 'LONG':\n      return nMeals >= MEALS_FOR_LONG_REST && nDrinks >= DRINKS_FOR_LONG_REST;\n  }\n  LOG.error(`Attempt to rest for unknown length of ${length}`);\n  return false;\n}\n\n/**\n * Take a rest.\n * @param {module:players/actors~Actor} actor\n * @param {string} length - LONG or SHORT\n */\nexport function takeRest(actor, length) {\n  switch (length) {\n    case 'SHORT':\n      {\n        const hitDice = actor.traits.get('HIT_DICE');\n        let hp = actor.traits.getInt('HP', 0);\n        const hpMax = actor.traits.getInt('HP_MAX', hp);\n        const constitutionModifier = actor.traits.getAsModifier('CON');\n        const diceDetails = dice.getDiceDetails(hitDice);\n        if (diceDetails.qty > 0) {\n          diceDetails.qty--;\n          hp += dice.rollDice(diceDetails.sides) + constitutionModifier; // just roll one.\n          actor.traits.set('HP', Math.min(hp, hpMax));\n          actor.traits.set(\n            'HIT_DICE',\n            dice.getDiceDetailsAsString(diceDetails)\n          );\n        }\n      }\n      break;\n    case 'LONG':\n      {\n        const maxNumberOfHitDice = actor.traits.getCharacterLevel();\n        const currentHitDice = actor.traits.get('HIT_DICE');\n        const currentDiceDetails = dice.getDiceDetails(currentHitDice);\n        const recoveredHitDice = Math.max(\n          1,\n          Math.ceil(0.5 * currentDiceDetails.qty)\n        );\n        currentDiceDetails.qty = Math.min(\n          maxNumberOfHitDice,\n          currentDiceDetails.qty + recoveredHitDice\n        );\n        actor.traits.set(\n          'HIT_DICE',\n          dice.getDiceDetailsAsString(currentDiceDetails)\n        );\n        actor.traits.set('HP', actor.traits.getInt('HP_MAX', 0));\n      }\n      break;\n    default:\n      LOG.error(`Attempt to rest for unknown length of ${length}`);\n  }\n}\n","/**\n * @file Support for emojis, especially as sprites.\n *\n * @module utils/text/emojis\n */\n/**\n * License {@link https://opensource.org/license/mit/|MIT}\n *\n * Copyright 2024 Steve Butler\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the “Software”), to deal in\n * the Software without restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n * Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */\n\nimport LOG from '../logging.js';\n\nexport const Emojis = {\n  GRINNING: '😀',\n  SANTA: '🎅',\n  SHAKING: '\\u{1FAE8}',\n};\n\n/**\n * Check to see if the emojis are supported. Any emoji which fails to render,\n * is replaced by a number in square brackets. Note that the function just checks the centre\n * pixel so it may fail in some situations and think that a valid emoji has not\n * rendered.\n * @param {CanvasRenderingContext2D} context\n */\nexport function checkEmojis(context) {\n  let fallbackIndex = 0;\n  for (const key in Emojis) {\n    const metrics = context.measureText(Emojis[key]);\n    const height =\n      metrics.fontBoundingBoxAscent + metrics.fontBoundingBoxDescent;\n    const centreToBaseLine = 0.5 * height - metrics.fontBoundingBoxDescent;\n    context.fillText(Emojis[key], -0.5 * metrics.width, centreToBaseLine);\n    const alphaAtCentre = context.getImageData(0, 0, 1, 1).data[3];\n    if (alphaAtCentre <= 0) {\n      LOG.debug(`Emoji ${key} not supported.`);\n      Emojis[key] = `[${fallbackIndex++}]`;\n    }\n    context.clearRect(0, 0, metrics.width, height);\n  }\n}\n","/**\n * @file Automatic scene generator\n *\n * @module scriptReaders/autoSceneList\n */\n/**\n * license {@link https://opensource.org/license/mit/|MIT}\n * Copyright 2024 Steve Butler (henspace.com).\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the “Software”), to deal in\n * the Software without restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n * Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */\n\nimport { ALMANAC_LIBRARY } from '../dnd/almanacs/almanacs.js';\nimport { SceneDefinition } from '../gameManagement/sceneManager.js';\nimport * as maths from '../utils/maths.js';\nimport LOG from '../utils/logging.js';\nimport { RoomCreator } from '../utils/tileMaps/roomGenerator.js';\nimport { i18n } from '../utils/messageManager.js';\nimport { buildActor } from '../dnd/almanacs/actorBuilder.js';\n\n/** @type {module:players/actors~Actor} */\nlet heroActor;\n\n/**\n * Create a set of enemies based on the hero's level.\n * This is based on guide that 4 players should be able to\n * challenge a monster with a challenge rating equal to its\n * level as a worthy but not deadly challenge. As we have one\n * player, a challenge rating of 1/4 its level should be okay.\n * This is regarded as a medium challenge\n */\n/**\n * @typedef {number} DungeonChallengeValue\n */\n/**\n * @enum {DungeonChallengeValue}\n */\nexport const DungeonChallenge = {\n  EASY: 0.125,\n  MEDIUM: 0.25,\n  HARD: 0.5,\n};\n/**\n * Create a pool of enemies based on the dungeon rating.\n * @param {DungeonChallengeValue} dungeonRating\n * @returns {module:almanacs/almanacs~Almanac}\n */\nfunction createEnemyPoolAlmanac(dungeonRating) {\n  const level = heroActor?.traits.getCharacterLevel() ?? 1;\n  const maxMonsterChallenge = dungeonRating * level + 0.001; // prevent float issues.\n  return ALMANAC_LIBRARY.getAlmanac('ENEMIES').filter(\n    (entry) => entry.challengeRating <= maxMonsterChallenge\n  );\n}\n/**\n * @implements {module:gameManagement/sceneManager~SceneList}\n */\nclass AutoSceneList {\n  /** @type {number} */\n  #index;\n  /** @type {SceneDefinition} */\n  #sceneDefn;\n\n  /**\n   */\n  constructor() {\n    this.reset();\n  }\n\n  /**\n   * @returns {number}\n   */\n  getIndex() {\n    return this.#index;\n  }\n\n  /**\n   * Get the next scene.\n   * @returns {SceneDefinition}\n   */\n  getNext() {\n    this.#index++;\n    if (this.#index === 0) {\n      heroActor = null; // always a new actor at level 0\n    }\n    this.#buildScene();\n    return this.#sceneDefn;\n  }\n  /**\n   * Test to see if there is another scene.\n   * @returns {boolean}\n   */\n  hasNext() {\n    return true;\n  }\n\n  /**\n   * Reset\n   */\n  reset() {\n    this.#index = -1;\n  }\n\n  /**\n   * Restore a saved game. Game are saved when a dungeon is exited so the call should\n   * be to the next scene.\n   * @param {number} index\n   * @param {Actor} hero\n   */\n  restore(index, hero) {\n    heroActor = hero;\n    this.#index = index;\n  }\n\n  /** Build a scene */\n  #buildScene() {\n    this.#sceneDefn = new SceneDefinition();\n\n    this.#setHero();\n\n    this.#addIntro();\n    this.#addEnemies();\n    this.#addTraders();\n    this.#addArtefacts();\n    this.#addMap();\n  }\n\n  /**\n   * Add scene introduction.\n   */\n  #addIntro() {\n    this.#sceneDefn.intro = i18n`MESSAGE ENTER LEVEL ${this.#index}`;\n  }\n  /**\n   * Add hero to scene.\n   */\n  #setHero() {\n    if (!heroActor) {\n      const almanacEntry = ALMANAC_LIBRARY.findById('hero', ['HEROES']);\n      if (!almanacEntry) {\n        throw new Error(`Could not find hero in almanacs.`);\n      }\n      heroActor = buildActor(almanacEntry);\n    }\n    this.#sceneDefn.hero = heroActor;\n  }\n\n  /**\n   * Add enemies to scene.\n   * @param {DungeonChallengeValue} [challenge = DungeonChallenge.MEDIUM]\n   */\n  #addEnemies(challenge = DungeonChallenge.MEDIUM) {\n    const maxEnemies = 8;\n    const enemyPoolAlmanac = createEnemyPoolAlmanac(challenge);\n    let totalCr = 0;\n    let totalEnemies = 0;\n    while (totalCr < challenge && totalEnemies < maxEnemies) {\n      const enemy = enemyPoolAlmanac.getRandomEntry();\n      totalCr += enemy.challengeRating;\n      totalEnemies++;\n      this.#sceneDefn.enemies.push(enemy);\n    }\n  }\n\n  /**\n   * Add enemies to scene.\n   */\n  #addTraders() {\n    const totalTraders = 1;\n    for (let traderIndex = 0; traderIndex < totalTraders; traderIndex++) {\n      const almanacEntry = ALMANAC_LIBRARY.getRandomEntry(\n        'TRADERS',\n        (entry) => entry.minLevel <= this.#index\n      );\n      this.#sceneDefn.enemies.push(almanacEntry);\n    }\n  }\n\n  /**\n   * Add artefacts to scene.\n   */\n  #addArtefacts() {\n    const pooledAlmanac = ALMANAC_LIBRARY.getPooledAlmanac(\n      ['ARTEFACTS', 'MAGIC', 'MONEY', 'WEAPONS'],\n      (entry) => entry.minLevel <= this.#index\n    );\n    let totalArtefacts = maths.getRandomIntInclusive(10, 10);\n    while (totalArtefacts-- > 0) {\n      const almanacEntry = pooledAlmanac.getRandomEntry();\n      if (almanacEntry) {\n        this.#sceneDefn.artefacts.push(almanacEntry);\n      }\n    }\n  }\n\n  /** Add a random map */\n  #addMap() {\n    const creator = new RoomCreator({\n      minCols: 12,\n      maxCols: 40,\n      maxRoomCols: 10,\n      minRows: 12,\n      maxRows: 40,\n      maxRoomRows: 6,\n    });\n    this.#sceneDefn.mapDesign = creator.generate();\n    LOG.debug('Random map');\n    this.#sceneDefn.mapDesign.forEach((line) => LOG.debug(line));\n  }\n}\n\n/**\n * Create a new auto scene list\n * @param {string} script\n * @returns {module:gameManagement/sceneManager~SceneList}\n */\nexport function createAutoSceneList(scriptUnused) {\n  return new AutoSceneList();\n}\n","/**\n * @file Random room generator\n *\n * @module utils/tileMaps/roomGenerator\n */\n/**\n * License {@link https://opensource.org/license/mit/|MIT}\n *\n * Copyright 2024 Steve Butler (henspace.com).\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the “Software”), to deal in\n * the Software without restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n * Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */\nimport LOG from '../logging.js';\nimport * as maths from '../maths.js';\nimport * as arrayManip from '../arrays/arrayManip.js';\nimport { SpecialSymbols } from './tilePlan.js';\n\n/**\n * Class used to create rooms\n */\nexport class RoomCreator {\n  #maxCols;\n  #maxRows;\n  #maxRoomCols;\n  #maxRoomRows;\n  #dungeon;\n  /**\n   *\n   * @param {Object} options\n   * @param {number} options.minCols\n   * @param {number} options.minRows\n   * @param {number} options.maxCols\n   * @param {number} options.maxRows\n   * @param {number} options.maxRoomWidth\n   * @param {number} options.maxRoomheight\n   */\n  constructor(options) {\n    this.#maxCols = maths.getRandomIntInclusive(\n      options.minCols,\n      options.maxCols\n    );\n    this.#maxRows = maths.getRandomIntInclusive(\n      options.minRows,\n      options.maxRows\n    );\n    this.#maxRoomCols = options.maxRoomCols;\n    this.#maxRoomRows = options.maxRoomRows;\n  }\n\n  /**\n   * Get a random wall char.\n   * @param {number} [qty = 1]\n   * @returns {string}\n   */\n  #getWallChr(qty = 1) {\n    let result = '';\n    while (qty-- > 0) {\n      result += maths.getRandomMember(SpecialSymbols.WALL);\n    }\n    return result;\n  }\n\n  /**\n   * Get a random ground char.\n   * @param {number} [qty = 1]\n   * @returns {string}\n   */\n  #getFloorChr(qty = 1) {\n    let result = '';\n    while (qty-- > 0) {\n      result += maths.getRandomMember(SpecialSymbols.GROUND);\n    }\n    return result;\n  }\n\n  /**\n   * Get a random void char.\n   * @param {number} [qty = 1]\n   * @returns {string}\n   */\n  #getLandChr(qty = 1) {\n    let result = '';\n    while (qty-- > 0) {\n      result += maths.getRandomMember(SpecialSymbols.VOID);\n    }\n    return result;\n  }\n\n  /**\n   * Get a random door in char.\n   * @param {number} [qty = 1]\n   * @returns {string}\n   */\n  #getDoorInChr(qty = 1) {\n    let result = '';\n    while (qty-- > 0) {\n      result += maths.getRandomMember(SpecialSymbols.DOOR_IN);\n    }\n    return result;\n  }\n\n  /**\n   * Get a random door out char.\n   * @param {number} [qty = 1]\n   * @returns {string}\n   */\n  #getDoorOutChr(qty = 1) {\n    let result = '';\n    while (qty-- > 0) {\n      result += maths.getRandomMember(SpecialSymbols.DOOR_OUT);\n    }\n    return result;\n  }\n\n  /** Test is a wall char.\n   * @param {string} char\n   * @returns {boolean}\n   */\n  #isWallChr(chr) {\n    return SpecialSymbols.WALL.includes(chr);\n  }\n\n  /** Test is a floor char.\n   * @param {string} char\n   * @returns {boolean}\n   */\n  #isFloorChr(chr) {\n    return SpecialSymbols.GROUND.includes(chr);\n  }\n\n  /** Test is a land char.\n   * @param {string} char\n   * @returns {boolean}\n   */\n  #isLandChr(chr) {\n    return SpecialSymbols.VOID.includes(chr);\n  }\n\n  /** Test is a door in char.\n   * @param {string} char\n   * @returns {boolean}\n   */\n  #isDoorInChr(chr) {\n    return SpecialSymbols.DOOR_IN.includes(chr);\n  }\n\n  /** Test is a door out char.\n   * @param {string} char\n   * @returns {boolean}\n   */\n  #isDoorOutChr(chr) {\n    return SpecialSymbols.DOOR_OUT.includes(chr);\n  }\n  /**\n   * Generate a room.\n   * @returns {String[]}\n   */\n  generate() {\n    const minRoomCols = 4;\n    const minRoomRows = 4;\n    this.#dungeon = [];\n    let lastLeftLandCols = 0;\n    let lastRoomCols = this.#maxCols;\n    while (this.#dungeon.length < this.#maxRows - minRoomRows) {\n      const maxLeftLand = lastLeftLandCols + lastRoomCols - minRoomCols - 2;\n      const leftLandCols =\n        maxLeftLand > 0 ? maths.getRandomInt(0, maxLeftLand) : 0;\n      const reqdMinRoomWidth = Math.max(\n        lastLeftLandCols - leftLandCols + minRoomCols,\n        minRoomCols\n      );\n      let reqdMaxRoomWidth = Math.min(\n        this.#maxRoomCols,\n        this.#maxCols - leftLandCols\n      );\n\n      const roomCols =\n        reqdMaxRoomWidth > reqdMinRoomWidth\n          ? maths.getRandomInt(reqdMinRoomWidth, reqdMaxRoomWidth)\n          : reqdMinRoomWidth;\n      const rightLandCols = this.#maxCols - leftLandCols - roomCols;\n      const maxHeight = Math.min(\n        this.#maxRoomRows,\n        this.#maxRows - this.#dungeon.length\n      );\n      const roomRows = maths.getRandomInt(minRoomRows, maxHeight);\n      this.#createRoom(leftLandCols, roomCols, rightLandCols, roomRows);\n      lastLeftLandCols = leftLandCols;\n      lastRoomCols = roomCols;\n    }\n    this.#removeInternalWalls();\n    this.#locateDoors();\n    return this.getMatrixAsStrings();\n  }\n\n  /**\n   * Convert matrix to a plan design.\n   * @returns {string[]}\n   */\n  getMatrixAsStrings() {\n    return this.#dungeon.map((columns) => columns.join(''));\n  }\n\n  /**\n   *\n   * @param {number} leftLandCols\n   * @param {number} roomCols\n   * @param {number} rightLandCols\n   * @param {number} numberOfRows\n   */\n  #createRoom(leftLandCols, roomCols, rightLandCols, numberOfRows) {\n    LOG.log(\n      `Create room ${leftLandCols} ${roomCols} ${rightLandCols} ${numberOfRows}`\n    );\n    let columns = '';\n    columns += this.#getLandChr(leftLandCols);\n    columns += this.#getWallChr(roomCols);\n    columns += this.#getLandChr(rightLandCols);\n    this.#dungeon.push(columns.split(''));\n    for (let internalRow = 0; internalRow < numberOfRows - 2; internalRow++) {\n      columns = '';\n      columns += this.#getLandChr(leftLandCols);\n      columns += this.#getWallChr(1);\n      columns += this.#getFloorChr(roomCols - 2);\n      columns += this.#getWallChr(1);\n      columns += this.#getLandChr(rightLandCols);\n      this.#dungeon.push(columns.split(''));\n    }\n    columns = '';\n    columns += this.#getLandChr(leftLandCols);\n    columns += this.#getWallChr(roomCols);\n    columns += this.#getLandChr(rightLandCols);\n    this.#dungeon.push(columns.split(''));\n  }\n\n  /** Go through the dungeon removing internal walls. */\n  #removeInternalWalls() {\n    for (let row = 1; row < this.#dungeon.length - 1; row++) {\n      for (let col = 1; col < this.#dungeon[0].length - 2; col++) {\n        if (\n          this.#isWallChr(this.#dungeon[row][col]) &&\n          this.#isWallChr(this.#dungeon[row + 1][col]) &&\n          this.#isFloorChr(this.#dungeon[row - 1][col]) &&\n          this.#isFloorChr(this.#dungeon[row + 2][col])\n        ) {\n          this.#dungeon[row][col] = this.#getFloorChr(1);\n          this.#dungeon[row + 1][col] = this.#getFloorChr(1);\n        }\n      }\n    }\n  }\n\n  /**\n   * Is this a vertical wall where a door could go.\n   * @param {module:utils/arrays/arrayManip~Surrounds} surrounds\n   * @returns {boolean}\n   */\n  #isVerticalWall(surrounds) {\n    return (\n      this.#isWallChr(surrounds.above) &&\n      this.#isWallChr(surrounds.centre) &&\n      this.#isWallChr(surrounds.below)\n    );\n  }\n  /**\n   * Is this a Horizontal wall where a door could go.\n   * @param {module:utils/arrays/arrayManip~Surrounds} surrounds\n   * @returns {boolean}\n   */\n  #isHorizontalWall(surrounds) {\n    return (\n      this.#isWallChr(surrounds.left) &&\n      this.#isWallChr(surrounds.centre) &&\n      this.#isWallChr(surrounds.right)\n    );\n  }\n\n  /**\n   * Position the doors.\n   */\n  #locateDoors() {\n    const possibleLocations = [];\n    this.#dungeon.forEach((rowValue, rowIndex) =>\n      rowValue.forEach((colValue, colIndex) => {\n        const surrounds = arrayManip.getSurrounds(\n          this.#dungeon,\n          rowIndex,\n          colIndex\n        );\n        if (\n          this.#isHorizontalWall(surrounds) ||\n          this.#isVerticalWall(surrounds)\n        ) {\n          possibleLocations.push({ row: rowIndex, col: colIndex });\n        }\n      })\n    );\n    const randomLocations = arrayManip.randomise(possibleLocations);\n    let location = randomLocations[0];\n    this.#dungeon[location.row][location.col] = this.#getDoorInChr();\n    location = randomLocations[1];\n    this.#dungeon[location.row][location.col] = this.#getDoorOutChr();\n  }\n}\n","/**\n * @file Functions to allow touch and mouse handling.\n *\n * @module utils/dom/pointerActions\n */\n/**\n * License {@link https://opensource.org/license/mit/|MIT}\n *\n * Copyright 2024 Steve Butler\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the “Software”), to deal in\n * the Software without restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n * Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */\nimport LOG from '../logging.js';\nimport { Point } from '../geometry.js';\n\n/**\n * Custom event names\n */\nexport const CUSTOM_POINTER_DOWN_EVENT_NAME = 'custom-pointer-down-event';\nexport const CUSTOM_POINTER_UP_EVENT_NAME = 'custom-pointer-up-event';\nexport const CUSTOM_POINTER_CANCEL_EVENT_NAME = 'custom-pointer-cancel-event';\nexport const CUSTOM_CLICK_EVENT_NAME = 'custom-click-event';\nexport const CUSTOM_CONTEXT_MENU_EVENT_NAME = 'custom-conext-click-event';\nexport const CUSTOM_POINTER_DRAG_EVENT_NAME = 'custom-pointer-drag-event';\nexport const CUSTOM_POINTER_DRAG_END_EVENT_NAME =\n  'custom-pointer-drag-end-event';\n\n/** Minimum movement that constitutes a drag. */\nconst MIN_DRAG_MOVEMENT = 10;\n\n/** @enum {number} */\nconst EventSource = {\n  MOUSE: 0,\n  TOUCH: 1,\n};\n\n/**\n * @typedef {Object} CustomEventDetail\n * @property {number} x\n * @property {number} y\n * @property {number} dx\n * @property {number} dy\n */\n\n/**\n * @typedef {Object} DragData\n * @param {ELement} element\n * @property {boolean} actionStarted\n * @property {boolean} dragging\n * @property {number} lastX\n * @property {number} lastY\n * @property {number} startX\n * @property {number} startY\n * @property {number} x\n * @property {number} y\n * @property {Point} lastTouchStartPoint\n * @property {boolean} suppressClickEvent\n */\n\n/**\n * Dispatch an event. Detail is dispatched in the event detail.\n * @param {Element} element\n * @param {string} eventName\n * @param {Object} detail\n */\nfunction dispatchEvent(element, eventName, detail) {\n  const event = new CustomEvent(eventName, {\n    detail: detail,\n  });\n  element.dispatchEvent(event);\n}\n\n/**\n * Gets offsetX and offsetY equivalent to a MouseEvent\n * @param {TouchEvent} event\n * @returns {Object}\n */\nfunction getOffsetFromTouch(event) {\n  const rect = event.target.getBoundingClientRect();\n  return {\n    x: event.touches[0].pageX - rect.left,\n    y: event.touches[0].pageY - rect.top,\n  };\n}\n\n/**\n * Process the start of the action.\n * @param {number} eventSource\n * @param {number} x - x coordinate relative to target\n * @param {number} y - y coordinate relative to target\n * @param {DragData} data\n */\nfunction processStartAction(eventSource, x, y, data) {\n  data.actionStarted = true;\n  data.dragging = false;\n  data.distance = 0;\n  data.lastX = x;\n  data.lastY = y;\n  data.startX = x;\n  data.startY = y;\n  dispatchEvent(data.element, CUSTOM_POINTER_DOWN_EVENT_NAME, {\n    x: x,\n    y: y,\n  });\n}\n\n/**\n * Process the start of the action.\n * @param {number} eventSource\n * @param {number} x - x coordinate relative to target\n * @param {number} y - y coordinate relative to target\n * @param {DragData} data\n */\nfunction processEndAction(eventSource, x, y, data) {\n  const eventName = data.dragging\n    ? CUSTOM_POINTER_DRAG_END_EVENT_NAME\n    : CUSTOM_POINTER_UP_EVENT_NAME;\n\n  data.actionStarted = false;\n  data.dragging = false;\n  data.distance = 0;\n  data.lastX = x;\n  data.lastY = y;\n  data.startX = x;\n  data.startY = y;\n  dispatchEvent(data.element, eventName, {\n    x: x,\n    y: y,\n  });\n}\n\n/**\n * Process the start of the action.\n * @param {number} eventSource\n * @param {number} x - x coordinate relative to target\n * @param {number} y - y coordinate relative to target\n * @param {DragData} data\n */\nfunction processCancelAction(eventSource, x, y, data) {\n  const eventName = CUSTOM_POINTER_CANCEL_EVENT_NAME;\n\n  data.actionStarted = false;\n  data.dragging = false;\n  data.distance = 0;\n  data.lastX = x;\n  data.lastY = y;\n  data.startX = x;\n  data.startY = y;\n  dispatchEvent(data.element, eventName, {\n    x: x,\n    y: y,\n  });\n}\n\n/**\n * Process the start of the action.\n * @param {number} eventSource\n * @param {number} x - x coordinate relative to target\n * @param {number} y - y coordinate relative to target\n * @param {DragData} data\n * @return {CustomEvent} null if no event should be dispatched.\n */\nfunction processMoveAction(eventSource, x, y, data) {\n  const eventName = CUSTOM_POINTER_DRAG_EVENT_NAME;\n  let dx = x - data.lastX;\n  let dy = y - data.lastY;\n  data.lastX = x;\n  data.lastY = y;\n  if (data.dragging) {\n    const event = new CustomEvent(eventName, {\n      detail: {\n        x: x,\n        y: y,\n        dx: dx,\n        dy: dy,\n      },\n    });\n    data.element.dispatchEvent(event);\n  } else if (\n    Math.abs(x - data.startX) > MIN_DRAG_MOVEMENT ||\n    Math.abs(y - data.startY) > MIN_DRAG_MOVEMENT\n  ) {\n    data.dragging = true;\n    data.suppressClickEvent = true;\n  }\n}\n\n/**\n * Add custom listeners which allows an object to listen to touch and mouse events\n * in a consistent manner.\n * the element or clicks. Custom events are sent to differentiate.\n * @param {*} element\n */\nexport function addPointerListeners(element) {\n  let dragData = {\n    element: element,\n    actionStarted: false,\n    dragging: false,\n    x: 0,\n    y: 0,\n    lastTouchStartPoint: null,\n    suppressClickEvent: false,\n  };\n\n  element.addEventListener(\n    'mousedown',\n    (event) => {\n      return processStartAction(\n        EventSource.MOUSE,\n        event.offsetX,\n        event.offsetY,\n        dragData\n      );\n    },\n    { passive: true }\n  );\n\n  element.addEventListener(\n    'mouseup',\n    (event) => {\n      return processEndAction(\n        EventSource.MOUSE,\n        event.offsetX,\n        event.offsetY,\n        dragData\n      );\n    },\n    { passive: true }\n  );\n  element.addEventListener(\n    'mousemove',\n    (event) => {\n      if (event.buttons & 1) {\n        processMoveAction(\n          EventSource.MOUSE,\n          event.offsetX,\n          event.offsetY,\n          dragData\n        );\n      }\n    },\n    { passive: true }\n  );\n  element.addEventListener(\n    'touchstart',\n    (event) => {\n      if (event.changedTouches.length === 1) {\n        const offset = getOffsetFromTouch(event);\n        dragData.lastTouchStartPoint = new Point(offset.x, offset.y);\n        processStartAction(EventSource.TOUCH, offset.x, offset.y, dragData);\n      }\n    },\n    { passive: true }\n  );\n  element.addEventListener(\n    'touchend',\n    (event) => {\n      if (event.changedTouches.length === 1) {\n        processEndAction(\n          EventSource.TOUCH,\n          dragData.lastTouchStartPoint?.x,\n          dragData.lastTouchStartPoint?.y,\n          dragData\n        );\n      }\n      dragData.lastTouchStartPoint = null;\n      dragData.suppressClickEvent = false;\n    },\n    { passive: true }\n  );\n  element.addEventListener(\n    'touchmove',\n    (event) => {\n      if (event.changedTouches.length === 1) {\n        const offset = getOffsetFromTouch(event);\n        processMoveAction(EventSource.TOUCH, offset.x, offset.y, dragData);\n        dragData.suppressClickEvent = true;\n      }\n    },\n    { passive: true }\n  );\n  element.addEventListener(\n    'touchcancel',\n    (event) => {\n      processCancelAction(\n        EventSource.TOUCH,\n        dragData.lastTouchStartPoint?.x,\n        dragData.lastTouchStartPoint?.y,\n        dragData\n      );\n      dragData.lastTouchStartPoint = null;\n    },\n\n    { passive: true }\n  );\n  element.addEventListener('click', (event) => {\n    LOG.debug('click');\n    if (!dragData.suppressClickEvent) {\n      dispatchEvent(element, CUSTOM_CLICK_EVENT_NAME, {\n        x: event.offsetX,\n        y: event.offsetY,\n      });\n    }\n    dragData.suppressClickEvent = false;\n  });\n  element.addEventListener('contextmenu', (event) => {\n    event.preventDefault();\n    dispatchEvent(element, CUSTOM_CONTEXT_MENU_EVENT_NAME, {\n      x: event.offsetX,\n      y: event.offsetY,\n    });\n  });\n}\n","/**\n * @file Messages used in the application.\n *\n * @module constants/messages\n */\n/**\n * license {@link https://opensource.org/license/mit/|MIT}\n * Copyright 2024 Steve Butler (henspace.com).\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the “Software”), to deal in\n * the Software without restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n * Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */\nconst MESSAGE_MAP = new Map([\n  ['BUTTON ABOUT', 'About'],\n  ['BUTTON BUY FOR GP', 'Buy for ${0}\\u{00A0}GP'],\n  ['BUTTON CANCEL', 'Cancel'],\n  ['BUTTON CAST SPELL', 'Cast spell'],\n  ['BUTTON CONSUME', 'Consume'],\n  ['BUTTON CONTINUE', 'Continue'],\n  ['BUTTON CLIMB OVER', 'Climb over'],\n  ['BUTTON BARGE', 'Barge past'],\n  ['BUTTON BEST ADVENTURE', 'Best adventure'],\n\n  ['BUTTON DISCARD', 'Discard'],\n  ['BUTTON ENTER DUNGEON', 'Enter if you dare'],\n  ['BUTTON EQUIP', 'Equip'],\n  ['BUTTON FORGET', 'Forget'],\n  ['BUTTON GUIDES', 'About and Help'],\n  ['BUTTON HELP', 'Help'],\n  ['BUTTON INVENTORY', 'Inventory'],\n  ['BUTTON LEARN SPELL', 'Learn spell'],\n  ['BUTTON LEAVE ARTEFACT', 'Leave'],\n  ['BUTTON MAGIC', 'Magic'],\n  ['BUTTON MOVE', 'Move'],\n  ['BUTTON OK', 'OK'],\n  ['BUTTON PILLAGE', 'Pillage'],\n  ['BUTTON PLAY ADVENTURE', 'Play adventure'],\n  ['BUTTON PLAY CASUAL', 'Play casual'],\n  ['BUTTON PRIVACY', 'Privacy'],\n  ['BUTTON PREPARE SPELL', 'Prepare'],\n  ['BUTTON REST', 'Rest'],\n  ['BUTTON REST LONG', 'Long rest'],\n  ['BUTTON READY MAGIC', 'Ready Magic'],\n  ['BUTTON REST SHORT', 'Short rest'],\n  ['BUTTON SEARCH', 'Search'],\n  ['BUTTON SELL FOR GP', 'Sell for ${0}\\u{00A0}GP'],\n  ['BUTTON SETTINGS', 'Settings'],\n  ['BUTTON START', \"Let's get started.\"],\n  ['BUTTON STASH', 'Stash'],\n  ['BUTTON TAKE ARTEFACT', 'Take'],\n  ['BUTTON TRADE', 'Trade'],\n  ['BUTTON TRAITS', 'Traits'],\n  ['BUTTON TRY AGAIN', 'Try again'],\n  ['BUTTON TO NEXT ROOM', 'To the next room'],\n  ['BUTTON USE', 'Use'],\n\n  ['CONTROL EFFECTS VOLUME', 'Effect volume'],\n  ['CONTROL MUSIC VOLUME', 'Music volume'],\n  [\n    'DESCRIPTION ACID_SPLASH',\n    'Casting this spell hurls acid over your enemies.',\n  ],\n  [\n    'DESCRIPTION CHAIN_MAIL_ARMOUR',\n    'Armour comprising interlocking steel rings over a soft cushioning fabric. The suit includes gauntlets.',\n  ],\n  [\n    'DESCRIPTION HALF_PLATE_ARMOUR',\n    'Shaped metal plates covering most of the body. Simple greaves protect the legs.',\n  ],\n  [\n    'DESCRIPTION LEATHER_ARMOUR',\n    'Simple armour comprising stiffened leather boiled in oil along with some more flexible sections.',\n  ],\n  ['DESCRIPTION PADDED_ARMOUR', 'Simple quilted layers of cloth and batting.'],\n  [\n    'DESCRIPTION PLATE_ARMOUR',\n    'Full plate armour with interlocking steel plates covering the entire body. A visored helmet, gauntlets, boots, and padding are included.',\n  ],\n  [\n    'DESCRIPTION RING_MAIL_ARMOUR',\n    'Leather armour reinforced with heavy steel rings sown into the material.',\n  ],\n  [\n    'DESCRIPTION SCALE_MAIL_ARMOUR',\n    'Leather coat and legging covered with overlapping steel scales.',\n  ],\n  [\n    'DESCRIPTION STUDDED_LEATHER_ARMOUR',\n    'Tough and flexible leather armour with the addition of steel spikes and rivets.',\n  ],\n  [\n    'DESCRIPTION BURNING_HANDS',\n    'Casting this spell with your thumbs touching and fingers spread creates a thin sheet of flames enveloping your enemies.',\n  ],\n  ['DESCRIPTION CLUB', \"A simple wooden club that's seen a lot of action.\"],\n  [\n    'DESCRIPTION COINS',\n    'Various coins stamped with the image of latter day kings and queens.',\n  ],\n\n  ['DESCRIPTION COPPER_COINS', 'Old copper coins of low value.'],\n  ['DESCRIPTION DAGGER', 'A short and very sharp piercing weapon.'],\n\n  [\n    'DESCRIPTION ENGRAVED_PILLAR',\n    'A large stone pillar covered with mystical engravings.',\n  ],\n  [\n    'DESCRIPTION BLACK_FLASK',\n    'A black flask containing a clear, pungent liquid.',\n  ],\n  [\n    'DESCRIPTION GOBLIN',\n    \"Small humanoid creature.Treat with caution. They're small but vicious.\",\n  ],\n\n  [\n    'DESCRIPTION GOLD_COINS',\n    'Gold coins stamped with the image of latter day kings and queens.',\n  ],\n  [\n    'DESCRIPTION HERO',\n    \"You are a warrior whose family have fallen out of favour. You have been sent on a quest to recover the Chalice of Dark Sight. If found, your family's good name will be restored.\",\n  ],\n  ['DESCRIPTION HIDDEN_ARTEFACT', 'There might be something hidden here.'],\n  [\n    'DESCRIPTION IRON_RATIONS',\n    'Simple emergency rations. Crucial for resting between rooms.',\n  ],\n  ['DESCRIPTION ORC', 'A monstrous creature with an intense hatred of humans.'],\n\n  ['DESCRIPTION PLATINUM_COINS', 'Highly valued large platinum.'],\n  ['DESCRIPTION RAT', 'A giant rat, diseased and vicious.'],\n  [\n    'DESCRIPTION SHIELD',\n    'A wooden shield, carried in one hand and offering some protection.',\n  ],\n  ['DESCRIPTION SHORTSWORD', 'A light and highly versatile sword.'],\n  [\n    'DESCRIPTION SILVER_COINS',\n    'Silver coins, worn and tarnished but still of value.',\n  ],\n  ['DESCRIPTION SLIME', 'A green sticky substance that seems to be growing.'],\n\n  ['DESCRIPTION SPIDER', 'A giant spider with fangs dripping green venom.'],\n  [\n    'DESCRIPTION TRADER',\n    'A wandering trader selling all manner of things gathered during many months in the dungeon.',\n  ],\n  [\n    'DESCRIPTION WATERSKIN',\n    'A leather drinking flask with fresh water. Crucial for resting between rooms.',\n  ],\n\n  ['DIALOG TITLE BEST ADVENTURE', 'The most lucrative adventure so far'],\n  ['DIALOG TITLE CHOICES', 'Decisions, decisions'],\n  ['DIALOG TITLE PICK SPELL TO CAST', 'Pick spell to cast'],\n  ['DIALOG TITLE PREPARE SPELLS', 'Prepare spells'],\n  ['DIALOG TITLE SETTINGS', 'Adjust settings'],\n  ['DIALOG TITLE TRADE', 'Buy and sell with trader'],\n  ['DIALOG TITLE PILLAGE', 'Pillage corpse'],\n\n  ['MENU TITLE MAIN', 'Click and Crawl'],\n  ['MENU TITLE GUIDES', 'Guides and information'],\n  ['MESSAGE CANNOT LOAD URL', 'Cannot load data from ${0}'],\n  [\n    'MESSAGE CANNOT STORE',\n    \"You're carrying too much stuff to pick up what you've found.\",\n  ],\n  [\n    'MESSAGE CANNOT REST',\n    \"You try to rest, but you don't have enough resources to restore your health.\",\n  ],\n  [\n    'MESSAGE CANNOT REST LONG',\n    'You have enough resource for a short rest, but not a long one.',\n  ],\n  [\n    'MESSAGE CONSUME BUT ALREADY FULL HP',\n    \"Tastes good, but you're already in prime health. Perhaps you should've waited.\",\n  ],\n  [\n    'MESSAGE CONSUME BUT NO HP GAIN',\n    'Tastes nice, but your health hasn`t improved.',\n  ],\n  [\n    'MESSAGE ENTER LEVEL',\n    \"You enter level ${0}. The door slams shut behind you. There's no way back.\",\n  ],\n  [\n    'MESSAGE EXPLAIN REST',\n    'Trying to use the safety of the corridor to rest and eat?',\n  ],\n\n  [\n    'MESSAGE DUNGEON INTRO',\n    'Welcome, ${0}. You enter a dark and dingy dungeon. Water runs down the wall and the smell of rotting corpses fills the air',\n  ],\n  [\n    'MESSAGE DUNGEON INTRO CONTINUE',\n    'Welcome back, ${0}. The adventure continues, and you enter a dark and dingy dungeon. Water runs down the wall and the smell of rotting corpses fills the air.',\n  ],\n  [\n    'MESSAGE DUNGEON INTRO CASUAL',\n    'Welcome, ${0}. You enter a dark and dingy dungeon. Explore as far as you can but remember your progress will not be saved.',\n  ],\n  [\n    'MESSAGE DEFEAT',\n    'Despite your valiant efforts, you died. Your legend will live on.',\n  ],\n  [\n    'MESSAGE INSUFFICIENT FUNDS',\n    \"You don't have enough funds to purchase this item. The item costs ${0}\\u{00A0}GP but you only have ${1}\\u{00A0}GP.\",\n  ],\n  [\"MESSAGE IT'S A HEALTHY DRINK\", 'That tastes good. +${0}HP'],\n  [\"MESSAGE IT'S HEALTHY\", 'A bit chewy, but tastes good. +${0}HP'],\n  [\n    'MESSAGE KILLED BY POISON',\n    'Yuk! Poison! You start to burn up, cough and vomit, before falling to the floor and dying.',\n  ],\n  [\"MESSAGE IT'S POISON\", \"Yuk! It's poison. -${0}HP\"],\n  [\n    'MESSAGE MAKE SPACE IN BACKPACK',\n    'You need to make space in your backpack by discarding or using something.',\n  ],\n  [\n    'MESSAGE MAKE SPACE IN EQUIP',\n    \"This is too big to store. Sell or discard what you're wearing so you can wear this.\",\n  ],\n  [\n    'MESSAGE NOTHING MORE TO DISCOVER',\n    \"There's nothing more for you to learn or discover here.\",\n  ],\n\n  [\n    'MESSAGE RESISTED POISON',\n    \"Yuk! It's poisonous, but you resist its toxic effects.\",\n  ],\n  [\n    'MESSAGE REST DIALOG',\n    \"You are on a dark staircase leading deeper into the dungeon, but safe for now. If you have enough food or drink, you can rest to restore some health. If you don't need to recover, save your rations. These are the requirements:\",\n  ],\n  [\n    'MESSAGE SEARCH CORPSE OR MOVE',\n    [\n      'You have a choice. Do you want to search the body or climb on top?',\n      \"You've found a corpse, but what should you do? Search for weapons and treasure or climb on top of the body?\",\n    ],\n  ],\n  [\n    'MESSAGE SEARCH HOLE OR MOVE',\n    [\n      'You have a choice. Do you want to search this hole or move into it?',\n      \"You've been here before. Do you want to search again or climb into the hole you dug?\",\n    ],\n  ],\n  [\n    'MESSAGE SEARCH OR MOVE',\n    'You have a choice. Do you want to search this tile or move onto it?',\n  ],\n  [\n    'MESSAGE SPELL ALREADY KNOWN',\n    \"You've found a spell, but you already know this incantation.\",\n  ],\n  ['MESSAGE TRADE OR BARGE', 'Do you want to trade or barge past this guy?'],\n  [\n    'MESSAGE ENTRANCE STUCK',\n    [\n      \"The entrance is locked or jammed. You can't tell. Either way, you can't escape in that direction.\",\n      \"You can't open the door. It seems locked or jammed. There's no way back.\",\n    ],\n  ],\n  [\n    'MESSAGE EXIT STUCK',\n    [\n      'The exit is locked. You will need to find the key if you are ever to leave this dungeon.',\n      'The door will not move. It appears to be locked. There must be a key here somewhere.',\n    ],\n  ],\n  [\n    'MESSAGE EXPLAIN SPELL PREP',\n    'After a long rest, you can prepare spells ready for use.',\n  ],\n  [\n    'MESSAGE FOUND HIDDEN ARTEFACT',\n    [\n      'Good fortune smiles upon you. You found something.',\n      'You find something hidden in the ground.',\n      'Buried beneath the surface, you find something.',\n    ],\n  ],\n  [\n    'MESSAGE FOUND ENGRAVING',\n    'You find strange word engraved on the cold stone surface.',\n  ],\n  ['MESSAGE FOUND GENERIC', \"It 's your lucky day. You' found something.\"],\n  [\n    'MESSAGE GROUND DISTURBED',\n    [\n      'The ground appears to have been disturbed.',\n      \"There's been some recent digging here.\",\n    ],\n  ],\n  ['MESSAGE NO SAVED ADVENTURE', 'No adventure has been saved yet.'],\n  [\n    'MESSAGE OPEN EXIT',\n    [\n      'The door opens and you slip away.',\n      \"You decide that's enough exploring this dungeon and slip away into the darkness.\",\n    ],\n  ],\n  [\n    'MESSAGE OPEN EXIT WHILE FIGHTING',\n    [\n      'A dangerous move, but despite the fighting, you manage to escape.',\n      'Dodging a blow, you manage to open the door and make your escape.',\n    ],\n  ],\n  [\n    'MESSAGE WELCOME',\n    'Welcome to the Click and Crawl old-school dungeon crawler. How far will you get?',\n  ],\n  [\n    'MESSAGE VICTORY',\n    'You have conquered the dungeon. Your name will live on forever and generations will sing of your great achievements.',\n  ],\n  ['LONG REST REQ', 'Long rest: drinks: ${0}; meals: ${1}'],\n  ['SHORT REST REQ', 'Short rest: drinks: ${0}; meals: ${1}; hit dice: 1'],\n\n  // Miscellaneous words and phrases.\n  ['AC (including armour)', 'AC (+armour): ${0}'],\n  ['Backpack', 'Backpack'],\n  ['Body', 'Body'],\n  ['Cantrips', 'Cantrips'],\n  ['Consumables', 'Consumables'],\n  ['Character level:', 'Character level: ${0}'],\n  ['CHARACTER LEVEL:', 'level: ${0}'],\n  ['(DEAD)', '(DEAD!)'],\n  ['Dungeon level:', 'Dungeon level: ${0}'],\n  ['Experience:', 'Experience: ${0}'],\n  ['Feet', 'Feet'],\n  ['Gold:', 'Gold: ${0}\\u{00A0}GP'],\n  ['GOLD PIECES', ' gold pieces'],\n  ['Hands', 'Hands'],\n  ['Head', 'Head'],\n  ['(HP OUT OF VALUE)', '(HP:\\u{00A0}${0}/${1})'],\n  ['(HP VALUE)', '(HP:\\u{00A0}${0})'],\n  ['Known spells', 'Known spells'],\n  ['LEVEL UP', 'Level up to ${0}'],\n  ['Name:', 'Name: ${0}'],\n  ['Prepared spells', 'Prepared spells'],\n  ['Ready magic', 'Ready magic'],\n  ['Unknown', 'Unknown'],\n  ['Wagon', 'Wagon'],\n]);\n\nexport default MESSAGE_MAP;\n"],"names":["$f8633d94d0c88c58$var$worldTileMap","$2a5626561236b7e1$var$messages","$81dd6b24526c5347$var$preDialogFunction","$81dd6b24526c5347$var$postDialogFunction","$f37d71a6f3b25578$var$heroActor","$fee0c02ce96028b6$var$lastHero","$6664788cb4fc34b5$var$cameraDolly","$6664788cb4fc34b5$var$sceneDefnList","$6664788cb4fc34b5$var$currentScene","$6664788cb4fc34b5$var$navigationButtons","$5cdb299a40f2118a$var$heroActor","$63854ed0e7987df1$var$lastTimeStamp","String","prototype","replaceAll","pattern","replacement","RegExp","replace","flags","indexOf","TypeError","toWellFormed","result","chr","codePoint","codePointAt","$8fb5dd726d6c60c5$var$isLeadingSurrogate","$2d5b4e7cb639ebe1$var$messages","window","addEventListener","event","alert","filename","lineno","message","error","stack","a","$2d5b4e7cb639ebe1$export$2e2bcd8739ae039","log","data","console","info","debug","concat","fatal","join","push","$3c404572c27a35d5$var$HEADING_FONT","$3c404572c27a35d5$var$textInfo","normal","size","fontName","h1","h2","h3","emojiSprite","$3c404572c27a35d5$export$955358618f994a11","styleName","$05d58a132d6b5767$var$Radians","DEG_22_5","Math","PI","DEG_45","DEG_67_5","DEG_112_5","DEG_135","DEG_157_7","$05d58a132d6b5767$export$e0b576e7a74416cd","value","min","max","$05d58a132d6b5767$export$624e7ee3f0468367","NONE","N","NE","E","SE","S","SW","W","NW","$05d58a132d6b5767$export$b141de964f0a90c1","minCeiled","ceil","floor","random","maxFloored","$05d58a132d6b5767$export$a885de3766ef0b4c","array","index","length","$05d58a132d6b5767$export$75c671db1a13cf5f","$05d58a132d6b5767$export$d6c5c82e8e696750","defValue","radix","parseInt","Number","isNaN","$05d58a132d6b5767$export$437ba3be5ce2ff51","parseFloat","$90999bd6b14cd690$export$baf26146a414f24a","x","y","constructor","copy","point","coincident","getCartesianAngleTo","targetPos","atan2","getScreenAngleTo","toString","isCoincident","position","round","isOtherClose","other","distance","pow","getOrthoSeparation","abs","$90999bd6b14cd690$export$4a23b3811cef465","rotation","velX","velY","velRot","getCartesianDirection","getScreenDirection","isZero","tolerance","$90999bd6b14cd690$export$5086e02bc6b47824","$90999bd6b14cd690$export$13807d9ee5a34a42","fromPoint","getRelativeTo","origin","withinSquare","$90999bd6b14cd690$export$4617fb02663045ef","width","height","getBottomRight","getTopLeft","overlaps","otherRect","myBR","otherRectBR","containsPoint","containsCoordinate","equals","MIN_VALUE","MAX_VALUE","$a1820c190f7a8b2e$var$throttleTimer","$a1820c190f7a8b2e$var$canvas","$a1820c190f7a8b2e$var$canvasRect","$a1820c190f7a8b2e$var$canvasHalfWidth","$a1820c190f7a8b2e$var$canvasHalfHeight","$a1820c190f7a8b2e$var$canvasAlpha","$a1820c190f7a8b2e$var$visibleCanvasRect","$a1820c190f7a8b2e$var$gameElement","$a1820c190f7a8b2e$var$left","$a1820c190f7a8b2e$var$top","$a1820c190f7a8b2e$var$scale","$a1820c190f7a8b2e$var$maxScale","$a1820c190f7a8b2e$var$minScale","$a1820c190f7a8b2e$var$sizingMethod","$a1820c190f7a8b2e$var$cameraPosition","$a1820c190f7a8b2e$var$sizeScreen","visibleCanvasWidth","visibleCanvasHeight","visibleCanvasOffsetX","visibleCanvasOffsetY","dims","innerWidth","innerHeight","aspectRatio","displayedHeight","displayedWidth","windowAspectRatio","sizingMethod","style","left","top","$a1820c190f7a8b2e$var$syncDomFonts","rootFontSize","$3c404572c27a35d5$export$ef86e9b1c847b692","document","documentElement","fontSize","$a1820c190f7a8b2e$var$resize","$a1820c190f7a8b2e$var$getContext2D","getContext","alpha","$a1820c190f7a8b2e$var$wipeGlass","glass","opacity","setTimeout","remove","Promise","resolve","$a1820c190f7a8b2e$var$canvasPositionToWorld","$a1820c190f7a8b2e$export$2e2bcd8739ae039","canvasPositionToWorld","centreCanvasOn","clearCanvas","clearRect","displayOnGlass","element","options","closingResponse","getElementsByClassName","replaceChildren","createElement","body","appendChild","className","glassContent","classList","add","display","contentHeight","getBoundingClientRect","scrollHeight","promises","closers","forEach","closer","promise","closes","race","then","response","getCanvas","getContext2D","getCanvasDimensions","getWorldInCanvasBounds","getVisibleCanvasRect","glassPositionToWorld","xOrigin","yOrigin","isOnCanvas","rect","isOnScreen","panCamera","dx","dy","resize","setOpacity","globalAlpha","setOptions","designWidth","getElementById","$3c404572c27a35d5$var$baseSize","id","setAttribute","innerText","maxScale","minScale","wipeGlass","worldPositionToCanvas","worldToUi","dist","uiCoordsToMappedPositions","canvas","world","uiToWorld","$f8633d94d0c88c58$var$actors","Map","$f8633d94d0c88c58$var$artefacts","$f8633d94d0c88c58$var$passiveSprites","$f8633d94d0c88c58$var$organicActors","$f8633d94d0c88c58$var$removeActor","target","gridPoint","worldPointToGrid","deleteOccupancyOfGridPoint","isOrganic","delete","$f8633d94d0c88c58$var$removeArtefact","$f8633d94d0c88c58$var$removePassiveSprite","sprite","$f8633d94d0c88c58$var$removeTileMap","$f8633d94d0c88c58$export$2e2bcd8739ae039","addActor","set","moveTileOccupancyGridPoint","addArtefact","addPassiveSprite","clearAll","actor","getActors","getOrganicActors","getArtefacts","getTileMap","getWorldDims","getDimensions","removeTileMap","resolveCancel","positionsUnused","resolveClick","positions","tile","getTileAtWorldPoint","actionClick","resolveContextMenu","actionContextClick","removeActor","removeArtefact","removePassiveSprite","setTileMap","tileMap","update","deltaSeconds","oldGridPoint","visible","canHeroSeeGridPoint","newGridPoint","artefact","$335738a0ba898678$export$bec150f75a9b8f11","context","text","font","fillStyle","color","wrapAtX","paragraphs","split","n","$335738a0ba898678$var$wrapParagraph","paragraph","lineHeight","words","maxLineLength","xWrapPosition","lineSpacing","line","testLine","bounds","$335738a0ba898678$export$85b404b88b79e37e","metrics","measureText","fontBoundingBoxAscent","fontBoundingBoxDescent","offsetTop","offsetCentreY","fillText","$f92f169e79f1c193$export$8eb3892b442747bd","spriteBoxes","showFps","$5840285c35321464$var$spriteMap","$5840285c35321464$var$loadImage","srcUrl","image","Image","src","$5840285c35321464$export$2e2bcd8739ae039","getSpriteBitmap","get","quiet","fallback","getUndefinedBitmap","loadImage","loadImages","srcUrls","url","all","loadSpriteMap","spriteMapDef","textureUrl","$5840285c35321464$var$buildSpriteMap","texture","frames","frame","createImageBitmap","w","h","spriteImage","spriteBitmap","centreX","sourceSize","spriteSourceSize","centreY","$92e1ec0ff12c1fbf$var$currentTimeMs","$92e1ec0ff12c1fbf$export$2e2bcd8739ae039","updateTimeNow","timeNowMs","getFrameCount","framePeriodMs","timeOffsetMs","$af167e06ffca879a$export$cab6ba75b045ad71","WRAP","REVERSE","STOP","$af167e06ffca879a$export$7ed7e8a26b54b288","maxIndex","loopMethod","direction","advanceBy","advanceByWrap","advanceByReverse","advanceByStop","overshoot","$7f41e47310ae6543$export$9d5734c725768403","playing","indexer","lastFrameCount","timeOffset","filenamePattern","textureFrame","startIndex","padding","firstFrame","fileName","prefix","padStart","suffix","getCurrentFrame","frameCount","setCurrentIndex","getCurrentIndex","$7f41e47310ae6543$export$7ded0ab8d4b1a54f","animatedImages","currentImage","key","animatedImage","addAnimatedImage","setCurrentKey","hasOwnProperty","$f1adbd10d5a753d6$export$b1e2fc7f480e9342","_context","_boundingBoxCanvas","getImageFilename","getBoundingBoxCanvas","render","currentAlpha","rotated","save","translate","rotate","_doRender","restore","strokeStyle","strokeRect","positionUnused","$f1adbd10d5a753d6$export$544ff2c168abc0f9","lastCalculatedText","renderGeometry","calculateRenderGeometry","renderGeom","renderPosition","$f1adbd10d5a753d6$export$bea6a7ef06354cc","halfWidth","halfHeight","lineWidth","fillRect","$f1adbd10d5a753d6$export$184b92f2ec28e2e2","offsetX","offsetY","fillHeight","halfFillHeight","setLevel","proportion","topStroke","topFill","$f1adbd10d5a753d6$export$f1bb2dcf27836475","gaugeRenderers","nGauges","fillStyles","strokeStyles","gaugeWidth","tileSize","gaugePosX","gaugeIndex","renderer","$f1adbd10d5a753d6$export$c1626e6e036a584","animation","imageDefinition","drawImage","$5b82fcc8e5572650$export$3075603db8e6204c","velocity","acceleration","modifier","nextPosition","valueOrZero","nextVelocity","getBoundingBox","boundsCanvas","bitmap","$f8eb19ad944a8e76$export$f929ba4d0b405b8b","decoratedModifier","resolveFunc","activeSeconds","timeoutSeconds","applyAsTransientToSprite","applyAsContinuousToSprite","nextModifier","doUpdate","spriteUnused","deltaSecondsUnused","$cf74d2982f28ade3$export$709baf898a5dceda","deltaOpacityPerSec","delaySecs","elapsedSecs","lifetimeSecs","$6b87500f649b76df$var$VariableSpeed","speed","linear","getSpeedBetweenPoints","pointA","pointB","$6b87500f649b76df$export$9600794ac1f85e81","topLeft","bottomRight","$6b87500f649b76df$export$254d9747e34ddc90","prey","maxSeparation","variableSpeed","hunter","preyPos","hunterPos","approachSpeed","angle","cos","sin","getMinMove","maxMovement","targetValue","currentValue","requiredMovement","sign","$6b87500f649b76df$export$c14f425b03c3e261","path","targetPoint","subject","subjectPos","$6b87500f649b76df$export$6ade622442e46b50","pathModifier","$ae446a5a8f069dac$var$createFadingSprite","$ae446a5a8f069dac$export$5b6dfdcdc3ef8663","$ae446a5a8f069dac$export$dc0b517182376fca","$e49c2c8387e6101d$export$2e2bcd8739ae039","TILE_SIZE","$3474d2bbacd35b48$var$PERSISTENT_DATA","cache","localStorage","setItem","JSON","stringify","defaultValue","has","encodedValue","getItem","parse","$de9cad813c8cf1e8$var$BaseControl","_element","persistent","action","Error","listeners","$de9cad813c8cf1e8$export$3e9165d18613c27e","buildElement","createTextNode","label","$de9cad813c8cf1e8$export$5519a977876d156d","leftLabel","$de9cad813c8cf1e8$export$f119f65a5d88757e","imageName","rightLabel","bitmapImage","$de9cad813c8cf1e8$var$CheckboxControl","checkbox","checked","onChange","checkboxContainer","$de9cad813c8cf1e8$export$432a14a187a97cae","rangeInput","rangeContainer","$de9cad813c8cf1e8$export$82f9c7d14b0424b","TEXT_BUTTON","CHECKBOX","RANGE","$de9cad813c8cf1e8$export$c8a8987d4410bf2d","tagName","html","innerHTML","child","$2a5626561236b7e1$var$getText","Array","isArray","$2a5626561236b7e1$export$a7357cdd1f0b0168","strs","values","str","trimmed","trim","placeHolder","$2a5626561236b7e1$export$af7faffe10421f14","setMap","messageMap","getText","$81dd6b24526c5347$export$c2043c90d147849d","OK","CANCEL","$81dd6b24526c5347$var$displayOnGlass","$81dd6b24526c5347$var$createMessageElement","$81dd6b24526c5347$var$showControlsDialog","mainContent","container","scrollContainer","title","preamble","Element","actionButtons","row","button","parentElement","undefined","okButton","okButtonLabel","$81dd6b24526c5347$export$2e2bcd8739ae039","setPreDialogFunction","fn","setPostDialogFunction","showChoiceDialog","choices","choice","showMessage","popup","showOkDialog","buttonEl","showElementOkDialog","showControlsDialog","$4d3fcc3866f168b9$var$SOUND_MANAGER","effects","music","musicVolume","effectsVolume","loadAndPlayMusic","createAudioIfNotNull","volume","loop","play","pause","loadEffects","audioPaths","audio","Audio","playEffect","effect","setMusicVolumePercent","percent","setEffectsVolumePercent","$8cbfa63134b289e1$var$COIN_REGEX","$8cbfa63134b289e1$var$EXCHANGE_RATE_TO_GOLD","$8cbfa63134b289e1$export$b0d0adc40593e6c1","coinDefn","valueFace","valueGp","parts","match","type","exchangeRate","$d9f2d68cf2746c78$var$MULTIDICE_REGEX","$d9f2d68cf2746c78$export$b9d1fef74bbc4c0c","sides","$d9f2d68cf2746c78$export$1ca6b1641ccbf456","test","$d9f2d68cf2746c78$export$7fa777a3b7eeb6e3","dice","isInteger","details","$d9f2d68cf2746c78$export$39e91293370042d8","roll","qty","offset","$d9f2d68cf2746c78$export$9ceb90c5f924ec24","$d9f2d68cf2746c78$export$6b42f955a363be6b","$68307718ba6b750c$var$CHALLENGE_XP_TABLE","$68307718ba6b750c$var$ADVANCEMENT_TABLE","exp","profBonus","$27af28d7e434b74b$export$7c548b14ef6e7713","matrix","rowIndex","columnIndex","centre","tl","above","tr","right","br","below","bl","$27af28d7e434b74b$export$f3448602f079b6d0","source","randomIndex","currentIndex","$95c3fa23148200d5$var$ABILITY_KEYS","$95c3fa23148200d5$export$1a1308ca8502831f","$95c3fa23148200d5$export$6aedcecc644e4b96","damageDice","proficiencyBonus","abilityModifier","twoWeaponFighting","isSecondAttack","unarmed","subType","weaponType","includes","secondAttack","getUnarmedDamage","getMaxDamage","rollForAttack","rollForDamage","clone","attackDetail","$95c3fa23148200d5$export$f0f803f528a8d270","_traits","initialValues","setFromString","definition","item","imposeCase","setValueFromString","_compositeAc","getInt","_refreshDerivedValues","updatedKeyUnused","getValueInFeetInTiles","valueInFeet","getFloat","getAsModifier","toUpperCase","setProficienciesFromString","setCostValueFromString","setIntOrDiceValueFromString","setDiceValueFromString","setGenericValueFromString","faceValue","diceDefn","items","proficiencies","getAllTraits","entries","getAllTraitsSorted","sort","valuesToString","$95c3fa23148200d5$export$57c6a82d5c690092","initialTraits","getDamageDiceWhenCastBy","adjustedDice","$d9f2d68cf2746c78$export$4f1346faf378181a","delta","traits","getCharacterLevel","$95c3fa23148200d5$export$939a756f171fd090","_proficiencyBonus","_level","_attacks","_equippedWeapons","_equippedArmour","setInitialAbilityScores","initialiseHitPoints","actorTraits","map","attack","keys","valueIndex","alreadyHasHp","alreadyHasHpMax","hitDice","conMod","getEffectiveAc","getNonMeleeSaveAbilityModifier","attacker","saveAbility","ability","getCharacterPb","isProficient","getAttacks","utiliseArtefacts","artefacts","filter","artefactType","$c8439a0aab365384$export$e451727f06f039f2","WEAPON","ARMOUR","updatedKey","_setLevelAndProfBonusFromExp","_utiliseWeapons","_utiliseArmour","armour","armourClass","dexterity","additionalArmourClass","shieldArmourClass","acTrait","acValue","$95c3fa23148200d5$var$getAcUsingDexterity","armourType","toLowerCase","startsWith","SHIELD","weapons","firstAttack","proficient","strength","$68307718ba6b750c$export$42351fd14ab8bd87","expValue","level","next","adjustForDefeatOfActor","defeated","crValue","gainedExp","currentExp","newExp","currentLevel","was","now","artefactSubtype","prof","allWordsIncluded","word","$35cb0fa7cb9f77a0$export$f71b2f640dbd3eb","almanacEntry","traitsString","traitsInitialValues","SPELL","CANTRIP","name","$35cb0fa7cb9f77a0$var$createArtefact","$c8439a0aab365384$export$5612627710242fc2","description","isMagic","interaction","$31cf9b99c7a79e42$export$eecad08565115e9c","isConsumable","$31cf9b99c7a79e42$export$91e310df03ee2deb","$191a34beaf268e78$export$9544647517c5db11","idMain","len","capitalisedName","charAt","substring","$191a34beaf268e78$export$83737b3fc54f1416","messageKey","$5114bd1ce9a158d7$export$fa2f0f26e19d189b","fetch","catch","reason","$4d7b11e4136f6d93$var$AlmanacRarity","COMMON","UNCOMMON","RARE","VERY_RARE","$4d7b11e4136f6d93$var$Almanac","COMMON_CUTOFF","$4d7b11e4136f6d93$var$COMMON_PERCENT","UNCOMMON_CUTOFF","RARE_CUTOFF","VERY_RARE_CUTOFF","common","uncommon","rare","veryRare","mergeAlmanac","almanac","find","callback","filterFn","getRandomEntry","cutoff","getRandomCommonEntry","getRandomUncommonEntry","getRandomRareEntry","getRandomVeryRareEntry","$4d7b11e4136f6d93$export$1943ae6675bfce8b","almanacKey","list","entry","minLevel","rarity","typeId","$4d7b11e4136f6d93$export$62947dea9802b3b0","getItemType","derivedParts","$191a34beaf268e78$export$7659ebb14ded9371","equipmentIds","challengeRating","$4d7b11e4136f6d93$var$extractCrValue","almanacs","addAlmanac","getAlmanac","keyOrKeys","findById","getPooledAlmanac","almanacKeys","pooledAlmanac","$9e949bc7e910e09d$export$4a19f89b3effac","$c8439a0aab365384$export$6f0824563061af7a","$c8439a0aab365384$export$39337ab5872e9457","HEAD","space","money","spacesExpand","BODY","HANDS","FEET","BACKPACK","WAGON","CANTRIPS","SPELLS","PREPARED_SPELLS","PURSE","MAX_SAFE_INTEGER","storageSpace","storeType","stash","equip","CONSUMABLE","TWO_HANDED_WEAPON","HEAD_GEAR","COINS","$c8439a0aab365384$var$ArtefactStore","maxSize","usedSpace","storeTypeId","freeSpace","maxSpace","isEmpty","getRequiredSpace","requiredSpace","take","storedArtefact","takeFirst","firstArtefact","canAdd","$c8439a0aab365384$var$MoneyStore","multipleArtefacts","costInGp","artefactUnused","costDetails","currentCostDetails","createGoldCoinArtefact","taken","gp","iconImageName","sellBackPriceInGp","toFixed","stashStoreType","equipStoreType","stashInWagon","getDefaultStoreType","getStoreTypes","storeTypes","isUsable","canReact","$c8439a0aab365384$export$39a477c01214ccc0","stores","hasWagon","storeTypeName","addStore","notifyChange","storeValid","getStore","getStoreByTypeId","store","findSuitableStore","getFirstStorageDetails","hasArtefactWithSameId","getAllStorageDetails","getAllEquippedArtefacts","storageDetails","getPurseValue","content","addToPurse","takeFromPurse","getStoreContents","discard","discardStashed","discardEquipped","equipStore","stashStore","direct","spaceRequired","unequiped","$aa430e5af6097d50$export$1b3c5bcd5a8a9304","WALL","DOOR_IN","DOOR_OUT","GROUND","VOID","$aa430e5af6097d50$var$Clarifiers","TOP_LEFT","TOP_LEFT_INTERNAL","TOP","TOP_RIGHT","TOP_RIGHT_INTERNAL","RIGHT","BOTTOM_RIGHT","BOTTOM_RIGHT_INTERNAL","BOTTOM","BOTTOM_LEFT","BOTTOM_LEFT_INTERNAL","LEFT","TOP_TEE","RIGHT_TEE","BOTTOM_TEE","LEFT_TEE","INTERNAL_CROSS","INTERNAL_VERTICAL","INTERNAL_HORIZONTAL","$aa430e5af6097d50$var$ShadowClarifier","BELOW_WALL","BELOW_END_WALL","$aa430e5af6097d50$export$5bb21ea01a6aaf38","entryPointByDoor","exitPointByDoor","generateTileMapPlan","design","symbolMap","tilePlan","convertToMatrix","clarifyMatrix","createPlan","nColumns","repeat","unambiguousMatrix","rowValue","correctedRow","colValue","colIndex","symbol","surrounds","$aa430e5af6097d50$var$isGround","$aa430e5af6097d50$var$isPartOfWall","$aa430e5af6097d50$var$isEntrance","$aa430e5af6097d50$var$isExit","planMatrix","planRow","columnValue","$aa430e5af6097d50$var$getDesignInfo","fallbackSymbol","$aa430e5af6097d50$var$getFirstOfCohort","unclarifiedSymbol","prop","clarifier","shadowClarifier","$0244e696098defc3$export$a82f6454288e7804","onClick","onContextClick","onPointerDown","onPointerUp","setOnClick","handler","setOnContextClick","setOnPointerDown","setOnPointerUp","actionPointerDown","actionPointerUp","$2d040b97465ee48e$export$3565eb3d00ca5a74","routes","setRouteToCoords","route","coordsToKey","getRouteToCoords","hasRouteToCoords","keyToGridPoint","reference","containsGridPoint","getWaypointsAsGridPoints","destination","points","slice","getWaypointsAsWorldPoints","waypoints","gridPointToWorldPoint","$2d040b97465ee48e$export$4c535f8fc4520664","startPoint","getDumbRouteNextTo","startingGridPoint","targetGridPoint","maxMove","getAdjacentTarget","canGridPointBeOccupiedByActor","rotateGridPointAbout","dX","dY","waypoint","movingX","consecutiveFails","nextPoint","moved","getAllRoutesFrom","findRoutes","movesLeft","routePoints","isTilePassable","existingRoute","canTileBeOccupied","isGridPointPassableByActor","current","deltaX","deltaY","adjX","adjY","originPoint","$2d040b97465ee48e$export$e832cee54e4e1a4d","rayStartPoint","reachedPoints","lastStartPoint","lastBounds","findReachedTiles","getMapGridPointRect","getRayEnds","endPoint","traceRayToEnd","isGridPointInRays","rayEnds","col","steps","compassDirection","$05d58a132d6b5767$export$d9ac11c8e8c20b77","absAngle","firstPoint","isSeeThrough","markReachedPoint","compassDir","markReachedIfNotSeeThrough","$f5b04f63aedb55f0$export$1f4d983d2ef95b6b","DOOR_HIGHLIGHT_FILL","HP_GAUGE","HP_TRANSIENT_TEXT_HERO","HP_TRANSIENT_TEXT_ENEMY","INTERACT_HIGHLIGHT_FILL","INTERACT_HIGHLIGHT_STROKE","MOVE_HIGHLIGHT_FILL","MOVE_HIGHLIGHT_STROKE","$e5bc60fa707f771a$export$ea490c48f1c71643","MOVEMENT_TILE","INTERACT_TILE","OCCUPIED_TILE","MOVE_OR_INTERACT_TILE","$e5bc60fa707f771a$export$b57fd20cbd2711c3","OBSTACLE","ENTRANCE","EXIT","$e5bc60fa707f771a$export$235cb65c20ad2b7","obstacle","occupants","worldPoint","role","tileSprite","addOccupant","occupant","deleteOccupant","getOccupants","pointUnused","isOccupied","isPassableByActor","canBeOccupiedByActor","isHero","canShareLocationWithActor","actorUnused","$e5bc60fa707f771a$export$16ec26812de3ce7a","tiles","tilesX","tilesY","gridSize","movementRoutes","movementGridPoints","movementTileHighlighter","reachableDoorTileHighlighter","reachableDoorTileGridPoints","entranceTile","exitTile","entryGridPointByDoor","exitGridPointByDoor","randomGround","heroRayTracer","interactTileGridPoints","interactTileHighlighter","heroActor","plan","tileRow","tileDefn","filterClick","processTileRole","getDimsInTiles","setRayTracer","visibleGridPoints","getVisibleGridPointRect","highlightTiles","heroTile","heroTileRole","visibleBounds","gridPointTL","gridPointBR","minCol","maxCol","minRow","maxRow","getGridSize","getTileAtGridPoint","gridAlignedWorldPoint","halfGrid","getWorldPositionOfTileByEntry","getGridPositionOfEntrance","setMovementRoutes","gridPoints","setInteractActors","actors","calcReachableDoors","heroPosition","getSurroundingTiles","highlightMovementTiles","highlightInteractTiles","highlightReachableDoorTiles","clickHandler","movement","isDeadProp","alive","isProp","heroGridPoint","getWaypointsToWorldPoint","getRandomFreeGroundTile","getRadiatingUpAndDown","member","lookNorth","lookEast","lookSouth","lookWest","getCoincidentActors","getParticipants","participants","tileOccupants","$76f86892cf60c694$var$SETTINGS","labelKey","controlType","$cfb969eb0974fd3f$var$PeripateticAnimationDefns","DEAD","keyName","IDLE","WALK_NORTH","WALK_EAST","WALK_SOUTH","WALK_WEST","$cfb969eb0974fd3f$var$ArtefactAnimationDefns","$cfb969eb0974fd3f$var$AnimationKeys","definitions","formFrameNameRoot","getKeyName","addAllToKeyedAnimation","keyedAnimations","anim","$cfb969eb0974fd3f$var$StdAnimations","peripatetic","$d7e9a662a8cbeae3$var$VOWEL_SOUNDS","$d7e9a662a8cbeae3$var$START_SOUNDS","$d7e9a662a8cbeae3$var$END_SOUNDS","$d7e9a662a8cbeae3$export$899caa88e79f0830","$ba30ae746a7f0f6d$var$TraitsRenderer","hp","hpMax","$ba30ae746a7f0f6d$var$ActorStateAnimator","aliveStatus","fallbackImage","setActor","dir","getCurrentDirection","setAnimationForState","$05d58a132d6b5767$export$cf2deb104c051cb7","reverse","disengaging","$ba30ae746a7f0f6d$var$createActor","traitsRenderer","keyedAnimation","$ba30ae746a7f0f6d$var$createStandardKeyFrames","imageRenderer","$9e949bc7e910e09d$export$f73d3eb6fd876d80","$9e949bc7e910e09d$export$be204faa7b4ee90a","ORGANIC","maxTilesPerMove","$ba30ae746a7f0f6d$export$260a0189ba712b47","$9e949bc7e910e09d$export$ec2f7d5cc9321319","HERO","TRADER","$ba30ae746a7f0f6d$var$createTrader","actorType","$31cf9b99c7a79e42$export$366210f9de782ba6","HIDDEN_ARTEFACT","$ba30ae746a7f0f6d$var$createArtefactHolder","$ba30ae746a7f0f6d$var$createArtefactKeyFrames","PROP","$31cf9b99c7a79e42$export$13d2779752f0bd8f","$ba30ae746a7f0f6d$var$createProp","$ba30ae746a7f0f6d$var$createEnemy","$31cf9b99c7a79e42$export$bbfcae392104b4c9","$31cf9b99c7a79e42$export$56070c78bbcda189","$ba30ae746a7f0f6d$var$equipActor","artefactEntry","storeManager","$6c32e7787b3dbd90$export$ac811b1f517c0c21","$6c32e7787b3dbd90$export$384cd953322e3851","hero","$6c32e7787b3dbd90$var$saveAdventureIfBest","adventureResult","$6c32e7787b3dbd90$var$createAdventureResult","gold","characterLevel","dungeonLevel","$6664788cb4fc34b5$export$2e2bcd8739ae039","getCurrentSceneLevel","currentBest","lastGold","artefactDetails","detail","gameState","sceneLevel","$712a52cadf432d0a$export$194ecf1460f71071","wards","clear","createKeyCode","btoa","uri","encodeURIComponent","protect","retrieve","reinstate","$7a78d71b35cfa098$var$parsingWarden","$7a78d71b35cfa098$export$8df0edb81ed6c93c","href","parentheses","$7a78d71b35cfa098$var$blockReps","re","rep","matched","hashes","txt","$7a78d71b35cfa098$var$reAllLinesStartWith","blockPrefix","blockSuffix","trimContents","useWarden","linePrefix","lineSuffix","$7a78d71b35cfa098$var$paragraphReps","$7a78d71b35cfa098$var$spanReps","floatLeft","altText","iconHtml","address","encoded","$7a78d71b35cfa098$export$52ce4ed9be59edb4","$7a78d71b35cfa098$var$encodeCharToEntity","codeA","codeB","$7a78d71b35cfa098$var$markdownEscReps","$7a78d71b35cfa098$var$securityReps","$7a78d71b35cfa098$var$htmlEscIgnoringBrReps","$7a78d71b35cfa098$var$htmlCleanUpReps","$7a78d71b35cfa098$var$processReplacements","replacements","sub","reStart","reBlockSearchRe","lineReplacementRe","lineReplacement","blockContents","trimEnd","charCodeAt","$e8347232c61bf163$exports","$87dc2795575ea161$exports","URL","$f99da778ee579cab$exports","$94ddb04bf5e29e79$exports","$c80c85d492ab7d5a$exports","$795671ad888baef5$exports","$d2a5d58b5408aedf$exports","$f5f0a69c3f51bc7d$exports","$8434dd039fabe3ba$exports","$939651671126947b$exports","$f579d6f2ff49d46e$exports","$c7b9d7e7b1a866d1$exports","$9b17816e9421bf34$exports","$c8e1c52358f4b01a$exports","$ad818775a1f17d84$exports","$e9b929c6a5686351$exports","$c80282312db54902$exports","$6b1f536af9290193$exports","$333d6d6fa8b30bb9$exports","$68e8bdea1e306bb4$exports","$3c63fcd0cf599322$export$54b43579d6cb0cf2","ABOUT_MD","ALMANAC_MAP","DUNGEON_SCRIPT","HELP_MD","MUSIC","PRIVACY_MD","QUICK_START_MD","SOUND_EFFECTS_MAP","$a3a9222774fc4465$exports","$3c63fcd0cf599322$export$bd73ddfe5f8475d8","__esModule","default","$20ee2fb47fce794c$export$8bd46d86307c9a41","markdown","pre","post","$f37d71a6f3b25578$var$EventId","MAIN_MENU","CLICKED_FREE_GROUND","CLICKED_ENTRANCE","CLICKED_EXIT","$f37d71a6f3b25578$var$persistentGame","$f37d71a6f3b25578$var$ReplayableActorMover","originalPosition","routeFinder","heroDisengaging","getTargetGridPoint","actorGridPos","moveType","HUNT","heroGridPos","orthoSeparation","getRandomGridPosition","moveInstantly","targetGridPos","setActorsPosition","currentGrid","maxDistance","restorePosition","replay","cloneIfOrganic","clonedActor","$f37d71a6f3b25578$var$MovementReplayer","movers","addAndMoveActor","replayableMover","mover","$f37d71a6f3b25578$var$State","transitionTo","state","onExit","$f37d71a6f3b25578$var$currentState","onEntry","onEvent","eventIdUnused","$f37d71a6f3b25578$var$AtMainMenu","playAdventure","internalLabel","playCasual","settings","controls","setting","control","bestAdventure","guides","about","help","privacy","$f37d71a6f3b25578$var$AtStart","loadFirstOrContinuationScene","continuation","scene","intro","$f37d71a6f3b25578$var$HeroTurnIdle","savedGame","continueFromSavedScene","switchToFirstScene","$f37d71a6f3b25578$var$AtGameOver","secs","unloadCurrentScene","$f37d71a6f3b25578$var$AtGameCompleted","$f37d71a6f3b25578$var$prepareHeroTurn","eventId","$f37d71a6f3b25578$var$disambiguateFilter","$f37d71a6f3b25578$var$interact","$f37d71a6f3b25578$var$showOccupantDetails","$f37d71a6f3b25578$var$moveHeroToPoint","usePathFinder","$f37d71a6f3b25578$var$ComputerTurnIdle","$f37d71a6f3b25578$var$startNextScene","$f37d71a6f3b25578$var$HeroTurnInteracting","tryToDisengage","$f37d71a6f3b25578$var$ComputerTurnInteracting","success","opponents","respectDisengage","opponent","currentGridPoint","$f37d71a6f3b25578$var$applyOrganicToActors","replayer","isWandering","isEnemy","willInteract","enact","organic","targets","react","currentState","areThereMoreScenes","$3b30d95b613bb442$export$1fa1f898df932d80","messageContainer","restReqs","$3b30d95b613bb442$export$634672c91d44b77e","allowConsumption","allowRest","switchToNextScene","isHiddenArtefact","allowMagicUse","detailUnused","$f37d71a6f3b25578$var$ignoreEvents","$f37d71a6f3b25578$export$2e2bcd8739ae039","EventId","getHeroActor","setHero","triggerEvent","$611de0d332640d82$var$createGroundDefn","$611de0d332640d82$var$createEntranceDefn","$611de0d332640d82$var$createExitDefn","$611de0d332640d82$export$7dccdb77f761a8ef","$3751b2d81c8b6353$export$765fdbac0eda2a0b","globalOpacity","fadeInSecs","fadeOutSecs","fadeOutResolve","getOpacity","load","doLoad","initialise","doInitialise","unload","fadeOut","doUnload","$fee0c02ce96028b6$var$GRID_SIZE","$fee0c02ce96028b6$var$addArtefactToActor","$fee0c02ce96028b6$var$ParsedScene","sceneDefn","mapDesign","$fee0c02ce96028b6$var$createHero","pooledArtefactAlmanac","water","rations","$fee0c02ce96028b6$var$createEnemies","enemies","enemy","isTrader","qtyOfItems","$fee0c02ce96028b6$var$addRandomArtefactsToActor","$fee0c02ce96028b6$var$createArtefacts","setCameraToTrack","$1e8586c4726fc461$export$17735bdb93cbf279","OFF","VELOCITY","$1e8586c4726fc461$export$39ca3bda943df04d","heroTracker","velocityTracker","trackingMethod","proportionSeparated","canvasDims","separation","setVelocity","vX","vY","setTrackingMethod","panBy","method","$ef1fa57d025b1fd1$export$763f95e026c05695","TR","BR","BL","TL","$ef1fa57d025b1fd1$export$5e8c6d32f039cdeb","cameraDolly","trackingButton","trackingButtonImage","fullscreenButton","fullscreenButtonImage","locationNav","locationFullscreen","createButtonSet","createFullscreenButton","location","setFullscreenButtonImage","$e3583859a0cae8b2$export$2e2bcd8739ae039","addButton","requestFullscreen","navigationUI","exitFullscreen","getLocationPoint","fullscreenElement","reject","showArrows","createCentreButton","createArrowButtons","setTrackingState","on","scrollSpeed","$ef1fa57d025b1fd1$var$SCROLL_TILES_PER_SEC","createMomentaryButton","imageNamePrefix","callbackDown","callbackUp","addMomentaryButton","$6664788cb4fc34b5$export$2a8e6ebcf5b5c91","$6664788cb4fc34b5$var$setScene","$6664788cb4fc34b5$var$unloadScene","setVisible","$6664788cb4fc34b5$var$getNextSceneFromList","getNext","hasNext","savedSceneLevel","savedHero","getIndex","panCameraBy","setSceneList","listOfScenes","reset","$9bf960d1e43f0ba6$export$b066f38ab0e5b2dc","damage","saveModifier","difficulty","$9bf960d1e43f0ba6$export$105ff773d2a2501a","nMeals","nDrinks","$9bf960d1e43f0ba6$export$1f1ba427ee30f22d","constitutionModifier","diceDetails","maxNumberOfHitDice","currentDiceDetails","recoveredHitDice","$3b30d95b613bb442$export$30b1e0f61711dee7","VIEW","SELL","PILLAGE","FIND","$3b30d95b613bb442$var$ArtefactAction","CONTINUE","CONSUME","LEAVE","LEARN_SPELL","DISCARD","EQUIP","PREPARE_SPELL","STASH","TAKE","USE","$3b30d95b613bb442$var$InventoryLimitation","STANDARD","STASH_ONLY","MAGIC","READY_MAGIC","$3b30d95b613bb442$var$InventoryContainerElement","inventoryOptions","linkedInventory","refresh","noChain","currentOwner","storesToShow","getStoresToShow","storeInfo","contents","storeContentsElement","createStoreContents","onRefresh","limitation","getStashStoreInfo","contentsElement","b","bind","createArtefactButtonControl","$3b30d95b613bb442$var$createArtefactButtonLabel","showDamage","range","showPrice","price","customAction","$3b30d95b613bb442$export$19550c7d374fe949","$3b30d95b613bb442$var$discardItemsFromStore","$3b30d95b613bb442$var$showInventory","actorContainer","$3b30d95b613bb442$var$createActorElement","hideDescription","hideTraits","inventoryContainer","prospectiveOwner","$3b30d95b613bb442$var$createSelfActionArtefactDialogButtons","$3b30d95b613bb442$var$createSpellButtons","buttons","$3b30d95b613bb442$var$getLabelForUse","allowSpellPrep","$3b30d95b613bb442$var$createCantripButtons","$3b30d95b613bb442$var$createConsumeButtons","$3b30d95b613bb442$var$isArtefactUsable","$3b30d95b613bb442$var$createStandardArtefactButtons","$3b30d95b613bb442$var$createFailedStorageGuidance","$3b30d95b613bb442$var$showEquipDialog","$3b30d95b613bb442$var$createArtefactDialogButtons","actionType","$3b30d95b613bb442$var$createFindArtefactDialogButtons","possibleStore","READY_SPELLS","$3b30d95b613bb442$var$createSellArtefactDialogButtons","buyersFundsInGp","artefactCostInGp","$3b30d95b613bb442$var$createPillageArtefactDialogButtons","$3b30d95b613bb442$var$createIdCard","idCard","hpText","descriptionElement","$3b30d95b613bb442$var$createTraitsList","excludedKeys","includeGold","traitsList","goldPieces","displayedValue","displayedKey","$3b30d95b613bb442$export$22192403b4d58a2d","buyer","seller","pillage","sideBySide","buyerSide","sellerSide","buyerInventory","sellerInventory","actorElement","$3b30d95b613bb442$var$showTraits","$3b30d95b613bb442$var$showRestActionDialog","meals","drinks","longRestPossible","shortRestPossible","shortIndex","longIndex","$3b30d95b613bb442$var$showPrepareSpellsDialog","replaceWith","$3b30d95b613bb442$var$showCastSpells","enactor","cancelButton","dialogFn","sourceStoreManager","destStoreManager","$31cf9b99c7a79e42$var$displayRisingText","$31cf9b99c7a79e42$var$applyPoisonDamage","poison","victim","$31cf9b99c7a79e42$var$applyDamage","defender","defenderHP","$31cf9b99c7a79e42$export$b0a99659d931757e","change","textColor","$31cf9b99c7a79e42$export$f7b5529658291013","owner","reactorUnused","enactorUnused","canEnact","escaperUnused","reactor","resolveAttackerDefender","displayAttack","undertakeAllAttacks","totalDamage","successfulAttacks","$9bf960d1e43f0ba6$export$a00548f2d1dc9708","diceRoll","attackRoll","targetAc","hitSound","hitImage","swapPositions","them","myPosition","theirPosition","createDiscoveryMessage","foundArtefact","maxTargets","hitTargets","displaySpell","$9bf960d1e43f0ba6$export$53864c490cc48ef4","spell","attackerIntelligence","fullDifficulty","savingThrow","factor","imageRootName","spellType","foodType","gainHp","enactorHp","enactorHpMax","shortfall","finalHp","ENEMY","ARTEFACT","WANDER","updateTraitsFromStore","otherActor","$e3583859a0cae8b2$var$actors","$e3583859a0cae8b2$var$visible","$e3583859a0cae8b2$var$isHittingActor","actorCanvasPos","boundingBox","canvasBox","$e3583859a0cae8b2$var$resolvePointerUp","keyUnused","callbackOn","callbackOff","removeButton","uiPos","resolvePointerCancel","resolvePointerDown","resolvePointerUp","visibility","$2b83232840d61fcb$export$57244dfe9a4da758","GRINNING","SANTA","SHAKING","$ff98e45c12875199$export$46f5471185d8bc9e","maxCols","maxRows","maxRoomCols","maxRoomRows","dungeon","minCols","minRows","getWallChr","getFloorChr","getLandChr","getDoorInChr","getDoorOutChr","isWallChr","isFloorChr","isLandChr","isDoorInChr","isDoorOutChr","generate","lastLeftLandCols","lastRoomCols","maxLeftLand","leftLandCols","reqdMinRoomWidth","reqdMaxRoomWidth","roomCols","rightLandCols","roomRows","createRoom","removeInternalWalls","locateDoors","getMatrixAsStrings","columns","numberOfRows","internalRow","isVerticalWall","isHorizontalWall","possibleLocations","randomLocations","$5cdb299a40f2118a$export$baa1f113a47bd01a","MEDIUM","$5cdb299a40f2118a$var$AutoSceneList","buildScene","addIntro","addEnemies","addTraders","addArtefacts","addMap","challenge","enemyPoolAlmanac","$5cdb299a40f2118a$var$createEnemyPoolAlmanac","dungeonRating","maxMonsterChallenge","totalCr","totalEnemies","traderIndex","totalArtefacts","creator","$f6529945ae220c94$export$90ded0e426ce21","$f6529945ae220c94$export$3853e404217e8f25","$f6529945ae220c94$export$f1ed6970fd95c8d6","$f6529945ae220c94$export$a5ec1de9afad15ae","$f6529945ae220c94$export$fc5c5be4a666ab48","$f6529945ae220c94$export$d69198a72de4964d","$f6529945ae220c94$var$EventSource","MOUSE","TOUCH","$f6529945ae220c94$var$dispatchEvent","eventName","CustomEvent","dispatchEvent","$f6529945ae220c94$var$getOffsetFromTouch","touches","pageX","pageY","$f6529945ae220c94$var$processStartAction","eventSource","actionStarted","dragging","lastX","lastY","startX","startY","$f6529945ae220c94$var$processEndAction","$f6529945ae220c94$var$processMoveAction","suppressClickEvent","$54f62aa0a0ac50b7$var$MESSAGE_MAP","$63854ed0e7987df1$var$animationState","$63854ed0e7987df1$var$savedAnimationState","$63854ed0e7987df1$var$setAnimationState","$63854ed0e7987df1$var$startAnimation","requestAnimationFrame","$63854ed0e7987df1$var$gameLoop","timeStamp","fps","$63854ed0e7987df1$export$2e2bcd8739ae039","screenOptions","fallbackIndex","centreToBaseLine","getImageData","$63854ed0e7987df1$var$setupListeners","dragData","lastTouchStartPoint","passive","changedTouches","preventDefault","mappedPositions","script","urlMap","$4d7b11e4136f6d93$var$parseAlmanacText","lines","setAnimationState"],"version":3,"file":"index.757df880.js.map"}